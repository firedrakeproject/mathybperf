<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="283" onload="init(evt)" viewBox="0 0 1200 283" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:13px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:18px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 13 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (1 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="283.0" fill="url(#background)"  />
<text id="title" x="600.00" y="26" >Firedrake example</text>
<text id="details" x="10.00" y="265" > </text>
<text id="unzoom" x="10.00" y="26" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="26" >Search</text>
<text id="ignorecase" x="1174.00" y="26" >ic</text>
<text id="matched" x="1090.00" y="265" > </text>
<g id="frames">
<g >
<title>FunctionSpaceData: CreateElement (6,272 us, 0.02%)</title><rect x="347.4" y="199" width="0.2" height="15.0" fill="rgb(116.811851057186,147.321591014826,147.321591014826)" rx="2" ry="2" />
<text  x="350.37" y="209.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (176,266 us, 0.46%)</title><rect x="98.4" y="71" width="5.4" height="15.0" fill="rgb(140.037873424576,111.972050650477,140.037873424576)" rx="2" ry="2" />
<text  x="101.38" y="81.5" ></text>
</g>
<g >
<title>ParLoopExecute (1,334,022 us, 3.49%)</title><rect x="576.4" y="151" width="41.2" height="15.0" fill="rgb(133.307770697538,151.598310921584,151.598310921584)" rx="2" ry="2" />
<text  x="579.37" y="161.5" >Par..</text>
</g>
<g >
<title>firedrake.ufl_expr.action (22,858 us, 0.06%)</title><rect x="344.3" y="87" width="0.7" height="15.0" fill="rgb(149.127171600269,149.127171600269,115.000908524383)" rx="2" ry="2" />
<text  x="347.32" y="97.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.LinearVariationalProblem.__init__ (41,121 us, 0.11%)</title><rect x="344.3" y="71" width="1.3" height="15.0" fill="rgb(128.918948681933,150.460468176798,150.460468176798)" rx="2" ry="2" />
<text  x="347.32" y="81.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_pyop2_kernel_uniform_extrusion (2,721,411 us, 7.12%)</title><rect x="12.7" y="119" width="84.1" height="15.0" fill="rgb(145.870955382094,145.870955382094,155.65244297718)" rx="2" ry="2" />
<text  x="15.75" y="129.5" >Parloop_..</text>
</g>
<g >
<title>FunctionSpaceData: CreateElement (10,746 us, 0.03%)</title><rect x="99.4" y="135" width="0.4" height="15.0" fill="rgb(131.532835186677,131.532835186677,152.877322939357)" rx="2" ry="2" />
<text  x="102.44" y="145.5" ></text>
</g>
<g >
<title>DMPlexInterp (5,480 us, 0.01%)</title><rect x="344.2" y="119" width="0.1" height="15.0" fill="rgb(118.529469454483,147.766899488199,147.766899488199)" rx="2" ry="2" />
<text  x="347.15" y="129.5" ></text>
</g>
<g >
<title>firedrake.functionspace.VectorFunctionSpace (51,420 us, 0.13%)</title><rect x="96.8" y="87" width="1.6" height="15.0" fill="rgb(148.748085455437,148.748085455437,113.163798745578)" rx="2" ry="2" />
<text  x="99.79" y="97.5" ></text>
</g>
<g >
<title>firedrake.parloops.par_loop (1,342,031 us, 3.51%)</title><rect x="576.1" y="135" width="41.5" height="15.0" fill="rgb(138.110088508873,138.110088508873,154.150339711395)" rx="2" ry="2" />
<text  x="579.12" y="145.5" >fir..</text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (4,839 us, 0.01%)</title><rect x="347.2" y="215" width="0.2" height="15.0" fill="rgb(149.935052803125,149.935052803125,118.916025122835)" rx="2" ry="2" />
<text  x="350.22" y="225.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (10,994,834 us, 28.78%)</title><rect x="618.9" y="151" width="339.5" height="15.0" fill="rgb(131.170214039434,162.367639574976,131.170214039434)" rx="2" ry="2" />
<text  x="621.89" y="161.5" >pyop2.global_kernel.GlobalKernel.compile</text>
</g>
<g >
<title>firedrake.ufl_expr.action (11,085 us, 0.03%)</title><rect x="345.7" y="119" width="0.4" height="15.0" fill="rgb(130.394685525918,162.493888402758,130.394685525918)" rx="2" ry="2" />
<text  x="348.74" y="129.5" ></text>
</g>
<g >
<title>ParLoopExecute (967,182 us, 2.53%)</title><rect x="437.4" y="151" width="29.9" height="15.0" fill="rgb(144.72613011614,144.72613011614,155.430863893446)" rx="2" ry="2" />
<text  x="440.42" y="161.5" >P..</text>
</g>
<g >
<title>DMPlexStratify (6,986 us, 0.02%)</title><rect x="107.9" y="87" width="0.2" height="15.0" fill="rgb(155.865166742522,141.632945026004,141.632945026004)" rx="2" ry="2" />
<text  x="110.86" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (176,266 us, 0.46%)</title><rect x="98.4" y="103" width="5.4" height="15.0" fill="rgb(134.911746033064,152.014156378943,152.014156378943)" rx="2" ry="2" />
<text  x="101.38" y="113.5" ></text>
</g>
<g >
<title>CreateExtMesh (2,861,769 us, 7.49%)</title><rect x="10.0" y="71" width="88.4" height="15.0" fill="rgb(132.875067307608,132.875067307608,153.137109801473)" rx="2" ry="2" />
<text  x="13.00" y="81.5" >CreateExt..</text>
</g>
<g >
<title>all (38,209,457 us, 100%)</title><rect x="10.0" y="39" width="1180.0" height="15.0" fill="rgb(116.333480145516,116.333480145516,149.935512286229)" rx="2" ry="2" />
<text  x="13.00" y="49.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.solve (27,322,660 us, 71.51%)</title><rect x="346.2" y="71" width="843.8" height="15.0" fill="rgb(144.588974809083,144.588974809083,155.404317704984)" rx="2" ry="2" />
<text  x="349.21" y="81.5" >firedrake.variational_solver.NonlinearVariationalSolver.solve</text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (4,789 us, 0.01%)</title><rect x="575.1" y="231" width="0.2" height="15.0" fill="rgb(138.827822678357,161.121052122128,138.827822678357)" rx="2" ry="2" />
<text  x="578.12" y="241.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (9,059 us, 0.02%)</title><rect x="1189.7" y="151" width="0.3" height="15.0" fill="rgb(104.79489907221,144.206084944647,144.206084944647)" rx="2" ry="2" />
<text  x="1192.72" y="161.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (22,495 us, 0.06%)</title><rect x="574.6" y="151" width="0.7" height="15.0" fill="rgb(154.6087335078,132.00029022647,132.00029022647)" rx="2" ry="2" />
<text  x="577.57" y="161.5" ></text>
</g>
<g >
<title>SNESSolve (27,322,660 us, 71.51%)</title><rect x="346.2" y="87" width="843.8" height="15.0" fill="rgb(154.239886644247,129.172464272564,129.172464272564)" rx="2" ry="2" />
<text  x="349.21" y="97.5" >SNESSolve</text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (51,420 us, 0.13%)</title><rect x="96.8" y="119" width="1.6" height="15.0" fill="rgb(153.031423659789,119.907581391714,119.907581391714)" rx="2" ry="2" />
<text  x="99.79" y="129.5" ></text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (3,176,661 us, 8.31%)</title><rect x="1091.9" y="119" width="98.1" height="15.0" fill="rgb(149.002446192994,159.464718061606,149.002446192994)" rx="2" ry="2" />
<text  x="1094.90" y="129.5" >firedrake...</text>
</g>
<g >
<title>HybridOperatorAssembly (7,337,565 us, 19.20%)</title><rect x="347.6" y="135" width="226.6" height="15.0" fill="rgb(151.47007927791,141.267078149645,151.47007927791)" rx="2" ry="2" />
<text  x="350.56" y="145.5" >HybridOperatorAssembly</text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (51,420 us, 0.13%)</title><rect x="96.8" y="151" width="1.6" height="15.0" fill="rgb(152.516073012274,115.956559760766,115.956559760766)" rx="2" ry="2" />
<text  x="99.79" y="161.5" ></text>
</g>
<g >
<title>ParLoopExecute (15,321,760 us, 40.10%)</title><rect x="618.7" y="119" width="473.2" height="15.0" fill="rgb(156.678037496297,147.864954138279,147.864954138279)" rx="2" ry="2" />
<text  x="621.72" y="129.5" >ParLoopExecute</text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (4,789 us, 0.01%)</title><rect x="575.1" y="199" width="0.2" height="15.0" fill="rgb(149.253261383522,149.253261383522,115.611959012454)" rx="2" ry="2" />
<text  x="578.12" y="209.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (4,839 us, 0.01%)</title><rect x="347.2" y="183" width="0.2" height="15.0" fill="rgb(132.914817343195,151.496434126013,151.496434126013)" rx="2" ry="2" />
<text  x="350.22" y="193.5" ></text>
</g>
<g >
<title>firedrake.functionspace.MixedFunctionSpace (4,061 us, 0.01%)</title><rect x="343.8" y="71" width="0.1" height="15.0" fill="rgb(129.382721273495,162.658626769431,129.382721273495)" rx="2" ry="2" />
<text  x="346.81" y="81.5" ></text>
</g>
<g >
<title>SNESFunctionEval (18,530,816 us, 48.50%)</title><rect x="617.7" y="103" width="572.3" height="15.0" fill="rgb(139.170922677296,161.065198633929,139.170922677296)" rx="2" ry="2" />
<text  x="620.72" y="113.5" >SNESFunctionEval</text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (9,059 us, 0.02%)</title><rect x="1189.7" y="167" width="0.3" height="15.0" fill="rgb(151.349935793289,151.349935793289,125.772765767478)" rx="2" ry="2" />
<text  x="1192.72" y="177.5" ></text>
</g>
<g >
<title>firedrake.utility_meshes.SquareMesh (12,452 us, 0.03%)</title><rect x="343.9" y="71" width="0.4" height="15.0" fill="rgb(125.545860464088,125.545860464088,151.718553638211)" rx="2" ry="2" />
<text  x="346.94" y="81.5" ></text>
</g>
<g >
<title>firedrake.assemble.allocate_matrix (15,384 us, 0.04%)</title><rect x="345.7" y="87" width="0.5" height="15.0" fill="rgb(140.204617248766,160.896922773457,140.204617248766)" rx="2" ry="2" />
<text  x="348.74" y="97.5" ></text>
</g>
<g >
<title>firedrake.interpolation.make_interpolator (27,765 us, 0.07%)</title><rect x="575.3" y="135" width="0.8" height="15.0" fill="rgb(149.83957754431,159.32844086488,149.83957754431)" rx="2" ry="2" />
<text  x="578.27" y="145.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (22,495 us, 0.06%)</title><rect x="574.6" y="135" width="0.7" height="15.0" fill="rgb(112.504581798931,146.204891577501,146.204891577501)" rx="2" ry="2" />
<text  x="577.57" y="145.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (4,789 us, 0.01%)</title><rect x="575.1" y="215" width="0.2" height="15.0" fill="rgb(146.115916460652,154.918941304613,154.918941304613)" rx="2" ry="2" />
<text  x="578.12" y="225.5" ></text>
</g>
<g >
<title>PCSetUp (8,791,844 us, 23.01%)</title><rect x="346.2" y="103" width="271.5" height="15.0" fill="rgb(144.630359145205,160.176453162409,144.630359145205)" rx="2" ry="2" />
<text  x="349.21" y="113.5" >PCSetUp</text>
</g>
<g >
<title>CreateFunctionSpace (11,074 us, 0.03%)</title><rect x="574.9" y="183" width="0.4" height="15.0" fill="rgb(155.127103889829,135.97446315536,135.97446315536)" rx="2" ry="2" />
<text  x="577.92" y="193.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (15,807 us, 0.04%)</title><rect x="574.8" y="167" width="0.5" height="15.0" fill="rgb(152.92640314661,152.92640314661,133.412569095109)" rx="2" ry="2" />
<text  x="577.78" y="177.5" ></text>
</g>
<g >
<title>Mesh: reorder (9,446 us, 0.02%)</title><rect x="105.5" y="87" width="0.3" height="15.0" fill="rgb(143.922488896114,160.291687854121,143.922488896114)" rx="2" ry="2" />
<text  x="108.50" y="97.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (18,263 us, 0.05%)</title><rect x="345.0" y="103" width="0.6" height="15.0" fill="rgb(153.914342061844,153.914342061844,138.200273068936)" rx="2" ry="2" />
<text  x="348.03" y="113.5" ></text>
</g>
<g >
<title>PetscBarrier (74,182 us, 0.19%)</title><rect x="105.8" y="71" width="2.3" height="15.0" fill="rgb(141.601489607061,115.978817118093,141.601489607061)" rx="2" ry="2" />
<text  x="108.79" y="81.5" ></text>
</g>
<g >
<title>firedrake.__init__ (7,633,279 us, 19.98%)</title><rect x="108.1" y="71" width="235.7" height="15.0" fill="rgb(129.790186308014,150.686344598374,150.686344598374)" rx="2" ry="2" />
<text  x="111.08" y="81.5" >firedrake.__init__</text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (4,839 us, 0.01%)</title><rect x="347.2" y="199" width="0.2" height="15.0" fill="rgb(146.93740076686,146.93740076686,155.858851761328)" rx="2" ry="2" />
<text  x="350.22" y="209.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (51,420 us, 0.13%)</title><rect x="96.8" y="103" width="1.6" height="15.0" fill="rgb(140.730115285547,153.522622481438,153.522622481438)" rx="2" ry="2" />
<text  x="99.79" y="113.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (6,272 us, 0.02%)</title><rect x="347.4" y="167" width="0.2" height="15.0" fill="rgb(153.403467753984,122.759919447209,122.759919447209)" rx="2" ry="2" />
<text  x="350.37" y="177.5" ></text>
</g>
<g >
<title>firedrake.matrix_free.operators.ImplicitMatrixContext.__init__ (15,384 us, 0.04%)</title><rect x="345.7" y="103" width="0.5" height="15.0" fill="rgb(137.586635294771,152.707646187533,152.707646187533)" rx="2" ry="2" />
<text  x="348.74" y="113.5" ></text>
</g>
<g >
<title>firedrake.mesh.MeshTopology._facets (131,197 us, 0.34%)</title><rect x="99.8" y="135" width="4.0" height="15.0" fill="rgb(129.125523992859,162.700496094186,129.125523992859)" rx="2" ry="2" />
<text  x="102.77" y="145.5" ></text>
</g>
<g >
<title>FunctionSpaceData: CreateElement (9,060 us, 0.02%)</title><rect x="97.3" y="167" width="0.2" height="15.0" fill="rgb(113.969928026091,113.969928026091,149.478050585695)" rx="2" ry="2" />
<text  x="100.25" y="177.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (15,854 us, 0.04%)</title><rect x="1189.5" y="135" width="0.5" height="15.0" fill="rgb(131.279767223383,151.072532243099,151.072532243099)" rx="2" ry="2" />
<text  x="1192.51" y="145.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (176,266 us, 0.46%)</title><rect x="98.4" y="87" width="5.4" height="15.0" fill="rgb(135.782598994281,161.616786210233,135.782598994281)" rx="2" ry="2" />
<text  x="101.38" y="97.5" ></text>
</g>
<g >
<title>firedrake.mesh.ExtrudedMeshTopology.node_classes (27,457 us, 0.07%)</title><rect x="97.5" y="167" width="0.9" height="15.0" fill="rgb(136.462058426804,161.506176535171,136.462058426804)" rx="2" ry="2" />
<text  x="100.53" y="177.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (4,785 us, 0.01%)</title><rect x="1189.9" y="183" width="0.1" height="15.0" fill="rgb(125.570510734577,149.59235463489,149.59235463489)" rx="2" ry="2" />
<text  x="1192.85" y="193.5" ></text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (3,460,804 us, 9.06%)</title><rect x="467.3" y="151" width="106.9" height="15.0" fill="rgb(153.274751781814,121.77309699391,121.77309699391)" rx="2" ry="2" />
<text  x="470.29" y="161.5" >firedrake.t..</text>
</g>
<g >
<title>firedrake.extrusion_utils.make_extruded_coords (2,805,853 us, 7.34%)</title><rect x="10.1" y="87" width="86.7" height="15.0" fill="rgb(150.636591262209,159.198694445687,150.636591262209)" rx="2" ry="2" />
<text  x="13.14" y="97.5" >firedrake..</text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (6,272 us, 0.02%)</title><rect x="347.4" y="183" width="0.2" height="15.0" fill="rgb(152.061928636396,142.783692130765,152.061928636396)" rx="2" ry="2" />
<text  x="350.37" y="193.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.__init__ (19,958 us, 0.05%)</title><rect x="345.6" y="71" width="0.6" height="15.0" fill="rgb(111.916410450834,111.916410450834,149.080595571129)" rx="2" ry="2" />
<text  x="348.59" y="81.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (51,420 us, 0.13%)</title><rect x="96.8" y="135" width="1.6" height="15.0" fill="rgb(129.298899970059,129.298899970059,152.444948381302)" rx="2" ry="2" />
<text  x="99.79" y="145.5" ></text>
</g>
<g >
<title>CreateMesh (7,560 us, 0.02%)</title><rect x="104.3" y="87" width="0.2" height="15.0" fill="rgb(155.629080907614,155.629080907614,146.510161321516)" rx="2" ry="2" />
<text  x="107.31" y="97.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (1,321,054 us, 3.46%)</title><rect x="576.8" y="183" width="40.8" height="15.0" fill="rgb(115.985397956196,115.985397956196,149.868141539909)" rx="2" ry="2" />
<text  x="579.77" y="193.5" >pyo..</text>
</g>
<g >
<title>firedrake.assemble.allocate_matrix (13,198 us, 0.03%)</title><rect x="574.2" y="135" width="0.4" height="15.0" fill="rgb(148.52945566134,148.52945566134,112.104285128035)" rx="2" ry="2" />
<text  x="577.16" y="145.5" ></text>
</g>
<g >
<title>CreateSparsity (8,418 us, 0.02%)</title><rect x="574.3" y="151" width="0.3" height="15.0" fill="rgb(152.69954799596,152.69954799596,132.313194134269)" rx="2" ry="2" />
<text  x="577.31" y="161.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (1,334,022 us, 3.49%)</title><rect x="576.4" y="167" width="41.2" height="15.0" fill="rgb(153.065230449103,120.166766776458,120.166766776458)" rx="2" ry="2" />
<text  x="579.37" y="177.5" >Par..</text>
</g>
<g >
<title>firedrake.utility_meshes.RectangleMesh (12,452 us, 0.03%)</title><rect x="343.9" y="87" width="0.4" height="15.0" fill="rgb(154.827397447508,133.676713764232,133.676713764232)" rx="2" ry="2" />
<text  x="346.94" y="97.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (4,314,039 us, 11.29%)</title><rect x="958.7" y="151" width="133.2" height="15.0" fill="rgb(130.342068299242,130.342068299242,152.646851928886)" rx="2" ry="2" />
<text  x="961.67" y="161.5" >pyop2.global_ke..</text>
</g>
<g >
<title>CreateFunctionSpace (11,111 us, 0.03%)</title><rect x="347.2" y="135" width="0.4" height="15.0" fill="rgb(152.340882876596,152.340882876596,130.575047786579)" rx="2" ry="2" />
<text  x="350.22" y="145.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (176,266 us, 0.46%)</title><rect x="98.4" y="119" width="5.4" height="15.0" fill="rgb(116.08730561331,147.133745899747,147.133745899747)" rx="2" ry="2" />
<text  x="101.38" y="129.5" ></text>
</g>
<g >
<title>firedrake (38,209,457 us, 100.00%)</title><rect x="10.0" y="55" width="1180.0" height="15.0" fill="rgb(132.924171914738,151.498859385302,151.498859385302)" rx="2" ry="2" />
<text  x="13.00" y="65.5" >firedrake</text>
</g>
<g >
<title>firedrake.functionspace.MixedFunctionSpace (4,839 us, 0.01%)</title><rect x="347.2" y="151" width="0.2" height="15.0" fill="rgb(135.503589022656,152.167597154022,152.167597154022)" rx="2" ry="2" />
<text  x="350.22" y="161.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_wrap_slate_loopy_knl_0 (967,182 us, 2.53%)</title><rect x="437.4" y="167" width="29.9" height="15.0" fill="rgb(123.303777046739,149.004682938043,149.004682938043)" rx="2" ry="2" />
<text  x="440.42" y="177.5" >P..</text>
</g>
<g >
<title>Log_Event_form0_cell_integral_otherwise (5,465 us, 0.01%)</title><rect x="618.7" y="151" width="0.2" height="15.0" fill="rgb(141.689327533364,116.203901804244,141.689327533364)" rx="2" ry="2" />
<text  x="621.72" y="161.5" ></text>
</g>
<g >
<title>firedrake.mesh._Facets.__init__ (9,866 us, 0.03%)</title><rect x="103.5" y="151" width="0.3" height="15.0" fill="rgb(153.344634212783,153.344634212783,135.439381185023)" rx="2" ry="2" />
<text  x="106.52" y="161.5" ></text>
</g>
<g >
<title>HybridInit (8,791,844 us, 23.01%)</title><rect x="346.2" y="119" width="271.5" height="15.0" fill="rgb(137.928042913375,152.796159273838,152.796159273838)" rx="2" ry="2" />
<text  x="349.21" y="129.5" >HybridInit</text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalProblem.__init__ (18,263 us, 0.05%)</title><rect x="345.0" y="87" width="0.6" height="15.0" fill="rgb(153.552468365876,123.902257471716,123.902257471716)" rx="2" ry="2" />
<text  x="348.03" y="97.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (2,640,709 us, 6.91%)</title><rect x="15.2" y="135" width="81.6" height="15.0" fill="rgb(139.998871063225,153.333040646021,153.333040646021)" rx="2" ry="2" />
<text  x="18.24" y="145.5" >pyop2.gl..</text>
</g>
<g >
<title>Parloop_Cells_wrap_form0_cell_integral_otherwise (11,000,299 us, 28.79%)</title><rect x="618.7" y="135" width="339.7" height="15.0" fill="rgb(147.286157929124,147.286157929124,155.926353147572)" rx="2" ry="2" />
<text  x="621.72" y="145.5" >Parloop_Cells_wrap_form0_cell_integral_oth..</text>
</g>
<g >
<title>CreateFunctionSpace (4,839 us, 0.01%)</title><rect x="347.2" y="167" width="0.2" height="15.0" fill="rgb(155.237327865758,136.81951363748,136.81951363748)" rx="2" ry="2" />
<text  x="350.22" y="177.5" ></text>
</g>
<g >
<title>CreateMesh (63,709 us, 0.17%)</title><rect x="103.8" y="71" width="2.0" height="15.0" fill="rgb(149.359275825317,159.406629516809,149.359275825317)" rx="2" ry="2" />
<text  x="106.82" y="81.5" ></text>
</g>
<g >
<title>ParLoopExecute (2,727,532 us, 7.14%)</title><rect x="12.6" y="103" width="84.2" height="15.0" fill="rgb(152.366891309727,114.812833374576,114.812833374576)" rx="2" ry="2" />
<text  x="15.56" y="113.5" >ParLoopE..</text>
</g>
<g >
<title>firedrake.mesh._from_cell_list (5,480 us, 0.01%)</title><rect x="344.2" y="103" width="0.1" height="15.0" fill="rgb(145.201795168503,145.201795168503,155.52292809713)" rx="2" ry="2" />
<text  x="347.15" y="113.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_form1_cell_integral_otherwise (4,321,461 us, 11.31%)</title><rect x="958.4" y="135" width="133.5" height="15.0" fill="rgb(156.594390714033,147.223662140922,147.223662140922)" rx="2" ry="2" />
<text  x="961.44" y="145.5" >Parloop_Cells_w..</text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (4,299 us, 0.01%)</title><rect x="346.1" y="119" width="0.1" height="15.0" fill="rgb(149.040292170213,159.45855708857,149.040292170213)" rx="2" ry="2" />
<text  x="349.08" y="129.5" ></text>
</g>
<g >
<title>Mesh: numbering (30,776 us, 0.08%)</title><rect x="104.5" y="87" width="1.0" height="15.0" fill="rgb(153.013717853504,119.771836876867,119.771836876867)" rx="2" ry="2" />
<text  x="107.55" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (6,272 us, 0.02%)</title><rect x="347.4" y="151" width="0.2" height="15.0" fill="rgb(141.795250767713,160.637982433163,141.795250767713)" rx="2" ry="2" />
<text  x="350.37" y="161.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (5,025 us, 0.01%)</title><rect x="617.6" y="135" width="0.1" height="15.0" fill="rgb(137.265131142367,104.866898552315,137.265131142367)" rx="2" ry="2" />
<text  x="620.57" y="145.5" ></text>
</g>
</g>
</svg>
