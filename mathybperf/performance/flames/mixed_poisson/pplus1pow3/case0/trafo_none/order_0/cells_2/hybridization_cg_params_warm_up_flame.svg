<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="283" onload="init(evt)" viewBox="0 0 1200 283" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:13px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:18px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 13 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (1 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="283.0" fill="url(#background)"  />
<text id="title" x="600.00" y="26" >Firedrake example</text>
<text id="details" x="10.00" y="265" > </text>
<text id="unzoom" x="10.00" y="26" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="26" >Search</text>
<text id="ignorecase" x="1174.00" y="26" >ic</text>
<text id="matched" x="1090.00" y="265" > </text>
<g id="frames">
<g >
<title>firedrake.matrix_free.operators.ImplicitMatrixContext.__init__ (6,546 us, 0.04%)</title><rect x="439.1" y="103" width="0.4" height="15.0" fill="rgb(153.36577698475,122.470956883081,122.470956883081)" rx="2" ry="2" />
<text  x="442.09" y="113.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (8,626 us, 0.05%)</title><rect x="440.8" y="135" width="0.6" height="15.0" fill="rgb(147.770156324129,147.770156324129,108.424603724627)" rx="2" ry="2" />
<text  x="443.83" y="145.5" ></text>
</g>
<g >
<title>DMPlexSymmetrize (2,073 us, 0.01%)</title><rect x="149.2" y="87" width="0.1" height="15.0" fill="rgb(150.879881164143,150.879881164143,123.494808718542)" rx="2" ry="2" />
<text  x="152.21" y="97.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.action (3,979 us, 0.02%)</title><rect x="439.1" y="119" width="0.3" height="15.0" fill="rgb(129.938225328192,129.938225328192,152.568688773199)" rx="2" ry="2" />
<text  x="442.09" y="129.5" ></text>
</g>
<g >
<title>DMPlexBuFrCeLi (8,881 us, 0.05%)</title><rect x="434.5" y="119" width="0.6" height="15.0" fill="rgb(152.209897373395,152.209897373395,129.940271886452)" rx="2" ry="2" />
<text  x="437.48" y="129.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (3,099 us, 0.02%)</title><rect x="440.8" y="215" width="0.2" height="15.0" fill="rgb(149.664946141371,149.664946141371,117.607046685104)" rx="2" ry="2" />
<text  x="443.83" y="225.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (987,469 us, 5.46%)</title><rect x="451.2" y="167" width="64.4" height="15.0" fill="rgb(124.781798759918,149.387873752571,149.387873752571)" rx="2" ry="2" />
<text  x="454.16" y="177.5" >Parloo..</text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (10,017 us, 0.06%)</title><rect x="141.7" y="119" width="0.6" height="15.0" fill="rgb(146.434305424925,159.882787488966,146.434305424925)" rx="2" ry="2" />
<text  x="144.65" y="129.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (5,060,128 us, 27.97%)</title><rect x="794.0" y="151" width="330.1" height="15.0" fill="rgb(155.313495729898,137.403467262555,137.403467262555)" rx="2" ry="2" />
<text  x="796.99" y="161.5" >pyop2.global_kernel.GlobalKernel.compile</text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (3,542 us, 0.02%)</title><rect x="445.9" y="167" width="0.2" height="15.0" fill="rgb(152.287451237014,114.203792817105,114.203792817105)" rx="2" ry="2" />
<text  x="448.88" y="177.5" ></text>
</g>
<g >
<title>BuildTwoSided (3,120 us, 0.02%)</title><rect x="447.5" y="199" width="0.2" height="15.0" fill="rgb(132.82784508449,151.473885762645,151.473885762645)" rx="2" ry="2" />
<text  x="450.52" y="209.5" ></text>
</g>
<g >
<title>HybridInit (1,165,872 us, 6.45%)</title><rect x="439.5" y="119" width="76.1" height="15.0" fill="rgb(128.197357346927,128.197357346927,152.231746583276)" rx="2" ry="2" />
<text  x="442.52" y="129.5" >HybridI..</text>
</g>
<g >
<title>firedrake.slate.slac.optimise.optimise (8,491 us, 0.05%)</title><rect x="445.6" y="151" width="0.5" height="15.0" fill="rgb(156.34607427948,145.319902809349,145.319902809349)" rx="2" ry="2" />
<text  x="448.56" y="161.5" ></text>
</g>
<g >
<title>firedrake.mesh._from_cell_list (34,503 us, 0.19%)</title><rect x="433.7" y="103" width="2.2" height="15.0" fill="rgb(145.618827608719,160.015539691604,145.618827608719)" rx="2" ry="2" />
<text  x="436.68" y="113.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (10,609 us, 0.06%)</title><rect x="436.7" y="103" width="0.6" height="15.0" fill="rgb(124.964045543802,163.377946074265,124.964045543802)" rx="2" ry="2" />
<text  x="439.66" y="113.5" ></text>
</g>
<g >
<title>Mesh: reorder (5,556 us, 0.03%)</title><rect x="146.8" y="87" width="0.4" height="15.0" fill="rgb(149.90135414849,149.90135414849,118.752716258065)" rx="2" ry="2" />
<text  x="149.84" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (50,646 us, 0.28%)</title><rect x="142.3" y="119" width="3.3" height="15.0" fill="rgb(153.008523111022,153.008523111022,133.810535076491)" rx="2" ry="2" />
<text  x="145.30" y="129.5" ></text>
</g>
<g >
<title>firedrake.assemble.allocate_matrix (38,293 us, 0.21%)</title><rect x="446.1" y="135" width="2.5" height="15.0" fill="rgb(148.749956481371,148.749956481371,113.172866025105)" rx="2" ry="2" />
<text  x="449.11" y="145.5" ></text>
</g>
<g >
<title>firedrake.__init__ (4,338,367 us, 23.98%)</title><rect x="149.3" y="71" width="283.0" height="15.0" fill="rgb(154.481964414907,131.028393847622,131.028393847622)" rx="2" ry="2" />
<text  x="152.35" y="81.5" >firedrake.__init__</text>
</g>
<g >
<title>firedrake.functionspace.VectorFunctionSpace (10,017 us, 0.06%)</title><rect x="141.7" y="87" width="0.6" height="15.0" fill="rgb(153.186619417808,121.097415536526,121.097415536526)" rx="2" ry="2" />
<text  x="144.65" y="97.5" ></text>
</g>
<g >
<title>DMPlexStratify (3,387 us, 0.02%)</title><rect x="149.0" y="87" width="0.2" height="15.0" fill="rgb(133.584635930079,161.974594150917,133.584635930079)" rx="2" ry="2" />
<text  x="151.99" y="97.5" ></text>
</g>
<g >
<title>DMPlexBuCoFrCeLi (2,277 us, 0.01%)</title><rect x="434.3" y="119" width="0.2" height="15.0" fill="rgb(152.046616064441,152.046616064441,129.148985543062)" rx="2" ry="2" />
<text  x="437.33" y="129.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (3,922 us, 0.02%)</title><rect x="1189.7" y="151" width="0.3" height="15.0" fill="rgb(146.770154026777,155.088558451387,155.088558451387)" rx="2" ry="2" />
<text  x="1192.74" y="161.5" ></text>
</g>
<g >
<title>MatAssemblyBegin (3,120 us, 0.02%)</title><rect x="447.5" y="167" width="0.2" height="15.0" fill="rgb(153.879790909002,153.879790909002,138.032832866703)" rx="2" ry="2" />
<text  x="450.52" y="177.5" ></text>
</g>
<g >
<title>ParLoopExecute (1,979,724 us, 10.94%)</title><rect x="12.5" y="103" width="129.2" height="15.0" fill="rgb(114.367508802538,146.68787265251,146.68787265251)" rx="2" ry="2" />
<text  x="15.51" y="113.5" >ParLoopExecute</text>
</g>
<g >
<title>CreateMesh (6,263 us, 0.03%)</title><rect x="433.3" y="119" width="0.4" height="15.0" fill="rgb(151.23105258989,151.23105258989,125.196639474082)" rx="2" ry="2" />
<text  x="436.27" y="129.5" ></text>
</g>
<g >
<title>DMPlexInterp (13,395 us, 0.07%)</title><rect x="435.1" y="119" width="0.8" height="15.0" fill="rgb(119.505965395975,148.02006510266,148.02006510266)" rx="2" ry="2" />
<text  x="438.06" y="129.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (3,099 us, 0.02%)</title><rect x="440.8" y="167" width="0.2" height="15.0" fill="rgb(127.990714562435,150.219814886557,150.219814886557)" rx="2" ry="2" />
<text  x="443.83" y="177.5" ></text>
</g>
<g >
<title>CreateMesh (24,474 us, 0.14%)</title><rect x="145.6" y="71" width="1.6" height="15.0" fill="rgb(156.407985611862,145.794556357612,145.794556357612)" rx="2" ry="2" />
<text  x="148.61" y="81.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (16,908 us, 0.09%)</title><rect x="448.6" y="151" width="1.1" height="15.0" fill="rgb(137.852826686652,106.372868384546,137.852826686652)" rx="2" ry="2" />
<text  x="451.61" y="161.5" ></text>
</g>
<g >
<title>firedrake.utility_meshes.SquareMesh (55,015 us, 0.30%)</title><rect x="432.3" y="71" width="3.6" height="15.0" fill="rgb(114.54120811455,146.732905807476,146.732905807476)" rx="2" ry="2" />
<text  x="435.34" y="81.5" ></text>
</g>
<g >
<title>MatZeroInitial (3,601 us, 0.02%)</title><rect x="448.4" y="151" width="0.2" height="15.0" fill="rgb(153.159140985715,120.886747557149,120.886747557149)" rx="2" ry="2" />
<text  x="451.37" y="161.5" ></text>
</g>
<g >
<title>HybridOperatorAssembly (72,258 us, 0.40%)</title><rect x="441.4" y="135" width="4.7" height="15.0" fill="rgb(140.804394964869,160.799284540603,140.804394964869)" rx="2" ry="2" />
<text  x="444.40" y="145.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (3,099 us, 0.02%)</title><rect x="440.8" y="199" width="0.2" height="15.0" fill="rgb(132.158997872374,151.300480929875,151.300480929875)" rx="2" ry="2" />
<text  x="443.83" y="209.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (976,316 us, 5.40%)</title><rect x="451.9" y="183" width="63.7" height="15.0" fill="rgb(152.552698017589,116.237351468181,116.237351468181)" rx="2" ry="2" />
<text  x="454.89" y="193.5" >pyop2...</text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (16,908 us, 0.09%)</title><rect x="448.6" y="135" width="1.1" height="15.0" fill="rgb(155.454577461114,155.454577461114,145.664490773091)" rx="2" ry="2" />
<text  x="451.61" y="145.5" ></text>
</g>
<g >
<title>CreateSparsity (17,005 us, 0.09%)</title><rect x="446.6" y="151" width="1.1" height="15.0" fill="rgb(125.129549759308,149.47803141908,149.47803141908)" rx="2" ry="2" />
<text  x="449.62" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (3,076 us, 0.02%)</title><rect x="449.5" y="231" width="0.2" height="15.0" fill="rgb(135.369359367905,135.369359367905,153.619876006691)" rx="2" ry="2" />
<text  x="452.51" y="241.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (5,527 us, 0.03%)</title><rect x="441.0" y="183" width="0.4" height="15.0" fill="rgb(114.277634036956,146.664571787359,146.664571787359)" rx="2" ry="2" />
<text  x="444.04" y="193.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (4,250,302 us, 23.50%)</title><rect x="516.4" y="151" width="277.3" height="15.0" fill="rgb(120.243984156728,148.211403299893,148.211403299893)" rx="2" ry="2" />
<text  x="519.41" y="161.5" >pyop2.global_kernel.GlobalKernel.c..</text>
</g>
<g >
<title>firedrake.utility_meshes.RectangleMesh (55,015 us, 0.30%)</title><rect x="432.3" y="87" width="3.6" height="15.0" fill="rgb(147.923233985999,159.640403769721,147.923233985999)" rx="2" ry="2" />
<text  x="435.34" y="97.5" ></text>
</g>
<g >
<title>DMPlexStratify (8,881 us, 0.05%)</title><rect x="434.5" y="135" width="0.6" height="15.0" fill="rgb(134.918965778658,134.918965778658,153.532703053934)" rx="2" ry="2" />
<text  x="437.48" y="145.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_form1_cell_integral_otherwise (5,065,022 us, 28.00%)</title><rect x="793.7" y="135" width="330.4" height="15.0" fill="rgb(148.485124722752,148.485124722752,111.889450579493)" rx="2" ry="2" />
<text  x="796.67" y="145.5" >Parloop_Cells_wrap_form1_cell_integral_ot..</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (1,952,279 us, 10.79%)</title><rect x="14.3" y="135" width="127.4" height="15.0" fill="rgb(155.282075115937,137.16257588885,137.16257588885)" rx="2" ry="2" />
<text  x="17.30" y="145.5" >pyop2.global_k..</text>
</g>
<g >
<title>BuildTwoSidedF (3,120 us, 0.02%)</title><rect x="447.5" y="183" width="0.2" height="15.0" fill="rgb(143.775583653607,143.775583653607,155.246887158763)" rx="2" ry="2" />
<text  x="450.52" y="193.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (12,790 us, 0.07%)</title><rect x="448.9" y="167" width="0.8" height="15.0" fill="rgb(132.352221057781,162.175219827803,132.352221057781)" rx="2" ry="2" />
<text  x="451.88" y="177.5" ></text>
</g>
<g >
<title>firedrake (18,089,384 us, 100.00%)</title><rect x="10.0" y="55" width="1180.0" height="15.0" fill="rgb(128.886380332711,162.739426457466,128.886380332711)" rx="2" ry="2" />
<text  x="13.00" y="65.5" >firedrake</text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (6,419 us, 0.04%)</title><rect x="1189.6" y="135" width="0.4" height="15.0" fill="rgb(113.192471608138,146.383233379888,146.383233379888)" rx="2" ry="2" />
<text  x="1192.58" y="145.5" ></text>
</g>
<g >
<title>SNESFunctionEval (10,338,965 us, 57.15%)</title><rect x="515.6" y="103" width="674.4" height="15.0" fill="rgb(144.699349300137,160.165222206954,144.699349300137)" rx="2" ry="2" />
<text  x="518.57" y="113.5" >SNESFunctionEval</text>
</g>
<g >
<title>firedrake.ufl_expr.action (11,100 us, 0.06%)</title><rect x="435.9" y="87" width="0.8" height="15.0" fill="rgb(137.667724072266,152.728669203921,152.728669203921)" rx="2" ry="2" />
<text  x="438.93" y="97.5" ></text>
</g>
<g >
<title>CreateMesh (6,300 us, 0.03%)</title><rect x="145.9" y="87" width="0.4" height="15.0" fill="rgb(132.69800711845,162.118929073741,132.69800711845)" rx="2" ry="2" />
<text  x="148.92" y="97.5" ></text>
</g>
<g >
<title>CreateMesh (6,263 us, 0.03%)</title><rect x="433.3" y="103" width="0.4" height="15.0" fill="rgb(152.120102421698,112.920785233019,112.920785233019)" rx="2" ry="2" />
<text  x="436.27" y="113.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.__init__ (33,286 us, 0.18%)</title><rect x="437.3" y="71" width="2.2" height="15.0" fill="rgb(153.658148797808,124.71247411653,124.71247411653)" rx="2" ry="2" />
<text  x="440.35" y="81.5" ></text>
</g>
<g >
<title>firedrake.assemble.allocate_matrix (10,779 us, 0.06%)</title><rect x="438.8" y="87" width="0.7" height="15.0" fill="rgb(142.802822054536,119.057231514747,142.802822054536)" rx="2" ry="2" />
<text  x="441.82" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (10,017 us, 0.06%)</title><rect x="141.7" y="151" width="0.6" height="15.0" fill="rgb(154.331259384756,129.872988616461,129.872988616461)" rx="2" ry="2" />
<text  x="144.65" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (3,099 us, 0.02%)</title><rect x="440.8" y="183" width="0.2" height="15.0" fill="rgb(156.512786092467,146.598026708914,146.598026708914)" rx="2" ry="2" />
<text  x="443.83" y="193.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (5,527 us, 0.03%)</title><rect x="441.0" y="151" width="0.4" height="15.0" fill="rgb(152.093291226239,112.715232734502,112.715232734502)" rx="2" ry="2" />
<text  x="444.04" y="161.5" ></text>
</g>
<g >
<title>PCSetUp (1,165,872 us, 6.45%)</title><rect x="439.5" y="103" width="76.1" height="15.0" fill="rgb(144.304498461662,154.449314415987,154.449314415987)" rx="2" ry="2" />
<text  x="442.52" y="113.5" >PCSetUp</text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.solve (11,504,837 us, 63.60%)</title><rect x="439.5" y="71" width="750.5" height="15.0" fill="rgb(137.534676905549,105.557609570469,137.534676905549)" rx="2" ry="2" />
<text  x="442.52" y="81.5" >firedrake.variational_solver.NonlinearVariationalSolver.solve</text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (50,646 us, 0.28%)</title><rect x="142.3" y="103" width="3.3" height="15.0" fill="rgb(134.301856830598,161.857837260135,134.301856830598)" rx="2" ry="2" />
<text  x="145.30" y="113.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (10,017 us, 0.06%)</title><rect x="141.7" y="135" width="0.6" height="15.0" fill="rgb(142.578918028412,160.510408693049,142.578918028412)" rx="2" ry="2" />
<text  x="144.65" y="145.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (5,527 us, 0.03%)</title><rect x="441.0" y="167" width="0.4" height="15.0" fill="rgb(125.27215525287,125.27215525287,151.665578436039)" rx="2" ry="2" />
<text  x="444.04" y="177.5" ></text>
</g>
<g >
<title>Mesh: numbering (7,892 us, 0.04%)</title><rect x="146.3" y="87" width="0.5" height="15.0" fill="rgb(151.888077519103,151.888077519103,128.380683361806)" rx="2" ry="2" />
<text  x="149.33" y="97.5" ></text>
</g>
<g >
<title>PetscBarrier (32,824 us, 0.18%)</title><rect x="147.2" y="71" width="2.1" height="15.0" fill="rgb(141.536393772624,141.536393772624,154.813495568895)" rx="2" ry="2" />
<text  x="150.20" y="81.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_pyop2_kernel_uniform_extrusion (1,979,724 us, 10.94%)</title><rect x="12.5" y="119" width="129.2" height="15.0" fill="rgb(154.003791734017,127.36240329413,127.36240329413)" rx="2" ry="2" />
<text  x="15.51" y="129.5" >Parloop_Cells_..</text>
</g>
<g >
<title>SNESSolve (11,504,837 us, 63.60%)</title><rect x="439.5" y="87" width="750.5" height="15.0" fill="rgb(128.519531361895,150.356915538269,150.356915538269)" rx="2" ry="2" />
<text  x="442.52" y="97.5" >SNESSolve</text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalProblem.__init__ (10,609 us, 0.06%)</title><rect x="436.7" y="87" width="0.6" height="15.0" fill="rgb(129.634336871356,162.61766609071,129.634336871356)" rx="2" ry="2" />
<text  x="439.66" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (3,076 us, 0.02%)</title><rect x="449.5" y="215" width="0.2" height="15.0" fill="rgb(131.541742563518,151.140451775727,151.140451775727)" rx="2" ry="2" />
<text  x="452.51" y="225.5" ></text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (1,010,756 us, 5.59%)</title><rect x="1124.1" y="119" width="65.9" height="15.0" fill="rgb(123.819532539168,123.819532539168,151.384425652742)" rx="2" ry="2" />
<text  x="1127.07" y="129.5" >firedr..</text>
</g>
<g >
<title>firedrake.mesh.MeshTopology._facets (22,937 us, 0.13%)</title><rect x="144.1" y="135" width="1.5" height="15.0" fill="rgb(144.097203015704,154.395571152219,154.395571152219)" rx="2" ry="2" />
<text  x="147.11" y="145.5" ></text>
</g>
<g >
<title>FunctionSpaceData: CreateElement (5,527 us, 0.03%)</title><rect x="441.0" y="199" width="0.4" height="15.0" fill="rgb(124.719624678294,149.371754546224,149.371754546224)" rx="2" ry="2" />
<text  x="444.04" y="209.5" ></text>
</g>
<g >
<title>firedrake.parloops.par_loop (993,949 us, 5.49%)</title><rect x="450.7" y="135" width="64.9" height="15.0" fill="rgb(137.425383612751,152.665840195898,152.665840195898)" rx="2" ry="2" />
<text  x="453.74" y="145.5" >firedr..</text>
</g>
<g >
<title>all (18,089,384 us, 100%)</title><rect x="10.0" y="39" width="1180.0" height="15.0" fill="rgb(125.896610379002,125.896610379002,151.786440718516)" rx="2" ry="2" />
<text  x="13.00" y="49.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (50,646 us, 0.28%)</title><rect x="142.3" y="71" width="3.3" height="15.0" fill="rgb(152.120441260269,152.120441260269,129.506753799764)" rx="2" ry="2" />
<text  x="145.30" y="81.5" ></text>
</g>
<g >
<title>MatAssemblyEnd (9,925 us, 0.05%)</title><rect x="447.7" y="151" width="0.7" height="15.0" fill="rgb(152.646420639152,152.646420639152,132.055730789739)" rx="2" ry="2" />
<text  x="450.73" y="161.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (2,567 us, 0.01%)</title><rect x="439.4" y="119" width="0.1" height="15.0" fill="rgb(142.988872151065,119.533984887104,142.988872151065)" rx="2" ry="2" />
<text  x="442.35" y="129.5" ></text>
</g>
<g >
<title>Log_Event_form1_cell_integral_otherwise (2,411 us, 0.01%)</title><rect x="793.8" y="151" width="0.2" height="15.0" fill="rgb(152.658653650622,117.049677988105,117.049677988105)" rx="2" ry="2" />
<text  x="796.83" y="161.5" ></text>
</g>
<g >
<title>ParLoopExecute (9,322,942 us, 51.54%)</title><rect x="515.9" y="119" width="608.2" height="15.0" fill="rgb(134.114977284229,161.88825951187,134.114977284229)" rx="2" ry="2" />
<text  x="518.92" y="129.5" >ParLoopExecute</text>
</g>
<g >
<title>firedrake.interpolation.make_interpolator (15,712 us, 0.09%)</title><rect x="449.7" y="135" width="1.0" height="15.0" fill="rgb(125.570343709643,125.570343709643,151.723292330899)" rx="2" ry="2" />
<text  x="452.71" y="145.5" ></text>
</g>
<g >
<title>Log_Event_form0_cell_integral_otherwise (5,115 us, 0.03%)</title><rect x="516.1" y="151" width="0.3" height="15.0" fill="rgb(122.801655030423,122.801655030423,151.187417102663)" rx="2" ry="2" />
<text  x="519.08" y="161.5" ></text>
</g>
<g >
<title>ParLoopExecute (987,469 us, 5.46%)</title><rect x="451.2" y="151" width="64.4" height="15.0" fill="rgb(121.428459796407,121.428459796407,150.92163737995)" rx="2" ry="2" />
<text  x="454.16" y="161.5" >ParLoo..</text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (5,200 us, 0.03%)</title><rect x="449.4" y="199" width="0.3" height="15.0" fill="rgb(155.790548142717,141.060869094161,141.060869094161)" rx="2" ry="2" />
<text  x="452.37" y="209.5" ></text>
</g>
<g >
<title>CreateExtMesh (2,028,226 us, 11.21%)</title><rect x="10.0" y="71" width="132.3" height="15.0" fill="rgb(142.052657825028,153.865503880563,153.865503880563)" rx="2" ry="2" />
<text  x="13.00" y="81.5" >CreateExtMesh</text>
</g>
<g >
<title>firedrake.functionspace.MixedFunctionSpace (3,099 us, 0.02%)</title><rect x="440.8" y="151" width="0.2" height="15.0" fill="rgb(146.198828413268,154.940436996032,154.940436996032)" rx="2" ry="2" />
<text  x="443.83" y="161.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.LinearVariationalProblem.__init__ (21,709 us, 0.12%)</title><rect x="435.9" y="71" width="1.4" height="15.0" fill="rgb(140.17012202175,140.17012202175,154.549055875177)" rx="2" ry="2" />
<text  x="438.93" y="81.5" ></text>
</g>
<g >
<title>firedrake.extrusion_utils.make_extruded_coords (2,015,221 us, 11.14%)</title><rect x="10.2" y="87" width="131.5" height="15.0" fill="rgb(153.811675926912,125.88951543966,125.88951543966)" rx="2" ry="2" />
<text  x="13.19" y="97.5" >firedrake.extru..</text>
</g>
<g >
<title>Parloop_Cells_wrap_form0_cell_integral_otherwise (4,257,920 us, 23.54%)</title><rect x="515.9" y="135" width="277.8" height="15.0" fill="rgb(148.220421290763,159.592024441039,148.220421290763)" rx="2" ry="2" />
<text  x="518.92" y="145.5" >Parloop_Cells_wrap_form0_cell_inte..</text>
</g>
<g >
<title>FunctionSpaceData: CreateElement (10,985 us, 0.06%)</title><rect x="143.4" y="135" width="0.7" height="15.0" fill="rgb(153.226391832847,153.226391832847,134.86636042072)" rx="2" ry="2" />
<text  x="146.40" y="145.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (10,017 us, 0.06%)</title><rect x="141.7" y="103" width="0.6" height="15.0" fill="rgb(111.713488608756,111.713488608756,149.041320375888)" rx="2" ry="2" />
<text  x="144.65" y="113.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (50,646 us, 0.28%)</title><rect x="142.3" y="87" width="3.3" height="15.0" fill="rgb(139.568586054904,153.221485273494,153.221485273494)" rx="2" ry="2" />
<text  x="145.30" y="97.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (9,394 us, 0.05%)</title><rect x="449.1" y="183" width="0.6" height="15.0" fill="rgb(154.967733097313,134.752620412734,134.752620412734)" rx="2" ry="2" />
<text  x="452.10" y="193.5" ></text>
</g>
</g>
</svg>
