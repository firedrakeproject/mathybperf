<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="267" onload="init(evt)" viewBox="0 0 1200 267" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:13px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:18px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 13 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (1 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="267.0" fill="url(#background)"  />
<text id="title" x="600.00" y="26" >Firedrake example</text>
<text id="details" x="10.00" y="249" > </text>
<text id="unzoom" x="10.00" y="26" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="26" >Search</text>
<text id="ignorecase" x="1174.00" y="26" >ic</text>
<text id="matched" x="1090.00" y="249" > </text>
<g id="frames">
<g >
<title>ParLoopExecute (16,004,000 us, 14.71%)</title><rect x="586.6" y="167" width="173.6" height="15.0" fill="rgb(153.492837725224,123.445089226715,123.445089226715)" rx="2" ry="2" />
<text  x="589.62" y="177.5" >ParLoopExecute</text>
</g>
<g >
<title>Log_Event_slate_loopy_knl_4 (12,115 us, 0.01%)</title><rect x="656.7" y="199" width="0.1" height="15.0" fill="rgb(149.591792646427,149.591792646427,117.252533594222)" rx="2" ry="2" />
<text  x="659.66" y="209.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalProblem.__init__ (12,001 us, 0.01%)</title><rect x="89.7" y="87" width="0.1" height="15.0" fill="rgb(128.040775460098,128.040775460098,152.201440411632)" rx="2" ry="2" />
<text  x="92.70" y="97.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_form1_cell_integral_otherwise (7,066,877 us, 6.50%)</title><rect x="1101.7" y="135" width="76.6" height="15.0" fill="rgb(155.611628231002,155.611628231002,146.425582965623)" rx="2" ry="2" />
<text  x="1104.67" y="145.5" >Parloop..</text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (51,962 us, 0.05%)</title><rect x="32.2" y="87" width="0.6" height="15.0" fill="rgb(109.86870894702,145.521517134413,145.521517134413)" rx="2" ry="2" />
<text  x="35.20" y="97.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (1,156,773 us, 1.06%)</title><rect x="1054.8" y="183" width="12.6" height="15.0" fill="rgb(151.517537404426,151.517537404426,126.584988959913)" rx="2" ry="2" />
<text  x="1057.84" y="193.5" ></text>
</g>
<g >
<title>ParLoopExecute (1,299,142 us, 1.19%)</title><rect x="18.0" y="103" width="14.1" height="15.0" fill="rgb(152.034030550919,152.034030550919,129.087994208302)" rx="2" ry="2" />
<text  x="20.97" y="113.5" ></text>
</g>
<g >
<title>firedrake.functionspace.VectorFunctionSpace (13,011 us, 0.01%)</title><rect x="32.1" y="87" width="0.1" height="15.0" fill="rgb(152.291670412963,114.236139832713,114.236139832713)" rx="2" ry="2" />
<text  x="35.06" y="97.5" ></text>
</g>
<g >
<title>firedrake.parloops.par_loop (1,009,080 us, 0.93%)</title><rect x="563.5" y="167" width="11.0" height="15.0" fill="rgb(136.1282186407,152.329538166107,152.329538166107)" rx="2" ry="2" />
<text  x="566.52" y="177.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.LinearVariationalProblem.__init__ (25,241 us, 0.02%)</title><rect x="89.6" y="71" width="0.2" height="15.0" fill="rgb(128.117369537688,150.252651361623,150.252651361623)" rx="2" ry="2" />
<text  x="92.55" y="81.5" ></text>
</g>
<g >
<title>PetscBarrier (38,853 us, 0.04%)</title><rect x="33.1" y="71" width="0.4" height="15.0" fill="rgb(155.473978957554,138.633838674577,138.633838674577)" rx="2" ry="2" />
<text  x="36.12" y="81.5" ></text>
</g>
<g >
<title>ParLoopExecute (20,524,536 us, 18.87%)</title><rect x="798.0" y="151" width="222.6" height="15.0" fill="rgb(137.243936128367,161.378894118638,137.243936128367)" rx="2" ry="2" />
<text  x="800.97" y="161.5" >ParLoopExecute</text>
</g>
<g >
<title>ParLoopExecute (15,866,185 us, 14.59%)</title><rect x="120.3" y="151" width="172.1" height="15.0" fill="rgb(142.121956428244,117.312513347376,142.121956428244)" rx="2" ry="2" />
<text  x="123.32" y="161.5" >ParLoopExecute</text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (12,001 us, 0.01%)</title><rect x="89.7" y="103" width="0.1" height="15.0" fill="rgb(140.537357971564,160.842755679048,140.537357971564)" rx="2" ry="2" />
<text  x="92.70" y="113.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.action (13,240 us, 0.01%)</title><rect x="89.6" y="87" width="0.1" height="15.0" fill="rgb(137.565996693766,137.565996693766,154.045031618148)" rx="2" ry="2" />
<text  x="92.55" y="97.5" ></text>
</g>
<g >
<title>HybridProject (1,041,480 us, 0.96%)</title><rect x="109.0" y="151" width="11.3" height="15.0" fill="rgb(147.784038464167,159.663063505833,147.784038464167)" rx="2" ry="2" />
<text  x="112.02" y="161.5" ></text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (1,579,012 us, 1.45%)</title><rect x="760.2" y="167" width="17.2" height="15.0" fill="rgb(151.127881623828,151.127881623828,124.69665710009)" rx="2" ry="2" />
<text  x="763.22" y="177.5" ></text>
</g>
<g >
<title>firedrake.utility_meshes.RectangleMesh (12,733 us, 0.01%)</title><rect x="89.4" y="87" width="0.2" height="15.0" fill="rgb(146.322828686045,159.900934865062,146.322828686045)" rx="2" ry="2" />
<text  x="92.41" y="97.5" ></text>
</g>
<g >
<title>PCSetUp (26,737,556 us, 24.58%)</title><rect x="777.4" y="103" width="290.0" height="15.0" fill="rgb(147.988948580886,159.629706044972,147.988948580886)" rx="2" ry="2" />
<text  x="780.35" y="113.5" >PCSetUp</text>
</g>
<g >
<title>PCApply (63,369,670 us, 58.25%)</title><rect x="90.0" y="119" width="687.4" height="15.0" fill="rgb(155.890371914868,155.890371914868,147.776417741286)" rx="2" ry="2" />
<text  x="92.95" y="129.5" >PCApply</text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (13,011 us, 0.01%)</title><rect x="32.1" y="119" width="0.1" height="15.0" fill="rgb(134.51161662696,161.823690316541,134.51161662696)" rx="2" ry="2" />
<text  x="35.06" y="129.5" ></text>
</g>
<g >
<title>firedrake.parloops.par_loop (1,041,480 us, 0.96%)</title><rect x="109.0" y="167" width="11.3" height="15.0" fill="rgb(139.345557764753,139.345557764753,154.389462793178)" rx="2" ry="2" />
<text  x="112.02" y="177.5" ></text>
</g>
<g >
<title>firedrake (108,781,431 us, 100.00%)</title><rect x="10.0" y="55" width="1180.0" height="15.0" fill="rgb(130.716763824579,162.441457051813,130.716763824579)" rx="2" ry="2" />
<text  x="13.00" y="65.5" >firedrake</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (12,010,401 us, 11.04%)</title><rect x="890.3" y="183" width="130.3" height="15.0" fill="rgb(152.139805522727,113.071842340909,113.071842340909)" rx="2" ry="2" />
<text  x="893.33" y="193.5" >pyop2.global_k..</text>
</g>
<g >
<title>ParLoopExecute (1,009,080 us, 0.93%)</title><rect x="563.5" y="183" width="11.0" height="15.0" fill="rgb(152.578826521423,116.437669997574,116.437669997574)" rx="2" ry="2" />
<text  x="566.52" y="193.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_wrap_slate_loopy_knl_14 (15,866,185 us, 14.59%)</title><rect x="120.3" y="167" width="172.1" height="15.0" fill="rgb(152.039114164804,112.299875263495,112.299875263495)" rx="2" ry="2" />
<text  x="123.32" y="177.5" >Parloop_Cells_wrap_w..</text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (3,114,959 us, 2.86%)</title><rect x="1020.6" y="151" width="33.8" height="15.0" fill="rgb(152.170030440312,113.303566709058,113.303566709058)" rx="2" ry="2" />
<text  x="1023.61" y="161.5" >fi..</text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (1,076,378 us, 0.99%)</title><rect x="1178.3" y="119" width="11.7" height="15.0" fill="rgb(155.321205281825,137.462573827326,137.462573827326)" rx="2" ry="2" />
<text  x="1181.32" y="129.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_wrap_slate_loopy_knl_4 (16,004,000 us, 14.71%)</title><rect x="586.6" y="183" width="173.6" height="15.0" fill="rgb(126.381592212079,149.802635017946,149.802635017946)" rx="2" ry="2" />
<text  x="589.62" y="193.5" >Parloop_Cells_wrap_w..</text>
</g>
<g >
<title>ParLoopExecute (1,041,480 us, 0.96%)</title><rect x="109.0" y="183" width="11.3" height="15.0" fill="rgb(133.879344743948,151.746496785468,151.746496785468)" rx="2" ry="2" />
<text  x="112.02" y="193.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (11,823 us, 0.01%)</title><rect x="1054.4" y="167" width="0.1" height="15.0" fill="rgb(148.064499394008,148.064499394008,156.076999882711)" rx="2" ry="2" />
<text  x="1057.40" y="177.5" ></text>
</g>
<g >
<title>SCForwardElim (19,712,324 us, 18.12%)</title><rect x="563.5" y="135" width="213.9" height="15.0" fill="rgb(147.164462877137,159.763924647908,147.164462877137)" rx="2" ry="2" />
<text  x="566.52" y="145.5" >SCForwardElim</text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (11,823 us, 0.01%)</title><rect x="1054.4" y="151" width="0.1" height="15.0" fill="rgb(120.762055889236,120.762055889236,150.792655978562)" rx="2" ry="2" />
<text  x="1057.40" y="161.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.__init__ (11,903 us, 0.01%)</title><rect x="89.8" y="71" width="0.2" height="15.0" fill="rgb(156.706255607462,148.08129299054,148.08129299054)" rx="2" ry="2" />
<text  x="92.83" y="81.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (51,962 us, 0.05%)</title><rect x="32.2" y="119" width="0.6" height="15.0" fill="rgb(130.793882721429,130.793882721429,152.734299881567)" rx="2" ry="2" />
<text  x="35.20" y="129.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.solve (101,410,625 us, 93.22%)</title><rect x="90.0" y="71" width="1100.0" height="15.0" fill="rgb(150.827147104373,150.827147104373,123.239251351962)" rx="2" ry="2" />
<text  x="92.95" y="81.5" >firedrake.variational_solver.NonlinearVariationalSolver.solve</text>
</g>
<g >
<title>ParLoopExecute (1,169,377 us, 1.07%)</title><rect x="1054.7" y="151" width="12.7" height="15.0" fill="rgb(108.14586517481,145.07485393421,145.07485393421)" rx="2" ry="2" />
<text  x="1057.70" y="161.5" ></text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (1,821,701 us, 1.67%)</title><rect x="543.8" y="151" width="19.7" height="15.0" fill="rgb(148.386780882283,133.36612601085,148.386780882283)" rx="2" ry="2" />
<text  x="546.76" y="161.5" ></text>
</g>
<g >
<title>firedrake.mesh.MeshTopology._facets (25,103 us, 0.02%)</title><rect x="32.5" y="135" width="0.3" height="15.0" fill="rgb(139.268233841593,109.999849219083,139.268233841593)" rx="2" ry="2" />
<text  x="35.49" y="145.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (11,823 us, 0.01%)</title><rect x="1054.4" y="135" width="0.1" height="15.0" fill="rgb(130.587984092833,130.587984092833,152.694448534097)" rx="2" ry="2" />
<text  x="1057.40" y="145.5" ></text>
</g>
<g >
<title>firedrake.extrusion_utils.make_extruded_coords (1,338,530 us, 1.23%)</title><rect x="17.5" y="87" width="14.6" height="15.0" fill="rgb(148.097501969561,148.097501969561,110.010971083258)" rx="2" ry="2" />
<text  x="20.54" y="97.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (11,023 us, 0.01%)</title><rect x="777.7" y="135" width="0.2" height="15.0" fill="rgb(145.185300833338,125.162333385428,145.185300833338)" rx="2" ry="2" />
<text  x="780.75" y="145.5" ></text>
</g>
<g >
<title>HybridBreak (1,009,080 us, 0.93%)</title><rect x="563.5" y="151" width="11.0" height="15.0" fill="rgb(156.007187753018,142.721772773138,142.721772773138)" rx="2" ry="2" />
<text  x="566.52" y="161.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_wrap_slate_loopy_knl_7 (19,466,243 us, 17.89%)</title><rect x="307.8" y="183" width="211.2" height="15.0" fill="rgb(133.020006918693,162.066510501608,133.020006918693)" rx="2" ry="2" />
<text  x="310.83" y="193.5" >Parloop_Cells_wrap_wrap_s..</text>
</g>
<g >
<title>firedrake.interpolation.make_interpolator (15,806 us, 0.01%)</title><rect x="1054.5" y="135" width="0.2" height="15.0" fill="rgb(155.0699356649,135.536173430901,135.536173430901)" rx="2" ry="2" />
<text  x="1057.53" y="145.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (1,027,191 us, 0.94%)</title><rect x="109.2" y="215" width="11.1" height="15.0" fill="rgb(126.681671150252,149.880433261176,149.880433261176)" rx="2" ry="2" />
<text  x="112.17" y="225.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (7,066,877 us, 6.50%)</title><rect x="1101.7" y="151" width="76.6" height="15.0" fill="rgb(148.347933024417,148.347933024417,111.224598502943)" rx="2" ry="2" />
<text  x="1104.67" y="161.5" >pyop2.g..</text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (51,962 us, 0.05%)</title><rect x="32.2" y="103" width="0.6" height="15.0" fill="rgb(147.758931867885,147.758931867885,108.370208282827)" rx="2" ry="2" />
<text  x="35.20" y="113.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (13,011 us, 0.01%)</title><rect x="32.1" y="103" width="0.1" height="15.0" fill="rgb(119.927735565388,148.12941292436,148.12941292436)" rx="2" ry="2" />
<text  x="35.06" y="113.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (3,160,144 us, 2.91%)</title><rect x="1067.4" y="151" width="34.3" height="15.0" fill="rgb(150.587406056277,150.587406056277,122.077429349648)" rx="2" ry="2" />
<text  x="1070.39" y="161.5" >py..</text>
</g>
<g >
<title>SNESSolve (101,410,625 us, 93.22%)</title><rect x="90.0" y="87" width="1100.0" height="15.0" fill="rgb(125.975727773797,125.975727773797,151.80175376267)" rx="2" ry="2" />
<text  x="92.95" y="97.5" >SNESSolve</text>
</g>
<g >
<title>RecoverFirstElim (23,170,410 us, 21.30%)</title><rect x="292.4" y="151" width="251.4" height="15.0" fill="rgb(142.423580078277,142.423580078277,154.985209047408)" rx="2" ry="2" />
<text  x="295.42" y="161.5" >RecoverFirstElim</text>
</g>
<g >
<title>firedrake.__init__ (5,150,427 us, 4.73%)</title><rect x="33.5" y="71" width="55.9" height="15.0" fill="rgb(148.257394514222,148.257394514222,110.785834953538)" rx="2" ry="2" />
<text  x="36.54" y="81.5" >fired..</text>
</g>
<g >
<title>Log_Event_slate_loopy_knl_14 (11,534 us, 0.01%)</title><rect x="191.9" y="183" width="0.1" height="15.0" fill="rgb(147.642912033863,159.686037575883,147.642912033863)" rx="2" ry="2" />
<text  x="194.87" y="193.5" ></text>
</g>
<g >
<title>SCBackSub (43,657,346 us, 40.13%)</title><rect x="90.0" y="135" width="473.5" height="15.0" fill="rgb(130.523773233122,162.472874124841,130.523773233122)" rx="2" ry="2" />
<text  x="92.95" y="145.5" >SCBackSub</text>
</g>
<g >
<title>CreateExtMesh (1,351,541 us, 1.24%)</title><rect x="17.5" y="71" width="14.7" height="15.0" fill="rgb(112.426842222827,112.426842222827,149.179388817321)" rx="2" ry="2" />
<text  x="20.54" y="81.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (9,535,624 us, 8.77%)</title><rect x="656.8" y="199" width="103.4" height="15.0" fill="rgb(104.403765263063,144.104679883016,144.104679883016)" rx="2" ry="2" />
<text  x="659.79" y="209.5" >pyop2.globa..</text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (1,009,080 us, 0.93%)</title><rect x="563.5" y="199" width="11.0" height="15.0" fill="rgb(138.74458886925,108.658008977452,138.74458886925)" rx="2" ry="2" />
<text  x="566.52" y="209.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (11,023 us, 0.01%)</title><rect x="777.7" y="151" width="0.2" height="15.0" fill="rgb(105.623065609831,144.420794787734,144.420794787734)" rx="2" ry="2" />
<text  x="780.75" y="161.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (11,738,816 us, 10.79%)</title><rect x="391.7" y="199" width="127.3" height="15.0" fill="rgb(130.152388623957,130.152388623957,152.610139733669)" rx="2" ry="2" />
<text  x="394.66" y="209.5" >pyop2.global_k..</text>
</g>
<g >
<title>ParLoopExecute (19,466,243 us, 17.89%)</title><rect x="307.8" y="167" width="211.2" height="15.0" fill="rgb(152.673165538399,152.673165538399,132.185340686088)" rx="2" ry="2" />
<text  x="310.83" y="177.5" >ParLoopExecute</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (9,258,096 us, 8.51%)</title><rect x="192.0" y="183" width="100.4" height="15.0" fill="rgb(146.405396004787,159.887493673639,146.405396004787)" rx="2" ry="2" />
<text  x="195.00" y="193.5" >pyop2.globa..</text>
</g>
<g >
<title>ParLoopExecute (10,227,021 us, 9.40%)</title><rect x="1067.4" y="119" width="110.9" height="15.0" fill="rgb(152.955845876769,152.955845876769,133.555253095113)" rx="2" ry="2" />
<text  x="1070.39" y="129.5" >ParLoopExecute</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (1,275,321 us, 1.17%)</title><rect x="18.2" y="135" width="13.9" height="15.0" fill="rgb(155.314354875893,137.410054048511,137.410054048511)" rx="2" ry="2" />
<text  x="21.22" y="145.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (1,169,377 us, 1.07%)</title><rect x="1054.7" y="167" width="12.7" height="15.0" fill="rgb(141.181199080917,160.737944335665,141.181199080917)" rx="2" ry="2" />
<text  x="1057.70" y="177.5" ></text>
</g>
<g >
<title>firedrake.parloops.par_loop (1,169,377 us, 1.07%)</title><rect x="1054.7" y="135" width="12.7" height="15.0" fill="rgb(125.637704546886,149.609775252896,149.609775252896)" rx="2" ry="2" />
<text  x="1057.70" y="145.5" ></text>
</g>
<g >
<title>HybridOperatorAssembly (25,493,387 us, 23.44%)</title><rect x="777.9" y="135" width="276.5" height="15.0" fill="rgb(115.596913342983,147.006607162996,147.006607162996)" rx="2" ry="2" />
<text  x="780.86" y="145.5" >HybridOperatorAssembly</text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (1,041,480 us, 0.96%)</title><rect x="109.0" y="199" width="11.3" height="15.0" fill="rgb(142.647429333568,160.499255689884,142.647429333568)" rx="2" ry="2" />
<text  x="112.02" y="209.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (51,962 us, 0.05%)</title><rect x="32.2" y="71" width="0.6" height="15.0" fill="rgb(140.312651871363,112.676170420367,140.312651871363)" rx="2" ry="2" />
<text  x="35.20" y="81.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (993,109 us, 0.91%)</title><rect x="563.7" y="215" width="10.8" height="15.0" fill="rgb(142.617690673139,142.617690673139,155.022778839962)" rx="2" ry="2" />
<text  x="566.70" y="225.5" ></text>
</g>
<g >
<title>SNESFunctionEval (11,303,399 us, 10.39%)</title><rect x="1067.4" y="103" width="122.6" height="15.0" fill="rgb(135.741876565417,152.229375405849,152.229375405849)" rx="2" ry="2" />
<text  x="1070.39" y="113.5" >SNESFunctionE..</text>
</g>
<g >
<title>HybridInit (26,737,556 us, 24.58%)</title><rect x="777.4" y="119" width="290.0" height="15.0" fill="rgb(150.770527043898,159.176890946342,150.770527043898)" rx="2" ry="2" />
<text  x="780.35" y="129.5" >HybridInit</text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (11,023 us, 0.01%)</title><rect x="777.7" y="167" width="0.2" height="15.0" fill="rgb(153.813360194537,153.813360194537,137.710899404297)" rx="2" ry="2" />
<text  x="780.75" y="177.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_form0_cell_integral_otherwise (3,160,144 us, 2.91%)</title><rect x="1067.4" y="135" width="34.3" height="15.0" fill="rgb(154.919377677905,134.381895530606,134.381895530606)" rx="2" ry="2" />
<text  x="1070.39" y="145.5" >Pa..</text>
</g>
<g >
<title>HybridRHS (18,703,244 us, 17.19%)</title><rect x="574.5" y="151" width="202.9" height="15.0" fill="rgb(133.811628959374,96.0172992083964,133.811628959374)" rx="2" ry="2" />
<text  x="577.47" y="161.5" >HybridRHS</text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (13,011 us, 0.01%)</title><rect x="32.1" y="151" width="0.1" height="15.0" fill="rgb(141.945706338852,160.613489665768,141.945706338852)" rx="2" ry="2" />
<text  x="35.06" y="161.5" ></text>
</g>
<g >
<title>CreateMesh (33,245 us, 0.03%)</title><rect x="32.8" y="71" width="0.3" height="15.0" fill="rgb(134.531429108765,97.8617870912092,134.531429108765)" rx="2" ry="2" />
<text  x="35.76" y="81.5" ></text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (2,283,543 us, 2.10%)</title><rect x="519.0" y="167" width="24.8" height="15.0" fill="rgb(152.230993145365,113.7709474478,113.7709474478)" rx="2" ry="2" />
<text  x="521.99" y="177.5" >f..</text>
</g>
<g >
<title>KSPSolve (63,369,670 us, 58.25%)</title><rect x="90.0" y="103" width="687.4" height="15.0" fill="rgb(156.704548897841,148.068208216783,148.068208216783)" rx="2" ry="2" />
<text  x="92.95" y="113.5" >KSPSolve</text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (13,011 us, 0.01%)</title><rect x="32.1" y="135" width="0.1" height="15.0" fill="rgb(124.991237289733,124.991237289733,151.611207217368)" rx="2" ry="2" />
<text  x="35.06" y="145.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_pyop2_kernel_uniform_extrusion (1,299,142 us, 1.19%)</title><rect x="18.0" y="119" width="14.1" height="15.0" fill="rgb(121.20104380419,121.20104380419,150.877621381456)" rx="2" ry="2" />
<text  x="20.97" y="129.5" ></text>
</g>
<g >
<title>all (108,781,431 us, 100%)</title><rect x="10.0" y="39" width="1180.0" height="15.0" fill="rgb(148.022983265051,148.022983265051,109.649841976788)" rx="2" ry="2" />
<text  x="13.00" y="49.5" ></text>
</g>
<g >
<title>Log_Event_slate_loopy_knl_0 (11,825 us, 0.01%)</title><rect x="890.2" y="183" width="0.1" height="15.0" fill="rgb(155.262981106476,137.016188482983,137.016188482983)" rx="2" ry="2" />
<text  x="893.20" y="193.5" ></text>
</g>
<g >
<title>firedrake.utility_meshes.SquareMesh (12,733 us, 0.01%)</title><rect x="89.4" y="71" width="0.2" height="15.0" fill="rgb(126.79228671117,163.080325419112,126.79228671117)" rx="2" ry="2" />
<text  x="92.41" y="81.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_wrap_slate_loopy_knl_0 (20,524,536 us, 18.87%)</title><rect x="798.0" y="167" width="222.6" height="15.0" fill="rgb(137.172415285912,161.390537046479,137.172415285912)" rx="2" ry="2" />
<text  x="800.97" y="177.5" >Parloop_Cells_wrap_wrap_sla..</text>
</g>
<g >
<title>Log_Event_slate_loopy_knl_7 (47,475 us, 0.04%)</title><rect x="391.1" y="199" width="0.6" height="15.0" fill="rgb(138.255684267298,152.881103328559,152.881103328559)" rx="2" ry="2" />
<text  x="394.14" y="209.5" ></text>
</g>
</g>
</svg>
