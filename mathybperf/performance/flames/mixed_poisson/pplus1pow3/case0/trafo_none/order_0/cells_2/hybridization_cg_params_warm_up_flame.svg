<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="283" onload="init(evt)" viewBox="0 0 1200 283" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:13px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:18px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 13 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (1 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="283.0" fill="url(#background)"  />
<text id="title" x="600.00" y="26" >Firedrake example</text>
<text id="details" x="10.00" y="265" > </text>
<text id="unzoom" x="10.00" y="26" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="26" >Search</text>
<text id="ignorecase" x="1174.00" y="26" >ic</text>
<text id="matched" x="1090.00" y="265" > </text>
<g id="frames">
<g >
<title>firedrake.mesh.MeshTopology._facets (21,999 us, 0.05%)</title><rect x="47.5" y="135" width="0.6" height="15.0" fill="rgb(140.088885493333,160.915762826667,140.088885493333)" rx="2" ry="2" />
<text  x="50.54" y="145.5" ></text>
</g>
<g >
<title>FunctionSpaceData: CreateElement (6,997 us, 0.02%)</title><rect x="117.5" y="199" width="0.2" height="15.0" fill="rgb(144.651863706532,160.172952419867,144.651863706532)" rx="2" ry="2" />
<text  x="120.51" y="209.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (6,997 us, 0.02%)</title><rect x="117.5" y="167" width="0.2" height="15.0" fill="rgb(132.798271595172,93.4205709626293,132.798271595172)" rx="2" ry="2" />
<text  x="120.51" y="177.5" ></text>
</g>
<g >
<title>HybridOperatorAssembly (16,628,678 us, 38.40%)</title><rect x="117.7" y="135" width="453.2" height="15.0" fill="rgb(150.081507573915,150.081507573915,119.62576747359)" rx="2" ry="2" />
<text  x="120.70" y="145.5" >HybridOperatorAssembly</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (2,888,423 us, 6.67%)</title><rect x="574.5" y="183" width="78.7" height="15.0" fill="rgb(153.81155397773,125.888580495928,125.888580495928)" rx="2" ry="2" />
<text  x="577.52" y="193.5" >pyop2.gl..</text>
</g>
<g >
<title>SNESSolve (39,407,094 us, 91.01%)</title><rect x="116.1" y="87" width="1073.9" height="15.0" fill="rgb(143.408490103393,154.217015952732,154.217015952732)" rx="2" ry="2" />
<text  x="119.10" y="97.5" >SNESSolve</text>
</g>
<g >
<title>ParLoopExecute (1,372,361 us, 3.17%)</title><rect x="205.7" y="151" width="37.4" height="15.0" fill="rgb(115.034185296972,146.860714706622,146.860714706622)" rx="2" ry="2" />
<text  x="208.69" y="161.5" >Pa..</text>
</g>
<g >
<title>SNESFunctionEval (19,687,070 us, 45.47%)</title><rect x="653.5" y="103" width="536.5" height="15.0" fill="rgb(146.555466349657,146.555466349657,155.784928970901)" rx="2" ry="2" />
<text  x="656.50" y="113.5" >SNESFunctionEval</text>
</g>
<g >
<title>firedrake.extrusion_utils.make_extruded_coords (1,341,572 us, 3.10%)</title><rect x="10.0" y="87" width="36.6" height="15.0" fill="rgb(153.279923435907,153.279923435907,135.125782804782)" rx="2" ry="2" />
<text  x="13.00" y="97.5" >fi..</text>
</g>
<g >
<title>FunctionSpaceData: CreateElement (7,880 us, 0.02%)</title><rect x="47.3" y="135" width="0.2" height="15.0" fill="rgb(137.30744265482,137.30744265482,153.994988900933)" rx="2" ry="2" />
<text  x="50.32" y="145.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (46,442 us, 0.11%)</title><rect x="46.9" y="87" width="1.2" height="15.0" fill="rgb(150.993282385503,150.993282385503,124.04436848359)" rx="2" ry="2" />
<text  x="49.87" y="97.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_form1_cell_integral_otherwise (12,278,700 us, 28.36%)</title><rect x="819.1" y="135" width="334.6" height="15.0" fill="rgb(112.063559412808,146.090552440358,146.090552440358)" rx="2" ry="2" />
<text  x="822.13" y="145.5" >Parloop_Cells_wrap_form1_cell_integral_ot..</text>
</g>
<g >
<title>Parloop_Cells_wrap_pyop2_kernel_uniform_extrusion (1,302,883 us, 3.01%)</title><rect x="11.1" y="119" width="35.5" height="15.0" fill="rgb(154.1049502871,154.1049502871,139.123989852867)" rx="2" ry="2" />
<text  x="14.05" y="129.5" >Pa..</text>
</g>
<g >
<title>firedrake.mesh._from_cell_list (6,279 us, 0.01%)</title><rect x="115.1" y="103" width="0.2" height="15.0" fill="rgb(126.953866227621,149.951002355309,149.951002355309)" rx="2" ry="2" />
<text  x="118.11" y="113.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (11,506 us, 0.03%)</title><rect x="46.6" y="103" width="0.3" height="15.0" fill="rgb(114.238513197506,114.238513197506,149.530034812421)" rx="2" ry="2" />
<text  x="49.56" y="113.5" ></text>
</g>
<g >
<title>firedrake.assemble.allocate_matrix (4,592 us, 0.01%)</title><rect x="116.0" y="87" width="0.1" height="15.0" fill="rgb(139.983070434817,139.983070434817,154.512852342223)" rx="2" ry="2" />
<text  x="118.98" y="97.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (12,271,476 us, 28.34%)</title><rect x="819.3" y="151" width="334.4" height="15.0" fill="rgb(131.818337645872,131.818337645872,152.932581479846)" rx="2" ry="2" />
<text  x="822.33" y="161.5" >pyop2.global_kernel.GlobalKernel.compile</text>
</g>
<g >
<title>Log_Event_form0_cell_integral_otherwise (7,804 us, 0.02%)</title><rect x="653.6" y="151" width="0.3" height="15.0" fill="rgb(142.166691599414,117.427147223499,142.166691599414)" rx="2" ry="2" />
<text  x="656.65" y="161.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.solve (39,407,094 us, 91.01%)</title><rect x="116.1" y="71" width="1073.9" height="15.0" fill="rgb(134.025115170342,96.5643576240007,134.025115170342)" rx="2" ry="2" />
<text  x="119.10" y="81.5" >firedrake.variational_solver.NonlinearVariationalSolver.solve</text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (11,506 us, 0.03%)</title><rect x="46.6" y="151" width="0.3" height="15.0" fill="rgb(138.268527118337,152.884432956606,152.884432956606)" rx="2" ry="2" />
<text  x="49.56" y="161.5" ></text>
</g>
<g >
<title>firedrake.utility_meshes.RectangleMesh (6,279 us, 0.01%)</title><rect x="115.1" y="87" width="0.2" height="15.0" fill="rgb(153.485105471104,153.485105471104,136.120126513809)" rx="2" ry="2" />
<text  x="118.11" y="97.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (9,659 us, 0.02%)</title><rect x="653.2" y="135" width="0.3" height="15.0" fill="rgb(133.151761984528,162.045062002519,133.151761984528)" rx="2" ry="2" />
<text  x="656.24" y="145.5" ></text>
</g>
<g >
<title>PCSetUp (19,720,024 us, 45.54%)</title><rect x="116.1" y="103" width="537.4" height="15.0" fill="rgb(155.346357178923,137.655405038411,137.655405038411)" rx="2" ry="2" />
<text  x="119.10" y="113.5" >PCSetUp</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (1,279,250 us, 2.95%)</title><rect x="11.7" y="135" width="34.9" height="15.0" fill="rgb(149.183538995673,149.183538995673,115.274073594416)" rx="2" ry="2" />
<text  x="14.70" y="145.5" >py..</text>
</g>
<g >
<title>firedrake.functionspace.MixedFunctionSpace (5,307 us, 0.01%)</title><rect x="117.4" y="151" width="0.1" height="15.0" fill="rgb(129.734985255425,150.672033214369,150.672033214369)" rx="2" ry="2" />
<text  x="120.37" y="161.5" ></text>
</g>
<g >
<title>firedrake.__init__ (2,405,636 us, 5.56%)</title><rect x="49.6" y="71" width="65.5" height="15.0" fill="rgb(152.538373673085,152.538373673085,131.532118569565)" rx="2" ry="2" />
<text  x="52.56" y="81.5" >firedr..</text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalProblem.__init__ (12,064 us, 0.03%)</title><rect x="115.6" y="87" width="0.4" height="15.0" fill="rgb(147.662306332326,147.662306332326,107.901946072043)" rx="2" ry="2" />
<text  x="118.65" y="97.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (33,318 us, 0.08%)</title><rect x="572.1" y="135" width="0.9" height="15.0" fill="rgb(153.843066926473,153.843066926473,137.854862797524)" rx="2" ry="2" />
<text  x="575.10" y="145.5" ></text>
</g>
<g >
<title>ParLoopExecute (1,302,883 us, 3.01%)</title><rect x="11.1" y="103" width="35.5" height="15.0" fill="rgb(138.381697059659,107.728098715376,138.381697059659)" rx="2" ry="2" />
<text  x="14.05" y="113.5" >Pa..</text>
</g>
<g >
<title>Mesh: numbering (7,232 us, 0.02%)</title><rect x="48.5" y="87" width="0.2" height="15.0" fill="rgb(149.672264423216,149.672264423216,117.642512204816)" rx="2" ry="2" />
<text  x="51.52" y="97.5" ></text>
</g>
<g >
<title>firedrake.assemble.allocate_matrix (45,717 us, 0.11%)</title><rect x="570.9" y="135" width="1.2" height="15.0" fill="rgb(130.54114390056,162.470046341769,130.54114390056)" rx="2" ry="2" />
<text  x="573.86" y="145.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (46,442 us, 0.11%)</title><rect x="46.9" y="103" width="1.2" height="15.0" fill="rgb(153.550588141871,123.887842421009,123.887842421009)" rx="2" ry="2" />
<text  x="49.87" y="113.5" ></text>
</g>
<g >
<title>firedrake.utility_meshes.SquareMesh (6,279 us, 0.01%)</title><rect x="115.1" y="71" width="0.2" height="15.0" fill="rgb(128.178491843276,150.268497885294,150.268497885294)" rx="2" ry="2" />
<text  x="118.11" y="81.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (5,307 us, 0.01%)</title><rect x="117.4" y="167" width="0.1" height="15.0" fill="rgb(133.614465851299,133.614465851299,153.280219197026)" rx="2" ry="2" />
<text  x="120.37" y="177.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.action (13,376 us, 0.03%)</title><rect x="115.3" y="87" width="0.3" height="15.0" fill="rgb(156.74561442428,148.38304391948,148.38304391948)" rx="2" ry="2" />
<text  x="118.28" y="97.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (7,141 us, 0.02%)</title><rect x="1189.8" y="151" width="0.2" height="15.0" fill="rgb(115.16797118608,115.16797118608,149.709929906983)" rx="2" ry="2" />
<text  x="1192.81" y="161.5" ></text>
</g>
<g >
<title>CreateExtMesh (1,353,078 us, 3.12%)</title><rect x="10.0" y="71" width="36.9" height="15.0" fill="rgb(117.53637827156,147.509431403738,147.509431403738)" rx="2" ry="2" />
<text  x="13.00" y="81.5" >Cr..</text>
</g>
<g >
<title>HybridInit (19,720,024 us, 45.54%)</title><rect x="116.1" y="119" width="537.4" height="15.0" fill="rgb(134.316016957265,151.859708100032,151.859708100032)" rx="2" ry="2" />
<text  x="119.10" y="129.5" >HybridInit</text>
</g>
<g >
<title>ParLoopExecute (2,908,972 us, 6.72%)</title><rect x="574.0" y="151" width="79.2" height="15.0" fill="rgb(129.406881440761,150.58696926242,150.58696926242)" rx="2" ry="2" />
<text  x="576.96" y="161.5" >ParLoopE..</text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (6,619 us, 0.02%)</title><rect x="572.8" y="199" width="0.2" height="15.0" fill="rgb(145.145629618619,160.09257192255,145.145629618619)" rx="2" ry="2" />
<text  x="575.83" y="209.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (11,506 us, 0.03%)</title><rect x="46.6" y="135" width="0.3" height="15.0" fill="rgb(152.054820508925,112.420290568428,112.420290568428)" rx="2" ry="2" />
<text  x="49.56" y="145.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (12,064 us, 0.03%)</title><rect x="115.6" y="103" width="0.4" height="15.0" fill="rgb(139.276513680952,161.048009400775,139.276513680952)" rx="2" ry="2" />
<text  x="118.65" y="113.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_wrap_slate_loopy_knl_0 (1,372,361 us, 3.17%)</title><rect x="205.7" y="167" width="37.4" height="15.0" fill="rgb(122.781044722233,148.869159742801,148.869159742801)" rx="2" ry="2" />
<text  x="208.69" y="177.5" >Pa..</text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (7,141 us, 0.02%)</title><rect x="1189.8" y="135" width="0.2" height="15.0" fill="rgb(139.095333717679,161.077503813401,139.095333717679)" rx="2" ry="2" />
<text  x="1192.81" y="145.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (23,618 us, 0.05%)</title><rect x="572.4" y="167" width="0.6" height="15.0" fill="rgb(152.820305617519,118.289009734314,118.289009734314)" rx="2" ry="2" />
<text  x="575.37" y="177.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (11,506 us, 0.03%)</title><rect x="46.6" y="119" width="0.3" height="15.0" fill="rgb(139.70311215495,139.70311215495,154.4586668687)" rx="2" ry="2" />
<text  x="49.56" y="129.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.LinearVariationalProblem.__init__ (25,440 us, 0.06%)</title><rect x="115.3" y="71" width="0.7" height="15.0" fill="rgb(155.415515988406,138.185622577782,138.185622577782)" rx="2" ry="2" />
<text  x="118.28" y="81.5" ></text>
</g>
<g >
<title>MatZeroInitial (8,662 us, 0.02%)</title><rect x="571.9" y="151" width="0.2" height="15.0" fill="rgb(153.701978708101,153.701978708101,137.171127585412)" rx="2" ry="2" />
<text  x="574.87" y="161.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (15,481 us, 0.04%)</title><rect x="572.6" y="183" width="0.4" height="15.0" fill="rgb(104.266828334546,144.069177716364,144.069177716364)" rx="2" ry="2" />
<text  x="575.59" y="193.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (2,908,972 us, 6.72%)</title><rect x="574.0" y="167" width="79.2" height="15.0" fill="rgb(144.867329559244,160.137876583379,144.867329559244)" rx="2" ry="2" />
<text  x="576.96" y="177.5" >Parloop_..</text>
</g>
<g >
<title>firedrake.interpolation.make_interpolator (23,492 us, 0.05%)</title><rect x="573.0" y="135" width="0.6" height="15.0" fill="rgb(149.633244101657,159.362030029963,149.633244101657)" rx="2" ry="2" />
<text  x="576.01" y="145.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (33,318 us, 0.08%)</title><rect x="572.1" y="151" width="0.9" height="15.0" fill="rgb(138.304112475109,161.206307271494,138.304112475109)" rx="2" ry="2" />
<text  x="575.10" y="161.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (12,304 us, 0.03%)</title><rect x="117.4" y="135" width="0.3" height="15.0" fill="rgb(131.952415963914,162.240304377967,131.952415963914)" rx="2" ry="2" />
<text  x="120.37" y="145.5" ></text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (1,330,401 us, 3.07%)</title><rect x="1153.7" y="119" width="36.3" height="15.0" fill="rgb(133.324416990943,162.016955373567,133.324416990943)" rx="2" ry="2" />
<text  x="1156.74" y="129.5" >fi..</text>
</g>
<g >
<title>firedrake.parloops.par_loop (2,920,502 us, 6.74%)</title><rect x="573.6" y="135" width="79.6" height="15.0" fill="rgb(140.571179396292,113.338647202999,140.571179396292)" rx="2" ry="2" />
<text  x="576.65" y="145.5" >firedrak..</text>
</g>
<g >
<title>Parloop_Cells_wrap_form0_cell_integral_otherwise (6,072,633 us, 14.02%)</title><rect x="653.6" y="135" width="165.5" height="15.0" fill="rgb(122.277581128495,122.277581128495,151.085983444225)" rx="2" ry="2" />
<text  x="656.65" y="145.5" >Parloop_Cells_wrap_..</text>
</g>
<g >
<title>firedrake.functionspace.VectorFunctionSpace (11,506 us, 0.03%)</title><rect x="46.6" y="87" width="0.3" height="15.0" fill="rgb(109.576996305985,145.445887931181,145.445887931181)" rx="2" ry="2" />
<text  x="49.56" y="97.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.__init__ (4,592 us, 0.01%)</title><rect x="116.0" y="71" width="0.1" height="15.0" fill="rgb(129.311801279812,162.670171884682,129.311801279812)" rx="2" ry="2" />
<text  x="118.98" y="81.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (6,997 us, 0.02%)</title><rect x="117.5" y="151" width="0.2" height="15.0" fill="rgb(152.393657912855,115.018043998555,115.018043998555)" rx="2" ry="2" />
<text  x="120.51" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (6,619 us, 0.02%)</title><rect x="572.8" y="215" width="0.2" height="15.0" fill="rgb(153.114404795594,153.114404795594,134.323654009415)" rx="2" ry="2" />
<text  x="575.83" y="225.5" ></text>
</g>
<g >
<title>all (43,300,579 us, 100%)</title><rect x="10.0" y="39" width="1180.0" height="15.0" fill="rgb(119.464450211137,148.009301906591,148.009301906591)" rx="2" ry="2" />
<text  x="13.00" y="49.5" ></text>
</g>
<g >
<title>ParLoopExecute (18,351,333 us, 42.38%)</title><rect x="653.6" y="119" width="500.1" height="15.0" fill="rgb(131.792231407859,151.205393327963,151.205393327963)" rx="2" ry="2" />
<text  x="656.65" y="129.5" >ParLoopExecute</text>
</g>
<g >
<title>CreateSparsity (37,055 us, 0.09%)</title><rect x="570.9" y="151" width="1.0" height="15.0" fill="rgb(146.103890948298,154.915823579188,154.915823579188)" rx="2" ry="2" />
<text  x="573.86" y="161.5" ></text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (12,027,477 us, 27.78%)</title><rect x="243.1" y="151" width="327.8" height="15.0" fill="rgb(145.123148300551,125.003067520162,145.123148300551)" rx="2" ry="2" />
<text  x="246.09" y="161.5" >firedrake.tsfc_interface.compile_form</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (6,064,829 us, 14.01%)</title><rect x="653.9" y="151" width="165.2" height="15.0" fill="rgb(155.968751902319,142.427097917779,142.427097917779)" rx="2" ry="2" />
<text  x="656.86" y="161.5" >pyop2.global_kernel..</text>
</g>
<g >
<title>CreateFunctionSpace (46,442 us, 0.11%)</title><rect x="46.9" y="71" width="1.2" height="15.0" fill="rgb(137.711130339533,137.711130339533,154.0731220012)" rx="2" ry="2" />
<text  x="49.87" y="81.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.action (4,592 us, 0.01%)</title><rect x="116.0" y="119" width="0.1" height="15.0" fill="rgb(142.607807309241,154.009431524618,154.009431524618)" rx="2" ry="2" />
<text  x="118.98" y="129.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (6,619 us, 0.02%)</title><rect x="572.8" y="231" width="0.2" height="15.0" fill="rgb(155.865659812012,155.865659812012,147.656659088983)" rx="2" ry="2" />
<text  x="575.83" y="241.5" ></text>
</g>
<g >
<title>CreateMesh (21,138 us, 0.05%)</title><rect x="48.1" y="71" width="0.6" height="15.0" fill="rgb(133.196769881468,162.037735135575,133.196769881468)" rx="2" ry="2" />
<text  x="51.14" y="81.5" ></text>
</g>
<g >
<title>PetscBarrier (30,880 us, 0.07%)</title><rect x="48.7" y="71" width="0.9" height="15.0" fill="rgb(146.262115377813,159.910818426868,146.262115377813)" rx="2" ry="2" />
<text  x="51.71" y="81.5" ></text>
</g>
<g >
<title>firedrake (43,300,579 us, 100.00%)</title><rect x="10.0" y="55" width="1180.0" height="15.0" fill="rgb(152.240651057966,152.240651057966,130.08930897322)" rx="2" ry="2" />
<text  x="13.00" y="65.5" >firedrake</text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (6,997 us, 0.02%)</title><rect x="117.5" y="183" width="0.2" height="15.0" fill="rgb(142.901423951428,160.457907728837,142.901423951428)" rx="2" ry="2" />
<text  x="120.51" y="193.5" ></text>
</g>
<g >
<title>firedrake.matrix_free.operators.ImplicitMatrixContext.__init__ (4,592 us, 0.01%)</title><rect x="116.0" y="103" width="0.1" height="15.0" fill="rgb(128.703291700861,128.703291700861,152.329669361457)" rx="2" ry="2" />
<text  x="118.98" y="113.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (46,442 us, 0.11%)</title><rect x="46.9" y="119" width="1.2" height="15.0" fill="rgb(153.361921834183,122.441400728737,122.441400728737)" rx="2" ry="2" />
<text  x="49.87" y="129.5" ></text>
</g>
</g>
</svg>
