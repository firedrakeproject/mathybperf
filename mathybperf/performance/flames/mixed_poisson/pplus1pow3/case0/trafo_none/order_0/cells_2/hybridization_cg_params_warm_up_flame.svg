<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="283" onload="init(evt)" viewBox="0 0 1200 283" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:13px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:18px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 13 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (1 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="283.0" fill="url(#background)"  />
<text id="title" x="600.00" y="26" >Firedrake example</text>
<text id="details" x="10.00" y="265" > </text>
<text id="unzoom" x="10.00" y="26" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="26" >Search</text>
<text id="ignorecase" x="1174.00" y="26" >ic</text>
<text id="matched" x="1090.00" y="265" > </text>
<g id="frames">
<g >
<title>CreateFunctionSpace (4,723 us, 0.02%)</title><rect x="198.5" y="167" width="0.2" height="15.0" fill="rgb(153.257698391257,153.257698391257,135.018076819171)" rx="2" ry="2" />
<text  x="201.48" y="177.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (11,776 us, 0.04%)</title><rect x="195.5" y="103" width="0.5" height="15.0" fill="rgb(142.587884735197,142.587884735197,155.017009948748)" rx="2" ry="2" />
<text  x="198.55" y="113.5" ></text>
</g>
<g >
<title>DMPlexStratify (3,643 us, 0.01%)</title><rect x="72.4" y="87" width="0.1" height="15.0" fill="rgb(152.012431704362,112.095309733441,112.095309733441)" rx="2" ry="2" />
<text  x="75.36" y="97.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (4,011 us, 0.01%)</title><rect x="1189.8" y="151" width="0.2" height="15.0" fill="rgb(150.104447713899,150.104447713899,119.736938921202)" rx="2" ry="2" />
<text  x="1192.83" y="161.5" ></text>
</g>
<g >
<title>firedrake.parloops.par_loop (1,357,243 us, 4.84%)</title><rect x="470.6" y="135" width="57.1" height="15.0" fill="rgb(140.07932917423,160.917318506521,140.07932917423)" rx="2" ry="2" />
<text  x="473.59" y="145.5" >fired..</text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (38,673 us, 0.14%)</title><rect x="69.0" y="119" width="1.6" height="15.0" fill="rgb(107.934241329224,145.019988492762,145.019988492762)" rx="2" ry="2" />
<text  x="71.99" y="129.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (4,686 us, 0.02%)</title><rect x="468.6" y="231" width="0.2" height="15.0" fill="rgb(137.516388852541,105.510746434637,137.516388852541)" rx="2" ry="2" />
<text  x="471.63" y="241.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_wrap_slate_loopy_knl_0 (797,176 us, 2.84%)</title><rect x="281.6" y="167" width="33.6" height="15.0" fill="rgb(143.025556886856,143.025556886856,155.101720687779)" rx="2" ry="2" />
<text  x="284.58" y="177.5" >Pa..</text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (4,011 us, 0.01%)</title><rect x="1189.8" y="135" width="0.2" height="15.0" fill="rgb(109.124267959485,109.124267959485,148.540180895384)" rx="2" ry="2" />
<text  x="1192.83" y="145.5" ></text>
</g>
<g >
<title>ParLoopExecute (14,664,328 us, 52.33%)</title><rect x="528.1" y="119" width="617.6" height="15.0" fill="rgb(110.273242144919,145.626396111646,145.626396111646)" rx="2" ry="2" />
<text  x="531.13" y="129.5" >ParLoopExecute</text>
</g>
<g >
<title>firedrake (28,021,395 us, 100.00%)</title><rect x="10.0" y="55" width="1180.0" height="15.0" fill="rgb(152.564771857838,116.329917576758,116.329917576758)" rx="2" ry="2" />
<text  x="13.00" y="65.5" >firedrake</text>
</g>
<g >
<title>Parloop_Cells_wrap_pyop2_kernel_uniform_extrusion (1,360,044 us, 4.85%)</title><rect x="11.4" y="119" width="57.2" height="15.0" fill="rgb(128.564864333123,150.36866853081,150.36866853081)" rx="2" ry="2" />
<text  x="14.36" y="129.5" >Parlo..</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (1,336,723 us, 4.77%)</title><rect x="471.4" y="183" width="56.3" height="15.0" fill="rgb(154.663333689504,132.41889161953,132.41889161953)" rx="2" ry="2" />
<text  x="474.45" y="193.5" >pyop2..</text>
</g>
<g >
<title>CreateFunctionSpace (38,673 us, 0.14%)</title><rect x="69.0" y="71" width="1.6" height="15.0" fill="rgb(136.766483863746,136.766483863746,153.890287199435)" rx="2" ry="2" />
<text  x="71.99" y="81.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (4,211 us, 0.02%)</title><rect x="527.7" y="135" width="0.2" height="15.0" fill="rgb(137.222255469168,137.222255469168,153.978501058549)" rx="2" ry="2" />
<text  x="530.74" y="145.5" ></text>
</g>
<g >
<title>firedrake.matrix_free.operators.ImplicitMatrixContext.__init__ (7,098 us, 0.03%)</title><rect x="197.0" y="103" width="0.3" height="15.0" fill="rgb(151.089380298751,151.089380298751,124.510073755487)" rx="2" ry="2" />
<text  x="200.01" y="113.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (20,672 us, 0.07%)</title><rect x="468.0" y="135" width="0.8" height="15.0" fill="rgb(137.394487877021,161.354385694438,137.394487877021)" rx="2" ry="2" />
<text  x="470.96" y="145.5" ></text>
</g>
<g >
<title>CreateMesh (18,201 us, 0.06%)</title><rect x="70.6" y="71" width="0.8" height="15.0" fill="rgb(143.505508692206,154.242168920202,154.242168920202)" rx="2" ry="2" />
<text  x="73.62" y="81.5" ></text>
</g>
<g >
<title>MatAssemblyEnd (5,580 us, 0.02%)</title><rect x="467.3" y="151" width="0.3" height="15.0" fill="rgb(133.639932885798,133.639932885798,153.285148300477)" rx="2" ry="2" />
<text  x="470.34" y="161.5" ></text>
</g>
<g >
<title>firedrake.interpolation.make_interpolator (41,690 us, 0.15%)</title><rect x="468.8" y="135" width="1.8" height="15.0" fill="rgb(154.343766585355,154.343766585355,140.281330375181)" rx="2" ry="2" />
<text  x="471.83" y="145.5" ></text>
</g>
<g >
<title>firedrake.utility_meshes.SquareMesh (9,442 us, 0.03%)</title><rect x="194.7" y="71" width="0.4" height="15.0" fill="rgb(148.694467473119,148.694467473119,112.903957754344)" rx="2" ry="2" />
<text  x="197.67" y="81.5" ></text>
</g>
<g >
<title>HybridOperatorAssembly (6,292,292 us, 22.46%)</title><rect x="199.2" y="135" width="265.0" height="15.0" fill="rgb(133.146774346529,162.045873943588,133.146774346529)" rx="2" ry="2" />
<text  x="202.23" y="145.5" >HybridOperatorAssembly</text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (8,531 us, 0.03%)</title><rect x="68.6" y="119" width="0.4" height="15.0" fill="rgb(135.766906554742,135.766906554742,153.696820623498)" rx="2" ry="2" />
<text  x="71.63" y="129.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.action (11,244 us, 0.04%)</title><rect x="195.1" y="87" width="0.4" height="15.0" fill="rgb(156.414371147918,145.843512134038,145.843512134038)" rx="2" ry="2" />
<text  x="198.07" y="97.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (1,338,948 us, 4.78%)</title><rect x="12.2" y="135" width="56.4" height="15.0" fill="rgb(113.073253261323,146.352324919602,146.352324919602)" rx="2" ry="2" />
<text  x="15.25" y="145.5" >pyop2..</text>
</g>
<g >
<title>ParLoopExecute (1,360,044 us, 4.85%)</title><rect x="11.4" y="103" width="57.2" height="15.0" fill="rgb(155.869124508406,141.663287897783,141.663287897783)" rx="2" ry="2" />
<text  x="14.36" y="113.5" >ParLo..</text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (13,153 us, 0.05%)</title><rect x="198.7" y="151" width="0.5" height="15.0" fill="rgb(154.098288597088,128.086879244344,128.086879244344)" rx="2" ry="2" />
<text  x="201.68" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (4,723 us, 0.02%)</title><rect x="198.5" y="183" width="0.2" height="15.0" fill="rgb(132.515263134652,132.515263134652,153.067470284126)" rx="2" ry="2" />
<text  x="201.48" y="193.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (14,540 us, 0.05%)</title><rect x="468.2" y="167" width="0.6" height="15.0" fill="rgb(149.255169745337,149.255169745337,115.621207227403)" rx="2" ry="2" />
<text  x="471.22" y="177.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (8,531 us, 0.03%)</title><rect x="68.6" y="151" width="0.4" height="15.0" fill="rgb(154.569744990314,154.569744990314,141.37645649152)" rx="2" ry="2" />
<text  x="71.63" y="161.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (1,350,250 us, 4.82%)</title><rect x="470.9" y="167" width="56.8" height="15.0" fill="rgb(132.978744377171,93.8830324665009,132.978744377171)" rx="2" ry="2" />
<text  x="473.88" y="177.5" >Parlo..</text>
</g>
<g >
<title>firedrake.functionspace.MixedFunctionSpace (4,723 us, 0.02%)</title><rect x="198.5" y="151" width="0.2" height="15.0" fill="rgb(155.36994030828,155.36994030828,145.254326109355)" rx="2" ry="2" />
<text  x="201.48" y="161.5" ></text>
</g>
<g >
<title>firedrake.mesh.MeshTopology._facets (17,575 us, 0.06%)</title><rect x="69.9" y="135" width="0.7" height="15.0" fill="rgb(146.545492690933,146.545492690933,155.782998585342)" rx="2" ry="2" />
<text  x="72.88" y="145.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (20,672 us, 0.07%)</title><rect x="468.0" y="151" width="0.8" height="15.0" fill="rgb(154.013677172518,127.438191655968,127.438191655968)" rx="2" ry="2" />
<text  x="470.96" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (4,723 us, 0.02%)</title><rect x="198.5" y="215" width="0.2" height="15.0" fill="rgb(105.041201821848,144.269941213072,144.269941213072)" rx="2" ry="2" />
<text  x="201.48" y="225.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (8,531 us, 0.03%)</title><rect x="68.6" y="135" width="0.4" height="15.0" fill="rgb(139.010817464111,153.076878601807,153.076878601807)" rx="2" ry="2" />
<text  x="71.63" y="145.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (4,686 us, 0.02%)</title><rect x="468.6" y="215" width="0.2" height="15.0" fill="rgb(152.963540575606,119.387144412978,119.387144412978)" rx="2" ry="2" />
<text  x="471.63" y="225.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (4,723 us, 0.02%)</title><rect x="198.5" y="199" width="0.2" height="15.0" fill="rgb(125.264759109813,149.513085695137,149.513085695137)" rx="2" ry="2" />
<text  x="201.48" y="209.5" ></text>
</g>
<g >
<title>Mesh: numbering (6,344 us, 0.02%)</title><rect x="71.0" y="87" width="0.2" height="15.0" fill="rgb(127.024388394175,149.969285879971,149.969285879971)" rx="2" ry="2" />
<text  x="73.95" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (4,686 us, 0.02%)</title><rect x="468.6" y="199" width="0.2" height="15.0" fill="rgb(134.130024683861,96.8331882523934,134.130024683861)" rx="2" ry="2" />
<text  x="471.63" y="209.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (38,673 us, 0.14%)</title><rect x="69.0" y="87" width="1.6" height="15.0" fill="rgb(106.245427742615,144.582147933271,144.582147933271)" rx="2" ry="2" />
<text  x="71.99" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (13,153 us, 0.05%)</title><rect x="198.7" y="183" width="0.5" height="15.0" fill="rgb(155.769759996225,140.901493304388,140.901493304388)" rx="2" ry="2" />
<text  x="201.68" y="193.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (10,562,075 us, 37.69%)</title><rect x="700.9" y="151" width="444.8" height="15.0" fill="rgb(151.066304767099,151.066304767099,124.398246179016)" rx="2" ry="2" />
<text  x="703.88" y="161.5" >pyop2.global_kernel.GlobalKernel.compile</text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.__init__ (30,140 us, 0.11%)</title><rect x="196.0" y="71" width="1.3" height="15.0" fill="rgb(155.256358975745,155.256358975745,144.703893497841)" rx="2" ry="2" />
<text  x="199.04" y="81.5" ></text>
</g>
<g >
<title>PCSetUp (7,850,881 us, 28.02%)</title><rect x="197.3" y="103" width="330.6" height="15.0" fill="rgb(146.151066162743,146.151066162743,155.706657966983)" rx="2" ry="2" />
<text  x="200.31" y="113.5" >PCSetUp</text>
</g>
<g >
<title>firedrake.ufl_expr.action (4,070 us, 0.01%)</title><rect x="197.1" y="119" width="0.2" height="15.0" fill="rgb(110.935536320731,145.798102009078,145.798102009078)" rx="2" ry="2" />
<text  x="200.14" y="129.5" ></text>
</g>
<g >
<title>FunctionSpaceData: CreateElement (7,190 us, 0.03%)</title><rect x="69.6" y="135" width="0.3" height="15.0" fill="rgb(156.101887066003,143.44780083936,143.44780083936)" rx="2" ry="2" />
<text  x="72.57" y="145.5" ></text>
</g>
<g >
<title>firedrake.functionspace.VectorFunctionSpace (8,531 us, 0.03%)</title><rect x="68.6" y="87" width="0.4" height="15.0" fill="rgb(133.060631880939,133.060631880939,153.173025525343)" rx="2" ry="2" />
<text  x="71.63" y="97.5" ></text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (1,053,080 us, 3.76%)</title><rect x="1145.7" y="119" width="44.3" height="15.0" fill="rgb(116.154778163498,116.154778163498,149.900924805838)" rx="2" ry="2" />
<text  x="1148.65" y="129.5" >fir..</text>
</g>
<g >
<title>Log_Event_form0_cell_integral_otherwise (5,344 us, 0.02%)</title><rect x="528.1" y="151" width="0.3" height="15.0" fill="rgb(150.719803082594,150.719803082594,122.719045707954)" rx="2" ry="2" />
<text  x="531.13" y="161.5" ></text>
</g>
<g >
<title>PetscBarrier (26,758 us, 0.10%)</title><rect x="71.4" y="71" width="1.1" height="15.0" fill="rgb(155.893377154255,155.893377154255,147.790981593695)" rx="2" ry="2" />
<text  x="74.38" y="81.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalProblem.__init__ (11,776 us, 0.04%)</title><rect x="195.5" y="87" width="0.5" height="15.0" fill="rgb(152.089329091133,152.089329091133,129.355979441642)" rx="2" ry="2" />
<text  x="198.55" y="97.5" ></text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (3,536,068 us, 12.62%)</title><rect x="315.3" y="151" width="148.9" height="15.0" fill="rgb(151.786687050004,151.786687050004,127.889329550019)" rx="2" ry="2" />
<text  x="318.30" y="161.5" >firedrake.tsfc_in..</text>
</g>
<g >
<title>CreateMesh (3,445 us, 0.01%)</title><rect x="70.8" y="87" width="0.2" height="15.0" fill="rgb(111.980444074967,111.980444074967,149.0929891758)" rx="2" ry="2" />
<text  x="73.81" y="97.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.solve (23,573,327 us, 84.13%)</title><rect x="197.3" y="71" width="992.7" height="15.0" fill="rgb(138.61652215636,138.61652215636,154.248359127037)" rx="2" ry="2" />
<text  x="200.31" y="81.5" >firedrake.variational_solver.NonlinearVariationalSolver.solve</text>
</g>
<g >
<title>BuildTwoSidedF (3,064 us, 0.01%)</title><rect x="467.2" y="183" width="0.1" height="15.0" fill="rgb(139.992699269635,139.992699269635,154.514715987671)" rx="2" ry="2" />
<text  x="470.21" y="193.5" ></text>
</g>
<g >
<title>firedrake.assemble.allocate_matrix (89,170 us, 0.32%)</title><rect x="464.2" y="135" width="3.8" height="15.0" fill="rgb(118.442494020956,147.744350301729,147.744350301729)" rx="2" ry="2" />
<text  x="467.20" y="145.5" ></text>
</g>
<g >
<title>MatAssemblyBegin (9,711 us, 0.03%)</title><rect x="466.9" y="167" width="0.4" height="15.0" fill="rgb(153.583749165052,124.142076932063,124.142076932063)" rx="2" ry="2" />
<text  x="469.93" y="177.5" ></text>
</g>
<g >
<title>firedrake.mesh._from_cell_list (4,866 us, 0.02%)</title><rect x="194.9" y="103" width="0.2" height="15.0" fill="rgb(134.528036073126,161.821017383445,134.528036073126)" rx="2" ry="2" />
<text  x="197.87" y="113.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (8,531 us, 0.03%)</title><rect x="68.6" y="103" width="0.4" height="15.0" fill="rgb(130.339464868311,130.339464868311,152.646348039028)" rx="2" ry="2" />
<text  x="71.63" y="113.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (17,876 us, 0.06%)</title><rect x="198.5" y="135" width="0.7" height="15.0" fill="rgb(128.280869196119,162.837998037841,128.280869196119)" rx="2" ry="2" />
<text  x="201.48" y="145.5" ></text>
</g>
<g >
<title>ParLoopExecute (1,350,250 us, 4.82%)</title><rect x="470.9" y="151" width="56.8" height="15.0" fill="rgb(152.569220858634,144.083628450249,152.569220858634)" rx="2" ry="2" />
<text  x="473.88" y="161.5" >ParLo..</text>
</g>
<g >
<title>CreateFunctionSpace (9,837 us, 0.04%)</title><rect x="468.4" y="183" width="0.4" height="15.0" fill="rgb(142.430995035275,160.534489180304,142.430995035275)" rx="2" ry="2" />
<text  x="471.42" y="193.5" ></text>
</g>
<g >
<title>BuildTwoSided (3,064 us, 0.01%)</title><rect x="467.2" y="199" width="0.1" height="15.0" fill="rgb(153.19966017958,153.19966017958,134.736814716425)" rx="2" ry="2" />
<text  x="470.21" y="209.5" ></text>
</g>
<g >
<title>FunctionSpaceData: CreateElement (13,153 us, 0.05%)</title><rect x="198.7" y="199" width="0.5" height="15.0" fill="rgb(130.721821387463,130.721821387463,152.720352526606)" rx="2" ry="2" />
<text  x="201.68" y="209.5" ></text>
</g>
<g >
<title>MatZeroInitial (9,131 us, 0.03%)</title><rect x="467.6" y="151" width="0.4" height="15.0" fill="rgb(152.010363839419,152.010363839419,128.973301683339)" rx="2" ry="2" />
<text  x="470.57" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (38,673 us, 0.14%)</title><rect x="69.0" y="103" width="1.6" height="15.0" fill="rgb(149.777310163666,149.777310163666,118.151580023921)" rx="2" ry="2" />
<text  x="71.99" y="113.5" ></text>
</g>
<g >
<title>DMPlexInterp (4,866 us, 0.02%)</title><rect x="194.9" y="119" width="0.2" height="15.0" fill="rgb(141.95960127747,160.611227699016,141.95960127747)" rx="2" ry="2" />
<text  x="197.87" y="129.5" ></text>
</g>
<g >
<title>SNESFunctionEval (15,722,446 us, 56.11%)</title><rect x="527.9" y="103" width="662.1" height="15.0" fill="rgb(153.267866993994,121.720313620618,121.720313620618)" rx="2" ry="2" />
<text  x="530.92" y="113.5" >SNESFunctionEval</text>
</g>
<g >
<title>firedrake.extrusion_utils.make_extruded_coords (1,392,260 us, 4.97%)</title><rect x="10.0" y="87" width="58.6" height="15.0" fill="rgb(156.664859405096,147.763922105734,147.763922105734)" rx="2" ry="2" />
<text  x="13.00" y="97.5" >fired..</text>
</g>
<g >
<title>Mesh: reorder (3,837 us, 0.01%)</title><rect x="71.2" y="87" width="0.2" height="15.0" fill="rgb(133.227184165518,151.577418116986,151.577418116986)" rx="2" ry="2" />
<text  x="74.22" y="97.5" ></text>
</g>
<g >
<title>firedrake.utility_meshes.RectangleMesh (9,442 us, 0.03%)</title><rect x="194.7" y="87" width="0.4" height="15.0" fill="rgb(114.202041396959,114.202041396959,149.52297575425)" rx="2" ry="2" />
<text  x="197.67" y="97.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_form1_cell_integral_otherwise (10,567,071 us, 37.71%)</title><rect x="700.7" y="135" width="445.0" height="15.0" fill="rgb(149.252688780453,149.252688780453,115.609184089889)" rx="2" ry="2" />
<text  x="703.67" y="145.5" >Parloop_Cells_wrap_form1_cell_integral_otherwise</text>
</g>
<g >
<title>ParLoopExecute (797,176 us, 2.84%)</title><rect x="281.6" y="151" width="33.6" height="15.0" fill="rgb(153.347560208308,122.331294930364,122.331294930364)" rx="2" ry="2" />
<text  x="284.58" y="161.5" >Pa..</text>
</g>
<g >
<title>firedrake.__init__ (2,901,043 us, 10.35%)</title><rect x="72.5" y="71" width="122.2" height="15.0" fill="rgb(148.784179313378,134.384459490531,148.784179313378)" rx="2" ry="2" />
<text  x="75.51" y="81.5" >firedrake.__i..</text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.local_to_global_map (3,419 us, 0.01%)</title><rect x="315.2" y="151" width="0.1" height="15.0" fill="rgb(130.998093433411,162.395659208514,130.998093433411)" rx="2" ry="2" />
<text  x="318.15" y="161.5" ></text>
</g>
<g >
<title>HybridInit (7,850,881 us, 28.02%)</title><rect x="197.3" y="119" width="330.6" height="15.0" fill="rgb(148.806886837513,148.806886837513,113.448759289486)" rx="2" ry="2" />
<text  x="200.31" y="129.5" >HybridInit</text>
</g>
<g >
<title>CreateSparsity (40,645 us, 0.15%)</title><rect x="465.6" y="151" width="1.7" height="15.0" fill="rgb(129.486859271945,129.486859271945,152.481327601022)" rx="2" ry="2" />
<text  x="468.63" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (13,153 us, 0.05%)</title><rect x="198.7" y="167" width="0.5" height="15.0" fill="rgb(136.189539073235,161.550540150869,136.189539073235)" rx="2" ry="2" />
<text  x="201.68" y="177.5" ></text>
</g>
<g >
<title>firedrake.assemble.allocate_matrix (12,528 us, 0.04%)</title><rect x="196.8" y="87" width="0.5" height="15.0" fill="rgb(107.430512602583,144.889392156225,144.889392156225)" rx="2" ry="2" />
<text  x="199.78" y="97.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.LinearVariationalProblem.__init__ (23,020 us, 0.08%)</title><rect x="195.1" y="71" width="0.9" height="15.0" fill="rgb(126.222504461327,149.761390045529,149.761390045529)" rx="2" ry="2" />
<text  x="198.07" y="81.5" ></text>
</g>
<g >
<title>CreateExtMesh (1,400,791 us, 5.00%)</title><rect x="10.0" y="71" width="59.0" height="15.0" fill="rgb(141.437048168795,141.437048168795,154.794267387509)" rx="2" ry="2" />
<text  x="13.00" y="81.5" >Creat..</text>
</g>
<g >
<title>Parloop_Cells_wrap_form0_cell_integral_otherwise (4,097,257 us, 14.62%)</title><rect x="528.1" y="135" width="172.6" height="15.0" fill="rgb(109.356829032178,109.356829032178,148.585192715905)" rx="2" ry="2" />
<text  x="531.13" y="145.5" >Parloop_Cells_wrap_f..</text>
</g>
<g >
<title>SNESSolve (23,573,327 us, 84.13%)</title><rect x="197.3" y="87" width="992.7" height="15.0" fill="rgb(143.032236633731,160.43661264102,143.032236633731)" rx="2" ry="2" />
<text  x="200.31" y="97.5" >SNESSolve</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (4,091,913 us, 14.60%)</title><rect x="528.4" y="151" width="172.3" height="15.0" fill="rgb(149.768084277305,159.340079303695,149.768084277305)" rx="2" ry="2" />
<text  x="531.35" y="161.5" >pyop2.global_kernel...</text>
</g>
<g >
<title>all (28,021,395 us, 100%)</title><rect x="10.0" y="39" width="1180.0" height="15.0" fill="rgb(125.727605466003,163.253645621814,125.727605466003)" rx="2" ry="2" />
<text  x="13.00" y="49.5" ></text>
</g>
</g>
</svg>
