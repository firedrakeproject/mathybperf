<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="267" onload="init(evt)" viewBox="0 0 1200 267" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:13px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:18px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 13 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (1 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="267.0" fill="url(#background)"  />
<text id="title" x="600.00" y="26" >Firedrake example</text>
<text id="details" x="10.00" y="249" > </text>
<text id="unzoom" x="10.00" y="26" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="26" >Search</text>
<text id="ignorecase" x="1174.00" y="26" >ic</text>
<text id="matched" x="1090.00" y="249" > </text>
<g id="frames">
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.solve (114,800,872 us, 94.48%)</title><rect x="75.2" y="71" width="1114.8" height="15.0" fill="rgb(123.14994717701,123.14994717701,151.254828485873)" rx="2" ry="2" />
<text  x="78.17" y="81.5" >firedrake.variational_solver.NonlinearVariationalSolver.solve</text>
</g>
<g >
<title>Parloop_Cells_wrap_form1_cell_integral_otherwise (5,341,742 us, 4.40%)</title><rect x="1128.5" y="135" width="51.9" height="15.0" fill="rgb(143.006085923138,160.440869733443,143.006085923138)" rx="2" ry="2" />
<text  x="1131.53" y="145.5" >Parl..</text>
</g>
<g >
<title>ParLoopExecute (947,335 us, 0.78%)</title><rect x="1092.5" y="151" width="9.2" height="15.0" fill="rgb(148.695887658884,148.695887658884,112.910840193054)" rx="2" ry="2" />
<text  x="1095.49" y="161.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (12,434 us, 0.01%)</title><rect x="1092.2" y="167" width="0.1" height="15.0" fill="rgb(144.332159801368,122.976159491005,144.332159801368)" rx="2" ry="2" />
<text  x="1095.21" y="177.5" ></text>
</g>
<g >
<title>firedrake.functionspace.VectorFunctionSpace (12,490 us, 0.01%)</title><rect x="28.0" y="87" width="0.2" height="15.0" fill="rgb(145.865759040134,154.854085677072,154.854085677072)" rx="2" ry="2" />
<text  x="31.03" y="97.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_wrap_slate_loopy_knl_14 (19,514,059 us, 16.06%)</title><rect x="95.9" y="167" width="189.5" height="15.0" fill="rgb(137.365024792447,137.365024792447,154.006133830796)" rx="2" ry="2" />
<text  x="98.92" y="177.5" >Parloop_Cells_wrap_wra..</text>
</g>
<g >
<title>firedrake.mesh.MeshTopology._facets (19,174 us, 0.02%)</title><rect x="28.4" y="135" width="0.1" height="15.0" fill="rgb(152.407419560278,115.123549962131,115.123549962131)" rx="2" ry="2" />
<text  x="31.36" y="145.5" ></text>
</g>
<g >
<title>CreateExtMesh (1,187,133 us, 0.98%)</title><rect x="16.6" y="71" width="11.6" height="15.0" fill="rgb(139.406616082982,153.179493058551,153.179493058551)" rx="2" ry="2" />
<text  x="19.62" y="81.5" ></text>
</g>
<g >
<title>RecoverFirstElim (29,224,471 us, 24.05%)</title><rect x="285.4" y="151" width="283.8" height="15.0" fill="rgb(155.389062511956,137.982812591661,137.982812591661)" rx="2" ry="2" />
<text  x="288.42" y="161.5" >RecoverFirstElim</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (947,335 us, 0.78%)</title><rect x="1092.5" y="183" width="9.2" height="15.0" fill="rgb(111.501524028035,111.501524028035,149.000294973168)" rx="2" ry="2" />
<text  x="1095.49" y="193.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (40,505 us, 0.03%)</title><rect x="28.2" y="71" width="0.3" height="15.0" fill="rgb(152.583199299852,116.4711946322,116.4711946322)" rx="2" ry="2" />
<text  x="31.15" y="81.5" ></text>
</g>
<g >
<title>HybridInit (28,718,767 us, 23.63%)</title><rect x="822.8" y="119" width="278.9" height="15.0" fill="rgb(156.236474682209,144.479639230266,144.479639230266)" rx="2" ry="2" />
<text  x="825.80" y="129.5" >HybridInit</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (2,764,362 us, 2.27%)</title><rect x="1101.7" y="151" width="26.8" height="15.0" fill="rgb(110.647902283979,110.647902283979,148.835077861415)" rx="2" ry="2" />
<text  x="1104.69" y="161.5" >p..</text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (2,460,226 us, 2.02%)</title><rect x="1068.3" y="151" width="23.9" height="15.0" fill="rgb(110.303499426688,110.303499426688,148.768419243875)" rx="2" ry="2" />
<text  x="1071.32" y="161.5" >f..</text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalProblem.__init__ (12,608 us, 0.01%)</title><rect x="75.1" y="87" width="0.1" height="15.0" fill="rgb(148.706430391538,159.512906680447,148.706430391538)" rx="2" ry="2" />
<text  x="78.05" y="97.5" ></text>
</g>
<g >
<title>firedrake.__init__ (4,740,426 us, 3.90%)</title><rect x="29.0" y="71" width="46.1" height="15.0" fill="rgb(153.662283438938,153.662283438938,136.978758204087)" rx="2" ry="2" />
<text  x="32.02" y="81.5" >fire..</text>
</g>
<g >
<title>firedrake.extrusion_utils.make_extruded_coords (1,174,643 us, 0.97%)</title><rect x="16.6" y="87" width="11.4" height="15.0" fill="rgb(137.671551199427,161.309282362884,137.671551199427)" rx="2" ry="2" />
<text  x="19.62" y="97.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (9,557,403 us, 7.87%)</title><rect x="699.8" y="199" width="92.8" height="15.0" fill="rgb(129.764614504979,162.596458103841,129.764614504979)" rx="2" ry="2" />
<text  x="702.79" y="209.5" >pyop2.glob..</text>
</g>
<g >
<title>SCForwardElim (24,405,213 us, 20.08%)</title><rect x="585.8" y="135" width="237.0" height="15.0" fill="rgb(135.954449177617,152.284486823827,152.284486823827)" rx="2" ry="2" />
<text  x="588.80" y="145.5" >SCForwardElim</text>
</g>
<g >
<title>Parloop_Cells_wrap_form0_cell_integral_otherwise (2,764,362 us, 2.27%)</title><rect x="1101.7" y="135" width="26.8" height="15.0" fill="rgb(136.797866717693,103.669533464089,136.797866717693)" rx="2" ry="2" />
<text  x="1104.69" y="145.5" >P..</text>
</g>
<g >
<title>Parloop_Cells_wrap_wrap_slate_loopy_knl_0 (22,545,241 us, 18.55%)</title><rect x="849.4" y="167" width="218.9" height="15.0" fill="rgb(156.581626762169,147.125805176632,147.125805176632)" rx="2" ry="2" />
<text  x="852.39" y="177.5" >Parloop_Cells_wrap_wrap_sl..</text>
</g>
<g >
<title>PetscBarrier (29,393 us, 0.02%)</title><rect x="28.7" y="71" width="0.3" height="15.0" fill="rgb(130.299387426673,162.509402046821,130.299387426673)" rx="2" ry="2" />
<text  x="31.73" y="81.5" ></text>
</g>
<g >
<title>firedrake.parloops.par_loop (1,067,778 us, 0.88%)</title><rect x="85.6" y="167" width="10.3" height="15.0" fill="rgb(122.343037042885,148.755602196304,148.755602196304)" rx="2" ry="2" />
<text  x="88.55" y="177.5" ></text>
</g>
<g >
<title>firedrake (121,512,231 us, 100.00%)</title><rect x="10.0" y="55" width="1180.0" height="15.0" fill="rgb(143.125772242728,143.125772242728,155.12111720827)" rx="2" ry="2" />
<text  x="13.00" y="65.5" >firedrake</text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (947,335 us, 0.78%)</title><rect x="1092.5" y="167" width="9.2" height="15.0" fill="rgb(144.470978150859,160.202398905674,144.470978150859)" rx="2" ry="2" />
<text  x="1095.49" y="177.5" ></text>
</g>
<g >
<title>ParLoopExecute (8,106,104 us, 6.67%)</title><rect x="1101.7" y="119" width="78.7" height="15.0" fill="rgb(118.501057311943,147.759533377171,147.759533377171)" rx="2" ry="2" />
<text  x="1104.69" y="129.5" >ParLoopE..</text>
</g>
<g >
<title>Parloop_Cells_wrap_wrap_slate_loopy_knl_7 (25,273,247 us, 20.80%)</title><rect x="299.4" y="183" width="245.4" height="15.0" fill="rgb(136.540054371306,161.49347952095,136.540054371306)" rx="2" ry="2" />
<text  x="302.42" y="193.5" >Parloop_Cells_wrap_wrap_slate..</text>
</g>
<g >
<title>Log_Event_slate_loopy_knl_0 (12,347 us, 0.01%)</title><rect x="941.4" y="183" width="0.2" height="15.0" fill="rgb(123.588410337765,149.078476754235,149.078476754235)" rx="2" ry="2" />
<text  x="944.44" y="193.5" ></text>
</g>
<g >
<title>firedrake.interpolation.make_interpolator (15,570 us, 0.01%)</title><rect x="1092.3" y="135" width="0.2" height="15.0" fill="rgb(152.135845344656,113.041480975698,113.041480975698)" rx="2" ry="2" />
<text  x="1095.33" y="145.5" ></text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (988,239 us, 0.81%)</title><rect x="1180.4" y="119" width="9.6" height="15.0" fill="rgb(119.594287875251,119.594287875251,150.566636362952)" rx="2" ry="2" />
<text  x="1183.40" y="129.5" ></text>
</g>
<g >
<title>HybridOperatorAssembly (27,690,612 us, 22.79%)</title><rect x="823.3" y="135" width="268.9" height="15.0" fill="rgb(129.24769779365,162.680607335917,129.24769779365)" rx="2" ry="2" />
<text  x="826.31" y="145.5" >HybridOperatorAssembly</text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (40,505 us, 0.03%)</title><rect x="28.2" y="103" width="0.3" height="15.0" fill="rgb(130.36857445843,130.36857445843,152.651982153244)" rx="2" ry="2" />
<text  x="31.15" y="113.5" ></text>
</g>
<g >
<title>ParLoopExecute (1,138,914 us, 0.94%)</title><rect x="17.0" y="103" width="11.0" height="15.0" fill="rgb(140.892614776956,140.892614776956,154.688893182637)" rx="2" ry="2" />
<text  x="19.97" y="113.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (10,841,044 us, 8.92%)</title><rect x="439.6" y="199" width="105.2" height="15.0" fill="rgb(152.138086953604,113.058666644301,113.058666644301)" rx="2" ry="2" />
<text  x="442.57" y="209.5" >pyop2.globa..</text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (3,109,409 us, 2.56%)</title><rect x="792.6" y="167" width="30.2" height="15.0" fill="rgb(152.164049267489,152.164049267489,129.718084911679)" rx="2" ry="2" />
<text  x="795.60" y="177.5" >f..</text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (12,434 us, 0.01%)</title><rect x="1092.2" y="151" width="0.1" height="15.0" fill="rgb(138.206549084602,152.868364577489,152.868364577489)" rx="2" ry="2" />
<text  x="1095.21" y="161.5" ></text>
</g>
<g >
<title>ParLoopExecute (22,545,241 us, 18.55%)</title><rect x="849.4" y="151" width="218.9" height="15.0" fill="rgb(155.915016949969,142.015129949765,142.015129949765)" rx="2" ry="2" />
<text  x="852.39" y="161.5" >ParLoopExecute</text>
</g>
<g >
<title>all (121,512,231 us, 100%)</title><rect x="10.0" y="39" width="1180.0" height="15.0" fill="rgb(147.028753957253,155.155602877806,155.155602877806)" rx="2" ry="2" />
<text  x="13.00" y="49.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_wrap_slate_loopy_knl_4 (17,568,975 us, 14.46%)</title><rect x="622.0" y="183" width="170.6" height="15.0" fill="rgb(155.186118321802,155.186118321802,144.363496482581)" rx="2" ry="2" />
<text  x="624.99" y="193.5" >Parloop_Cells_wrap_w..</text>
</g>
<g >
<title>firedrake.variational_solver.LinearVariationalProblem.__init__ (12,608 us, 0.01%)</title><rect x="75.1" y="71" width="0.1" height="15.0" fill="rgb(111.063645647585,145.831315538263,145.831315538263)" rx="2" ry="2" />
<text  x="78.05" y="81.5" ></text>
</g>
<g >
<title>SNESFunctionEval (9,094,343 us, 7.48%)</title><rect x="1101.7" y="103" width="88.3" height="15.0" fill="rgb(133.255633492412,133.255633492412,153.210767772725)" rx="2" ry="2" />
<text  x="1104.69" y="113.5" >SNESFunct..</text>
</g>
<g >
<title>ParLoopExecute (19,514,059 us, 16.06%)</title><rect x="95.9" y="151" width="189.5" height="15.0" fill="rgb(153.994013240923,127.287434847073,127.287434847073)" rx="2" ry="2" />
<text  x="98.92" y="161.5" >ParLoopExecute</text>
</g>
<g >
<title>firedrake.parloops.par_loop (1,015,735 us, 0.84%)</title><rect x="585.8" y="167" width="9.9" height="15.0" fill="rgb(155.952297360297,142.300946428946,142.300946428946)" rx="2" ry="2" />
<text  x="588.80" y="177.5" ></text>
</g>
<g >
<title>Log_Event_slate_loopy_knl_7 (40,521 us, 0.03%)</title><rect x="439.2" y="199" width="0.4" height="15.0" fill="rgb(148.295593836284,148.295593836284,110.970954745071)" rx="2" ry="2" />
<text  x="442.18" y="209.5" ></text>
</g>
<g >
<title>ParLoopExecute (25,273,247 us, 20.80%)</title><rect x="299.4" y="167" width="245.4" height="15.0" fill="rgb(112.086867727029,146.096595336637,146.096595336637)" rx="2" ry="2" />
<text  x="302.42" y="177.5" >ParLoopExecute</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (1,116,991 us, 0.92%)</title><rect x="17.2" y="135" width="10.8" height="15.0" fill="rgb(107.672975882665,144.952253006617,144.952253006617)" rx="2" ry="2" />
<text  x="20.18" y="145.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (15,847 us, 0.01%)</title><rect x="823.2" y="135" width="0.1" height="15.0" fill="rgb(140.695645469398,113.657591515332,140.695645469398)" rx="2" ry="2" />
<text  x="826.16" y="145.5" ></text>
</g>
<g >
<title>ParLoopExecute (1,015,735 us, 0.84%)</title><rect x="585.8" y="183" width="9.9" height="15.0" fill="rgb(151.282922677206,151.282922677206,125.448009897231)" rx="2" ry="2" />
<text  x="588.80" y="193.5" ></text>
</g>
<g >
<title>PCApply (76,987,762 us, 63.36%)</title><rect x="75.2" y="119" width="747.6" height="15.0" fill="rgb(145.201118130256,125.20286520878,145.201118130256)" rx="2" ry="2" />
<text  x="78.17" y="129.5" >PCApply</text>
</g>
<g >
<title>ParLoopExecute (1,067,778 us, 0.88%)</title><rect x="85.6" y="183" width="10.3" height="15.0" fill="rgb(153.97816242699,127.165911940254,127.165911940254)" rx="2" ry="2" />
<text  x="88.55" y="193.5" ></text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (2,509,561 us, 2.07%)</title><rect x="544.8" y="167" width="24.4" height="15.0" fill="rgb(148.101461450839,148.101461450839,110.03015933868)" rx="2" ry="2" />
<text  x="547.85" y="177.5" >f..</text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (1,707,683 us, 1.41%)</title><rect x="569.2" y="151" width="16.6" height="15.0" fill="rgb(135.601440579509,152.192966076169,152.192966076169)" rx="2" ry="2" />
<text  x="572.22" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (40,505 us, 0.03%)</title><rect x="28.2" y="119" width="0.3" height="15.0" fill="rgb(127.456103728507,162.972262183731,127.456103728507)" rx="2" ry="2" />
<text  x="31.15" y="129.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (40,505 us, 0.03%)</title><rect x="28.2" y="87" width="0.3" height="15.0" fill="rgb(155.322213822904,137.470305975593,137.470305975593)" rx="2" ry="2" />
<text  x="31.15" y="97.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (13,053,408 us, 10.74%)</title><rect x="941.6" y="183" width="126.7" height="15.0" fill="rgb(136.767849852185,152.495368480196,152.495368480196)" rx="2" ry="2" />
<text  x="944.56" y="193.5" >pyop2.global_k..</text>
</g>
<g >
<title>CreateMesh (19,212 us, 0.02%)</title><rect x="28.5" y="71" width="0.2" height="15.0" fill="rgb(155.206558415897,136.583614521874,136.583614521874)" rx="2" ry="2" />
<text  x="31.55" y="81.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (1,067,778 us, 0.88%)</title><rect x="85.6" y="199" width="10.3" height="15.0" fill="rgb(150.972230281598,150.972230281598,123.942346749282)" rx="2" ry="2" />
<text  x="88.55" y="209.5" ></text>
</g>
<g >
<title>KSPSolve (76,987,762 us, 63.36%)</title><rect x="75.2" y="103" width="747.6" height="15.0" fill="rgb(140.48408224699,160.85142847142,140.48408224699)" rx="2" ry="2" />
<text  x="78.17" y="113.5" >KSPSolve</text>
</g>
<g >
<title>HybridRHS (23,389,478 us, 19.25%)</title><rect x="595.7" y="151" width="227.1" height="15.0" fill="rgb(105.456969910461,144.377732939749,144.377732939749)" rx="2" ry="2" />
<text  x="598.66" y="161.5" >HybridRHS</text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (1,015,735 us, 0.84%)</title><rect x="585.8" y="199" width="9.9" height="15.0" fill="rgb(153.355737359004,122.393986419032,122.393986419032)" rx="2" ry="2" />
<text  x="588.80" y="209.5" ></text>
</g>
<g >
<title>PCSetUp (28,718,767 us, 23.63%)</title><rect x="822.8" y="103" width="278.9" height="15.0" fill="rgb(154.142626690113,128.4268046242,128.4268046242)" rx="2" ry="2" />
<text  x="825.80" y="113.5" >PCSetUp</text>
</g>
<g >
<title>SCBackSub (52,582,549 us, 43.27%)</title><rect x="75.2" y="135" width="510.6" height="15.0" fill="rgb(104.663780525424,144.172091247332,144.172091247332)" rx="2" ry="2" />
<text  x="78.17" y="145.5" >SCBackSub</text>
</g>
<g >
<title>ParLoopExecute (17,568,975 us, 14.46%)</title><rect x="622.0" y="167" width="170.6" height="15.0" fill="rgb(153.940834258132,126.879729312347,126.879729312347)" rx="2" ry="2" />
<text  x="624.99" y="177.5" >ParLoopExecute</text>
</g>
<g >
<title>HybridProject (1,067,778 us, 0.88%)</title><rect x="85.6" y="151" width="10.3" height="15.0" fill="rgb(140.297227432631,112.636645296117,140.297227432631)" rx="2" ry="2" />
<text  x="88.55" y="161.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (8,922,117 us, 7.34%)</title><rect x="198.8" y="183" width="86.6" height="15.0" fill="rgb(146.189512706599,127.735626310661,146.189512706599)" rx="2" ry="2" />
<text  x="201.78" y="193.5" >pyop2.glo..</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (5,341,742 us, 4.40%)</title><rect x="1128.5" y="151" width="51.9" height="15.0" fill="rgb(143.888519664781,160.297217728989,143.888519664781)" rx="2" ry="2" />
<text  x="1131.53" y="161.5" >pyop..</text>
</g>
<g >
<title>SNESSolve (114,800,872 us, 94.48%)</title><rect x="75.2" y="87" width="1114.8" height="15.0" fill="rgb(136.598622902382,103.158971187355,136.598622902382)" rx="2" ry="2" />
<text  x="78.17" y="97.5" >SNESSolve</text>
</g>
<g >
<title>HybridBreak (1,015,735 us, 0.84%)</title><rect x="585.8" y="151" width="9.9" height="15.0" fill="rgb(105.438049550625,144.372827661273,144.372827661273)" rx="2" ry="2" />
<text  x="588.80" y="161.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_pyop2_kernel_uniform_extrusion (1,138,914 us, 0.94%)</title><rect x="17.0" y="119" width="11.0" height="15.0" fill="rgb(149.915736046057,159.316042969247,149.915736046057)" rx="2" ry="2" />
<text  x="19.97" y="129.5" ></text>
</g>
<g >
<title>firedrake.parloops.par_loop (947,335 us, 0.78%)</title><rect x="1092.5" y="135" width="9.2" height="15.0" fill="rgb(147.057340173155,159.781363227626,147.057340173155)" rx="2" ry="2" />
<text  x="1095.49" y="145.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (1,052,812 us, 0.87%)</title><rect x="85.7" y="215" width="10.2" height="15.0" fill="rgb(136.075466563801,152.315861701726,152.315861701726)" rx="2" ry="2" />
<text  x="88.70" y="225.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (12,434 us, 0.01%)</title><rect x="1092.2" y="135" width="0.1" height="15.0" fill="rgb(147.117530806125,155.178619097884,155.178619097884)" rx="2" ry="2" />
<text  x="1095.21" y="145.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (1,000,406 us, 0.82%)</title><rect x="585.9" y="215" width="9.8" height="15.0" fill="rgb(147.930038554787,132.195723796641,147.930038554787)" rx="2" ry="2" />
<text  x="588.95" y="225.5" ></text>
</g>
</g>
</svg>
