<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="267" onload="init(evt)" viewBox="0 0 1200 267" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:13px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:18px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 13 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (1 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="267.0" fill="url(#background)"  />
<text id="title" x="600.00" y="26" >Firedrake example</text>
<text id="details" x="10.00" y="249" > </text>
<text id="unzoom" x="10.00" y="26" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="26" >Search</text>
<text id="ignorecase" x="1174.00" y="26" >ic</text>
<text id="matched" x="1090.00" y="249" > </text>
<g id="frames">
<g >
<title>CreateFunctionSpace (8,668 us, 0.01%)</title><rect x="35.6" y="103" width="0.2" height="15.0" fill="rgb(152.151530118762,152.151530118762,129.657415190924)" rx="2" ry="2" />
<text  x="38.63" y="113.5" ></text>
</g>
<g >
<title>HybridOperatorAssembly (16,629,684 us, 21.61%)</title><rect x="741.3" y="135" width="255.0" height="15.0" fill="rgb(154.546333099823,154.546333099823,141.262998868374)" rx="2" ry="2" />
<text  x="744.30" y="145.5" >HybridOperatorAssembly</text>
</g>
<g >
<title>ParLoopExecute (9,765,969 us, 12.69%)</title><rect x="1024.2" y="119" width="149.8" height="15.0" fill="rgb(144.031984077625,122.206959198914,144.031984077625)" rx="2" ry="2" />
<text  x="1027.25" y="129.5" >ParLoopExecute</text>
</g>
<g >
<title>KSPSolve (43,034,331 us, 55.92%)</title><rect x="80.6" y="103" width="659.8" height="15.0" fill="rgb(149.086998983813,149.086998983813,114.806225844633)" rx="2" ry="2" />
<text  x="83.57" y="113.5" >KSPSolve</text>
</g>
<g >
<title>Log_Event_form0_cell_integral_otherwise (8,145 us, 0.01%)</title><rect x="1024.2" y="151" width="0.2" height="15.0" fill="rgb(144.187589036314,122.605696905554,144.187589036314)" rx="2" ry="2" />
<text  x="1027.25" y="161.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.__init__ (7,996 us, 0.01%)</title><rect x="80.5" y="71" width="0.1" height="15.0" fill="rgb(131.540962128431,151.140249440704,151.140249440704)" rx="2" ry="2" />
<text  x="83.45" y="81.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (8,668 us, 0.01%)</title><rect x="35.6" y="151" width="0.2" height="15.0" fill="rgb(151.595198442991,141.587696010164,151.595198442991)" rx="2" ry="2" />
<text  x="38.63" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (8,668 us, 0.01%)</title><rect x="35.6" y="135" width="0.2" height="15.0" fill="rgb(144.642875131134,160.174415676327,144.642875131134)" rx="2" ry="2" />
<text  x="38.63" y="145.5" ></text>
</g>
<g >
<title>firedrake.matrix_free.operators.ImplicitMatrixContext.__init__ (7,996 us, 0.01%)</title><rect x="80.5" y="103" width="0.1" height="15.0" fill="rgb(147.723305219274,147.723305219274,108.197556062633)" rx="2" ry="2" />
<text  x="83.45" y="113.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (6,882,435 us, 8.94%)</title><rect x="1068.5" y="151" width="105.5" height="15.0" fill="rgb(134.565818227195,151.924471392236,151.924471392236)" rx="2" ry="2" />
<text  x="1071.46" y="161.5" >pyop2.globa..</text>
</g>
<g >
<title>firedrake.mesh.MeshTopology._facets (18,076 us, 0.02%)</title><rect x="36.1" y="135" width="0.3" height="15.0" fill="rgb(126.903470593804,163.062225717288,126.903470593804)" rx="2" ry="2" />
<text  x="39.09" y="145.5" ></text>
</g>
<g >
<title>SNESFunctionEval (10,810,839 us, 14.05%)</title><rect x="1024.2" y="103" width="165.8" height="15.0" fill="rgb(117.024998030747,117.024998030747,150.069354457564)" rx="2" ry="2" />
<text  x="1027.25" y="113.5" >SNESFunctionEval</text>
</g>
<g >
<title>SCBackSub (28,462,389 us, 36.98%)</title><rect x="80.6" y="135" width="436.4" height="15.0" fill="rgb(137.578548538687,152.705549621141,152.705549621141)" rx="2" ry="2" />
<text  x="83.57" y="145.5" >SCBackSub</text>
</g>
<g >
<title>ParLoopExecute (1,043,973 us, 1.36%)</title><rect x="19.6" y="103" width="16.0" height="15.0" fill="rgb(149.126461335369,149.126461335369,114.997466471404)" rx="2" ry="2" />
<text  x="22.62" y="113.5" ></text>
</g>
<g >
<title>ParLoopExecute (10,708,780 us, 13.91%)</title><rect x="552.4" y="167" width="164.2" height="15.0" fill="rgb(146.18075292958,159.92406347658,146.18075292958)" rx="2" ry="2" />
<text  x="555.44" y="177.5" >ParLoopExecute</text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (39,169 us, 0.05%)</title><rect x="35.8" y="87" width="0.6" height="15.0" fill="rgb(134.86600201998,161.765999671166,134.86600201998)" rx="2" ry="2" />
<text  x="38.76" y="97.5" ></text>
</g>
<g >
<title>all (76,961,876 us, 100%)</title><rect x="10.0" y="39" width="1180.0" height="15.0" fill="rgb(148.598842748725,148.598842748725,112.440545628437)" rx="2" ry="2" />
<text  x="13.00" y="49.5" ></text>
</g>
<g >
<title>HybridBreak (977,525 us, 1.27%)</title><rect x="517.0" y="151" width="15.0" height="15.0" fill="rgb(147.837513455067,147.837513455067,108.751026743784)" rx="2" ry="2" />
<text  x="519.97" y="161.5" ></text>
</g>
<g >
<title>firedrake.assemble.allocate_matrix (7,996 us, 0.01%)</title><rect x="80.5" y="87" width="0.1" height="15.0" fill="rgb(137.483264479304,161.339933689416,137.483264479304)" rx="2" ry="2" />
<text  x="83.45" y="97.5" ></text>
</g>
<g >
<title>SCForwardElim (14,571,942 us, 18.93%)</title><rect x="517.0" y="135" width="223.4" height="15.0" fill="rgb(155.371357311747,137.847072723392,137.847072723392)" rx="2" ry="2" />
<text  x="519.97" y="145.5" >SCForwardElim</text>
</g>
<g >
<title>firedrake.ufl_expr.action (11,145 us, 0.01%)</title><rect x="80.1" y="87" width="0.2" height="15.0" fill="rgb(127.503199986202,162.964595351083,127.503199986202)" rx="2" ry="2" />
<text  x="83.12" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (8,668 us, 0.01%)</title><rect x="35.6" y="119" width="0.2" height="15.0" fill="rgb(122.631111163124,148.830288079329,148.830288079329)" rx="2" ry="2" />
<text  x="38.63" y="129.5" ></text>
</g>
<g >
<title>firedrake.parloops.par_loop (1,772,419 us, 2.30%)</title><rect x="997.1" y="135" width="27.1" height="15.0" fill="rgb(155.410328168932,138.145849295144,138.145849295144)" rx="2" ry="2" />
<text  x="1000.07" y="145.5" >f..</text>
</g>
<g >
<title>firedrake.parloops.par_loop (977,525 us, 1.27%)</title><rect x="517.0" y="167" width="15.0" height="15.0" fill="rgb(142.949701514005,160.450048590743,142.949701514005)" rx="2" ry="2" />
<text  x="519.97" y="177.5" ></text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (2,523,916 us, 3.28%)</title><rect x="957.6" y="151" width="38.7" height="15.0" fill="rgb(105.088542837624,144.282214809754,144.282214809754)" rx="2" ry="2" />
<text  x="960.58" y="161.5" >fir..</text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (1,044,870 us, 1.36%)</title><rect x="1174.0" y="119" width="16.0" height="15.0" fill="rgb(129.983313990733,162.560855861974,129.983313990733)" rx="2" ry="2" />
<text  x="1176.98" y="129.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (14,953 us, 0.02%)</title><rect x="996.4" y="167" width="0.3" height="15.0" fill="rgb(112.743280906272,146.266776531256,146.266776531256)" rx="2" ry="2" />
<text  x="999.43" y="177.5" ></text>
</g>
<g >
<title>firedrake.__init__ (2,798,725 us, 3.64%)</title><rect x="37.1" y="71" width="42.9" height="15.0" fill="rgb(151.64674945367,151.64674945367,127.211170429324)" rx="2" ry="2" />
<text  x="40.06" y="81.5" >fir..</text>
</g>
<g >
<title>ParLoopExecute (12,355,338 us, 16.05%)</title><rect x="768.1" y="151" width="189.5" height="15.0" fill="rgb(146.708894366897,159.838086963528,146.708894366897)" rx="2" ry="2" />
<text  x="771.14" y="161.5" >ParLoopExecute</text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (39,169 us, 0.05%)</title><rect x="35.8" y="103" width="0.6" height="15.0" fill="rgb(141.666391330512,116.145127784437,141.666391330512)" rx="2" ry="2" />
<text  x="38.76" y="113.5" ></text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (1,740,974 us, 2.26%)</title><rect x="490.3" y="151" width="26.7" height="15.0" fill="rgb(138.402457374608,107.781297022432,138.402457374608)" rx="2" ry="2" />
<text  x="493.27" y="161.5" >f..</text>
</g>
<g >
<title>CreateMesh (18,607 us, 0.02%)</title><rect x="36.4" y="71" width="0.2" height="15.0" fill="rgb(155.447988786804,138.434580698834,138.434580698834)" rx="2" ry="2" />
<text  x="39.36" y="81.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (10,669,096 us, 13.86%)</title><rect x="553.0" y="199" width="163.6" height="15.0" fill="rgb(149.096851349766,159.449349780271,149.096851349766)" rx="2" ry="2" />
<text  x="556.05" y="209.5" >pyop2.global_kernel..</text>
</g>
<g >
<title>ParLoopExecute (1,764,394 us, 2.29%)</title><rect x="997.2" y="151" width="27.0" height="15.0" fill="rgb(144.244274642333,122.750953770978,144.244274642333)" rx="2" ry="2" />
<text  x="1000.19" y="161.5" >P..</text>
</g>
<g >
<title>Parloop_Cells_wrap_wrap_slate_loopy_knl_7 (10,984,359 us, 14.27%)</title><rect x="281.8" y="183" width="168.4" height="15.0" fill="rgb(151.957125160378,151.957125160378,128.715298854138)" rx="2" ry="2" />
<text  x="284.76" y="193.5" >Parloop_Cells_wrap_..</text>
</g>
<g >
<title>firedrake.functionspace.VectorFunctionSpace (8,668 us, 0.01%)</title><rect x="35.6" y="87" width="0.2" height="15.0" fill="rgb(155.041330158922,135.316864551737,135.316864551737)" rx="2" ry="2" />
<text  x="38.63" y="97.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (2,867,433 us, 3.73%)</title><rect x="1024.4" y="151" width="43.9" height="15.0" fill="rgb(124.15951509518,163.508916147296,124.15951509518)" rx="2" ry="2" />
<text  x="1027.37" y="161.5" >pyo..</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (1,043,973 us, 1.36%)</title><rect x="19.6" y="135" width="16.0" height="15.0" fill="rgb(145.481210800764,160.037942427783,145.481210800764)" rx="2" ry="2" />
<text  x="22.62" y="145.5" ></text>
</g>
<g >
<title>firedrake.functionspace.MixedFunctionSpace (9,538 us, 0.01%)</title><rect x="741.0" y="151" width="0.2" height="15.0" fill="rgb(149.611337154124,149.611337154124,117.34724928537)" rx="2" ry="2" />
<text  x="744.04" y="161.5" ></text>
</g>
<g >
<title>Log_Event_slate_loopy_knl_0 (11,937 us, 0.02%)</title><rect x="768.9" y="183" width="0.1" height="15.0" fill="rgb(155.63260202641,139.849948869139,139.849948869139)" rx="2" ry="2" />
<text  x="771.85" y="193.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (14,953 us, 0.02%)</title><rect x="996.4" y="151" width="0.3" height="15.0" fill="rgb(124.897898889878,163.388714134206,124.897898889878)" rx="2" ry="2" />
<text  x="999.43" y="161.5" ></text>
</g>
<g >
<title>firedrake.utility_meshes.RectangleMesh (9,576 us, 0.01%)</title><rect x="80.0" y="87" width="0.1" height="15.0" fill="rgb(156.744911076118,148.377651583568,148.377651583568)" rx="2" ry="2" />
<text  x="82.97" y="97.5" ></text>
</g>
<g >
<title>Log_Event_slate_loopy_knl_7 (42,188 us, 0.05%)</title><rect x="282.3" y="199" width="0.6" height="15.0" fill="rgb(133.890517569799,161.924799465382,133.890517569799)" rx="2" ry="2" />
<text  x="285.29" y="209.5" ></text>
</g>
<g >
<title>HybridRHS (13,594,417 us, 17.66%)</title><rect x="532.0" y="151" width="208.4" height="15.0" fill="rgb(145.939971376377,154.873325912394,154.873325912394)" rx="2" ry="2" />
<text  x="534.96" y="161.5" >HybridRHS</text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (969,744 us, 1.26%)</title><rect x="517.1" y="199" width="14.9" height="15.0" fill="rgb(156.549174889557,146.8770074866,146.8770074866)" rx="2" ry="2" />
<text  x="520.09" y="209.5" ></text>
</g>
<g >
<title>CreateExtMesh (1,084,324 us, 1.41%)</title><rect x="19.1" y="71" width="16.7" height="15.0" fill="rgb(145.749845870368,159.994211137382,145.749845870368)" rx="2" ry="2" />
<text  x="22.14" y="81.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.solve (72,358,841 us, 94.02%)</title><rect x="80.6" y="71" width="1109.4" height="15.0" fill="rgb(134.689027102274,134.689027102274,153.488198793989)" rx="2" ry="2" />
<text  x="83.57" y="81.5" >firedrake.variational_solver.NonlinearVariationalSolver.solve</text>
</g>
<g >
<title>HybridInit (18,513,671 us, 24.06%)</title><rect x="740.4" y="119" width="283.8" height="15.0" fill="rgb(124.155410366238,124.155410366238,151.449434264433)" rx="2" ry="2" />
<text  x="743.39" y="129.5" >HybridInit</text>
</g>
<g >
<title>firedrake.interpolation.make_interpolator (27,001 us, 0.04%)</title><rect x="996.7" y="135" width="0.4" height="15.0" fill="rgb(146.285464424659,127.981502588188,146.285464424659)" rx="2" ry="2" />
<text  x="999.66" y="145.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (7,915 us, 0.01%)</title><rect x="741.2" y="167" width="0.1" height="15.0" fill="rgb(151.326810574182,151.326810574182,125.66069739796)" rx="2" ry="2" />
<text  x="744.18" y="177.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (12,297,239 us, 15.98%)</title><rect x="769.0" y="183" width="188.6" height="15.0" fill="rgb(133.450691145766,133.450691145766,153.248520866923)" rx="2" ry="2" />
<text  x="772.03" y="193.5" >pyop2.global_kernel.Gl..</text>
</g>
<g >
<title>Parloop_Cells_wrap_form1_cell_integral_otherwise (6,890,391 us, 8.95%)</title><rect x="1068.3" y="135" width="105.7" height="15.0" fill="rgb(156.797227101269,148.77874110973,148.77874110973)" rx="2" ry="2" />
<text  x="1071.33" y="145.5" >Parloop_Cel..</text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (39,169 us, 0.05%)</title><rect x="35.8" y="119" width="0.6" height="15.0" fill="rgb(153.26918885654,121.730447900143,121.730447900143)" rx="2" ry="2" />
<text  x="38.76" y="129.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (1,764,394 us, 2.29%)</title><rect x="997.2" y="167" width="27.0" height="15.0" fill="rgb(125.879299025515,149.672410858467,149.672410858467)" rx="2" ry="2" />
<text  x="1000.19" y="177.5" >P..</text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (10,819 us, 0.01%)</title><rect x="80.3" y="103" width="0.2" height="15.0" fill="rgb(147.827194095445,147.827194095445,108.701017539463)" rx="2" ry="2" />
<text  x="83.29" y="113.5" ></text>
</g>
<g >
<title>ParLoopExecute (10,984,359 us, 14.27%)</title><rect x="281.8" y="167" width="168.4" height="15.0" fill="rgb(110.474389243739,110.474389243739,148.801494692337)" rx="2" ry="2" />
<text  x="284.76" y="177.5" >ParLoopExecute</text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (14,953 us, 0.02%)</title><rect x="996.4" y="135" width="0.3" height="15.0" fill="rgb(114.290091202907,114.290091202907,149.540017652176)" rx="2" ry="2" />
<text  x="999.43" y="145.5" ></text>
</g>
<g >
<title>firedrake.extrusion_utils.make_extruded_coords (1,075,656 us, 1.40%)</title><rect x="19.1" y="87" width="16.5" height="15.0" fill="rgb(121.828872633754,148.622300312455,148.622300312455)" rx="2" ry="2" />
<text  x="22.14" y="97.5" ></text>
</g>
<g >
<title>firedrake (76,961,876 us, 100.00%)</title><rect x="10.0" y="55" width="1180.0" height="15.0" fill="rgb(136.755728973471,161.458369701993,136.755728973471)" rx="2" ry="2" />
<text  x="13.00" y="65.5" >firedrake</text>
</g>
<g >
<title>CreateFunctionSpace (39,169 us, 0.05%)</title><rect x="35.8" y="71" width="0.6" height="15.0" fill="rgb(135.561308488132,161.652810246118,135.561308488132)" rx="2" ry="2" />
<text  x="38.76" y="81.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (14,953 us, 0.02%)</title><rect x="996.4" y="183" width="0.3" height="15.0" fill="rgb(152.910796775906,152.910796775906,133.336938221698)" rx="2" ry="2" />
<text  x="999.43" y="193.5" ></text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (1,549,809 us, 2.01%)</title><rect x="716.6" y="167" width="23.8" height="15.0" fill="rgb(135.70183479177,161.629933871107,135.70183479177)" rx="2" ry="2" />
<text  x="719.63" y="177.5" >f..</text>
</g>
<g >
<title>CreateFunctionSpace (17,453 us, 0.02%)</title><rect x="741.0" y="135" width="0.3" height="15.0" fill="rgb(151.201158385243,140.577968362185,151.201158385243)" rx="2" ry="2" />
<text  x="744.04" y="145.5" ></text>
</g>
<g >
<title>PCApply (43,034,331 us, 55.92%)</title><rect x="80.6" y="119" width="659.8" height="15.0" fill="rgb(117.833302260545,147.586411697178,147.586411697178)" rx="2" ry="2" />
<text  x="83.57" y="129.5" >PCApply</text>
</g>
<g >
<title>ParLoopExecute (9,293,710 us, 12.08%)</title><rect x="114.5" y="151" width="142.5" height="15.0" fill="rgb(145.812771354518,126.770226595953,145.812771354518)" rx="2" ry="2" />
<text  x="117.46" y="161.5" >ParLoopExecute</text>
</g>
<g >
<title>PCSetUp (18,513,671 us, 24.06%)</title><rect x="740.4" y="103" width="283.8" height="15.0" fill="rgb(155.768359418529,140.890755542059,140.890755542059)" rx="2" ry="2" />
<text  x="743.39" y="113.5" >PCSetUp</text>
</g>
<g >
<title>Log_Event_slate_loopy_knl_14 (11,810 us, 0.02%)</title><rect x="114.9" y="183" width="0.2" height="15.0" fill="rgb(147.913824897121,147.913824897121,109.120843732201)" rx="2" ry="2" />
<text  x="117.93" y="193.5" ></text>
</g>
<g >
<title>RecoverFirstElim (15,217,846 us, 19.77%)</title><rect x="257.0" y="151" width="233.3" height="15.0" fill="rgb(131.369384113908,162.335216539596,131.369384113908)" rx="2" ry="2" />
<text  x="259.95" y="161.5" >RecoverFirstElim</text>
</g>
<g >
<title>Parloop_Cells_wrap_wrap_slate_loopy_knl_0 (12,355,338 us, 16.05%)</title><rect x="768.1" y="167" width="189.5" height="15.0" fill="rgb(117.410658362956,147.476837353359,147.476837353359)" rx="2" ry="2" />
<text  x="771.14" y="177.5" >Parloop_Cells_wrap_wra..</text>
</g>
<g >
<title>Log_Event_slate_loopy_knl_4 (11,964 us, 0.02%)</title><rect x="552.9" y="199" width="0.1" height="15.0" fill="rgb(117.481593636256,147.49522797977,147.49522797977)" rx="2" ry="2" />
<text  x="555.86" y="209.5" ></text>
</g>
<g >
<title>ParLoopExecute (1,014,167 us, 1.32%)</title><rect x="98.9" y="183" width="15.6" height="15.0" fill="rgb(144.628050714658,123.73437995631,144.628050714658)" rx="2" ry="2" />
<text  x="101.91" y="193.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (7,915 us, 0.01%)</title><rect x="741.2" y="183" width="0.1" height="15.0" fill="rgb(147.605468205742,147.605468205742,107.626499766287)" rx="2" ry="2" />
<text  x="744.18" y="193.5" ></text>
</g>
<g >
<title>SNESSolve (72,358,841 us, 94.02%)</title><rect x="80.6" y="87" width="1109.4" height="15.0" fill="rgb(135.76168482923,161.620190841753,135.76168482923)" rx="2" ry="2" />
<text  x="83.57" y="97.5" >SNESSolve</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (1,014,167 us, 1.32%)</title><rect x="98.9" y="215" width="15.6" height="15.0" fill="rgb(154.17445765661,128.670842034007,128.670842034007)" rx="2" ry="2" />
<text  x="101.91" y="225.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.LinearVariationalProblem.__init__ (21,964 us, 0.03%)</title><rect x="80.1" y="71" width="0.4" height="15.0" fill="rgb(156.353519167238,145.376980282158,145.376980282158)" rx="2" ry="2" />
<text  x="83.12" y="81.5" ></text>
</g>
<g >
<title>firedrake.utility_meshes.SquareMesh (9,576 us, 0.01%)</title><rect x="80.0" y="71" width="0.1" height="15.0" fill="rgb(152.662356146125,117.078063786959,117.078063786959)" rx="2" ry="2" />
<text  x="82.97" y="81.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_wrap_slate_loopy_knl_14 (9,293,710 us, 12.08%)</title><rect x="114.5" y="167" width="142.5" height="15.0" fill="rgb(144.775486760361,144.775486760361,155.440416792328)" rx="2" ry="2" />
<text  x="117.46" y="177.5" >Parloop_Cells_wr..</text>
</g>
<g >
<title>PetscBarrier (26,635 us, 0.03%)</title><rect x="36.6" y="71" width="0.5" height="15.0" fill="rgb(116.327811792564,147.196099353628,147.196099353628)" rx="2" ry="2" />
<text  x="39.65" y="81.5" ></text>
</g>
<g >
<title>ParLoopExecute (969,744 us, 1.26%)</title><rect x="517.1" y="183" width="14.9" height="15.0" fill="rgb(110.380017773795,145.654078682095,145.654078682095)" rx="2" ry="2" />
<text  x="520.09" y="193.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_wrap_slate_loopy_knl_4 (10,708,780 us, 13.91%)</title><rect x="552.4" y="183" width="164.2" height="15.0" fill="rgb(119.370611669079,147.984973395687,147.984973395687)" rx="2" ry="2" />
<text  x="555.44" y="193.5" >Parloop_Cells_wrap_..</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (1,764,394 us, 2.29%)</title><rect x="997.2" y="183" width="27.0" height="15.0" fill="rgb(153.181066019725,121.054839484556,121.054839484556)" rx="2" ry="2" />
<text  x="1000.19" y="193.5" >p..</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (9,251,379 us, 12.02%)</title><rect x="115.1" y="183" width="141.9" height="15.0" fill="rgb(132.942460729651,162.079134299824,132.942460729651)" rx="2" ry="2" />
<text  x="118.11" y="193.5" >pyop2.global_ker..</text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalProblem.__init__ (10,819 us, 0.01%)</title><rect x="80.3" y="87" width="0.2" height="15.0" fill="rgb(146.883639201249,155.117980533657,155.117980533657)" rx="2" ry="2" />
<text  x="83.29" y="97.5" ></text>
</g>
<g >
<title>firedrake.assemble.allocate_matrix (9,870 us, 0.01%)</title><rect x="996.3" y="135" width="0.1" height="15.0" fill="rgb(143.420335578104,154.220087001731,154.220087001731)" rx="2" ry="2" />
<text  x="999.28" y="145.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_form0_cell_integral_otherwise (2,875,578 us, 3.74%)</title><rect x="1024.2" y="135" width="44.1" height="15.0" fill="rgb(108.68500326784,108.68500326784,148.455161922808)" rx="2" ry="2" />
<text  x="1027.25" y="145.5" >Par..</text>
</g>
<g >
<title>Parloop_Cells_wrap_pyop2_kernel_uniform_extrusion (1,043,973 us, 1.36%)</title><rect x="19.6" y="119" width="16.0" height="15.0" fill="rgb(135.712730925923,161.628160081826,135.712730925923)" rx="2" ry="2" />
<text  x="22.62" y="129.5" ></text>
</g>
<g >
<title>firedrake.parloops.par_loop (1,014,167 us, 1.32%)</title><rect x="98.9" y="167" width="15.6" height="15.0" fill="rgb(155.89349569069,141.85013362862,141.85013362862)" rx="2" ry="2" />
<text  x="101.91" y="177.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (1,014,167 us, 1.32%)</title><rect x="98.9" y="199" width="15.6" height="15.0" fill="rgb(112.90765795038,112.90765795038,149.27244992588)" rx="2" ry="2" />
<text  x="101.91" y="209.5" ></text>
</g>
<g >
<title>CreateSparsity (9,870 us, 0.01%)</title><rect x="996.3" y="151" width="0.1" height="15.0" fill="rgb(148.003534246526,148.003534246526,156.065200176747)" rx="2" ry="2" />
<text  x="999.28" y="161.5" ></text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (2,615,660 us, 3.40%)</title><rect x="450.2" y="167" width="40.1" height="15.0" fill="rgb(116.467955958156,116.467955958156,149.961539862869)" rx="2" ry="2" />
<text  x="453.17" y="177.5" >fir..</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (969,744 us, 1.26%)</title><rect x="517.1" y="215" width="14.9" height="15.0" fill="rgb(149.138918191013,135.29347786447,149.138918191013)" rx="2" ry="2" />
<text  x="520.09" y="225.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (7,915 us, 0.01%)</title><rect x="741.2" y="151" width="0.1" height="15.0" fill="rgb(127.112495476483,163.028198410805,127.112495476483)" rx="2" ry="2" />
<text  x="744.18" y="161.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (10,907,515 us, 14.17%)</title><rect x="282.9" y="199" width="167.3" height="15.0" fill="rgb(141.595188211755,115.962669792623,141.595188211755)" rx="2" ry="2" />
<text  x="285.93" y="209.5" >pyop2.global_kernel..</text>
</g>
<g >
<title>HybridProject (1,014,167 us, 1.32%)</title><rect x="98.9" y="151" width="15.6" height="15.0" fill="rgb(134.319691313291,134.319691313291,153.416714447734)" rx="2" ry="2" />
<text  x="101.91" y="161.5" ></text>
</g>
</g>
</svg>
