<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="283" onload="init(evt)" viewBox="0 0 1200 283" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:13px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:18px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 13 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (1 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="283.0" fill="url(#background)"  />
<text id="title" x="600.00" y="26" >Firedrake example</text>
<text id="details" x="10.00" y="265" > </text>
<text id="unzoom" x="10.00" y="26" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="26" >Search</text>
<text id="ignorecase" x="1174.00" y="26" >ic</text>
<text id="matched" x="1090.00" y="265" > </text>
<g id="frames">
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (5,423 us, 0.07%)</title><rect x="1128.4" y="199" width="0.8" height="15.0" fill="rgb(137.791531864567,137.791531864567,154.08868358669)" rx="2" ry="2" />
<text  x="1131.42" y="209.5" ></text>
</g>
<g >
<title>firedrake.mesh._from_cell_list (7,107 us, 0.09%)</title><rect x="795.6" y="103" width="1.1" height="15.0" fill="rgb(112.256083913177,112.256083913177,149.146338821905)" rx="2" ry="2" />
<text  x="798.59" y="113.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.derivative (1,276 us, 0.02%)</title><rect x="800.9" y="103" width="0.2" height="15.0" fill="rgb(106.000987891618,144.518774638568,144.518774638568)" rx="2" ry="2" />
<text  x="803.94" y="113.5" ></text>
</g>
<g >
<title>firedrake.assemble.allocate_matrix (10,837 us, 0.14%)</title><rect x="1124.6" y="135" width="1.6" height="15.0" fill="rgb(156.558778884086,146.950638111324,146.950638111324)" rx="2" ry="2" />
<text  x="1127.58" y="145.5" ></text>
</g>
<g >
<title>firedrake.mesh.ExtrudedMeshTopology.__init__ (1,189 us, 0.02%)</title><rect x="40.7" y="87" width="0.2" height="15.0" fill="rgb(144.739792581183,154.562168446973,154.562168446973)" rx="2" ry="2" />
<text  x="43.70" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (3,125 us, 0.04%)</title><rect x="807.1" y="215" width="0.4" height="15.0" fill="rgb(116.952290305391,116.952290305391,150.055281994592)" rx="2" ry="2" />
<text  x="810.07" y="225.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (3,125 us, 0.04%)</title><rect x="807.1" y="199" width="0.4" height="15.0" fill="rgb(109.296000517564,109.296000517564,148.573419455012)" rx="2" ry="2" />
<text  x="810.07" y="209.5" ></text>
</g>
<g >
<title>firedrake.assemble.allocate_matrix (9,946 us, 0.13%)</title><rect x="801.7" y="87" width="1.5" height="15.0" fill="rgb(151.664931371793,151.664931371793,127.299282801764)" rx="2" ry="2" />
<text  x="804.71" y="97.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (87,177 us, 1.11%)</title><rect x="1169.9" y="151" width="13.1" height="15.0" fill="rgb(142.122261270567,153.883549218295,153.883549218295)" rx="2" ry="2" />
<text  x="1172.86" y="161.5" ></text>
</g>
<g >
<title>firedrake.function.Function.__init__ (1,709 us, 0.02%)</title><rect x="1129.5" y="135" width="0.2" height="15.0" fill="rgb(114.38031736538,114.38031736538,149.557480780396)" rx="2" ry="2" />
<text  x="1132.45" y="145.5" ></text>
</g>
<g >
<title>ParLoopExecute (110,304 us, 1.41%)</title><rect x="1136.3" y="151" width="16.6" height="15.0" fill="rgb(149.81483076104,137.025503825165,149.81483076104)" rx="2" ry="2" />
<text  x="1139.28" y="161.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (88,698 us, 1.13%)</title><rect x="1155.7" y="151" width="13.4" height="15.0" fill="rgb(149.734058741214,149.734058741214,117.941976976653)" rx="2" ry="2" />
<text  x="1158.71" y="161.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (12,242 us, 0.16%)</title><rect x="806.7" y="135" width="1.8" height="15.0" fill="rgb(155.46637663924,138.575554234174,138.575554234174)" rx="2" ry="2" />
<text  x="809.67" y="145.5" ></text>
</g>
<g >
<title>firedrake.functionspace.make_scalar_element (1,190 us, 0.02%)</title><rect x="41.2" y="87" width="0.2" height="15.0" fill="rgb(141.97896778853,116.946104958107,141.97896778853)" rx="2" ry="2" />
<text  x="44.23" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.WithGeometry.split (1,420 us, 0.02%)</title><rect x="1129.2" y="183" width="0.3" height="15.0" fill="rgb(151.365631862489,151.365631862489,125.8488313336)" rx="2" ry="2" />
<text  x="1132.24" y="193.5" ></text>
</g>
<g >
<title>CreateMesh (4,917 us, 0.06%)</title><rect x="50.6" y="87" width="0.8" height="15.0" fill="rgb(133.659355991594,133.659355991594,153.288907611276)" rx="2" ry="2" />
<text  x="53.63" y="97.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (3,125 us, 0.04%)</title><rect x="807.1" y="167" width="0.4" height="15.0" fill="rgb(150.268767983639,150.268767983639,120.533260228404)" rx="2" ry="2" />
<text  x="810.07" y="177.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.local_to_global_map (1,259 us, 0.02%)</title><rect x="1124.4" y="151" width="0.2" height="15.0" fill="rgb(139.683741690697,139.683741690697,154.454917746587)" rx="2" ry="2" />
<text  x="1127.39" y="161.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (95,712 us, 1.22%)</title><rect x="1138.5" y="183" width="14.4" height="15.0" fill="rgb(128.795855502519,128.795855502519,152.347584935971)" rx="2" ry="2" />
<text  x="1141.48" y="193.5" ></text>
</g>
<g >
<title>firedrake.matrix_free.operators.ImplicitMatrixContext.__init__ (9,946 us, 0.13%)</title><rect x="801.7" y="103" width="1.5" height="15.0" fill="rgb(143.413535395977,120.622184452191,143.413535395977)" rx="2" ry="2" />
<text  x="804.71" y="113.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (109,331 us, 1.40%)</title><rect x="1136.4" y="167" width="16.5" height="15.0" fill="rgb(147.963854502947,147.963854502947,109.363294898897)" rx="2" ry="2" />
<text  x="1139.43" y="177.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (15,260 us, 0.19%)</title><rect x="1127.2" y="167" width="2.3" height="15.0" fill="rgb(156.519470581222,146.649274456035,146.649274456035)" rx="2" ry="2" />
<text  x="1130.15" y="177.5" ></text>
</g>
<g >
<title>firedrake.functionspace.MixedFunctionSpace (4,753 us, 0.06%)</title><rect x="806.8" y="151" width="0.7" height="15.0" fill="rgb(147.458921781736,147.458921781736,155.959791312594)" rx="2" ry="2" />
<text  x="809.83" y="161.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_form0_cell_integral_otherwise (96,550 us, 1.23%)</title><rect x="1154.5" y="135" width="14.6" height="15.0" fill="rgb(150.587168579937,159.206739998615,150.587168579937)" rx="2" ry="2" />
<text  x="1157.52" y="145.5" ></text>
</g>
<g >
<title>firedrake.mesh.MeshTopology._facets (26,241 us, 0.34%)</title><rect x="45.7" y="135" width="3.9" height="15.0" fill="rgb(153.375770498663,153.375770498663,135.590272416595)" rx="2" ry="2" />
<text  x="48.67" y="145.5" ></text>
</g>
<g >
<title>ParLoopExecute (1,968,673 us, 25.15%)</title><rect x="827.6" y="151" width="296.8" height="15.0" fill="rgb(109.601957004288,109.601957004288,148.63263683954)" rx="2" ry="2" />
<text  x="830.61" y="161.5" >ParLoopExecute</text>
</g>
<g >
<title>SNESFunctionEval (243,099 us, 3.11%)</title><rect x="1153.4" y="103" width="36.6" height="15.0" fill="rgb(132.038282986829,162.2263260254,132.038282986829)" rx="2" ry="2" />
<text  x="1156.35" y="113.5" >SN..</text>
</g>
<g >
<title>Log_Event_form1_cell_integral_otherwise (2,652 us, 0.03%)</title><rect x="1169.5" y="151" width="0.4" height="15.0" fill="rgb(147.974682271112,159.632028467493,147.974682271112)" rx="2" ry="2" />
<text  x="1172.46" y="161.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (13,235 us, 0.17%)</title><rect x="798.9" y="103" width="2.0" height="15.0" fill="rgb(151.167510999192,151.167510999192,124.888707149928)" rx="2" ry="2" />
<text  x="801.94" y="113.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.solve (2,565,790 us, 32.78%)</title><rect x="803.2" y="71" width="386.8" height="15.0" fill="rgb(154.242639396142,129.193568703757,129.193568703757)" rx="2" ry="2" />
<text  x="806.21" y="81.5" >firedrake.variational_solver.NonlinearVariationa..</text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (20,526 us, 0.26%)</title><rect x="1126.4" y="151" width="3.1" height="15.0" fill="rgb(153.289555006317,121.886588381764,121.886588381764)" rx="2" ry="2" />
<text  x="1129.36" y="161.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (10,862 us, 0.14%)</title><rect x="1127.6" y="183" width="1.6" height="15.0" fill="rgb(126.6227575577,126.6227575577,151.926985333748)" rx="2" ry="2" />
<text  x="1130.60" y="193.5" ></text>
</g>
<g >
<title>MatZeroInitial (2,617 us, 0.03%)</title><rect x="1125.8" y="151" width="0.4" height="15.0" fill="rgb(148.869202117332,148.869202117332,113.750748722456)" rx="2" ry="2" />
<text  x="1128.82" y="161.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (4,048 us, 0.05%)</title><rect x="802.6" y="119" width="0.6" height="15.0" fill="rgb(128.608685729988,128.608685729988,152.311358528385)" rx="2" ry="2" />
<text  x="805.60" y="129.5" ></text>
</g>
<g >
<title>firedrake.mesh.make_mesh_from_coordinates (1,210 us, 0.02%)</title><rect x="40.9" y="87" width="0.2" height="15.0" fill="rgb(134.385096037155,134.385096037155,153.429373426546)" rx="2" ry="2" />
<text  x="43.88" y="97.5" ></text>
</g>
<g >
<title>DMPlexInterp (4,939 us, 0.06%)</title><rect x="795.9" y="119" width="0.8" height="15.0" fill="rgb(127.054881469629,163.037577435177,127.054881469629)" rx="2" ry="2" />
<text  x="798.91" y="129.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (53,101 us, 0.68%)</title><rect x="41.6" y="103" width="8.0" height="15.0" fill="rgb(139.766530058578,139.766530058578,154.47094130166)" rx="2" ry="2" />
<text  x="44.62" y="113.5" ></text>
</g>
<g >
<title>firedrake.interpolation.make_interpolator (35,186 us, 0.45%)</title><rect x="1129.7" y="135" width="5.3" height="15.0" fill="rgb(151.580148168071,151.580148168071,126.88841035296)" rx="2" ry="2" />
<text  x="1132.71" y="145.5" ></text>
</g>
<g >
<title>CreateMesh (1,650 us, 0.02%)</title><rect x="795.3" y="103" width="0.3" height="15.0" fill="rgb(152.618993162658,116.745614247047,116.745614247047)" rx="2" ry="2" />
<text  x="798.34" y="113.5" ></text>
</g>
<g >
<title>DMPlexSymmetrize (2,791 us, 0.04%)</title><rect x="58.4" y="87" width="0.4" height="15.0" fill="rgb(153.699855279081,125.032223806291,125.032223806291)" rx="2" ry="2" />
<text  x="61.35" y="97.5" ></text>
</g>
<g >
<title>ParLoopExecute (147,387 us, 1.88%)</title><rect x="16.7" y="103" width="22.2" height="15.0" fill="rgb(133.785953385772,133.785953385772,153.31341033273)" rx="2" ry="2" />
<text  x="19.69" y="113.5" ></text>
</g>
<g >
<title>firedrake (7,827,519 us, 100.00%)</title><rect x="10.0" y="55" width="1180.0" height="15.0" fill="rgb(140.623823773763,153.495065422827,153.495065422827)" rx="2" ry="2" />
<text  x="13.00" y="65.5" >firedrake</text>
</g>
<g >
<title>Mesh: numbering (9,163 us, 0.12%)</title><rect x="51.4" y="87" width="1.3" height="15.0" fill="rgb(151.840556132164,151.840556132164,128.150387409718)" rx="2" ry="2" />
<text  x="54.37" y="97.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_form1_cell_integral_otherwise (92,357 us, 1.18%)</title><rect x="1169.1" y="135" width="13.9" height="15.0" fill="rgb(136.97313575468,161.422977900401,136.97313575468)" rx="2" ry="2" />
<text  x="1172.08" y="145.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (2,074 us, 0.03%)</title><rect x="1189.7" y="183" width="0.3" height="15.0" fill="rgb(139.889498128307,153.304684699931,153.304684699931)" rx="2" ry="2" />
<text  x="1192.69" y="193.5" ></text>
</g>
<g >
<title>Mesh: reorder (5,204 us, 0.07%)</title><rect x="52.7" y="87" width="0.8" height="15.0" fill="rgb(110.333762706269,110.333762706269,148.774276652826)" rx="2" ry="2" />
<text  x="55.75" y="97.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalProblem.__init__ (14,511 us, 0.19%)</title><rect x="798.9" y="87" width="2.2" height="15.0" fill="rgb(127.490057447868,127.490057447868,152.09484982862)" rx="2" ry="2" />
<text  x="801.94" y="97.5" ></text>
</g>
<g >
<title>FunctionSpaceData: CreateElement (1,004 us, 0.01%)</title><rect x="40.4" y="167" width="0.1" height="15.0" fill="rgb(121.906883131445,121.906883131445,151.014235444796)" rx="2" ry="2" />
<text  x="43.36" y="177.5" ></text>
</g>
<g >
<title>firedrake.__init__ (4,881,406 us, 62.36%)</title><rect x="58.8" y="71" width="735.8" height="15.0" fill="rgb(127.475916741958,162.969036809449,127.475916741958)" rx="2" ry="2" />
<text  x="61.77" y="81.5" >firedrake.__init__</text>
</g>
<g >
<title>firedrake.parloops.par_loop (118,716 us, 1.52%)</title><rect x="1135.0" y="135" width="17.9" height="15.0" fill="rgb(152.801815084856,118.147248983897,118.147248983897)" rx="2" ry="2" />
<text  x="1138.02" y="145.5" ></text>
</g>
<g >
<title>firedrake.utility_meshes.SquareMesh (11,361 us, 0.15%)</title><rect x="794.9" y="71" width="1.8" height="15.0" fill="rgb(130.033122445001,162.552747508953,130.033122445001)" rx="2" ry="2" />
<text  x="797.94" y="81.5" ></text>
</g>
<g >
<title>firedrake.functionspace.make_scalar_element (2,303 us, 0.03%)</title><rect x="1128.1" y="199" width="0.3" height="15.0" fill="rgb(138.460717035341,161.180813505875,138.460717035341)" rx="2" ry="2" />
<text  x="1131.08" y="209.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (11,852 us, 0.15%)</title><rect x="38.9" y="103" width="1.8" height="15.0" fill="rgb(140.144789464977,160.90666218012,140.144789464977)" rx="2" ry="2" />
<text  x="41.91" y="113.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (3,761 us, 0.05%)</title><rect x="1128.7" y="231" width="0.5" height="15.0" fill="rgb(142.114466239877,160.586017123741,142.114466239877)" rx="2" ry="2" />
<text  x="1131.67" y="241.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (53,101 us, 0.68%)</title><rect x="41.6" y="119" width="8.0" height="15.0" fill="rgb(135.857123993378,152.259254368654,152.259254368654)" rx="2" ry="2" />
<text  x="44.62" y="129.5" ></text>
</g>
<g >
<title>CreateExtMesh (206,044 us, 2.63%)</title><rect x="10.0" y="71" width="31.1" height="15.0" fill="rgb(112.970074159441,146.325574782077,146.325574782077)" rx="2" ry="2" />
<text  x="13.00" y="81.5" >Cr..</text>
</g>
<g >
<title>all (7,827,519 us, 100%)</title><rect x="10.0" y="39" width="1180.0" height="15.0" fill="rgb(132.235392079961,162.194238498611,132.235392079961)" rx="2" ry="2" />
<text  x="13.00" y="49.5" ></text>
</g>
<g >
<title>firedrake.functionspace.MixedFunctionSpace (1,978 us, 0.03%)</title><rect x="794.6" y="71" width="0.3" height="15.0" fill="rgb(154.659709877187,132.39110905843,132.39110905843)" rx="2" ry="2" />
<text  x="797.65" y="81.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (11,852 us, 0.15%)</title><rect x="38.9" y="135" width="1.8" height="15.0" fill="rgb(153.779623045977,153.779623045977,137.547403992042)" rx="2" ry="2" />
<text  x="41.91" y="145.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_wrap_slate_loopy_knl_0 (1,968,673 us, 25.15%)</title><rect x="827.6" y="167" width="296.8" height="15.0" fill="rgb(155.620894621187,155.620894621187,146.470489318059)" rx="2" ry="2" />
<text  x="830.61" y="177.5" >Parloop_Cells_wrap_wrap_slate_loopy_..</text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (3,125 us, 0.04%)</title><rect x="807.1" y="183" width="0.4" height="15.0" fill="rgb(147.780173505037,147.780173505037,108.473148524408)" rx="2" ry="2" />
<text  x="810.07" y="193.5" ></text>
</g>
<g >
<title>firedrake.utility_meshes.RectangleMesh (11,361 us, 0.15%)</title><rect x="794.9" y="87" width="1.8" height="15.0" fill="rgb(148.005846201295,148.005846201295,109.566793129353)" rx="2" ry="2" />
<text  x="797.94" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (6,426 us, 0.08%)</title><rect x="807.5" y="183" width="1.0" height="15.0" fill="rgb(155.453141569658,155.453141569658,145.657532222189)" rx="2" ry="2" />
<text  x="810.54" y="193.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (54,502 us, 0.70%)</title><rect x="41.4" y="87" width="8.2" height="15.0" fill="rgb(151.348612151707,151.348612151707,125.766351196733)" rx="2" ry="2" />
<text  x="44.41" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.boundary_nodes (1,259 us, 0.02%)</title><rect x="1124.4" y="167" width="0.2" height="15.0" fill="rgb(150.73146838146,150.73146838146,122.775577540923)" rx="2" ry="2" />
<text  x="1127.39" y="177.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (2,074 us, 0.03%)</title><rect x="1189.7" y="167" width="0.3" height="15.0" fill="rgb(136.91222142957,161.432894185884,136.91222142957)" rx="2" ry="2" />
<text  x="1192.69" y="177.5" ></text>
</g>
<g >
<title>firedrake.extrusion_utils.make_extruded_coords (190,703 us, 2.44%)</title><rect x="10.2" y="87" width="28.7" height="15.0" fill="rgb(148.210400654982,148.210400654982,110.558095481836)" rx="2" ry="2" />
<text  x="13.16" y="97.5" >f..</text>
</g>
<g >
<title>FunctionSpaceData: CreateElement (8,280 us, 0.11%)</title><rect x="44.4" y="135" width="1.3" height="15.0" fill="rgb(139.858058270455,160.953339351321,139.858058270455)" rx="2" ry="2" />
<text  x="47.42" y="145.5" ></text>
</g>
<g >
<title>HybridOperatorAssembly (2,096,634 us, 26.79%)</title><rect x="808.5" y="135" width="316.1" height="15.0" fill="rgb(154.508850968331,131.234524090537,131.234524090537)" rx="2" ry="2" />
<text  x="811.51" y="145.5" >HybridOperatorAssembly</text>
</g>
<g >
<title>CreateFunctionSpace (56,791 us, 0.73%)</title><rect x="41.1" y="71" width="8.5" height="15.0" fill="rgb(131.050028079484,131.050028079484,152.783876402481)" rx="2" ry="2" />
<text  x="44.06" y="81.5" ></text>
</g>
<g >
<title>Log_Event_form0_cell_integral_otherwise (5,273 us, 0.07%)</title><rect x="1154.9" y="151" width="0.8" height="15.0" fill="rgb(129.84536147068,150.700649270176,150.700649270176)" rx="2" ry="2" />
<text  x="1157.91" y="161.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (2,917 us, 0.04%)</title><rect x="1152.9" y="135" width="0.5" height="15.0" fill="rgb(115.791528360308,147.057062908228,147.057062908228)" rx="2" ry="2" />
<text  x="1155.91" y="145.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.action (15,168 us, 0.19%)</title><rect x="796.7" y="87" width="2.2" height="15.0" fill="rgb(133.082960803627,94.1500870592947,133.082960803627)" rx="2" ry="2" />
<text  x="799.66" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (11,852 us, 0.15%)</title><rect x="38.9" y="151" width="1.8" height="15.0" fill="rgb(149.010186671546,149.010186671546,114.433981562106)" rx="2" ry="2" />
<text  x="41.91" y="161.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.__init__ (13,765 us, 0.18%)</title><rect x="801.1" y="71" width="2.1" height="15.0" fill="rgb(149.981169319158,149.981169319158,119.139512854379)" rx="2" ry="2" />
<text  x="804.13" y="81.5" ></text>
</g>
<g >
<title>firedrake.mesh._Facets.__init__ (1,381 us, 0.02%)</title><rect x="49.4" y="151" width="0.2" height="15.0" fill="rgb(133.566755308675,151.665455080027,151.665455080027)" rx="2" ry="2" />
<text  x="52.41" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (3,761 us, 0.05%)</title><rect x="1128.7" y="215" width="0.5" height="15.0" fill="rgb(108.485108746059,145.1628059712,145.1628059712)" rx="2" ry="2" />
<text  x="1131.67" y="225.5" ></text>
</g>
<g >
<title>firedrake.function.Function.split (1,276 us, 0.02%)</title><rect x="800.9" y="119" width="0.2" height="15.0" fill="rgb(148.964556058654,148.964556058654,114.212848591937)" rx="2" ry="2" />
<text  x="803.94" y="129.5" ></text>
</g>
<g >
<title>CreateSparsity (6,729 us, 0.09%)</title><rect x="1124.8" y="151" width="1.0" height="15.0" fill="rgb(135.921699432786,135.921699432786,153.726780535378)" rx="2" ry="2" />
<text  x="1127.81" y="161.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (8,041 us, 0.10%)</title><rect x="1188.8" y="135" width="1.2" height="15.0" fill="rgb(111.048524073535,111.048524073535,148.91261756262)" rx="2" ry="2" />
<text  x="1191.79" y="145.5" ></text>
</g>
<g >
<title>HybridInit (2,322,691 us, 29.67%)</title><rect x="803.2" y="119" width="350.2" height="15.0" fill="rgb(137.907634824579,106.513314237984,137.907634824579)" rx="2" ry="2" />
<text  x="806.21" y="129.5" >HybridInit</text>
</g>
<g >
<title>SNESSolve (2,565,790 us, 32.78%)</title><rect x="803.2" y="87" width="386.8" height="15.0" fill="rgb(153.2377214892,153.2377214892,134.921265678432)" rx="2" ry="2" />
<text  x="806.21" y="97.5" >SNESSolve</text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (1,089 us, 0.01%)</title><rect x="1189.8" y="199" width="0.2" height="15.0" fill="rgb(140.181330465258,112.339659317223,140.181330465258)" rx="2" ry="2" />
<text  x="1192.84" y="209.5" ></text>
</g>
<g >
<title>DMPlexStratify (4,978 us, 0.06%)</title><rect x="57.6" y="87" width="0.8" height="15.0" fill="rgb(147.775693131153,147.775693131153,108.45143594328)" rx="2" ry="2" />
<text  x="60.60" y="97.5" ></text>
</g>
<g >
<title>CreateMesh (25,939 us, 0.33%)</title><rect x="49.6" y="71" width="3.9" height="15.0" fill="rgb(134.697943134514,161.793358094382,134.697943134514)" rx="2" ry="2" />
<text  x="52.62" y="81.5" ></text>
</g>
<g >
<title>firedrake.mesh._Facets.__init__ (1,253 us, 0.02%)</title><rect x="40.5" y="167" width="0.2" height="15.0" fill="rgb(153.260103218388,121.660791340976,121.660791340976)" rx="2" ry="2" />
<text  x="43.51" y="177.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.LinearVariationalProblem.__init__ (29,679 us, 0.38%)</title><rect x="796.7" y="71" width="4.4" height="15.0" fill="rgb(150.730704327059,150.730704327059,122.771874815747)" rx="2" ry="2" />
<text  x="799.66" y="81.5" ></text>
</g>
<g >
<title>firedrake.functionspace.VectorFunctionSpace (11,852 us, 0.15%)</title><rect x="38.9" y="87" width="1.8" height="15.0" fill="rgb(152.080891988855,152.080891988855,129.315091945989)" rx="2" ry="2" />
<text  x="41.91" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (11,852 us, 0.15%)</title><rect x="38.9" y="119" width="1.8" height="15.0" fill="rgb(137.155781740907,104.586690711075,137.155781740907)" rx="2" ry="2" />
<text  x="41.91" y="129.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (118,007 us, 1.51%)</title><rect x="21.1" y="135" width="17.8" height="15.0" fill="rgb(154.176890942009,128.689497222067,128.689497222067)" rx="2" ry="2" />
<text  x="24.12" y="145.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.action (5,898 us, 0.08%)</title><rect x="801.7" y="119" width="0.9" height="15.0" fill="rgb(154.817366477437,154.817366477437,142.576468313732)" rx="2" ry="2" />
<text  x="804.71" y="129.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (21,497 us, 0.27%)</title><rect x="1126.2" y="135" width="3.3" height="15.0" fill="rgb(155.893403763362,141.849428852445,141.849428852445)" rx="2" ry="2" />
<text  x="1129.21" y="145.5" ></text>
</g>
<g >
<title>FunctionSpaceData: CreateElement (5,261 us, 0.07%)</title><rect x="807.7" y="199" width="0.8" height="15.0" fill="rgb(149.46227845352,149.46227845352,116.624887890137)" rx="2" ry="2" />
<text  x="810.72" y="209.5" ></text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (46,440 us, 0.59%)</title><rect x="1183.0" y="119" width="7.0" height="15.0" fill="rgb(128.041115606045,128.041115606045,152.201506246331)" rx="2" ry="2" />
<text  x="1186.00" y="129.5" ></text>
</g>
<g >
<title>PetscBarrier (34,766 us, 0.44%)</title><rect x="53.5" y="71" width="5.3" height="15.0" fill="rgb(135.414378662768,161.676729054898,135.414378662768)" rx="2" ry="2" />
<text  x="56.53" y="81.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (990 us, 0.01%)</title><rect x="794.8" y="87" width="0.1" height="15.0" fill="rgb(138.871146534599,138.871146534599,154.297641264761)" rx="2" ry="2" />
<text  x="797.80" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (6,426 us, 0.08%)</title><rect x="807.5" y="151" width="1.0" height="15.0" fill="rgb(104.791293063831,144.205150053586,144.205150053586)" rx="2" ry="2" />
<text  x="810.54" y="161.5" ></text>
</g>
<g >
<title>PCSetUp (2,322,691 us, 29.67%)</title><rect x="803.2" y="103" width="350.2" height="15.0" fill="rgb(154.305527188867,129.675708447977,129.675708447977)" rx="2" ry="2" />
<text  x="806.21" y="113.5" >PCSetUp</text>
</g>
<g >
<title>Parloop_Cells_wrap_pyop2_kernel_uniform_extrusion (146,422 us, 1.87%)</title><rect x="16.8" y="119" width="22.1" height="15.0" fill="rgb(138.547457742503,108.152860465163,138.547457742503)" rx="2" ry="2" />
<text  x="19.84" y="129.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (6,426 us, 0.08%)</title><rect x="807.5" y="167" width="1.0" height="15.0" fill="rgb(147.820765342145,159.657084711744,147.820765342145)" rx="2" ry="2" />
<text  x="810.54" y="177.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (4,858 us, 0.06%)</title><rect x="1189.3" y="151" width="0.7" height="15.0" fill="rgb(154.442403432642,154.442403432642,140.759339712033)" rx="2" ry="2" />
<text  x="1192.27" y="161.5" ></text>
</g>
<g >
<title>CreateMesh (1,650 us, 0.02%)</title><rect x="795.3" y="119" width="0.3" height="15.0" fill="rgb(127.753207499867,162.92389645351,127.753207499867)" rx="2" ry="2" />
<text  x="798.34" y="129.5" ></text>
</g>
<g >
<title>ParLoopExecute (190,504 us, 2.43%)</title><rect x="1154.3" y="119" width="28.7" height="15.0" fill="rgb(144.497987880733,154.499478339449,154.499478339449)" rx="2" ry="2" />
<text  x="1157.28" y="129.5" >P..</text>
</g>
</g>
</svg>
