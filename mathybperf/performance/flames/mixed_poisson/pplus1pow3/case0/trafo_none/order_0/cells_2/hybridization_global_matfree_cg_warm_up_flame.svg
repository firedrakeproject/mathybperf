<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="283" onload="init(evt)" viewBox="0 0 1200 283" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:13px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:18px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 13 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (1 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="283.0" fill="url(#background)"  />
<text id="title" x="600.00" y="26" >Firedrake example</text>
<text id="details" x="10.00" y="265" > </text>
<text id="unzoom" x="10.00" y="26" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="26" >Search</text>
<text id="ignorecase" x="1174.00" y="26" >ic</text>
<text id="matched" x="1090.00" y="265" > </text>
<g id="frames">
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (1,758,357 us, 5.49%)</title><rect x="138.9" y="199" width="64.8" height="15.0" fill="rgb(127.250704152658,150.027960335874,150.027960335874)" rx="2" ry="2" />
<text  x="141.92" y="209.5" >Parloo..</text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (5,514 us, 0.02%)</title><rect x="437.0" y="215" width="0.2" height="15.0" fill="rgb(154.147098181237,128.461086056149,128.461086056149)" rx="2" ry="2" />
<text  x="440.01" y="225.5" ></text>
</g>
<g >
<title>HybridBreak (1,773,304 us, 5.54%)</title><rect x="138.4" y="151" width="65.3" height="15.0" fill="rgb(149.799623357942,149.799623357942,118.259713196179)" rx="2" ry="2" />
<text  x="141.37" y="161.5" >Hybrid..</text>
</g>
<g >
<title>firedrake.functionspace.VectorFunctionSpace (9,014 us, 0.03%)</title><rect x="55.4" y="87" width="0.3" height="15.0" fill="rgb(122.334599759335,148.75341475242,148.75341475242)" rx="2" ry="2" />
<text  x="58.38" y="97.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (1,718,267 us, 5.36%)</title><rect x="439.7" y="167" width="63.3" height="15.0" fill="rgb(152.514291186853,152.514291186853,131.415411136286)" rx="2" ry="2" />
<text  x="442.72" y="177.5" >Parloo..</text>
</g>
<g >
<title>CreateFunctionSpace (17,389 us, 0.05%)</title><rect x="436.9" y="135" width="0.6" height="15.0" fill="rgb(155.684677314603,140.249192745288,140.249192745288)" rx="2" ry="2" />
<text  x="439.87" y="145.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.action (12,716 us, 0.04%)</title><rect x="137.2" y="87" width="0.5" height="15.0" fill="rgb(128.803347103973,150.430497397326,150.430497397326)" rx="2" ry="2" />
<text  x="140.20" y="97.5" ></text>
</g>
<g >
<title>Mesh: reorder (5,581 us, 0.02%)</title><rect x="58.1" y="87" width="0.2" height="15.0" fill="rgb(142.087976432804,160.590329417916,142.087976432804)" rx="2" ry="2" />
<text  x="61.10" y="97.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_form1_cell_integral_otherwise (13,191,436 us, 41.18%)</title><rect x="666.0" y="135" width="485.9" height="15.0" fill="rgb(135.223170194516,135.223170194516,153.591581327971)" rx="2" ry="2" />
<text  x="668.99" y="145.5" >Parloop_Cells_wrap_form1_cell_integral_otherwise</text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (25,029 us, 0.08%)</title><rect x="437.5" y="135" width="0.9" height="15.0" fill="rgb(141.209671086807,160.733309357962,141.209671086807)" rx="2" ry="2" />
<text  x="440.52" y="145.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.action (4,509 us, 0.01%)</title><rect x="138.2" y="119" width="0.2" height="15.0" fill="rgb(138.999781235569,161.093058868628,138.999781235569)" rx="2" ry="2" />
<text  x="141.20" y="129.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (10,888 us, 0.03%)</title><rect x="137.7" y="103" width="0.4" height="15.0" fill="rgb(130.079028362979,162.545274452538,130.079028362979)" rx="2" ry="2" />
<text  x="140.67" y="113.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (8,177 us, 0.03%)</title><rect x="437.2" y="183" width="0.3" height="15.0" fill="rgb(143.237345618582,160.403222806277,143.237345618582)" rx="2" ry="2" />
<text  x="440.21" y="193.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (5,339 us, 0.02%)</title><rect x="503.0" y="135" width="0.2" height="15.0" fill="rgb(118.440720812136,147.743890580924,147.743890580924)" rx="2" ry="2" />
<text  x="506.02" y="145.5" ></text>
</g>
<g >
<title>CreateExtMesh (1,240,844 us, 3.87%)</title><rect x="10.0" y="71" width="45.7" height="15.0" fill="rgb(153.043000610861,153.043000610861,133.977618344941)" rx="2" ry="2" />
<text  x="13.00" y="81.5" >Cre..</text>
</g>
<g >
<title>firedrake.interpolation.make_interpolator (25,061 us, 0.08%)</title><rect x="438.4" y="135" width="1.0" height="15.0" fill="rgb(148.682633446119,159.516780601795,148.682633446119)" rx="2" ry="2" />
<text  x="441.44" y="145.5" ></text>
</g>
<g >
<title>ParLoopExecute (1,758,357 us, 5.49%)</title><rect x="138.9" y="183" width="64.8" height="15.0" fill="rgb(154.203144946509,128.890777923235,128.890777923235)" rx="2" ry="2" />
<text  x="141.92" y="193.5" >ParLoo..</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (4,408,591 us, 13.76%)</title><rect x="503.6" y="151" width="162.4" height="15.0" fill="rgb(138.944710989521,109.170821910646,138.944710989521)" rx="2" ry="2" />
<text  x="506.59" y="161.5" >pyop2.global_kernel..</text>
</g>
<g >
<title>Log_Event_form0_cell_integral_otherwise (5,584 us, 0.02%)</title><rect x="503.4" y="151" width="0.2" height="15.0" fill="rgb(136.832026172346,152.512006785423,152.512006785423)" rx="2" ry="2" />
<text  x="506.38" y="161.5" ></text>
</g>
<g >
<title>firedrake.__init__ (2,107,277 us, 6.58%)</title><rect x="59.3" y="71" width="77.6" height="15.0" fill="rgb(146.846364220264,129.418808314427,146.846364220264)" rx="2" ry="2" />
<text  x="62.30" y="81.5" >firedrak..</text>
</g>
<g >
<title>ParLoopExecute (1,193,356 us, 3.73%)</title><rect x="11.4" y="103" width="44.0" height="15.0" fill="rgb(116.979231012325,147.36498581801,147.36498581801)" rx="2" ry="2" />
<text  x="14.42" y="113.5" >Par..</text>
</g>
<g >
<title>CreateMesh (25,136 us, 0.08%)</title><rect x="57.4" y="71" width="0.9" height="15.0" fill="rgb(138.78227752131,108.754586148357,138.78227752131)" rx="2" ry="2" />
<text  x="60.38" y="81.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalProblem.__init__ (10,888 us, 0.03%)</title><rect x="137.7" y="87" width="0.4" height="15.0" fill="rgb(148.086259384992,159.61386475128,148.086259384992)" rx="2" ry="2" />
<text  x="140.67" y="97.5" ></text>
</g>
<g >
<title>firedrake (32,031,840 us, 100.00%)</title><rect x="10.0" y="55" width="1180.0" height="15.0" fill="rgb(151.931974202106,151.931974202106,128.593413440977)" rx="2" ry="2" />
<text  x="13.00" y="65.5" >firedrake</text>
</g>
<g >
<title>Parloop_Cells_wrap_wrap_slate_loopy_knl_0 (1,002,140 us, 3.13%)</title><rect x="263.7" y="183" width="36.9" height="15.0" fill="rgb(148.218424625762,132.934713103515,148.218424625762)" rx="2" ry="2" />
<text  x="266.70" y="193.5" >Pa..</text>
</g>
<g >
<title>firedrake.mesh._from_cell_list (3,799 us, 0.01%)</title><rect x="137.1" y="103" width="0.1" height="15.0" fill="rgb(127.996191652068,150.221234872758,150.221234872758)" rx="2" ry="2" />
<text  x="140.06" y="113.5" ></text>
</g>
<g >
<title>FunctionSpaceData: CreateElement (7,565 us, 0.02%)</title><rect x="56.3" y="135" width="0.3" height="15.0" fill="rgb(113.135011471105,146.368336307323,146.368336307323)" rx="2" ry="2" />
<text  x="59.29" y="145.5" ></text>
</g>
<g >
<title>firedrake.parloops.par_loop (1,773,304 us, 5.54%)</title><rect x="138.4" y="167" width="65.3" height="15.0" fill="rgb(131.030990346771,151.008034534348,151.008034534348)" rx="2" ry="2" />
<text  x="141.37" y="177.5" >firedr..</text>
</g>
<g >
<title>PetscBarrier (26,931 us, 0.08%)</title><rect x="58.3" y="71" width="1.0" height="15.0" fill="rgb(150.768132854489,139.468340439628,150.768132854489)" rx="2" ry="2" />
<text  x="61.30" y="81.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (45,272 us, 0.14%)</title><rect x="55.7" y="71" width="1.7" height="15.0" fill="rgb(141.048384023352,141.048384023352,154.719042069036)" rx="2" ry="2" />
<text  x="58.71" y="81.5" ></text>
</g>
<g >
<title>SNESSolve (28,547,241 us, 89.12%)</title><rect x="138.4" y="87" width="1051.6" height="15.0" fill="rgb(124.158925444194,124.158925444194,151.450114602102)" rx="2" ry="2" />
<text  x="141.37" y="97.5" >SNESSolve</text>
</g>
<g >
<title>FunctionSpaceData: CreateElement (8,177 us, 0.03%)</title><rect x="437.2" y="199" width="0.3" height="15.0" fill="rgb(151.77145384262,142.039350471713,151.77145384262)" rx="2" ry="2" />
<text  x="440.21" y="209.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (5,514 us, 0.02%)</title><rect x="437.0" y="167" width="0.2" height="15.0" fill="rgb(121.379239333637,148.505728716128,148.505728716128)" rx="2" ry="2" />
<text  x="440.01" y="177.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (8,177 us, 0.03%)</title><rect x="437.2" y="151" width="0.3" height="15.0" fill="rgb(151.814876740113,142.15062164654,151.814876740113)" rx="2" ry="2" />
<text  x="440.21" y="161.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (13,185,033 us, 41.16%)</title><rect x="666.2" y="151" width="485.7" height="15.0" fill="rgb(149.224056518682,159.428641962075,149.224056518682)" rx="2" ry="2" />
<text  x="669.23" y="161.5" >pyop2.global_kernel.GlobalKernel.compile</text>
</g>
<g >
<title>Parloop_Cells_wrap_pyop2_kernel_uniform_extrusion (1,193,356 us, 3.73%)</title><rect x="11.4" y="119" width="44.0" height="15.0" fill="rgb(134.174069287143,134.174069287143,153.388529539447)" rx="2" ry="2" />
<text  x="14.42" y="129.5" >Par..</text>
</g>
<g >
<title>CreateFunctionSpace (12,639 us, 0.04%)</title><rect x="438.0" y="183" width="0.4" height="15.0" fill="rgb(134.606651355797,161.808219546731,134.606651355797)" rx="2" ry="2" />
<text  x="440.97" y="193.5" ></text>
</g>
<g >
<title>DMPlexStratify (3,621 us, 0.01%)</title><rect x="59.2" y="87" width="0.1" height="15.0" fill="rgb(139.501644192753,139.501644192753,154.419673069565)" rx="2" ry="2" />
<text  x="62.16" y="97.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (17,829 us, 0.06%)</title><rect x="437.8" y="167" width="0.6" height="15.0" fill="rgb(137.350459809949,137.350459809949,154.003314801926)" rx="2" ry="2" />
<text  x="440.78" y="177.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (9,014 us, 0.03%)</title><rect x="55.4" y="119" width="0.3" height="15.0" fill="rgb(153.151143588953,153.151143588953,134.501695854156)" rx="2" ry="2" />
<text  x="58.38" y="129.5" ></text>
</g>
<g >
<title>PCApply (8,062,502 us, 25.17%)</title><rect x="138.4" y="119" width="297.0" height="15.0" fill="rgb(142.129188848636,160.583620419989,142.129188848636)" rx="2" ry="2" />
<text  x="141.37" y="129.5" >PCApply</text>
</g>
<g >
<title>CreateMesh (3,808 us, 0.01%)</title><rect x="57.6" y="87" width="0.2" height="15.0" fill="rgb(142.846595989602,160.466833210995,142.846595989602)" rx="2" ry="2" />
<text  x="60.64" y="97.5" ></text>
</g>
<g >
<title>firedrake.extrusion_utils.make_extruded_coords (1,228,517 us, 3.84%)</title><rect x="10.1" y="87" width="45.3" height="15.0" fill="rgb(125.077607518416,163.359459241188,125.077607518416)" rx="2" ry="2" />
<text  x="13.12" y="97.5" >fir..</text>
</g>
<g >
<title>firedrake.variational_solver.LinearVariationalProblem.__init__ (23,604 us, 0.07%)</title><rect x="137.2" y="71" width="0.9" height="15.0" fill="rgb(130.474602795399,130.474602795399,152.672503766851)" rx="2" ry="2" />
<text  x="140.20" y="81.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (45,272 us, 0.14%)</title><rect x="55.7" y="103" width="1.7" height="15.0" fill="rgb(154.412730195753,130.497598167438,130.497598167438)" rx="2" ry="2" />
<text  x="58.71" y="113.5" ></text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (3,654,020 us, 11.41%)</title><rect x="300.8" y="167" width="134.6" height="15.0" fill="rgb(132.639356326231,162.128476877125,132.639356326231)" rx="2" ry="2" />
<text  x="303.77" y="177.5" >firedrake.tsfc_..</text>
</g>
<g >
<title>ParLoopExecute (17,605,611 us, 54.96%)</title><rect x="503.4" y="119" width="648.5" height="15.0" fill="rgb(132.648457111091,93.0366713471703,132.648457111091)" rx="2" ry="2" />
<text  x="506.38" y="129.5" >ParLoopExecute</text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (9,014 us, 0.03%)</title><rect x="55.4" y="135" width="0.3" height="15.0" fill="rgb(112.066360468685,112.066360468685,149.109618155229)" rx="2" ry="2" />
<text  x="58.38" y="145.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (5,441 us, 0.02%)</title><rect x="438.2" y="231" width="0.2" height="15.0" fill="rgb(150.991485733961,150.991485733961,124.035661633811)" rx="2" ry="2" />
<text  x="441.24" y="241.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (9,014 us, 0.03%)</title><rect x="55.4" y="151" width="0.3" height="15.0" fill="rgb(152.292087542754,114.239337827779,114.239337827779)" rx="2" ry="2" />
<text  x="58.38" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (8,177 us, 0.03%)</title><rect x="437.2" y="167" width="0.3" height="15.0" fill="rgb(151.490940897084,151.490940897084,126.456098193559)" rx="2" ry="2" />
<text  x="440.21" y="177.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (25,029 us, 0.08%)</title><rect x="437.5" y="151" width="0.9" height="15.0" fill="rgb(156.333595381918,145.224231261374,145.224231261374)" rx="2" ry="2" />
<text  x="440.52" y="161.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (9,014 us, 0.03%)</title><rect x="55.4" y="103" width="0.3" height="15.0" fill="rgb(154.355273955522,130.05710032567,130.05710032567)" rx="2" ry="2" />
<text  x="58.38" y="113.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (5,441 us, 0.02%)</title><rect x="438.2" y="215" width="0.2" height="15.0" fill="rgb(145.310785738163,160.065686042625,145.310785738163)" rx="2" ry="2" />
<text  x="441.24" y="225.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (1,171,600 us, 3.66%)</title><rect x="12.2" y="135" width="43.2" height="15.0" fill="rgb(122.420207095187,148.7756092469,148.7756092469)" rx="2" ry="2" />
<text  x="15.22" y="145.5" >pyo..</text>
</g>
<g >
<title>SCForwardElim (8,062,502 us, 25.17%)</title><rect x="138.4" y="135" width="297.0" height="15.0" fill="rgb(124.499772463958,163.453525412844,124.499772463958)" rx="2" ry="2" />
<text  x="141.37" y="145.5" >SCForwardElim</text>
</g>
<g >
<title>firedrake.utility_meshes.RectangleMesh (7,474 us, 0.02%)</title><rect x="136.9" y="87" width="0.3" height="15.0" fill="rgb(151.410706788005,141.114936144264,151.410706788005)" rx="2" ry="2" />
<text  x="139.93" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (45,272 us, 0.14%)</title><rect x="55.7" y="119" width="1.7" height="15.0" fill="rgb(130.547114379973,162.46907440326,130.547114379973)" rx="2" ry="2" />
<text  x="58.71" y="129.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (5,441 us, 0.02%)</title><rect x="438.2" y="199" width="0.2" height="15.0" fill="rgb(135.610351284422,161.644826535094,135.610351284422)" rx="2" ry="2" />
<text  x="441.24" y="209.5" ></text>
</g>
<g >
<title>HybridInit (1,841,509 us, 5.75%)</title><rect x="435.4" y="119" width="67.8" height="15.0" fill="rgb(150.411643237895,150.411643237895,121.225655691339)" rx="2" ry="2" />
<text  x="438.38" y="129.5" >Hybrid..</text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (45,272 us, 0.14%)</title><rect x="55.7" y="87" width="1.7" height="15.0" fill="rgb(133.458767811485,95.1130925169307,133.458767811485)" rx="2" ry="2" />
<text  x="58.71" y="97.5" ></text>
</g>
<g >
<title>PCSetUp (1,841,509 us, 5.75%)</title><rect x="435.4" y="103" width="67.8" height="15.0" fill="rgb(115.149585126438,146.890633180928,146.890633180928)" rx="2" ry="2" />
<text  x="438.38" y="113.5" >PCSetUp</text>
</g>
<g >
<title>HybridRHS (6,289,198 us, 19.63%)</title><rect x="203.7" y="151" width="231.7" height="15.0" fill="rgb(153.35406862156,153.35406862156,135.485101781405)" rx="2" ry="2" />
<text  x="206.69" y="161.5" >HybridRHS</text>
</g>
<g >
<title>KSPSolve (8,062,502 us, 25.17%)</title><rect x="138.4" y="103" width="297.0" height="15.0" fill="rgb(114.411100585369,146.699174225836,146.699174225836)" rx="2" ry="2" />
<text  x="141.37" y="113.5" >KSPSolve</text>
</g>
<g >
<title>firedrake.slate.slac.optimise.optimise (4,182 us, 0.01%)</title><rect x="300.6" y="167" width="0.2" height="15.0" fill="rgb(133.665721995181,133.665721995181,153.290139741003)" rx="2" ry="2" />
<text  x="303.61" y="177.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (4,999 us, 0.02%)</title><rect x="1189.8" y="135" width="0.2" height="15.0" fill="rgb(142.816431432589,160.471743720276,142.816431432589)" rx="2" ry="2" />
<text  x="1192.82" y="145.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.__init__ (8,061 us, 0.03%)</title><rect x="138.1" y="71" width="0.3" height="15.0" fill="rgb(156.311921378563,145.058063902316,145.058063902316)" rx="2" ry="2" />
<text  x="141.07" y="81.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (1,719,567 us, 5.37%)</title><rect x="140.3" y="215" width="63.4" height="15.0" fill="rgb(115.581039214118,115.581039214118,149.789878557571)" rx="2" ry="2" />
<text  x="143.35" y="225.5" >pyop2...</text>
</g>
<g >
<title>firedrake.functionspace.MixedFunctionSpace (9,212 us, 0.03%)</title><rect x="436.9" y="151" width="0.3" height="15.0" fill="rgb(135.395698629102,135.395698629102,153.624973928213)" rx="2" ry="2" />
<text  x="439.87" y="161.5" ></text>
</g>
<g >
<title>DMPlexInterp (3,799 us, 0.01%)</title><rect x="137.1" y="119" width="0.1" height="15.0" fill="rgb(119.999291398544,148.14796443666,148.14796443666)" rx="2" ry="2" />
<text  x="140.06" y="129.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (5,514 us, 0.02%)</title><rect x="437.0" y="199" width="0.2" height="15.0" fill="rgb(152.862151998355,144.834264495785,152.862151998355)" rx="2" ry="2" />
<text  x="440.01" y="209.5" ></text>
</g>
<g >
<title>SNESFunctionEval (18,643,230 us, 58.20%)</title><rect x="503.2" y="103" width="686.8" height="15.0" fill="rgb(153.003471729464,119.693283259225,119.693283259225)" rx="2" ry="2" />
<text  x="506.21" y="113.5" >SNESFunctionEval</text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (5,514 us, 0.02%)</title><rect x="437.0" y="183" width="0.2" height="15.0" fill="rgb(154.469745684946,130.93471691792,130.93471691792)" rx="2" ry="2" />
<text  x="440.01" y="193.5" ></text>
</g>
<g >
<title>firedrake.assemble.allocate_matrix (8,061 us, 0.03%)</title><rect x="138.1" y="87" width="0.3" height="15.0" fill="rgb(155.347939533723,137.667536425208,137.667536425208)" rx="2" ry="2" />
<text  x="141.07" y="97.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (4,999 us, 0.02%)</title><rect x="1189.8" y="151" width="0.2" height="15.0" fill="rgb(121.886975622108,121.886975622108,151.010382378473)" rx="2" ry="2" />
<text  x="1192.82" y="161.5" ></text>
</g>
<g >
<title>firedrake.mesh.MeshTopology._facets (22,068 us, 0.07%)</title><rect x="56.6" y="135" width="0.8" height="15.0" fill="rgb(130.850464854271,162.419691767909,130.850464854271)" rx="2" ry="2" />
<text  x="59.57" y="145.5" ></text>
</g>
<g >
<title>firedrake.utility_meshes.SquareMesh (7,474 us, 0.02%)</title><rect x="136.9" y="71" width="0.3" height="15.0" fill="rgb(115.914527108736,147.088951472635,147.088951472635)" rx="2" ry="2" />
<text  x="139.93" y="81.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (1,703,115 us, 5.32%)</title><rect x="440.3" y="183" width="62.7" height="15.0" fill="rgb(122.617250745715,122.617250745715,151.151725950784)" rx="2" ry="2" />
<text  x="443.28" y="193.5" >pyop2...</text>
</g>
<g >
<title>ParLoopExecute (1,718,267 us, 5.36%)</title><rect x="439.7" y="151" width="63.3" height="15.0" fill="rgb(154.350725486377,130.022228728887,130.022228728887)" rx="2" ry="2" />
<text  x="442.72" y="161.5" >ParLoo..</text>
</g>
<g >
<title>firedrake.parloops.par_loop (1,728,003 us, 5.39%)</title><rect x="439.4" y="135" width="63.6" height="15.0" fill="rgb(126.615377943343,126.615377943343,151.925557021292)" rx="2" ry="2" />
<text  x="442.36" y="145.5" >firedr..</text>
</g>
<g >
<title>ParLoopExecute (1,002,140 us, 3.13%)</title><rect x="263.7" y="167" width="36.9" height="15.0" fill="rgb(141.810138440647,153.802628484612,153.802628484612)" rx="2" ry="2" />
<text  x="266.70" y="177.5" >Pa..</text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (1,033,033 us, 3.23%)</title><rect x="1151.9" y="119" width="38.1" height="15.0" fill="rgb(124.278769911002,149.257458865815,149.257458865815)" rx="2" ry="2" />
<text  x="1154.94" y="129.5" >fi..</text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.solve (28,547,241 us, 89.12%)</title><rect x="138.4" y="71" width="1051.6" height="15.0" fill="rgb(130.136439961667,130.136439961667,152.607052895806)" rx="2" ry="2" />
<text  x="141.37" y="81.5" >firedrake.variational_solver.NonlinearVariationalSolver.solve</text>
</g>
<g >
<title>Parloop_Cells_wrap_form0_cell_integral_otherwise (4,414,175 us, 13.78%)</title><rect x="503.4" y="135" width="162.6" height="15.0" fill="rgb(148.37743198282,148.37743198282,111.367554993664)" rx="2" ry="2" />
<text  x="506.38" y="145.5" >Parloop_Cells_wrap_..</text>
</g>
<g >
<title>Mesh: numbering (8,650 us, 0.03%)</title><rect x="57.8" y="87" width="0.3" height="15.0" fill="rgb(148.888010617987,148.888010617987,113.841897610242)" rx="2" ry="2" />
<text  x="60.78" y="97.5" ></text>
</g>
<g >
<title>firedrake.matrix_free.operators.ImplicitMatrixContext.__init__ (8,061 us, 0.03%)</title><rect x="138.1" y="103" width="0.3" height="15.0" fill="rgb(152.168965244424,113.29540020725,113.29540020725)" rx="2" ry="2" />
<text  x="141.07" y="113.5" ></text>
</g>
<g >
<title>all (32,031,840 us, 100%)</title><rect x="10.0" y="39" width="1180.0" height="15.0" fill="rgb(150.37116263969,150.37116263969,121.029480484649)" rx="2" ry="2" />
<text  x="13.00" y="49.5" ></text>
</g>
</g>
</svg>
