<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="283" onload="init(evt)" viewBox="0 0 1200 283" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:13px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:18px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 13 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (1 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="283.0" fill="url(#background)"  />
<text id="title" x="600.00" y="26" >Firedrake example</text>
<text id="details" x="10.00" y="265" > </text>
<text id="unzoom" x="10.00" y="26" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="26" >Search</text>
<text id="ignorecase" x="1174.00" y="26" >ic</text>
<text id="matched" x="1090.00" y="265" > </text>
<g id="frames">
<g >
<title>ParLoopExecute (694,612 us, 1.90%)</title><rect x="239.8" y="167" width="22.4" height="15.0" fill="rgb(151.973152109803,151.973152109803,128.792967916738)" rx="2" ry="2" />
<text  x="242.84" y="177.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalProblem.__init__ (10,886 us, 0.03%)</title><rect x="143.4" y="87" width="0.4" height="15.0" fill="rgb(142.331309724718,142.331309724718,154.9673502693)" rx="2" ry="2" />
<text  x="146.42" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (7,971 us, 0.02%)</title><rect x="338.1" y="151" width="0.2" height="15.0" fill="rgb(154.446785314391,154.446785314391,140.780574985126)" rx="2" ry="2" />
<text  x="341.09" y="161.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (1,559,838 us, 4.26%)</title><rect x="340.2" y="167" width="50.3" height="15.0" fill="rgb(128.628091753804,162.781473435427,128.628091753804)" rx="2" ry="2" />
<text  x="343.21" y="177.5" >Parl..</text>
</g>
<g >
<title>Mesh: numbering (6,686 us, 0.02%)</title><rect x="54.7" y="87" width="0.2" height="15.0" fill="rgb(139.166734988025,161.065880350787,139.166734988025)" rx="2" ry="2" />
<text  x="57.68" y="97.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_wrap_slate_loopy_knl_0 (694,612 us, 1.90%)</title><rect x="239.8" y="183" width="22.4" height="15.0" fill="rgb(149.916136202115,159.315977827563,149.916136202115)" rx="2" ry="2" />
<text  x="242.84" y="193.5" ></text>
</g>
<g >
<title>firedrake.extrusion_utils.make_extruded_coords (1,329,152 us, 3.63%)</title><rect x="10.0" y="87" width="42.8" height="15.0" fill="rgb(135.34639114861,135.34639114861,153.615430544892)" rx="2" ry="2" />
<text  x="13.00" y="97.5" >fir..</text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (4,071 us, 0.01%)</title><rect x="338.0" y="183" width="0.1" height="15.0" fill="rgb(140.886073044006,140.886073044006,154.687627040775)" rx="2" ry="2" />
<text  x="340.96" y="193.5" ></text>
</g>
<g >
<title>PCSetUp (1,680,222 us, 4.59%)</title><rect x="336.5" y="103" width="54.1" height="15.0" fill="rgb(146.378180505649,154.98693568665,154.98693568665)" rx="2" ry="2" />
<text  x="339.49" y="113.5" >PCSetUp</text>
</g>
<g >
<title>SNESFunctionEval (24,804,619 us, 67.74%)</title><rect x="390.6" y="103" width="799.4" height="15.0" fill="rgb(138.660762300043,138.660762300043,154.256921735492)" rx="2" ry="2" />
<text  x="393.64" y="113.5" >SNESFunctionEval</text>
</g>
<g >
<title>ParLoopExecute (23,641,776 us, 64.57%)</title><rect x="390.8" y="119" width="761.9" height="15.0" fill="rgb(132.739477527305,132.739477527305,153.110866618188)" rx="2" ry="2" />
<text  x="393.78" y="129.5" >ParLoopExecute</text>
</g>
<g >
<title>firedrake.mesh.MeshTopology._facets (17,338 us, 0.05%)</title><rect x="53.7" y="135" width="0.6" height="15.0" fill="rgb(121.357910432731,121.357910432731,150.9079826644)" rx="2" ry="2" />
<text  x="56.74" y="145.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (37,069 us, 0.10%)</title><rect x="53.1" y="87" width="1.2" height="15.0" fill="rgb(140.831482011082,153.548902743614,153.548902743614)" rx="2" ry="2" />
<text  x="56.11" y="97.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (15,500 us, 0.04%)</title><rect x="338.5" y="167" width="0.5" height="15.0" fill="rgb(150.21435176725,150.21435176725,120.269550872058)" rx="2" ry="2" />
<text  x="341.54" y="177.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (10,504 us, 0.03%)</title><rect x="338.7" y="183" width="0.3" height="15.0" fill="rgb(136.438295043576,161.510044992906,136.438295043576)" rx="2" ry="2" />
<text  x="341.70" y="193.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (1,422,151 us, 3.88%)</title><rect x="145.2" y="215" width="45.8" height="15.0" fill="rgb(117.144124920853,117.144124920853,150.092411275004)" rx="2" ry="2" />
<text  x="148.21" y="225.5" >pyo..</text>
</g>
<g >
<title>HybridBreak (1,456,963 us, 3.98%)</title><rect x="144.1" y="151" width="46.9" height="15.0" fill="rgb(154.277609297359,154.277609297359,139.960721979507)" rx="2" ry="2" />
<text  x="147.09" y="161.5" >Hybr..</text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (37,069 us, 0.10%)</title><rect x="53.1" y="119" width="1.2" height="15.0" fill="rgb(149.865111414108,149.865111414108,118.577078391447)" rx="2" ry="2" />
<text  x="56.11" y="129.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (1,444,645 us, 3.95%)</title><rect x="144.5" y="199" width="46.5" height="15.0" fill="rgb(142.126068233815,142.126068233815,154.927626109771)" rx="2" ry="2" />
<text  x="147.48" y="209.5" >Parl..</text>
</g>
<g >
<title>firedrake.matrix_free.operators.ImplicitMatrixContext.__init__ (4,012 us, 0.01%)</title><rect x="144.0" y="103" width="0.1" height="15.0" fill="rgb(145.082143389654,154.650926063984,154.650926063984)" rx="2" ry="2" />
<text  x="146.96" y="113.5" ></text>
</g>
<g >
<title>FunctionSpaceData: CreateElement (6,323 us, 0.02%)</title><rect x="53.5" y="135" width="0.2" height="15.0" fill="rgb(128.881248442265,128.881248442265,152.364112601729)" rx="2" ry="2" />
<text  x="56.54" y="145.5" ></text>
</g>
<g >
<title>firedrake.assemble.allocate_matrix (4,012 us, 0.01%)</title><rect x="144.0" y="87" width="0.1" height="15.0" fill="rgb(117.232808840498,147.430728217907,147.430728217907)" rx="2" ry="2" />
<text  x="146.96" y="97.5" ></text>
</g>
<g >
<title>DMPlexInterp (4,122 us, 0.01%)</title><rect x="142.9" y="119" width="0.1" height="15.0" fill="rgb(123.886829746396,149.155844749066,149.155844749066)" rx="2" ry="2" />
<text  x="145.90" y="129.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (5,349,788 us, 14.61%)</title><rect x="391.0" y="151" width="172.4" height="15.0" fill="rgb(127.217784424121,150.019425591439,150.019425591439)" rx="2" ry="2" />
<text  x="393.99" y="161.5" >pyop2.global_kernel...</text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (8,442 us, 0.02%)</title><rect x="52.8" y="119" width="0.3" height="15.0" fill="rgb(153.987861236782,153.987861236782,138.556558301326)" rx="2" ry="2" />
<text  x="55.83" y="129.5" ></text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (1,158,250 us, 3.16%)</title><rect x="1152.7" y="119" width="37.3" height="15.0" fill="rgb(148.215419139143,148.215419139143,110.582415828156)" rx="2" ry="2" />
<text  x="1155.67" y="129.5" >fi..</text>
</g>
<g >
<title>firedrake.variational_solver.LinearVariationalProblem.__init__ (23,036 us, 0.06%)</title><rect x="143.0" y="71" width="0.8" height="15.0" fill="rgb(104.282324372935,144.073195207798,144.073195207798)" rx="2" ry="2" />
<text  x="146.03" y="81.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (4,577 us, 0.01%)</title><rect x="338.9" y="215" width="0.1" height="15.0" fill="rgb(148.723034761077,148.723034761077,113.04239922676)" rx="2" ry="2" />
<text  x="341.89" y="225.5" ></text>
</g>
<g >
<title>CreateMesh (18,531 us, 0.05%)</title><rect x="54.3" y="71" width="0.6" height="15.0" fill="rgb(145.380153395809,160.05439363324,145.380153395809)" rx="2" ry="2" />
<text  x="57.30" y="81.5" ></text>
</g>
<g >
<title>ParLoopExecute (1,444,645 us, 3.95%)</title><rect x="144.5" y="183" width="46.5" height="15.0" fill="rgb(152.50481140331,152.50481140331,131.369470646809)" rx="2" ry="2" />
<text  x="147.48" y="193.5" >ParL..</text>
</g>
<g >
<title>ParLoopExecute (1,297,283 us, 3.54%)</title><rect x="11.0" y="103" width="41.8" height="15.0" fill="rgb(135.182637306179,99.5305080970824,135.182637306179)" rx="2" ry="2" />
<text  x="14.03" y="113.5" >Par..</text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (8,442 us, 0.02%)</title><rect x="52.8" y="135" width="0.3" height="15.0" fill="rgb(153.820264993959,153.820264993959,137.74436112457)" rx="2" ry="2" />
<text  x="55.83" y="145.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.action (4,012 us, 0.01%)</title><rect x="144.0" y="119" width="0.1" height="15.0" fill="rgb(153.237031354896,153.237031354896,134.917921181418)" rx="2" ry="2" />
<text  x="146.96" y="129.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_form0_cell_integral_otherwise (5,356,164 us, 14.63%)</title><rect x="390.8" y="135" width="172.6" height="15.0" fill="rgb(135.489157845266,135.489157845266,153.643062808761)" rx="2" ry="2" />
<text  x="393.78" y="145.5" >Parloop_Cells_wrap_f..</text>
</g>
<g >
<title>firedrake.parloops.par_loop (1,456,963 us, 3.98%)</title><rect x="144.1" y="167" width="46.9" height="15.0" fill="rgb(152.999836881527,119.665416091705,119.665416091705)" rx="2" ry="2" />
<text  x="147.09" y="177.5" >fire..</text>
</g>
<g >
<title>firedrake.__init__ (2,704,768 us, 7.39%)</title><rect x="55.7" y="71" width="87.2" height="15.0" fill="rgb(144.024024792431,154.37659902026,154.37659902026)" rx="2" ry="2" />
<text  x="58.73" y="81.5" >firedrake..</text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (2,304,350 us, 6.29%)</title><rect x="262.2" y="167" width="74.3" height="15.0" fill="rgb(134.692501567002,98.2745352654435,134.692501567002)" rx="2" ry="2" />
<text  x="265.23" y="177.5" >firedra..</text>
</g>
<g >
<title>Log_Event_form0_cell_integral_otherwise (6,376 us, 0.02%)</title><rect x="390.8" y="151" width="0.2" height="15.0" fill="rgb(127.130652236102,163.025242659239,127.130652236102)" rx="2" ry="2" />
<text  x="393.78" y="161.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (21,473 us, 0.06%)</title><rect x="338.3" y="135" width="0.7" height="15.0" fill="rgb(112.655597329786,112.655597329786,149.223663999313)" rx="2" ry="2" />
<text  x="341.35" y="145.5" ></text>
</g>
<g >
<title>SNESSolve (32,455,175 us, 88.64%)</title><rect x="144.1" y="87" width="1045.9" height="15.0" fill="rgb(121.266498264552,148.476499550069,148.476499550069)" rx="2" ry="2" />
<text  x="147.09" y="97.5" >SNESSolve</text>
</g>
<g >
<title>firedrake.utility_meshes.SquareMesh (4,122 us, 0.01%)</title><rect x="142.9" y="71" width="0.1" height="15.0" fill="rgb(132.737143262722,162.11255807351,132.737143262722)" rx="2" ry="2" />
<text  x="145.90" y="81.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_form1_cell_integral_otherwise (18,285,612 us, 49.94%)</title><rect x="563.4" y="135" width="589.3" height="15.0" fill="rgb(138.364481728918,107.683984430352,138.364481728918)" rx="2" ry="2" />
<text  x="566.39" y="145.5" >Parloop_Cells_wrap_form1_cell_integral_otherwise</text>
</g>
<g >
<title>Parloop_Cells_wrap_pyop2_kernel_uniform_extrusion (1,297,283 us, 3.54%)</title><rect x="11.0" y="119" width="41.8" height="15.0" fill="rgb(155.561760990914,139.306834263674,139.306834263674)" rx="2" ry="2" />
<text  x="14.03" y="129.5" >Par..</text>
</g>
<g >
<title>firedrake.mesh._from_cell_list (4,122 us, 0.01%)</title><rect x="142.9" y="103" width="0.1" height="15.0" fill="rgb(145.852765083099,159.977456846937,145.852765083099)" rx="2" ry="2" />
<text  x="145.90" y="113.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.__init__ (9,621 us, 0.03%)</title><rect x="143.8" y="71" width="0.3" height="15.0" fill="rgb(126.59597735436,149.85821635113,149.85821635113)" rx="2" ry="2" />
<text  x="146.78" y="81.5" ></text>
</g>
<g >
<title>FunctionSpaceData: CreateElement (7,971 us, 0.02%)</title><rect x="338.1" y="199" width="0.2" height="15.0" fill="rgb(149.221576002504,149.221576002504,115.458406781365)" rx="2" ry="2" />
<text  x="341.09" y="209.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (4,882 us, 0.01%)</title><rect x="390.5" y="135" width="0.1" height="15.0" fill="rgb(115.568507124515,146.999242587837,146.999242587837)" rx="2" ry="2" />
<text  x="393.48" y="145.5" ></text>
</g>
<g >
<title>HybridInit (1,680,222 us, 4.59%)</title><rect x="336.5" y="119" width="54.1" height="15.0" fill="rgb(127.394623685062,127.394623685062,152.076378777754)" rx="2" ry="2" />
<text  x="339.49" y="129.5" >Hybri..</text>
</g>
<g >
<title>PCApply (5,970,334 us, 16.31%)</title><rect x="144.1" y="119" width="192.4" height="15.0" fill="rgb(148.911582770776,134.710930850113,148.911582770776)" rx="2" ry="2" />
<text  x="147.09" y="129.5" >PCApply</text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (8,442 us, 0.02%)</title><rect x="52.8" y="151" width="0.3" height="15.0" fill="rgb(143.243027623378,160.402297828752,143.243027623378)" rx="2" ry="2" />
<text  x="55.83" y="161.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (8,442 us, 0.02%)</title><rect x="52.8" y="103" width="0.3" height="15.0" fill="rgb(130.599755061973,130.599755061973,152.696726786188)" rx="2" ry="2" />
<text  x="55.83" y="113.5" ></text>
</g>
<g >
<title>PetscBarrier (25,978 us, 0.07%)</title><rect x="54.9" y="71" width="0.8" height="15.0" fill="rgb(112.619130278314,146.234589331415,146.234589331415)" rx="2" ry="2" />
<text  x="57.90" y="81.5" ></text>
</g>
<g >
<title>firedrake.utility_meshes.RectangleMesh (4,122 us, 0.01%)</title><rect x="142.9" y="87" width="0.1" height="15.0" fill="rgb(153.575098234953,124.075753134642,124.075753134642)" rx="2" ry="2" />
<text  x="145.90" y="97.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (1,277,761 us, 3.49%)</title><rect x="11.7" y="135" width="41.1" height="15.0" fill="rgb(117.36421476712,117.36421476712,150.135009309765)" rx="2" ry="2" />
<text  x="14.66" y="145.5" >pyo..</text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (4,577 us, 0.01%)</title><rect x="338.9" y="199" width="0.1" height="15.0" fill="rgb(138.699416879056,138.699416879056,154.264403266914)" rx="2" ry="2" />
<text  x="341.89" y="209.5" ></text>
</g>
<g >
<title>firedrake.parloops.par_loop (1,571,043 us, 4.29%)</title><rect x="339.8" y="135" width="50.7" height="15.0" fill="rgb(119.001378879907,147.889246376272,147.889246376272)" rx="2" ry="2" />
<text  x="342.85" y="145.5" >fire..</text>
</g>
<g >
<title>HybridRHS (4,513,371 us, 12.33%)</title><rect x="191.0" y="151" width="145.5" height="15.0" fill="rgb(153.416001367359,122.856010483085,122.856010483085)" rx="2" ry="2" />
<text  x="194.04" y="161.5" >HybridRHS</text>
</g>
<g >
<title>all (36,615,894 us, 100%)</title><rect x="10.0" y="39" width="1180.0" height="15.0" fill="rgb(152.830445935243,118.366752170195,118.366752170195)" rx="2" ry="2" />
<text  x="13.00" y="49.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (7,971 us, 0.02%)</title><rect x="338.1" y="183" width="0.2" height="15.0" fill="rgb(129.881067372662,129.881067372662,152.557625943096)" rx="2" ry="2" />
<text  x="341.09" y="193.5" ></text>
</g>
<g >
<title>firedrake.functionspace.MixedFunctionSpace (4,071 us, 0.01%)</title><rect x="338.0" y="151" width="0.1" height="15.0" fill="rgb(135.683341546265,152.214199660143,152.214199660143)" rx="2" ry="2" />
<text  x="340.96" y="161.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (18,279,391 us, 49.92%)</title><rect x="563.6" y="151" width="589.1" height="15.0" fill="rgb(154.044824912406,127.676990995109,127.676990995109)" rx="2" ry="2" />
<text  x="566.59" y="161.5" >pyop2.global_kernel.GlobalKernel.compile</text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (21,473 us, 0.06%)</title><rect x="338.3" y="151" width="0.7" height="15.0" fill="rgb(110.207688688215,110.207688688215,148.749875229977)" rx="2" ry="2" />
<text  x="341.35" y="161.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (10,886 us, 0.03%)</title><rect x="143.4" y="103" width="0.4" height="15.0" fill="rgb(121.092984062133,148.431514386479,148.431514386479)" rx="2" ry="2" />
<text  x="146.42" y="113.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (4,005 us, 0.01%)</title><rect x="1189.9" y="135" width="0.1" height="15.0" fill="rgb(138.599828234651,138.599828234651,154.245128045416)" rx="2" ry="2" />
<text  x="1192.87" y="145.5" ></text>
</g>
<g >
<title>CreateExtMesh (1,337,594 us, 3.65%)</title><rect x="10.0" y="71" width="43.1" height="15.0" fill="rgb(151.724561614816,151.724561614816,127.588260133337)" rx="2" ry="2" />
<text  x="13.00" y="81.5" >Cre..</text>
</g>
<g >
<title>KSPSolve (5,970,334 us, 16.31%)</title><rect x="144.1" y="103" width="192.4" height="15.0" fill="rgb(132.742055182023,151.45164393608,151.45164393608)" rx="2" ry="2" />
<text  x="147.09" y="113.5" >KSPSolve</text>
</g>
<g >
<title>CreateFunctionSpace (4,071 us, 0.01%)</title><rect x="338.0" y="167" width="0.1" height="15.0" fill="rgb(153.211831167748,121.290705619397,121.290705619397)" rx="2" ry="2" />
<text  x="340.96" y="177.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (4,071 us, 0.01%)</title><rect x="338.0" y="215" width="0.1" height="15.0" fill="rgb(155.476957664409,155.476957664409,145.772948681369)" rx="2" ry="2" />
<text  x="340.96" y="225.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (37,069 us, 0.10%)</title><rect x="53.1" y="103" width="1.2" height="15.0" fill="rgb(143.955591704993,154.358857108702,154.358857108702)" rx="2" ry="2" />
<text  x="56.11" y="113.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.solve (32,455,175 us, 88.64%)</title><rect x="144.1" y="71" width="1045.9" height="15.0" fill="rgb(146.713226644963,159.837381708959,146.713226644963)" rx="2" ry="2" />
<text  x="147.09" y="81.5" >firedrake.variational_solver.NonlinearVariationalSolver.solve</text>
</g>
<g >
<title>firedrake.interpolation.make_interpolator (25,156 us, 0.07%)</title><rect x="339.0" y="135" width="0.8" height="15.0" fill="rgb(130.086442029314,162.544067576623,130.086442029314)" rx="2" ry="2" />
<text  x="342.04" y="145.5" ></text>
</g>
<g >
<title>firedrake (36,615,894 us, 100.00%)</title><rect x="10.0" y="55" width="1180.0" height="15.0" fill="rgb(141.871639652807,160.625547033264,141.871639652807)" rx="2" ry="2" />
<text  x="13.00" y="65.5" >firedrake</text>
</g>
<g >
<title>SCForwardElim (5,970,334 us, 16.31%)</title><rect x="144.1" y="135" width="192.4" height="15.0" fill="rgb(116.530515024444,116.530515024444,149.973648069247)" rx="2" ry="2" />
<text  x="147.09" y="145.5" >SCForwardElim</text>
</g>
<g >
<title>firedrake.functionspace.VectorFunctionSpace (8,442 us, 0.02%)</title><rect x="52.8" y="87" width="0.3" height="15.0" fill="rgb(142.807068707223,119.068113562259,142.807068707223)" rx="2" ry="2" />
<text  x="55.83" y="97.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (1,542,718 us, 4.21%)</title><rect x="340.8" y="183" width="49.7" height="15.0" fill="rgb(131.168970975878,151.043807290042,151.043807290042)" rx="2" ry="2" />
<text  x="343.76" y="193.5" >pyop..</text>
</g>
<g >
<title>ParLoopExecute (1,559,838 us, 4.26%)</title><rect x="340.2" y="151" width="50.3" height="15.0" fill="rgb(123.146333235038,148.963864172047,148.963864172047)" rx="2" ry="2" />
<text  x="343.21" y="161.5" >ParL..</text>
</g>
<g >
<title>CreateFunctionSpace (37,069 us, 0.10%)</title><rect x="53.1" y="71" width="1.2" height="15.0" fill="rgb(126.052008352059,126.052008352059,151.81651774556)" rx="2" ry="2" />
<text  x="56.11" y="81.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (4,577 us, 0.01%)</title><rect x="338.9" y="231" width="0.1" height="15.0" fill="rgb(149.79145917236,149.79145917236,118.22014829682)" rx="2" ry="2" />
<text  x="341.89" y="241.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (7,971 us, 0.02%)</title><rect x="338.1" y="167" width="0.2" height="15.0" fill="rgb(150.259893901677,150.259893901677,120.490255061973)" rx="2" ry="2" />
<text  x="341.09" y="177.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (4,005 us, 0.01%)</title><rect x="1189.9" y="151" width="0.1" height="15.0" fill="rgb(155.619269702509,155.619269702509,146.46261471216)" rx="2" ry="2" />
<text  x="1192.87" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (4,071 us, 0.01%)</title><rect x="338.0" y="199" width="0.1" height="15.0" fill="rgb(111.113599086323,145.844266429787,145.844266429787)" rx="2" ry="2" />
<text  x="340.96" y="209.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (12,042 us, 0.03%)</title><rect x="338.0" y="135" width="0.3" height="15.0" fill="rgb(107.657714378167,144.948296320266,144.948296320266)" rx="2" ry="2" />
<text  x="340.96" y="145.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.action (12,150 us, 0.03%)</title><rect x="143.0" y="87" width="0.4" height="15.0" fill="rgb(141.667092023908,116.146923311265,141.667092023908)" rx="2" ry="2" />
<text  x="146.03" y="97.5" ></text>
</g>
</g>
</svg>
