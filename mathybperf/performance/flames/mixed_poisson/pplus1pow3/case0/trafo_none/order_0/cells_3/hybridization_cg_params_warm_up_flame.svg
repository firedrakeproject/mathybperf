<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="299" onload="init(evt)" viewBox="0 0 1200 299" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:13px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:18px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 13 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (1 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="299.0" fill="url(#background)"  />
<text id="title" x="600.00" y="26" >Firedrake example</text>
<text id="details" x="10.00" y="281" > </text>
<text id="unzoom" x="10.00" y="26" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="26" >Search</text>
<text id="ignorecase" x="1174.00" y="26" >ic</text>
<text id="matched" x="1090.00" y="281" > </text>
<g id="frames">
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (799,898 us, 7.20%)</title><rect x="441.1" y="199" width="85.0" height="15.0" fill="rgb(144.889601278143,144.889601278143,155.462503473189)" rx="2" ry="2" />
<text  x="444.13" y="209.5" >pyop2.glo..</text>
</g>
<g >
<title>ParLoopExecute (1,170,243 us, 10.54%)</title><rect x="14.7" y="103" width="124.3" height="15.0" fill="rgb(140.761199390195,153.530681323384,153.530681323384)" rx="2" ry="2" />
<text  x="17.70" y="113.5" >ParLoopExecute</text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (7,525 us, 0.07%)</title><rect x="436.1" y="183" width="0.8" height="15.0" fill="rgb(155.01589001744,155.01589001744,143.53854393067)" rx="2" ry="2" />
<text  x="439.05" y="193.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (10,613 us, 0.10%)</title><rect x="428.0" y="103" width="1.2" height="15.0" fill="rgb(150.212967000199,150.212967000199,120.262840077888)" rx="2" ry="2" />
<text  x="431.03" y="113.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (1,811 us, 0.02%)</title><rect x="431.9" y="199" width="0.2" height="15.0" fill="rgb(154.285718378125,129.523840898956,129.523840898956)" rx="2" ry="2" />
<text  x="434.93" y="209.5" ></text>
</g>
<g >
<title>MatZeroInitial (1,717 us, 0.02%)</title><rect x="435.6" y="167" width="0.2" height="15.0" fill="rgb(135.074896611673,161.731993574844,135.074896611673)" rx="2" ry="2" />
<text  x="438.57" y="177.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (5,057 us, 0.05%)</title><rect x="436.3" y="199" width="0.6" height="15.0" fill="rgb(142.203522450966,142.203522450966,154.942617248574)" rx="2" ry="2" />
<text  x="439.32" y="209.5" ></text>
</g>
<g >
<title>firedrake.__init__ (2,666,827 us, 24.01%)</title><rect x="142.0" y="71" width="283.3" height="15.0" fill="rgb(136.404721486803,161.515510455637,136.404721486803)" rx="2" ry="2" />
<text  x="144.98" y="81.5" >firedrake.__init__</text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (2,187 us, 0.02%)</title><rect x="436.6" y="247" width="0.3" height="15.0" fill="rgb(151.84629430757,151.84629430757,128.178195490533)" rx="2" ry="2" />
<text  x="439.62" y="257.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (3,635 us, 0.03%)</title><rect x="429.9" y="119" width="0.4" height="15.0" fill="rgb(142.0924544492,153.875821523867,153.875821523867)" rx="2" ry="2" />
<text  x="432.92" y="129.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (18,705 us, 0.17%)</title><rect x="139.8" y="71" width="2.0" height="15.0" fill="rgb(137.770365208565,152.755279868887,152.755279868887)" rx="2" ry="2" />
<text  x="142.78" y="81.5" ></text>
</g>
<g >
<title>Log_Event_form0_cell_integral_otherwise (8,387 us, 0.08%)</title><rect x="527.5" y="167" width="0.9" height="15.0" fill="rgb(144.479497923038,123.353713427786,144.479497923038)" rx="2" ry="2" />
<text  x="530.50" y="177.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (2,870,493 us, 25.84%)</title><rect x="528.4" y="167" width="305.0" height="15.0" fill="rgb(131.694517148422,131.694517148422,152.908616222275)" rx="2" ry="2" />
<text  x="531.40" y="177.5" >pyop2.global_kernel.GlobalKernel.comp..</text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (5,955 us, 0.05%)</title><rect x="1189.4" y="151" width="0.6" height="15.0" fill="rgb(143.115116967067,160.423120493733,143.115116967067)" rx="2" ry="2" />
<text  x="1192.37" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (17,436 us, 0.16%)</title><rect x="139.9" y="119" width="1.9" height="15.0" fill="rgb(143.407824424823,120.60755008861,143.407824424823)" rx="2" ry="2" />
<text  x="142.91" y="129.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (6,281 us, 0.06%)</title><rect x="425.5" y="135" width="0.7" height="15.0" fill="rgb(122.0486501031,122.0486501031,151.041674213503)" rx="2" ry="2" />
<text  x="428.49" y="145.5" ></text>
</g>
<g >
<title>firedrake.functionspace.MixedFunctionSpace (1,706 us, 0.02%)</title><rect x="425.3" y="71" width="0.2" height="15.0" fill="rgb(140.034900353806,140.034900353806,154.522883939446)" rx="2" ry="2" />
<text  x="428.31" y="81.5" ></text>
</g>
<g >
<title>all (11,107,019 us, 100%)</title><rect x="10.0" y="39" width="1180.0" height="15.0" fill="rgb(137.904007905529,161.271440573519,137.904007905529)" rx="2" ry="2" />
<text  x="13.00" y="49.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (7,044 us, 0.06%)</title><rect x="139.0" y="103" width="0.8" height="15.0" fill="rgb(148.505075647924,148.505075647924,111.986135832248)" rx="2" ry="2" />
<text  x="142.03" y="113.5" ></text>
</g>
<g >
<title>HybridOperatorAssembly (19,869 us, 0.18%)</title><rect x="432.6" y="151" width="2.2" height="15.0" fill="rgb(154.265099345586,129.365761649493,129.365761649493)" rx="2" ry="2" />
<text  x="435.64" y="161.5" ></text>
</g>
<g >
<title>perfsolve (7,150,819 us, 64.38%)</title><rect x="430.3" y="71" width="759.7" height="15.0" fill="rgb(139.628867727188,139.628867727188,154.444296979456)" rx="2" ry="2" />
<text  x="433.30" y="81.5" >perfsolve</text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (4,883 us, 0.04%)</title><rect x="432.1" y="199" width="0.5" height="15.0" fill="rgb(114.170532390699,146.636804693885,146.636804693885)" rx="2" ry="2" />
<text  x="435.13" y="209.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (10,373 us, 0.09%)</title><rect x="435.8" y="167" width="1.1" height="15.0" fill="rgb(122.648512487454,122.648512487454,151.157776610475)" rx="2" ry="2" />
<text  x="438.75" y="177.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_pyop2_kernel_uniform_extrusion (1,170,243 us, 10.54%)</title><rect x="14.7" y="119" width="124.3" height="15.0" fill="rgb(154.758292090727,133.146906028904,133.146906028904)" rx="2" ry="2" />
<text  x="17.70" y="129.5" >Parloop_Cells_..</text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (1,221 us, 0.01%)</title><rect x="1189.9" y="183" width="0.1" height="15.0" fill="rgb(146.674644519196,159.843662520131,146.674644519196)" rx="2" ry="2" />
<text  x="1192.87" y="193.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (3,352 us, 0.03%)</title><rect x="1189.6" y="167" width="0.4" height="15.0" fill="rgb(140.262876507262,140.262876507262,154.567008356244)" rx="2" ry="2" />
<text  x="1192.64" y="177.5" ></text>
</g>
<g >
<title>firedrake.assemble.allocate_matrix (9,374 us, 0.08%)</title><rect x="434.8" y="151" width="1.0" height="15.0" fill="rgb(149.036377173015,159.459194413695,149.036377173015)" rx="2" ry="2" />
<text  x="437.75" y="161.5" ></text>
</g>
<g >
<title>firedrake.function.Function.__init__ (1,256 us, 0.01%)</title><rect x="436.9" y="151" width="0.1" height="15.0" fill="rgb(137.349889087904,161.361645962434,137.349889087904)" rx="2" ry="2" />
<text  x="439.85" y="161.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (1,631 us, 0.01%)</title><rect x="434.6" y="183" width="0.2" height="15.0" fill="rgb(153.429032199036,153.429032199036,135.848386810714)" rx="2" ry="2" />
<text  x="437.58" y="193.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (1,811 us, 0.02%)</title><rect x="431.9" y="183" width="0.2" height="15.0" fill="rgb(144.311340717523,122.922810588652,144.311340717523)" rx="2" ry="2" />
<text  x="434.93" y="193.5" ></text>
</g>
<g >
<title>SNESFunctionEval (6,249,009 us, 56.26%)</title><rect x="526.1" y="119" width="663.9" height="15.0" fill="rgb(129.779759329863,129.779759329863,152.538017934812)" rx="2" ry="2" />
<text  x="529.11" y="129.5" >SNESFunctionEval</text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (2,187 us, 0.02%)</title><rect x="436.6" y="215" width="0.3" height="15.0" fill="rgb(141.29971202336,160.718651531081,141.29971202336)" rx="2" ry="2" />
<text  x="439.62" y="225.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.derivative (1,375 us, 0.01%)</title><rect x="429.2" y="103" width="0.1" height="15.0" fill="rgb(145.103147901165,145.103147901165,155.503835077645)" rx="2" ry="2" />
<text  x="432.16" y="113.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.action (4,278 us, 0.04%)</title><rect x="429.5" y="119" width="0.4" height="15.0" fill="rgb(146.017295667432,154.893372950816,154.893372950816)" rx="2" ry="2" />
<text  x="432.46" y="129.5" ></text>
</g>
<g >
<title>firedrake.parloops.par_loop (805,521 us, 7.25%)</title><rect x="440.5" y="151" width="85.6" height="15.0" fill="rgb(153.073349865359,153.073349865359,134.124695501353)" rx="2" ry="2" />
<text  x="443.53" y="161.5" >firedrake..</text>
</g>
<g >
<title>firedrake.variational_solver.LinearVariationalProblem.__init__ (27,369 us, 0.25%)</title><rect x="426.4" y="71" width="2.9" height="15.0" fill="rgb(155.94513620415,142.246044231818,142.246044231818)" rx="2" ry="2" />
<text  x="429.39" y="81.5" ></text>
</g>
<g >
<title>SNESSolve (7,150,819 us, 64.38%)</title><rect x="430.3" y="103" width="759.7" height="15.0" fill="rgb(153.09477378009,153.09477378009,134.22851908813)" rx="2" ry="2" />
<text  x="433.30" y="113.5" >SNESSolve</text>
</g>
<g >
<title>Parloop_Cells_wrap_form1_cell_integral_otherwise (2,323,314 us, 20.92%)</title><rect x="833.4" y="151" width="246.8" height="15.0" fill="rgb(123.922972796974,123.922972796974,151.404446347801)" rx="2" ry="2" />
<text  x="836.35" y="161.5" >Parloop_Cells_wrap_form1_cell_..</text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (6,281 us, 0.06%)</title><rect x="425.5" y="119" width="0.7" height="15.0" fill="rgb(155.724823532548,140.556980416201,140.556980416201)" rx="2" ry="2" />
<text  x="428.49" y="129.5" ></text>
</g>
<g >
<title>firedrake.utility_meshes.SquareMesh (2,256 us, 0.02%)</title><rect x="426.2" y="71" width="0.2" height="15.0" fill="rgb(135.833258077051,161.608539382806,135.833258077051)" rx="2" ry="2" />
<text  x="429.15" y="81.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalProblem.__init__ (11,988 us, 0.11%)</title><rect x="428.0" y="87" width="1.3" height="15.0" fill="rgb(144.787337185202,144.787337185202,155.442710422942)" rx="2" ry="2" />
<text  x="431.03" y="97.5" ></text>
</g>
<g >
<title>PCSetUp (901,810 us, 8.12%)</title><rect x="430.3" y="119" width="95.8" height="15.0" fill="rgb(124.198463339498,124.198463339498,151.457767097967)" rx="2" ry="2" />
<text  x="433.30" y="129.5" >PCSetUp</text>
</g>
<g >
<title>Log_Event_form1_cell_integral_otherwise (1,591 us, 0.01%)</title><rect x="834.4" y="167" width="0.2" height="15.0" fill="rgb(144.090224855278,154.393761999516,154.393761999516)" rx="2" ry="2" />
<text  x="837.39" y="177.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (799,898 us, 7.20%)</title><rect x="441.1" y="183" width="85.0" height="15.0" fill="rgb(112.873118450326,146.300438116751,146.300438116751)" rx="2" ry="2" />
<text  x="444.13" y="193.5" >Parloop_C..</text>
</g>
<g >
<title>ParLoopExecute (799,898 us, 7.20%)</title><rect x="441.1" y="167" width="85.0" height="15.0" fill="rgb(139.894194582415,153.305902299145,153.305902299145)" rx="2" ry="2" />
<text  x="444.13" y="177.5" >ParLoopEx..</text>
</g>
<g >
<title>firedrake.extrusion_utils.make_extruded_coords (1,211,792 us, 10.91%)</title><rect x="10.3" y="87" width="128.7" height="15.0" fill="rgb(104.197809739188,144.051284006456,144.051284006456)" rx="2" ry="2" />
<text  x="13.29" y="97.5" >firedrake.extr..</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (2,311,968 us, 20.82%)</title><rect x="834.6" y="167" width="245.6" height="15.0" fill="rgb(150.067838433979,159.291282115399,150.067838433979)" rx="2" ry="2" />
<text  x="837.56" y="177.5" >pyop2.global_kernel.GlobalKern..</text>
</g>
<g >
<title>ParLoopExecute (5,212,057 us, 46.93%)</title><rect x="526.5" y="135" width="553.7" height="15.0" fill="rgb(135.249340140999,135.249340140999,153.596646478903)" rx="2" ry="2" />
<text  x="529.46" y="145.5" >ParLoopExecute</text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (4,883 us, 0.04%)</title><rect x="432.1" y="167" width="0.5" height="15.0" fill="rgb(143.518421921302,120.890956173336,143.518421921302)" rx="2" ry="2" />
<text  x="435.13" y="177.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (1,811 us, 0.02%)</title><rect x="431.9" y="215" width="0.2" height="15.0" fill="rgb(145.682629484606,154.806607644157,154.806607644157)" rx="2" ry="2" />
<text  x="434.93" y="225.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (6,281 us, 0.06%)</title><rect x="425.5" y="87" width="0.7" height="15.0" fill="rgb(131.120660736553,151.03128241318,151.03128241318)" rx="2" ry="2" />
<text  x="428.49" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (7,044 us, 0.06%)</title><rect x="139.0" y="119" width="0.8" height="15.0" fill="rgb(148.176920538127,148.176920538127,110.395845684767)" rx="2" ry="2" />
<text  x="142.03" y="129.5" ></text>
</g>
<g >
<title>firedrake.utility_meshes.RectangleMesh (2,256 us, 0.02%)</title><rect x="426.2" y="87" width="0.2" height="15.0" fill="rgb(129.752204795359,129.752204795359,152.532684799102)" rx="2" ry="2" />
<text  x="429.15" y="97.5" ></text>
</g>
<g >
<title>firedrake.slate.slac.optimise.optimise (3,442 us, 0.03%)</title><rect x="434.4" y="167" width="0.4" height="15.0" fill="rgb(155.532284132836,139.080845018409,139.080845018409)" rx="2" ry="2" />
<text  x="437.39" y="177.5" ></text>
</g>
<g >
<title>firedrake.functionspace.VectorFunctionSpace (7,044 us, 0.06%)</title><rect x="139.0" y="87" width="0.8" height="15.0" fill="rgb(147.891127903056,147.891127903056,109.010850607119)" rx="2" ry="2" />
<text  x="142.03" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (7,044 us, 0.06%)</title><rect x="139.0" y="151" width="0.8" height="15.0" fill="rgb(149.366455779155,159.405460687114,149.366455779155)" rx="2" ry="2" />
<text  x="142.03" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (4,883 us, 0.04%)</title><rect x="432.1" y="183" width="0.5" height="15.0" fill="rgb(148.272440987529,133.073130030544,148.272440987529)" rx="2" ry="2" />
<text  x="435.13" y="193.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.solve (7,150,819 us, 64.38%)</title><rect x="430.3" y="87" width="759.7" height="15.0" fill="rgb(155.402180231697,138.083381776343,138.083381776343)" rx="2" ry="2" />
<text  x="433.30" y="97.5" >firedrake.variational_solver.NonlinearVariationalSolver.solve</text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (6,281 us, 0.06%)</title><rect x="425.5" y="103" width="0.7" height="15.0" fill="rgb(129.001674090522,129.001674090522,152.387420791714)" rx="2" ry="2" />
<text  x="428.49" y="113.5" ></text>
</g>
<g >
<title>firedrake.functionspace.MixedFunctionSpace (1,811 us, 0.02%)</title><rect x="431.9" y="167" width="0.2" height="15.0" fill="rgb(153.470739196367,153.470739196367,136.050505336239)" rx="2" ry="2" />
<text  x="434.93" y="177.5" ></text>
</g>
<g >
<title>firedrake.mesh.MeshTopology._facets (2,618 us, 0.02%)</title><rect x="425.9" y="151" width="0.3" height="15.0" fill="rgb(124.184322953911,149.232972617681,149.232972617681)" rx="2" ry="2" />
<text  x="428.88" y="161.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (10,373 us, 0.09%)</title><rect x="435.8" y="151" width="1.1" height="15.0" fill="rgb(147.753586578498,159.668020789547,147.753586578498)" rx="2" ry="2" />
<text  x="438.75" y="161.5" ></text>
</g>
<g >
<title>firedrake (11,107,019 us, 100.00%)</title><rect x="10.0" y="55" width="1180.0" height="15.0" fill="rgb(151.939213190242,151.939213190242,128.628494691171)" rx="2" ry="2" />
<text  x="13.00" y="65.5" >firedrake</text>
</g>
<g >
<title>CreateFunctionSpace (1,221 us, 0.01%)</title><rect x="1189.9" y="199" width="0.1" height="15.0" fill="rgb(137.904034351911,161.271436268294,137.904034351911)" rx="2" ry="2" />
<text  x="1192.87" y="209.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (1,811 us, 0.02%)</title><rect x="431.9" y="231" width="0.2" height="15.0" fill="rgb(150.234327393596,150.234327393596,120.366355830502)" rx="2" ry="2" />
<text  x="434.93" y="241.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (17,436 us, 0.16%)</title><rect x="139.9" y="103" width="1.9" height="15.0" fill="rgb(152.408686424476,115.133262587648,115.133262587648)" rx="2" ry="2" />
<text  x="142.91" y="113.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (6,694 us, 0.06%)</title><rect x="431.9" y="151" width="0.7" height="15.0" fill="rgb(152.813449085642,152.813449085642,132.865176338113)" rx="2" ry="2" />
<text  x="434.93" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (2,187 us, 0.02%)</title><rect x="436.6" y="231" width="0.3" height="15.0" fill="rgb(149.87027886188,159.323442975973,149.87027886188)" rx="2" ry="2" />
<text  x="439.62" y="241.5" ></text>
</g>
<g >
<title>firedrake.assemble.allocate_matrix (7,913 us, 0.07%)</title><rect x="429.5" y="87" width="0.8" height="15.0" fill="rgb(113.886488014011,146.563163559188,146.563163559188)" rx="2" ry="2" />
<text  x="432.46" y="97.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (1,170,243 us, 10.54%)</title><rect x="14.7" y="135" width="124.3" height="15.0" fill="rgb(147.61576934905,147.61576934905,107.676420691552)" rx="2" ry="2" />
<text  x="17.70" y="145.5" >pyop2.global_k..</text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.__init__ (9,427 us, 0.08%)</title><rect x="429.3" y="71" width="1.0" height="15.0" fill="rgb(115.139215276918,115.139215276918,149.704364247145)" rx="2" ry="2" />
<text  x="432.30" y="81.5" ></text>
</g>
<g >
<title>CreateMesh (2,070 us, 0.02%)</title><rect x="141.8" y="71" width="0.2" height="15.0" fill="rgb(111.573884328963,145.963599640842,145.963599640842)" rx="2" ry="2" />
<text  x="144.76" y="81.5" ></text>
</g>
<g >
<title>firedrake.matrix_free.operators.ImplicitMatrixContext.__init__ (7,913 us, 0.07%)</title><rect x="429.5" y="103" width="0.8" height="15.0" fill="rgb(156.213639016663,144.30456579442,144.30456579442)" rx="2" ry="2" />
<text  x="432.46" y="113.5" ></text>
</g>
<g >
<title>CreateExtMesh (1,221,559 us, 11.00%)</title><rect x="10.0" y="71" width="129.8" height="15.0" fill="rgb(136.651621135001,103.294779158441,136.651621135001)" rx="2" ry="2" />
<text  x="13.00" y="81.5" >CreateExtMesh</text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (17,436 us, 0.16%)</title><rect x="139.9" y="87" width="1.9" height="15.0" fill="rgb(108.768264042733,145.236216603672,145.236216603672)" rx="2" ry="2" />
<text  x="142.91" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (7,044 us, 0.06%)</title><rect x="139.0" y="135" width="0.8" height="15.0" fill="rgb(153.643933480359,153.643933480359,136.889831481739)" rx="2" ry="2" />
<text  x="142.03" y="145.5" ></text>
</g>
<g >
<title>firedrake.functionspace.VectorFunctionSpace (6,281 us, 0.06%)</title><rect x="425.5" y="71" width="0.7" height="15.0" fill="rgb(155.109943076342,155.109943076342,143.994339523809)" rx="2" ry="2" />
<text  x="428.49" y="81.5" ></text>
</g>
<g >
<title>CreateSparsity (7,657 us, 0.07%)</title><rect x="434.8" y="167" width="0.8" height="15.0" fill="rgb(154.854877491602,154.854877491602,142.758252459301)" rx="2" ry="2" />
<text  x="437.75" y="177.5" ></text>
</g>
<g >
<title>HybridInit (901,810 us, 8.12%)</title><rect x="430.3" y="135" width="95.8" height="15.0" fill="rgb(124.917861841631,149.423149366349,149.423149366349)" rx="2" ry="2" />
<text  x="433.30" y="145.5" >HybridInit</text>
</g>
<g >
<title>firedrake.ufl_expr.action (15,381 us, 0.14%)</title><rect x="426.4" y="87" width="1.6" height="15.0" fill="rgb(144.194879497593,160.247345198066,144.194879497593)" rx="2" ry="2" />
<text  x="429.39" y="97.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_form0_cell_integral_otherwise (2,888,743 us, 26.01%)</title><rect x="526.5" y="151" width="306.9" height="15.0" fill="rgb(154.594384686541,131.890282596811,131.890282596811)" rx="2" ry="2" />
<text  x="529.46" y="161.5" >Parloop_Cells_wrap_form0_cell_integral..</text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (1,033,700 us, 9.31%)</title><rect x="1080.2" y="135" width="109.8" height="15.0" fill="rgb(138.326776237172,107.587364107753,138.326776237172)" rx="2" ry="2" />
<text  x="1083.18" y="145.5" >firedrake.ts..</text>
</g>
<g >
<title>firedrake.interpolation.make_interpolator (33,383 us, 0.30%)</title><rect x="437.0" y="151" width="3.5" height="15.0" fill="rgb(152.120496728385,152.120496728385,129.507022606787)" rx="2" ry="2" />
<text  x="439.99" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspace.make_scalar_element (1,325 us, 0.01%)</title><rect x="436.5" y="215" width="0.1" height="15.0" fill="rgb(155.363224052961,137.784717739369,137.784717739369)" rx="2" ry="2" />
<text  x="439.48" y="225.5" ></text>
</g>
</g>
</svg>
