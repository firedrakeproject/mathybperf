<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="283" onload="init(evt)" viewBox="0 0 1200 283" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:13px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:18px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 13 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (1 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="283.0" fill="url(#background)"  />
<text id="title" x="600.00" y="26" >Firedrake example</text>
<text id="details" x="10.00" y="265" > </text>
<text id="unzoom" x="10.00" y="26" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="26" >Search</text>
<text id="ignorecase" x="1174.00" y="26" >ic</text>
<text id="matched" x="1090.00" y="265" > </text>
<g id="frames">
<g >
<title>Parloop_Cells_wrap_form0_cell_integral_otherwise (2,782,661 us, 3.95%)</title><rect x="1086.7" y="151" width="46.5" height="15.0" fill="rgb(152.338941632091,152.338941632091,130.565640217055)" rx="2" ry="2" />
<text  x="1089.68" y="161.5" >Parl..</text>
</g>
<g >
<title>firedrake.extrusion_utils.make_extruded_coords (1,323,859 us, 1.88%)</title><rect x="17.2" y="87" width="22.1" height="15.0" fill="rgb(148.544618586082,148.544618586082,112.17776699409)" rx="2" ry="2" />
<text  x="20.15" y="97.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (946,722 us, 1.34%)</title><rect x="559.0" y="231" width="15.8" height="15.0" fill="rgb(150.29457139046,150.29457139046,120.658307507614)" rx="2" ry="2" />
<text  x="562.00" y="241.5" ></text>
</g>
<g >
<title>ParLoopExecute (9,228,345 us, 13.09%)</title><rect x="125.1" y="167" width="154.4" height="15.0" fill="rgb(135.264133240068,161.701187612082,135.264133240068)" rx="2" ry="2" />
<text  x="128.07" y="177.5" >ParLoopExecute</text>
</g>
<g >
<title>SCBackSub (28,107,603 us, 39.87%)</title><rect x="88.5" y="151" width="470.5" height="15.0" fill="rgb(139.078715608215,139.078715608215,154.337815924171)" rx="2" ry="2" />
<text  x="91.55" y="161.5" >SCBackSub</text>
</g>
<g >
<title>Log_Event_slate_loopy_knl_0 (169,699 us, 0.24%)</title><rect x="824.4" y="199" width="2.9" height="15.0" fill="rgb(121.915114791601,148.644659390415,148.644659390415)" rx="2" ry="2" />
<text  x="827.43" y="209.5" ></text>
</g>
<g >
<title>firedrake.parloops.par_loop (946,722 us, 1.34%)</title><rect x="559.0" y="183" width="15.8" height="15.0" fill="rgb(153.388196486034,153.388196486034,135.650490663085)" rx="2" ry="2" />
<text  x="562.00" y="193.5" ></text>
</g>
<g >
<title>firedrake.functionspace.VectorFunctionSpace (7,309 us, 0.01%)</title><rect x="39.3" y="87" width="0.1" height="15.0" fill="rgb(154.937851129825,134.523525328659,134.523525328659)" rx="2" ry="2" />
<text  x="42.31" y="97.5" ></text>
</g>
<g >
<title>ParLoopExecute (12,523,451 us, 17.76%)</title><rect x="824.2" y="167" width="209.6" height="15.0" fill="rgb(111.33671601595,145.902111559691,145.902111559691)" rx="2" ry="2" />
<text  x="827.21" y="177.5" >ParLoopExecute</text>
</g>
<g >
<title>Parloop_Cells_wrap_wrap_slate_loopy_knl_4 (10,300,337 us, 14.61%)</title><rect x="593.7" y="199" width="172.4" height="15.0" fill="rgb(124.235682930498,124.235682930498,151.464970889774)" rx="2" ry="2" />
<text  x="596.74" y="209.5" >Parloop_Cells_wrap_w..</text>
</g>
<g >
<title>HybridOperatorAssembly (16,693,362 us, 23.68%)</title><rect x="794.9" y="151" width="279.4" height="15.0" fill="rgb(141.716898952836,160.650737379771,141.716898952836)" rx="2" ry="2" />
<text  x="797.92" y="161.5" >HybridOperatorAssembly</text>
</g>
<g >
<title>Parloop_Cells_wrap_wrap_slate_loopy_knl_0 (12,523,451 us, 17.76%)</title><rect x="824.2" y="183" width="209.6" height="15.0" fill="rgb(155.676202750388,140.184221086309,140.184221086309)" rx="2" ry="2" />
<text  x="827.21" y="193.5" >Parloop_Cells_wrap_wrap_s..</text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (1,052,268 us, 1.49%)</title><rect x="107.5" y="215" width="17.6" height="15.0" fill="rgb(154.936812028531,154.936812028531,143.155319830575)" rx="2" ry="2" />
<text  x="110.45" y="225.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (7,863 us, 0.01%)</title><rect x="1074.5" y="151" width="0.1" height="15.0" fill="rgb(121.170155212933,148.451521721871,148.451521721871)" rx="2" ry="2" />
<text  x="1077.47" y="161.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.solve (65,807,616 us, 93.34%)</title><rect x="88.5" y="87" width="1101.5" height="15.0" fill="rgb(152.300522973556,114.30400946393,114.30400946393)" rx="2" ry="2" />
<text  x="91.55" y="97.5" >firedrake.variational_solver.NonlinearVariationalSolver.solve</text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (946,722 us, 1.34%)</title><rect x="559.0" y="215" width="15.8" height="15.0" fill="rgb(155.647065070213,139.960832204965,139.960832204965)" rx="2" ry="2" />
<text  x="562.00" y="225.5" ></text>
</g>
<g >
<title>RecoverFirstElim (14,925,496 us, 21.17%)</title><rect x="279.5" y="167" width="249.8" height="15.0" fill="rgb(146.547439281812,159.864370349472,146.547439281812)" rx="2" ry="2" />
<text  x="282.53" y="177.5" >RecoverFirstElim</text>
</g>
<g >
<title>CreateFunctionSpace (9,996 us, 0.01%)</title><rect x="794.8" y="151" width="0.1" height="15.0" fill="rgb(137.19238401538,152.605432892876,152.605432892876)" rx="2" ry="2" />
<text  x="797.75" y="161.5" ></text>
</g>
<g >
<title>firedrake.interpolation.make_interpolator (26,310 us, 0.04%)</title><rect x="1074.6" y="151" width="0.4" height="15.0" fill="rgb(144.769402951861,160.153818124116,144.769402951861)" rx="2" ry="2" />
<text  x="1077.61" y="161.5" ></text>
</g>
<g >
<title>Log_Event_form0_cell_integral_otherwise (8,620 us, 0.01%)</title><rect x="1086.8" y="167" width="0.2" height="15.0" fill="rgb(148.439050928588,148.439050928588,111.666169884695)" rx="2" ry="2" />
<text  x="1089.84" y="177.5" ></text>
</g>
<g >
<title>ParLoopExecute (11,119,937 us, 15.77%)</title><rect x="304.2" y="183" width="186.1" height="15.0" fill="rgb(154.19343533842,128.816337594552,128.816337594552)" rx="2" ry="2" />
<text  x="307.22" y="193.5" >ParLoopExecute</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (2,383,112 us, 3.38%)</title><rect x="1133.4" y="167" width="39.9" height="15.0" fill="rgb(153.070505094397,153.070505094397,134.110909303616)" rx="2" ry="2" />
<text  x="1136.44" y="177.5" >pyo..</text>
</g>
<g >
<title>HybridInit (17,459,337 us, 24.76%)</title><rect x="794.5" y="135" width="292.2" height="15.0" fill="rgb(150.142123705504,159.27918916422,150.142123705504)" rx="2" ry="2" />
<text  x="797.45" y="145.5" >HybridInit</text>
</g>
<g >
<title>Log_Event_slate_loopy_knl_7 (8,152 us, 0.01%)</title><rect x="307.0" y="231" width="0.1" height="15.0" fill="rgb(153.882132738541,153.882132738541,138.044181732928)" rx="2" ry="2" />
<text  x="309.95" y="241.5" ></text>
</g>
<g >
<title>all (70,500,533 us, 100%)</title><rect x="10.0" y="39" width="1180.0" height="15.0" fill="rgb(133.103068828218,94.2016138723074,133.103068828218)" rx="2" ry="2" />
<text  x="13.00" y="49.5" ></text>
</g>
<g >
<title>KSPSolve (42,175,005 us, 59.82%)</title><rect x="88.5" y="119" width="706.0" height="15.0" fill="rgb(154.864036649968,133.957614316421,133.957614316421)" rx="2" ry="2" />
<text  x="91.55" y="129.5" >KSPSolve</text>
</g>
<g >
<title>firedrake.__init__ (2,884,919 us, 4.09%)</title><rect x="39.6" y="71" width="48.3" height="15.0" fill="rgb(139.701586469561,139.701586469561,154.458371574754)" rx="2" ry="2" />
<text  x="42.64" y="81.5" >fire..</text>
</g>
<g >
<title>firedrake.variational_solver.LinearVariationalProblem.__init__ (21,991 us, 0.03%)</title><rect x="87.9" y="71" width="0.4" height="15.0" fill="rgb(120.536728069001,120.536728069001,150.749044142387)" rx="2" ry="2" />
<text  x="90.93" y="81.5" ></text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (2,329,905 us, 3.30%)</title><rect x="490.3" y="183" width="39.0" height="15.0" fill="rgb(155.081675911837,135.626181990753,135.626181990753)" rx="2" ry="2" />
<text  x="493.34" y="193.5" >fir..</text>
</g>
<g >
<title>Log_Event_slate_loopy_knl_14 (147,990 us, 0.21%)</title><rect x="125.3" y="199" width="2.5" height="15.0" fill="rgb(152.71047292148,117.446959064677,117.446959064677)" rx="2" ry="2" />
<text  x="128.31" y="209.5" ></text>
</g>
<g >
<title>firedrake.matrix_free.operators.ImplicitMatrixContext.__init__ (7,888 us, 0.01%)</title><rect x="88.4" y="103" width="0.1" height="15.0" fill="rgb(114.979909593537,146.846643227954,146.846643227954)" rx="2" ry="2" />
<text  x="91.42" y="113.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.action (11,751 us, 0.02%)</title><rect x="87.9" y="87" width="0.2" height="15.0" fill="rgb(141.442048532146,160.695480471511,141.442048532146)" rx="2" ry="2" />
<text  x="90.93" y="97.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (7,863 us, 0.01%)</title><rect x="1074.5" y="183" width="0.1" height="15.0" fill="rgb(155.683975437508,140.243811687561,140.243811687561)" rx="2" ry="2" />
<text  x="1077.47" y="193.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (694,738 us, 0.99%)</title><rect x="1075.0" y="199" width="11.7" height="15.0" fill="rgb(154.761938046074,133.174858353232,133.174858353232)" rx="2" ry="2" />
<text  x="1078.05" y="209.5" ></text>
</g>
<g >
<title>firedrake.assemble.allocate_matrix (8,969 us, 0.01%)</title><rect x="1074.3" y="151" width="0.2" height="15.0" fill="rgb(142.144997044214,160.581046992802,142.144997044214)" rx="2" ry="2" />
<text  x="1077.32" y="161.5" ></text>
</g>
<g >
<title>HybridProject (1,059,467 us, 1.50%)</title><rect x="107.3" y="167" width="17.8" height="15.0" fill="rgb(155.490824919114,155.490824919114,145.840151531091)" rx="2" ry="2" />
<text  x="110.33" y="177.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_pyop2_kernel_uniform_extrusion (1,282,001 us, 1.82%)</title><rect x="17.9" y="119" width="21.4" height="15.0" fill="rgb(154.300962162001,154.300962162001,140.073893554311)" rx="2" ry="2" />
<text  x="20.86" y="129.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (9,065,580 us, 12.86%)</title><rect x="127.8" y="199" width="151.7" height="15.0" fill="rgb(140.803749219534,160.799389661936,140.803749219534)" rx="2" ry="2" />
<text  x="130.79" y="209.5" >pyop2.global_kern..</text>
</g>
<g >
<title>ParLoopExecute (946,722 us, 1.34%)</title><rect x="559.0" y="199" width="15.8" height="15.0" fill="rgb(152.922256762829,119.070635181688,119.070635181688)" rx="2" ry="2" />
<text  x="562.00" y="209.5" ></text>
</g>
<g >
<title>ParLoopExecute (694,738 us, 0.99%)</title><rect x="1075.0" y="167" width="11.7" height="15.0" fill="rgb(141.800602986427,116.48904515272,141.800602986427)" rx="2" ry="2" />
<text  x="1078.05" y="177.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (12,343 us, 0.02%)</title><rect x="39.4" y="71" width="0.2" height="15.0" fill="rgb(132.727908224876,93.2402648262444,132.727908224876)" rx="2" ry="2" />
<text  x="42.44" y="81.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_wrap_slate_loopy_knl_14 (9,228,345 us, 13.09%)</title><rect x="125.1" y="183" width="154.4" height="15.0" fill="rgb(117.738283789465,117.738283789465,150.207409765703)" rx="2" ry="2" />
<text  x="128.07" y="193.5" >Parloop_Cells_wrap..</text>
</g>
<g >
<title>HybridBreak (946,722 us, 1.34%)</title><rect x="559.0" y="167" width="15.8" height="15.0" fill="rgb(129.668546148557,162.612097138607,129.668546148557)" rx="2" ry="2" />
<text  x="562.00" y="177.5" ></text>
</g>
<g >
<title>HybridRHS (13,120,680 us, 18.61%)</title><rect x="574.8" y="167" width="219.7" height="15.0" fill="rgb(132.437200429653,162.161385976568,132.437200429653)" rx="2" ry="2" />
<text  x="577.84" y="177.5" >HybridRHS</text>
</g>
<g >
<title>Log_Event_slate_loopy_knl_7 (157,528 us, 0.22%)</title><rect x="304.5" y="215" width="2.6" height="15.0" fill="rgb(154.266968962185,129.380095376748,129.380095376748)" rx="2" ry="2" />
<text  x="307.45" y="225.5" ></text>
</g>
<g >
<title>ParLoopExecute (5,177,075 us, 7.34%)</title><rect x="1086.7" y="135" width="86.6" height="15.0" fill="rgb(138.17928209149,161.226628496734,138.17928209149)" rx="2" ry="2" />
<text  x="1089.68" y="145.5" >ParLoopEx..</text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (12,343 us, 0.02%)</title><rect x="39.4" y="87" width="0.2" height="15.0" fill="rgb(142.823516609949,142.823516609949,155.062616118055)" rx="2" ry="2" />
<text  x="42.44" y="97.5" ></text>
</g>
<g >
<title>SCForwardElim (14,067,402 us, 19.95%)</title><rect x="559.0" y="151" width="235.5" height="15.0" fill="rgb(152.936716415442,119.181492518391,119.181492518391)" rx="2" ry="2" />
<text  x="562.00" y="161.5" >SCForwardElim</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (10,174,654 us, 14.43%)</title><rect x="595.8" y="215" width="170.3" height="15.0" fill="rgb(127.020392782753,127.020392782753,152.00394699021)" rx="2" ry="2" />
<text  x="598.85" y="225.5" >pyop2.global_kernel...</text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.__init__ (15,028 us, 0.02%)</title><rect x="88.3" y="71" width="0.2" height="15.0" fill="rgb(152.684401131026,152.684401131026,132.239790096509)" rx="2" ry="2" />
<text  x="91.30" y="81.5" ></text>
</g>
<g >
<title>SNESFunctionEval (6,173,274 us, 8.76%)</title><rect x="1086.7" y="119" width="103.3" height="15.0" fill="rgb(111.078400582183,111.078400582183,148.918400112681)" rx="2" ry="2" />
<text  x="1089.68" y="129.5" >SNESFunctio..</text>
</g>
<g >
<title>firedrake.assemble.allocate_matrix (15,028 us, 0.02%)</title><rect x="88.3" y="87" width="0.2" height="15.0" fill="rgb(139.105950501752,161.075775499715,139.105950501752)" rx="2" ry="2" />
<text  x="91.30" y="97.5" ></text>
</g>
<g >
<title>ParLoopExecute (1,282,001 us, 1.82%)</title><rect x="17.9" y="103" width="21.4" height="15.0" fill="rgb(144.194652457944,122.623796923482,144.194652457944)" rx="2" ry="2" />
<text  x="20.86" y="113.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (12,343 us, 0.02%)</title><rect x="39.4" y="103" width="0.2" height="15.0" fill="rgb(129.785199706534,150.685051775768,150.685051775768)" rx="2" ry="2" />
<text  x="42.44" y="113.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (12,340,682 us, 17.50%)</title><rect x="827.3" y="199" width="206.5" height="15.0" fill="rgb(154.743368693185,154.743368693185,142.217863666973)" rx="2" ry="2" />
<text  x="830.27" y="209.5" >pyop2.global_kernel.Glob..</text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (12,343 us, 0.02%)</title><rect x="39.4" y="119" width="0.2" height="15.0" fill="rgb(137.546732510249,161.329601684378,137.546732510249)" rx="2" ry="2" />
<text  x="42.44" y="129.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (1,052,268 us, 1.49%)</title><rect x="107.5" y="231" width="17.6" height="15.0" fill="rgb(152.204834048384,152.204834048384,129.915734234476)" rx="2" ry="2" />
<text  x="110.45" y="241.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (2,764,343 us, 3.92%)</title><rect x="1087.0" y="167" width="46.2" height="15.0" fill="rgb(121.411218894301,148.514019713337,148.514019713337)" rx="2" ry="2" />
<text  x="1089.98" y="177.5" >pyop..</text>
</g>
<g >
<title>SNESSolve (65,807,616 us, 93.34%)</title><rect x="88.5" y="103" width="1101.5" height="15.0" fill="rgb(154.822724431212,133.64088730596,133.64088730596)" rx="2" ry="2" />
<text  x="91.55" y="113.5" >SNESSolve</text>
</g>
<g >
<title>CreateFunctionSpace (7,309 us, 0.01%)</title><rect x="39.3" y="103" width="0.1" height="15.0" fill="rgb(155.408831994361,155.408831994361,145.442801203443)" rx="2" ry="2" />
<text  x="42.31" y="113.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (7,309 us, 0.01%)</title><rect x="39.3" y="119" width="0.1" height="15.0" fill="rgb(120.646293784235,120.646293784235,150.770250409852)" rx="2" ry="2" />
<text  x="42.31" y="129.5" ></text>
</g>
<g >
<title>firedrake.parloops.par_loop (1,059,467 us, 1.50%)</title><rect x="107.3" y="183" width="17.8" height="15.0" fill="rgb(108.194667835436,145.087506475854,145.087506475854)" rx="2" ry="2" />
<text  x="110.33" y="193.5" ></text>
</g>
<g >
<title>CreateExtMesh (1,331,168 us, 1.89%)</title><rect x="17.2" y="71" width="22.2" height="15.0" fill="rgb(130.344389605221,150.830026934687,150.830026934687)" rx="2" ry="2" />
<text  x="20.15" y="81.5" ></text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (996,199 us, 1.41%)</title><rect x="1173.3" y="135" width="16.7" height="15.0" fill="rgb(154.783944740683,133.343576345233,133.343576345233)" rx="2" ry="2" />
<text  x="1176.33" y="145.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (7,863 us, 0.01%)</title><rect x="1074.5" y="167" width="0.1" height="15.0" fill="rgb(135.198837684788,99.5720215672704,135.198837684788)" rx="2" ry="2" />
<text  x="1077.47" y="177.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_wrap_slate_loopy_knl_7 (11,119,937 us, 15.77%)</title><rect x="304.2" y="199" width="186.1" height="15.0" fill="rgb(123.561468600601,123.561468600601,151.334477793665)" rx="2" ry="2" />
<text  x="307.22" y="209.5" >Parloop_Cells_wrap_wra..</text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalProblem.__init__ (10,240 us, 0.01%)</title><rect x="88.1" y="87" width="0.2" height="15.0" fill="rgb(123.579625499933,149.076199203686,149.076199203686)" rx="2" ry="2" />
<text  x="91.12" y="97.5" ></text>
</g>
<g >
<title>Log_Event_slate_loopy_knl_4 (113,166 us, 0.16%)</title><rect x="594.0" y="215" width="1.8" height="15.0" fill="rgb(154.437484342823,130.687379961644,130.687379961644)" rx="2" ry="2" />
<text  x="596.95" y="225.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (10,948,724 us, 15.53%)</title><rect x="307.1" y="215" width="183.2" height="15.0" fill="rgb(152.769374182443,152.769374182443,132.651582576455)" rx="2" ry="2" />
<text  x="310.09" y="225.5" >pyop2.global_kernel.G..</text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (2,420,181 us, 3.43%)</title><rect x="1033.8" y="167" width="40.5" height="15.0" fill="rgb(137.575124880747,105.661257506913,137.575124880747)" rx="2" ry="2" />
<text  x="1036.82" y="177.5" >fir..</text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (1,771,914 us, 2.51%)</title><rect x="529.3" y="167" width="29.7" height="15.0" fill="rgb(141.449736303165,115.58994927686,141.449736303165)" rx="2" ry="2" />
<text  x="532.34" y="177.5" >f..</text>
</g>
<g >
<title>firedrake.parloops.par_loop (694,738 us, 0.99%)</title><rect x="1075.0" y="151" width="11.7" height="15.0" fill="rgb(151.253941149048,151.253941149048,125.307560953078)" rx="2" ry="2" />
<text  x="1078.05" y="161.5" ></text>
</g>
<g >
<title>PCApply (42,175,005 us, 59.82%)</title><rect x="88.5" y="135" width="706.0" height="15.0" fill="rgb(154.667161829556,132.448240693259,132.448240693259)" rx="2" ry="2" />
<text  x="91.55" y="145.5" >PCApply</text>
</g>
<g >
<title>PCSetUp (17,459,337 us, 24.76%)</title><rect x="794.5" y="119" width="292.2" height="15.0" fill="rgb(133.387943643278,133.387943643278,153.236376189021)" rx="2" ry="2" />
<text  x="797.45" y="129.5" >PCSetUp</text>
</g>
<g >
<title>ParLoopExecute (10,300,337 us, 14.61%)</title><rect x="593.7" y="183" width="172.4" height="15.0" fill="rgb(135.4468679095,135.4468679095,153.634877659903)" rx="2" ry="2" />
<text  x="596.74" y="193.5" >ParLoopExecute</text>
</g>
<g >
<title>firedrake (70,500,533 us, 100.00%)</title><rect x="10.0" y="55" width="1180.0" height="15.0" fill="rgb(150.368043364859,150.368043364859,121.014363998933)" rx="2" ry="2" />
<text  x="13.00" y="65.5" >firedrake</text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (1,691,064 us, 2.40%)</title><rect x="766.1" y="183" width="28.4" height="15.0" fill="rgb(108.61660398938,108.61660398938,148.441923352783)" rx="2" ry="2" />
<text  x="769.15" y="193.5" >f..</text>
</g>
<g >
<title>perfsolve (65,807,616 us, 93.34%)</title><rect x="88.5" y="71" width="1101.5" height="15.0" fill="rgb(128.932722599947,162.731882367451,128.932722599947)" rx="2" ry="2" />
<text  x="91.55" y="81.5" >perfsolve</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (1,282,001 us, 1.82%)</title><rect x="17.9" y="135" width="21.4" height="15.0" fill="rgb(154.827886748643,154.827886748643,142.6274511665)" rx="2" ry="2" />
<text  x="20.86" y="145.5" ></text>
</g>
<g >
<title>ParLoopExecute (1,052,268 us, 1.49%)</title><rect x="107.5" y="199" width="17.6" height="15.0" fill="rgb(139.449192343696,153.190531348366,153.190531348366)" rx="2" ry="2" />
<text  x="110.45" y="209.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (694,738 us, 0.99%)</title><rect x="1075.0" y="183" width="11.7" height="15.0" fill="rgb(154.126880221177,128.306081695692,128.306081695692)" rx="2" ry="2" />
<text  x="1078.05" y="193.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_form1_cell_integral_otherwise (2,394,414 us, 3.40%)</title><rect x="1133.2" y="151" width="40.1" height="15.0" fill="rgb(132.689244308788,93.1411885412686,132.689244308788)" rx="2" ry="2" />
<text  x="1136.25" y="161.5" >Par..</text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (10,240 us, 0.01%)</title><rect x="88.1" y="103" width="0.2" height="15.0" fill="rgb(152.994747574763,119.62639807318,119.62639807318)" rx="2" ry="2" />
<text  x="91.12" y="113.5" ></text>
</g>
</g>
</svg>
