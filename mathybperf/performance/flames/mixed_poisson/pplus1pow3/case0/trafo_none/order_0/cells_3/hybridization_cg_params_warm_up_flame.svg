<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="283" onload="init(evt)" viewBox="0 0 1200 283" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:13px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:18px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 13 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (1 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="283.0" fill="url(#background)"  />
<text id="title" x="600.00" y="26" >Firedrake example</text>
<text id="details" x="10.00" y="265" > </text>
<text id="unzoom" x="10.00" y="26" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="26" >Search</text>
<text id="ignorecase" x="1174.00" y="26" >ic</text>
<text id="matched" x="1090.00" y="265" > </text>
<g id="frames">
<g >
<title>firedrake.tsfc_interface.compile_form (2,141,505 us, 3.06%)</title><rect x="492.6" y="183" width="36.0" height="15.0" fill="rgb(134.79001894481,98.5244235460767,134.79001894481)" rx="2" ry="2" />
<text  x="495.57" y="193.5" >fi..</text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (7,137 us, 0.01%)</title><rect x="1066.3" y="167" width="0.1" height="15.0" fill="rgb(151.993962321658,151.993962321658,128.893817404957)" rx="2" ry="2" />
<text  x="1069.30" y="177.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (7,137 us, 0.01%)</title><rect x="1066.3" y="183" width="0.1" height="15.0" fill="rgb(135.820890857514,152.249860592689,152.249860592689)" rx="2" ry="2" />
<text  x="1069.30" y="193.5" ></text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (1,791,143 us, 2.56%)</title><rect x="528.6" y="167" width="30.2" height="15.0" fill="rgb(114.024831656947,114.024831656947,149.488677094893)" rx="2" ry="2" />
<text  x="531.62" y="177.5" >f..</text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (11,862 us, 0.02%)</title><rect x="39.1" y="103" width="0.2" height="15.0" fill="rgb(140.827953666544,140.827953666544,154.676378129008)" rx="2" ry="2" />
<text  x="42.12" y="113.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (7,137 us, 0.01%)</title><rect x="1066.3" y="151" width="0.1" height="15.0" fill="rgb(155.405263008333,138.107016397219,138.107016397219)" rx="2" ry="2" />
<text  x="1069.30" y="161.5" ></text>
</g>
<g >
<title>PCSetUp (17,529,018 us, 25.01%)</title><rect x="783.5" y="119" width="295.1" height="15.0" fill="rgb(115.145982965189,115.145982965189,149.705674122295)" rx="2" ry="2" />
<text  x="786.55" y="129.5" >PCSetUp</text>
</g>
<g >
<title>firedrake.matrix_free.operators.ImplicitMatrixContext.__init__ (8,241 us, 0.01%)</title><rect x="84.7" y="103" width="0.2" height="15.0" fill="rgb(127.076394239004,127.076394239004,152.014785981743)" rx="2" ry="2" />
<text  x="87.71" y="113.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (887,807 us, 1.27%)</title><rect x="104.3" y="231" width="14.9" height="15.0" fill="rgb(144.581579266677,144.581579266677,155.402886309679)" rx="2" ry="2" />
<text  x="107.27" y="241.5" ></text>
</g>
<g >
<title>Log_Event_slate_loopy_knl_7 (181,681 us, 0.26%)</title><rect x="296.4" y="215" width="3.1" height="15.0" fill="rgb(154.645064506998,132.278827886988,132.278827886988)" rx="2" ry="2" />
<text  x="299.43" y="225.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (8,907,868 us, 12.71%)</title><rect x="121.9" y="199" width="149.9" height="15.0" fill="rgb(155.057852293571,135.443534250709,135.443534250709)" rx="2" ry="2" />
<text  x="124.87" y="209.5" >pyop2.global_kern..</text>
</g>
<g >
<title>CreateFunctionSpace (11,862 us, 0.02%)</title><rect x="39.1" y="71" width="0.2" height="15.0" fill="rgb(155.410694140313,155.410694140313,145.451825449208)" rx="2" ry="2" />
<text  x="42.12" y="81.5" ></text>
</g>
<g >
<title>all (70,094,129 us, 100%)</title><rect x="10.0" y="39" width="1180.0" height="15.0" fill="rgb(146.087993762804,146.087993762804,155.694450405704)" rx="2" ry="2" />
<text  x="13.00" y="49.5" ></text>
</g>
<g >
<title>PCApply (41,503,700 us, 59.21%)</title><rect x="84.9" y="135" width="698.6" height="15.0" fill="rgb(154.896613438168,134.207369692625,134.207369692625)" rx="2" ry="2" />
<text  x="87.85" y="145.5" >PCApply</text>
</g>
<g >
<title>SNESFunctionEval (6,615,087 us, 9.44%)</title><rect x="1078.6" y="119" width="111.4" height="15.0" fill="rgb(153.995149424878,153.995149424878,138.591877982102)" rx="2" ry="2" />
<text  x="1081.64" y="129.5" >SNESFunction..</text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (7,355 us, 0.01%)</title><rect x="39.0" y="135" width="0.1" height="15.0" fill="rgb(147.87219901655,159.648711788004,147.87219901655)" rx="2" ry="2" />
<text  x="42.00" y="145.5" ></text>
</g>
<g >
<title>firedrake.functionspace.VectorFunctionSpace (7,228 us, 0.01%)</title><rect x="84.2" y="71" width="0.1" height="15.0" fill="rgb(150.387348928177,150.387348928177,121.107921728858)" rx="2" ry="2" />
<text  x="87.19" y="81.5" ></text>
</g>
<g >
<title>SCForwardElim (13,344,395 us, 19.04%)</title><rect x="558.8" y="151" width="224.6" height="15.0" fill="rgb(153.654575479653,124.685078677342,124.685078677342)" rx="2" ry="2" />
<text  x="561.77" y="161.5" >SCForwardElim</text>
</g>
<g >
<title>firedrake (70,094,129 us, 100.00%)</title><rect x="10.0" y="55" width="1180.0" height="15.0" fill="rgb(140.483675675956,140.483675675956,154.609743679217)" rx="2" ry="2" />
<text  x="13.00" y="65.5" >firedrake</text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (7,355 us, 0.01%)</title><rect x="39.0" y="119" width="0.1" height="15.0" fill="rgb(124.788773417741,163.406478745949,124.788773417741)" rx="2" ry="2" />
<text  x="42.00" y="129.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_pyop2_kernel_uniform_extrusion (1,239,402 us, 1.77%)</title><rect x="18.1" y="119" width="20.9" height="15.0" fill="rgb(109.966675830218,109.966675830218,148.703227580042)" rx="2" ry="2" />
<text  x="21.13" y="129.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (7,228 us, 0.01%)</title><rect x="84.2" y="87" width="0.1" height="15.0" fill="rgb(112.563219989613,146.220094071381,146.220094071381)" rx="2" ry="2" />
<text  x="87.19" y="97.5" ></text>
</g>
<g >
<title>ParLoopExecute (9,661,138 us, 13.78%)</title><rect x="593.0" y="183" width="162.6" height="15.0" fill="rgb(155.675992253658,140.182607278044,140.182607278044)" rx="2" ry="2" />
<text  x="595.96" y="193.5" >ParLoopExecute</text>
</g>
<g >
<title>Parloop_Cells_wrap_wrap_slate_loopy_knl_7 (11,667,095 us, 16.64%)</title><rect x="296.2" y="199" width="196.4" height="15.0" fill="rgb(131.853802582382,162.256357719147,131.853802582382)" rx="2" ry="2" />
<text  x="299.16" y="209.5" >Parloop_Cells_wrap_wrap..</text>
</g>
<g >
<title>SCBackSub (28,151,597 us, 40.16%)</title><rect x="84.9" y="151" width="473.9" height="15.0" fill="rgb(146.562031669982,128.690206154329,146.562031669982)" rx="2" ry="2" />
<text  x="87.85" y="161.5" >SCBackSub</text>
</g>
<g >
<title>firedrake.extrusion_utils.make_extruded_coords (1,276,825 us, 1.82%)</title><rect x="17.5" y="87" width="21.5" height="15.0" fill="rgb(137.160590021113,161.392462089586,137.160590021113)" rx="2" ry="2" />
<text  x="20.50" y="97.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (2,466,703 us, 3.52%)</title><rect x="1128.6" y="167" width="41.6" height="15.0" fill="rgb(152.276930326302,114.123132501645,114.123132501645)" rx="2" ry="2" />
<text  x="1131.64" y="177.5" >pyo..</text>
</g>
<g >
<title>HybridBreak (916,536 us, 1.31%)</title><rect x="558.8" y="167" width="15.4" height="15.0" fill="rgb(143.821617743558,143.821617743558,155.255796982624)" rx="2" ry="2" />
<text  x="561.77" y="177.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (9,623 us, 0.01%)</title><rect x="783.9" y="151" width="0.1" height="15.0" fill="rgb(154.733461401469,132.956537411262,132.956537411262)" rx="2" ry="2" />
<text  x="786.88" y="161.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_wrap_slate_loopy_knl_0 (12,691,736 us, 18.11%)</title><rect x="812.8" y="183" width="213.6" height="15.0" fill="rgb(114.642924452381,114.642924452381,149.608307958525)" rx="2" ry="2" />
<text  x="815.78" y="193.5" >Parloop_Cells_wrap_wrap_s..</text>
</g>
<g >
<title>Log_Event_slate_loopy_knl_7 (10,505 us, 0.01%)</title><rect x="299.3" y="231" width="0.2" height="15.0" fill="rgb(129.510762086319,162.637782916181,129.510762086319)" rx="2" ry="2" />
<text  x="302.31" y="241.5" ></text>
</g>
<g >
<title>ParLoopExecute (887,807 us, 1.27%)</title><rect x="104.3" y="199" width="14.9" height="15.0" fill="rgb(148.158443816251,148.158443816251,110.306304647987)" rx="2" ry="2" />
<text  x="107.27" y="209.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.action (12,496 us, 0.02%)</title><rect x="84.3" y="87" width="0.2" height="15.0" fill="rgb(136.834747626944,103.764040794044,136.834747626944)" rx="2" ry="2" />
<text  x="87.31" y="97.5" ></text>
</g>
<g >
<title>firedrake.parloops.par_loop (916,536 us, 1.31%)</title><rect x="558.8" y="183" width="15.4" height="15.0" fill="rgb(156.782868844425,148.668661140595,148.668661140595)" rx="2" ry="2" />
<text  x="561.77" y="193.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_form0_cell_integral_otherwise (2,958,169 us, 4.22%)</title><rect x="1078.6" y="151" width="49.8" height="15.0" fill="rgb(122.718316280231,148.852896813393,148.852896813393)" rx="2" ry="2" />
<text  x="1081.64" y="161.5" >Parl..</text>
</g>
<g >
<title>SNESSolve (65,647,805 us, 93.66%)</title><rect x="84.9" y="103" width="1105.1" height="15.0" fill="rgb(140.56655849751,140.56655849751,154.625785515647)" rx="2" ry="2" />
<text  x="87.85" y="113.5" >SNESSolve</text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.__init__ (8,241 us, 0.01%)</title><rect x="84.7" y="71" width="0.2" height="15.0" fill="rgb(120.241510490755,148.210761979085,148.210761979085)" rx="2" ry="2" />
<text  x="87.71" y="81.5" ></text>
</g>
<g >
<title>ParLoopExecute (916,536 us, 1.31%)</title><rect x="558.8" y="199" width="15.4" height="15.0" fill="rgb(156.714257437642,148.142640355254,148.142640355254)" rx="2" ry="2" />
<text  x="561.77" y="209.5" ></text>
</g>
<g >
<title>perfsolve (65,647,805 us, 93.66%)</title><rect x="84.9" y="71" width="1105.1" height="15.0" fill="rgb(155.773222916868,140.928042362653,140.928042362653)" rx="2" ry="2" />
<text  x="87.85" y="81.5" >perfsolve</text>
</g>
<g >
<title>Parloop_Cells_wrap_wrap_slate_loopy_knl_14 (9,065,738 us, 12.93%)</title><rect x="119.2" y="183" width="152.6" height="15.0" fill="rgb(152.559596199638,116.29023753056,116.29023753056)" rx="2" ry="2" />
<text  x="122.22" y="193.5" >Parloop_Cells_wra..</text>
</g>
<g >
<title>Log_Event_slate_loopy_knl_14 (143,420 us, 0.20%)</title><rect x="119.5" y="199" width="2.4" height="15.0" fill="rgb(152.651673819454,116.996165949149,116.996165949149)" rx="2" ry="2" />
<text  x="122.46" y="209.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (1,239,402 us, 1.77%)</title><rect x="18.1" y="135" width="20.9" height="15.0" fill="rgb(153.018979893507,153.018979893507,133.861210253147)" rx="2" ry="2" />
<text  x="21.13" y="145.5" ></text>
</g>
<g >
<title>Log_Event_form0_cell_integral_otherwise (8,067 us, 0.01%)</title><rect x="1078.8" y="167" width="0.1" height="15.0" fill="rgb(148.644091382656,148.644091382656,112.659827469795)" rx="2" ry="2" />
<text  x="1081.80" y="177.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (11,862 us, 0.02%)</title><rect x="39.1" y="87" width="0.2" height="15.0" fill="rgb(133.897697348212,161.923630664244,133.897697348212)" rx="2" ry="2" />
<text  x="42.12" y="97.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalProblem.__init__ (11,216 us, 0.02%)</title><rect x="84.5" y="87" width="0.2" height="15.0" fill="rgb(133.131163470835,162.048415248934,133.131163470835)" rx="2" ry="2" />
<text  x="87.52" y="97.5" ></text>
</g>
<g >
<title>firedrake.assemble.allocate_matrix (9,050 us, 0.01%)</title><rect x="1066.2" y="151" width="0.1" height="15.0" fill="rgb(119.503379238595,119.503379238595,150.549041142954)" rx="2" ry="2" />
<text  x="1069.15" y="161.5" ></text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (2,359,174 us, 3.37%)</title><rect x="1026.4" y="167" width="39.8" height="15.0" fill="rgb(138.913270429971,161.107142023028,138.913270429971)" rx="2" ry="2" />
<text  x="1029.43" y="177.5" >fir..</text>
</g>
<g >
<title>RecoverFirstElim (15,253,444 us, 21.76%)</title><rect x="271.8" y="167" width="256.8" height="15.0" fill="rgb(153.554562237404,123.918310486768,123.918310486768)" rx="2" ry="2" />
<text  x="274.83" y="177.5" >RecoverFirstElim</text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (887,807 us, 1.27%)</title><rect x="104.3" y="215" width="14.9" height="15.0" fill="rgb(139.823741969681,153.287636806954,153.287636806954)" rx="2" ry="2" />
<text  x="107.27" y="225.5" ></text>
</g>
<g >
<title>firedrake.assemble.allocate_matrix (8,241 us, 0.01%)</title><rect x="84.7" y="87" width="0.2" height="15.0" fill="rgb(137.879131141818,161.275490279239,137.879131141818)" rx="2" ry="2" />
<text  x="87.71" y="97.5" ></text>
</g>
<g >
<title>SCSolve (7,708 us, 0.01%)</title><rect x="783.4" y="151" width="0.1" height="15.0" fill="rgb(135.230694073095,161.706631197403,135.230694073095)" rx="2" ry="2" />
<text  x="786.42" y="161.5" ></text>
</g>
<g >
<title>ParLoopExecute (11,667,095 us, 16.64%)</title><rect x="296.2" y="183" width="196.4" height="15.0" fill="rgb(144.757380450773,160.155775275456,144.757380450773)" rx="2" ry="2" />
<text  x="299.16" y="193.5" >ParLoopExecute</text>
</g>
<g >
<title>firedrake.parloops.par_loop (699,125 us, 1.00%)</title><rect x="1066.9" y="151" width="11.7" height="15.0" fill="rgb(155.612341676114,139.694619516876,139.694619516876)" rx="2" ry="2" />
<text  x="1069.87" y="161.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (916,536 us, 1.31%)</title><rect x="558.8" y="231" width="15.4" height="15.0" fill="rgb(145.601041948518,154.785455319986,154.785455319986)" rx="2" ry="2" />
<text  x="561.77" y="241.5" ></text>
</g>
<g >
<title>HybridInit (17,529,018 us, 25.01%)</title><rect x="783.5" y="135" width="295.1" height="15.0" fill="rgb(146.141752847055,127.613241670579,146.141752847055)" rx="2" ry="2" />
<text  x="786.55" y="145.5" >HybridInit</text>
</g>
<g >
<title>HybridProject (887,807 us, 1.27%)</title><rect x="104.3" y="167" width="14.9" height="15.0" fill="rgb(126.299873301404,126.299873301404,151.864491606723)" rx="2" ry="2" />
<text  x="107.27" y="177.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_wrap_slate_loopy_knl_4 (9,661,138 us, 13.78%)</title><rect x="593.0" y="199" width="162.6" height="15.0" fill="rgb(111.362814282827,111.362814282827,148.973447925708)" rx="2" ry="2" />
<text  x="595.96" y="209.5" >Parloop_Cells_wrap_..</text>
</g>
<g >
<title>CreateFunctionSpace (7,355 us, 0.01%)</title><rect x="39.0" y="103" width="0.1" height="15.0" fill="rgb(152.152084497693,152.152084497693,129.660101796514)" rx="2" ry="2" />
<text  x="42.00" y="113.5" ></text>
</g>
<g >
<title>ParLoopExecute (12,691,736 us, 18.11%)</title><rect x="812.8" y="167" width="213.6" height="15.0" fill="rgb(154.607560937349,154.607560937349,141.559718388691)" rx="2" ry="2" />
<text  x="815.78" y="177.5" >ParLoopExecute</text>
</g>
<g >
<title>Parloop_Cells_wrap_form1_cell_integral_otherwise (2,478,460 us, 3.54%)</title><rect x="1128.4" y="151" width="41.8" height="15.0" fill="rgb(148.739944533534,148.739944533534,113.124346585585)" rx="2" ry="2" />
<text  x="1131.44" y="161.5" >Par..</text>
</g>
<g >
<title>firedrake.__init__ (2,665,545 us, 3.80%)</title><rect x="39.3" y="71" width="44.9" height="15.0" fill="rgb(155.031397166097,135.240711606741,135.240711606741)" rx="2" ry="2" />
<text  x="42.32" y="81.5" >fir..</text>
</g>
<g >
<title>ParLoopExecute (699,125 us, 1.00%)</title><rect x="1066.9" y="167" width="11.7" height="15.0" fill="rgb(156.789753659577,148.721444723424,148.721444723424)" rx="2" ry="2" />
<text  x="1069.87" y="177.5" ></text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (1,652,371 us, 2.36%)</title><rect x="755.6" y="183" width="27.8" height="15.0" fill="rgb(134.090845262305,161.892187980555,134.090845262305)" rx="2" ry="2" />
<text  x="758.60" y="193.5" >f..</text>
</g>
<g >
<title>KSPSolve (7,708 us, 0.01%)</title><rect x="783.4" y="167" width="0.1" height="15.0" fill="rgb(104.378690699133,144.098179070146,144.098179070146)" rx="2" ry="2" />
<text  x="786.42" y="177.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (916,536 us, 1.31%)</title><rect x="558.8" y="215" width="15.4" height="15.0" fill="rgb(109.717960625324,145.482434236195,145.482434236195)" rx="2" ry="2" />
<text  x="561.77" y="225.5" ></text>
</g>
<g >
<title>ParLoopExecute (1,239,402 us, 1.77%)</title><rect x="18.1" y="103" width="20.9" height="15.0" fill="rgb(143.34579550244,160.385568174021,143.34579550244)" rx="2" ry="2" />
<text  x="21.13" y="113.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.LinearVariationalProblem.__init__ (23,712 us, 0.03%)</title><rect x="84.3" y="71" width="0.4" height="15.0" fill="rgb(153.974769091894,153.974769091894,138.493111753023)" rx="2" ry="2" />
<text  x="87.31" y="81.5" ></text>
</g>
<g >
<title>KSPSolve (41,503,700 us, 59.21%)</title><rect x="84.9" y="119" width="698.6" height="15.0" fill="rgb(154.770978271434,133.244166747664,133.244166747664)" rx="2" ry="2" />
<text  x="87.85" y="129.5" >KSPSolve</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (9,532,371 us, 13.60%)</title><rect x="595.1" y="215" width="160.5" height="15.0" fill="rgb(152.292149024755,114.239809189788,114.239809189788)" rx="2" ry="2" />
<text  x="598.13" y="225.5" >pyop2.global_kerne..</text>
</g>
<g >
<title>Log_Event_slate_loopy_knl_0 (172,682 us, 0.25%)</title><rect x="813.0" y="199" width="2.9" height="15.0" fill="rgb(127.911715070576,162.898092895488,127.911715070576)" rx="2" ry="2" />
<text  x="815.99" y="209.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (7,355 us, 0.01%)</title><rect x="39.0" y="151" width="0.1" height="15.0" fill="rgb(122.605982511739,148.823773243784,148.823773243784)" rx="2" ry="2" />
<text  x="42.00" y="161.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (699,125 us, 1.00%)</title><rect x="1066.9" y="199" width="11.7" height="15.0" fill="rgb(143.162922148745,160.415338254855,143.162922148745)" rx="2" ry="2" />
<text  x="1069.87" y="209.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (12,506,044 us, 17.84%)</title><rect x="815.9" y="199" width="210.5" height="15.0" fill="rgb(149.251302578476,149.251302578476,115.602466341843)" rx="2" ry="2" />
<text  x="818.90" y="209.5" >pyop2.global_kernel.Globa..</text>
</g>
<g >
<title>ParLoopExecute (9,065,738 us, 12.93%)</title><rect x="119.2" y="167" width="152.6" height="15.0" fill="rgb(145.542425153309,145.542425153309,155.588856481286)" rx="2" ry="2" />
<text  x="122.22" y="177.5" >ParLoopExecute</text>
</g>
<g >
<title>HybridRHS (12,427,859 us, 17.73%)</title><rect x="574.2" y="167" width="209.2" height="15.0" fill="rgb(155.410306289201,155.410306289201,145.44994586305)" rx="2" ry="2" />
<text  x="577.20" y="177.5" >HybridRHS</text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (1,178,458 us, 1.68%)</title><rect x="1170.2" y="135" width="19.8" height="15.0" fill="rgb(145.528101463945,160.030309064009,145.528101463945)" rx="2" ry="2" />
<text  x="1173.16" y="145.5" ></text>
</g>
<g >
<title>HybridOperatorAssembly (16,757,581 us, 23.91%)</title><rect x="784.0" y="151" width="282.2" height="15.0" fill="rgb(133.625743772013,133.625743772013,153.28240202039)" rx="2" ry="2" />
<text  x="787.04" y="161.5" >HybridOperatorAssembly</text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (699,125 us, 1.00%)</title><rect x="1066.9" y="183" width="11.7" height="15.0" fill="rgb(135.659783956067,100.753196387421,135.659783956067)" rx="2" ry="2" />
<text  x="1069.87" y="193.5" ></text>
</g>
<g >
<title>Log_Event_slate_loopy_knl_4 (116,005 us, 0.17%)</title><rect x="593.2" y="215" width="1.9" height="15.0" fill="rgb(119.321436853949,119.321436853949,150.513826487861)" rx="2" ry="2" />
<text  x="596.17" y="225.5" ></text>
</g>
<g >
<title>firedrake.parloops.par_loop (887,807 us, 1.27%)</title><rect x="104.3" y="183" width="14.9" height="15.0" fill="rgb(147.515172724431,159.706832347186,147.515172724431)" rx="2" ry="2" />
<text  x="107.27" y="193.5" ></text>
</g>
<g >
<title>firedrake.interpolation.make_interpolator (26,502 us, 0.04%)</title><rect x="1066.4" y="151" width="0.5" height="15.0" fill="rgb(151.418581395734,151.418581395734,126.10543291779)" rx="2" ry="2" />
<text  x="1069.42" y="161.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (11,469,423 us, 16.36%)</title><rect x="299.5" y="215" width="193.1" height="15.0" fill="rgb(106.997735058438,144.777190570706,144.777190570706)" rx="2" ry="2" />
<text  x="302.48" y="225.5" >pyop2.global_kernel.Glo..</text>
</g>
<g >
<title>firedrake.functionspace.VectorFunctionSpace (7,355 us, 0.01%)</title><rect x="39.0" y="87" width="0.1" height="15.0" fill="rgb(139.825289331495,111.427303911956,139.825289331495)" rx="2" ry="2" />
<text  x="42.00" y="97.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (2,940,541 us, 4.20%)</title><rect x="1078.9" y="167" width="49.5" height="15.0" fill="rgb(133.092813720538,162.05465823154,133.092813720538)" rx="2" ry="2" />
<text  x="1081.94" y="177.5" >pyop..</text>
</g>
<g >
<title>CreateExtMesh (1,284,180 us, 1.83%)</title><rect x="17.5" y="71" width="21.6" height="15.0" fill="rgb(118.2307698849,118.2307698849,150.302729655142)" rx="2" ry="2" />
<text  x="20.50" y="81.5" ></text>
</g>
<g >
<title>ParLoopExecute (5,436,629 us, 7.76%)</title><rect x="1078.6" y="135" width="91.6" height="15.0" fill="rgb(152.500417740582,143.907320460241,152.500417740582)" rx="2" ry="2" />
<text  x="1081.64" y="145.5" >ParLoopEx..</text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (11,862 us, 0.02%)</title><rect x="39.1" y="119" width="0.2" height="15.0" fill="rgb(155.5441382782,139.171726799534,139.171726799534)" rx="2" ry="2" />
<text  x="42.12" y="129.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (11,216 us, 0.02%)</title><rect x="84.5" y="103" width="0.2" height="15.0" fill="rgb(120.997924356946,148.406869277727,148.406869277727)" rx="2" ry="2" />
<text  x="87.52" y="113.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.solve (65,647,805 us, 93.66%)</title><rect x="84.9" y="87" width="1105.1" height="15.0" fill="rgb(114.695264689501,146.772846400982,146.772846400982)" rx="2" ry="2" />
<text  x="87.85" y="97.5" >firedrake.variational_solver.NonlinearVariationalSolver.solve</text>
</g>
</g>
</svg>
