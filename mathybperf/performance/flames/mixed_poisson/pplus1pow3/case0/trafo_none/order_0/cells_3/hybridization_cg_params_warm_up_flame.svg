<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="299" onload="init(evt)" viewBox="0 0 1200 299" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:13px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:18px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 13 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (1 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="299.0" fill="url(#background)"  />
<text id="title" x="600.00" y="26" >Firedrake example</text>
<text id="details" x="10.00" y="281" > </text>
<text id="unzoom" x="10.00" y="26" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="26" >Search</text>
<text id="ignorecase" x="1174.00" y="26" >ic</text>
<text id="matched" x="1090.00" y="281" > </text>
<g id="frames">
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (716,484 us, 6.43%)</title><rect x="446.9" y="183" width="75.9" height="15.0" fill="rgb(121.67049651845,121.67049651845,150.968483197119)" rx="2" ry="2" />
<text  x="449.89" y="193.5" >Parloop..</text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (1,997 us, 0.02%)</title><rect x="443.2" y="215" width="0.2" height="15.0" fill="rgb(127.622260760245,162.945213364611,127.622260760245)" rx="2" ry="2" />
<text  x="446.19" y="225.5" ></text>
</g>
<g >
<title>firedrake.__init__ (2,860,695 us, 25.68%)</title><rect x="132.8" y="71" width="303.1" height="15.0" fill="rgb(143.22149781274,160.405802681647,143.22149781274)" rx="2" ry="2" />
<text  x="135.81" y="81.5" >firedrake.__init__</text>
</g>
<g >
<title>CreateFunctionSpace (11,831 us, 0.11%)</title><rect x="131.3" y="71" width="1.3" height="15.0" fill="rgb(135.018748427546,161.741133976911,135.018748427546)" rx="2" ry="2" />
<text  x="134.33" y="81.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (4,833 us, 0.04%)</title><rect x="442.9" y="199" width="0.5" height="15.0" fill="rgb(131.06460070858,131.06460070858,152.786696911338)" rx="2" ry="2" />
<text  x="445.89" y="209.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (6,793 us, 0.06%)</title><rect x="130.6" y="135" width="0.7" height="15.0" fill="rgb(146.990586445463,129.788377766498,146.990586445463)" rx="2" ry="2" />
<text  x="133.61" y="145.5" ></text>
</g>
<g >
<title>PCSetUp (779,089 us, 6.99%)</title><rect x="440.3" y="119" width="82.5" height="15.0" fill="rgb(152.57493362049,152.57493362049,131.709293699298)" rx="2" ry="2" />
<text  x="443.25" y="129.5" >PCSetUp</text>
</g>
<g >
<title>firedrake.functionspace.VectorFunctionSpace (6,620 us, 0.06%)</title><rect x="436.0" y="71" width="0.7" height="15.0" fill="rgb(140.021153680785,153.338817620944,153.338817620944)" rx="2" ry="2" />
<text  x="439.02" y="81.5" ></text>
</g>
<g >
<title>firedrake.matrix_free.operators.ImplicitMatrixContext.__init__ (7,178 us, 0.06%)</title><rect x="439.5" y="103" width="0.8" height="15.0" fill="rgb(153.624115361114,153.624115361114,136.793789826935)" rx="2" ry="2" />
<text  x="442.49" y="113.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (1,751 us, 0.02%)</title><rect x="441.6" y="215" width="0.2" height="15.0" fill="rgb(148.194410414926,132.873176688247,148.194410414926)" rx="2" ry="2" />
<text  x="444.62" y="225.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (6,620 us, 0.06%)</title><rect x="436.0" y="103" width="0.7" height="15.0" fill="rgb(147.305034072562,147.305034072562,155.930006594689)" rx="2" ry="2" />
<text  x="439.02" y="113.5" ></text>
</g>
<g >
<title>perfsolve (7,077,324 us, 63.54%)</title><rect x="440.3" y="71" width="749.7" height="15.0" fill="rgb(141.305916428815,160.717641511588,141.305916428815)" rx="2" ry="2" />
<text  x="443.25" y="81.5" >perfsolve</text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (5,215 us, 0.05%)</title><rect x="441.8" y="183" width="0.6" height="15.0" fill="rgb(127.431150912357,127.431150912357,152.083448563682)" rx="2" ry="2" />
<text  x="444.80" y="193.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (11,831 us, 0.11%)</title><rect x="131.3" y="119" width="1.3" height="15.0" fill="rgb(153.261545187494,121.671846437453,121.671846437453)" rx="2" ry="2" />
<text  x="134.33" y="129.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (11,831 us, 0.11%)</title><rect x="131.3" y="103" width="1.3" height="15.0" fill="rgb(142.35704637138,117.914931326662,142.35704637138)" rx="2" ry="2" />
<text  x="134.33" y="113.5" ></text>
</g>
<g >
<title>SNESFunctionEval (6,298,235 us, 56.54%)</title><rect x="522.8" y="119" width="667.2" height="15.0" fill="rgb(131.070201681516,162.383920656497,131.070201681516)" rx="2" ry="2" />
<text  x="525.79" y="129.5" >SNESFunctionEval</text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (5,215 us, 0.05%)</title><rect x="441.8" y="167" width="0.6" height="15.0" fill="rgb(149.862527335561,149.862527335561,118.564555549256)" rx="2" ry="2" />
<text  x="444.80" y="177.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (1,287 us, 0.01%)</title><rect x="1189.9" y="199" width="0.1" height="15.0" fill="rgb(108.305904607831,145.116345639067,145.116345639067)" rx="2" ry="2" />
<text  x="1192.86" y="209.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (6,620 us, 0.06%)</title><rect x="436.0" y="135" width="0.7" height="15.0" fill="rgb(117.480903292364,147.495049001724,147.495049001724)" rx="2" ry="2" />
<text  x="439.02" y="145.5" ></text>
</g>
<g >
<title>CreateExtMesh (1,145,346 us, 10.28%)</title><rect x="10.0" y="71" width="121.3" height="15.0" fill="rgb(116.563156310765,116.563156310765,149.979965737567)" rx="2" ry="2" />
<text  x="13.00" y="81.5" >CreateExtMesh</text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.__init__ (8,651 us, 0.08%)</title><rect x="439.3" y="71" width="1.0" height="15.0" fill="rgb(124.964983340484,163.377793409689,124.964983340484)" rx="2" ry="2" />
<text  x="442.34" y="81.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (11,831 us, 0.11%)</title><rect x="131.3" y="87" width="1.3" height="15.0" fill="rgb(124.174726245702,163.50643991349,124.174726245702)" rx="2" ry="2" />
<text  x="134.33" y="97.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (7,241 us, 0.07%)</title><rect x="442.6" y="183" width="0.8" height="15.0" fill="rgb(111.054098355144,145.828840314297,145.828840314297)" rx="2" ry="2" />
<text  x="445.64" y="193.5" ></text>
</g>
<g >
<title>firedrake.utility_meshes.SquareMesh (2,304 us, 0.02%)</title><rect x="436.7" y="71" width="0.3" height="15.0" fill="rgb(151.023298407505,151.023298407505,124.189830744063)" rx="2" ry="2" />
<text  x="439.72" y="81.5" ></text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (1,035,132 us, 9.29%)</title><rect x="1080.3" y="135" width="109.7" height="15.0" fill="rgb(151.06037470807,159.129706442872,151.06037470807)" rx="2" ry="2" />
<text  x="1083.34" y="145.5" >firedrake.ts..</text>
</g>
<g >
<title>CreateMesh (2,064 us, 0.02%)</title><rect x="132.6" y="71" width="0.2" height="15.0" fill="rgb(153.164688027407,120.92927487679,120.92927487679)" rx="2" ry="2" />
<text  x="135.59" y="81.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (9,892 us, 0.09%)</title><rect x="438.2" y="103" width="1.0" height="15.0" fill="rgb(131.885147870374,151.229482781208,151.229482781208)" rx="2" ry="2" />
<text  x="441.16" y="113.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (1,096,672 us, 9.85%)</title><rect x="14.4" y="135" width="116.2" height="15.0" fill="rgb(132.795600783044,132.795600783044,153.121729183815)" rx="2" ry="2" />
<text  x="17.44" y="145.5" >pyop2.global_..</text>
</g>
<g >
<title>Parloop_Cells_wrap_pyop2_kernel_uniform_extrusion (1,096,672 us, 9.85%)</title><rect x="14.4" y="119" width="116.2" height="15.0" fill="rgb(127.287852289321,150.037591334268,150.037591334268)" rx="2" ry="2" />
<text  x="17.44" y="129.5" >Parloop_Cells..</text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (3,138 us, 0.03%)</title><rect x="439.9" y="119" width="0.4" height="15.0" fill="rgb(147.454440654962,130.977004178339,147.454440654962)" rx="2" ry="2" />
<text  x="442.92" y="129.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (1,751 us, 0.02%)</title><rect x="441.6" y="199" width="0.2" height="15.0" fill="rgb(133.24618054717,133.24618054717,153.20893817042)" rx="2" ry="2" />
<text  x="444.62" y="209.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (6,966 us, 0.06%)</title><rect x="441.6" y="151" width="0.8" height="15.0" fill="rgb(150.972471665519,159.144016240497,150.972471665519)" rx="2" ry="2" />
<text  x="444.62" y="161.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (3,290 us, 0.03%)</title><rect x="1189.7" y="167" width="0.3" height="15.0" fill="rgb(153.538205418215,123.792908206316,123.792908206316)" rx="2" ry="2" />
<text  x="1192.65" y="177.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (6,793 us, 0.06%)</title><rect x="130.6" y="151" width="0.7" height="15.0" fill="rgb(150.646084903012,150.646084903012,122.361796068441)" rx="2" ry="2" />
<text  x="133.61" y="161.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (9,905 us, 0.09%)</title><rect x="442.4" y="167" width="1.0" height="15.0" fill="rgb(132.494086373357,92.641096331728,132.494086373357)" rx="2" ry="2" />
<text  x="445.36" y="177.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (716,484 us, 6.43%)</title><rect x="446.9" y="199" width="75.9" height="15.0" fill="rgb(139.58912339616,153.226809769375,153.226809769375)" rx="2" ry="2" />
<text  x="449.89" y="209.5" >pyop2.g..</text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (1,997 us, 0.02%)</title><rect x="443.2" y="247" width="0.2" height="15.0" fill="rgb(156.326217041117,145.167663981898,145.167663981898)" rx="2" ry="2" />
<text  x="446.19" y="257.5" ></text>
</g>
<g >
<title>firedrake.utility_meshes.RectangleMesh (2,304 us, 0.02%)</title><rect x="436.7" y="87" width="0.3" height="15.0" fill="rgb(154.584460241442,131.814195184385,131.814195184385)" rx="2" ry="2" />
<text  x="439.72" y="97.5" ></text>
</g>
<g >
<title>firedrake.function.Function.__init__ (1,249 us, 0.01%)</title><rect x="443.4" y="151" width="0.1" height="15.0" fill="rgb(155.357447420511,137.740430223919,137.740430223919)" rx="2" ry="2" />
<text  x="446.41" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspace.VectorFunctionSpace (6,793 us, 0.06%)</title><rect x="130.6" y="87" width="0.7" height="15.0" fill="rgb(143.946078374001,121.986825833376,143.946078374001)" rx="2" ry="2" />
<text  x="133.61" y="97.5" ></text>
</g>
<g >
<title>firedrake.interpolation.make_interpolator (25,914 us, 0.23%)</title><rect x="443.5" y="151" width="2.8" height="15.0" fill="rgb(130.757059482434,162.434897293557,130.757059482434)" rx="2" ry="2" />
<text  x="446.54" y="161.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (1,751 us, 0.02%)</title><rect x="441.6" y="183" width="0.2" height="15.0" fill="rgb(143.581317951372,143.581317951372,155.209287345427)" rx="2" ry="2" />
<text  x="444.62" y="193.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (1,287 us, 0.01%)</title><rect x="1189.9" y="183" width="0.1" height="15.0" fill="rgb(148.356570317779,148.356570317779,111.266456155388)" rx="2" ry="2" />
<text  x="1192.86" y="193.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (1,997 us, 0.02%)</title><rect x="443.2" y="231" width="0.2" height="15.0" fill="rgb(154.976972013813,134.823452105902,134.823452105902)" rx="2" ry="2" />
<text  x="446.19" y="241.5" ></text>
</g>
<g >
<title>all (11,138,765 us, 100%)</title><rect x="10.0" y="39" width="1180.0" height="15.0" fill="rgb(154.066038515798,127.83962862112,127.83962862112)" rx="2" ry="2" />
<text  x="13.00" y="49.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (2,358,204 us, 21.17%)</title><rect x="830.5" y="167" width="249.8" height="15.0" fill="rgb(153.47415293846,153.47415293846,136.067048855613)" rx="2" ry="2" />
<text  x="833.52" y="177.5" >pyop2.global_kernel.GlobalKern..</text>
</g>
<g >
<title>ParLoopExecute (716,484 us, 6.43%)</title><rect x="446.9" y="167" width="75.9" height="15.0" fill="rgb(126.34856366873,163.152559402765,126.34856366873)" rx="2" ry="2" />
<text  x="449.89" y="177.5" >ParLoop..</text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (6,620 us, 0.06%)</title><rect x="436.0" y="119" width="0.7" height="15.0" fill="rgb(156.632802466594,147.518152243886,147.518152243886)" rx="2" ry="2" />
<text  x="439.02" y="129.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.derivative (1,239 us, 0.01%)</title><rect x="439.2" y="103" width="0.1" height="15.0" fill="rgb(130.50526725007,162.475886726733,130.50526725007)" rx="2" ry="2" />
<text  x="442.21" y="113.5" ></text>
</g>
<g >
<title>Log_Event_form0_cell_integral_otherwise (8,572 us, 0.08%)</title><rect x="524.4" y="167" width="0.9" height="15.0" fill="rgb(139.357285379829,139.357285379829,154.39173265416)" rx="2" ry="2" />
<text  x="527.41" y="177.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.solve (7,077,324 us, 63.54%)</title><rect x="440.3" y="87" width="749.7" height="15.0" fill="rgb(132.642141554377,93.0204877330907,132.642141554377)" rx="2" ry="2" />
<text  x="443.25" y="97.5" >firedrake.variational_solver.NonlinearVariationalSolver.solve</text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (6,793 us, 0.06%)</title><rect x="130.6" y="119" width="0.7" height="15.0" fill="rgb(138.625658298219,152.977022521761,152.977022521761)" rx="2" ry="2" />
<text  x="133.61" y="129.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_form0_cell_integral_otherwise (2,888,060 us, 25.93%)</title><rect x="523.4" y="151" width="305.9" height="15.0" fill="rgb(145.711878836062,160.000391817385,145.711878836062)" rx="2" ry="2" />
<text  x="526.36" y="161.5" >Parloop_Cells_wrap_form0_cell_integra..</text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (5,882 us, 0.05%)</title><rect x="1189.4" y="151" width="0.6" height="15.0" fill="rgb(154.105958200691,128.14567953863,128.14567953863)" rx="2" ry="2" />
<text  x="1192.38" y="161.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.action (4,040 us, 0.04%)</title><rect x="439.5" y="119" width="0.4" height="15.0" fill="rgb(153.944178098035,153.944178098035,138.344863090477)" rx="2" ry="2" />
<text  x="442.49" y="129.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalProblem.__init__ (11,131 us, 0.10%)</title><rect x="438.2" y="87" width="1.1" height="15.0" fill="rgb(136.352471342693,102.528207815652,136.352471342693)" rx="2" ry="2" />
<text  x="441.16" y="97.5" ></text>
</g>
<g >
<title>firedrake.assemble.allocate_matrix (7,178 us, 0.06%)</title><rect x="439.5" y="87" width="0.8" height="15.0" fill="rgb(132.55213114618,162.14267632504,132.55213114618)" rx="2" ry="2" />
<text  x="442.49" y="97.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_form1_cell_integral_otherwise (2,369,665 us, 21.27%)</title><rect x="829.3" y="151" width="251.0" height="15.0" fill="rgb(152.597568864938,152.597568864938,131.81898757624)" rx="2" ry="2" />
<text  x="832.31" y="161.5" >Parloop_Cells_wrap_form1_cell_..</text>
</g>
<g >
<title>ParLoopExecute (5,259,184 us, 47.22%)</title><rect x="523.2" y="135" width="557.1" height="15.0" fill="rgb(130.527692033154,130.527692033154,152.682779103191)" rx="2" ry="2" />
<text  x="526.20" y="145.5" >ParLoopExecute</text>
</g>
<g >
<title>firedrake (11,138,765 us, 100.00%)</title><rect x="10.0" y="55" width="1180.0" height="15.0" fill="rgb(148.683237066097,148.683237066097,112.849533474161)" rx="2" ry="2" />
<text  x="13.00" y="65.5" >firedrake</text>
</g>
<g >
<title>firedrake.extrusion_utils.make_extruded_coords (1,136,115 us, 10.20%)</title><rect x="10.3" y="87" width="120.3" height="15.0" fill="rgb(142.413110128496,142.413110128496,154.983182605515)" rx="2" ry="2" />
<text  x="13.26" y="97.5" >firedrake.ext..</text>
</g>
<g >
<title>firedrake.variational_solver.LinearVariationalProblem.__init__ (22,434 us, 0.20%)</title><rect x="437.0" y="71" width="2.3" height="15.0" fill="rgb(154.191658989673,154.191658989673,139.54419356534)" rx="2" ry="2" />
<text  x="439.96" y="81.5" ></text>
</g>
<g >
<title>HybridInit (779,089 us, 6.99%)</title><rect x="440.3" y="135" width="82.5" height="15.0" fill="rgb(138.84089736472,161.118923684813,138.84089736472)" rx="2" ry="2" />
<text  x="443.25" y="145.5" >HybridInit</text>
</g>
<g >
<title>firedrake.functionspace.MixedFunctionSpace (1,496 us, 0.01%)</title><rect x="435.9" y="71" width="0.1" height="15.0" fill="rgb(147.906578856447,147.906578856447,156.046434617377)" rx="2" ry="2" />
<text  x="438.86" y="81.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (2,869,553 us, 25.76%)</title><rect x="525.3" y="167" width="304.0" height="15.0" fill="rgb(153.098332410492,120.420548480435,120.420548480435)" rx="2" ry="2" />
<text  x="528.32" y="177.5" >pyop2.global_kernel.GlobalKernel.comp..</text>
</g>
<g >
<title>firedrake.parloops.par_loop (722,181 us, 6.48%)</title><rect x="446.3" y="151" width="76.5" height="15.0" fill="rgb(152.011812768561,112.090564558964,112.090564558964)" rx="2" ry="2" />
<text  x="449.28" y="161.5" >firedra..</text>
</g>
<g >
<title>firedrake.ufl_expr.action (11,303 us, 0.10%)</title><rect x="437.0" y="87" width="1.2" height="15.0" fill="rgb(155.943590637634,142.23419488853,142.23419488853)" rx="2" ry="2" />
<text  x="439.96" y="97.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (9,905 us, 0.09%)</title><rect x="442.4" y="151" width="1.0" height="15.0" fill="rgb(109.509139018042,109.509139018042,148.614672068008)" rx="2" ry="2" />
<text  x="445.36" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspace.make_scalar_element (1,263 us, 0.01%)</title><rect x="443.1" y="215" width="0.1" height="15.0" fill="rgb(128.61967520967,150.382878758063,150.382878758063)" rx="2" ry="2" />
<text  x="446.06" y="225.5" ></text>
</g>
<g >
<title>firedrake.mesh.MeshTopology._facets (2,689 us, 0.02%)</title><rect x="436.4" y="151" width="0.3" height="15.0" fill="rgb(153.750690837193,153.750690837193,137.407194057164)" rx="2" ry="2" />
<text  x="439.43" y="161.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (6,793 us, 0.06%)</title><rect x="130.6" y="103" width="0.7" height="15.0" fill="rgb(135.982954242068,161.584170239663,135.982954242068)" rx="2" ry="2" />
<text  x="133.61" y="113.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (6,620 us, 0.06%)</title><rect x="436.0" y="87" width="0.7" height="15.0" fill="rgb(112.067211842774,146.091499366645,146.091499366645)" rx="2" ry="2" />
<text  x="439.02" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspace.MixedFunctionSpace (1,751 us, 0.02%)</title><rect x="441.6" y="167" width="0.2" height="15.0" fill="rgb(154.898157315877,154.898157315877,142.967993146171)" rx="2" ry="2" />
<text  x="444.62" y="177.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (5,215 us, 0.05%)</title><rect x="441.8" y="199" width="0.6" height="15.0" fill="rgb(131.74064261972,151.192018456965,151.192018456965)" rx="2" ry="2" />
<text  x="444.80" y="209.5" ></text>
</g>
<g >
<title>Log_Event_form1_cell_integral_otherwise (1,571 us, 0.01%)</title><rect x="830.4" y="167" width="0.1" height="15.0" fill="rgb(141.488913145134,141.488913145134,154.804305770026)" rx="2" ry="2" />
<text  x="833.36" y="177.5" ></text>
</g>
<g >
<title>SNESSolve (7,077,324 us, 63.54%)</title><rect x="440.3" y="103" width="749.7" height="15.0" fill="rgb(143.047794899971,160.434079900005,143.047794899971)" rx="2" ry="2" />
<text  x="443.25" y="113.5" >SNESSolve</text>
</g>
<g >
<title>ParLoopExecute (1,096,672 us, 9.85%)</title><rect x="14.4" y="103" width="116.2" height="15.0" fill="rgb(146.731435364868,129.124303122474,146.731435364868)" rx="2" ry="2" />
<text  x="17.44" y="113.5" >ParLoopExecute</text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (1,751 us, 0.02%)</title><rect x="441.6" y="231" width="0.2" height="15.0" fill="rgb(155.41264281835,138.163594940686,138.163594940686)" rx="2" ry="2" />
<text  x="444.62" y="241.5" ></text>
</g>
</g>
</svg>
