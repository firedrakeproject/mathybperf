<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="267" onload="init(evt)" viewBox="0 0 1200 267" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:13px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:18px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 13 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (1 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="267.0" fill="url(#background)"  />
<text id="title" x="600.00" y="26" >Firedrake example</text>
<text id="details" x="10.00" y="249" > </text>
<text id="unzoom" x="10.00" y="26" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="26" >Search</text>
<text id="ignorecase" x="1174.00" y="26" >ic</text>
<text id="matched" x="1090.00" y="249" > </text>
<g id="frames">
<g >
<title>firedrake.utility_meshes.RectangleMesh (5,240 us, 0.02%)</title><rect x="162.5" y="87" width="0.2" height="15.0" fill="rgb(145.49689261133,160.0353895749,145.49689261133)" rx="2" ry="2" />
<text  x="165.45" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (4,848 us, 0.02%)</title><rect x="164.9" y="183" width="0.2" height="15.0" fill="rgb(138.328552090945,161.202328729381,138.328552090945)" rx="2" ry="2" />
<text  x="167.86" y="193.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (1,285,768 us, 4.66%)</title><rect x="11.7" y="135" width="55.0" height="15.0" fill="rgb(152.016551722596,152.016551722596,129.003289117196)" rx="2" ry="2" />
<text  x="14.71" y="145.5" >pyop2..</text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (7,302 us, 0.03%)</title><rect x="66.7" y="151" width="0.3" height="15.0" fill="rgb(124.040126956349,149.195588470164,149.195588470164)" rx="2" ry="2" />
<text  x="69.68" y="161.5" ></text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (1,005,536 us, 3.64%)</title><rect x="1147.0" y="135" width="43.0" height="15.0" fill="rgb(139.258449523976,161.050950077492,139.258449523976)" rx="2" ry="2" />
<text  x="1150.01" y="145.5" >fir..</text>
</g>
<g >
<title>firedrake.slate.slac.optimise.optimise (4,116 us, 0.01%)</title><rect x="801.6" y="167" width="0.2" height="15.0" fill="rgb(148.83669563244,159.491700710998,148.83669563244)" rx="2" ry="2" />
<text  x="804.59" y="177.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (686,590 us, 2.49%)</title><rect x="900.7" y="183" width="29.4" height="15.0" fill="rgb(136.484839699567,161.502467955884,136.484839699567)" rx="2" ry="2" />
<text  x="903.72" y="193.5" >P..</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (13,088,865 us, 47.42%)</title><rect x="242.0" y="199" width="559.6" height="15.0" fill="rgb(113.873776776894,146.559868053269,146.559868053269)" rx="2" ry="2" />
<text  x="245.02" y="209.5" >pyop2.global_kernel.GlobalKernel.compile</text>
</g>
<g >
<title>CreateExtMesh (1,333,020 us, 4.83%)</title><rect x="10.0" y="71" width="57.0" height="15.0" fill="rgb(137.410907575975,137.410907575975,154.015014369543)" rx="2" ry="2" />
<text  x="13.00" y="81.5" >Creat..</text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (8,174 us, 0.03%)</title><rect x="899.0" y="151" width="0.3" height="15.0" fill="rgb(137.693039647602,152.73523250123,152.73523250123)" rx="2" ry="2" />
<text  x="901.98" y="161.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_wrap_slate_loopy_knl_0 (13,278,254 us, 48.11%)</title><rect x="233.9" y="183" width="567.7" height="15.0" fill="rgb(125.245173841537,149.508008032991,149.508008032991)" rx="2" ry="2" />
<text  x="236.93" y="193.5" >Parloop_Cells_wrap_wrap_slate_loopy_knl_0</text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (7,302 us, 0.03%)</title><rect x="66.7" y="119" width="0.3" height="15.0" fill="rgb(147.782575480225,147.782575480225,108.484788865706)" rx="2" ry="2" />
<text  x="69.68" y="129.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (11,878 us, 0.04%)</title><rect x="67.0" y="103" width="0.5" height="15.0" fill="rgb(155.889118317719,155.889118317719,147.770342616639)" rx="2" ry="2" />
<text  x="69.99" y="113.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.action (11,450 us, 0.04%)</title><rect x="162.7" y="87" width="0.5" height="15.0" fill="rgb(129.757375986033,150.677838218601,150.677838218601)" rx="2" ry="2" />
<text  x="165.68" y="97.5" ></text>
</g>
<g >
<title>HybridInit (17,917,645 us, 64.92%)</title><rect x="164.1" y="135" width="766.0" height="15.0" fill="rgb(116.733145682012,116.733145682012,150.012866906196)" rx="2" ry="2" />
<text  x="167.07" y="145.5" >HybridInit</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (686,590 us, 2.49%)</title><rect x="900.7" y="199" width="29.4" height="15.0" fill="rgb(155.708759980303,155.708759980303,146.896298366086)" rx="2" ry="2" />
<text  x="903.72" y="209.5" >p..</text>
</g>
<g >
<title>firedrake.interpolation.make_interpolator (26,906 us, 0.10%)</title><rect x="899.3" y="151" width="1.2" height="15.0" fill="rgb(127.47954943048,162.96844544155,127.47954943048)" rx="2" ry="2" />
<text  x="902.33" y="161.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (5,317 us, 0.02%)</title><rect x="899.1" y="183" width="0.2" height="15.0" fill="rgb(128.906990226315,162.736071358507,128.906990226315)" rx="2" ry="2" />
<text  x="902.10" y="193.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_form0_cell_integral_otherwise (2,766,039 us, 10.02%)</title><rect x="930.2" y="151" width="118.3" height="15.0" fill="rgb(154.602459192681,131.952187143885,131.952187143885)" rx="2" ry="2" />
<text  x="933.22" y="161.5" >Parloop_Cells..</text>
</g>
<g >
<title>firedrake.parloops.par_loop (692,386 us, 2.51%)</title><rect x="900.5" y="151" width="29.6" height="15.0" fill="rgb(148.023233994129,132.434537109956,148.023233994129)" rx="2" ry="2" />
<text  x="903.48" y="161.5" >f..</text>
</g>
<g >
<title>firedrake.functionspace.MixedFunctionSpace (3,400 us, 0.01%)</title><rect x="164.7" y="167" width="0.2" height="15.0" fill="rgb(136.5311813983,136.5311813983,153.844744786768)" rx="2" ry="2" />
<text  x="167.71" y="177.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (8,377 us, 0.03%)</title><rect x="162.1" y="87" width="0.4" height="15.0" fill="rgb(152.110711352337,112.848787034582,112.848787034582)" rx="2" ry="2" />
<text  x="165.09" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (11,878 us, 0.04%)</title><rect x="67.0" y="119" width="0.5" height="15.0" fill="rgb(109.070593442886,145.314598300008,145.314598300008)" rx="2" ry="2" />
<text  x="69.99" y="129.5" ></text>
</g>
<g >
<title>ParLoopExecute (686,590 us, 2.49%)</title><rect x="900.7" y="167" width="29.4" height="15.0" fill="rgb(151.854111380289,151.854111380289,128.216078227555)" rx="2" ry="2" />
<text  x="903.72" y="177.5" >P..</text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (3,163 us, 0.01%)</title><rect x="163.9" y="119" width="0.2" height="15.0" fill="rgb(134.656591968171,98.1825169184385,134.656591968171)" rx="2" ry="2" />
<text  x="166.93" y="129.5" ></text>
</g>
<g >
<title>PCSetUp (17,917,645 us, 64.92%)</title><rect x="164.1" y="119" width="766.0" height="15.0" fill="rgb(155.50382383218,138.862649380045,138.862649380045)" rx="2" ry="2" />
<text  x="167.07" y="129.5" >PCSetUp</text>
</g>
<g >
<title>firedrake.matrix_free.operators.ImplicitMatrixContext.__init__ (7,170 us, 0.03%)</title><rect x="163.8" y="103" width="0.3" height="15.0" fill="rgb(142.258484229496,160.562572334733,142.258484229496)" rx="2" ry="2" />
<text  x="166.76" y="113.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (11,878 us, 0.04%)</title><rect x="67.0" y="87" width="0.5" height="15.0" fill="rgb(146.255016106778,146.255016106778,155.726777310989)" rx="2" ry="2" />
<text  x="69.99" y="97.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalProblem.__init__ (10,661 us, 0.04%)</title><rect x="163.2" y="87" width="0.4" height="15.0" fill="rgb(150.796669938218,150.796669938218,123.091554315979)" rx="2" ry="2" />
<text  x="166.17" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (4,848 us, 0.02%)</title><rect x="164.9" y="199" width="0.2" height="15.0" fill="rgb(118.504263378935,118.504263378935,150.355663879794)" rx="2" ry="2" />
<text  x="167.86" y="209.5" ></text>
</g>
<g >
<title>firedrake.assemble.allocate_matrix (7,997 us, 0.03%)</title><rect x="898.6" y="151" width="0.4" height="15.0" fill="rgb(114.745724886962,114.745724886962,149.628204816831)" rx="2" ry="2" />
<text  x="901.63" y="161.5" ></text>
</g>
<g >
<title>ParLoopExecute (5,071,006 us, 18.37%)</title><rect x="930.2" y="135" width="216.8" height="15.0" fill="rgb(138.670456354251,152.988636832584,152.988636832584)" rx="2" ry="2" />
<text  x="933.22" y="145.5" >ParLoopExecute</text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (7,302 us, 0.03%)</title><rect x="66.7" y="135" width="0.3" height="15.0" fill="rgb(155.41059350849,155.41059350849,145.451337771915)" rx="2" ry="2" />
<text  x="69.68" y="145.5" ></text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (2,265,739 us, 8.21%)</title><rect x="801.8" y="167" width="96.8" height="15.0" fill="rgb(123.856947520473,149.148097505308,149.148097505308)" rx="2" ry="2" />
<text  x="804.77" y="177.5" >firedrake...</text>
</g>
<g >
<title>SNESSolve (23,997,483 us, 86.94%)</title><rect x="164.1" y="103" width="1025.9" height="15.0" fill="rgb(142.672556552299,160.495165212416,142.672556552299)" rx="2" ry="2" />
<text  x="167.07" y="113.5" >SNESSolve</text>
</g>
<g >
<title>Log_Event_form0_cell_integral_otherwise (7,974 us, 0.03%)</title><rect x="930.6" y="167" width="0.4" height="15.0" fill="rgb(110.351611412646,145.646714069945,145.646714069945)" rx="2" ry="2" />
<text  x="933.62" y="177.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (8,174 us, 0.03%)</title><rect x="899.0" y="167" width="0.3" height="15.0" fill="rgb(126.174574953741,163.180883147065,126.174574953741)" rx="2" ry="2" />
<text  x="901.98" y="177.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.solve (23,997,483 us, 86.94%)</title><rect x="164.1" y="87" width="1025.9" height="15.0" fill="rgb(139.096992983463,161.077233700367,139.096992983463)" rx="2" ry="2" />
<text  x="167.07" y="97.5" >firedrake.variational_solver.NonlinearVariationalSolver.solve</text>
</g>
<g >
<title>ParLoopExecute (13,278,254 us, 48.11%)</title><rect x="233.9" y="167" width="567.7" height="15.0" fill="rgb(152.741688040283,152.741688040283,132.517411272138)" rx="2" ry="2" />
<text  x="236.93" y="177.5" >ParLoopExecute</text>
</g>
<g >
<title>firedrake.ufl_expr.action (4,007 us, 0.01%)</title><rect x="163.8" y="119" width="0.1" height="15.0" fill="rgb(127.700863766552,150.144668383921,150.144668383921)" rx="2" ry="2" />
<text  x="166.76" y="129.5" ></text>
</g>
<g >
<title>all (27,601,276 us, 100%)</title><rect x="10.0" y="39" width="1180.0" height="15.0" fill="rgb(131.202943099679,131.202943099679,152.813472858002)" rx="2" ry="2" />
<text  x="13.00" y="49.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (11,878 us, 0.04%)</title><rect x="67.0" y="71" width="0.5" height="15.0" fill="rgb(156.7285964772,148.252572991864,148.252572991864)" rx="2" ry="2" />
<text  x="69.99" y="81.5" ></text>
</g>
<g >
<title>Log_Event_slate_loopy_knl_0 (175,613 us, 0.64%)</title><rect x="234.5" y="199" width="7.5" height="15.0" fill="rgb(134.19547816005,151.828457300754,151.828457300754)" rx="2" ry="2" />
<text  x="237.52" y="209.5" ></text>
</g>
<g >
<title>ParLoopExecute (1,285,768 us, 4.66%)</title><rect x="11.7" y="103" width="55.0" height="15.0" fill="rgb(154.851498935796,154.851498935796,142.741879458086)" rx="2" ry="2" />
<text  x="14.71" y="113.5" >ParLo..</text>
</g>
<g >
<title>firedrake.mesh.MeshTopology._facets (3,457 us, 0.01%)</title><rect x="162.3" y="151" width="0.2" height="15.0" fill="rgb(135.204572452992,161.710883554164,135.204572452992)" rx="2" ry="2" />
<text  x="165.30" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (8,377 us, 0.03%)</title><rect x="162.1" y="119" width="0.4" height="15.0" fill="rgb(147.295527882825,147.295527882825,155.928166686998)" rx="2" ry="2" />
<text  x="165.09" y="129.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (4,848 us, 0.02%)</title><rect x="164.9" y="167" width="0.2" height="15.0" fill="rgb(145.130095618961,160.095100713192,145.130095618961)" rx="2" ry="2" />
<text  x="167.86" y="177.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (2,748,553 us, 9.96%)</title><rect x="931.0" y="167" width="117.5" height="15.0" fill="rgb(128.045160381615,128.045160381615,152.202289106119)" rx="2" ry="2" />
<text  x="933.97" y="177.5" >pyop2.global_..</text>
</g>
<g >
<title>Log_Event_subkernel1_interior_facet_vert_to__exterior_facet_vert_integral_otherwise (3,557 us, 0.01%)</title><rect x="241.7" y="215" width="0.2" height="15.0" fill="rgb(125.291487138188,149.520015183975,149.520015183975)" rx="2" ry="2" />
<text  x="244.72" y="225.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.LinearVariationalProblem.__init__ (22,111 us, 0.08%)</title><rect x="162.7" y="71" width="0.9" height="15.0" fill="rgb(156.763647982221,148.521301197029,148.521301197029)" rx="2" ry="2" />
<text  x="165.68" y="81.5" ></text>
</g>
<g >
<title>CreateMesh (3,194 us, 0.01%)</title><rect x="67.5" y="71" width="0.1" height="15.0" fill="rgb(117.714974377163,147.555734097783,147.555734097783)" rx="2" ry="2" />
<text  x="70.50" y="81.5" ></text>
</g>
<g >
<title>Log_Event_subkernel3_interior_facet_vert_to__exterior_facet_vert_integral_otherwise (3,612 us, 0.01%)</title><rect x="241.9" y="215" width="0.1" height="15.0" fill="rgb(129.984179085103,129.984179085103,152.57758304873)" rx="2" ry="2" />
<text  x="244.87" y="225.5" ></text>
</g>
<g >
<title>firedrake.assemble.allocate_matrix (7,170 us, 0.03%)</title><rect x="163.8" y="87" width="0.3" height="15.0" fill="rgb(155.427165045796,138.27493201777,138.27493201777)" rx="2" ry="2" />
<text  x="166.76" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (8,377 us, 0.03%)</title><rect x="162.1" y="103" width="0.4" height="15.0" fill="rgb(112.111877749582,146.103079416558,146.103079416558)" rx="2" ry="2" />
<text  x="165.09" y="113.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (3,589 us, 0.01%)</title><rect x="1189.8" y="167" width="0.2" height="15.0" fill="rgb(126.062624224784,126.062624224784,151.818572430603)" rx="2" ry="2" />
<text  x="1192.85" y="177.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (2,293,826 us, 8.31%)</title><rect x="1048.9" y="167" width="98.1" height="15.0" fill="rgb(150.690493591972,150.690493591972,122.57700740725)" rx="2" ry="2" />
<text  x="1051.95" y="177.5" >pyop2.glob..</text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (3,589 us, 0.01%)</title><rect x="1189.8" y="151" width="0.2" height="15.0" fill="rgb(148.329958019245,159.574192880588,148.329958019245)" rx="2" ry="2" />
<text  x="1192.85" y="161.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_form1_cell_integral_otherwise (2,304,967 us, 8.35%)</title><rect x="1048.5" y="151" width="98.5" height="15.0" fill="rgb(121.743147256197,148.60007521457,148.60007521457)" rx="2" ry="2" />
<text  x="1051.47" y="161.5" >Parloop_Ce..</text>
</g>
<g >
<title>CreateFunctionSpace (5,317 us, 0.02%)</title><rect x="899.1" y="199" width="0.2" height="15.0" fill="rgb(138.849321632065,161.117552292455,138.849321632065)" rx="2" ry="2" />
<text  x="902.10" y="209.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.__init__ (10,462 us, 0.04%)</title><rect x="163.6" y="71" width="0.5" height="15.0" fill="rgb(135.525830711516,152.173363517801,152.173363517801)" rx="2" ry="2" />
<text  x="166.62" y="81.5" ></text>
</g>
<g >
<title>CreateSparsity (7,997 us, 0.03%)</title><rect x="898.6" y="167" width="0.4" height="15.0" fill="rgb(108.235179757386,145.09800956673,145.09800956673)" rx="2" ry="2" />
<text  x="901.63" y="177.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (8,248 us, 0.03%)</title><rect x="164.7" y="151" width="0.4" height="15.0" fill="rgb(148.776821928507,148.776821928507,113.303060115071)" rx="2" ry="2" />
<text  x="167.71" y="161.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_pyop2_kernel_uniform_extrusion (1,285,768 us, 4.66%)</title><rect x="11.7" y="119" width="55.0" height="15.0" fill="rgb(140.920412878956,114.233558002325,140.920412878956)" rx="2" ry="2" />
<text  x="14.71" y="129.5" >Parlo..</text>
</g>
<g >
<title>SNESFunctionEval (6,079,838 us, 22.03%)</title><rect x="930.1" y="119" width="259.9" height="15.0" fill="rgb(148.151870359147,148.151870359147,110.274448663559)" rx="2" ry="2" />
<text  x="933.08" y="129.5" >SNESFunctionEval</text>
</g>
<g >
<title>firedrake.extrusion_utils.make_extruded_coords (1,325,718 us, 4.80%)</title><rect x="10.0" y="87" width="56.7" height="15.0" fill="rgb(143.820265557435,154.323772551928,154.323772551928)" rx="2" ry="2" />
<text  x="13.00" y="97.5" >fired..</text>
</g>
<g >
<title>firedrake (27,601,276 us, 100.00%)</title><rect x="10.0" y="55" width="1180.0" height="15.0" fill="rgb(154.882248539479,154.882248539479,142.890896768244)" rx="2" ry="2" />
<text  x="13.00" y="65.5" >firedrake</text>
</g>
<g >
<title>firedrake.utility_meshes.SquareMesh (5,240 us, 0.02%)</title><rect x="162.5" y="71" width="0.2" height="15.0" fill="rgb(150.452182329585,150.452182329585,121.422114366449)" rx="2" ry="2" />
<text  x="165.45" y="81.5" ></text>
</g>
<g >
<title>firedrake.__init__ (2,209,511 us, 8.01%)</title><rect x="67.6" y="71" width="94.5" height="15.0" fill="rgb(155.21089253076,155.21089253076,144.483556110606)" rx="2" ry="2" />
<text  x="70.63" y="81.5" >firedrake...</text>
</g>
<g >
<title>perfsolve (23,997,483 us, 86.94%)</title><rect x="164.1" y="71" width="1025.9" height="15.0" fill="rgb(152.8989665971,152.8989665971,133.279607355176)" rx="2" ry="2" />
<text  x="167.07" y="81.5" >perfsolve</text>
</g>
<g >
<title>HybridOperatorAssembly (17,158,850 us, 62.17%)</title><rect x="165.1" y="151" width="733.5" height="15.0" fill="rgb(154.367522210169,154.367522210169,140.396453787742)" rx="2" ry="2" />
<text  x="168.07" y="161.5" >HybridOperatorAssembly</text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (10,661 us, 0.04%)</title><rect x="163.2" y="103" width="0.4" height="15.0" fill="rgb(143.585673047819,143.585673047819,155.21013026732)" rx="2" ry="2" />
<text  x="166.17" y="113.5" ></text>
</g>
<g >
<title>firedrake.functionspace.VectorFunctionSpace (7,302 us, 0.03%)</title><rect x="66.7" y="87" width="0.3" height="15.0" fill="rgb(131.082955833118,162.38184439926,131.082955833118)" rx="2" ry="2" />
<text  x="69.68" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (8,377 us, 0.03%)</title><rect x="162.1" y="135" width="0.4" height="15.0" fill="rgb(104.747781596024,144.193869302673,144.193869302673)" rx="2" ry="2" />
<text  x="165.09" y="145.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (7,302 us, 0.03%)</title><rect x="66.7" y="103" width="0.3" height="15.0" fill="rgb(135.811378952211,135.811378952211,153.705428184299)" rx="2" ry="2" />
<text  x="69.68" y="113.5" ></text>
</g>
<g >
<title>Log_Event_slate_loopy_knl_0 (5,308 us, 0.02%)</title><rect x="241.5" y="215" width="0.2" height="15.0" fill="rgb(155.95114302761,142.29209654501,142.29209654501)" rx="2" ry="2" />
<text  x="244.49" y="225.5" ></text>
</g>
<g >
<title>firedrake.functionspace.VectorFunctionSpace (8,377 us, 0.03%)</title><rect x="162.1" y="71" width="0.4" height="15.0" fill="rgb(138.139186724718,138.139186724718,154.155971624139)" rx="2" ry="2" />
<text  x="165.09" y="81.5" ></text>
</g>
</g>
</svg>
