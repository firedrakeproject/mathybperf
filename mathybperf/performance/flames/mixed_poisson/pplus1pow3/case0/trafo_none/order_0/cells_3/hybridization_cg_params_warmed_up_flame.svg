<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="299" onload="init(evt)" viewBox="0 0 1200 299" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:13px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:18px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 13 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (1 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="299.0" fill="url(#background)"  />
<text id="title" x="600.00" y="26" >Firedrake example</text>
<text id="details" x="10.00" y="281" > </text>
<text id="unzoom" x="10.00" y="26" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="26" >Search</text>
<text id="ignorecase" x="1174.00" y="26" >ic</text>
<text id="matched" x="1090.00" y="281" > </text>
<g id="frames">
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.solve (138,508 us, 4.62%)</title><rect x="1135.5" y="87" width="54.5" height="15.0" fill="rgb(127.532604811733,162.95980851902,127.532604811733)" rx="2" ry="2" />
<text  x="1138.47" y="97.5" >fired..</text>
</g>
<g >
<title>SNESFunctionEval (70,573 us, 2.35%)</title><rect x="1162.2" y="119" width="27.8" height="15.0" fill="rgb(152.451732803299,143.782565308452,152.451732803299)" rx="2" ry="2" />
<text  x="1165.22" y="129.5" >S..</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (1,351 us, 0.05%)</title><rect x="1170.8" y="167" width="0.6" height="15.0" fill="rgb(151.547628654309,141.465798426666,151.547628654309)" rx="2" ry="2" />
<text  x="1173.84" y="177.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (5,758 us, 0.19%)</title><rect x="1119.9" y="87" width="2.3" height="15.0" fill="rgb(155.567647627565,139.351965144665,139.351965144665)" rx="2" ry="2" />
<text  x="1122.93" y="97.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (2,966 us, 0.10%)</title><rect x="1188.8" y="167" width="1.2" height="15.0" fill="rgb(124.318469414046,163.48303986283,124.318469414046)" rx="2" ry="2" />
<text  x="1191.83" y="177.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.LinearVariationalProblem.__init__ (23,103 us, 0.77%)</title><rect x="1123.0" y="71" width="9.1" height="15.0" fill="rgb(144.760064870614,160.155338276877,144.760064870614)" rx="2" ry="2" />
<text  x="1125.96" y="81.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (1,979 us, 0.07%)</title><rect x="1139.8" y="183" width="0.8" height="15.0" fill="rgb(138.544575421755,108.145474518248,138.544575421755)" rx="2" ry="2" />
<text  x="1142.78" y="193.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (6,832 us, 0.23%)</title><rect x="1143.3" y="183" width="2.7" height="15.0" fill="rgb(150.308744565264,150.308744565264,120.726992893202)" rx="2" ry="2" />
<text  x="1146.32" y="193.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (377 us, 0.01%)</title><rect x="1119.8" y="87" width="0.1" height="15.0" fill="rgb(136.029760432353,136.029760432353,153.747695567552)" rx="2" ry="2" />
<text  x="1122.78" y="97.5" ></text>
</g>
<g >
<title>Mesh: numbering (866 us, 0.03%)</title><rect x="63.0" y="87" width="0.3" height="15.0" fill="rgb(151.276136107675,140.770098775916,151.276136107675)" rx="2" ry="2" />
<text  x="65.97" y="97.5" ></text>
</g>
<g >
<title>SNESSolve (138,508 us, 4.62%)</title><rect x="1135.5" y="103" width="54.5" height="15.0" fill="rgb(152.625607985292,152.625607985292,131.954869467186)" rx="2" ry="2" />
<text  x="1138.47" y="113.5" >SNESS..</text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (448 us, 0.01%)</title><rect x="1189.8" y="247" width="0.2" height="15.0" fill="rgb(152.664448917094,117.094108364389,117.094108364389)" rx="2" ry="2" />
<text  x="1192.82" y="257.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (377 us, 0.01%)</title><rect x="1119.8" y="103" width="0.1" height="15.0" fill="rgb(126.976807960583,126.976807960583,151.995511218177)" rx="2" ry="2" />
<text  x="1122.78" y="113.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.__init__ (8,679 us, 0.29%)</title><rect x="1132.1" y="71" width="3.4" height="15.0" fill="rgb(148.70628405685,148.70628405685,112.961222737044)" rx="2" ry="2" />
<text  x="1135.05" y="81.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (4,681 us, 0.16%)</title><rect x="1143.8" y="199" width="1.9" height="15.0" fill="rgb(130.074341902901,150.760014567419,150.760014567419)" rx="2" ry="2" />
<text  x="1146.84" y="209.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (1,420 us, 0.05%)</title><rect x="1161.7" y="199" width="0.5" height="15.0" fill="rgb(149.252279192311,149.252279192311,115.607199162738)" rx="2" ry="2" />
<text  x="1164.66" y="209.5" ></text>
</g>
<g >
<title>PetscBarrier (978 us, 0.03%)</title><rect x="63.3" y="71" width="0.4" height="15.0" fill="rgb(150.579372650063,150.579372650063,122.03849822723)" rx="2" ry="2" />
<text  x="66.31" y="81.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (442 us, 0.01%)</title><rect x="1140.6" y="183" width="0.1" height="15.0" fill="rgb(156.750442449126,148.420058776631,148.420058776631)" rx="2" ry="2" />
<text  x="1143.56" y="193.5" ></text>
</g>
<g >
<title>firedrake.matrix_free.operators.ImplicitMatrixContext.__init__ (7,136 us, 0.24%)</title><rect x="1132.7" y="103" width="2.8" height="15.0" fill="rgb(154.00247229686,154.00247229686,138.627365746321)" rx="2" ry="2" />
<text  x="1135.66" y="113.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (2,241 us, 0.07%)</title><rect x="1144.8" y="215" width="0.9" height="15.0" fill="rgb(140.964669042301,153.583432714671,153.583432714671)" rx="2" ry="2" />
<text  x="1147.80" y="225.5" ></text>
</g>
<g >
<title>Log_Event_form0_cell_integral_otherwise (8,481 us, 0.28%)</title><rect x="1167.5" y="167" width="3.3" height="15.0" fill="rgb(135.603131028432,161.646001925604,135.603131028432)" rx="2" ry="2" />
<text  x="1170.50" y="177.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.action (11,547 us, 0.39%)</title><rect x="1123.1" y="87" width="4.6" height="15.0" fill="rgb(153.96293714987,153.96293714987,138.435772341679)" rx="2" ry="2" />
<text  x="1126.12" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (13,629 us, 0.45%)</title><rect x="57.1" y="87" width="5.4" height="15.0" fill="rgb(154.0950791406,128.062273411269,128.062273411269)" rx="2" ry="2" />
<text  x="60.10" y="97.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (2,643 us, 0.09%)</title><rect x="1134.4" y="119" width="1.1" height="15.0" fill="rgb(152.105209049749,112.80660271474,112.80660271474)" rx="2" ry="2" />
<text  x="1137.43" y="129.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (9,643 us, 0.32%)</title><rect x="1142.2" y="151" width="3.8" height="15.0" fill="rgb(126.124355199442,163.189058455905,126.124355199442)" rx="2" ry="2" />
<text  x="1145.22" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (5,758 us, 0.19%)</title><rect x="1119.9" y="103" width="2.3" height="15.0" fill="rgb(145.609105628947,145.609105628947,155.601762379796)" rx="2" ry="2" />
<text  x="1122.93" y="113.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (10,212 us, 0.34%)</title><rect x="1127.7" y="103" width="4.0" height="15.0" fill="rgb(136.196166128707,152.347154181517,152.347154181517)" rx="2" ry="2" />
<text  x="1130.66" y="113.5" ></text>
</g>
<g >
<title>CreateMesh (2,143 us, 0.07%)</title><rect x="62.5" y="71" width="0.8" height="15.0" fill="rgb(133.354069085063,94.8448020304738,133.354069085063)" rx="2" ry="2" />
<text  x="65.46" y="81.5" ></text>
</g>
<g >
<title>firedrake.assemble.allocate_matrix (7,136 us, 0.24%)</title><rect x="1132.7" y="87" width="2.8" height="15.0" fill="rgb(152.903724730902,118.928556270252,118.928556270252)" rx="2" ry="2" />
<text  x="1135.66" y="97.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (1,031 us, 0.03%)</title><rect x="1189.6" y="199" width="0.4" height="15.0" fill="rgb(153.292316518272,153.292316518272,135.185841588547)" rx="2" ry="2" />
<text  x="1192.59" y="209.5" ></text>
</g>
<g >
<title>firedrake (2,997,168 us, 100.00%)</title><rect x="10.0" y="55" width="1180.0" height="15.0" fill="rgb(150.175880973563,150.175880973563,120.083115487268)" rx="2" ry="2" />
<text  x="13.00" y="65.5" >firedrake</text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (5,403 us, 0.18%)</title><rect x="1187.9" y="151" width="2.1" height="15.0" fill="rgb(104.793178688059,144.205638919126,144.205638919126)" rx="2" ry="2" />
<text  x="1190.87" y="161.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_form0_cell_integral_otherwise (19,491 us, 0.65%)</title><rect x="1163.7" y="151" width="7.7" height="15.0" fill="rgb(139.73615847326,153.264929974549,153.264929974549)" rx="2" ry="2" />
<text  x="1166.70" y="161.5" ></text>
</g>
<g >
<title>firedrake.mesh.make_mesh_from_coordinates (1,009 us, 0.03%)</title><rect x="56.2" y="87" width="0.4" height="15.0" fill="rgb(142.426096756593,118.091872938769,142.426096756593)" rx="2" ry="2" />
<text  x="59.25" y="97.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (1,420 us, 0.05%)</title><rect x="1161.7" y="183" width="0.5" height="15.0" fill="rgb(153.482962001928,123.369375348115,123.369375348115)" rx="2" ry="2" />
<text  x="1164.66" y="193.5" ></text>
</g>
<g >
<title>CreateMesh (487 us, 0.02%)</title><rect x="1122.5" y="103" width="0.2" height="15.0" fill="rgb(149.096699423423,149.096699423423,114.853235667358)" rx="2" ry="2" />
<text  x="1125.52" y="113.5" ></text>
</g>
<g >
<title>firedrake.function.Function.split (933 us, 0.03%)</title><rect x="1131.7" y="119" width="0.4" height="15.0" fill="rgb(123.969249373868,123.969249373868,151.41340310462)" rx="2" ry="2" />
<text  x="1134.68" y="129.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (6,514 us, 0.22%)</title><rect x="53.4" y="135" width="2.5" height="15.0" fill="rgb(144.962466148931,154.619898631204,154.619898631204)" rx="2" ry="2" />
<text  x="56.38" y="145.5" ></text>
</g>
<g >
<title>Log_Event_form1_cell_integral_otherwise (1,488 us, 0.05%)</title><rect x="1175.1" y="167" width="0.5" height="15.0" fill="rgb(152.156207032051,113.197587245725,113.197587245725)" rx="2" ry="2" />
<text  x="1178.06" y="177.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (1,398 us, 0.05%)</title><rect x="1140.0" y="215" width="0.6" height="15.0" fill="rgb(108.3686994524,145.132625783955,145.132625783955)" rx="2" ry="2" />
<text  x="1143.01" y="225.5" ></text>
</g>
<g >
<title>firedrake.functionspace.make_scalar_element (532 us, 0.02%)</title><rect x="56.9" y="87" width="0.2" height="15.0" fill="rgb(137.060335372589,161.408782613765,137.060335372589)" rx="2" ry="2" />
<text  x="59.89" y="97.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (7,287 us, 0.24%)</title><rect x="1139.3" y="151" width="2.9" height="15.0" fill="rgb(137.159182745569,104.595405785521,137.159182745569)" rx="2" ry="2" />
<text  x="1142.35" y="161.5" ></text>
</g>
<g >
<title>firedrake.interpolation.make_interpolator (34,344 us, 1.15%)</title><rect x="1146.3" y="151" width="13.6" height="15.0" fill="rgb(125.106627749186,163.354735017574,125.106627749186)" rx="2" ry="2" />
<text  x="1149.34" y="161.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (14,777 us, 0.49%)</title><rect x="56.6" y="71" width="5.9" height="15.0" fill="rgb(112.414570761639,146.181555382647,146.181555382647)" rx="2" ry="2" />
<text  x="59.65" y="81.5" ></text>
</g>
<g >
<title>CreateMesh (487 us, 0.02%)</title><rect x="1122.5" y="119" width="0.2" height="15.0" fill="rgb(154.587578376762,131.838100888509,131.838100888509)" rx="2" ry="2" />
<text  x="1125.52" y="129.5" ></text>
</g>
<g >
<title>firedrake.functionspace.MixedFunctionSpace (3,006 us, 0.10%)</title><rect x="1139.6" y="167" width="1.1" height="15.0" fill="rgb(152.205684057142,152.205684057142,129.919853507687)" rx="2" ry="2" />
<text  x="1142.55" y="177.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (1,398 us, 0.05%)</title><rect x="1140.0" y="231" width="0.6" height="15.0" fill="rgb(116.393164580149,116.393164580149,149.947064112287)" rx="2" ry="2" />
<text  x="1143.01" y="241.5" ></text>
</g>
<g >
<title>CreateMesh (578 us, 0.02%)</title><rect x="62.7" y="87" width="0.3" height="15.0" fill="rgb(110.785995978499,145.759332290722,145.759332290722)" rx="2" ry="2" />
<text  x="65.74" y="97.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (69,612 us, 2.32%)</title><rect x="26.0" y="135" width="27.4" height="15.0" fill="rgb(148.551169903303,148.551169903303,112.209515685239)" rx="2" ry="2" />
<text  x="28.97" y="145.5" >p..</text>
</g>
<g >
<title>firedrake.functionspaceimpl.WithGeometry.split (850 us, 0.03%)</title><rect x="1145.7" y="199" width="0.3" height="15.0" fill="rgb(142.039221267022,160.598266305369,142.039221267022)" rx="2" ry="2" />
<text  x="1148.68" y="209.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (1,658 us, 0.06%)</title><rect x="1145.0" y="231" width="0.7" height="15.0" fill="rgb(153.272710853004,153.272710853004,135.090829518405)" rx="2" ry="2" />
<text  x="1148.03" y="241.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (13,165 us, 0.44%)</title><rect x="57.3" y="119" width="5.2" height="15.0" fill="rgb(153.240702695903,121.512054001926,121.512054001926)" rx="2" ry="2" />
<text  x="60.28" y="129.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (448 us, 0.01%)</title><rect x="1189.8" y="231" width="0.2" height="15.0" fill="rgb(153.771860074459,125.58426057085,125.58426057085)" rx="2" ry="2" />
<text  x="1192.82" y="241.5" ></text>
</g>
<g >
<title>firedrake.function.Function.__init__ (828 us, 0.03%)</title><rect x="1146.0" y="151" width="0.3" height="15.0" fill="rgb(146.022879964202,127.308629908268,146.022879964202)" rx="2" ry="2" />
<text  x="1149.01" y="161.5" ></text>
</g>
<g >
<title>firedrake.mesh._Facets.__init__ (718 us, 0.02%)</title><rect x="1121.9" y="167" width="0.3" height="15.0" fill="rgb(146.141651231091,154.925613282135,154.925613282135)" rx="2" ry="2" />
<text  x="1124.91" y="177.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (3,764 us, 0.13%)</title><rect x="1140.7" y="183" width="1.5" height="15.0" fill="rgb(156.655965722494,147.695737205791,147.695737205791)" rx="2" ry="2" />
<text  x="1143.74" y="193.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.derivative (933 us, 0.03%)</title><rect x="1131.7" y="103" width="0.4" height="15.0" fill="rgb(146.911013277275,155.125077516331,155.125077516331)" rx="2" ry="2" />
<text  x="1134.68" y="113.5" ></text>
</g>
<g >
<title>firedrake.mesh._Facets.__init__ (593 us, 0.02%)</title><rect x="55.7" y="167" width="0.2" height="15.0" fill="rgb(135.362078743548,161.685242995236,135.362078743548)" rx="2" ry="2" />
<text  x="58.71" y="177.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalProblem.__init__ (11,145 us, 0.37%)</title><rect x="1127.7" y="87" width="4.4" height="15.0" fill="rgb(155.991496902163,142.601476249918,142.601476249918)" rx="2" ry="2" />
<text  x="1130.66" y="97.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (6,514 us, 0.22%)</title><rect x="53.4" y="103" width="2.5" height="15.0" fill="rgb(155.093022435086,135.713172002325,135.713172002325)" rx="2" ry="2" />
<text  x="56.38" y="113.5" ></text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (34,964 us, 1.17%)</title><rect x="1176.2" y="135" width="13.8" height="15.0" fill="rgb(153.629663876438,124.494089719355,124.494089719355)" rx="2" ry="2" />
<text  x="1179.23" y="145.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.action (4,493 us, 0.15%)</title><rect x="1132.7" y="119" width="1.7" height="15.0" fill="rgb(152.476731956513,115.65494499993,115.65494499993)" rx="2" ry="2" />
<text  x="1135.66" y="129.5" ></text>
</g>
<g >
<title>all (2,997,168 us, 100%)</title><rect x="10.0" y="39" width="1180.0" height="15.0" fill="rgb(130.434248692886,162.487447887205,130.434248692886)" rx="2" ry="2" />
<text  x="13.00" y="49.5" ></text>
</g>
<g >
<title>firedrake.utility_meshes.RectangleMesh (1,927 us, 0.06%)</title><rect x="1122.2" y="87" width="0.8" height="15.0" fill="rgb(108.875899597147,108.875899597147,148.492109599448)" rx="2" ry="2" />
<text  x="1125.20" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (5,758 us, 0.19%)</title><rect x="1119.9" y="119" width="2.3" height="15.0" fill="rgb(105.301321237352,144.337379580054,144.337379580054)" rx="2" ry="2" />
<text  x="1122.93" y="129.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (3,764 us, 0.13%)</title><rect x="1140.7" y="199" width="1.5" height="15.0" fill="rgb(156.267732123715,144.719279615145,144.719279615145)" rx="2" ry="2" />
<text  x="1143.74" y="209.5" ></text>
</g>
<g >
<title>firedrake.functionspace.VectorFunctionSpace (5,758 us, 0.19%)</title><rect x="1119.9" y="71" width="2.3" height="15.0" fill="rgb(152.595970604231,116.56910796577,116.56910796577)" rx="2" ry="2" />
<text  x="1122.93" y="81.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (9,143 us, 0.31%)</title><rect x="1142.4" y="167" width="3.6" height="15.0" fill="rgb(128.034121942504,128.034121942504,152.200152634033)" rx="2" ry="2" />
<text  x="1145.41" y="177.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (448 us, 0.01%)</title><rect x="1189.8" y="215" width="0.2" height="15.0" fill="rgb(149.4141018369,149.4141018369,116.391416594208)" rx="2" ry="2" />
<text  x="1192.82" y="225.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (6,514 us, 0.22%)</title><rect x="53.4" y="151" width="2.5" height="15.0" fill="rgb(139.72676374409,139.72676374409,154.46324459563)" rx="2" ry="2" />
<text  x="56.38" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspace.make_scalar_element (1,115 us, 0.04%)</title><rect x="1144.4" y="215" width="0.4" height="15.0" fill="rgb(153.22631508697,121.4017490001,121.4017490001)" rx="2" ry="2" />
<text  x="1147.36" y="225.5" ></text>
</g>
<g >
<title>firedrake.parloops.par_loop (5,978 us, 0.20%)</title><rect x="1159.9" y="151" width="2.3" height="15.0" fill="rgb(126.602691512243,126.602691512243,151.923101583015)" rx="2" ry="2" />
<text  x="1162.86" y="161.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (1,485 us, 0.05%)</title><rect x="1175.6" y="167" width="0.6" height="15.0" fill="rgb(137.34087854528,161.363112794954,137.34087854528)" rx="2" ry="2" />
<text  x="1178.65" y="177.5" ></text>
</g>
<g >
<title>firedrake.extrusion_utils.make_extruded_coords (109,559 us, 3.66%)</title><rect x="10.2" y="87" width="43.2" height="15.0" fill="rgb(154.179028011629,154.179028011629,139.482981902512)" rx="2" ry="2" />
<text  x="13.24" y="97.5" >fir..</text>
</g>
<g >
<title>perfsolve (138,508 us, 4.62%)</title><rect x="1135.5" y="71" width="54.5" height="15.0" fill="rgb(133.627969746521,133.627969746521,153.282832854165)" rx="2" ry="2" />
<text  x="1138.47" y="81.5" >perfs..</text>
</g>
<g >
<title>firedrake.utility_meshes.SquareMesh (1,927 us, 0.06%)</title><rect x="1122.2" y="71" width="0.8" height="15.0" fill="rgb(154.528718333864,154.528718333864,141.17763500257)" rx="2" ry="2" />
<text  x="1125.20" y="81.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_form1_cell_integral_otherwise (12,354 us, 0.41%)</title><rect x="1171.4" y="151" width="4.8" height="15.0" fill="rgb(113.192049375706,146.38312391222,146.38312391222)" rx="2" ry="2" />
<text  x="1174.37" y="161.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (1,031 us, 0.03%)</title><rect x="1189.6" y="183" width="0.4" height="15.0" fill="rgb(120.54158768959,148.288559771375,148.288559771375)" rx="2" ry="2" />
<text  x="1192.59" y="193.5" ></text>
</g>
<g >
<title>HybridInit (67,935 us, 2.27%)</title><rect x="1135.5" y="135" width="26.7" height="15.0" fill="rgb(154.299477359155,129.629326420184,129.629326420184)" rx="2" ry="2" />
<text  x="1138.47" y="145.5" >H..</text>
</g>
<g >
<title>PCSetUp (67,935 us, 2.27%)</title><rect x="1135.5" y="119" width="26.7" height="15.0" fill="rgb(150.758008689955,150.758008689955,122.904195959013)" rx="2" ry="2" />
<text  x="1138.47" y="129.5" >P..</text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (1,658 us, 0.06%)</title><rect x="1145.0" y="247" width="0.7" height="15.0" fill="rgb(149.367970199574,149.367970199574,116.167855582551)" rx="2" ry="2" />
<text  x="1148.03" y="257.5" ></text>
</g>
<g >
<title>firedrake.mesh.ExtrudedMeshTopology.__init__ (780 us, 0.03%)</title><rect x="55.9" y="87" width="0.3" height="15.0" fill="rgb(130.791515495352,162.429288175175,130.791515495352)" rx="2" ry="2" />
<text  x="58.94" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspace.MixedFunctionSpace (999 us, 0.03%)</title><rect x="1119.5" y="71" width="0.4" height="15.0" fill="rgb(154.988903494314,134.914926789744,134.914926789744)" rx="2" ry="2" />
<text  x="1122.54" y="81.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (13,165 us, 0.44%)</title><rect x="57.3" y="103" width="5.2" height="15.0" fill="rgb(148.339392021831,148.339392021831,111.18320749041)" rx="2" ry="2" />
<text  x="60.28" y="113.5" ></text>
</g>
<g >
<title>firedrake.functionspace.VectorFunctionSpace (6,514 us, 0.22%)</title><rect x="53.4" y="87" width="2.5" height="15.0" fill="rgb(109.039555200025,109.039555200025,148.523784877424)" rx="2" ry="2" />
<text  x="56.38" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (6,514 us, 0.22%)</title><rect x="53.4" y="119" width="2.5" height="15.0" fill="rgb(153.646384200028,153.646384200028,136.901708046292)" rx="2" ry="2" />
<text  x="56.38" y="129.5" ></text>
</g>
<g >
<title>ParLoopExecute (1,420 us, 0.05%)</title><rect x="1161.7" y="167" width="0.5" height="15.0" fill="rgb(139.372221268781,161.03242909578,139.372221268781)" rx="2" ry="2" />
<text  x="1164.66" y="177.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (1,398 us, 0.05%)</title><rect x="1140.0" y="199" width="0.6" height="15.0" fill="rgb(148.605319081563,148.605319081563,112.47193093373)" rx="2" ry="2" />
<text  x="1143.01" y="209.5" ></text>
</g>
<g >
<title>firedrake.__init__ (2,681,399 us, 89.46%)</title><rect x="63.7" y="71" width="1055.7" height="15.0" fill="rgb(135.918024438453,161.594740207694,135.918024438453)" rx="2" ry="2" />
<text  x="66.69" y="81.5" >firedrake.__init__</text>
</g>
<g >
<title>firedrake.mesh.MeshTopology._facets (2,462 us, 0.08%)</title><rect x="1121.2" y="151" width="1.0" height="15.0" fill="rgb(150.101415130121,150.101415130121,119.722242553663)" rx="2" ry="2" />
<text  x="1124.23" y="161.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_pyop2_kernel_uniform_extrusion (70,228 us, 2.34%)</title><rect x="25.7" y="119" width="27.7" height="15.0" fill="rgb(142.124245678529,153.884063694433,153.884063694433)" rx="2" ry="2" />
<text  x="28.73" y="129.5" >P..</text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (5,758 us, 0.19%)</title><rect x="1119.9" y="135" width="2.3" height="15.0" fill="rgb(139.355484305502,139.355484305502,154.391384059129)" rx="2" ry="2" />
<text  x="1122.93" y="145.5" ></text>
</g>
<g >
<title>CreateExtMesh (118,479 us, 3.95%)</title><rect x="10.0" y="71" width="46.6" height="15.0" fill="rgb(138.525598836585,108.096847018748,138.525598836585)" rx="2" ry="2" />
<text  x="13.00" y="81.5" >Crea..</text>
</g>
<g >
<title>firedrake.mesh._from_cell_list (615 us, 0.02%)</title><rect x="1122.7" y="103" width="0.3" height="15.0" fill="rgb(150.811207977431,150.811207977431,123.162007890626)" rx="2" ry="2" />
<text  x="1125.71" y="113.5" ></text>
</g>
<g >
<title>ParLoopExecute (70,717 us, 2.36%)</title><rect x="25.5" y="103" width="27.9" height="15.0" fill="rgb(153.323480004338,122.146680033262,122.146680033262)" rx="2" ry="2" />
<text  x="28.54" y="113.5" >P..</text>
</g>
<g >
<title>ParLoopExecute (32,414 us, 1.08%)</title><rect x="1163.5" y="135" width="12.7" height="15.0" fill="rgb(155.592556479179,139.542933007038,139.542933007038)" rx="2" ry="2" />
<text  x="1166.47" y="145.5" ></text>
</g>
<g >
<title>firedrake.function.Function.__init__ (418 us, 0.01%)</title><rect x="1119.4" y="71" width="0.1" height="15.0" fill="rgb(151.61966775767,151.61966775767,127.079928364091)" rx="2" ry="2" />
<text  x="1122.37" y="81.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (3,764 us, 0.13%)</title><rect x="1140.7" y="167" width="1.5" height="15.0" fill="rgb(112.166201326155,146.117163306781,146.117163306781)" rx="2" ry="2" />
<text  x="1143.74" y="177.5" ></text>
</g>
</g>
</svg>
