<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="299" onload="init(evt)" viewBox="0 0 1200 299" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:13px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:18px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 13 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (1 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="299.0" fill="url(#background)"  />
<text id="title" x="600.00" y="26" >Firedrake example</text>
<text id="details" x="10.00" y="281" > </text>
<text id="unzoom" x="10.00" y="26" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="26" >Search</text>
<text id="ignorecase" x="1174.00" y="26" >ic</text>
<text id="matched" x="1090.00" y="281" > </text>
<g id="frames">
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (2,950,809 us, 26.16%)</title><rect x="517.4" y="167" width="308.8" height="15.0" fill="rgb(141.915400419073,141.915400419073,154.886851694014)" rx="2" ry="2" />
<text  x="520.43" y="177.5" >pyop2.global_kernel.GlobalKernel.compile</text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (2,047 us, 0.02%)</title><rect x="435.7" y="231" width="0.2" height="15.0" fill="rgb(152.613730151046,116.705264491356,116.705264491356)" rx="2" ry="2" />
<text  x="438.73" y="241.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (3,829 us, 0.03%)</title><rect x="432.2" y="119" width="0.4" height="15.0" fill="rgb(135.036994361154,161.738163708649,135.036994361154)" rx="2" ry="2" />
<text  x="435.20" y="129.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalProblem.__init__ (12,256 us, 0.11%)</title><rect x="430.3" y="87" width="1.3" height="15.0" fill="rgb(127.391247785931,150.06439757413,150.06439757413)" rx="2" ry="2" />
<text  x="433.31" y="97.5" ></text>
</g>
<g >
<title>ParLoopExecute (5,408,593 us, 47.96%)</title><rect x="515.4" y="135" width="565.9" height="15.0" fill="rgb(113.618457770252,113.618457770252,149.410024084565)" rx="2" ry="2" />
<text  x="518.43" y="145.5" >ParLoopExecute</text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (4,949 us, 0.04%)</title><rect x="434.4" y="199" width="0.5" height="15.0" fill="rgb(152.235915246761,113.808683558504,113.808683558504)" rx="2" ry="2" />
<text  x="437.41" y="209.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (4,949 us, 0.04%)</title><rect x="434.4" y="167" width="0.5" height="15.0" fill="rgb(138.99571550101,161.093720732394,138.99571550101)" rx="2" ry="2" />
<text  x="437.41" y="177.5" ></text>
</g>
<g >
<title>firedrake.functionspace.VectorFunctionSpace (7,455 us, 0.07%)</title><rect x="131.5" y="87" width="0.7" height="15.0" fill="rgb(152.175207664425,113.343258760594,113.343258760594)" rx="2" ry="2" />
<text  x="134.46" y="97.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (1,202 us, 0.01%)</title><rect x="1189.9" y="199" width="0.1" height="15.0" fill="rgb(153.176337821747,121.018589966726,121.018589966726)" rx="2" ry="2" />
<text  x="1192.87" y="209.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (1,702 us, 0.02%)</title><rect x="434.2" y="215" width="0.2" height="15.0" fill="rgb(148.853000295218,148.853000295218,113.672232199902)" rx="2" ry="2" />
<text  x="437.23" y="225.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_form0_cell_integral_otherwise (2,968,695 us, 26.32%)</title><rect x="515.6" y="151" width="310.6" height="15.0" fill="rgb(150.305341556038,150.305341556038,120.710501386954)" rx="2" ry="2" />
<text  x="518.56" y="161.5" >Parloop_Cells_wrap_form0_cell_integral..</text>
</g>
<g >
<title>Log_Event_form1_cell_integral_otherwise (1,499 us, 0.01%)</title><rect x="827.2" y="167" width="0.2" height="15.0" fill="rgb(104.047615943998,144.01234487437,144.01234487437)" rx="2" ry="2" />
<text  x="830.21" y="177.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (7,455 us, 0.07%)</title><rect x="131.5" y="119" width="0.7" height="15.0" fill="rgb(124.838575169442,149.402593562448,149.402593562448)" rx="2" ry="2" />
<text  x="134.46" y="129.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (9,740 us, 0.09%)</title><rect x="434.9" y="167" width="1.0" height="15.0" fill="rgb(153.151976284126,120.831818178297,120.831818178297)" rx="2" ry="2" />
<text  x="437.92" y="177.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (4,787 us, 0.04%)</title><rect x="435.4" y="199" width="0.5" height="15.0" fill="rgb(148.147854175774,148.147854175774,110.254985621057)" rx="2" ry="2" />
<text  x="438.44" y="209.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.action (11,996 us, 0.11%)</title><rect x="429.1" y="87" width="1.2" height="15.0" fill="rgb(125.086539635995,163.358005175536,125.086539635995)" rx="2" ry="2" />
<text  x="432.05" y="97.5" ></text>
</g>
<g >
<title>firedrake.__init__ (2,813,136 us, 24.94%)</title><rect x="133.7" y="71" width="294.4" height="15.0" fill="rgb(135.368279343443,100.006215817572,135.368279343443)" rx="2" ry="2" />
<text  x="136.72" y="81.5" >firedrake.__init__</text>
</g>
<g >
<title>firedrake.ufl_expr.action (4,259 us, 0.04%)</title><rect x="431.8" y="119" width="0.4" height="15.0" fill="rgb(155.250505744543,136.9205440415,136.9205440415)" rx="2" ry="2" />
<text  x="434.75" y="129.5" ></text>
</g>
<g >
<title>firedrake.matrix_free.operators.ImplicitMatrixContext.__init__ (8,088 us, 0.07%)</title><rect x="431.8" y="103" width="0.8" height="15.0" fill="rgb(148.180762442684,159.598480532586,148.180762442684)" rx="2" ry="2" />
<text  x="434.75" y="113.5" ></text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (1,038,865 us, 9.21%)</title><rect x="1081.3" y="135" width="108.7" height="15.0" fill="rgb(148.459687118764,148.459687118764,111.766176037086)" rx="2" ry="2" />
<text  x="1084.31" y="145.5" >firedrake.ts..</text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (1,702 us, 0.02%)</title><rect x="434.2" y="231" width="0.2" height="15.0" fill="rgb(153.412177029937,153.412177029937,135.766704068154)" rx="2" ry="2" />
<text  x="437.23" y="241.5" ></text>
</g>
<g >
<title>firedrake.utility_meshes.RectangleMesh (2,332 us, 0.02%)</title><rect x="428.8" y="87" width="0.3" height="15.0" fill="rgb(122.032640889899,122.032640889899,151.038575656109)" rx="2" ry="2" />
<text  x="431.81" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspace.MixedFunctionSpace (1,702 us, 0.02%)</title><rect x="434.2" y="167" width="0.2" height="15.0" fill="rgb(139.136465661881,161.070807915508,139.136465661881)" rx="2" ry="2" />
<text  x="437.23" y="177.5" ></text>
</g>
<g >
<title>HybridInit (788,273 us, 6.99%)</title><rect x="432.6" y="135" width="82.5" height="15.0" fill="rgb(127.062095729294,127.062095729294,152.01201852825)" rx="2" ry="2" />
<text  x="435.60" y="145.5" >HybridInit</text>
</g>
<g >
<title>Log_Event_form0_cell_integral_otherwise (8,082 us, 0.07%)</title><rect x="516.6" y="167" width="0.8" height="15.0" fill="rgb(145.644992454536,145.644992454536,155.608708217007)" rx="2" ry="2" />
<text  x="519.58" y="177.5" ></text>
</g>
<g >
<title>firedrake.assemble.allocate_matrix (8,088 us, 0.07%)</title><rect x="431.8" y="87" width="0.8" height="15.0" fill="rgb(134.955896793822,134.955896793822,153.539850992353)" rx="2" ry="2" />
<text  x="434.75" y="97.5" ></text>
</g>
<g >
<title>firedrake.mesh.MeshTopology._facets (2,988 us, 0.03%)</title><rect x="428.5" y="151" width="0.3" height="15.0" fill="rgb(117.246029152679,147.43415570625,147.43415570625)" rx="2" ry="2" />
<text  x="431.50" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (12,102 us, 0.11%)</title><rect x="132.2" y="87" width="1.3" height="15.0" fill="rgb(136.382579106503,136.382579106503,153.815983052872)" rx="2" ry="2" />
<text  x="135.24" y="97.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (9,740 us, 0.09%)</title><rect x="434.9" y="151" width="1.0" height="15.0" fill="rgb(136.436318012155,161.510366835231,136.436318012155)" rx="2" ry="2" />
<text  x="437.92" y="161.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (5,670 us, 0.05%)</title><rect x="1189.4" y="151" width="0.6" height="15.0" fill="rgb(113.880435431643,113.880435431643,149.460729438382)" rx="2" ry="2" />
<text  x="1192.41" y="161.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.derivative (1,272 us, 0.01%)</title><rect x="431.5" y="103" width="0.1" height="15.0" fill="rgb(150.270288198962,150.270288198962,120.540627425739)" rx="2" ry="2" />
<text  x="434.46" y="113.5" ></text>
</g>
<g >
<title>firedrake.parloops.par_loop (725,448 us, 6.43%)</title><rect x="439.2" y="151" width="75.9" height="15.0" fill="rgb(106.166815154185,144.561766891826,144.561766891826)" rx="2" ry="2" />
<text  x="442.17" y="161.5" >firedra..</text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (3,324 us, 0.03%)</title><rect x="1189.7" y="167" width="0.3" height="15.0" fill="rgb(150.411747662718,159.235296892116,150.411747662718)" rx="2" ry="2" />
<text  x="1192.65" y="177.5" ></text>
</g>
<g >
<title>firedrake.utility_meshes.SquareMesh (2,332 us, 0.02%)</title><rect x="428.8" y="71" width="0.3" height="15.0" fill="rgb(154.376463585367,154.376463585367,140.439785067547)" rx="2" ry="2" />
<text  x="431.81" y="81.5" ></text>
</g>
<g >
<title>CreateExtMesh (1,168,327 us, 10.36%)</title><rect x="10.0" y="71" width="122.2" height="15.0" fill="rgb(132.294820905691,132.294820905691,153.024804046263)" rx="2" ry="2" />
<text  x="13.00" y="81.5" >CreateExtMesh</text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.solve (7,239,131 us, 64.19%)</title><rect x="432.6" y="87" width="757.4" height="15.0" fill="rgb(154.17204340302,154.17204340302,139.449133414636)" rx="2" ry="2" />
<text  x="435.60" y="97.5" >firedrake.variational_solver.NonlinearVariationalSolver.solve</text>
</g>
<g >
<title>PCSetUp (788,273 us, 6.99%)</title><rect x="432.6" y="119" width="82.5" height="15.0" fill="rgb(144.468401232764,144.468401232764,155.380980883761)" rx="2" ry="2" />
<text  x="435.60" y="129.5" >PCSetUp</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (2,427,160 us, 21.52%)</title><rect x="827.4" y="167" width="253.9" height="15.0" fill="rgb(154.076819793229,127.922285081422,127.922285081422)" rx="2" ry="2" />
<text  x="830.36" y="177.5" >pyop2.global_kernel.GlobalKerne..</text>
</g>
<g >
<title>firedrake (11,278,235 us, 100.00%)</title><rect x="10.0" y="55" width="1180.0" height="15.0" fill="rgb(138.806991738017,108.817916328668,138.806991738017)" rx="2" ry="2" />
<text  x="13.00" y="65.5" >firedrake</text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (12,102 us, 0.11%)</title><rect x="132.2" y="103" width="1.3" height="15.0" fill="rgb(136.729634913801,136.729634913801,153.883155144607)" rx="2" ry="2" />
<text  x="135.24" y="113.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (10,984 us, 0.10%)</title><rect x="430.3" y="103" width="1.2" height="15.0" fill="rgb(154.960769053921,154.960769053921,143.27141926131)" rx="2" ry="2" />
<text  x="433.31" y="113.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (12,102 us, 0.11%)</title><rect x="132.2" y="119" width="1.3" height="15.0" fill="rgb(147.312840080125,159.739770219515,147.312840080125)" rx="2" ry="2" />
<text  x="135.24" y="129.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_pyop2_kernel_uniform_extrusion (1,120,671 us, 9.94%)</title><rect x="14.2" y="119" width="117.3" height="15.0" fill="rgb(151.736547700133,151.736547700133,127.6463465468)" rx="2" ry="2" />
<text  x="17.21" y="129.5" >Parloop_Cells..</text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (7,455 us, 0.07%)</title><rect x="131.5" y="151" width="0.7" height="15.0" fill="rgb(151.768200773036,142.031014480904,151.768200773036)" rx="2" ry="2" />
<text  x="134.46" y="161.5" ></text>
</g>
<g >
<title>perfsolve (7,239,131 us, 64.19%)</title><rect x="432.6" y="71" width="757.4" height="15.0" fill="rgb(118.935404750395,147.872141972325,147.872141972325)" rx="2" ry="2" />
<text  x="435.60" y="81.5" >perfsolve</text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (2,047 us, 0.02%)</title><rect x="435.7" y="247" width="0.2" height="15.0" fill="rgb(149.689560436837,159.352862254468,149.689560436837)" rx="2" ry="2" />
<text  x="438.73" y="257.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (7,455 us, 0.07%)</title><rect x="131.5" y="103" width="0.7" height="15.0" fill="rgb(107.449434109001,144.894297731963,144.894297731963)" rx="2" ry="2" />
<text  x="134.46" y="113.5" ></text>
</g>
<g >
<title>firedrake.function.Function.__init__ (1,396 us, 0.01%)</title><rect x="435.9" y="151" width="0.2" height="15.0" fill="rgb(127.593489349068,127.593489349068,152.114868906271)" rx="2" ry="2" />
<text  x="438.94" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (2,047 us, 0.02%)</title><rect x="435.7" y="215" width="0.2" height="15.0" fill="rgb(140.527719504917,153.470149501275,153.470149501275)" rx="2" ry="2" />
<text  x="438.73" y="225.5" ></text>
</g>
<g >
<title>all (11,278,235 us, 100%)</title><rect x="10.0" y="39" width="1180.0" height="15.0" fill="rgb(150.002133518108,150.002133518108,119.241108587755)" rx="2" ry="2" />
<text  x="13.00" y="49.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_form1_cell_integral_otherwise (2,438,647 us, 21.62%)</title><rect x="826.2" y="151" width="255.1" height="15.0" fill="rgb(124.741102983944,149.377322995837,149.377322995837)" rx="2" ry="2" />
<text  x="829.16" y="161.5" >Parloop_Cells_wrap_form1_cell_i..</text>
</g>
<g >
<title>CreateFunctionSpace (12,102 us, 0.11%)</title><rect x="132.2" y="71" width="1.3" height="15.0" fill="rgb(155.405105878654,138.105811736347,138.105811736347)" rx="2" ry="2" />
<text  x="135.24" y="81.5" ></text>
</g>
<g >
<title>CreateMesh (2,086 us, 0.02%)</title><rect x="133.5" y="71" width="0.2" height="15.0" fill="rgb(152.590076660403,144.137071442283,152.590076660403)" rx="2" ry="2" />
<text  x="136.50" y="81.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (7,262 us, 0.06%)</title><rect x="428.1" y="119" width="0.7" height="15.0" fill="rgb(149.950108339862,149.950108339862,118.988986570101)" rx="2" ry="2" />
<text  x="431.05" y="129.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (1,202 us, 0.01%)</title><rect x="1189.9" y="183" width="0.1" height="15.0" fill="rgb(109.137492447732,109.137492447732,148.542740473755)" rx="2" ry="2" />
<text  x="1192.87" y="193.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (719,391 us, 6.38%)</title><rect x="439.8" y="183" width="75.3" height="15.0" fill="rgb(108.442944987433,108.442944987433,148.408311933052)" rx="2" ry="2" />
<text  x="442.80" y="193.5" >Parloop..</text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (7,455 us, 0.07%)</title><rect x="131.5" y="135" width="0.7" height="15.0" fill="rgb(156.685822913261,147.924642334999,147.924642334999)" rx="2" ry="2" />
<text  x="134.46" y="145.5" ></text>
</g>
<g >
<title>ParLoopExecute (719,391 us, 6.38%)</title><rect x="439.8" y="167" width="75.3" height="15.0" fill="rgb(112.585346972762,112.585346972762,149.210067156018)" rx="2" ry="2" />
<text  x="442.80" y="177.5" >ParLoop..</text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (1,702 us, 0.02%)</title><rect x="434.2" y="199" width="0.2" height="15.0" fill="rgb(155.186399326269,136.429061501399,136.429061501399)" rx="2" ry="2" />
<text  x="437.23" y="209.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.__init__ (9,607 us, 0.09%)</title><rect x="431.6" y="71" width="1.0" height="15.0" fill="rgb(145.755530738353,159.993285693757,145.755530738353)" rx="2" ry="2" />
<text  x="434.59" y="81.5" ></text>
</g>
<g >
<title>firedrake.functionspace.make_scalar_element (1,201 us, 0.01%)</title><rect x="435.6" y="215" width="0.1" height="15.0" fill="rgb(132.641915176449,162.128060320113,132.641915176449)" rx="2" ry="2" />
<text  x="438.60" y="225.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (719,391 us, 6.38%)</title><rect x="439.8" y="199" width="75.3" height="15.0" fill="rgb(155.555232825368,139.256784994486,139.256784994486)" rx="2" ry="2" />
<text  x="442.80" y="209.5" >pyop2.g..</text>
</g>
<g >
<title>CreateFunctionSpace (7,262 us, 0.06%)</title><rect x="428.1" y="87" width="0.7" height="15.0" fill="rgb(117.787949564752,147.574653590862,147.574653590862)" rx="2" ry="2" />
<text  x="431.05" y="97.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (1,702 us, 0.02%)</title><rect x="434.2" y="183" width="0.2" height="15.0" fill="rgb(113.912527877352,113.912527877352,149.466940879488)" rx="2" ry="2" />
<text  x="437.23" y="193.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (1,120,671 us, 9.94%)</title><rect x="14.2" y="135" width="117.3" height="15.0" fill="rgb(153.111367962324,120.520487711147,120.520487711147)" rx="2" ry="2" />
<text  x="17.21" y="145.5" >pyop2.global_..</text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (7,262 us, 0.06%)</title><rect x="428.1" y="103" width="0.7" height="15.0" fill="rgb(152.17981474517,113.378579712968,113.378579712968)" rx="2" ry="2" />
<text  x="431.05" y="113.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (7,085 us, 0.06%)</title><rect x="435.2" y="183" width="0.7" height="15.0" fill="rgb(156.042663901637,142.993756579218,142.993756579218)" rx="2" ry="2" />
<text  x="438.20" y="193.5" ></text>
</g>
<g >
<title>ParLoopExecute (1,120,671 us, 9.94%)</title><rect x="14.2" y="103" width="117.3" height="15.0" fill="rgb(138.789409188293,108.772861045001,138.789409188293)" rx="2" ry="2" />
<text  x="17.21" y="113.5" >ParLoopExecute</text>
</g>
<g >
<title>SNESFunctionEval (6,450,858 us, 57.20%)</title><rect x="515.1" y="119" width="674.9" height="15.0" fill="rgb(153.943526619454,153.943526619454,138.341705925046)" rx="2" ry="2" />
<text  x="518.07" y="129.5" >SNESFunctionEval</text>
</g>
<g >
<title>firedrake.functionspace.VectorFunctionSpace (7,262 us, 0.06%)</title><rect x="428.1" y="71" width="0.7" height="15.0" fill="rgb(127.347285354402,127.347285354402,152.067216520207)" rx="2" ry="2" />
<text  x="431.05" y="81.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.LinearVariationalProblem.__init__ (24,252 us, 0.22%)</title><rect x="429.1" y="71" width="2.5" height="15.0" fill="rgb(131.615315081676,151.159526132286,151.159526132286)" rx="2" ry="2" />
<text  x="432.05" y="81.5" ></text>
</g>
<g >
<title>firedrake.extrusion_utils.make_extruded_coords (1,157,916 us, 10.27%)</title><rect x="10.3" y="87" width="121.2" height="15.0" fill="rgb(152.3546699825,114.719136532498,114.719136532498)" rx="2" ry="2" />
<text  x="13.31" y="97.5" >firedrake.ext..</text>
</g>
<g >
<title>SNESSolve (7,239,131 us, 64.19%)</title><rect x="432.6" y="103" width="757.4" height="15.0" fill="rgb(145.055327007537,160.10727234761,145.055327007537)" rx="2" ry="2" />
<text  x="435.60" y="113.5" >SNESSolve</text>
</g>
<g >
<title>firedrake.interpolation.make_interpolator (29,453 us, 0.26%)</title><rect x="436.1" y="151" width="3.1" height="15.0" fill="rgb(155.974037685263,142.467622253681,142.467622253681)" rx="2" ry="2" />
<text  x="439.09" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (7,262 us, 0.06%)</title><rect x="428.1" y="135" width="0.7" height="15.0" fill="rgb(144.640056597588,154.536310969745,154.536310969745)" rx="2" ry="2" />
<text  x="431.05" y="145.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (4,949 us, 0.04%)</title><rect x="434.4" y="183" width="0.5" height="15.0" fill="rgb(150.297913525677,150.297913525677,120.674504009052)" rx="2" ry="2" />
<text  x="437.41" y="193.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (6,651 us, 0.06%)</title><rect x="434.2" y="151" width="0.7" height="15.0" fill="rgb(153.503287903409,123.525207259469,123.525207259469)" rx="2" ry="2" />
<text  x="437.23" y="161.5" ></text>
</g>
</g>
</svg>
