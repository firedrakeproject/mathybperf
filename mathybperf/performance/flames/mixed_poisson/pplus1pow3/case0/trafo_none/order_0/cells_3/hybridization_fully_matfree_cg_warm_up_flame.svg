<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="299" onload="init(evt)" viewBox="0 0 1200 299" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:13px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:18px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 13 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (1 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="299.0" fill="url(#background)"  />
<text id="title" x="600.00" y="26" >Firedrake example</text>
<text id="details" x="10.00" y="281" > </text>
<text id="unzoom" x="10.00" y="26" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="26" >Search</text>
<text id="ignorecase" x="1174.00" y="26" >ic</text>
<text id="matched" x="1090.00" y="281" > </text>
<g id="frames">
<g >
<title>Parloop_Cells_wrap_form1_cell_integral_otherwise (2,219,600 us, 18.01%)</title><rect x="883.6" y="151" width="212.5" height="15.0" fill="rgb(153.966645124199,127.077612618856,127.077612618856)" rx="2" ry="2" />
<text  x="886.63" y="161.5" >Parloop_Cells_wrap_form1_..</text>
</g>
<g >
<title>PCApply (890,423 us, 7.22%)</title><rect x="459.9" y="135" width="85.2" height="15.0" fill="rgb(128.987650551376,162.722940607916,128.987650551376)" rx="2" ry="2" />
<text  x="462.87" y="145.5" >PCApply</text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (687,352 us, 5.58%)</title><rect x="554.5" y="183" width="65.8" height="15.0" fill="rgb(149.359149546335,149.359149546335,116.125109339932)" rx="2" ry="2" />
<text  x="557.53" y="193.5" >Parloo..</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (2,727,134 us, 22.13%)</title><rect x="622.6" y="167" width="261.0" height="15.0" fill="rgb(128.028324059927,162.879110036756,128.028324059927)" rx="2" ry="2" />
<text  x="625.55" y="177.5" >pyop2.global_kernel.GlobalKernel..</text>
</g>
<g >
<title>firedrake.functionspace.VectorFunctionSpace (6,696 us, 0.05%)</title><rect x="168.9" y="87" width="0.6" height="15.0" fill="rgb(137.092573069246,104.424718489944,137.092573069246)" rx="2" ry="2" />
<text  x="171.89" y="97.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (4,784 us, 0.04%)</title><rect x="548.4" y="199" width="0.5" height="15.0" fill="rgb(136.845485946041,161.443758101807,136.845485946041)" rx="2" ry="2" />
<text  x="551.41" y="209.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (6,292 us, 0.05%)</title><rect x="455.9" y="119" width="0.6" height="15.0" fill="rgb(134.55692881946,134.55692881946,153.462631384412)" rx="2" ry="2" />
<text  x="458.93" y="129.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (6,426 us, 0.05%)</title><rect x="547.4" y="151" width="0.6" height="15.0" fill="rgb(122.440467174585,122.440467174585,151.117509775726)" rx="2" ry="2" />
<text  x="550.43" y="161.5" ></text>
</g>
<g >
<title>all (12,325,839 us, 100%)</title><rect x="10.0" y="39" width="1180.0" height="15.0" fill="rgb(127.801699703822,127.801699703822,152.155167684611)" rx="2" ry="2" />
<text  x="13.00" y="49.5" ></text>
</g>
<g >
<title>firedrake.assemble.allocate_matrix (7,289 us, 0.06%)</title><rect x="459.2" y="87" width="0.7" height="15.0" fill="rgb(153.408015232215,122.794783446978,122.794783446978)" rx="2" ry="2" />
<text  x="462.18" y="97.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (7,568 us, 0.06%)</title><rect x="548.3" y="183" width="0.7" height="15.0" fill="rgb(153.809095476304,153.809095476304,137.690231923627)" rx="2" ry="2" />
<text  x="551.27" y="193.5" ></text>
</g>
<g >
<title>ParLoopExecute (4,966,219 us, 40.29%)</title><rect x="620.7" y="135" width="475.4" height="15.0" fill="rgb(111.642994848574,111.642994848574,149.027676422305)" rx="2" ry="2" />
<text  x="623.69" y="145.5" >ParLoopExecute</text>
</g>
<g >
<title>firedrake.utility_meshes.RectangleMesh (2,542 us, 0.02%)</title><rect x="456.5" y="87" width="0.3" height="15.0" fill="rgb(156.369694181449,145.500988724443,145.500988724443)" rx="2" ry="2" />
<text  x="459.53" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (6,292 us, 0.05%)</title><rect x="455.9" y="135" width="0.6" height="15.0" fill="rgb(125.971106593117,163.214005903446,125.971106593117)" rx="2" ry="2" />
<text  x="458.93" y="145.5" ></text>
</g>
<g >
<title>firedrake.functionspace.VectorFunctionSpace (6,292 us, 0.05%)</title><rect x="455.9" y="71" width="0.6" height="15.0" fill="rgb(156.582122723181,147.129607544387,147.129607544387)" rx="2" ry="2" />
<text  x="458.93" y="81.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_pyop2_kernel_uniform_extrusion (1,621,516 us, 13.16%)</title><rect x="13.7" y="119" width="155.2" height="15.0" fill="rgb(120.27596760296,148.219695304471,148.219695304471)" rx="2" ry="2" />
<text  x="16.66" y="129.5" >Parloop_Cells_wrap..</text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (6,292 us, 0.05%)</title><rect x="455.9" y="103" width="0.6" height="15.0" fill="rgb(154.295266609079,129.597044002942,129.597044002942)" rx="2" ry="2" />
<text  x="458.93" y="113.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (2,034 us, 0.02%)</title><rect x="548.7" y="231" width="0.2" height="15.0" fill="rgb(156.198858431604,144.191247975633,144.191247975633)" rx="2" ry="2" />
<text  x="551.67" y="241.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalProblem.__init__ (12,228 us, 0.10%)</title><rect x="457.9" y="87" width="1.1" height="15.0" fill="rgb(134.498563413883,161.825815258205,134.498563413883)" rx="2" ry="2" />
<text  x="460.85" y="97.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (6,292 us, 0.05%)</title><rect x="455.9" y="87" width="0.6" height="15.0" fill="rgb(118.494322429148,118.494322429148,150.353739824996)" rx="2" ry="2" />
<text  x="458.93" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (11,810 us, 0.10%)</title><rect x="169.5" y="87" width="1.2" height="15.0" fill="rgb(133.052317302558,133.052317302558,153.171416252108)" rx="2" ry="2" />
<text  x="172.53" y="97.5" ></text>
</g>
<g >
<title>Log_Event_form1_cell_integral_otherwise (1,573 us, 0.01%)</title><rect x="884.6" y="167" width="0.1" height="15.0" fill="rgb(139.428536522092,161.023261496404,139.428536522092)" rx="2" ry="2" />
<text  x="887.56" y="177.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (11,810 us, 0.10%)</title><rect x="169.5" y="103" width="1.2" height="15.0" fill="rgb(153.773742252823,125.59869060498,125.59869060498)" rx="2" ry="2" />
<text  x="172.53" y="113.5" ></text>
</g>
<g >
<title>KSPSolve (890,423 us, 7.22%)</title><rect x="459.9" y="119" width="85.2" height="15.0" fill="rgb(152.72577783333,117.564296722196,117.564296722196)" rx="2" ry="2" />
<text  x="462.87" y="129.5" >KSPSolve</text>
</g>
<g >
<title>firedrake.matrix_free.operators.ImplicitMatrixContext.__init__ (7,289 us, 0.06%)</title><rect x="459.2" y="103" width="0.7" height="15.0" fill="rgb(138.906445236571,109.072765918714,138.906445236571)" rx="2" ry="2" />
<text  x="462.18" y="113.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (6,696 us, 0.05%)</title><rect x="168.9" y="151" width="0.6" height="15.0" fill="rgb(152.547821296249,116.199963271243,116.199963271243)" rx="2" ry="2" />
<text  x="171.89" y="161.5" ></text>
</g>
<g >
<title>firedrake.utility_meshes.SquareMesh (2,542 us, 0.02%)</title><rect x="456.5" y="71" width="0.3" height="15.0" fill="rgb(137.163419475505,161.392001480732,137.163419475505)" rx="2" ry="2" />
<text  x="459.53" y="81.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.LinearVariationalProblem.__init__ (23,451 us, 0.19%)</title><rect x="456.8" y="71" width="2.2" height="15.0" fill="rgb(155.357087777941,137.737672964216,137.737672964216)" rx="2" ry="2" />
<text  x="459.78" y="81.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (1,503 us, 0.01%)</title><rect x="1189.9" y="183" width="0.1" height="15.0" fill="rgb(134.667372840854,98.2101429046882,134.667372840854)" rx="2" ry="2" />
<text  x="1192.86" y="193.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (6,696 us, 0.05%)</title><rect x="168.9" y="119" width="0.6" height="15.0" fill="rgb(155.303321249639,155.303321249639,144.931479902099)" rx="2" ry="2" />
<text  x="171.89" y="129.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (3,341 us, 0.03%)</title><rect x="459.6" y="119" width="0.3" height="15.0" fill="rgb(155.099678371259,135.764200846317,135.764200846317)" rx="2" ry="2" />
<text  x="462.55" y="129.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (2,208,342 us, 17.92%)</title><rect x="884.7" y="167" width="211.4" height="15.0" fill="rgb(148.045738591499,148.045738591499,109.760117789571)" rx="2" ry="2" />
<text  x="887.71" y="177.5" >pyop2.global_kernel.Globa..</text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (6,696 us, 0.05%)</title><rect x="168.9" y="135" width="0.6" height="15.0" fill="rgb(151.05471283137,151.05471283137,124.342069875099)" rx="2" ry="2" />
<text  x="171.89" y="145.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.__init__ (8,895 us, 0.07%)</title><rect x="459.0" y="71" width="0.9" height="15.0" fill="rgb(136.95742041336,104.078389809234,136.95742041336)" rx="2" ry="2" />
<text  x="462.02" y="81.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (1,621,516 us, 13.16%)</title><rect x="13.7" y="135" width="155.2" height="15.0" fill="rgb(152.248596230217,113.905904431665,113.905904431665)" rx="2" ry="2" />
<text  x="16.66" y="145.5" >pyop2.global_kerne..</text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (1,671 us, 0.01%)</title><rect x="547.4" y="215" width="0.2" height="15.0" fill="rgb(152.243887654772,152.243887654772,130.10499401928)" rx="2" ry="2" />
<text  x="550.43" y="225.5" ></text>
</g>
<g >
<title>HybridRHS (3,672 us, 0.03%)</title><rect x="544.8" y="167" width="0.3" height="15.0" fill="rgb(106.505511139651,144.649576962132,144.649576962132)" rx="2" ry="2" />
<text  x="547.77" y="177.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (11,810 us, 0.10%)</title><rect x="169.5" y="119" width="1.2" height="15.0" fill="rgb(148.73906412913,148.73906412913,113.120080010399)" rx="2" ry="2" />
<text  x="172.53" y="129.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (1,671 us, 0.01%)</title><rect x="547.4" y="231" width="0.2" height="15.0" fill="rgb(116.928231503418,116.928231503418,150.050625452274)" rx="2" ry="2" />
<text  x="550.43" y="241.5" ></text>
</g>
<g >
<title>SCForwardElim (890,423 us, 7.22%)</title><rect x="459.9" y="151" width="85.2" height="15.0" fill="rgb(116.790689952553,147.316104802514,147.316104802514)" rx="2" ry="2" />
<text  x="462.87" y="161.5" >SCForward..</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (687,352 us, 5.58%)</title><rect x="554.5" y="199" width="65.8" height="15.0" fill="rgb(150.241848657504,150.241848657504,120.402805032518)" rx="2" ry="2" />
<text  x="557.53" y="209.5" >pyop2...</text>
</g>
<g >
<title>firedrake.functionspaceimpl.WithGeometry.split (1,379 us, 0.01%)</title><rect x="548.9" y="199" width="0.1" height="15.0" fill="rgb(151.202451758801,151.202451758801,125.058035446497)" rx="2" ry="2" />
<text  x="551.87" y="209.5" ></text>
</g>
<g >
<title>PCSetUp (785,636 us, 6.37%)</title><rect x="545.1" y="119" width="75.2" height="15.0" fill="rgb(144.797415990267,154.577107849328,154.577107849328)" rx="2" ry="2" />
<text  x="548.12" y="129.5" >PCSetUp</text>
</g>
<g >
<title>Log_Event_form0_cell_integral_otherwise (8,333 us, 0.07%)</title><rect x="621.8" y="167" width="0.8" height="15.0" fill="rgb(148.497114162422,148.497114162422,111.94755324866)" rx="2" ry="2" />
<text  x="624.75" y="177.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (5,966 us, 0.05%)</title><rect x="1189.4" y="151" width="0.6" height="15.0" fill="rgb(152.242529986737,152.242529986737,130.09841455111)" rx="2" ry="2" />
<text  x="1192.43" y="161.5" ></text>
</g>
<g >
<title>ParLoopExecute (881,230 us, 7.15%)</title><rect x="460.4" y="199" width="84.4" height="15.0" fill="rgb(155.739744651011,140.671375657753,140.671375657753)" rx="2" ry="2" />
<text  x="463.40" y="209.5" >ParLoopE..</text>
</g>
<g >
<title>firedrake (12,325,839 us, 100.00%)</title><rect x="10.0" y="55" width="1180.0" height="15.0" fill="rgb(154.551579806457,154.551579806457,141.288425215909)" rx="2" ry="2" />
<text  x="13.00" y="65.5" >firedrake</text>
</g>
<g >
<title>CreateMesh (2,179 us, 0.02%)</title><rect x="170.7" y="71" width="0.2" height="15.0" fill="rgb(154.752850524592,154.752850524592,142.263814080714)" rx="2" ry="2" />
<text  x="173.66" y="81.5" ></text>
</g>
<g >
<title>firedrake.functionspace.MixedFunctionSpace (1,671 us, 0.01%)</title><rect x="547.4" y="167" width="0.2" height="15.0" fill="rgb(150.150219046498,150.150219046498,119.958753840723)" rx="2" ry="2" />
<text  x="550.43" y="177.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (1,671 us, 0.01%)</title><rect x="547.4" y="183" width="0.2" height="15.0" fill="rgb(145.451374283494,145.451374283494,155.571233732289)" rx="2" ry="2" />
<text  x="550.43" y="193.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (9,996 us, 0.08%)</title><rect x="548.0" y="151" width="1.0" height="15.0" fill="rgb(152.785746674753,152.785746674753,132.730926193032)" rx="2" ry="2" />
<text  x="551.04" y="161.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.solve (7,626,633 us, 61.88%)</title><rect x="459.9" y="87" width="730.1" height="15.0" fill="rgb(133.850918082162,96.1179775855396,133.850918082162)" rx="2" ry="2" />
<text  x="462.87" y="97.5" >firedrake.variational_solver.NonlinearVariationalSolver.solve</text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (2,034 us, 0.02%)</title><rect x="548.7" y="215" width="0.2" height="15.0" fill="rgb(140.002251302479,140.002251302479,154.516564768222)" rx="2" ry="2" />
<text  x="551.67" y="225.5" ></text>
</g>
<g >
<title>firedrake.mesh.MeshTopology._facets (2,625 us, 0.02%)</title><rect x="456.3" y="151" width="0.2" height="15.0" fill="rgb(141.508919203379,141.508919203379,154.808177910332)" rx="2" ry="2" />
<text  x="459.28" y="161.5" ></text>
</g>
<g >
<title>SNESFunctionEval (5,950,574 us, 48.28%)</title><rect x="620.3" y="119" width="569.7" height="15.0" fill="rgb(154.975119893248,134.809252514904,134.809252514904)" rx="2" ry="2" />
<text  x="623.33" y="129.5" >SNESFunctionEval</text>
</g>
<g >
<title>firedrake.__init__ (2,977,615 us, 24.16%)</title><rect x="170.9" y="71" width="285.0" height="15.0" fill="rgb(127.375507751642,150.0603168245,150.0603168245)" rx="2" ry="2" />
<text  x="173.87" y="81.5" >firedrake.__init__</text>
</g>
<g >
<title>firedrake.extrusion_utils.make_extruded_coords (1,657,081 us, 13.44%)</title><rect x="10.3" y="87" width="158.6" height="15.0" fill="rgb(128.897710568361,128.897710568361,152.367298819683)" rx="2" ry="2" />
<text  x="13.25" y="97.5" >firedrake.extrusio..</text>
</g>
<g >
<title>firedrake.parloops.par_loop (692,709 us, 5.62%)</title><rect x="554.0" y="151" width="66.3" height="15.0" fill="rgb(143.637873036386,154.276485602026,154.276485602026)" rx="2" ry="2" />
<text  x="557.01" y="161.5" >firedr..</text>
</g>
<g >
<title>firedrake.interpolation.make_interpolator (52,373 us, 0.42%)</title><rect x="549.0" y="151" width="5.0" height="15.0" fill="rgb(146.259070377626,159.911314124573,146.259070377626)" rx="2" ry="2" />
<text  x="552.00" y="161.5" ></text>
</g>
<g >
<title>HybridInit (785,636 us, 6.37%)</title><rect x="545.1" y="135" width="75.2" height="15.0" fill="rgb(131.78857116094,151.204444375059,151.204444375059)" rx="2" ry="2" />
<text  x="548.12" y="145.5" >HybridI..</text>
</g>
<g >
<title>firedrake.functionspace.make_scalar_element (1,313 us, 0.01%)</title><rect x="548.5" y="215" width="0.2" height="15.0" fill="rgb(146.435628487297,128.366297998698,146.435628487297)" rx="2" ry="2" />
<text  x="551.55" y="225.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (1,671 us, 0.01%)</title><rect x="547.4" y="199" width="0.2" height="15.0" fill="rgb(152.002043492585,112.015666776481,112.015666776481)" rx="2" ry="2" />
<text  x="550.43" y="209.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (10,691 us, 0.09%)</title><rect x="458.0" y="103" width="1.0" height="15.0" fill="rgb(151.397093072696,151.397093072696,126.001297198452)" rx="2" ry="2" />
<text  x="461.00" y="113.5" ></text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (980,626 us, 7.96%)</title><rect x="1096.1" y="135" width="93.9" height="15.0" fill="rgb(148.898944462333,159.48156718055,148.898944462333)" rx="2" ry="2" />
<text  x="1099.12" y="145.5" >firedrake...</text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (881,230 us, 7.15%)</title><rect x="460.4" y="215" width="84.4" height="15.0" fill="rgb(154.674937366508,132.507853143231,132.507853143231)" rx="2" ry="2" />
<text  x="463.40" y="225.5" >Parloop_..</text>
</g>
<g >
<title>SNESSolve (7,626,633 us, 61.88%)</title><rect x="459.9" y="103" width="730.1" height="15.0" fill="rgb(118.52625058307,147.766064965981,147.766064965981)" rx="2" ry="2" />
<text  x="462.87" y="113.5" >SNESSolve</text>
</g>
<g >
<title>CreateFunctionSpace (6,696 us, 0.05%)</title><rect x="168.9" y="103" width="0.6" height="15.0" fill="rgb(108.921104203849,145.275841830628,145.275841830628)" rx="2" ry="2" />
<text  x="171.89" y="113.5" ></text>
</g>
<g >
<title>CreateExtMesh (1,666,422 us, 13.52%)</title><rect x="10.0" y="71" width="159.5" height="15.0" fill="rgb(152.440981897792,152.440981897792,131.060143043146)" rx="2" ry="2" />
<text  x="13.00" y="81.5" >CreateExtMesh</text>
</g>
<g >
<title>ParLoopExecute (1,621,516 us, 13.16%)</title><rect x="13.7" y="103" width="155.2" height="15.0" fill="rgb(152.651269515902,116.993066288582,116.993066288582)" rx="2" ry="2" />
<text  x="16.66" y="113.5" >ParLoopExecute</text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (2,034 us, 0.02%)</title><rect x="548.7" y="247" width="0.2" height="15.0" fill="rgb(118.739247285407,147.821286333254,147.821286333254)" rx="2" ry="2" />
<text  x="551.67" y="257.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (881,230 us, 7.15%)</title><rect x="460.4" y="231" width="84.4" height="15.0" fill="rgb(139.438369870701,139.438369870701,154.407426426587)" rx="2" ry="2" />
<text  x="463.40" y="241.5" >pyop2.gl..</text>
</g>
<g >
<title>CreateFunctionSpace (11,810 us, 0.10%)</title><rect x="169.5" y="71" width="1.2" height="15.0" fill="rgb(105.094833205878,144.283845645968,144.283845645968)" rx="2" ry="2" />
<text  x="172.53" y="81.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.action (3,948 us, 0.03%)</title><rect x="459.2" y="119" width="0.4" height="15.0" fill="rgb(134.234783605795,151.838647601502,151.838647601502)" rx="2" ry="2" />
<text  x="462.18" y="129.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (4,755 us, 0.04%)</title><rect x="547.6" y="167" width="0.4" height="15.0" fill="rgb(147.763414530227,147.763414530227,108.391931954177)" rx="2" ry="2" />
<text  x="550.59" y="177.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (3,467 us, 0.03%)</title><rect x="1189.7" y="167" width="0.3" height="15.0" fill="rgb(115.005196175871,146.853199008559,146.853199008559)" rx="2" ry="2" />
<text  x="1192.67" y="177.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (4,755 us, 0.04%)</title><rect x="547.6" y="199" width="0.4" height="15.0" fill="rgb(126.344888004692,163.153157766678,126.344888004692)" rx="2" ry="2" />
<text  x="550.59" y="209.5" ></text>
</g>
<g >
<title>perfsolve (7,626,633 us, 61.88%)</title><rect x="459.9" y="71" width="730.1" height="15.0" fill="rgb(154.710892448385,132.78350877095,132.78350877095)" rx="2" ry="2" />
<text  x="462.87" y="81.5" >perfsolve</text>
</g>
<g >
<title>HybridBreak (886,751 us, 7.19%)</title><rect x="459.9" y="167" width="84.9" height="15.0" fill="rgb(153.555345348675,123.92431433984,123.92431433984)" rx="2" ry="2" />
<text  x="462.87" y="177.5" >HybridBreak</text>
</g>
<g >
<title>ParLoopExecute (687,352 us, 5.58%)</title><rect x="554.5" y="167" width="65.8" height="15.0" fill="rgb(153.221913948984,153.221913948984,134.844659906615)" rx="2" ry="2" />
<text  x="557.53" y="177.5" >ParLoo..</text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (4,755 us, 0.04%)</title><rect x="547.6" y="183" width="0.4" height="15.0" fill="rgb(149.429004933163,149.429004933163,116.463639291484)" rx="2" ry="2" />
<text  x="550.59" y="193.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (9,996 us, 0.08%)</title><rect x="548.0" y="167" width="1.0" height="15.0" fill="rgb(145.325628179377,125.521922209653,145.325628179377)" rx="2" ry="2" />
<text  x="551.04" y="177.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_form0_cell_integral_otherwise (2,745,107 us, 22.27%)</title><rect x="620.8" y="151" width="262.8" height="15.0" fill="rgb(153.731132231579,125.272013775436,125.272013775436)" rx="2" ry="2" />
<text  x="623.83" y="161.5" >Parloop_Cells_wrap_form0_cell_in..</text>
</g>
<g >
<title>firedrake.parloops.par_loop (886,751 us, 7.19%)</title><rect x="459.9" y="183" width="84.9" height="15.0" fill="rgb(126.81061227498,149.913862441661,149.913862441661)" rx="2" ry="2" />
<text  x="462.87" y="193.5" >firedrake..</text>
</g>
<g >
<title>firedrake.ufl_expr.action (11,223 us, 0.09%)</title><rect x="456.8" y="87" width="1.1" height="15.0" fill="rgb(143.510217509479,120.869932368041,143.510217509479)" rx="2" ry="2" />
<text  x="459.78" y="97.5" ></text>
</g>
</g>
</svg>
