<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="299" onload="init(evt)" viewBox="0 0 1200 299" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:13px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:18px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 13 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (1 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="299.0" fill="url(#background)"  />
<text id="title" x="600.00" y="26" >Firedrake example</text>
<text id="details" x="10.00" y="281" > </text>
<text id="unzoom" x="10.00" y="26" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="26" >Search</text>
<text id="ignorecase" x="1174.00" y="26" >ic</text>
<text id="matched" x="1090.00" y="281" > </text>
<g id="frames">
<g >
<title>PetscBarrier (1,321 us, 0.01%)</title><rect x="134.3" y="71" width="0.2" height="15.0" fill="rgb(135.483781380003,161.665430938139,135.483781380003)" rx="2" ry="2" />
<text  x="137.32" y="81.5" ></text>
</g>
<g >
<title>firedrake.mesh.MeshTopology._facets (3,182 us, 0.03%)</title><rect x="419.3" y="151" width="0.3" height="15.0" fill="rgb(152.060996567618,112.467640351736,112.467640351736)" rx="2" ry="2" />
<text  x="422.31" y="161.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_pyop2_kernel_uniform_extrusion (1,117,124 us, 9.97%)</title><rect x="14.3" y="119" width="117.7" height="15.0" fill="rgb(135.186441295871,161.713835137882,135.186441295871)" rx="2" ry="2" />
<text  x="17.33" y="129.5" >Parloop_Cells..</text>
</g>
<g >
<title>CreateFunctionSpace (7,160 us, 0.06%)</title><rect x="132.0" y="103" width="0.7" height="15.0" fill="rgb(129.112104337568,150.510545568999,150.510545568999)" rx="2" ry="2" />
<text  x="134.98" y="113.5" ></text>
</g>
<g >
<title>firedrake.__init__ (2,699,011 us, 24.09%)</title><rect x="134.5" y="71" width="284.2" height="15.0" fill="rgb(135.466346780149,100.257513624133,135.466346780149)" rx="2" ry="2" />
<text  x="137.46" y="81.5" >firedrake.__init__</text>
</g>
<g >
<title>firedrake.ufl_expr.action (4,363 us, 0.04%)</title><rect x="422.5" y="119" width="0.5" height="15.0" fill="rgb(154.198964890993,128.858730830948,128.858730830948)" rx="2" ry="2" />
<text  x="425.49" y="129.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.LinearVariationalProblem.__init__ (22,299 us, 0.20%)</title><rect x="420.0" y="71" width="2.3" height="15.0" fill="rgb(152.720479115272,117.523673217086,117.523673217086)" rx="2" ry="2" />
<text  x="423.00" y="81.5" ></text>
</g>
<g >
<title>firedrake.extrusion_utils.make_extruded_coords (1,155,706 us, 10.31%)</title><rect x="10.3" y="87" width="121.7" height="15.0" fill="rgb(152.990903322046,119.596925469018,119.596925469018)" rx="2" ry="2" />
<text  x="13.27" y="97.5" >firedrake.ext..</text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (5,832 us, 0.05%)</title><rect x="1189.4" y="151" width="0.6" height="15.0" fill="rgb(154.67070165727,132.475379372407,132.475379372407)" rx="2" ry="2" />
<text  x="1192.39" y="161.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (12,675 us, 0.11%)</title><rect x="425.9" y="167" width="1.3" height="15.0" fill="rgb(109.911960170718,109.911960170718,148.692637452397)" rx="2" ry="2" />
<text  x="428.87" y="177.5" ></text>
</g>
<g >
<title>Log_Event_form0_cell_integral_otherwise (9,334 us, 0.08%)</title><rect x="519.4" y="167" width="1.0" height="15.0" fill="rgb(153.656410655941,153.656410655941,136.950297794176)" rx="2" ry="2" />
<text  x="522.39" y="177.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (821,482 us, 7.33%)</title><rect x="431.3" y="199" width="86.6" height="15.0" fill="rgb(140.082822889469,112.087233654265,140.082822889469)" rx="2" ry="2" />
<text  x="434.34" y="209.5" >pyop2.glo..</text>
</g>
<g >
<title>PCSetUp (897,742 us, 8.01%)</title><rect x="423.3" y="119" width="94.6" height="15.0" fill="rgb(146.643043096638,159.848806937757,146.643043096638)" rx="2" ry="2" />
<text  x="426.31" y="129.5" >PCSetUp</text>
</g>
<g >
<title>firedrake.utility_meshes.SquareMesh (3,377 us, 0.03%)</title><rect x="419.6" y="71" width="0.4" height="15.0" fill="rgb(134.773604787483,161.781041081107,134.773604787483)" rx="2" ry="2" />
<text  x="422.64" y="81.5" ></text>
</g>
<g >
<title>Mesh: numbering (1,362 us, 0.01%)</title><rect x="134.2" y="87" width="0.1" height="15.0" fill="rgb(154.406589449029,130.450519109225,130.450519109225)" rx="2" ry="2" />
<text  x="137.17" y="97.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (1,526 us, 0.01%)</title><rect x="1189.8" y="183" width="0.2" height="15.0" fill="rgb(147.940322959759,159.63762184376,147.940322959759)" rx="2" ry="2" />
<text  x="1192.84" y="193.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (5,048 us, 0.05%)</title><rect x="425.3" y="183" width="0.6" height="15.0" fill="rgb(134.085477308164,161.893061833555,134.085477308164)" rx="2" ry="2" />
<text  x="428.34" y="193.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.solve (7,279,935 us, 64.97%)</title><rect x="423.3" y="87" width="766.7" height="15.0" fill="rgb(130.94795005876,130.94795005876,152.764119366212)" rx="2" ry="2" />
<text  x="426.31" y="97.5" >firedrake.variational_solver.NonlinearVariationalSolver.solve</text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (3,337 us, 0.03%)</title><rect x="423.0" y="119" width="0.3" height="15.0" fill="rgb(134.034714942116,96.5889570391711,134.034714942116)" rx="2" ry="2" />
<text  x="425.95" y="129.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (6,584 us, 0.06%)</title><rect x="426.5" y="199" width="0.7" height="15.0" fill="rgb(143.792137162358,160.312907903802,143.792137162358)" rx="2" ry="2" />
<text  x="429.52" y="209.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (2,710 us, 0.02%)</title><rect x="426.9" y="247" width="0.3" height="15.0" fill="rgb(117.701440444131,147.55222530033,147.55222530033)" rx="2" ry="2" />
<text  x="429.92" y="257.5" ></text>
</g>
<g >
<title>Log_Event_form1_cell_integral_otherwise (1,587 us, 0.01%)</title><rect x="833.8" y="167" width="0.2" height="15.0" fill="rgb(134.855901347698,161.767643966654,134.855901347698)" rx="2" ry="2" />
<text  x="836.85" y="177.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (12,123 us, 0.11%)</title><rect x="132.7" y="71" width="1.3" height="15.0" fill="rgb(129.560800870627,150.626874299792,150.626874299792)" rx="2" ry="2" />
<text  x="135.73" y="81.5" ></text>
</g>
<g >
<title>CreateMesh (2,900 us, 0.03%)</title><rect x="134.0" y="71" width="0.3" height="15.0" fill="rgb(127.496062298124,150.091571706921,150.091571706921)" rx="2" ry="2" />
<text  x="137.01" y="81.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (12,123 us, 0.11%)</title><rect x="132.7" y="103" width="1.3" height="15.0" fill="rgb(122.249541690226,148.731362660429,148.731362660429)" rx="2" ry="2" />
<text  x="135.73" y="113.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.__init__ (9,083 us, 0.08%)</title><rect x="422.3" y="71" width="1.0" height="15.0" fill="rgb(154.485451033209,131.055124587936,131.055124587936)" rx="2" ry="2" />
<text  x="425.35" y="81.5" ></text>
</g>
<g >
<title>firedrake.function.Function.__init__ (1,191 us, 0.01%)</title><rect x="427.2" y="151" width="0.1" height="15.0" fill="rgb(112.23746228084,112.23746228084,149.142734635001)" rx="2" ry="2" />
<text  x="430.21" y="161.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.derivative (1,222 us, 0.01%)</title><rect x="422.2" y="103" width="0.1" height="15.0" fill="rgb(108.612085031968,145.195725749029,145.195725749029)" rx="2" ry="2" />
<text  x="425.22" y="113.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_form1_cell_integral_otherwise (2,402,059 us, 21.44%)</title><rect x="832.8" y="151" width="253.0" height="15.0" fill="rgb(139.266800487913,161.049590618247,139.266800487913)" rx="2" ry="2" />
<text  x="835.78" y="161.5" >Parloop_Cells_wrap_form1_cell_..</text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (9,429 us, 0.08%)</title><rect x="426.2" y="183" width="1.0" height="15.0" fill="rgb(108.901271351714,145.270699980074,145.270699980074)" rx="2" ry="2" />
<text  x="429.22" y="193.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (9,825 us, 0.09%)</title><rect x="421.2" y="103" width="1.0" height="15.0" fill="rgb(115.825250391074,115.825250391074,149.837145236982)" rx="2" ry="2" />
<text  x="424.19" y="113.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (12,123 us, 0.11%)</title><rect x="132.7" y="119" width="1.3" height="15.0" fill="rgb(154.623088417,154.623088417,141.634966943924)" rx="2" ry="2" />
<text  x="135.73" y="129.5" ></text>
</g>
<g >
<title>firedrake.assemble.allocate_matrix (7,700 us, 0.07%)</title><rect x="422.5" y="87" width="0.8" height="15.0" fill="rgb(156.581975328698,147.128477520017,147.128477520017)" rx="2" ry="2" />
<text  x="425.49" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (7,656 us, 0.07%)</title><rect x="418.8" y="135" width="0.8" height="15.0" fill="rgb(155.207274992933,155.207274992933,144.466024965752)" rx="2" ry="2" />
<text  x="421.84" y="145.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (5,048 us, 0.05%)</title><rect x="425.3" y="167" width="0.6" height="15.0" fill="rgb(114.676742068296,114.676742068296,149.614853303541)" rx="2" ry="2" />
<text  x="428.34" y="177.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (7,160 us, 0.06%)</title><rect x="132.0" y="119" width="0.7" height="15.0" fill="rgb(140.320701928773,140.320701928773,154.578200373311)" rx="2" ry="2" />
<text  x="134.98" y="129.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (1,825 us, 0.02%)</title><rect x="425.2" y="231" width="0.1" height="15.0" fill="rgb(135.007418362502,99.0815095539116,135.007418362502)" rx="2" ry="2" />
<text  x="428.15" y="241.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.action (11,252 us, 0.10%)</title><rect x="420.0" y="87" width="1.2" height="15.0" fill="rgb(151.394518073932,151.394518073932,125.988818358287)" rx="2" ry="2" />
<text  x="423.00" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (7,656 us, 0.07%)</title><rect x="418.8" y="119" width="0.8" height="15.0" fill="rgb(132.155721708138,162.207208094024,132.155721708138)" rx="2" ry="2" />
<text  x="421.84" y="129.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (1,825 us, 0.02%)</title><rect x="425.2" y="215" width="0.1" height="15.0" fill="rgb(151.838511644535,151.838511644535,128.14047950813)" rx="2" ry="2" />
<text  x="428.15" y="225.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (2,710 us, 0.02%)</title><rect x="426.9" y="231" width="0.3" height="15.0" fill="rgb(121.944984108224,148.652403287317,148.652403287317)" rx="2" ry="2" />
<text  x="429.92" y="241.5" ></text>
</g>
<g >
<title>ParLoopExecute (821,482 us, 7.33%)</title><rect x="431.3" y="167" width="86.6" height="15.0" fill="rgb(127.686600466082,127.686600466082,152.13289041279)" rx="2" ry="2" />
<text  x="434.34" y="177.5" >ParLoopEx..</text>
</g>
<g >
<title>ParLoopExecute (1,117,124 us, 9.97%)</title><rect x="14.3" y="103" width="117.7" height="15.0" fill="rgb(150.428351660426,138.597651129843,150.428351660426)" rx="2" ry="2" />
<text  x="17.33" y="113.5" >ParLoopExecute</text>
</g>
<g >
<title>perfsolve (7,279,935 us, 64.97%)</title><rect x="423.3" y="71" width="766.7" height="15.0" fill="rgb(152.34858760891,152.34858760891,130.61238610472)" rx="2" ry="2" />
<text  x="426.31" y="81.5" >perfsolve</text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (3,579 us, 0.03%)</title><rect x="1189.6" y="167" width="0.4" height="15.0" fill="rgb(154.687749284871,132.606077850681,132.606077850681)" rx="2" ry="2" />
<text  x="1192.62" y="177.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (2,966,284 us, 26.47%)</title><rect x="520.4" y="167" width="312.4" height="15.0" fill="rgb(129.161663733646,150.523394301316,150.523394301316)" rx="2" ry="2" />
<text  x="523.38" y="177.5" >pyop2.global_kernel.GlobalKernel.compile</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (2,390,305 us, 21.33%)</title><rect x="834.0" y="167" width="251.8" height="15.0" fill="rgb(150.853365883578,150.853365883578,123.366311589649)" rx="2" ry="2" />
<text  x="837.01" y="177.5" >pyop2.global_kernel.GlobalKern..</text>
</g>
<g >
<title>SNESFunctionEval (6,382,193 us, 56.96%)</title><rect x="517.9" y="119" width="672.1" height="15.0" fill="rgb(149.19961446662,149.19961446662,115.351977799775)" rx="2" ry="2" />
<text  x="520.85" y="129.5" >SNESFunctionEval</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (1,117,124 us, 9.97%)</title><rect x="14.3" y="135" width="117.7" height="15.0" fill="rgb(142.185306906636,142.185306906636,154.939091659349)" rx="2" ry="2" />
<text  x="17.33" y="145.5" >pyop2.global_..</text>
</g>
<g >
<title>CreateFunctionSpace (1,825 us, 0.02%)</title><rect x="425.2" y="183" width="0.1" height="15.0" fill="rgb(143.308133366621,160.391699219387,143.308133366621)" rx="2" ry="2" />
<text  x="428.15" y="193.5" ></text>
</g>
<g >
<title>firedrake (11,204,358 us, 100.00%)</title><rect x="10.0" y="55" width="1180.0" height="15.0" fill="rgb(116.909414795645,147.346885317389,147.346885317389)" rx="2" ry="2" />
<text  x="13.00" y="65.5" >firedrake</text>
</g>
<g >
<title>CreateFunctionSpace (7,656 us, 0.07%)</title><rect x="418.8" y="87" width="0.8" height="15.0" fill="rgb(135.909905090247,152.272938356731,152.272938356731)" rx="2" ry="2" />
<text  x="421.84" y="97.5" ></text>
</g>
<g >
<title>SNESSolve (7,279,935 us, 64.97%)</title><rect x="423.3" y="103" width="766.7" height="15.0" fill="rgb(146.072688825802,154.907734140023,154.907734140023)" rx="2" ry="2" />
<text  x="426.31" y="113.5" >SNESSolve</text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (7,160 us, 0.06%)</title><rect x="132.0" y="135" width="0.7" height="15.0" fill="rgb(140.004061525971,111.885407660301,140.004061525971)" rx="2" ry="2" />
<text  x="134.98" y="145.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (12,675 us, 0.11%)</title><rect x="425.9" y="151" width="1.3" height="15.0" fill="rgb(131.908388903778,151.235508234313,151.235508234313)" rx="2" ry="2" />
<text  x="428.87" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspace.VectorFunctionSpace (7,160 us, 0.06%)</title><rect x="132.0" y="87" width="0.7" height="15.0" fill="rgb(121.685311185701,121.685311185701,150.971350552071)" rx="2" ry="2" />
<text  x="134.98" y="97.5" ></text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (989,867 us, 8.83%)</title><rect x="1085.8" y="135" width="104.2" height="15.0" fill="rgb(153.457940816051,153.457940816051,135.988482416248)" rx="2" ry="2" />
<text  x="1088.75" y="145.5" >firedrake.t..</text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (5,048 us, 0.05%)</title><rect x="425.3" y="199" width="0.6" height="15.0" fill="rgb(139.358729882865,161.034625367906,139.358729882865)" rx="2" ry="2" />
<text  x="428.34" y="209.5" ></text>
</g>
<g >
<title>firedrake.utility_meshes.RectangleMesh (3,377 us, 0.03%)</title><rect x="419.6" y="87" width="0.4" height="15.0" fill="rgb(118.620831557017,147.790585959227,147.790585959227)" rx="2" ry="2" />
<text  x="422.64" y="97.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalProblem.__init__ (11,047 us, 0.10%)</title><rect x="421.2" y="87" width="1.1" height="15.0" fill="rgb(154.527206733005,131.375251619706,131.375251619706)" rx="2" ry="2" />
<text  x="424.19" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspace.make_scalar_element (1,818 us, 0.02%)</title><rect x="426.7" y="215" width="0.2" height="15.0" fill="rgb(146.822022091575,129.356431609662,146.822022091575)" rx="2" ry="2" />
<text  x="429.73" y="225.5" ></text>
</g>
<g >
<title>firedrake.functionspace.VectorFunctionSpace (7,656 us, 0.07%)</title><rect x="418.8" y="71" width="0.8" height="15.0" fill="rgb(138.250116523329,138.250116523329,154.177441907741)" rx="2" ry="2" />
<text  x="421.84" y="81.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_form0_cell_integral_otherwise (2,985,757 us, 26.65%)</title><rect x="518.3" y="151" width="314.5" height="15.0" fill="rgb(152.745536882715,152.745536882715,132.536063354693)" rx="2" ry="2" />
<text  x="521.33" y="161.5" >Parloop_Cells_wrap_form0_cell_integral..</text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (7,160 us, 0.06%)</title><rect x="132.0" y="151" width="0.7" height="15.0" fill="rgb(106.685664828512,144.696283474059,144.696283474059)" rx="2" ry="2" />
<text  x="134.98" y="161.5" ></text>
</g>
<g >
<title>firedrake.interpolation.make_interpolator (31,024 us, 0.28%)</title><rect x="427.3" y="151" width="3.3" height="15.0" fill="rgb(153.372735937871,122.524308857008,122.524308857008)" rx="2" ry="2" />
<text  x="430.33" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (1,825 us, 0.02%)</title><rect x="425.2" y="199" width="0.1" height="15.0" fill="rgb(136.627959873303,161.479169322951,136.627959873303)" rx="2" ry="2" />
<text  x="428.15" y="209.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (7,656 us, 0.07%)</title><rect x="418.8" y="103" width="0.8" height="15.0" fill="rgb(141.478277849406,160.689582675678,141.478277849406)" rx="2" ry="2" />
<text  x="421.84" y="113.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (12,123 us, 0.11%)</title><rect x="132.7" y="87" width="1.3" height="15.0" fill="rgb(126.49461580542,149.831937431035,149.831937431035)" rx="2" ry="2" />
<text  x="135.73" y="97.5" ></text>
</g>
<g >
<title>firedrake.parloops.par_loop (828,456 us, 7.39%)</title><rect x="430.6" y="151" width="87.3" height="15.0" fill="rgb(145.875242715697,159.973797697445,145.875242715697)" rx="2" ry="2" />
<text  x="433.60" y="161.5" >firedrake..</text>
</g>
<g >
<title>ParLoopExecute (5,389,035 us, 48.10%)</title><rect x="518.2" y="135" width="567.6" height="15.0" fill="rgb(152.795167696412,118.096285672491,118.096285672491)" rx="2" ry="2" />
<text  x="521.20" y="145.5" >ParLoopExecute</text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (2,710 us, 0.02%)</title><rect x="426.9" y="215" width="0.3" height="15.0" fill="rgb(156.078957769164,143.272009563593,143.272009563593)" rx="2" ry="2" />
<text  x="429.92" y="225.5" ></text>
</g>
<g >
<title>firedrake.functionspace.MixedFunctionSpace (1,266 us, 0.01%)</title><rect x="418.7" y="71" width="0.1" height="15.0" fill="rgb(155.774726014666,155.774726014666,147.215979917225)" rx="2" ry="2" />
<text  x="421.70" y="81.5" ></text>
</g>
<g >
<title>HybridInit (897,742 us, 8.01%)</title><rect x="423.3" y="135" width="94.6" height="15.0" fill="rgb(131.259244958002,151.067211655778,151.067211655778)" rx="2" ry="2" />
<text  x="426.31" y="145.5" >HybridInit</text>
</g>
<g >
<title>CreateExtMesh (1,165,387 us, 10.40%)</title><rect x="10.0" y="71" width="122.7" height="15.0" fill="rgb(128.302037714774,128.302037714774,152.252007299634)" rx="2" ry="2" />
<text  x="13.00" y="81.5" >CreateExtMesh</text>
</g>
<g >
<title>firedrake.functionspace.MixedFunctionSpace (1,825 us, 0.02%)</title><rect x="425.2" y="167" width="0.1" height="15.0" fill="rgb(156.2347409653,144.466347400636,144.466347400636)" rx="2" ry="2" />
<text  x="428.15" y="177.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (6,873 us, 0.06%)</title><rect x="425.2" y="151" width="0.7" height="15.0" fill="rgb(150.011598805808,150.011598805808,119.286978828148)" rx="2" ry="2" />
<text  x="428.15" y="161.5" ></text>
</g>
<g >
<title>all (11,204,358 us, 100%)</title><rect x="10.0" y="39" width="1180.0" height="15.0" fill="rgb(152.188340095251,152.188340095251,129.835802000063)" rx="2" ry="2" />
<text  x="13.00" y="49.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (821,482 us, 7.33%)</title><rect x="431.3" y="183" width="86.6" height="15.0" fill="rgb(145.814887519634,159.98362296192,145.814887519634)" rx="2" ry="2" />
<text  x="434.34" y="193.5" >Parloop_C..</text>
</g>
<g >
<title>firedrake.matrix_free.operators.ImplicitMatrixContext.__init__ (7,700 us, 0.07%)</title><rect x="422.5" y="103" width="0.8" height="15.0" fill="rgb(150.174866131873,150.174866131873,120.078197408308)" rx="2" ry="2" />
<text  x="425.49" y="113.5" ></text>
</g>
</g>
</svg>
