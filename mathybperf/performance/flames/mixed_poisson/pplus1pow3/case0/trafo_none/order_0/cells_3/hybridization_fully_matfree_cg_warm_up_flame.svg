<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="299" onload="init(evt)" viewBox="0 0 1200 299" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:13px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:18px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 13 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (1 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="299.0" fill="url(#background)"  />
<text id="title" x="600.00" y="26" >Firedrake example</text>
<text id="details" x="10.00" y="281" > </text>
<text id="unzoom" x="10.00" y="26" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="26" >Search</text>
<text id="ignorecase" x="1174.00" y="26" >ic</text>
<text id="matched" x="1090.00" y="281" > </text>
<g id="frames">
<g >
<title>firedrake.parloops.par_loop (687,467 us, 7.28%)</title><rect x="359.3" y="151" width="85.9" height="15.0" fill="rgb(128.931880348696,150.463820831143,150.463820831143)" rx="2" ry="2" />
<text  x="362.30" y="161.5" >firedrake..</text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (1,978 us, 0.02%)</title><rect x="355.8" y="215" width="0.3" height="15.0" fill="rgb(111.681550906032,111.681550906032,149.035138885039)" rx="2" ry="2" />
<text  x="358.82" y="225.5" ></text>
</g>
<g >
<title>all (9,444,327 us, 100%)</title><rect x="10.0" y="39" width="1180.0" height="15.0" fill="rgb(153.575985612611,124.082556363354,124.082556363354)" rx="2" ry="2" />
<text  x="13.00" y="49.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (9,116 us, 0.10%)</title><rect x="354.9" y="151" width="1.2" height="15.0" fill="rgb(108.533848069176,108.533848069176,148.425906077905)" rx="2" ry="2" />
<text  x="357.93" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspace.MixedFunctionSpace (2,744 us, 0.03%)</title><rect x="354.0" y="167" width="0.3" height="15.0" fill="rgb(110.697486542446,145.736385399893,145.736385399893)" rx="2" ry="2" />
<text  x="356.96" y="177.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.action (3,985 us, 0.04%)</title><rect x="351.3" y="119" width="0.5" height="15.0" fill="rgb(151.538190959224,151.538190959224,126.68507926393)" rx="2" ry="2" />
<text  x="354.27" y="129.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (9,710 us, 0.10%)</title><rect x="349.7" y="103" width="1.2" height="15.0" fill="rgb(142.735121907038,142.735121907038,155.045507465878)" rx="2" ry="2" />
<text  x="352.73" y="113.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (681,934 us, 7.22%)</title><rect x="360.0" y="183" width="85.2" height="15.0" fill="rgb(136.234467622355,102.225823282284,136.234467622355)" rx="2" ry="2" />
<text  x="362.99" y="193.5" >Parloop_C..</text>
</g>
<g >
<title>SNESSolve (6,705,604 us, 71.00%)</title><rect x="352.2" y="103" width="837.8" height="15.0" fill="rgb(131.498252188846,151.129176493405,151.129176493405)" rx="2" ry="2" />
<text  x="355.18" y="113.5" >SNESSolve</text>
</g>
<g >
<title>firedrake.assemble.allocate_matrix (7,314 us, 0.08%)</title><rect x="351.3" y="87" width="0.9" height="15.0" fill="rgb(135.659750804158,135.659750804158,153.676080800805)" rx="2" ry="2" />
<text  x="354.27" y="97.5" ></text>
</g>
<g >
<title>Log_Event_form1_cell_integral_otherwise (1,591 us, 0.02%)</title><rect x="788.8" y="167" width="0.2" height="15.0" fill="rgb(155.949974261244,142.283136002871,142.283136002871)" rx="2" ry="2" />
<text  x="791.79" y="177.5" ></text>
</g>
<g >
<title>firedrake.interpolation.make_interpolator (24,667 us, 0.26%)</title><rect x="356.2" y="151" width="3.1" height="15.0" fill="rgb(108.657582771927,145.207521459388,145.207521459388)" rx="2" ry="2" />
<text  x="359.21" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (1,978 us, 0.02%)</title><rect x="355.8" y="247" width="0.3" height="15.0" fill="rgb(154.630724360711,132.168886765453,132.168886765453)" rx="2" ry="2" />
<text  x="358.82" y="257.5" ></text>
</g>
<g >
<title>firedrake.extrusion_utils.make_extruded_coords (939,284 us, 9.95%)</title><rect x="10.2" y="87" width="117.3" height="15.0" fill="rgb(156.078546748796,143.268858407439,143.268858407439)" rx="2" ry="2" />
<text  x="13.18" y="97.5" >firedrake.ext..</text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (5,054 us, 0.05%)</title><rect x="354.3" y="167" width="0.6" height="15.0" fill="rgb(155.569685699623,139.367590363777,139.367590363777)" rx="2" ry="2" />
<text  x="357.30" y="177.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (12,941 us, 0.14%)</title><rect x="128.5" y="71" width="1.6" height="15.0" fill="rgb(151.974456597072,151.974456597072,128.799289662735)" rx="2" ry="2" />
<text  x="131.48" y="81.5" ></text>
</g>
<g >
<title>firedrake.matrix_free.operators.ImplicitMatrixContext.__init__ (7,314 us, 0.08%)</title><rect x="351.3" y="103" width="0.9" height="15.0" fill="rgb(142.20404829961,153.904753262862,153.904753262862)" rx="2" ry="2" />
<text  x="354.27" y="113.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (2,718,065 us, 28.78%)</title><rect x="448.0" y="167" width="339.6" height="15.0" fill="rgb(147.145832982303,155.185956699116,155.185956699116)" rx="2" ry="2" />
<text  x="450.95" y="177.5" >pyop2.global_kernel.GlobalKernel.compile</text>
</g>
<g >
<title>firedrake.__init__ (1,735,827 us, 18.38%)</title><rect x="130.3" y="71" width="216.9" height="15.0" fill="rgb(156.426777045024,145.938624011851,145.938624011851)" rx="2" ry="2" />
<text  x="133.33" y="81.5" >firedrake.__init__</text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (1,679 us, 0.02%)</title><rect x="354.1" y="199" width="0.2" height="15.0" fill="rgb(141.590580634248,153.745706090361,153.745706090361)" rx="2" ry="2" />
<text  x="357.09" y="209.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (6,431 us, 0.07%)</title><rect x="127.5" y="151" width="0.8" height="15.0" fill="rgb(140.135082748338,112.221149542615,140.135082748338)" rx="2" ry="2" />
<text  x="130.54" y="161.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (3,329 us, 0.04%)</title><rect x="351.8" y="119" width="0.4" height="15.0" fill="rgb(152.529304376426,143.981342464591,152.529304376426)" rx="2" ry="2" />
<text  x="354.77" y="129.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (11,797 us, 0.12%)</title><rect x="128.6" y="103" width="1.5" height="15.0" fill="rgb(126.495338640481,149.832124832717,149.832124832717)" rx="2" ry="2" />
<text  x="131.62" y="113.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalProblem.__init__ (10,963 us, 0.12%)</title><rect x="349.7" y="87" width="1.4" height="15.0" fill="rgb(142.9530158571,160.449509046519,142.9530158571)" rx="2" ry="2" />
<text  x="352.73" y="97.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (1,679 us, 0.02%)</title><rect x="354.1" y="183" width="0.2" height="15.0" fill="rgb(118.104083789165,147.65661431571,147.65661431571)" rx="2" ry="2" />
<text  x="357.09" y="193.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (5,465 us, 0.06%)</title><rect x="1189.3" y="151" width="0.7" height="15.0" fill="rgb(132.945017026165,162.078718158531,132.945017026165)" rx="2" ry="2" />
<text  x="1192.32" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (11,797 us, 0.12%)</title><rect x="128.6" y="119" width="1.5" height="15.0" fill="rgb(137.236548133045,137.236548133045,153.981267380589)" rx="2" ry="2" />
<text  x="131.62" y="129.5" ></text>
</g>
<g >
<title>firedrake.utility_meshes.RectangleMesh (2,002 us, 0.02%)</title><rect x="348.1" y="87" width="0.2" height="15.0" fill="rgb(124.529209097225,149.322387543725,149.322387543725)" rx="2" ry="2" />
<text  x="351.06" y="97.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (6,701 us, 0.07%)</title><rect x="355.2" y="183" width="0.9" height="15.0" fill="rgb(149.910099923335,159.316960477597,149.910099923335)" rx="2" ry="2" />
<text  x="358.23" y="193.5" ></text>
</g>
<g >
<title>firedrake.mesh.make_mesh_from_coordinates (1,089 us, 0.01%)</title><rect x="128.3" y="87" width="0.2" height="15.0" fill="rgb(149.980884537851,149.980884537851,119.138132760356)" rx="2" ry="2" />
<text  x="131.34" y="97.5" ></text>
</g>
<g >
<title>perfsolve (6,705,604 us, 71.00%)</title><rect x="352.2" y="71" width="837.8" height="15.0" fill="rgb(153.375293938228,122.543920193079,122.543920193079)" rx="2" ry="2" />
<text  x="355.18" y="81.5" >perfsolve</text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.solve (6,705,604 us, 71.00%)</title><rect x="352.2" y="87" width="837.8" height="15.0" fill="rgb(154.443601238079,154.443601238079,140.765144461458)" rx="2" ry="2" />
<text  x="355.18" y="97.5" >firedrake.variational_solver.NonlinearVariationalSolver.solve</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (681,934 us, 7.22%)</title><rect x="360.0" y="199" width="85.2" height="15.0" fill="rgb(144.748007995951,144.748007995951,155.435098321797)" rx="2" ry="2" />
<text  x="362.99" y="209.5" >pyop2.glo..</text>
</g>
<g >
<title>firedrake.utility_meshes.SquareMesh (2,002 us, 0.02%)</title><rect x="348.1" y="71" width="0.2" height="15.0" fill="rgb(150.952055665957,159.147339775309,150.952055665957)" rx="2" ry="2" />
<text  x="351.06" y="81.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (4,479 us, 0.05%)</title><rect x="355.5" y="199" width="0.6" height="15.0" fill="rgb(133.025886390224,151.525229804873,151.525229804873)" rx="2" ry="2" />
<text  x="358.51" y="209.5" ></text>
</g>
<g >
<title>firedrake.function.Function.__init__ (1,164 us, 0.01%)</title><rect x="356.1" y="151" width="0.1" height="15.0" fill="rgb(131.205941950859,151.05339235763,151.05339235763)" rx="2" ry="2" />
<text  x="359.07" y="161.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (6,431 us, 0.07%)</title><rect x="127.5" y="103" width="0.8" height="15.0" fill="rgb(112.500920181294,146.203942269224,146.203942269224)" rx="2" ry="2" />
<text  x="130.54" y="113.5" ></text>
</g>
<g >
<title>firedrake.functionspace.VectorFunctionSpace (5,509 us, 0.06%)</title><rect x="347.4" y="71" width="0.7" height="15.0" fill="rgb(136.076552152453,136.076552152453,153.756752029507)" rx="2" ry="2" />
<text  x="350.37" y="81.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (2,244,906 us, 23.77%)</title><rect x="789.0" y="167" width="280.5" height="15.0" fill="rgb(123.129864465644,123.129864465644,151.25094150948)" rx="2" ry="2" />
<text  x="791.99" y="177.5" >pyop2.global_kernel.GlobalKernel.c..</text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (5,509 us, 0.06%)</title><rect x="347.4" y="135" width="0.7" height="15.0" fill="rgb(153.36684859609,122.479172570019,122.479172570019)" rx="2" ry="2" />
<text  x="350.37" y="145.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.__init__ (8,663 us, 0.09%)</title><rect x="351.1" y="71" width="1.1" height="15.0" fill="rgb(153.395539369956,153.395539369956,135.686075408246)" rx="2" ry="2" />
<text  x="354.10" y="81.5" ></text>
</g>
<g >
<title>ParLoopExecute (681,934 us, 7.22%)</title><rect x="360.0" y="167" width="85.2" height="15.0" fill="rgb(139.676196619966,153.24938430888,153.24938430888)" rx="2" ry="2" />
<text  x="362.99" y="177.5" >ParLoopEx..</text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (6,431 us, 0.07%)</title><rect x="127.5" y="119" width="0.8" height="15.0" fill="rgb(125.796305710603,125.796305710603,151.76702691173)" rx="2" ry="2" />
<text  x="130.54" y="129.5" ></text>
</g>
<g >
<title>CreateExtMesh (948,277 us, 10.04%)</title><rect x="10.0" y="71" width="118.5" height="15.0" fill="rgb(153.916950643086,153.916950643086,138.212914654954)" rx="2" ry="2" />
<text  x="13.00" y="81.5" >CreateExtMesh</text>
</g>
<g >
<title>CreateFunctionSpace (1,145 us, 0.01%)</title><rect x="1189.9" y="199" width="0.1" height="15.0" fill="rgb(128.859134205736,128.859134205736,152.359832426917)" rx="2" ry="2" />
<text  x="1192.86" y="209.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (1,679 us, 0.02%)</title><rect x="354.1" y="231" width="0.2" height="15.0" fill="rgb(151.232769446637,151.232769446637,125.204959626009)" rx="2" ry="2" />
<text  x="357.09" y="241.5" ></text>
</g>
<g >
<title>firedrake.mesh.MeshTopology._facets (2,328 us, 0.02%)</title><rect x="347.8" y="151" width="0.3" height="15.0" fill="rgb(152.914195708881,152.914195708881,133.353409973809)" rx="2" ry="2" />
<text  x="350.77" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (1,679 us, 0.02%)</title><rect x="354.1" y="215" width="0.2" height="15.0" fill="rgb(153.093960333658,153.093960333658,134.224577001573)" rx="2" ry="2" />
<text  x="357.09" y="225.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (7,798 us, 0.08%)</title><rect x="354.0" y="151" width="0.9" height="15.0" fill="rgb(133.512043490838,95.2496114452723,133.512043490838)" rx="2" ry="2" />
<text  x="356.96" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (11,797 us, 0.12%)</title><rect x="128.6" y="87" width="1.5" height="15.0" fill="rgb(152.993770365674,119.618906136834,119.618906136834)" rx="2" ry="2" />
<text  x="131.62" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (5,054 us, 0.05%)</title><rect x="354.3" y="183" width="0.6" height="15.0" fill="rgb(154.405335476431,130.440905319302,130.440905319302)" rx="2" ry="2" />
<text  x="357.30" y="193.5" ></text>
</g>
<g >
<title>firedrake.functionspace.VectorFunctionSpace (6,431 us, 0.07%)</title><rect x="127.5" y="87" width="0.8" height="15.0" fill="rgb(155.47237333852,155.47237333852,145.750732332826)" rx="2" ry="2" />
<text  x="130.54" y="97.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_pyop2_kernel_uniform_extrusion (907,241 us, 9.61%)</title><rect x="14.2" y="119" width="113.3" height="15.0" fill="rgb(129.411151717398,162.653998557633,129.411151717398)" rx="2" ry="2" />
<text  x="17.19" y="129.5" >Parloop_Cell..</text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (5,054 us, 0.05%)</title><rect x="354.3" y="199" width="0.6" height="15.0" fill="rgb(154.279836767612,129.478748551689,129.478748551689)" rx="2" ry="2" />
<text  x="357.30" y="209.5" ></text>
</g>
<g >
<title>firedrake.functionspace.make_scalar_element (1,146 us, 0.01%)</title><rect x="355.7" y="215" width="0.1" height="15.0" fill="rgb(137.338570715528,152.64333314847,152.64333314847)" rx="2" ry="2" />
<text  x="358.68" y="225.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (1,978 us, 0.02%)</title><rect x="355.8" y="231" width="0.3" height="15.0" fill="rgb(153.022731327363,153.022731327363,133.879390278759)" rx="2" ry="2" />
<text  x="358.82" y="241.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (5,509 us, 0.06%)</title><rect x="347.4" y="103" width="0.7" height="15.0" fill="rgb(117.897483146735,117.897483146735,150.238222544529)" rx="2" ry="2" />
<text  x="350.37" y="113.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (907,241 us, 9.61%)</title><rect x="14.2" y="135" width="113.3" height="15.0" fill="rgb(146.272898851604,159.909062977646,146.272898851604)" rx="2" ry="2" />
<text  x="17.19" y="145.5" >pyop2.global..</text>
</g>
<g >
<title>firedrake.functionspace.MixedFunctionSpace (1,303 us, 0.01%)</title><rect x="347.2" y="71" width="0.2" height="15.0" fill="rgb(156.116346261854,143.558654674217,143.558654674217)" rx="2" ry="2" />
<text  x="350.21" y="81.5" ></text>
</g>
<g >
<title>Log_Event_form0_cell_integral_otherwise (8,058 us, 0.09%)</title><rect x="446.9" y="167" width="1.1" height="15.0" fill="rgb(115.033580720421,115.033580720421,149.683918849114)" rx="2" ry="2" />
<text  x="449.95" y="177.5" ></text>
</g>
<g >
<title>ParLoopExecute (907,241 us, 9.61%)</title><rect x="14.2" y="103" width="113.3" height="15.0" fill="rgb(150.824229963334,150.824229963334,123.225114437695)" rx="2" ry="2" />
<text  x="17.19" y="113.5" >ParLoopExecute</text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (9,116 us, 0.10%)</title><rect x="354.9" y="167" width="1.2" height="15.0" fill="rgb(145.375723346939,160.055114803987,145.375723346939)" rx="2" ry="2" />
<text  x="357.93" y="177.5" ></text>
</g>
<g >
<title>HybridInit (744,392 us, 7.88%)</title><rect x="352.2" y="135" width="93.0" height="15.0" fill="rgb(152.251959587998,113.931690174653,113.931690174653)" rx="2" ry="2" />
<text  x="355.18" y="145.5" >HybridInit</text>
</g>
<g >
<title>firedrake (9,444,327 us, 100.00%)</title><rect x="10.0" y="55" width="1180.0" height="15.0" fill="rgb(152.012411928808,152.012411928808,128.983227039609)" rx="2" ry="2" />
<text  x="13.00" y="65.5" >firedrake</text>
</g>
<g >
<title>PCSetUp (744,392 us, 7.88%)</title><rect x="352.2" y="119" width="93.0" height="15.0" fill="rgb(148.297502879326,148.297502879326,110.980206261348)" rx="2" ry="2" />
<text  x="355.18" y="129.5" >PCSetUp</text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (964,630 us, 10.21%)</title><rect x="1069.5" y="135" width="120.5" height="15.0" fill="rgb(143.856726985948,160.302393281357,143.856726985948)" rx="2" ry="2" />
<text  x="1072.48" y="145.5" >firedrake.tsf..</text>
</g>
<g >
<title>Parloop_Cells_wrap_form1_cell_integral_otherwise (2,256,405 us, 23.89%)</title><rect x="787.6" y="151" width="281.9" height="15.0" fill="rgb(156.417669453134,145.868799140694,145.868799140694)" rx="2" ry="2" />
<text  x="790.56" y="161.5" >Parloop_Cells_wrap_form1_cell_inte..</text>
</g>
<g >
<title>CreateMesh (1,861 us, 0.02%)</title><rect x="130.1" y="71" width="0.2" height="15.0" fill="rgb(129.921053110377,129.921053110377,152.565365118138)" rx="2" ry="2" />
<text  x="133.10" y="81.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.action (11,377 us, 0.12%)</title><rect x="348.3" y="87" width="1.4" height="15.0" fill="rgb(152.836763897319,152.836763897319,132.978163502394)" rx="2" ry="2" />
<text  x="351.31" y="97.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.LinearVariationalProblem.__init__ (22,340 us, 0.24%)</title><rect x="348.3" y="71" width="2.8" height="15.0" fill="rgb(129.504603315328,129.504603315328,152.484761931999)" rx="2" ry="2" />
<text  x="351.31" y="81.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (1,145 us, 0.01%)</title><rect x="1189.9" y="183" width="0.1" height="15.0" fill="rgb(128.508842992267,128.508842992267,152.292034127536)" rx="2" ry="2" />
<text  x="1192.86" y="193.5" ></text>
</g>
<g >
<title>ParLoopExecute (4,993,440 us, 52.87%)</title><rect x="445.6" y="135" width="623.9" height="15.0" fill="rgb(143.383375723423,154.210504817184,154.210504817184)" rx="2" ry="2" />
<text  x="448.58" y="145.5" >ParLoopExecute</text>
</g>
<g >
<title>CreateFunctionSpace (5,509 us, 0.06%)</title><rect x="347.4" y="87" width="0.7" height="15.0" fill="rgb(127.963824580174,150.212843409675,150.212843409675)" rx="2" ry="2" />
<text  x="350.37" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (5,509 us, 0.06%)</title><rect x="347.4" y="119" width="0.7" height="15.0" fill="rgb(136.172593329673,102.067270407287,136.172593329673)" rx="2" ry="2" />
<text  x="350.37" y="129.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_form0_cell_integral_otherwise (2,735,801 us, 28.97%)</title><rect x="445.7" y="151" width="341.9" height="15.0" fill="rgb(143.417981141737,143.417981141737,155.177673769368)" rx="2" ry="2" />
<text  x="448.74" y="161.5" >Parloop_Cells_wrap_form0_cell_integral_oth..</text>
</g>
<g >
<title>SNESFunctionEval (5,961,212 us, 63.12%)</title><rect x="445.2" y="119" width="744.8" height="15.0" fill="rgb(149.374614418722,149.374614418722,116.200054490729)" rx="2" ry="2" />
<text  x="448.19" y="129.5" >SNESFunctionEval</text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (3,110 us, 0.03%)</title><rect x="1189.6" y="167" width="0.4" height="15.0" fill="rgb(126.444071924283,163.13701154721,126.444071924283)" rx="2" ry="2" />
<text  x="1192.61" y="177.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (6,431 us, 0.07%)</title><rect x="127.5" y="135" width="0.8" height="15.0" fill="rgb(112.203737574397,112.203737574397,149.136207272464)" rx="2" ry="2" />
<text  x="130.54" y="145.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.derivative (1,253 us, 0.01%)</title><rect x="350.9" y="103" width="0.2" height="15.0" fill="rgb(135.413031337802,135.413031337802,153.628328646026)" rx="2" ry="2" />
<text  x="353.94" y="113.5" ></text>
</g>
</g>
</svg>
