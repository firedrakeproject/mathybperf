<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="299" onload="init(evt)" viewBox="0 0 1200 299" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:13px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:18px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 13 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (1 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="299.0" fill="url(#background)"  />
<text id="title" x="600.00" y="26" >Firedrake example</text>
<text id="details" x="10.00" y="281" > </text>
<text id="unzoom" x="10.00" y="26" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="26" >Search</text>
<text id="ignorecase" x="1174.00" y="26" >ic</text>
<text id="matched" x="1090.00" y="281" > </text>
<g id="frames">
<g >
<title>PCApply (1,231,829 us, 9.73%)</title><rect x="363.3" y="135" width="114.7" height="15.0" fill="rgb(145.142748800678,145.142748800678,155.511499767873)" rx="2" ry="2" />
<text  x="366.26" y="145.5" >PCApply</text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (743,414 us, 5.87%)</title><rect x="487.0" y="183" width="69.3" height="15.0" fill="rgb(142.593805929003,160.507985081325,142.593805929003)" rx="2" ry="2" />
<text  x="490.04" y="193.5" >Parloop..</text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (4,959 us, 0.04%)</title><rect x="481.4" y="199" width="0.5" height="15.0" fill="rgb(153.096507359405,120.406556422105,120.406556422105)" rx="2" ry="2" />
<text  x="484.43" y="209.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_form1_cell_integral_otherwise (2,350,877 us, 18.56%)</title><rect x="862.1" y="151" width="219.1" height="15.0" fill="rgb(131.690170498574,162.282995500232,131.690170498574)" rx="2" ry="2" />
<text  x="865.14" y="161.5" >Parloop_Cells_wrap_form1_c..</text>
</g>
<g >
<title>PCSetUp (839,970 us, 6.63%)</title><rect x="478.0" y="119" width="78.3" height="15.0" fill="rgb(138.657702120455,108.435361683666,138.657702120455)" rx="2" ry="2" />
<text  x="481.05" y="129.5" >PCSetUp</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (1,142,763 us, 9.02%)</title><rect x="364.4" y="231" width="106.4" height="15.0" fill="rgb(114.220758542314,114.220758542314,149.526598427545)" rx="2" ry="2" />
<text  x="367.36" y="241.5" >pyop2.globa..</text>
</g>
<g >
<title>KSPSolve (1,231,829 us, 9.73%)</title><rect x="363.3" y="119" width="114.7" height="15.0" fill="rgb(153.221440779244,121.36437930754,121.36437930754)" rx="2" ry="2" />
<text  x="366.26" y="129.5" >KSPSolve</text>
</g>
<g >
<title>firedrake.functionspace.VectorFunctionSpace (5,957 us, 0.05%)</title><rect x="355.9" y="71" width="0.5" height="15.0" fill="rgb(134.586758895751,161.81145785418,134.586758895751)" rx="2" ry="2" />
<text  x="358.86" y="81.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (11,322 us, 0.09%)</title><rect x="482.4" y="183" width="1.1" height="15.0" fill="rgb(105.414838460401,144.366809971215,144.366809971215)" rx="2" ry="2" />
<text  x="485.43" y="193.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (16,500 us, 0.13%)</title><rect x="117.9" y="71" width="1.6" height="15.0" fill="rgb(124.032121798854,163.529654590884,124.032121798854)" rx="2" ry="2" />
<text  x="120.93" y="81.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.__init__ (16,576 us, 0.13%)</title><rect x="361.7" y="71" width="1.6" height="15.0" fill="rgb(133.978130780621,133.978130780621,153.35060595754)" rx="2" ry="2" />
<text  x="364.71" y="81.5" ></text>
</g>
<g >
<title>firedrake.function.Function.__init__ (1,603 us, 0.01%)</title><rect x="477.9" y="199" width="0.1" height="15.0" fill="rgb(141.299396864523,160.718702836008,141.299396864523)" rx="2" ry="2" />
<text  x="480.90" y="209.5" ></text>
</g>
<g >
<title>ParLoopExecute (1,109,181 us, 8.76%)</title><rect x="13.9" y="103" width="103.4" height="15.0" fill="rgb(140.030458507561,160.925274196444,140.030458507561)" rx="2" ry="2" />
<text  x="16.93" y="113.5" >ParLoopExec..</text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (4,594 us, 0.04%)</title><rect x="1189.6" y="167" width="0.4" height="15.0" fill="rgb(155.02874146823,135.220351256431,135.220351256431)" rx="2" ry="2" />
<text  x="1192.57" y="177.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (3,260,053 us, 25.74%)</title><rect x="558.4" y="167" width="303.7" height="15.0" fill="rgb(104.121496834625,144.031499179347,144.031499179347)" rx="2" ry="2" />
<text  x="561.35" y="177.5" >pyop2.global_kernel.GlobalKernel.comp..</text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (6,875 us, 0.05%)</title><rect x="117.3" y="135" width="0.6" height="15.0" fill="rgb(154.487899275183,131.073894443068,131.073894443068)" rx="2" ry="2" />
<text  x="120.29" y="145.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (17,128 us, 0.14%)</title><rect x="481.9" y="167" width="1.6" height="15.0" fill="rgb(132.287361142294,132.287361142294,153.023360221089)" rx="2" ry="2" />
<text  x="484.89" y="177.5" ></text>
</g>
<g >
<title>SNESFunctionEval (6,800,339 us, 53.70%)</title><rect x="556.3" y="119" width="633.7" height="15.0" fill="rgb(154.757417719934,133.140202519491,133.140202519491)" rx="2" ry="2" />
<text  x="559.32" y="129.5" >SNESFunctionEval</text>
</g>
<g >
<title>SCForwardElim (1,231,829 us, 9.73%)</title><rect x="363.3" y="151" width="114.7" height="15.0" fill="rgb(141.846730046135,116.607245743221,141.846730046135)" rx="2" ry="2" />
<text  x="366.26" y="161.5" >SCForwardElim</text>
</g>
<g >
<title>HybridRHS (77,233 us, 0.61%)</title><rect x="470.8" y="167" width="7.2" height="15.0" fill="rgb(149.655413777466,149.655413777466,117.560851383103)" rx="2" ry="2" />
<text  x="473.85" y="177.5" ></text>
</g>
<g >
<title>firedrake.interpolation.make_interpolator (31,044 us, 0.25%)</title><rect x="483.6" y="151" width="2.9" height="15.0" fill="rgb(154.418793936354,130.544086845382,130.544086845382)" rx="2" ry="2" />
<text  x="486.63" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (3,509 us, 0.03%)</title><rect x="483.2" y="247" width="0.3" height="15.0" fill="rgb(140.727773009242,160.811757882216,140.727773009242)" rx="2" ry="2" />
<text  x="486.16" y="257.5" ></text>
</g>
<g >
<title>perfsolve (8,872,138 us, 70.06%)</title><rect x="363.3" y="71" width="826.7" height="15.0" fill="rgb(114.998648715883,146.851501518933,146.851501518933)" rx="2" ry="2" />
<text  x="366.26" y="81.5" >perfsolve</text>
</g>
<g >
<title>firedrake.functionspace.MixedFunctionSpace (1,808 us, 0.01%)</title><rect x="481.3" y="167" width="0.1" height="15.0" fill="rgb(151.885811407258,151.885811407258,128.369701435174)" rx="2" ry="2" />
<text  x="484.26" y="177.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (1,808 us, 0.01%)</title><rect x="481.3" y="231" width="0.1" height="15.0" fill="rgb(131.813393277421,162.262935978094,131.813393277421)" rx="2" ry="2" />
<text  x="484.26" y="241.5" ></text>
</g>
<g >
<title>ParLoopExecute (1,142,763 us, 9.02%)</title><rect x="364.4" y="199" width="106.4" height="15.0" fill="rgb(129.119165158323,150.512376152158,150.512376152158)" rx="2" ry="2" />
<text  x="367.36" y="209.5" >ParLoopExec..</text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (14,845 us, 0.12%)</title><rect x="118.1" y="103" width="1.4" height="15.0" fill="rgb(148.347521043965,159.571333783541,148.347521043965)" rx="2" ry="2" />
<text  x="121.08" y="113.5" ></text>
</g>
<g >
<title>HybridBreak (1,154,596 us, 9.12%)</title><rect x="363.3" y="167" width="107.5" height="15.0" fill="rgb(140.259285953414,160.888023216886,140.259285953414)" rx="2" ry="2" />
<text  x="366.26" y="177.5" >HybridBreak</text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (17,128 us, 0.14%)</title><rect x="481.9" y="151" width="1.6" height="15.0" fill="rgb(153.247664896256,121.565430871298,121.565430871298)" rx="2" ry="2" />
<text  x="484.89" y="161.5" ></text>
</g>
<g >
<title>firedrake.matrix_free.operators.ImplicitMatrixContext.__init__ (14,299 us, 0.11%)</title><rect x="361.9" y="103" width="1.4" height="15.0" fill="rgb(148.296113885602,159.579702390716,148.296113885602)" rx="2" ry="2" />
<text  x="364.93" y="113.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (14,845 us, 0.12%)</title><rect x="118.1" y="119" width="1.4" height="15.0" fill="rgb(141.2347385368,115.03901750055,141.2347385368)" rx="2" ry="2" />
<text  x="121.08" y="129.5" ></text>
</g>
<g >
<title>ParLoopExecute (743,414 us, 5.87%)</title><rect x="487.0" y="167" width="69.3" height="15.0" fill="rgb(148.751959218436,148.751959218436,113.182571597035)" rx="2" ry="2" />
<text  x="490.04" y="177.5" >ParLoop..</text>
</g>
<g >
<title>CreateFunctionSpace (5,957 us, 0.05%)</title><rect x="355.9" y="87" width="0.5" height="15.0" fill="rgb(125.915230943864,163.223101939371,125.915230943864)" rx="2" ry="2" />
<text  x="358.86" y="97.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (1,808 us, 0.01%)</title><rect x="481.3" y="183" width="0.1" height="15.0" fill="rgb(124.394242516266,163.470704706654,124.394242516266)" rx="2" ry="2" />
<text  x="484.26" y="193.5" ></text>
</g>
<g >
<title>HybridInit (839,970 us, 6.63%)</title><rect x="478.0" y="135" width="78.3" height="15.0" fill="rgb(156.47767364376,146.328831268823,146.328831268823)" rx="2" ry="2" />
<text  x="481.05" y="145.5" >HybridInit</text>
</g>
<g >
<title>firedrake.extrusion_utils.make_extruded_coords (1,148,512 us, 9.07%)</title><rect x="10.3" y="87" width="107.0" height="15.0" fill="rgb(143.48026032152,160.363678552311,143.48026032152)" rx="2" ry="2" />
<text  x="13.26" y="97.5" >firedrake.e..</text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (5,957 us, 0.05%)</title><rect x="355.9" y="135" width="0.5" height="15.0" fill="rgb(142.278574015921,160.559301904385,142.278574015921)" rx="2" ry="2" />
<text  x="358.86" y="145.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (5,957 us, 0.05%)</title><rect x="355.9" y="103" width="0.5" height="15.0" fill="rgb(106.867717355389,144.743482277323,144.743482277323)" rx="2" ry="2" />
<text  x="358.86" y="113.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (4,959 us, 0.04%)</title><rect x="481.4" y="183" width="0.5" height="15.0" fill="rgb(145.568097592394,160.023798066354,145.568097592394)" rx="2" ry="2" />
<text  x="484.43" y="193.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.solve (8,872,138 us, 70.06%)</title><rect x="363.3" y="87" width="826.7" height="15.0" fill="rgb(137.255809380623,104.843011537846,137.255809380623)" rx="2" ry="2" />
<text  x="366.26" y="97.5" >firedrake.variational_solver.NonlinearVariationalSolver.solve</text>
</g>
<g >
<title>firedrake.function.Function.__init__ (1,482 us, 0.01%)</title><rect x="483.5" y="151" width="0.1" height="15.0" fill="rgb(130.481717956008,130.481717956008,152.673880894711)" rx="2" ry="2" />
<text  x="486.49" y="161.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (2,339,508 us, 18.47%)</title><rect x="863.2" y="167" width="218.0" height="15.0" fill="rgb(153.98374499005,153.98374499005,138.536610336395)" rx="2" ry="2" />
<text  x="866.20" y="177.5" >pyop2.global_kernel.Global..</text>
</g>
<g >
<title>Log_Event_form1_cell_integral_otherwise (1,557 us, 0.01%)</title><rect x="863.1" y="167" width="0.1" height="15.0" fill="rgb(152.488909212347,115.748303961328,115.748303961328)" rx="2" ry="2" />
<text  x="866.05" y="177.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.action (8,222 us, 0.06%)</title><rect x="361.9" y="119" width="0.8" height="15.0" fill="rgb(122.082068337954,122.082068337954,151.048142258959)" rx="2" ry="2" />
<text  x="364.93" y="129.5" ></text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (1,167,573 us, 9.22%)</title><rect x="1081.2" y="135" width="108.8" height="15.0" fill="rgb(152.581314290694,116.456742895324,116.456742895324)" rx="2" ry="2" />
<text  x="1084.20" y="145.5" >firedrake.ts..</text>
</g>
<g >
<title>CreateFunctionSpace (6,767 us, 0.05%)</title><rect x="481.3" y="151" width="0.6" height="15.0" fill="rgb(151.482496808504,151.482496808504,126.41517684121)" rx="2" ry="2" />
<text  x="484.26" y="161.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.LinearVariationalProblem.__init__ (54,449 us, 0.43%)</title><rect x="356.6" y="71" width="5.1" height="15.0" fill="rgb(149.168377388117,159.437706006586,149.168377388117)" rx="2" ry="2" />
<text  x="359.64" y="81.5" ></text>
</g>
<g >
<title>firedrake.__init__ (2,533,061 us, 20.00%)</title><rect x="119.7" y="71" width="236.0" height="15.0" fill="rgb(140.952976233876,153.58040124582,153.58040124582)" rx="2" ry="2" />
<text  x="122.66" y="81.5" >firedrake.__init__</text>
</g>
<g >
<title>firedrake.functionspace.make_scalar_element (2,332 us, 0.02%)</title><rect x="482.9" y="215" width="0.3" height="15.0" fill="rgb(140.951838001777,114.314084879553,140.951838001777)" rx="2" ry="2" />
<text  x="485.94" y="225.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (1,966 us, 0.02%)</title><rect x="1189.8" y="199" width="0.2" height="15.0" fill="rgb(155.952638165396,142.303559268034,142.303559268034)" rx="2" ry="2" />
<text  x="1192.82" y="209.5" ></text>
</g>
<g >
<title>firedrake.functionspace.VectorFunctionSpace (6,875 us, 0.05%)</title><rect x="117.3" y="87" width="0.6" height="15.0" fill="rgb(140.031816591368,160.925053113033,140.031816591368)" rx="2" ry="2" />
<text  x="120.29" y="97.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (743,414 us, 5.87%)</title><rect x="487.0" y="199" width="69.3" height="15.0" fill="rgb(112.478647395159,146.198167843189,146.198167843189)" rx="2" ry="2" />
<text  x="490.04" y="209.5" >pyop2.g..</text>
</g>
<g >
<title>CreateExtMesh (1,158,202 us, 9.15%)</title><rect x="10.0" y="71" width="107.9" height="15.0" fill="rgb(146.050479882266,159.94527071684,146.050479882266)" rx="2" ry="2" />
<text  x="13.00" y="81.5" >CreateExtMesh</text>
</g>
<g >
<title>all (12,663,119 us, 100%)</title><rect x="10.0" y="39" width="1180.0" height="15.0" fill="rgb(156.50720615715,146.555247204818,146.555247204818)" rx="2" ry="2" />
<text  x="13.00" y="49.5" ></text>
</g>
<g >
<title>firedrake.assemble.allocate_matrix (14,299 us, 0.11%)</title><rect x="361.9" y="87" width="1.4" height="15.0" fill="rgb(150.07176754694,150.07176754694,119.5785658044)" rx="2" ry="2" />
<text  x="364.93" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspace.MixedFunctionSpace (1,635 us, 0.01%)</title><rect x="355.7" y="71" width="0.2" height="15.0" fill="rgb(152.271573900632,152.271573900632,130.23916582614)" rx="2" ry="2" />
<text  x="358.70" y="81.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (6,077 us, 0.05%)</title><rect x="362.7" y="119" width="0.6" height="15.0" fill="rgb(152.420474730642,115.223639601589,115.223639601589)" rx="2" ry="2" />
<text  x="365.69" y="129.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (1,966 us, 0.02%)</title><rect x="1189.8" y="183" width="0.2" height="15.0" fill="rgb(153.507898909264,123.56055830436,123.56055830436)" rx="2" ry="2" />
<text  x="1192.82" y="193.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (6,875 us, 0.05%)</title><rect x="117.3" y="151" width="0.6" height="15.0" fill="rgb(118.885853293937,147.859295298428,147.859295298428)" rx="2" ry="2" />
<text  x="120.29" y="161.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (6,875 us, 0.05%)</title><rect x="117.3" y="103" width="0.6" height="15.0" fill="rgb(113.914974483939,146.570548940281,146.570548940281)" rx="2" ry="2" />
<text  x="120.29" y="113.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (1,808 us, 0.01%)</title><rect x="481.3" y="199" width="0.1" height="15.0" fill="rgb(126.634536526411,149.868213173514,149.868213173514)" rx="2" ry="2" />
<text  x="484.26" y="209.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (14,845 us, 0.12%)</title><rect x="118.1" y="87" width="1.4" height="15.0" fill="rgb(130.585540096935,130.585540096935,152.693975502633)" rx="2" ry="2" />
<text  x="121.08" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (1,808 us, 0.01%)</title><rect x="481.3" y="215" width="0.1" height="15.0" fill="rgb(127.652285365359,162.940325638197,127.652285365359)" rx="2" ry="2" />
<text  x="484.26" y="225.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.derivative (1,549 us, 0.01%)</title><rect x="361.6" y="103" width="0.1" height="15.0" fill="rgb(124.066446993555,163.524066768491,124.066446993555)" rx="2" ry="2" />
<text  x="364.57" y="113.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (8,252 us, 0.07%)</title><rect x="482.7" y="199" width="0.8" height="15.0" fill="rgb(124.079125394278,124.079125394278,151.434669431151)" rx="2" ry="2" />
<text  x="485.72" y="209.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (1,142,763 us, 9.02%)</title><rect x="364.4" y="215" width="106.4" height="15.0" fill="rgb(126.321014854176,149.786929777009,149.786929777009)" rx="2" ry="2" />
<text  x="367.36" y="225.5" >Parloop_Cel..</text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (4,959 us, 0.04%)</title><rect x="481.4" y="167" width="0.5" height="15.0" fill="rgb(128.551472286195,150.365196518643,150.365196518643)" rx="2" ry="2" />
<text  x="484.43" y="177.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (1,109,181 us, 8.76%)</title><rect x="13.9" y="135" width="103.4" height="15.0" fill="rgb(152.482474066535,152.482474066535,131.261220476284)" rx="2" ry="2" />
<text  x="16.93" y="145.5" >pyop2.globa..</text>
</g>
<g >
<title>firedrake.utility_meshes.RectangleMesh (2,459 us, 0.02%)</title><rect x="356.4" y="87" width="0.2" height="15.0" fill="rgb(132.538068438848,92.7538003745491,132.538068438848)" rx="2" ry="2" />
<text  x="359.41" y="97.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (10,416 us, 0.08%)</title><rect x="1189.0" y="151" width="1.0" height="15.0" fill="rgb(153.77291040576,125.592313110824,125.592313110824)" rx="2" ry="2" />
<text  x="1192.03" y="161.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.action (28,513 us, 0.23%)</title><rect x="356.6" y="87" width="2.7" height="15.0" fill="rgb(124.76740199276,124.76740199276,151.567884256663)" rx="2" ry="2" />
<text  x="359.64" y="97.5" ></text>
</g>
<g >
<title>firedrake.function.Function.split (1,549 us, 0.01%)</title><rect x="361.6" y="119" width="0.1" height="15.0" fill="rgb(130.752002434195,150.935704334791,150.935704334791)" rx="2" ry="2" />
<text  x="364.57" y="129.5" ></text>
</g>
<g >
<title>firedrake.parloops.par_loop (749,041 us, 5.92%)</title><rect x="486.5" y="151" width="69.8" height="15.0" fill="rgb(132.677378333669,151.434875864285,151.434875864285)" rx="2" ry="2" />
<text  x="489.52" y="161.5" >firedra..</text>
</g>
<g >
<title>CreateMesh (2,142 us, 0.02%)</title><rect x="119.5" y="71" width="0.2" height="15.0" fill="rgb(140.222069438389,153.390906891434,153.390906891434)" rx="2" ry="2" />
<text  x="122.46" y="81.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_form0_cell_integral_otherwise (3,278,407 us, 25.89%)</title><rect x="556.6" y="151" width="305.5" height="15.0" fill="rgb(132.290970562997,151.334696071888,151.334696071888)" rx="2" ry="2" />
<text  x="559.64" y="161.5" >Parloop_Cells_wrap_form0_cell_integra..</text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (3,509 us, 0.03%)</title><rect x="483.2" y="215" width="0.3" height="15.0" fill="rgb(142.226141592829,160.567837415121,142.226141592829)" rx="2" ry="2" />
<text  x="486.16" y="225.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (3,509 us, 0.03%)</title><rect x="483.2" y="231" width="0.3" height="15.0" fill="rgb(147.255221830828,147.255221830828,155.920365515644)" rx="2" ry="2" />
<text  x="486.16" y="241.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (6,875 us, 0.05%)</title><rect x="117.3" y="119" width="0.6" height="15.0" fill="rgb(131.553716291558,151.143556075589,151.143556075589)" rx="2" ry="2" />
<text  x="120.29" y="129.5" ></text>
</g>
<g >
<title>firedrake.slate.slac.optimise.optimise (9,752 us, 0.08%)</title><rect x="477.1" y="183" width="0.9" height="15.0" fill="rgb(130.85970097779,150.963626179427,150.963626179427)" rx="2" ry="2" />
<text  x="480.14" y="193.5" ></text>
</g>
<g >
<title>ParLoopExecute (5,629,284 us, 44.45%)</title><rect x="556.6" y="135" width="524.6" height="15.0" fill="rgb(153.638536162898,153.638536162898,136.863675250966)" rx="2" ry="2" />
<text  x="559.64" y="145.5" >ParLoopExecute</text>
</g>
<g >
<title>Parloop_Cells_wrap_pyop2_kernel_uniform_extrusion (1,109,181 us, 8.76%)</title><rect x="13.9" y="119" width="103.4" height="15.0" fill="rgb(154.043398615826,127.666056054668,127.666056054668)" rx="2" ry="2" />
<text  x="16.93" y="129.5" >Parloop_Cel..</text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalProblem.__init__ (25,936 us, 0.20%)</title><rect x="359.3" y="87" width="2.4" height="15.0" fill="rgb(143.926339862518,160.291060952613,143.926339862518)" rx="2" ry="2" />
<text  x="362.30" y="97.5" ></text>
</g>
<g >
<title>firedrake.mesh.MeshTopology._facets (2,639 us, 0.02%)</title><rect x="356.2" y="151" width="0.2" height="15.0" fill="rgb(152.041591346399,112.31886698906,112.31886698906)" rx="2" ry="2" />
<text  x="359.17" y="161.5" ></text>
</g>
<g >
<title>SNESSolve (8,872,138 us, 70.06%)</title><rect x="363.3" y="103" width="826.7" height="15.0" fill="rgb(149.18510201865,149.18510201865,115.281648244227)" rx="2" ry="2" />
<text  x="366.26" y="113.5" >SNESSolve</text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (24,387 us, 0.19%)</title><rect x="359.3" y="103" width="2.3" height="15.0" fill="rgb(142.90074030337,119.308147027386,142.90074030337)" rx="2" ry="2" />
<text  x="362.30" y="113.5" ></text>
</g>
<g >
<title>Log_Event_form0_cell_integral_otherwise (8,641 us, 0.07%)</title><rect x="557.5" y="167" width="0.9" height="15.0" fill="rgb(152.781646017861,117.992619470267,117.992619470267)" rx="2" ry="2" />
<text  x="560.55" y="177.5" ></text>
</g>
<g >
<title>firedrake (12,663,119 us, 100.00%)</title><rect x="10.0" y="55" width="1180.0" height="15.0" fill="rgb(109.522759810383,145.431826617507,145.431826617507)" rx="2" ry="2" />
<text  x="13.00" y="65.5" >firedrake</text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (5,957 us, 0.05%)</title><rect x="355.9" y="119" width="0.5" height="15.0" fill="rgb(149.31070707025,149.31070707025,115.890349648134)" rx="2" ry="2" />
<text  x="358.86" y="129.5" ></text>
</g>
<g >
<title>firedrake.utility_meshes.SquareMesh (2,459 us, 0.02%)</title><rect x="356.4" y="71" width="0.2" height="15.0" fill="rgb(135.709984200763,161.628607223132,135.709984200763)" rx="2" ry="2" />
<text  x="359.41" y="81.5" ></text>
</g>
<g >
<title>firedrake.parloops.par_loop (1,152,786 us, 9.10%)</title><rect x="363.4" y="183" width="107.4" height="15.0" fill="rgb(148.036753480661,159.621923851985,148.036753480661)" rx="2" ry="2" />
<text  x="366.43" y="193.5" >firedrake.pa..</text>
</g>
</g>
</svg>
