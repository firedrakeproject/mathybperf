<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="299" onload="init(evt)" viewBox="0 0 1200 299" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:13px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:18px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 13 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (1 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="299.0" fill="url(#background)"  />
<text id="title" x="600.00" y="26" >Firedrake example</text>
<text id="details" x="10.00" y="281" > </text>
<text id="unzoom" x="10.00" y="26" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="26" >Search</text>
<text id="ignorecase" x="1174.00" y="26" >ic</text>
<text id="matched" x="1090.00" y="281" > </text>
<g id="frames">
<g >
<title>ParLoopExecute (5,019,518 us, 47.16%)</title><rect x="522.7" y="135" width="556.5" height="15.0" fill="rgb(123.319949158268,123.319949158268,151.287732095149)" rx="2" ry="2" />
<text  x="525.73" y="145.5" >ParLoopExecute</text>
</g>
<g >
<title>PCSetUp (794,035 us, 7.46%)</title><rect x="434.3" y="119" width="88.1" height="15.0" fill="rgb(147.49338291007,159.710379526268,147.49338291007)" rx="2" ry="2" />
<text  x="437.33" y="129.5" >PCSetUp</text>
</g>
<g >
<title>CreateFunctionSpace (1,702 us, 0.02%)</title><rect x="436.1" y="183" width="0.2" height="15.0" fill="rgb(135.764990459613,101.022788052759,135.764990459613)" rx="2" ry="2" />
<text  x="439.12" y="193.5" ></text>
</g>
<g >
<title>ParLoopExecute (1,065,221 us, 10.01%)</title><rect x="14.6" y="103" width="118.1" height="15.0" fill="rgb(120.247457962498,120.247457962498,150.693056379838)" rx="2" ry="2" />
<text  x="17.59" y="113.5" >ParLoopExecute</text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (6,329 us, 0.06%)</title><rect x="132.7" y="119" width="0.7" height="15.0" fill="rgb(140.079625229767,160.917270311433,140.079625229767)" rx="2" ry="2" />
<text  x="135.68" y="129.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (6,642 us, 0.06%)</title><rect x="436.1" y="151" width="0.8" height="15.0" fill="rgb(132.968867735761,162.074835484876,132.968867735761)" rx="2" ry="2" />
<text  x="439.12" y="161.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.action (11,234 us, 0.11%)</title><rect x="430.9" y="87" width="1.2" height="15.0" fill="rgb(126.161643414795,163.182988281312,126.161643414795)" rx="2" ry="2" />
<text  x="433.87" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (11,731 us, 0.11%)</title><rect x="133.4" y="87" width="1.3" height="15.0" fill="rgb(137.524056537982,161.333293121724,137.524056537982)" rx="2" ry="2" />
<text  x="136.38" y="97.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (1,065,221 us, 10.01%)</title><rect x="14.6" y="135" width="118.1" height="15.0" fill="rgb(124.752315693984,124.752315693984,151.564964327868)" rx="2" ry="2" />
<text  x="17.59" y="145.5" >pyop2.global_..</text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (4,940 us, 0.05%)</title><rect x="436.3" y="183" width="0.6" height="15.0" fill="rgb(137.37743337645,161.357162008485,137.37743337645)" rx="2" ry="2" />
<text  x="439.31" y="193.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (1,455 us, 0.01%)</title><rect x="1189.8" y="199" width="0.2" height="15.0" fill="rgb(127.122707452057,149.994776006089,149.994776006089)" rx="2" ry="2" />
<text  x="1192.84" y="209.5" ></text>
</g>
<g >
<title>Log_Event_form0_cell_integral_otherwise (8,229 us, 0.08%)</title><rect x="523.9" y="167" width="1.0" height="15.0" fill="rgb(114.855859938115,146.814482206178,146.814482206178)" rx="2" ry="2" />
<text  x="526.94" y="177.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.derivative (1,313 us, 0.01%)</title><rect x="433.2" y="103" width="0.2" height="15.0" fill="rgb(147.710841265674,147.710841265674,108.13715382596)" rx="2" ry="2" />
<text  x="436.23" y="113.5" ></text>
</g>
<g >
<title>SNESFunctionEval (6,022,391 us, 56.58%)</title><rect x="522.4" y="119" width="667.6" height="15.0" fill="rgb(156.270951287707,144.743959872423,144.743959872423)" rx="2" ry="2" />
<text  x="525.36" y="129.5" >SNESFunctionEval</text>
</g>
<g >
<title>CreateFunctionSpace (5,186 us, 0.05%)</title><rect x="437.4" y="199" width="0.6" height="15.0" fill="rgb(126.472104280388,126.472104280388,151.897826634914)" rx="2" ry="2" />
<text  x="440.43" y="209.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (3,614 us, 0.03%)</title><rect x="1189.6" y="167" width="0.4" height="15.0" fill="rgb(143.201260627768,160.409097107108,143.201260627768)" rx="2" ry="2" />
<text  x="1192.60" y="177.5" ></text>
</g>
<g >
<title>all (10,644,012 us, 100%)</title><rect x="10.0" y="39" width="1180.0" height="15.0" fill="rgb(155.791880748981,141.071085742184,141.071085742184)" rx="2" ry="2" />
<text  x="13.00" y="49.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (727,186 us, 6.83%)</title><rect x="441.7" y="183" width="80.7" height="15.0" fill="rgb(148.599735507455,148.599735507455,112.444872074589)" rx="2" ry="2" />
<text  x="444.74" y="193.5" >Parloop_..</text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (5,773 us, 0.05%)</title><rect x="430.0" y="135" width="0.6" height="15.0" fill="rgb(148.313349828217,148.313349828217,111.057003013669)" rx="2" ry="2" />
<text  x="432.98" y="145.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_pyop2_kernel_uniform_extrusion (1,065,221 us, 10.01%)</title><rect x="14.6" y="119" width="118.1" height="15.0" fill="rgb(144.154824184406,154.410509973735,154.410509973735)" rx="2" ry="2" />
<text  x="17.59" y="129.5" >Parloop_Cells..</text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (4,940 us, 0.05%)</title><rect x="436.3" y="167" width="0.6" height="15.0" fill="rgb(137.218596259792,152.612228659946,152.612228659946)" rx="2" ry="2" />
<text  x="439.31" y="177.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (11,731 us, 0.11%)</title><rect x="133.4" y="103" width="1.3" height="15.0" fill="rgb(150.542453726233,159.214019160846,150.542453726233)" rx="2" ry="2" />
<text  x="136.38" y="113.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.solve (6,816,426 us, 64.04%)</title><rect x="434.3" y="87" width="755.7" height="15.0" fill="rgb(114.0493529499,114.0493529499,149.493423151594)" rx="2" ry="2" />
<text  x="437.33" y="97.5" >firedrake.variational_solver.NonlinearVariationalSolver.solve</text>
</g>
<g >
<title>firedrake.interpolation.make_interpolator (28,172 us, 0.26%)</title><rect x="438.0" y="151" width="3.1" height="15.0" fill="rgb(152.370269785235,152.370269785235,130.71746126691)" rx="2" ry="2" />
<text  x="441.01" y="161.5" ></text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (999,504 us, 9.39%)</title><rect x="1079.2" y="135" width="110.8" height="15.0" fill="rgb(136.751517524354,103.550763656157,136.751517524354)" rx="2" ry="2" />
<text  x="1082.19" y="145.5" >firedrake.ts..</text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (1,455 us, 0.01%)</title><rect x="1189.8" y="183" width="0.2" height="15.0" fill="rgb(154.960535691176,134.697440299017,134.697440299017)" rx="2" ry="2" />
<text  x="1192.84" y="193.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (2,220 us, 0.02%)</title><rect x="437.8" y="215" width="0.2" height="15.0" fill="rgb(149.472619518304,149.472619518304,116.675002281009)" rx="2" ry="2" />
<text  x="440.76" y="225.5" ></text>
</g>
<g >
<title>firedrake (10,644,012 us, 100.00%)</title><rect x="10.0" y="55" width="1180.0" height="15.0" fill="rgb(113.743562751014,146.526108861374,146.526108861374)" rx="2" ry="2" />
<text  x="13.00" y="65.5" >firedrake</text>
</g>
<g >
<title>HybridInit (794,035 us, 7.46%)</title><rect x="434.3" y="135" width="88.1" height="15.0" fill="rgb(145.868228957595,154.854726026043,154.854726026043)" rx="2" ry="2" />
<text  x="437.33" y="145.5" >HybridInit</text>
</g>
<g >
<title>perfsolve (6,816,426 us, 64.04%)</title><rect x="434.3" y="71" width="755.7" height="15.0" fill="rgb(114.550743850033,146.735378035194,146.735378035194)" rx="2" ry="2" />
<text  x="437.33" y="81.5" >perfsolve</text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (6,329 us, 0.06%)</title><rect x="132.7" y="151" width="0.7" height="15.0" fill="rgb(139.990279078079,160.931815033801,139.990279078079)" rx="2" ry="2" />
<text  x="135.68" y="161.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (3,235 us, 0.03%)</title><rect x="434.0" y="119" width="0.3" height="15.0" fill="rgb(154.075536868977,127.912449328826,127.912449328826)" rx="2" ry="2" />
<text  x="436.97" y="129.5" ></text>
</g>
<g >
<title>firedrake.utility_meshes.RectangleMesh (2,293 us, 0.02%)</title><rect x="430.6" y="87" width="0.3" height="15.0" fill="rgb(123.877005801069,123.877005801069,151.395549509884)" rx="2" ry="2" />
<text  x="433.62" y="97.5" ></text>
</g>
<g >
<title>CreateMesh (2,026 us, 0.02%)</title><rect x="134.7" y="71" width="0.2" height="15.0" fill="rgb(147.176176245413,155.193823471033,155.193823471033)" rx="2" ry="2" />
<text  x="137.68" y="81.5" ></text>
</g>
<g >
<title>firedrake.functionspace.make_scalar_element (1,329 us, 0.01%)</title><rect x="437.6" y="215" width="0.2" height="15.0" fill="rgb(154.664536893436,132.428116183007,132.428116183007)" rx="2" ry="2" />
<text  x="440.61" y="225.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.LinearVariationalProblem.__init__ (22,564 us, 0.21%)</title><rect x="430.9" y="71" width="2.5" height="15.0" fill="rgb(153.885396907559,153.885396907559,138.060000398169)" rx="2" ry="2" />
<text  x="433.87" y="81.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (727,186 us, 6.83%)</title><rect x="441.7" y="199" width="80.7" height="15.0" fill="rgb(152.512108287198,152.512108287198,131.404832468729)" rx="2" ry="2" />
<text  x="444.74" y="209.5" >pyop2.gl..</text>
</g>
<g >
<title>CreateFunctionSpace (6,329 us, 0.06%)</title><rect x="132.7" y="103" width="0.7" height="15.0" fill="rgb(152.646828514989,116.959018614913,116.959018614913)" rx="2" ry="2" />
<text  x="135.68" y="113.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (2,220 us, 0.02%)</title><rect x="437.8" y="247" width="0.2" height="15.0" fill="rgb(142.256985446279,117.65852520609,142.256985446279)" rx="2" ry="2" />
<text  x="440.76" y="257.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (10,391 us, 0.10%)</title><rect x="436.9" y="167" width="1.1" height="15.0" fill="rgb(150.031683371452,137.581188639347,150.031683371452)" rx="2" ry="2" />
<text  x="439.86" y="177.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalProblem.__init__ (11,330 us, 0.11%)</title><rect x="432.1" y="87" width="1.3" height="15.0" fill="rgb(136.991612251118,152.553380953993,152.553380953993)" rx="2" ry="2" />
<text  x="435.12" y="97.5" ></text>
</g>
<g >
<title>firedrake.assemble.allocate_matrix (7,085 us, 0.07%)</title><rect x="433.5" y="87" width="0.8" height="15.0" fill="rgb(152.261582984148,152.261582984148,130.190748307796)" rx="2" ry="2" />
<text  x="436.54" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (1,702 us, 0.02%)</title><rect x="436.1" y="215" width="0.2" height="15.0" fill="rgb(150.988238691654,150.988238691654,124.019925967248)" rx="2" ry="2" />
<text  x="439.12" y="225.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (10,017 us, 0.09%)</title><rect x="432.1" y="103" width="1.1" height="15.0" fill="rgb(142.500979094065,142.500979094065,155.000189502077)" rx="2" ry="2" />
<text  x="435.12" y="113.5" ></text>
</g>
<g >
<title>firedrake.utility_meshes.SquareMesh (2,293 us, 0.02%)</title><rect x="430.6" y="71" width="0.3" height="15.0" fill="rgb(127.561824448019,162.955051834043,127.561824448019)" rx="2" ry="2" />
<text  x="433.62" y="81.5" ></text>
</g>
<g >
<title>ParLoopExecute (727,186 us, 6.83%)</title><rect x="441.7" y="167" width="80.7" height="15.0" fill="rgb(155.262181715037,155.262181715037,144.732111388256)" rx="2" ry="2" />
<text  x="444.74" y="177.5" >ParLoopE..</text>
</g>
<g >
<title>firedrake.functionspace.VectorFunctionSpace (5,773 us, 0.05%)</title><rect x="430.0" y="71" width="0.6" height="15.0" fill="rgb(155.117474732462,135.90063961554,135.90063961554)" rx="2" ry="2" />
<text  x="432.98" y="81.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (10,391 us, 0.10%)</title><rect x="436.9" y="151" width="1.1" height="15.0" fill="rgb(133.677924529493,133.677924529493,153.292501521837)" rx="2" ry="2" />
<text  x="439.86" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (6,329 us, 0.06%)</title><rect x="132.7" y="135" width="0.7" height="15.0" fill="rgb(152.085785769399,112.657690898726,112.657690898726)" rx="2" ry="2" />
<text  x="135.68" y="145.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (7,682 us, 0.07%)</title><rect x="437.2" y="183" width="0.8" height="15.0" fill="rgb(149.601241375455,149.601241375455,117.298323588742)" rx="2" ry="2" />
<text  x="440.16" y="193.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (1,702 us, 0.02%)</title><rect x="436.1" y="231" width="0.2" height="15.0" fill="rgb(142.949956994165,142.949956994165,155.087088450483)" rx="2" ry="2" />
<text  x="439.12" y="241.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (2,747,382 us, 25.81%)</title><rect x="524.9" y="167" width="304.5" height="15.0" fill="rgb(126.628163054991,163.107043223606,126.628163054991)" rx="2" ry="2" />
<text  x="527.85" y="177.5" >pyop2.global_kernel.GlobalKernel.comp..</text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (2,220 us, 0.02%)</title><rect x="437.8" y="231" width="0.2" height="15.0" fill="rgb(126.670801908151,149.877615309521,149.877615309521)" rx="2" ry="2" />
<text  x="440.76" y="241.5" ></text>
</g>
<g >
<title>firedrake.mesh.MeshTopology._facets (2,445 us, 0.02%)</title><rect x="430.3" y="151" width="0.3" height="15.0" fill="rgb(109.240487079718,109.240487079718,148.562674918655)" rx="2" ry="2" />
<text  x="433.35" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (1,702 us, 0.02%)</title><rect x="436.1" y="199" width="0.2" height="15.0" fill="rgb(144.921698792238,154.609329316506,154.609329316506)" rx="2" ry="2" />
<text  x="439.12" y="209.5" ></text>
</g>
<g >
<title>CreateExtMesh (1,112,913 us, 10.46%)</title><rect x="10.0" y="71" width="123.4" height="15.0" fill="rgb(141.176028724234,160.738786021636,141.176028724234)" rx="2" ry="2" />
<text  x="13.00" y="81.5" >CreateExtMesh</text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (4,940 us, 0.05%)</title><rect x="436.3" y="199" width="0.6" height="15.0" fill="rgb(153.454574085706,153.454574085706,135.972166723037)" rx="2" ry="2" />
<text  x="439.31" y="209.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (5,773 us, 0.05%)</title><rect x="430.0" y="87" width="0.6" height="15.0" fill="rgb(146.87247565609,146.87247565609,155.846285610856)" rx="2" ry="2" />
<text  x="432.98" y="97.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.action (3,850 us, 0.04%)</title><rect x="433.5" y="119" width="0.5" height="15.0" fill="rgb(133.780084504211,95.9364665420399,133.780084504211)" rx="2" ry="2" />
<text  x="436.54" y="129.5" ></text>
</g>
<g >
<title>firedrake.matrix_free.operators.ImplicitMatrixContext.__init__ (7,085 us, 0.07%)</title><rect x="433.5" y="103" width="0.8" height="15.0" fill="rgb(140.960434547159,153.582334882597,153.582334882597)" rx="2" ry="2" />
<text  x="436.54" y="113.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (11,731 us, 0.11%)</title><rect x="133.4" y="119" width="1.3" height="15.0" fill="rgb(135.324601845803,161.691343885567,135.324601845803)" rx="2" ry="2" />
<text  x="136.38" y="129.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_form1_cell_integral_otherwise (2,252,998 us, 21.17%)</title><rect x="829.4" y="151" width="249.8" height="15.0" fill="rgb(139.753272461423,160.97039750628,139.753272461423)" rx="2" ry="2" />
<text  x="832.43" y="161.5" >Parloop_Cells_wrap_form1_cell_..</text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (6,202 us, 0.06%)</title><rect x="1189.3" y="151" width="0.7" height="15.0" fill="rgb(119.196198413965,147.939755144361,147.939755144361)" rx="2" ry="2" />
<text  x="1192.31" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspace.MixedFunctionSpace (1,160 us, 0.01%)</title><rect x="429.8" y="71" width="0.2" height="15.0" fill="rgb(144.382328285967,160.216830279029,144.382328285967)" rx="2" ry="2" />
<text  x="432.85" y="81.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.__init__ (8,603 us, 0.08%)</title><rect x="433.4" y="71" width="0.9" height="15.0" fill="rgb(143.94182948527,160.288539386119,143.94182948527)" rx="2" ry="2" />
<text  x="436.37" y="81.5" ></text>
</g>
<g >
<title>firedrake.functionspace.MixedFunctionSpace (1,702 us, 0.02%)</title><rect x="436.1" y="167" width="0.2" height="15.0" fill="rgb(136.49304969333,161.501131445272,136.49304969333)" rx="2" ry="2" />
<text  x="439.12" y="177.5" ></text>
</g>
<g >
<title>SNESSolve (6,816,426 us, 64.04%)</title><rect x="434.3" y="103" width="755.7" height="15.0" fill="rgb(141.67929027181,141.67929027181,154.841152955834)" rx="2" ry="2" />
<text  x="437.33" y="113.5" >SNESSolve</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (2,241,601 us, 21.06%)</title><rect x="830.7" y="167" width="248.5" height="15.0" fill="rgb(156.650356615116,147.652734049226,147.652734049226)" rx="2" ry="2" />
<text  x="833.69" y="177.5" >pyop2.global_kernel.GlobalKern..</text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (5,773 us, 0.05%)</title><rect x="430.0" y="119" width="0.6" height="15.0" fill="rgb(130.719859624424,130.719859624424,152.719972830534)" rx="2" ry="2" />
<text  x="432.98" y="129.5" ></text>
</g>
<g >
<title>firedrake.functionspace.VectorFunctionSpace (6,329 us, 0.06%)</title><rect x="132.7" y="87" width="0.7" height="15.0" fill="rgb(120.820350473855,120.820350473855,150.803938801391)" rx="2" ry="2" />
<text  x="135.68" y="97.5" ></text>
</g>
<g >
<title>Log_Event_form1_cell_integral_otherwise (1,546 us, 0.01%)</title><rect x="830.5" y="167" width="0.2" height="15.0" fill="rgb(143.70501860066,160.327089995241,143.70501860066)" rx="2" ry="2" />
<text  x="833.52" y="177.5" ></text>
</g>
<g >
<title>firedrake.extrusion_utils.make_extruded_coords (1,103,988 us, 10.37%)</title><rect x="10.3" y="87" width="122.4" height="15.0" fill="rgb(124.9467252118,149.430632462319,149.430632462319)" rx="2" ry="2" />
<text  x="13.29" y="97.5" >firedrake.ext..</text>
</g>
<g >
<title>CreateFunctionSpace (11,731 us, 0.11%)</title><rect x="133.4" y="71" width="1.3" height="15.0" fill="rgb(115.797064774175,147.058498274786,147.058498274786)" rx="2" ry="2" />
<text  x="136.38" y="81.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (5,773 us, 0.05%)</title><rect x="430.0" y="103" width="0.6" height="15.0" fill="rgb(136.649341542775,136.649341542775,153.86761449215)" rx="2" ry="2" />
<text  x="432.98" y="113.5" ></text>
</g>
<g >
<title>firedrake.parloops.par_loop (732,674 us, 6.88%)</title><rect x="441.1" y="151" width="81.3" height="15.0" fill="rgb(142.493750436006,153.97986122415,153.97986122415)" rx="2" ry="2" />
<text  x="444.13" y="161.5" >firedrak..</text>
</g>
<g >
<title>Parloop_Cells_wrap_form0_cell_integral_otherwise (2,765,344 us, 25.98%)</title><rect x="522.9" y="151" width="306.5" height="15.0" fill="rgb(144.141425974663,144.141425974663,155.317695349935)" rx="2" ry="2" />
<text  x="525.86" y="161.5" >Parloop_Cells_wrap_form0_cell_integra..</text>
</g>
<g >
<title>firedrake.__init__ (2,660,523 us, 25.00%)</title><rect x="134.9" y="71" width="294.9" height="15.0" fill="rgb(155.676570856016,140.187043229454,140.187043229454)" rx="2" ry="2" />
<text  x="137.90" y="81.5" >firedrake.__init__</text>
</g>
</g>
</svg>
