<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="299" onload="init(evt)" viewBox="0 0 1200 299" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:13px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:18px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 13 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (1 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="299.0" fill="url(#background)"  />
<text id="title" x="600.00" y="26" >Firedrake example</text>
<text id="details" x="10.00" y="281" > </text>
<text id="unzoom" x="10.00" y="26" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="26" >Search</text>
<text id="ignorecase" x="1174.00" y="26" >ic</text>
<text id="matched" x="1090.00" y="281" > </text>
<g id="frames">
<g >
<title>firedrake.utility_meshes.SquareMesh (2,451 us, 0.08%)</title><rect x="1111.7" y="71" width="0.9" height="15.0" fill="rgb(135.584875451164,135.584875451164,153.661588797)" rx="2" ry="2" />
<text  x="1114.70" y="81.5" ></text>
</g>
<g >
<title>ParLoopExecute (66,848 us, 2.18%)</title><rect x="24.5" y="103" width="25.7" height="15.0" fill="rgb(134.432371448563,97.6079518369428,134.432371448563)" rx="2" ry="2" />
<text  x="27.45" y="113.5" >P..</text>
</g>
<g >
<title>CreateFunctionSpace (15,315 us, 0.50%)</title><rect x="53.7" y="71" width="5.9" height="15.0" fill="rgb(126.518706098667,163.124861797891,126.518706098667)" rx="2" ry="2" />
<text  x="56.71" y="81.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (6,934 us, 0.23%)</title><rect x="1109.0" y="135" width="2.7" height="15.0" fill="rgb(130.548828337705,162.468795386885,130.548828337705)" rx="2" ry="2" />
<text  x="1112.03" y="145.5" ></text>
</g>
<g >
<title>Mesh: numbering (974 us, 0.03%)</title><rect x="60.1" y="87" width="0.4" height="15.0" fill="rgb(143.512955022982,160.358356159049,143.512955022982)" rx="2" ry="2" />
<text  x="63.13" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (2,116 us, 0.07%)</title><rect x="1145.1" y="215" width="0.8" height="15.0" fill="rgb(156.152811761045,143.838223501344,143.838223501344)" rx="2" ry="2" />
<text  x="1148.07" y="225.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (1,578 us, 0.05%)</title><rect x="1189.4" y="183" width="0.6" height="15.0" fill="rgb(153.462016758524,153.462016758524,136.008235060539)" rx="2" ry="2" />
<text  x="1192.39" y="193.5" ></text>
</g>
<g >
<title>firedrake.functionspace.VectorFunctionSpace (7,253 us, 0.24%)</title><rect x="50.2" y="87" width="2.8" height="15.0" fill="rgb(118.424760878618,118.424760878618,150.340276299087)" rx="2" ry="2" />
<text  x="53.23" y="97.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (1,420 us, 0.05%)</title><rect x="1169.8" y="167" width="0.6" height="15.0" fill="rgb(132.391620587989,151.360790522812,151.360790522812)" rx="2" ry="2" />
<text  x="1172.84" y="177.5" ></text>
</g>
<g >
<title>firedrake (3,059,760 us, 100.00%)</title><rect x="10.0" y="55" width="1180.0" height="15.0" fill="rgb(136.67207886196,103.347202083773,136.67207886196)" rx="2" ry="2" />
<text  x="13.00" y="65.5" >firedrake</text>
</g>
<g >
<title>CreateFunctionSpace (1,164 us, 0.04%)</title><rect x="1189.6" y="199" width="0.4" height="15.0" fill="rgb(113.412315286561,113.412315286561,149.370125539334)" rx="2" ry="2" />
<text  x="1192.55" y="209.5" ></text>
</g>
<g >
<title>firedrake.function.Function.__init__ (575 us, 0.02%)</title><rect x="1129.5" y="119" width="0.2" height="15.0" fill="rgb(111.199594974666,145.866561660099,145.866561660099)" rx="2" ry="2" />
<text  x="1132.49" y="129.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (4,499 us, 0.15%)</title><rect x="1144.2" y="199" width="1.7" height="15.0" fill="rgb(146.949161617456,155.134967826748,155.134967826748)" rx="2" ry="2" />
<text  x="1147.15" y="209.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (7,253 us, 0.24%)</title><rect x="50.2" y="119" width="2.8" height="15.0" fill="rgb(153.792124388853,125.73962031454,125.73962031454)" rx="2" ry="2" />
<text  x="53.23" y="129.5" ></text>
</g>
<g >
<title>firedrake.interpolation.make_interpolator (32,089 us, 1.05%)</title><rect x="1146.5" y="151" width="12.4" height="15.0" fill="rgb(149.737730426061,159.345020628316,149.737730426061)" rx="2" ry="2" />
<text  x="1149.50" y="161.5" ></text>
</g>
<g >
<title>firedrake.mesh._Facets.__init__ (1,031 us, 0.03%)</title><rect x="1111.3" y="167" width="0.4" height="15.0" fill="rgb(155.220329365033,155.220329365033,144.529288461312)" rx="2" ry="2" />
<text  x="1114.30" y="177.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (501 us, 0.02%)</title><rect x="1189.8" y="215" width="0.2" height="15.0" fill="rgb(145.704101776609,160.001657850319,145.704101776609)" rx="2" ry="2" />
<text  x="1192.81" y="225.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (1,436 us, 0.05%)</title><rect x="1140.1" y="199" width="0.6" height="15.0" fill="rgb(152.296901134763,152.296901134763,130.361905499235)" rx="2" ry="2" />
<text  x="1143.13" y="209.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (7,652 us, 0.25%)</title><rect x="1139.5" y="151" width="2.9" height="15.0" fill="rgb(135.298639237052,152.114462024421,152.114462024421)" rx="2" ry="2" />
<text  x="1142.47" y="161.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalProblem.__init__ (20,485 us, 0.67%)</title><rect x="1120.6" y="87" width="7.9" height="15.0" fill="rgb(137.410972594291,161.351702135813,137.410972594291)" rx="2" ry="2" />
<text  x="1123.63" y="97.5" ></text>
</g>
<g >
<title>firedrake.mesh.ExtrudedMeshTopology.__init__ (844 us, 0.03%)</title><rect x="53.0" y="87" width="0.4" height="15.0" fill="rgb(149.052022232502,149.052022232502,114.63672312674)" rx="2" ry="2" />
<text  x="56.03" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (6,934 us, 0.23%)</title><rect x="1109.0" y="103" width="2.7" height="15.0" fill="rgb(125.74726287894,149.63817926491,149.63817926491)" rx="2" ry="2" />
<text  x="1112.03" y="113.5" ></text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (38,064 us, 1.24%)</title><rect x="1175.3" y="135" width="14.7" height="15.0" fill="rgb(104.727523658543,144.188617244808,144.188617244808)" rx="2" ry="2" />
<text  x="1178.32" y="145.5" ></text>
</g>
<g >
<title>CreateMesh (528 us, 0.02%)</title><rect x="1112.2" y="119" width="0.2" height="15.0" fill="rgb(123.896440163015,163.551742299044,123.896440163015)" rx="2" ry="2" />
<text  x="1115.17" y="129.5" ></text>
</g>
<g >
<title>SNESFunctionEval (75,318 us, 2.46%)</title><rect x="1161.0" y="119" width="29.0" height="15.0" fill="rgb(151.311264715343,151.311264715343,125.585359774355)" rx="2" ry="2" />
<text  x="1163.95" y="129.5" >S..</text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (3,884 us, 0.13%)</title><rect x="1188.5" y="167" width="1.5" height="15.0" fill="rgb(147.798625839451,159.660688816834,147.798625839451)" rx="2" ry="2" />
<text  x="1191.50" y="177.5" ></text>
</g>
<g >
<title>firedrake.functionspace.VectorFunctionSpace (6,934 us, 0.23%)</title><rect x="1109.0" y="71" width="2.7" height="15.0" fill="rgb(149.006220335698,149.006220335698,114.414760088385)" rx="2" ry="2" />
<text  x="1112.03" y="81.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (5,462 us, 0.18%)</title><rect x="1132.9" y="119" width="2.1" height="15.0" fill="rgb(142.348411240167,142.348411240167,154.970660240032)" rx="2" ry="2" />
<text  x="1135.93" y="129.5" ></text>
</g>
<g >
<title>PCSetUp (66,810 us, 2.18%)</title><rect x="1135.2" y="119" width="25.8" height="15.0" fill="rgb(143.794755882236,121.599061948229,143.794755882236)" rx="2" ry="2" />
<text  x="1138.19" y="129.5" >P..</text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (6,492 us, 0.21%)</title><rect x="1143.7" y="183" width="2.5" height="15.0" fill="rgb(133.161566969796,133.161566969796,153.192561348993)" rx="2" ry="2" />
<text  x="1146.65" y="193.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (1,436 us, 0.05%)</title><rect x="1140.1" y="215" width="0.6" height="15.0" fill="rgb(124.189176384615,163.504087565295,124.189176384615)" rx="2" ry="2" />
<text  x="1143.13" y="225.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (2,064 us, 0.07%)</title><rect x="1139.9" y="183" width="0.8" height="15.0" fill="rgb(151.170619561023,151.170619561023,124.903771718805)" rx="2" ry="2" />
<text  x="1142.89" y="193.5" ></text>
</g>
<g >
<title>HybridInit (66,810 us, 2.18%)</title><rect x="1135.2" y="135" width="25.8" height="15.0" fill="rgb(110.897757541604,145.788307510786,145.788307510786)" rx="2" ry="2" />
<text  x="1138.19" y="145.5" >H..</text>
</g>
<g >
<title>ParLoopExecute (1,193 us, 0.04%)</title><rect x="1160.5" y="167" width="0.5" height="15.0" fill="rgb(142.243713696137,117.624516346352,142.243713696137)" rx="2" ry="2" />
<text  x="1163.49" y="177.5" ></text>
</g>
<g >
<title>CreateMesh (928 us, 0.03%)</title><rect x="1112.0" y="103" width="0.4" height="15.0" fill="rgb(145.340492022046,160.060850135946,145.340492022046)" rx="2" ry="2" />
<text  x="1115.02" y="113.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.__init__ (17,275 us, 0.56%)</title><rect x="1128.5" y="71" width="6.7" height="15.0" fill="rgb(152.733395086298,152.733395086298,132.477222341289)" rx="2" ry="2" />
<text  x="1131.53" y="81.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (7,370 us, 0.24%)</title><rect x="1187.2" y="151" width="2.8" height="15.0" fill="rgb(107.937655775567,145.020873719591,145.020873719591)" rx="2" ry="2" />
<text  x="1190.16" y="161.5" ></text>
</g>
<g >
<title>SNESSolve (142,128 us, 4.65%)</title><rect x="1135.2" y="103" width="54.8" height="15.0" fill="rgb(123.601053098681,163.599828565331,123.601053098681)" rx="2" ry="2" />
<text  x="1138.19" y="113.5" >SNESS..</text>
</g>
<g >
<title>firedrake.functionspace.MixedFunctionSpace (1,097 us, 0.04%)</title><rect x="1108.6" y="71" width="0.4" height="15.0" fill="rgb(154.165443506386,128.601733548962,128.601733548962)" rx="2" ry="2" />
<text  x="1111.60" y="81.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (1,436 us, 0.05%)</title><rect x="1140.1" y="231" width="0.6" height="15.0" fill="rgb(120.626325141012,148.310528740262,148.310528740262)" rx="2" ry="2" />
<text  x="1143.13" y="241.5" ></text>
</g>
<g >
<title>perfsolve (142,128 us, 4.65%)</title><rect x="1135.2" y="71" width="54.8" height="15.0" fill="rgb(131.384542908726,131.384542908726,152.848621208141)" rx="2" ry="2" />
<text  x="1138.19" y="81.5" >perfs..</text>
</g>
<g >
<title>firedrake.function.Function.__init__ (891 us, 0.03%)</title><rect x="1146.2" y="151" width="0.3" height="15.0" fill="rgb(149.380816514076,149.380816514076,116.230110798983)" rx="2" ry="2" />
<text  x="1149.15" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (7,253 us, 0.24%)</title><rect x="50.2" y="135" width="2.8" height="15.0" fill="rgb(152.622182483073,116.770065703562,116.770065703562)" rx="2" ry="2" />
<text  x="53.23" y="145.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.action (8,334 us, 0.27%)</title><rect x="1129.7" y="119" width="3.2" height="15.0" fill="rgb(155.6821140037,140.229540695033,140.229540695033)" rx="2" ry="2" />
<text  x="1132.71" y="129.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (501 us, 0.02%)</title><rect x="1189.8" y="231" width="0.2" height="15.0" fill="rgb(110.064589232363,110.064589232363,148.722178561103)" rx="2" ry="2" />
<text  x="1192.81" y="241.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_form0_cell_integral_otherwise (20,441 us, 0.67%)</title><rect x="1162.5" y="151" width="7.9" height="15.0" fill="rgb(106.361910292283,144.612347112814,144.612347112814)" rx="2" ry="2" />
<text  x="1165.50" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (1,572 us, 0.05%)</title><rect x="1145.3" y="231" width="0.6" height="15.0" fill="rgb(144.427400718647,144.427400718647,155.373045300383)" rx="2" ry="2" />
<text  x="1148.28" y="241.5" ></text>
</g>
<g >
<title>firedrake.functionspace.make_scalar_element (770 us, 0.03%)</title><rect x="54.0" y="87" width="0.3" height="15.0" fill="rgb(152.981980548692,152.981980548692,133.681905735971)" rx="2" ry="2" />
<text  x="56.99" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (7,253 us, 0.24%)</title><rect x="50.2" y="151" width="2.8" height="15.0" fill="rgb(136.34976869843,152.386977069963,152.386977069963)" rx="2" ry="2" />
<text  x="53.23" y="161.5" ></text>
</g>
<g >
<title>firedrake.assemble.allocate_matrix (457 us, 0.01%)</title><rect x="1142.4" y="151" width="0.2" height="15.0" fill="rgb(143.628455648505,160.339553731639,143.628455648505)" rx="2" ry="2" />
<text  x="1145.42" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (4,049 us, 0.13%)</title><rect x="1140.9" y="183" width="1.5" height="15.0" fill="rgb(153.936707124678,126.848087955863,126.848087955863)" rx="2" ry="2" />
<text  x="1143.86" y="193.5" ></text>
</g>
<g >
<title>all (3,059,760 us, 100%)</title><rect x="10.0" y="39" width="1180.0" height="15.0" fill="rgb(122.18072335205,148.71352086905,148.71352086905)" rx="2" ry="2" />
<text  x="13.00" y="49.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (1,193 us, 0.04%)</title><rect x="1160.5" y="183" width="0.5" height="15.0" fill="rgb(134.0769815748,161.894444859916,134.0769815748)" rx="2" ry="2" />
<text  x="1163.49" y="193.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (13,270 us, 0.43%)</title><rect x="54.5" y="119" width="5.1" height="15.0" fill="rgb(127.845457437136,127.845457437136,152.163636923317)" rx="2" ry="2" />
<text  x="57.50" y="129.5" ></text>
</g>
<g >
<title>CreateExtMesh (113,335 us, 3.70%)</title><rect x="10.0" y="71" width="43.7" height="15.0" fill="rgb(116.892077742476,147.342390525827,147.342390525827)" rx="2" ry="2" />
<text  x="13.00" y="81.5" >Cre..</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (1,319 us, 0.04%)</title><rect x="1174.8" y="167" width="0.5" height="15.0" fill="rgb(149.490999717065,149.490999717065,116.764075551929)" rx="2" ry="2" />
<text  x="1177.81" y="177.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (6,934 us, 0.23%)</title><rect x="1109.0" y="119" width="2.7" height="15.0" fill="rgb(154.680048285215,132.547036853313,132.547036853313)" rx="2" ry="2" />
<text  x="1112.03" y="129.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.solve (142,128 us, 4.65%)</title><rect x="1135.2" y="87" width="54.8" height="15.0" fill="rgb(152.356717536264,114.734834444692,114.734834444692)" rx="2" ry="2" />
<text  x="1138.19" y="97.5" >fired..</text>
</g>
<g >
<title>firedrake.ufl_expr.action (20,150 us, 0.66%)</title><rect x="1112.9" y="87" width="7.7" height="15.0" fill="rgb(149.400888537113,149.400888537113,116.327382910624)" rx="2" ry="2" />
<text  x="1115.86" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (501 us, 0.02%)</title><rect x="1189.8" y="247" width="0.2" height="15.0" fill="rgb(135.995827877525,135.995827877525,153.741127976295)" rx="2" ry="2" />
<text  x="1192.81" y="257.5" ></text>
</g>
<g >
<title>firedrake.functionspace.MixedFunctionSpace (3,124 us, 0.10%)</title><rect x="1139.7" y="167" width="1.2" height="15.0" fill="rgb(130.700184077828,150.922269946104,150.922269946104)" rx="2" ry="2" />
<text  x="1142.66" y="177.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.WithGeometry.split (692 us, 0.02%)</title><rect x="1145.9" y="199" width="0.3" height="15.0" fill="rgb(135.781559310135,135.781559310135,153.699656640671)" rx="2" ry="2" />
<text  x="1148.89" y="209.5" ></text>
</g>
<g >
<title>firedrake.mesh._Facets.__init__ (628 us, 0.02%)</title><rect x="52.8" y="167" width="0.2" height="15.0" fill="rgb(154.479102216296,131.006450324939,131.006450324939)" rx="2" ry="2" />
<text  x="55.79" y="177.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (4,049 us, 0.13%)</title><rect x="1140.9" y="199" width="1.5" height="15.0" fill="rgb(128.258855474255,128.258855474255,152.24364944663)" rx="2" ry="2" />
<text  x="1143.86" y="209.5" ></text>
</g>
<g >
<title>firedrake.matrix_free.operators.ImplicitMatrixContext.__init__ (457 us, 0.01%)</title><rect x="1142.4" y="167" width="0.2" height="15.0" fill="rgb(122.960011975222,122.960011975222,151.218066833914)" rx="2" ry="2" />
<text  x="1145.42" y="177.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (13,801 us, 0.45%)</title><rect x="54.3" y="87" width="5.3" height="15.0" fill="rgb(132.252978604407,132.252978604407,153.016705536337)" rx="2" ry="2" />
<text  x="57.29" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (4,049 us, 0.13%)</title><rect x="1140.9" y="167" width="1.5" height="15.0" fill="rgb(147.769755671929,147.769755671929,108.422662102424)" rx="2" ry="2" />
<text  x="1143.86" y="177.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (1,572 us, 0.05%)</title><rect x="1145.3" y="247" width="0.6" height="15.0" fill="rgb(124.527074844599,163.449080839251,124.527074844599)" rx="2" ry="2" />
<text  x="1148.28" y="257.5" ></text>
</g>
<g >
<title>ParLoopExecute (33,806 us, 1.10%)</title><rect x="1162.3" y="135" width="13.0" height="15.0" fill="rgb(151.112274365802,151.112274365802,124.621021926581)" rx="2" ry="2" />
<text  x="1165.28" y="145.5" ></text>
</g>
<g >
<title>firedrake.__init__ (2,716,627 us, 88.79%)</title><rect x="60.9" y="71" width="1047.7" height="15.0" fill="rgb(150.11354495339,137.790958943063,150.11354495339)" rx="2" ry="2" />
<text  x="63.93" y="81.5" >firedrake.__init__</text>
</g>
<g >
<title>Log_Event_form0_cell_integral_otherwise (8,693 us, 0.28%)</title><rect x="1166.5" y="167" width="3.3" height="15.0" fill="rgb(127.202284059425,150.015406978369,150.015406978369)" rx="2" ry="2" />
<text  x="1169.49" y="177.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.derivative (2,446 us, 0.08%)</title><rect x="1127.6" y="103" width="0.9" height="15.0" fill="rgb(135.780959506096,152.239508020099,152.239508020099)" rx="2" ry="2" />
<text  x="1130.58" y="113.5" ></text>
</g>
<g >
<title>firedrake.mesh.MeshTopology._facets (3,140 us, 0.10%)</title><rect x="1110.5" y="151" width="1.2" height="15.0" fill="rgb(156.474503553128,146.304527240646,146.304527240646)" rx="2" ry="2" />
<text  x="1113.49" y="161.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (7,253 us, 0.24%)</title><rect x="50.2" y="103" width="2.8" height="15.0" fill="rgb(133.550544088176,151.661252171009,151.661252171009)" rx="2" ry="2" />
<text  x="53.23" y="113.5" ></text>
</g>
<g >
<title>firedrake.utility_meshes.RectangleMesh (2,451 us, 0.08%)</title><rect x="1111.7" y="87" width="0.9" height="15.0" fill="rgb(136.185394259395,152.344361474658,152.344361474658)" rx="2" ry="2" />
<text  x="1114.70" y="97.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (9,215 us, 0.30%)</title><rect x="1142.6" y="151" width="3.6" height="15.0" fill="rgb(132.466944500835,162.156543918469,132.466944500835)" rx="2" ry="2" />
<text  x="1145.60" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (13,270 us, 0.43%)</title><rect x="54.5" y="103" width="5.1" height="15.0" fill="rgb(155.595525692075,155.595525692075,146.34754758467)" rx="2" ry="2" />
<text  x="57.50" y="113.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (475 us, 0.02%)</title><rect x="1108.8" y="87" width="0.2" height="15.0" fill="rgb(147.547253836812,147.547253836812,155.976887839383)" rx="2" ry="2" />
<text  x="1111.84" y="97.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (17,447 us, 0.57%)</title><rect x="1120.9" y="103" width="6.7" height="15.0" fill="rgb(146.000763718957,159.953364045751,146.000763718957)" rx="2" ry="2" />
<text  x="1123.85" y="113.5" ></text>
</g>
<g >
<title>Log_Event_form1_cell_integral_otherwise (1,549 us, 0.05%)</title><rect x="1174.2" y="167" width="0.6" height="15.0" fill="rgb(134.781631621762,151.980423013049,151.980423013049)" rx="2" ry="2" />
<text  x="1177.21" y="177.5" ></text>
</g>
<g >
<title>firedrake.function.Function.split (1,625 us, 0.05%)</title><rect x="1127.9" y="119" width="0.6" height="15.0" fill="rgb(154.490769219507,131.095897349552,131.095897349552)" rx="2" ry="2" />
<text  x="1130.90" y="129.5" ></text>
</g>
<g >
<title>firedrake.solving_utils._SNESContext.__init__ (402 us, 0.01%)</title><rect x="1135.0" y="87" width="0.2" height="15.0" fill="rgb(141.305232497226,153.671726943725,153.671726943725)" rx="2" ry="2" />
<text  x="1138.03" y="97.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (6,934 us, 0.23%)</title><rect x="1109.0" y="87" width="2.7" height="15.0" fill="rgb(138.21262170506,138.21262170506,154.170184846141)" rx="2" ry="2" />
<text  x="1112.03" y="97.5" ></text>
</g>
<g >
<title>CreateMesh (2,310 us, 0.08%)</title><rect x="59.6" y="71" width="0.9" height="15.0" fill="rgb(150.557396228846,150.557396228846,121.931997109021)" rx="2" ry="2" />
<text  x="62.61" y="81.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.LinearVariationalProblem.__init__ (41,177 us, 1.35%)</title><rect x="1112.6" y="71" width="15.9" height="15.0" fill="rgb(153.919062315121,153.919062315121,138.223148142512)" rx="2" ry="2" />
<text  x="1115.65" y="81.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (8,800 us, 0.29%)</title><rect x="1142.8" y="167" width="3.4" height="15.0" fill="rgb(126.811988934561,149.914219353405,149.914219353405)" rx="2" ry="2" />
<text  x="1145.76" y="177.5" ></text>
</g>
<g >
<title>firedrake.parloops.par_loop (5,394 us, 0.18%)</title><rect x="1158.9" y="151" width="2.1" height="15.0" fill="rgb(116.094787575311,116.094787575311,149.889313724254)" rx="2" ry="2" />
<text  x="1161.87" y="161.5" ></text>
</g>
<g >
<title>firedrake.extrusion_utils.make_extruded_coords (103,709 us, 3.39%)</title><rect x="10.2" y="87" width="40.0" height="15.0" fill="rgb(138.271375188091,138.271375188091,154.181556488018)" rx="2" ry="2" />
<text  x="13.24" y="97.5" >fir..</text>
</g>
<g >
<title>Parloop_Cells_wrap_form1_cell_integral_otherwise (12,797 us, 0.42%)</title><rect x="1170.4" y="151" width="4.9" height="15.0" fill="rgb(149.171387877113,149.171387877113,115.215187404469)" rx="2" ry="2" />
<text  x="1173.39" y="161.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (65,782 us, 2.15%)</title><rect x="24.9" y="135" width="25.3" height="15.0" fill="rgb(156.144596958606,143.775243349313,143.775243349313)" rx="2" ry="2" />
<text  x="27.86" y="145.5" >p..</text>
</g>
<g >
<title>firedrake.functionspace.make_scalar_element (1,099 us, 0.04%)</title><rect x="1144.6" y="215" width="0.5" height="15.0" fill="rgb(145.966035703465,154.880083330528,154.880083330528)" rx="2" ry="2" />
<text  x="1147.65" y="225.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_pyop2_kernel_uniform_extrusion (66,378 us, 2.17%)</title><rect x="24.6" y="119" width="25.6" height="15.0" fill="rgb(106.80449256708,144.727090665539,144.727090665539)" rx="2" ry="2" />
<text  x="27.63" y="129.5" >P..</text>
</g>
<g >
<title>firedrake.matrix_free.operators.ImplicitMatrixContext.__init__ (14,371 us, 0.47%)</title><rect x="1129.5" y="103" width="5.5" height="15.0" fill="rgb(106.487465296172,144.644898410119,144.644898410119)" rx="2" ry="2" />
<text  x="1132.49" y="113.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (454 us, 0.01%)</title><rect x="1140.7" y="183" width="0.2" height="15.0" fill="rgb(137.040980318675,161.411933436495,137.040980318675)" rx="2" ry="2" />
<text  x="1143.69" y="193.5" ></text>
</g>
<g >
<title>PetscBarrier (1,111 us, 0.04%)</title><rect x="60.5" y="71" width="0.4" height="15.0" fill="rgb(133.078777000563,94.1393660639419,133.078777000563)" rx="2" ry="2" />
<text  x="63.50" y="81.5" ></text>
</g>
<g >
<title>firedrake.assemble.allocate_matrix (14,371 us, 0.47%)</title><rect x="1129.5" y="87" width="5.5" height="15.0" fill="rgb(132.657836231075,132.657836231075,153.095065076982)" rx="2" ry="2" />
<text  x="1132.49" y="97.5" ></text>
</g>
<g >
<title>firedrake.mesh.make_mesh_from_coordinates (919 us, 0.03%)</title><rect x="53.4" y="87" width="0.3" height="15.0" fill="rgb(147.859239658793,147.859239658793,108.856315269537)" rx="2" ry="2" />
<text  x="56.35" y="97.5" ></text>
</g>
<g >
<title>firedrake.mesh._from_cell_list (698 us, 0.02%)</title><rect x="1112.4" y="103" width="0.2" height="15.0" fill="rgb(110.269663261793,110.269663261793,148.761870308734)" rx="2" ry="2" />
<text  x="1115.38" y="113.5" ></text>
</g>
<g >
<title>CreateMesh (547 us, 0.02%)</title><rect x="59.9" y="87" width="0.2" height="15.0" fill="rgb(142.578056493357,160.510548942942,142.578056493357)" rx="2" ry="2" />
<text  x="62.92" y="97.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (1,193 us, 0.04%)</title><rect x="1160.5" y="199" width="0.5" height="15.0" fill="rgb(130.527732676835,162.472229564236,130.527732676835)" rx="2" ry="2" />
<text  x="1163.49" y="209.5" ></text>
</g>
</g>
</svg>
