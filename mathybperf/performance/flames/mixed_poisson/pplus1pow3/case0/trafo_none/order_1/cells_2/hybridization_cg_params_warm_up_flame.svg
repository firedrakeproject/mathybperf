<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="267" onload="init(evt)" viewBox="0 0 1200 267" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:13px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:18px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 13 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (1 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="267.0" fill="url(#background)"  />
<text id="title" x="600.00" y="26" >Firedrake example</text>
<text id="details" x="10.00" y="249" > </text>
<text id="unzoom" x="10.00" y="26" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="26" >Search</text>
<text id="ignorecase" x="1174.00" y="26" >ic</text>
<text id="matched" x="1090.00" y="249" > </text>
<g id="frames">
<g >
<title>SNESFunctionEval (29,450,406 us, 13.36%)</title><rect x="1032.3" y="103" width="157.7" height="15.0" fill="rgb(132.690742202942,162.120111734405,132.690742202942)" rx="2" ry="2" />
<text  x="1035.33" y="113.5" >SNESFunctionEval</text>
</g>
<g >
<title>ParLoopExecute (47,596,685 us, 21.60%)</title><rect x="729.5" y="151" width="254.8" height="15.0" fill="rgb(136.008808164992,152.298579894628,152.298579894628)" rx="2" ry="2" />
<text  x="732.46" y="161.5" >ParLoopExecute</text>
</g>
<g >
<title>all (220,405,989 us, 100%)</title><rect x="10.0" y="39" width="1180.0" height="15.0" fill="rgb(151.316573561142,151.316573561142,125.611087257842)" rx="2" ry="2" />
<text  x="13.00" y="49.5" ></text>
</g>
<g >
<title>PetscBarrier (36,108 us, 0.02%)</title><rect x="28.2" y="71" width="0.2" height="15.0" fill="rgb(142.642467600758,154.018417526122,154.018417526122)" rx="2" ry="2" />
<text  x="31.18" y="81.5" ></text>
</g>
<g >
<title>CreateMesh (26,495 us, 0.01%)</title><rect x="28.0" y="71" width="0.2" height="15.0" fill="rgb(118.57206672849,147.777943225905,147.777943225905)" rx="2" ry="2" />
<text  x="31.03" y="81.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_form1_cell_integral_otherwise (5,151,436 us, 2.34%)</title><rect x="1141.5" y="135" width="27.6" height="15.0" fill="rgb(136.063362815249,101.787367214076,136.063362815249)" rx="2" ry="2" />
<text  x="1144.50" y="145.5" >P..</text>
</g>
<g >
<title>KSPSolve (124,399,384 us, 56.44%)</title><rect x="52.0" y="103" width="666.0" height="15.0" fill="rgb(131.309835463805,131.309835463805,152.834161702672)" rx="2" ry="2" />
<text  x="54.97" y="113.5" >KSPSolve</text>
</g>
<g >
<title>SCBackSub (74,981,159 us, 34.02%)</title><rect x="52.0" y="135" width="401.4" height="15.0" fill="rgb(153.565063658004,123.99882137803,123.99882137803)" rx="2" ry="2" />
<text  x="54.97" y="145.5" >SCBackSub</text>
</g>
<g >
<title>HybridRHS (47,447,410 us, 21.53%)</title><rect x="463.8" y="151" width="254.0" height="15.0" fill="rgb(139.843144823562,111.473058610377,139.843144823562)" rx="2" ry="2" />
<text  x="466.81" y="161.5" >HybridRHS</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (1,945,785 us, 0.88%)</title><rect x="453.4" y="215" width="10.4" height="15.0" fill="rgb(123.693172581334,163.584832370481,123.693172581334)" rx="2" ry="2" />
<text  x="456.40" y="225.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (22,852 us, 0.01%)</title><rect x="1023.4" y="135" width="0.1" height="15.0" fill="rgb(143.804064425067,143.804064425067,155.252399566142)" rx="2" ry="2" />
<text  x="1026.37" y="145.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.LinearVariationalProblem.__init__ (92,044 us, 0.04%)</title><rect x="51.3" y="71" width="0.5" height="15.0" fill="rgb(134.207434233874,151.831557023597,151.831557023597)" rx="2" ry="2" />
<text  x="54.34" y="81.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_wrap_slate_loopy_knl_14 (25,864,610 us, 11.73%)</title><rect x="71.0" y="167" width="138.5" height="15.0" fill="rgb(124.980585231758,163.375253566923,124.980585231758)" rx="2" ry="2" />
<text  x="74.04" y="177.5" >Parloop_Cells_wr..</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (25,777,798 us, 11.70%)</title><rect x="71.5" y="183" width="138.0" height="15.0" fill="rgb(129.959365297065,162.564754486524,129.959365297065)" rx="2" ry="2" />
<text  x="74.51" y="193.5" >pyop2.global_ke..</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (47,374,719 us, 21.49%)</title><rect x="730.6" y="183" width="253.7" height="15.0" fill="rgb(140.196789928357,112.379274191414,140.196789928357)" rx="2" ry="2" />
<text  x="733.65" y="193.5" >pyop2.global_kernel.GlobalKerne..</text>
</g>
<g >
<title>ParLoopExecute (2,037,015 us, 0.92%)</title><rect x="60.1" y="183" width="10.9" height="15.0" fill="rgb(125.095401632079,125.095401632079,151.631368057822)" rx="2" ry="2" />
<text  x="63.14" y="193.5" ></text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (5,731,452 us, 2.60%)</title><rect x="399.1" y="167" width="30.7" height="15.0" fill="rgb(131.02521526886,162.391244026,131.02521526886)" rx="2" ry="2" />
<text  x="402.10" y="177.5" >fi..</text>
</g>
<g >
<title>Parloop_Cells_wrap_wrap_slate_loopy_knl_7 (33,337,495 us, 15.13%)</title><rect x="220.6" y="183" width="178.5" height="15.0" fill="rgb(154.659240859124,132.387513253286,132.387513253286)" rx="2" ry="2" />
<text  x="223.62" y="193.5" >Parloop_Cells_wrap_wr..</text>
</g>
<g >
<title>firedrake.assemble.allocate_matrix (25,458 us, 0.01%)</title><rect x="51.8" y="87" width="0.2" height="15.0" fill="rgb(148.824154308345,148.824154308345,113.532440109672)" rx="2" ry="2" />
<text  x="54.83" y="97.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.__init__ (25,458 us, 0.01%)</title><rect x="51.8" y="71" width="0.2" height="15.0" fill="rgb(155.846779324646,155.846779324646,147.565161342515)" rx="2" ry="2" />
<text  x="54.83" y="81.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_form0_cell_integral_otherwise (20,390,674 us, 9.25%)</title><rect x="1032.3" y="135" width="109.2" height="15.0" fill="rgb(147.647564491541,147.647564491541,107.830504843622)" rx="2" ry="2" />
<text  x="1035.33" y="145.5" >Parloop_Cell..</text>
</g>
<g >
<title>firedrake.extrusion_utils.make_extruded_coords (1,957,913 us, 0.89%)</title><rect x="17.1" y="87" width="10.5" height="15.0" fill="rgb(152.994748285603,119.626403522958,119.626403522958)" rx="2" ry="2" />
<text  x="20.10" y="97.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (1,872,299 us, 0.85%)</title><rect x="17.6" y="135" width="10.0" height="15.0" fill="rgb(148.08375811099,148.08375811099,109.944366230181)" rx="2" ry="2" />
<text  x="20.56" y="145.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (22,852 us, 0.01%)</title><rect x="1023.4" y="167" width="0.1" height="15.0" fill="rgb(135.657963621798,135.657963621798,153.675734894542)" rx="2" ry="2" />
<text  x="1026.37" y="177.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (22,852 us, 0.01%)</title><rect x="1023.4" y="151" width="0.1" height="15.0" fill="rgb(113.93284099323,146.575180998245,146.575180998245)" rx="2" ry="2" />
<text  x="1026.37" y="161.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.action (51,720 us, 0.02%)</title><rect x="51.3" y="87" width="0.3" height="15.0" fill="rgb(152.690961550597,152.690961550597,132.271582899046)" rx="2" ry="2" />
<text  x="54.34" y="97.5" ></text>
</g>
<g >
<title>ParLoopExecute (42,039,287 us, 19.07%)</title><rect x="470.9" y="167" width="225.1" height="15.0" fill="rgb(107.443290329683,144.892704900288,144.892704900288)" rx="2" ry="2" />
<text  x="473.94" y="177.5" >ParLoopExecute</text>
</g>
<g >
<title>ParLoopExecute (1,872,299 us, 0.85%)</title><rect x="17.6" y="103" width="10.0" height="15.0" fill="rgb(119.152137334758,119.152137334758,150.481058838985)" rx="2" ry="2" />
<text  x="20.56" y="113.5" ></text>
</g>
<g >
<title>ParLoopExecute (33,337,495 us, 15.13%)</title><rect x="220.6" y="167" width="178.5" height="15.0" fill="rgb(156.291450341934,144.901119288157,144.901119288157)" rx="2" ry="2" />
<text  x="223.62" y="177.5" >ParLoopExecute</text>
</g>
<g >
<title>firedrake.parloops.par_loop (1,618,901 us, 0.73%)</title><rect x="1023.7" y="135" width="8.6" height="15.0" fill="rgb(142.260359607296,142.260359607296,154.953617988509)" rx="2" ry="2" />
<text  x="1026.66" y="145.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (83,717 us, 0.04%)</title><rect x="27.6" y="71" width="0.4" height="15.0" fill="rgb(116.087715218373,116.087715218373,149.887944880975)" rx="2" ry="2" />
<text  x="30.59" y="81.5" ></text>
</g>
<g >
<title>firedrake.matrix_free.operators.ImplicitMatrixContext.__init__ (25,458 us, 0.01%)</title><rect x="51.8" y="103" width="0.2" height="15.0" fill="rgb(136.634743574927,136.634743574927,153.864789079018)" rx="2" ry="2" />
<text  x="54.83" y="113.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (83,717 us, 0.04%)</title><rect x="27.6" y="87" width="0.4" height="15.0" fill="rgb(154.221330853031,129.030203206571,129.030203206571)" rx="2" ry="2" />
<text  x="30.59" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (83,717 us, 0.04%)</title><rect x="27.6" y="103" width="0.4" height="15.0" fill="rgb(112.242666055672,112.242666055672,149.143741817227)" rx="2" ry="2" />
<text  x="30.59" y="113.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (1,945,785 us, 0.88%)</title><rect x="453.4" y="199" width="10.4" height="15.0" fill="rgb(155.400014132193,138.066775013482,138.066775013482)" rx="2" ry="2" />
<text  x="456.40" y="209.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (1,618,901 us, 0.73%)</title><rect x="1023.7" y="167" width="8.6" height="15.0" fill="rgb(127.99230315391,127.99230315391,152.19205867495)" rx="2" ry="2" />
<text  x="1026.66" y="177.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_wrap_slate_loopy_knl_0 (47,596,685 us, 21.60%)</title><rect x="729.5" y="167" width="254.8" height="15.0" fill="rgb(123.9537600066,163.542411161716,123.9537600066)" rx="2" ry="2" />
<text  x="732.46" y="177.5" >Parloop_Cells_wrap_wrap_slate_l..</text>
</g>
<g >
<title>firedrake (220,405,989 us, 100.00%)</title><rect x="10.0" y="55" width="1180.0" height="15.0" fill="rgb(115.286634580908,115.286634580908,149.73289701566)" rx="2" ry="2" />
<text  x="13.00" y="65.5" >firedrake</text>
</g>
<g >
<title>firedrake.interpolation.make_interpolator (32,690 us, 0.01%)</title><rect x="1023.5" y="135" width="0.2" height="15.0" fill="rgb(156.162656987164,143.913703568257,143.913703568257)" rx="2" ry="2" />
<text  x="1026.49" y="145.5" ></text>
</g>
<g >
<title>firedrake.parloops.par_loop (1,945,785 us, 0.88%)</title><rect x="453.4" y="167" width="10.4" height="15.0" fill="rgb(124.117931013702,124.117931013702,151.4421801962)" rx="2" ry="2" />
<text  x="456.40" y="177.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (33,188,049 us, 15.06%)</title><rect x="221.4" y="199" width="177.7" height="15.0" fill="rgb(136.081138226292,161.568186800371,136.081138226292)" rx="2" ry="2" />
<text  x="224.42" y="209.5" >pyop2.global_kernel.G..</text>
</g>
<g >
<title>PCSetUp (58,717,717 us, 26.64%)</title><rect x="718.0" y="103" width="314.3" height="15.0" fill="rgb(151.825799573244,151.825799573244,128.07887485495)" rx="2" ry="2" />
<text  x="720.97" y="113.5" >PCSetUp</text>
</g>
<g >
<title>SCForwardElim (49,393,195 us, 22.41%)</title><rect x="453.4" y="135" width="264.4" height="15.0" fill="rgb(143.15502266584,160.416624217189,143.15502266584)" rx="2" ry="2" />
<text  x="456.40" y="145.5" >SCForwardElim</text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalProblem.__init__ (40,324 us, 0.02%)</title><rect x="51.6" y="87" width="0.2" height="15.0" fill="rgb(149.754210722064,159.342337789431,149.754210722064)" rx="2" ry="2" />
<text  x="54.61" y="97.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (1,618,901 us, 0.73%)</title><rect x="1023.7" y="183" width="8.6" height="15.0" fill="rgb(131.860181975275,162.255319213327,131.860181975275)" rx="2" ry="2" />
<text  x="1026.66" y="193.5" ></text>
</g>
<g >
<title>ParLoopExecute (1,618,901 us, 0.73%)</title><rect x="1023.7" y="151" width="8.6" height="15.0" fill="rgb(154.434093042876,154.434093042876,140.719066284706)" rx="2" ry="2" />
<text  x="1026.66" y="161.5" ></text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (4,077,823 us, 1.85%)</title><rect x="696.0" y="167" width="21.8" height="15.0" fill="rgb(105.195120486586,144.309846052078,144.309846052078)" rx="2" ry="2" />
<text  x="699.00" y="177.5" ></text>
</g>
<g >
<title>ParLoopExecute (25,864,610 us, 11.73%)</title><rect x="71.0" y="151" width="138.5" height="15.0" fill="rgb(117.417807490742,147.478690830933,147.478690830933)" rx="2" ry="2" />
<text  x="74.04" y="161.5" >ParLoopExecute</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (2,037,015 us, 0.92%)</title><rect x="60.1" y="215" width="10.9" height="15.0" fill="rgb(134.031224742364,96.5800134023074,134.031224742364)" rx="2" ry="2" />
<text  x="63.14" y="225.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.solve (212,567,507 us, 96.44%)</title><rect x="52.0" y="71" width="1138.0" height="15.0" fill="rgb(153.592624108236,124.210118163145,124.210118163145)" rx="2" ry="2" />
<text  x="54.97" y="81.5" >firedrake.variational_solver.NonlinearVariationalSolver.solve</text>
</g>
<g >
<title>Parloop_Cells_wrap_wrap_slate_loopy_knl_4 (42,039,287 us, 19.07%)</title><rect x="470.9" y="183" width="225.1" height="15.0" fill="rgb(155.893609101144,141.851003108771,141.851003108771)" rx="2" ry="2" />
<text  x="473.94" y="193.5" >Parloop_Cells_wrap_wrap_sla..</text>
</g>
<g >
<title>Log_Event_slate_loopy_knl_7 (86,747 us, 0.04%)</title><rect x="221.0" y="199" width="0.4" height="15.0" fill="rgb(149.614490668356,149.614490668356,117.362531700492)" rx="2" ry="2" />
<text  x="223.96" y="209.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (22,852 us, 0.01%)</title><rect x="1023.4" y="183" width="0.1" height="15.0" fill="rgb(119.330390321835,147.974545638994,147.974545638994)" rx="2" ry="2" />
<text  x="1026.37" y="193.5" ></text>
</g>
<g >
<title>ParLoopExecute (1,945,785 us, 0.88%)</title><rect x="453.4" y="183" width="10.4" height="15.0" fill="rgb(142.392519020936,142.392519020936,154.979197229859)" rx="2" ry="2" />
<text  x="456.40" y="193.5" ></text>
</g>
<g >
<title>HybridProject (2,037,015 us, 0.92%)</title><rect x="60.1" y="151" width="10.9" height="15.0" fill="rgb(152.736249135439,117.644576705034,117.644576705034)" rx="2" ry="2" />
<text  x="63.14" y="161.5" ></text>
</g>
<g >
<title>HybridOperatorAssembly (56,797,404 us, 25.77%)</title><rect x="718.4" y="135" width="304.1" height="15.0" fill="rgb(141.579177891691,160.673157087399,141.579177891691)" rx="2" ry="2" />
<text  x="721.39" y="145.5" >HybridOperatorAssembly</text>
</g>
<g >
<title>CreateSparsity (119,316 us, 0.05%)</title><rect x="1022.5" y="151" width="0.6" height="15.0" fill="rgb(147.706569856637,147.706569856637,108.116453920627)" rx="2" ry="2" />
<text  x="1025.47" y="161.5" ></text>
</g>
<g >
<title>firedrake.parloops.par_loop (2,037,015 us, 0.92%)</title><rect x="60.1" y="167" width="10.9" height="15.0" fill="rgb(135.729636610186,100.932193813601,135.729636610186)" rx="2" ry="2" />
<text  x="63.14" y="177.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (2,037,015 us, 0.92%)</title><rect x="60.1" y="199" width="10.9" height="15.0" fill="rgb(105.801314166587,144.467007376523,144.467007376523)" rx="2" ry="2" />
<text  x="63.14" y="209.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (41,950,982 us, 19.03%)</title><rect x="471.4" y="199" width="224.6" height="15.0" fill="rgb(153.664929052515,124.764456069281,124.764456069281)" rx="2" ry="2" />
<text  x="474.41" y="209.5" >pyop2.global_kernel.GlobalK..</text>
</g>
<g >
<title>Log_Event_slate_loopy_knl_0 (79,443 us, 0.04%)</title><rect x="730.1" y="183" width="0.4" height="15.0" fill="rgb(108.907801697462,145.272393032675,145.272393032675)" rx="2" ry="2" />
<text  x="733.09" y="193.5" ></text>
</g>
<g >
<title>firedrake.mesh.MeshTopology._facets (24,843 us, 0.01%)</title><rect x="27.9" y="135" width="0.1" height="15.0" fill="rgb(117.839517071422,117.839517071422,150.227003304146)" rx="2" ry="2" />
<text  x="30.90" y="145.5" ></text>
</g>
<g >
<title>firedrake.__init__ (4,290,005 us, 1.95%)</title><rect x="28.4" y="71" width="22.9" height="15.0" fill="rgb(154.369919474058,130.169382634448,130.169382634448)" rx="2" ry="2" />
<text  x="31.37" y="81.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_pyop2_kernel_uniform_extrusion (1,872,299 us, 0.85%)</title><rect x="17.6" y="119" width="10.0" height="15.0" fill="rgb(150.945620152746,159.148387416995,150.945620152746)" rx="2" ry="2" />
<text  x="20.56" y="129.5" ></text>
</g>
<g >
<title>Log_Event_slate_loopy_knl_14 (25,382 us, 0.01%)</title><rect x="71.4" y="183" width="0.1" height="15.0" fill="rgb(108.433837056723,145.149513311002,145.149513311002)" rx="2" ry="2" />
<text  x="74.37" y="193.5" ></text>
</g>
<g >
<title>RecoverFirstElim (41,142,936 us, 18.67%)</title><rect x="209.5" y="151" width="220.3" height="15.0" fill="rgb(134.393074745565,134.393074745565,153.43091769269)" rx="2" ry="2" />
<text  x="212.52" y="161.5" >RecoverFirstElim</text>
</g>
<g >
<title>SNESSolve (212,567,507 us, 96.44%)</title><rect x="52.0" y="87" width="1138.0" height="15.0" fill="rgb(144.116810586303,160.260054090602,144.116810586303)" rx="2" ry="2" />
<text  x="54.97" y="97.5" >SNESSolve</text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (40,324 us, 0.02%)</title><rect x="51.6" y="103" width="0.2" height="15.0" fill="rgb(138.322091547234,138.322091547234,154.191372557529)" rx="2" ry="2" />
<text  x="54.61" y="113.5" ></text>
</g>
<g >
<title>Log_Event_slate_loopy_knl_4 (29,915 us, 0.01%)</title><rect x="471.2" y="199" width="0.2" height="15.0" fill="rgb(154.127378463298,128.309901551953,128.309901551953)" rx="2" ry="2" />
<text  x="474.25" y="209.5" ></text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (7,133,037 us, 3.24%)</title><rect x="984.3" y="151" width="38.2" height="15.0" fill="rgb(149.100587923837,149.100587923837,114.872079938593)" rx="2" ry="2" />
<text  x="987.28" y="161.5" >fi..</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (20,390,674 us, 9.25%)</title><rect x="1032.3" y="151" width="109.2" height="15.0" fill="rgb(133.303584283664,94.7154347268889,133.303584283664)" rx="2" ry="2" />
<text  x="1035.33" y="161.5" >pyop2.global..</text>
</g>
<g >
<title>Log_Event_subkernel1_interior_facet_vert_to__exterior_facet_vert_integral_otherwise (24,283 us, 0.01%)</title><rect x="730.5" y="183" width="0.1" height="15.0" fill="rgb(131.569014403861,162.302718585418,131.569014403861)" rx="2" ry="2" />
<text  x="733.52" y="193.5" ></text>
</g>
<g >
<title>ParLoopExecute (25,542,110 us, 11.59%)</title><rect x="1032.3" y="119" width="136.8" height="15.0" fill="rgb(154.314649896595,154.314649896595,140.140226421962)" rx="2" ry="2" />
<text  x="1035.33" y="129.5" >ParLoopExecute</text>
</g>
<g >
<title>KSPSolve (25,030 us, 0.01%)</title><rect x="717.8" y="151" width="0.2" height="15.0" fill="rgb(144.769423278098,124.096647150126,144.769423278098)" rx="2" ry="2" />
<text  x="720.84" y="161.5" ></text>
</g>
<g >
<title>firedrake.assemble.allocate_matrix (167,192 us, 0.08%)</title><rect x="1022.5" y="135" width="0.9" height="15.0" fill="rgb(133.805122235754,161.938701031389,133.805122235754)" rx="2" ry="2" />
<text  x="1025.47" y="145.5" ></text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (4,410,217 us, 2.00%)</title><rect x="429.8" y="151" width="23.6" height="15.0" fill="rgb(111.627857349349,145.977592646127,145.977592646127)" rx="2" ry="2" />
<text  x="432.78" y="161.5" >f..</text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (3,908,296 us, 1.77%)</title><rect x="1169.1" y="119" width="20.9" height="15.0" fill="rgb(153.060699039142,120.132025966756,120.132025966756)" rx="2" ry="2" />
<text  x="1172.08" y="129.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (83,717 us, 0.04%)</title><rect x="27.6" y="119" width="0.4" height="15.0" fill="rgb(124.308850056351,124.308850056351,151.479132268971)" rx="2" ry="2" />
<text  x="30.59" y="129.5" ></text>
</g>
<g >
<title>PCApply (124,399,384 us, 56.44%)</title><rect x="52.0" y="119" width="666.0" height="15.0" fill="rgb(108.03035918473,145.044907936782,145.044907936782)" rx="2" ry="2" />
<text  x="54.97" y="129.5" >PCApply</text>
</g>
<g >
<title>SCSolve (25,030 us, 0.01%)</title><rect x="717.8" y="135" width="0.2" height="15.0" fill="rgb(140.324131499356,140.324131499356,154.578864161166)" rx="2" ry="2" />
<text  x="720.84" y="145.5" ></text>
</g>
<g >
<title>HybridBreak (1,945,785 us, 0.88%)</title><rect x="453.4" y="151" width="10.4" height="15.0" fill="rgb(126.989219071486,149.960167907422,149.960167907422)" rx="2" ry="2" />
<text  x="456.40" y="161.5" ></text>
</g>
<g >
<title>CreateExtMesh (1,981,167 us, 0.90%)</title><rect x="17.0" y="71" width="10.6" height="15.0" fill="rgb(124.051159946747,163.526555357506,124.051159946747)" rx="2" ry="2" />
<text  x="19.98" y="81.5" ></text>
</g>
<g >
<title>FunctionSpaceData: CreateElement (33,421 us, 0.02%)</title><rect x="27.7" y="135" width="0.2" height="15.0" fill="rgb(155.71709631695,140.497738429947,140.497738429947)" rx="2" ry="2" />
<text  x="30.72" y="145.5" ></text>
</g>
<g >
<title>inv_getri (23,074 us, 0.01%)</title><rect x="730.4" y="199" width="0.1" height="15.0" fill="rgb(147.696692175205,147.696692175205,108.068585156764)" rx="2" ry="2" />
<text  x="733.40" y="209.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (30,270 us, 0.01%)</title><rect x="718.2" y="135" width="0.2" height="15.0" fill="rgb(124.207161993775,163.501159675432,124.207161993775)" rx="2" ry="2" />
<text  x="721.23" y="145.5" ></text>
</g>
<g >
<title>HybridInit (58,717,717 us, 26.64%)</title><rect x="718.0" y="119" width="314.3" height="15.0" fill="rgb(152.37172588842,114.849898477883,114.849898477883)" rx="2" ry="2" />
<text  x="720.97" y="129.5" >HybridInit</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (5,151,436 us, 2.34%)</title><rect x="1141.5" y="151" width="27.6" height="15.0" fill="rgb(155.147944589092,136.134241849707,136.134241849707)" rx="2" ry="2" />
<text  x="1144.50" y="161.5" >p..</text>
</g>
<g >
<title>MatZeroInitial (47,876 us, 0.02%)</title><rect x="1023.1" y="151" width="0.3" height="15.0" fill="rgb(152.471280991454,152.471280991454,131.206977112429)" rx="2" ry="2" />
<text  x="1026.11" y="161.5" ></text>
</g>
</g>
</svg>
