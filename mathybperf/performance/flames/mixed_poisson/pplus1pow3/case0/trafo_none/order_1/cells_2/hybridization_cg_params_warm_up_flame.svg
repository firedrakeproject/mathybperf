<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="267" onload="init(evt)" viewBox="0 0 1200 267" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:13px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:18px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 13 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (1 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="267.0" fill="url(#background)"  />
<text id="title" x="600.00" y="26" >Firedrake example</text>
<text id="details" x="10.00" y="249" > </text>
<text id="unzoom" x="10.00" y="26" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="26" >Search</text>
<text id="ignorecase" x="1174.00" y="26" >ic</text>
<text id="matched" x="1090.00" y="249" > </text>
<g id="frames">
<g >
<title>firedrake.tsfc_interface.compile_form (3,448,039 us, 2.28%)</title><rect x="988.0" y="151" width="26.9" height="15.0" fill="rgb(156.117636707069,143.568548087529,143.568548087529)" rx="2" ry="2" />
<text  x="991.04" y="161.5" >f..</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (1,158,875 us, 0.77%)</title><rect x="403.0" y="215" width="9.0" height="15.0" fill="rgb(137.286510806503,161.371963357081,137.286510806503)" rx="2" ry="2" />
<text  x="405.98" y="225.5" ></text>
</g>
<g >
<title>RecoverFirstElim (25,490,187 us, 16.83%)</title><rect x="188.0" y="151" width="198.6" height="15.0" fill="rgb(147.658129144003,147.658129144003,107.881702774784)" rx="2" ry="2" />
<text  x="191.00" y="161.5" >RecoverFirstElim</text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (45,496 us, 0.03%)</title><rect x="27.2" y="103" width="0.4" height="15.0" fill="rgb(142.595909575278,154.006346926924,154.006346926924)" rx="2" ry="2" />
<text  x="30.21" y="113.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.LinearVariationalProblem.__init__ (26,702 us, 0.02%)</title><rect x="53.7" y="71" width="0.2" height="15.0" fill="rgb(156.223570435049,144.380706668709,144.380706668709)" rx="2" ry="2" />
<text  x="56.70" y="81.5" ></text>
</g>
<g >
<title>Log_Event_slate_loopy_knl_4 (20,048 us, 0.01%)</title><rect x="418.0" y="199" width="0.1" height="15.0" fill="rgb(141.34690602051,115.326446677558,141.34690602051)" rx="2" ry="2" />
<text  x="420.97" y="209.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_wrap_slate_loopy_knl_14 (15,413,374 us, 10.18%)</title><rect x="67.9" y="167" width="120.1" height="15.0" fill="rgb(126.061051565366,126.061051565366,151.81826804491)" rx="2" ry="2" />
<text  x="70.91" y="177.5" >Parloop_Cells..</text>
</g>
<g >
<title>HybridRHS (40,933,920 us, 27.03%)</title><rect x="412.0" y="151" width="318.9" height="15.0" fill="rgb(138.746474378988,108.662840596157,138.746474378988)" rx="2" ry="2" />
<text  x="415.01" y="161.5" >HybridRHS</text>
</g>
<g >
<title>CreateFunctionSpace (16,010 us, 0.01%)</title><rect x="731.3" y="135" width="0.1" height="15.0" fill="rgb(115.622333150789,147.013197483538,147.013197483538)" rx="2" ry="2" />
<text  x="734.31" y="145.5" ></text>
</g>
<g >
<title>firedrake (151,453,484 us, 100.00%)</title><rect x="10.0" y="55" width="1180.0" height="15.0" fill="rgb(124.959268354316,163.378723756274,124.959268354316)" rx="2" ry="2" />
<text  x="13.00" y="65.5" >firedrake</text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (1,158,875 us, 0.77%)</title><rect x="403.0" y="199" width="9.0" height="15.0" fill="rgb(144.093179301186,144.093179301186,155.308357284101)" rx="2" ry="2" />
<text  x="405.98" y="209.5" ></text>
</g>
<g >
<title>ParLoopExecute (37,809,382 us, 24.96%)</title><rect x="417.6" y="167" width="294.6" height="15.0" fill="rgb(153.067316751364,120.182761760459,120.182761760459)" rx="2" ry="2" />
<text  x="420.65" y="177.5" >ParLoopExecute</text>
</g>
<g >
<title>ParLoopExecute (18,935,457 us, 12.50%)</title><rect x="1030.3" y="119" width="147.6" height="15.0" fill="rgb(125.66482709497,149.616807024622,149.616807024622)" rx="2" ry="2" />
<text  x="1033.33" y="129.5" >ParLoopExecute</text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (2,103,080 us, 1.39%)</title><rect x="386.6" y="151" width="16.4" height="15.0" fill="rgb(132.949847100272,162.077931867397,132.949847100272)" rx="2" ry="2" />
<text  x="389.60" y="161.5" ></text>
</g>
<g >
<title>firedrake.__init__ (3,311,816 us, 2.19%)</title><rect x="27.9" y="71" width="25.8" height="15.0" fill="rgb(111.843847647106,111.843847647106,149.066551157504)" rx="2" ry="2" />
<text  x="30.90" y="81.5" >f..</text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (2,401,068 us, 1.59%)</title><rect x="712.2" y="167" width="18.7" height="15.0" fill="rgb(120.728752432577,120.728752432577,150.786210148241)" rx="2" ry="2" />
<text  x="715.23" y="177.5" ></text>
</g>
<g >
<title>PCApply (86,916,360 us, 57.39%)</title><rect x="53.9" y="119" width="677.2" height="15.0" fill="rgb(120.960170688288,120.960170688288,150.831000778378)" rx="2" ry="2" />
<text  x="56.91" y="129.5" >PCApply</text>
</g>
<g >
<title>firedrake.mesh.MeshTopology._facets (17,031 us, 0.01%)</title><rect x="27.4" y="135" width="0.2" height="15.0" fill="rgb(150.98754839103,159.141561889832,150.98754839103)" rx="2" ry="2" />
<text  x="30.44" y="145.5" ></text>
</g>
<g >
<title>KSPSolve (20,205 us, 0.01%)</title><rect x="730.9" y="151" width="0.2" height="15.0" fill="rgb(155.255762050841,155.255762050841,144.701000707923)" rx="2" ry="2" />
<text  x="733.94" y="161.5" ></text>
</g>
<g >
<title>CreateMesh (17,342 us, 0.01%)</title><rect x="27.6" y="71" width="0.1" height="15.0" fill="rgb(104.622894606959,144.161491194397,144.161491194397)" rx="2" ry="2" />
<text  x="30.57" y="81.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_pyop2_kernel_uniform_extrusion (1,381,454 us, 0.91%)</title><rect x="16.5" y="119" width="10.7" height="15.0" fill="rgb(112.346240375373,112.346240375373,149.16378845975)" rx="2" ry="2" />
<text  x="19.45" y="129.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (1,848,397 us, 1.22%)</title><rect x="1015.9" y="167" width="14.4" height="15.0" fill="rgb(145.393363289849,145.393363289849,155.560005798035)" rx="2" ry="2" />
<text  x="1018.93" y="177.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_wrap_slate_loopy_knl_0 (31,830,220 us, 21.02%)</title><rect x="740.0" y="167" width="248.0" height="15.0" fill="rgb(156.162680250641,143.913881921584,143.913881921584)" rx="2" ry="2" />
<text  x="743.05" y="177.5" >Parloop_Cells_wrap_wrap_slate_..</text>
</g>
<g >
<title>ParLoopExecute (1,158,875 us, 0.77%)</title><rect x="403.0" y="183" width="9.0" height="15.0" fill="rgb(117.635652646837,117.635652646837,150.187545673581)" rx="2" ry="2" />
<text  x="405.98" y="193.5" ></text>
</g>
<g >
<title>HybridOperatorAssembly (36,383,383 us, 24.02%)</title><rect x="731.4" y="135" width="283.5" height="15.0" fill="rgb(138.320755464609,152.897973638973,152.897973638973)" rx="2" ry="2" />
<text  x="734.44" y="145.5" >HybridOperatorAssembly</text>
</g>
<g >
<title>Log_Event_slate_loopy_knl_14 (16,599 us, 0.01%)</title><rect x="68.2" y="183" width="0.2" height="15.0" fill="rgb(133.611212600967,161.970267716122,133.611212600967)" rx="2" ry="2" />
<text  x="71.23" y="193.5" ></text>
</g>
<g >
<title>ParLoopExecute (31,830,220 us, 21.02%)</title><rect x="740.0" y="151" width="248.0" height="15.0" fill="rgb(117.222641643178,147.428092277861,147.428092277861)" rx="2" ry="2" />
<text  x="743.05" y="161.5" >ParLoopExecute</text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (45,496 us, 0.03%)</title><rect x="27.2" y="87" width="0.4" height="15.0" fill="rgb(156.773126197965,148.593967517733,148.593967517733)" rx="2" ry="2" />
<text  x="30.21" y="97.5" ></text>
</g>
<g >
<title>firedrake.extrusion_utils.make_extruded_coords (1,420,048 us, 0.94%)</title><rect x="16.1" y="87" width="11.1" height="15.0" fill="rgb(152.517251380893,143.950456663538,152.517251380893)" rx="2" ry="2" />
<text  x="19.15" y="97.5" ></text>
</g>
<g >
<title>firedrake.assemble.allocate_matrix (91,587 us, 0.06%)</title><rect x="1014.9" y="135" width="0.7" height="15.0" fill="rgb(125.735712368329,149.635184688085,149.635184688085)" rx="2" ry="2" />
<text  x="1017.91" y="145.5" ></text>
</g>
<g >
<title>firedrake.parloops.par_loop (1,062,411 us, 0.70%)</title><rect x="59.6" y="167" width="8.3" height="15.0" fill="rgb(135.065405248808,161.733538680427,135.065405248808)" rx="2" ry="2" />
<text  x="62.63" y="177.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.solve (145,817,319 us, 96.28%)</title><rect x="53.9" y="71" width="1136.1" height="15.0" fill="rgb(135.414499448469,135.414499448469,153.628612796478)" rx="2" ry="2" />
<text  x="56.91" y="81.5" >firedrake.variational_solver.NonlinearVariationalSolver.solve</text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (45,496 us, 0.03%)</title><rect x="27.2" y="119" width="0.4" height="15.0" fill="rgb(153.010774989202,119.749274917213,119.749274917213)" rx="2" ry="2" />
<text  x="30.21" y="129.5" ></text>
</g>
<g >
<title>ParLoopExecute (1,381,454 us, 0.91%)</title><rect x="16.5" y="103" width="10.7" height="15.0" fill="rgb(107.814418713651,144.988923370206,144.988923370206)" rx="2" ry="2" />
<text  x="19.45" y="113.5" ></text>
</g>
<g >
<title>SCBackSub (44,803,360 us, 29.58%)</title><rect x="53.9" y="135" width="349.1" height="15.0" fill="rgb(141.820266482325,116.539432860958,141.820266482325)" rx="2" ry="2" />
<text  x="56.91" y="145.5" >SCBackSub</text>
</g>
<g >
<title>PCSetUp (38,406,943 us, 25.36%)</title><rect x="731.1" y="103" width="299.2" height="15.0" fill="rgb(129.423632009647,162.65196688215,129.423632009647)" rx="2" ry="2" />
<text  x="734.09" y="113.5" >PCSetUp</text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (3,736,155 us, 2.47%)</title><rect x="357.5" y="167" width="29.1" height="15.0" fill="rgb(142.146830271502,153.889918959278,153.889918959278)" rx="2" ry="2" />
<text  x="360.49" y="177.5" >f..</text>
</g>
<g >
<title>HybridInit (38,406,943 us, 25.36%)</title><rect x="731.1" y="119" width="299.2" height="15.0" fill="rgb(152.280115326182,152.280115326182,130.280558888421)" rx="2" ry="2" />
<text  x="734.09" y="129.5" >HybridInit</text>
</g>
<g >
<title>Log_Event_slate_loopy_knl_7 (66,783 us, 0.04%)</title><rect x="197.1" y="199" width="0.6" height="15.0" fill="rgb(154.215068677518,128.982193194307,128.982193194307)" rx="2" ry="2" />
<text  x="200.14" y="209.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_form1_cell_integral_otherwise (4,855,178 us, 3.21%)</title><rect x="1140.0" y="135" width="37.9" height="15.0" fill="rgb(137.389948485283,105.186742993538,137.389948485283)" rx="2" ry="2" />
<text  x="1143.03" y="145.5" >Pa..</text>
</g>
<g >
<title>SNESFunctionEval (20,494,016 us, 13.53%)</title><rect x="1030.3" y="103" width="159.7" height="15.0" fill="rgb(154.882608796327,134.100000771838,134.100000771838)" rx="2" ry="2" />
<text  x="1033.33" y="113.5" >SNESFunctionEval</text>
</g>
<g >
<title>SCForwardElim (42,092,795 us, 27.79%)</title><rect x="403.0" y="135" width="327.9" height="15.0" fill="rgb(156.498904445778,146.491600750967,146.491600750967)" rx="2" ry="2" />
<text  x="405.98" y="145.5" >SCForwardElim</text>
</g>
<g >
<title>PetscBarrier (25,460 us, 0.02%)</title><rect x="27.7" y="71" width="0.2" height="15.0" fill="rgb(117.17251984768,117.17251984768,150.097907067293)" rx="2" ry="2" />
<text  x="30.70" y="81.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (37,748,311 us, 24.92%)</title><rect x="418.1" y="199" width="294.1" height="15.0" fill="rgb(136.747484750134,152.490088638924,152.490088638924)" rx="2" ry="2" />
<text  x="421.12" y="209.5" >pyop2.global_kernel.GlobalKernel.com..</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (1,381,454 us, 0.91%)</title><rect x="16.5" y="135" width="10.7" height="15.0" fill="rgb(104.642807037818,144.166653676471,144.166653676471)" rx="2" ry="2" />
<text  x="19.45" y="145.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_form0_cell_integral_otherwise (14,080,279 us, 9.30%)</title><rect x="1030.3" y="135" width="109.7" height="15.0" fill="rgb(137.838166059505,137.838166059505,154.097709559904)" rx="2" ry="2" />
<text  x="1033.33" y="145.5" >Parloop_Cell..</text>
</g>
<g >
<title>MatZeroInitial (22,185 us, 0.01%)</title><rect x="1015.4" y="151" width="0.2" height="15.0" fill="rgb(156.374524772826,145.538023258333,145.538023258333)" rx="2" ry="2" />
<text  x="1018.45" y="161.5" ></text>
</g>
<g >
<title>ParLoopExecute (15,413,374 us, 10.18%)</title><rect x="67.9" y="151" width="120.1" height="15.0" fill="rgb(135.055682343424,135.055682343424,153.559164324534)" rx="2" ry="2" />
<text  x="70.91" y="161.5" >ParLoopExecute</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (14,080,279 us, 9.30%)</title><rect x="1030.3" y="151" width="109.7" height="15.0" fill="rgb(118.939286428904,147.87314833342,147.87314833342)" rx="2" ry="2" />
<text  x="1033.33" y="161.5" >pyop2.global..</text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (16,010 us, 0.01%)</title><rect x="731.3" y="167" width="0.1" height="15.0" fill="rgb(125.3229825204,125.3229825204,151.67541597169)" rx="2" ry="2" />
<text  x="734.31" y="177.5" ></text>
</g>
<g >
<title>firedrake.parloops.par_loop (1,848,397 us, 1.22%)</title><rect x="1015.9" y="135" width="14.4" height="15.0" fill="rgb(149.372318577981,149.372318577981,116.188928493294)" rx="2" ry="2" />
<text  x="1018.93" y="145.5" ></text>
</g>
<g >
<title>HybridProject (1,062,411 us, 0.70%)</title><rect x="59.6" y="151" width="8.3" height="15.0" fill="rgb(152.025604580223,152.025604580223,129.047160658002)" rx="2" ry="2" />
<text  x="62.63" y="161.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_wrap_slate_loopy_knl_4 (37,809,382 us, 24.96%)</title><rect x="417.6" y="183" width="294.6" height="15.0" fill="rgb(155.364003407003,137.790692787025,137.790692787025)" rx="2" ry="2" />
<text  x="420.65" y="193.5" >Parloop_Cells_wrap_wrap_slate_loopy_..</text>
</g>
<g >
<title>ParLoopExecute (1,062,411 us, 0.70%)</title><rect x="59.6" y="183" width="8.3" height="15.0" fill="rgb(150.978813658281,150.978813658281,123.974250805516)" rx="2" ry="2" />
<text  x="62.63" y="193.5" ></text>
</g>
<g >
<title>CreateExtMesh (1,420,048 us, 0.94%)</title><rect x="16.1" y="71" width="11.1" height="15.0" fill="rgb(145.994397139377,159.954400465683,145.994397139377)" rx="2" ry="2" />
<text  x="19.15" y="81.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (15,355,277 us, 10.14%)</title><rect x="68.4" y="183" width="119.6" height="15.0" fill="rgb(117.795807710824,147.576690887992,147.576690887992)" rx="2" ry="2" />
<text  x="71.36" y="193.5" >pyop2.global_..</text>
</g>
<g >
<title>HybridBreak (1,158,875 us, 0.77%)</title><rect x="403.0" y="151" width="9.0" height="15.0" fill="rgb(140.233189100635,160.892271541757,140.233189100635)" rx="2" ry="2" />
<text  x="405.98" y="161.5" ></text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (1,558,559 us, 1.03%)</title><rect x="1177.9" y="119" width="12.1" height="15.0" fill="rgb(150.789245290276,150.789245290276,123.0555733298)" rx="2" ry="2" />
<text  x="1180.86" y="129.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (16,010 us, 0.01%)</title><rect x="731.3" y="183" width="0.1" height="15.0" fill="rgb(126.714316253386,163.093018284332,126.714316253386)" rx="2" ry="2" />
<text  x="734.31" y="193.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_wrap_slate_loopy_knl_7 (20,630,191 us, 13.62%)</title><rect x="196.8" y="183" width="160.7" height="15.0" fill="rgb(107.313353401514,144.859017548541,144.859017548541)" rx="2" ry="2" />
<text  x="199.76" y="193.5" >Parloop_Cells_wrap..</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (20,514,049 us, 13.54%)</title><rect x="197.7" y="199" width="159.8" height="15.0" fill="rgb(154.670066819699,154.670066819699,141.862631510849)" rx="2" ry="2" />
<text  x="200.66" y="209.5" >pyop2.global_kerne..</text>
</g>
<g >
<title>CreateFunctionSpace (45,496 us, 0.03%)</title><rect x="27.2" y="71" width="0.4" height="15.0" fill="rgb(129.315009708229,129.315009708229,152.448066395141)" rx="2" ry="2" />
<text  x="30.21" y="81.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (16,792 us, 0.01%)</title><rect x="1015.6" y="151" width="0.2" height="15.0" fill="rgb(130.663111407264,162.450191166259,130.663111407264)" rx="2" ry="2" />
<text  x="1018.62" y="161.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (1,848,397 us, 1.22%)</title><rect x="1015.9" y="183" width="14.4" height="15.0" fill="rgb(125.727901642582,125.727901642582,151.753787414693)" rx="2" ry="2" />
<text  x="1018.93" y="193.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (1,062,411 us, 0.70%)</title><rect x="59.6" y="199" width="8.3" height="15.0" fill="rgb(141.281867317585,160.721556483184,141.281867317585)" rx="2" ry="2" />
<text  x="62.63" y="209.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (16,792 us, 0.01%)</title><rect x="1015.6" y="135" width="0.2" height="15.0" fill="rgb(148.68729266897,148.68729266897,112.869187549623)" rx="2" ry="2" />
<text  x="1018.62" y="145.5" ></text>
</g>
<g >
<title>SCSolve (20,205 us, 0.01%)</title><rect x="730.9" y="135" width="0.2" height="15.0" fill="rgb(143.835929382852,143.835929382852,155.258566977326)" rx="2" ry="2" />
<text  x="733.94" y="145.5" ></text>
</g>
<g >
<title>SNESSolve (145,817,319 us, 96.28%)</title><rect x="53.9" y="87" width="1136.1" height="15.0" fill="rgb(144.8507243011,160.140579764937,144.8507243011)" rx="2" ry="2" />
<text  x="56.91" y="97.5" >SNESSolve</text>
</g>
<g >
<title>all (151,453,484 us, 100%)</title><rect x="10.0" y="39" width="1180.0" height="15.0" fill="rgb(152.430111154467,115.297518850914,115.297518850914)" rx="2" ry="2" />
<text  x="13.00" y="49.5" ></text>
</g>
<g >
<title>CreateSparsity (69,402 us, 0.05%)</title><rect x="1014.9" y="151" width="0.5" height="15.0" fill="rgb(149.025384763789,149.025384763789,114.507633855286)" rx="2" ry="2" />
<text  x="1017.91" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (16,010 us, 0.01%)</title><rect x="731.3" y="151" width="0.1" height="15.0" fill="rgb(156.614566452912,147.378342805656,147.378342805656)" rx="2" ry="2" />
<text  x="734.31" y="161.5" ></text>
</g>
<g >
<title>firedrake.interpolation.make_interpolator (22,570 us, 0.01%)</title><rect x="1015.8" y="135" width="0.1" height="15.0" fill="rgb(152.583993991681,152.583993991681,131.753201651993)" rx="2" ry="2" />
<text  x="1018.75" y="145.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (4,855,178 us, 3.21%)</title><rect x="1140.0" y="151" width="37.9" height="15.0" fill="rgb(145.090692332766,145.090692332766,155.501424322471)" rx="2" ry="2" />
<text  x="1143.03" y="161.5" >py..</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (31,718,925 us, 20.94%)</title><rect x="740.9" y="183" width="247.1" height="15.0" fill="rgb(138.328675101523,107.592229947654,138.328675101523)" rx="2" ry="2" />
<text  x="743.91" y="193.5" >pyop2.global_kernel.GlobalKern..</text>
</g>
<g >
<title>firedrake.parloops.par_loop (1,158,875 us, 0.77%)</title><rect x="403.0" y="167" width="9.0" height="15.0" fill="rgb(120.94583660573,148.39336504593,148.39336504593)" rx="2" ry="2" />
<text  x="405.98" y="177.5" ></text>
</g>
<g >
<title>ParLoopExecute (20,630,191 us, 13.62%)</title><rect x="196.8" y="167" width="160.7" height="15.0" fill="rgb(114.911957454387,114.911957454387,149.660378862139)" rx="2" ry="2" />
<text  x="199.76" y="177.5" >ParLoopExecute</text>
</g>
<g >
<title>Log_Event_slate_loopy_knl_0 (34,036 us, 0.02%)</title><rect x="740.6" y="183" width="0.3" height="15.0" fill="rgb(144.674428262307,160.169279120089,144.674428262307)" rx="2" ry="2" />
<text  x="743.65" y="193.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (1,062,411 us, 0.70%)</title><rect x="59.6" y="215" width="8.3" height="15.0" fill="rgb(139.545725321925,161.004184249919,139.545725321925)" rx="2" ry="2" />
<text  x="62.63" y="225.5" ></text>
</g>
<g >
<title>KSPSolve (86,916,360 us, 57.39%)</title><rect x="53.9" y="103" width="677.2" height="15.0" fill="rgb(147.24319669511,130.43569153122,147.24319669511)" rx="2" ry="2" />
<text  x="56.91" y="113.5" >KSPSolve</text>
</g>
<g >
<title>ParLoopExecute (1,848,397 us, 1.22%)</title><rect x="1015.9" y="151" width="14.4" height="15.0" fill="rgb(150.633789719636,159.199150510757,150.633789719636)" rx="2" ry="2" />
<text  x="1018.93" y="161.5" ></text>
</g>
</g>
</svg>
