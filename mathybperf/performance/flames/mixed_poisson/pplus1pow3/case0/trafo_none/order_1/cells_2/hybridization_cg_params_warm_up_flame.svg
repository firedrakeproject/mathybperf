<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="283" onload="init(evt)" viewBox="0 0 1200 283" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:13px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:18px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 13 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (1 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="283.0" fill="url(#background)"  />
<text id="title" x="600.00" y="26" >Firedrake example</text>
<text id="details" x="10.00" y="265" > </text>
<text id="unzoom" x="10.00" y="26" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="26" >Search</text>
<text id="ignorecase" x="1174.00" y="26" >ic</text>
<text id="matched" x="1090.00" y="265" > </text>
<g id="frames">
<g >
<title>firedrake.__init__ (7,401,842 us, 20.39%)</title><rect x="135.0" y="71" width="240.6" height="15.0" fill="rgb(144.006033749651,122.140461483479,144.006033749651)" rx="2" ry="2" />
<text  x="138.02" y="81.5" >firedrake.__init__</text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (6,656,474 us, 18.34%)</title><rect x="973.6" y="119" width="216.4" height="15.0" fill="rgb(136.330873259634,136.330873259634,153.805975469607)" rx="2" ry="2" />
<text  x="976.64" y="129.5" >firedrake.tsfc_interface.c..</text>
</g>
<g >
<title>HybridOperatorAssembly (5,758,445 us, 15.86%)</title><rect x="381.6" y="135" width="187.2" height="15.0" fill="rgb(135.264731172416,135.264731172416,153.59962538821)" rx="2" ry="2" />
<text  x="384.63" y="145.5" >HybridOperatorAssembly</text>
</g>
<g >
<title>Parloop_Cells_wrap_form1_cell_integral_otherwise (3,002,233 us, 8.27%)</title><rect x="876.1" y="135" width="97.5" height="15.0" fill="rgb(152.212329948949,152.212329948949,129.95206052183)" rx="2" ry="2" />
<text  x="879.06" y="145.5" >Parloop_Ce..</text>
</g>
<g >
<title>CreateFunctionSpace (13,456 us, 0.04%)</title><rect x="381.2" y="135" width="0.4" height="15.0" fill="rgb(135.699818083363,152.218471354946,152.218471354946)" rx="2" ry="2" />
<text  x="384.20" y="145.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (20,229 us, 0.06%)</title><rect x="572.4" y="151" width="0.6" height="15.0" fill="rgb(111.205312974661,145.868044104542,145.868044104542)" rx="2" ry="2" />
<text  x="575.38" y="161.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_form0_cell_integral_otherwise (8,319,633 us, 22.92%)</title><rect x="605.6" y="135" width="270.5" height="15.0" fill="rgb(145.662942802091,154.801503689431,154.801503689431)" rx="2" ry="2" />
<text  x="608.64" y="145.5" >Parloop_Cells_wrap_form0_cell_int..</text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (97,887 us, 0.27%)</title><rect x="128.4" y="87" width="3.2" height="15.0" fill="rgb(153.447170509045,123.09497390268,123.09497390268)" rx="2" ry="2" />
<text  x="131.38" y="97.5" ></text>
</g>
<g >
<title>firedrake.mesh._Facets.__init__ (4,122 us, 0.01%)</title><rect x="131.4" y="151" width="0.2" height="15.0" fill="rgb(135.779983313695,152.23925493318,152.23925493318)" rx="2" ry="2" />
<text  x="134.43" y="161.5" ></text>
</g>
<g >
<title>DMPlexStratify (10,288 us, 0.03%)</title><rect x="134.7" y="87" width="0.3" height="15.0" fill="rgb(134.828440308122,134.828440308122,153.51518199512)" rx="2" ry="2" />
<text  x="137.68" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (4,160 us, 0.01%)</title><rect x="572.9" y="199" width="0.1" height="15.0" fill="rgb(136.333336585647,161.527131253499,136.333336585647)" rx="2" ry="2" />
<text  x="575.90" y="209.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (8,539 us, 0.02%)</title><rect x="380.0" y="119" width="0.3" height="15.0" fill="rgb(147.969592859496,159.632856976361,147.969592859496)" rx="2" ry="2" />
<text  x="383.01" y="129.5" ></text>
</g>
<g >
<title>firedrake (36,303,890 us, 100.00%)</title><rect x="10.0" y="55" width="1180.0" height="15.0" fill="rgb(118.587153434751,147.781854594195,147.781854594195)" rx="2" ry="2" />
<text  x="13.00" y="65.5" >firedrake</text>
</g>
<g >
<title>CreateFunctionSpace (113,689 us, 0.31%)</title><rect x="127.9" y="71" width="3.7" height="15.0" fill="rgb(156.669493984917,147.799453884364,147.799453884364)" rx="2" ry="2" />
<text  x="130.87" y="81.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.derivative (14,601 us, 0.04%)</title><rect x="378.8" y="103" width="0.4" height="15.0" fill="rgb(154.405319092255,130.440779707289,130.440779707289)" rx="2" ry="2" />
<text  x="381.77" y="113.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (9,587 us, 0.03%)</title><rect x="572.7" y="183" width="0.3" height="15.0" fill="rgb(147.130008103916,155.181853952867,155.181853952867)" rx="2" ry="2" />
<text  x="575.72" y="193.5" ></text>
</g>
<g >
<title>SNESSolve (24,911,518 us, 68.62%)</title><rect x="380.3" y="87" width="809.7" height="15.0" fill="rgb(154.36491678325,154.36491678325,140.383827488057)" rx="2" ry="2" />
<text  x="383.29" y="97.5" >SNESSolve</text>
</g>
<g >
<title>Mesh: numbering (11,728 us, 0.03%)</title><rect x="132.3" y="87" width="0.4" height="15.0" fill="rgb(134.306536560251,161.85707544368,134.306536560251)" rx="2" ry="2" />
<text  x="135.27" y="97.5" ></text>
</g>
<g >
<title>DMPlexInterp (6,568 us, 0.02%)</title><rect x="375.8" y="119" width="0.2" height="15.0" fill="rgb(151.148555942681,151.148555942681,124.796848029913)" rx="2" ry="2" />
<text  x="378.83" y="129.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (4,160 us, 0.01%)</title><rect x="572.9" y="231" width="0.1" height="15.0" fill="rgb(149.368600965972,149.368600965972,116.170912373556)" rx="2" ry="2" />
<text  x="575.90" y="241.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (8,302 us, 0.02%)</title><rect x="381.4" y="151" width="0.2" height="15.0" fill="rgb(150.505804094058,159.219985380037,150.505804094058)" rx="2" ry="2" />
<text  x="384.36" y="161.5" ></text>
</g>
<g >
<title>firedrake.extrusion_utils.make_extruded_coords (3,587,463 us, 9.88%)</title><rect x="10.0" y="87" width="116.6" height="15.0" fill="rgb(155.318405263316,137.441107018758,137.441107018758)" rx="2" ry="2" />
<text  x="13.00" y="97.5" >firedrake.ext..</text>
</g>
<g >
<title>firedrake.ufl_expr.action (17,430 us, 0.05%)</title><rect x="379.4" y="119" width="0.6" height="15.0" fill="rgb(114.104754107564,146.619751064924,146.619751064924)" rx="2" ry="2" />
<text  x="382.45" y="129.5" ></text>
</g>
<g >
<title>ParLoopExecute (3,519,837 us, 9.70%)</title><rect x="12.2" y="103" width="114.4" height="15.0" fill="rgb(125.100449539716,149.470486917704,149.470486917704)" rx="2" ry="2" />
<text  x="15.20" y="113.5" >ParLoopExecute</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (3,519,837 us, 9.70%)</title><rect x="12.2" y="135" width="114.4" height="15.0" fill="rgb(114.971886748783,114.971886748783,149.67197808041)" rx="2" ry="2" />
<text  x="15.20" y="145.5" >pyop2.global..</text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (8,302 us, 0.02%)</title><rect x="381.4" y="167" width="0.2" height="15.0" fill="rgb(138.47222184991,152.937242701828,152.937242701828)" rx="2" ry="2" />
<text  x="384.36" y="177.5" ></text>
</g>
<g >
<title>Log_Event_form0_cell_integral_otherwise (5,318 us, 0.01%)</title><rect x="605.6" y="151" width="0.2" height="15.0" fill="rgb(156.007070679884,142.720875212448,142.720875212448)" rx="2" ry="2" />
<text  x="608.64" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (8,302 us, 0.02%)</title><rect x="381.4" y="183" width="0.2" height="15.0" fill="rgb(148.203123188144,148.203123188144,110.522827757929)" rx="2" ry="2" />
<text  x="384.36" y="193.5" ></text>
</g>
<g >
<title>ParLoopExecute (11,321,866 us, 31.19%)</title><rect x="605.6" y="119" width="368.0" height="15.0" fill="rgb(152.201451062268,113.544458144058,113.544458144058)" rx="2" ry="2" />
<text  x="608.64" y="129.5" >ParLoopExecute</text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (25,385 us, 0.07%)</title><rect x="126.6" y="135" width="0.8" height="15.0" fill="rgb(139.351500667779,110.213220461183,139.351500667779)" rx="2" ry="2" />
<text  x="129.60" y="145.5" ></text>
</g>
<g >
<title>all (36,303,890 us, 100%)</title><rect x="10.0" y="39" width="1180.0" height="15.0" fill="rgb(105.866587131546,144.483929997067,144.483929997067)" rx="2" ry="2" />
<text  x="13.00" y="49.5" ></text>
</g>
<g >
<title>FunctionSpaceData: CreateElement (8,302 us, 0.02%)</title><rect x="381.4" y="199" width="0.2" height="15.0" fill="rgb(136.721468092432,152.483343579519,152.483343579519)" rx="2" ry="2" />
<text  x="384.36" y="209.5" ></text>
</g>
<g >
<title>firedrake.interpolation.make_interpolator (21,848 us, 0.06%)</title><rect x="573.0" y="135" width="0.7" height="15.0" fill="rgb(149.380678217403,149.380678217403,116.229440592028)" rx="2" ry="2" />
<text  x="576.04" y="145.5" ></text>
</g>
<g >
<title>HybridInit (6,925,337 us, 19.08%)</title><rect x="380.3" y="119" width="225.1" height="15.0" fill="rgb(147.687116951217,147.687116951217,108.022182148207)" rx="2" ry="2" />
<text  x="383.29" y="129.5" >HybridInit</text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (14,010 us, 0.04%)</title><rect x="572.6" y="167" width="0.4" height="15.0" fill="rgb(131.149624147132,151.038791445553,151.038791445553)" rx="2" ry="2" />
<text  x="575.58" y="177.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (2,995,002 us, 8.25%)</title><rect x="876.3" y="151" width="97.3" height="15.0" fill="rgb(147.947258537986,159.636492796142,147.947258537986)" rx="2" ry="2" />
<text  x="879.29" y="161.5" >pyop2.glob..</text>
</g>
<g >
<title>firedrake.mesh._from_cell_list (6,568 us, 0.02%)</title><rect x="375.8" y="103" width="0.2" height="15.0" fill="rgb(139.867814847425,139.867814847425,154.490544809179)" rx="2" ry="2" />
<text  x="378.83" y="113.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.action (44,875 us, 0.12%)</title><rect x="376.0" y="87" width="1.5" height="15.0" fill="rgb(118.931746427614,147.87119351827,147.87119351827)" rx="2" ry="2" />
<text  x="379.04" y="97.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (967,300 us, 2.66%)</title><rect x="573.9" y="167" width="31.5" height="15.0" fill="rgb(118.235432163296,147.690667597892,147.690667597892)" rx="2" ry="2" />
<text  x="576.95" y="177.5" >Pa..</text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (3,468,812 us, 9.55%)</title><rect x="456.1" y="151" width="112.7" height="15.0" fill="rgb(153.026037824087,153.026037824087,133.895414070575)" rx="2" ry="2" />
<text  x="459.05" y="161.5" >firedrake.ts..</text>
</g>
<g >
<title>CreateMesh (10,256 us, 0.03%)</title><rect x="131.9" y="87" width="0.4" height="15.0" fill="rgb(152.423216059432,152.423216059432,130.974047057245)" rx="2" ry="2" />
<text  x="134.94" y="97.5" ></text>
</g>
<g >
<title>PCSetUp (6,925,337 us, 19.08%)</title><rect x="380.3" y="103" width="225.1" height="15.0" fill="rgb(131.259326807124,162.353132845352,131.259326807124)" rx="2" ry="2" />
<text  x="383.29" y="113.5" >PCSetUp</text>
</g>
<g >
<title>CreateSparsity (75,035 us, 0.21%)</title><rect x="568.9" y="151" width="2.5" height="15.0" fill="rgb(137.231362213563,137.231362213563,153.980263654238)" rx="2" ry="2" />
<text  x="571.93" y="161.5" ></text>
</g>
<g >
<title>SNESFunctionEval (17,986,181 us, 49.54%)</title><rect x="605.4" y="103" width="584.6" height="15.0" fill="rgb(154.809180271524,133.537048748352,133.537048748352)" rx="2" ry="2" />
<text  x="608.39" y="113.5" >SNESFunctionEval</text>
</g>
<g >
<title>ParLoopExecute (967,300 us, 2.66%)</title><rect x="573.9" y="151" width="31.5" height="15.0" fill="rgb(118.414489966941,147.737089991429,147.737089991429)" rx="2" ry="2" />
<text  x="576.95" y="161.5" >Pa..</text>
</g>
<g >
<title>FunctionSpaceData: CreateElement (10,333 us, 0.03%)</title><rect x="127.1" y="167" width="0.3" height="15.0" fill="rgb(140.054253725723,112.014025172166,140.054253725723)" rx="2" ry="2" />
<text  x="130.09" y="177.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (25,385 us, 0.07%)</title><rect x="126.6" y="151" width="0.8" height="15.0" fill="rgb(155.284715127114,137.182815974538,137.182815974538)" rx="2" ry="2" />
<text  x="129.60" y="161.5" ></text>
</g>
<g >
<title>CreateMesh (6,998 us, 0.02%)</title><rect x="375.6" y="103" width="0.2" height="15.0" fill="rgb(109.911011869097,145.532484558655,145.532484558655)" rx="2" ry="2" />
<text  x="378.60" y="113.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (8,829 us, 0.02%)</title><rect x="1189.7" y="151" width="0.3" height="15.0" fill="rgb(136.670192506249,136.670192506249,153.8716501625)" rx="2" ry="2" />
<text  x="1192.71" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspace.VectorFunctionSpace (25,385 us, 0.07%)</title><rect x="126.6" y="87" width="0.8" height="15.0" fill="rgb(135.255700354083,99.7177321573379,135.255700354083)" rx="2" ry="2" />
<text  x="129.60" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (97,887 us, 0.27%)</title><rect x="128.4" y="103" width="3.2" height="15.0" fill="rgb(137.108319453253,161.400971251796,137.108319453253)" rx="2" ry="2" />
<text  x="131.38" y="113.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.LinearVariationalProblem.__init__ (98,478 us, 0.27%)</title><rect x="376.0" y="71" width="3.2" height="15.0" fill="rgb(131.91778971355,162.245941209422,131.91778971355)" rx="2" ry="2" />
<text  x="379.04" y="81.5" ></text>
</g>
<g >
<title>CreateMesh (39,754 us, 0.11%)</title><rect x="131.6" y="71" width="1.3" height="15.0" fill="rgb(154.488324420314,154.488324420314,140.98187988306)" rx="2" ry="2" />
<text  x="134.56" y="81.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.solve (24,911,518 us, 68.62%)</title><rect x="380.3" y="71" width="809.7" height="15.0" fill="rgb(120.892825592658,120.892825592658,150.81796624374)" rx="2" ry="2" />
<text  x="383.29" y="81.5" >firedrake.variational_solver.NonlinearVariationalSolver.solve</text>
</g>
<g >
<title>firedrake.functionspace.MixedFunctionSpace (5,154 us, 0.01%)</title><rect x="381.2" y="151" width="0.2" height="15.0" fill="rgb(118.45345023,118.45345023,150.345829076774)" rx="2" ry="2" />
<text  x="384.20" y="161.5" ></text>
</g>
<g >
<title>firedrake.mesh.ExtrudedMeshTopology.__init__ (13,502 us, 0.04%)</title><rect x="127.4" y="87" width="0.5" height="15.0" fill="rgb(137.026317485211,152.562378607277,152.562378607277)" rx="2" ry="2" />
<text  x="130.43" y="97.5" ></text>
</g>
<g >
<title>firedrake.matrix_free.operators.ImplicitMatrixContext.__init__ (25,969 us, 0.07%)</title><rect x="379.4" y="103" width="0.9" height="15.0" fill="rgb(116.989700161763,116.989700161763,150.062522611954)" rx="2" ry="2" />
<text  x="382.45" y="113.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (31,802 us, 0.09%)</title><rect x="377.7" y="103" width="1.1" height="15.0" fill="rgb(129.268821081548,162.677168661143,129.268821081548)" rx="2" ry="2" />
<text  x="380.74" y="113.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (25,385 us, 0.07%)</title><rect x="126.6" y="103" width="0.8" height="15.0" fill="rgb(115.778829108578,147.053770509631,147.053770509631)" rx="2" ry="2" />
<text  x="129.60" y="113.5" ></text>
</g>
<g >
<title>Log_Event_form1_cell_integral_otherwise (7,231 us, 0.02%)</title><rect x="876.1" y="151" width="0.2" height="15.0" fill="rgb(120.297529174086,120.297529174086,150.702747582081)" rx="2" ry="2" />
<text  x="879.06" y="161.5" ></text>
</g>
<g >
<title>firedrake.assemble.allocate_matrix (25,969 us, 0.07%)</title><rect x="379.4" y="87" width="0.9" height="15.0" fill="rgb(146.526221800898,146.526221800898,155.779268735658)" rx="2" ry="2" />
<text  x="382.45" y="97.5" ></text>
</g>
<g >
<title>MatZeroInitial (30,945 us, 0.09%)</title><rect x="571.4" y="151" width="1.0" height="15.0" fill="rgb(155.499928831547,138.832787708524,138.832787708524)" rx="2" ry="2" />
<text  x="574.37" y="161.5" ></text>
</g>
<g >
<title>firedrake.utility_meshes.RectangleMesh (13,566 us, 0.04%)</title><rect x="375.6" y="87" width="0.4" height="15.0" fill="rgb(153.48661308027,123.397366948737,123.397366948737)" rx="2" ry="2" />
<text  x="378.60" y="97.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (956,669 us, 2.64%)</title><rect x="574.3" y="183" width="31.1" height="15.0" fill="rgb(137.765759952869,161.293946054184,137.765759952869)" rx="2" ry="2" />
<text  x="577.29" y="193.5" >py..</text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (25,385 us, 0.07%)</title><rect x="126.6" y="119" width="0.8" height="15.0" fill="rgb(108.049176878664,145.049786598172,145.049786598172)" rx="2" ry="2" />
<text  x="129.60" y="129.5" ></text>
</g>
<g >
<title>PetscBarrier (66,519 us, 0.18%)</title><rect x="132.9" y="71" width="2.1" height="15.0" fill="rgb(145.93925630632,145.93925630632,155.665662510901)" rx="2" ry="2" />
<text  x="135.86" y="81.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (20,229 us, 0.06%)</title><rect x="572.4" y="135" width="0.6" height="15.0" fill="rgb(134.985110767075,134.985110767075,153.545505309756)" rx="2" ry="2" />
<text  x="575.38" y="145.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (8,314,315 us, 22.90%)</title><rect x="605.8" y="151" width="270.3" height="15.0" fill="rgb(148.282758113503,159.581876586174,148.282758113503)" rx="2" ry="2" />
<text  x="608.82" y="161.5" >pyop2.global_kernel.GlobalKernel...</text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (97,887 us, 0.27%)</title><rect x="128.4" y="119" width="3.2" height="15.0" fill="rgb(156.245690471977,144.550293618491,144.550293618491)" rx="2" ry="2" />
<text  x="131.38" y="129.5" ></text>
</g>
<g >
<title>firedrake.utility_meshes.SquareMesh (13,566 us, 0.04%)</title><rect x="375.6" y="71" width="0.4" height="15.0" fill="rgb(141.450431423217,160.694115814825,141.450431423217)" rx="2" ry="2" />
<text  x="378.60" y="81.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.__init__ (32,174 us, 0.09%)</title><rect x="379.2" y="71" width="1.1" height="15.0" fill="rgb(128.11666298934,128.11666298934,152.216128320517)" rx="2" ry="2" />
<text  x="382.25" y="81.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_pyop2_kernel_uniform_extrusion (3,519,837 us, 9.70%)</title><rect x="12.2" y="119" width="114.4" height="15.0" fill="rgb(154.962437835641,134.712023406577,134.712023406577)" rx="2" ry="2" />
<text  x="15.20" y="129.5" >Parloop_Cell..</text>
</g>
<g >
<title>firedrake.function.Function.split (14,601 us, 0.04%)</title><rect x="378.8" y="119" width="0.4" height="15.0" fill="rgb(154.383931767318,154.383931767318,140.475977026234)" rx="2" ry="2" />
<text  x="381.77" y="129.5" ></text>
</g>
<g >
<title>FunctionSpaceData: CreateElement (17,475 us, 0.05%)</title><rect x="129.7" y="135" width="0.6" height="15.0" fill="rgb(107.121186215273,144.809196426182,144.809196426182)" rx="2" ry="2" />
<text  x="132.69" y="145.5" ></text>
</g>
<g >
<title>firedrake.mesh.MeshTopology._facets (40,269 us, 0.11%)</title><rect x="130.3" y="135" width="1.3" height="15.0" fill="rgb(150.827929375773,150.827929375773,123.243042359513)" rx="2" ry="2" />
<text  x="133.26" y="145.5" ></text>
</g>
<g >
<title>firedrake.parloops.par_loop (973,488 us, 2.68%)</title><rect x="573.7" y="135" width="31.7" height="15.0" fill="rgb(133.701631656003,95.735431118507,133.701631656003)" rx="2" ry="2" />
<text  x="576.75" y="145.5" >fi..</text>
</g>
<g >
<title>firedrake.assemble.allocate_matrix (110,024 us, 0.30%)</title><rect x="568.8" y="135" width="3.6" height="15.0" fill="rgb(145.068094429749,145.068094429749,155.49705053479)" rx="2" ry="2" />
<text  x="571.80" y="145.5" ></text>
</g>
<g >
<title>Mesh: reorder (6,170 us, 0.02%)</title><rect x="132.7" y="87" width="0.2" height="15.0" fill="rgb(121.430172523785,148.518933617278,148.518933617278)" rx="2" ry="2" />
<text  x="135.66" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (4,160 us, 0.01%)</title><rect x="572.9" y="215" width="0.1" height="15.0" fill="rgb(140.366466414277,140.366466414277,154.587058015667)" rx="2" ry="2" />
<text  x="575.90" y="225.5" ></text>
</g>
<g >
<title>CreateMesh (6,998 us, 0.02%)</title><rect x="375.6" y="119" width="0.2" height="15.0" fill="rgb(107.10438190554,144.804839753288,144.804839753288)" rx="2" ry="2" />
<text  x="378.60" y="129.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (15,303 us, 0.04%)</title><rect x="1189.5" y="135" width="0.5" height="15.0" fill="rgb(143.551789843538,143.551789843538,155.203572227782)" rx="2" ry="2" />
<text  x="1192.50" y="145.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalProblem.__init__ (53,603 us, 0.15%)</title><rect x="377.5" y="87" width="1.7" height="15.0" fill="rgb(154.72492768161,132.89111222568,132.89111222568)" rx="2" ry="2" />
<text  x="380.50" y="97.5" ></text>
</g>
<g >
<title>CreateExtMesh (3,626,350 us, 9.99%)</title><rect x="10.0" y="71" width="117.9" height="15.0" fill="rgb(148.23543078957,159.589581034256,148.23543078957)" rx="2" ry="2" />
<text  x="13.00" y="81.5" >CreateExtMesh</text>
</g>
</g>
</svg>
