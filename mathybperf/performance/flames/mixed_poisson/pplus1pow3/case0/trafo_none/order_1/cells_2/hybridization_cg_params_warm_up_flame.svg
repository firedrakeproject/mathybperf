<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="267" onload="init(evt)" viewBox="0 0 1200 267" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:13px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:18px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 13 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (1 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="267.0" fill="url(#background)"  />
<text id="title" x="600.00" y="26" >Firedrake example</text>
<text id="details" x="10.00" y="249" > </text>
<text id="unzoom" x="10.00" y="26" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="26" >Search</text>
<text id="ignorecase" x="1174.00" y="26" >ic</text>
<text id="matched" x="1090.00" y="249" > </text>
<g id="frames">
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.__init__ (33,646 us, 0.02%)</title><rect x="54.1" y="71" width="0.3" height="15.0" fill="rgb(129.478865030183,150.605631674492,150.605631674492)" rx="2" ry="2" />
<text  x="57.10" y="81.5" ></text>
</g>
<g >
<title>ParLoopExecute (975,466 us, 0.70%)</title><rect x="1073.4" y="151" width="8.3" height="15.0" fill="rgb(153.456791249822,123.168732915306,123.168732915306)" rx="2" ry="2" />
<text  x="1076.44" y="161.5" ></text>
</g>
<g >
<title>PetscBarrier (39,104 us, 0.03%)</title><rect x="27.1" y="71" width="0.3" height="15.0" fill="rgb(137.915308449927,152.792857746277,152.792857746277)" rx="2" ry="2" />
<text  x="30.07" y="81.5" ></text>
</g>
<g >
<title>SCSolve (26,535 us, 0.02%)</title><rect x="757.7" y="135" width="0.2" height="15.0" fill="rgb(111.890458501036,146.045674426194,146.045674426194)" rx="2" ry="2" />
<text  x="760.65" y="145.5" ></text>
</g>
<g >
<title>SCForwardElim (36,148,404 us, 25.82%)</title><rect x="453.0" y="135" width="304.7" height="15.0" fill="rgb(151.070377888748,159.128078018111,151.070377888748)" rx="2" ry="2" />
<text  x="456.02" y="145.5" >SCForwardElim</text>
</g>
<g >
<title>CreateSparsity (71,519 us, 0.05%)</title><rect x="1072.4" y="151" width="0.6" height="15.0" fill="rgb(124.234398189292,124.234398189292,151.464722230186)" rx="2" ry="2" />
<text  x="1075.37" y="161.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_wrap_slate_loopy_knl_4 (31,279,741 us, 22.34%)</title><rect x="471.3" y="183" width="263.6" height="15.0" fill="rgb(155.021822850978,135.167308524164,135.167308524164)" rx="2" ry="2" />
<text  x="474.32" y="193.5" >Parloop_Cells_wrap_wrap_slate_lo..</text>
</g>
<g >
<title>HybridRHS (34,750,046 us, 24.82%)</title><rect x="464.8" y="151" width="292.9" height="15.0" fill="rgb(135.176800805643,99.5155520644613,135.176800805643)" rx="2" ry="2" />
<text  x="467.80" y="161.5" >HybridRHS</text>
</g>
<g >
<title>HybridOperatorAssembly (37,266,030 us, 26.61%)</title><rect x="758.3" y="135" width="314.1" height="15.0" fill="rgb(141.100085319876,160.751148901416,141.100085319876)" rx="2" ry="2" />
<text  x="761.32" y="145.5" >HybridOperatorAssembly</text>
</g>
<g >
<title>HybridInit (38,420,920 us, 27.44%)</title><rect x="757.9" y="119" width="323.8" height="15.0" fill="rgb(154.342070518008,129.955873971392,129.955873971392)" rx="2" ry="2" />
<text  x="760.87" y="129.5" >HybridInit</text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (3,268,641 us, 2.33%)</title><rect x="1044.8" y="151" width="27.6" height="15.0" fill="rgb(112.807944539622,112.807944539622,149.253150556056)" rx="2" ry="2" />
<text  x="1047.83" y="161.5" >f..</text>
</g>
<g >
<title>HybridBreak (1,398,358 us, 1.00%)</title><rect x="453.0" y="151" width="11.8" height="15.0" fill="rgb(137.884220567197,152.784797924829,152.784797924829)" rx="2" ry="2" />
<text  x="456.02" y="161.5" ></text>
</g>
<g >
<title>firedrake.parloops.par_loop (975,466 us, 0.70%)</title><rect x="1073.4" y="135" width="8.3" height="15.0" fill="rgb(136.752524268604,161.458891398134,136.752524268604)" rx="2" ry="2" />
<text  x="1076.44" y="145.5" ></text>
</g>
<g >
<title>Log_Event_subkernel17_interior_facet_vert_to__exterior_facet_vert_integral_otherwise (14,500 us, 0.01%)</title><rect x="70.5" y="183" width="0.1" height="15.0" fill="rgb(147.459368740812,159.715916716612,147.459368740812)" rx="2" ry="2" />
<text  x="73.46" y="193.5" ></text>
</g>
<g >
<title>KSPSolve (83,463,855 us, 59.61%)</title><rect x="54.5" y="103" width="703.4" height="15.0" fill="rgb(153.51605895849,123.623118681753,123.623118681753)" rx="2" ry="2" />
<text  x="57.50" y="113.5" >KSPSolve</text>
</g>
<g >
<title>HybridProject (1,103,111 us, 0.79%)</title><rect x="60.7" y="151" width="9.3" height="15.0" fill="rgb(146.123989632837,146.123989632837,155.701417348291)" rx="2" ry="2" />
<text  x="63.72" y="161.5" ></text>
</g>
<g >
<title>SNESSolve (134,755,290 us, 96.24%)</title><rect x="54.4" y="87" width="1135.6" height="15.0" fill="rgb(148.000184726441,148.000184726441,109.539356751212)" rx="2" ry="2" />
<text  x="57.38" y="97.5" >SNESSolve</text>
</g>
<g >
<title>Log_Event_slate_loopy_knl_0 (29,000 us, 0.02%)</title><rect x="769.0" y="183" width="0.2" height="15.0" fill="rgb(153.737130390975,125.317999664142,125.317999664142)" rx="2" ry="2" />
<text  x="771.98" y="193.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (14,466 us, 0.01%)</title><rect x="1073.2" y="135" width="0.1" height="15.0" fill="rgb(151.713186188247,151.713186188247,127.533133066119)" rx="2" ry="2" />
<text  x="1076.15" y="145.5" ></text>
</g>
<g >
<title>firedrake (140,021,706 us, 100.00%)</title><rect x="10.0" y="55" width="1180.0" height="15.0" fill="rgb(148.224409394627,148.224409394627,110.625983989345)" rx="2" ry="2" />
<text  x="13.00" y="65.5" >firedrake</text>
</g>
<g >
<title>all (140,021,706 us, 100%)</title><rect x="10.0" y="39" width="1180.0" height="15.0" fill="rgb(122.788594689039,122.788594689039,151.184889294653)" rx="2" ry="2" />
<text  x="13.00" y="49.5" ></text>
</g>
<g >
<title>KSPSolve (26,535 us, 0.02%)</title><rect x="757.7" y="151" width="0.2" height="15.0" fill="rgb(137.194198094532,152.605903209693,152.605903209693)" rx="2" ry="2" />
<text  x="760.65" y="161.5" ></text>
</g>
<g >
<title>CreateExtMesh (1,215,433 us, 0.87%)</title><rect x="16.2" y="71" width="10.3" height="15.0" fill="rgb(143.919043056756,121.917547832938,143.919043056756)" rx="2" ry="2" />
<text  x="19.21" y="81.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_form0_cell_integral_otherwise (6,903,439 us, 4.93%)</title><rect x="1081.7" y="135" width="58.1" height="15.0" fill="rgb(153.204927848113,121.237780168869,121.237780168869)" rx="2" ry="2" />
<text  x="1084.66" y="145.5" >Parlo..</text>
</g>
<g >
<title>Log_Event_slate_loopy_knl_4 (20,963 us, 0.01%)</title><rect x="471.7" y="199" width="0.1" height="15.0" fill="rgb(107.117986627643,144.808366903463,144.808366903463)" rx="2" ry="2" />
<text  x="474.66" y="209.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (49,485 us, 0.04%)</title><rect x="26.5" y="119" width="0.4" height="15.0" fill="rgb(154.187538005914,128.771124712007,128.771124712007)" rx="2" ry="2" />
<text  x="29.45" y="129.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (32,703,695 us, 23.36%)</title><rect x="769.2" y="183" width="275.6" height="15.0" fill="rgb(156.044931954224,143.011144982381,143.011144982381)" rx="2" ry="2" />
<text  x="772.23" y="193.5" >pyop2.global_kernel.GlobalKernel...</text>
</g>
<g >
<title>ParLoopExecute (1,161,945 us, 0.83%)</title><rect x="16.7" y="103" width="9.8" height="15.0" fill="rgb(151.274630538696,151.274630538696,125.407824918295)" rx="2" ry="2" />
<text  x="19.66" y="113.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (1,103,111 us, 0.79%)</title><rect x="60.7" y="215" width="9.3" height="15.0" fill="rgb(156.403271625048,145.758415792038,145.758415792038)" rx="2" ry="2" />
<text  x="63.72" y="225.5" ></text>
</g>
<g >
<title>ParLoopExecute (32,812,055 us, 23.43%)</title><rect x="768.3" y="151" width="276.5" height="15.0" fill="rgb(130.042748173039,150.751823600418,150.751823600418)" rx="2" ry="2" />
<text  x="771.31" y="161.5" >ParLoopExecute</text>
</g>
<g >
<title>CreateFunctionSpace (20,005 us, 0.01%)</title><rect x="758.2" y="135" width="0.1" height="15.0" fill="rgb(128.623605361389,162.782203778379,128.623605361389)" rx="2" ry="2" />
<text  x="761.15" y="145.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_form1_cell_integral_otherwise (4,437,586 us, 3.17%)</title><rect x="1139.8" y="135" width="37.4" height="15.0" fill="rgb(153.759970480853,153.759970480853,137.452164637978)" rx="2" ry="2" />
<text  x="1142.83" y="145.5" >Pa..</text>
</g>
<g >
<title>Log_Event_slate_loopy_knl_7 (55,939 us, 0.04%)</title><rect x="216.7" y="199" width="0.5" height="15.0" fill="rgb(122.020324616564,122.020324616564,151.03619186127)" rx="2" ry="2" />
<text  x="219.72" y="209.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (1,161,945 us, 0.83%)</title><rect x="16.7" y="135" width="9.8" height="15.0" fill="rgb(155.763119942105,140.850586222802,140.850586222802)" rx="2" ry="2" />
<text  x="19.66" y="145.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (1,103,111 us, 0.79%)</title><rect x="60.7" y="199" width="9.3" height="15.0" fill="rgb(143.91729215742,160.292533834839,143.91729215742)" rx="2" ry="2" />
<text  x="63.72" y="209.5" ></text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (2,697,362 us, 1.93%)</title><rect x="734.9" y="167" width="22.8" height="15.0" fill="rgb(146.579172778704,159.859204431374,146.579172778704)" rx="2" ry="2" />
<text  x="737.92" y="177.5" ></text>
</g>
<g >
<title>ParLoopExecute (11,341,025 us, 8.10%)</title><rect x="1081.7" y="119" width="95.5" height="15.0" fill="rgb(143.932235527211,160.290101193245,143.932235527211)" rx="2" ry="2" />
<text  x="1084.66" y="129.5" >ParLoopExe..</text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (49,485 us, 0.04%)</title><rect x="26.5" y="103" width="0.4" height="15.0" fill="rgb(118.572047007265,118.572047007265,150.368783291729)" rx="2" ry="2" />
<text  x="29.45" y="113.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (49,485 us, 0.04%)</title><rect x="26.5" y="87" width="0.4" height="15.0" fill="rgb(136.505536399367,152.427361288725,152.427361288725)" rx="2" ry="2" />
<text  x="29.45" y="97.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (22,433,161 us, 16.02%)</title><rect x="217.2" y="199" width="189.0" height="15.0" fill="rgb(155.223310499542,136.712047163158,136.712047163158)" rx="2" ry="2" />
<text  x="220.19" y="209.5" >pyop2.global_kernel.Gl..</text>
</g>
<g >
<title>ParLoopExecute (22,537,343 us, 16.10%)</title><rect x="216.3" y="167" width="189.9" height="15.0" fill="rgb(152.581300542919,116.456637495714,116.456637495714)" rx="2" ry="2" />
<text  x="219.31" y="177.5" >ParLoopExecute</text>
</g>
<g >
<title>SCBackSub (47,288,916 us, 33.77%)</title><rect x="54.5" y="135" width="398.5" height="15.0" fill="rgb(142.488040042656,160.525202783754,142.488040042656)" rx="2" ry="2" />
<text  x="57.50" y="145.5" >SCBackSub</text>
</g>
<g >
<title>firedrake.parloops.par_loop (1,103,111 us, 0.79%)</title><rect x="60.7" y="167" width="9.3" height="15.0" fill="rgb(133.999970875453,133.999970875453,153.354833072668)" rx="2" ry="2" />
<text  x="63.72" y="177.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (1,398,358 us, 1.00%)</title><rect x="453.0" y="199" width="11.8" height="15.0" fill="rgb(155.305263773996,137.340355600633,137.340355600633)" rx="2" ry="2" />
<text  x="456.02" y="209.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_wrap_slate_loopy_knl_7 (22,537,343 us, 16.10%)</title><rect x="216.3" y="183" width="189.9" height="15.0" fill="rgb(136.984487569422,161.421129930559,136.984487569422)" rx="2" ry="2" />
<text  x="219.31" y="193.5" >Parloop_Cells_wrap_wra..</text>
</g>
<g >
<title>firedrake.interpolation.make_interpolator (19,405 us, 0.01%)</title><rect x="1073.3" y="135" width="0.1" height="15.0" fill="rgb(150.013208679225,150.013208679225,119.294780522396)" rx="2" ry="2" />
<text  x="1076.27" y="145.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.LinearVariationalProblem.__init__ (14,606 us, 0.01%)</title><rect x="54.0" y="71" width="0.1" height="15.0" fill="rgb(154.219708465685,154.219708465685,139.680125641396)" rx="2" ry="2" />
<text  x="56.97" y="81.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (49,485 us, 0.04%)</title><rect x="26.5" y="71" width="0.4" height="15.0" fill="rgb(109.49554910549,145.424771990312,145.424771990312)" rx="2" ry="2" />
<text  x="29.45" y="81.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_wrap_slate_loopy_knl_14 (16,312,717 us, 11.65%)</title><rect x="70.0" y="167" width="137.5" height="15.0" fill="rgb(108.382112631416,145.136103274812,145.136103274812)" rx="2" ry="2" />
<text  x="73.01" y="177.5" >Parloop_Cells_w..</text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalProblem.__init__ (14,606 us, 0.01%)</title><rect x="54.0" y="87" width="0.1" height="15.0" fill="rgb(152.146784166797,143.001134427417,152.146784166797)" rx="2" ry="2" />
<text  x="56.97" y="97.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (31,217,854 us, 22.30%)</title><rect x="471.8" y="199" width="263.1" height="15.0" fill="rgb(106.156527907543,144.559099827881,144.559099827881)" rx="2" ry="2" />
<text  x="474.84" y="209.5" >pyop2.global_kernel.GlobalKernel..</text>
</g>
<g >
<title>PCSetUp (38,420,920 us, 27.44%)</title><rect x="757.9" y="103" width="323.8" height="15.0" fill="rgb(133.982357570735,133.982357570735,153.351424045949)" rx="2" ry="2" />
<text  x="760.87" y="113.5" >PCSetUp</text>
</g>
<g >
<title>MatZeroInitial (20,727 us, 0.01%)</title><rect x="1073.0" y="151" width="0.2" height="15.0" fill="rgb(119.432583433763,148.001040149494,148.001040149494)" rx="2" ry="2" />
<text  x="1075.98" y="161.5" ></text>
</g>
<g >
<title>CreateMesh (23,411 us, 0.02%)</title><rect x="26.9" y="71" width="0.2" height="15.0" fill="rgb(112.75573989878,112.75573989878,149.243046432022)" rx="2" ry="2" />
<text  x="29.87" y="81.5" ></text>
</g>
<g >
<title>SNESFunctionEval (12,856,240 us, 9.18%)</title><rect x="1081.7" y="103" width="108.3" height="15.0" fill="rgb(112.61564412858,146.233685514817,146.233685514817)" rx="2" ry="2" />
<text  x="1084.66" y="113.5" >SNESFunction..</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (975,466 us, 0.70%)</title><rect x="1073.4" y="183" width="8.3" height="15.0" fill="rgb(106.430649518432,144.630168393668,144.630168393668)" rx="2" ry="2" />
<text  x="1076.44" y="193.5" ></text>
</g>
<g >
<title>ParLoopExecute (1,103,111 us, 0.79%)</title><rect x="60.7" y="183" width="9.3" height="15.0" fill="rgb(152.34860544824,152.34860544824,130.612472556853)" rx="2" ry="2" />
<text  x="63.72" y="193.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.solve (134,755,290 us, 96.24%)</title><rect x="54.4" y="71" width="1135.6" height="15.0" fill="rgb(154.78322905261,133.338089403341,133.338089403341)" rx="2" ry="2" />
<text  x="57.38" y="81.5" >firedrake.variational_solver.NonlinearVariationalSolver.solve</text>
</g>
<g >
<title>firedrake.parloops.par_loop (1,398,358 us, 1.00%)</title><rect x="453.0" y="167" width="11.8" height="15.0" fill="rgb(113.342525424856,113.342525424856,149.356617824166)" rx="2" ry="2" />
<text  x="456.02" y="177.5" ></text>
</g>
<g >
<title>firedrake.mesh.MeshTopology._facets (20,646 us, 0.01%)</title><rect x="26.7" y="135" width="0.2" height="15.0" fill="rgb(149.576785440755,136.415512691934,149.576785440755)" rx="2" ry="2" />
<text  x="29.70" y="145.5" ></text>
</g>
<g >
<title>PCApply (83,463,855 us, 59.61%)</title><rect x="54.5" y="119" width="703.4" height="15.0" fill="rgb(121.810228689701,148.61746669733,148.61746669733)" rx="2" ry="2" />
<text  x="57.50" y="129.5" >PCApply</text>
</g>
<g >
<title>RecoverFirstElim (26,991,747 us, 19.28%)</title><rect x="207.5" y="151" width="227.5" height="15.0" fill="rgb(147.917212709913,159.641383977456,147.917212709913)" rx="2" ry="2" />
<text  x="210.49" y="161.5" >RecoverFirstElim</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (6,903,439 us, 4.93%)</title><rect x="1081.7" y="151" width="58.1" height="15.0" fill="rgb(135.865968205335,152.261547312494,152.261547312494)" rx="2" ry="2" />
<text  x="1084.66" y="161.5" >pyop2..</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (1,398,358 us, 1.00%)</title><rect x="453.0" y="215" width="11.8" height="15.0" fill="rgb(147.766302825844,147.766302825844,108.405929079089)" rx="2" ry="2" />
<text  x="456.02" y="225.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (4,437,586 us, 3.17%)</title><rect x="1139.8" y="151" width="37.4" height="15.0" fill="rgb(126.558917421665,149.848608220432,149.848608220432)" rx="2" ry="2" />
<text  x="1142.83" y="161.5" >py..</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (16,245,431 us, 11.60%)</title><rect x="70.6" y="183" width="136.9" height="15.0" fill="rgb(113.740994140642,146.525442925352,146.525442925352)" rx="2" ry="2" />
<text  x="73.58" y="193.5" >pyop2.global_ke..</text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (975,466 us, 0.70%)</title><rect x="1073.4" y="167" width="8.3" height="15.0" fill="rgb(149.188826585104,149.188826585104,115.299698066271)" rx="2" ry="2" />
<text  x="1076.44" y="177.5" ></text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (1,515,215 us, 1.08%)</title><rect x="1177.2" y="119" width="12.8" height="15.0" fill="rgb(155.429828131726,138.295349009897,138.295349009897)" rx="2" ry="2" />
<text  x="1180.23" y="129.5" ></text>
</g>
<g >
<title>ParLoopExecute (31,279,741 us, 22.34%)</title><rect x="471.3" y="167" width="263.6" height="15.0" fill="rgb(109.397570826561,145.399370214294,145.399370214294)" rx="2" ry="2" />
<text  x="474.32" y="177.5" >ParLoopExecute</text>
</g>
<g >
<title>firedrake.assemble.allocate_matrix (92,246 us, 0.07%)</title><rect x="1072.4" y="135" width="0.8" height="15.0" fill="rgb(146.189124290318,159.922700696925,146.189124290318)" rx="2" ry="2" />
<text  x="1075.37" y="145.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_wrap_slate_loopy_knl_0 (32,812,055 us, 23.43%)</title><rect x="768.3" y="167" width="276.5" height="15.0" fill="rgb(135.626067727878,100.666798552687,135.626067727878)" rx="2" ry="2" />
<text  x="771.31" y="177.5" >Parloop_Cells_wrap_wrap_slate_loop..</text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (2,143,691 us, 1.53%)</title><rect x="435.0" y="151" width="18.0" height="15.0" fill="rgb(136.766560969312,161.456606353833,136.766560969312)" rx="2" ry="2" />
<text  x="437.95" y="161.5" ></text>
</g>
<g >
<title>firedrake.extrusion_utils.make_extruded_coords (1,200,912 us, 0.86%)</title><rect x="16.3" y="87" width="10.2" height="15.0" fill="rgb(144.206046383262,122.65299385711,144.206046383262)" rx="2" ry="2" />
<text  x="19.33" y="97.5" ></text>
</g>
<g >
<title>ParLoopExecute (1,398,358 us, 1.00%)</title><rect x="453.0" y="183" width="11.8" height="15.0" fill="rgb(135.765884478091,161.619507177985,135.765884478091)" rx="2" ry="2" />
<text  x="456.02" y="193.5" ></text>
</g>
<g >
<title>Log_Event_slate_loopy_knl_14 (19,822 us, 0.01%)</title><rect x="70.3" y="183" width="0.2" height="15.0" fill="rgb(139.594402282538,153.228178369547,153.228178369547)" rx="2" ry="2" />
<text  x="73.29" y="193.5" ></text>
</g>
<g >
<title>firedrake.__init__ (3,153,721 us, 2.25%)</title><rect x="27.4" y="71" width="26.6" height="15.0" fill="rgb(112.615890936089,146.233749501949,146.233749501949)" rx="2" ry="2" />
<text  x="30.40" y="81.5" >f..</text>
</g>
<g >
<title>Parloop_Cells_wrap_pyop2_kernel_uniform_extrusion (1,161,945 us, 0.83%)</title><rect x="16.7" y="119" width="9.8" height="15.0" fill="rgb(153.03833612148,119.96057693135,119.96057693135)" rx="2" ry="2" />
<text  x="19.66" y="129.5" ></text>
</g>
<g >
<title>ParLoopExecute (16,312,717 us, 11.65%)</title><rect x="70.0" y="151" width="137.5" height="15.0" fill="rgb(153.377709997884,153.377709997884,135.599671528207)" rx="2" ry="2" />
<text  x="73.01" y="161.5" >ParLoopExecute</text>
</g>
<g >
<title>solve_getrf (14,371 us, 0.01%)</title><rect x="217.1" y="215" width="0.1" height="15.0" fill="rgb(146.740805074101,159.832892197239,146.740805074101)" rx="2" ry="2" />
<text  x="220.07" y="225.5" ></text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (3,407,004 us, 2.43%)</title><rect x="406.2" y="167" width="28.8" height="15.0" fill="rgb(137.589187121942,105.697291999976,137.589187121942)" rx="2" ry="2" />
<text  x="409.24" y="177.5" >f..</text>
</g>
</g>
</svg>
