<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="283" onload="init(evt)" viewBox="0 0 1200 283" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:13px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:18px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 13 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (1 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="283.0" fill="url(#background)"  />
<text id="title" x="600.00" y="26" >Firedrake example</text>
<text id="details" x="10.00" y="265" > </text>
<text id="unzoom" x="10.00" y="26" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="26" >Search</text>
<text id="ignorecase" x="1174.00" y="26" >ic</text>
<text id="matched" x="1090.00" y="265" > </text>
<g id="frames">
<g >
<title>firedrake.interpolation.make_interpolator (28,741 us, 0.46%)</title><rect x="1128.4" y="135" width="5.5" height="15.0" fill="rgb(114.774625803394,114.774625803394,149.633798542592)" rx="2" ry="2" />
<text  x="1131.37" y="145.5" ></text>
</g>
<g >
<title>firedrake.functionspace.make_scalar_element (874 us, 0.01%)</title><rect x="37.1" y="87" width="0.1" height="15.0" fill="rgb(108.190599913202,145.086451829349,145.086451829349)" rx="2" ry="2" />
<text  x="40.06" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (755 us, 0.01%)</title><rect x="606.4" y="87" width="0.1" height="15.0" fill="rgb(153.129812454323,120.661895483146,120.661895483146)" rx="2" ry="2" />
<text  x="609.40" y="97.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.LinearVariationalProblem.__init__ (23,024 us, 0.37%)</title><rect x="608.2" y="71" width="4.4" height="15.0" fill="rgb(117.959550506527,147.619142723914,147.619142723914)" rx="2" ry="2" />
<text  x="611.23" y="81.5" ></text>
</g>
<g >
<title>firedrake.assemble.allocate_matrix (6,752 us, 0.11%)</title><rect x="613.3" y="87" width="1.2" height="15.0" fill="rgb(136.375055901425,152.393533011481,152.393533011481)" rx="2" ry="2" />
<text  x="616.25" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (2,422 us, 0.04%)</title><rect x="617.8" y="183" width="0.4" height="15.0" fill="rgb(155.848618050075,141.506071717243,141.506071717243)" rx="2" ry="2" />
<text  x="620.79" y="193.5" ></text>
</g>
<g >
<title>PetscBarrier (26,490 us, 0.43%)</title><rect x="49.1" y="71" width="5.1" height="15.0" fill="rgb(153.71182530085,153.71182530085,137.218845688734)" rx="2" ry="2" />
<text  x="52.10" y="81.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (8,394 us, 0.14%)</title><rect x="34.9" y="135" width="1.6" height="15.0" fill="rgb(155.220049348121,136.687045002259,136.687045002259)" rx="2" ry="2" />
<text  x="37.90" y="145.5" ></text>
</g>
<g >
<title>DMPlexSymmetrize (2,118 us, 0.03%)</title><rect x="53.8" y="87" width="0.4" height="15.0" fill="rgb(134.924949964036,98.8701842828424,134.924949964036)" rx="2" ry="2" />
<text  x="56.76" y="97.5" ></text>
</g>
<g >
<title>firedrake.__init__ (2,891,873 us, 46.79%)</title><rect x="54.2" y="71" width="552.0" height="15.0" fill="rgb(155.764400752315,140.86040576775,140.86040576775)" rx="2" ry="2" />
<text  x="57.16" y="81.5" >firedrake.__init__</text>
</g>
<g >
<title>firedrake.assemble.allocate_matrix (83,411 us, 1.35%)</title><rect x="1109.6" y="135" width="16.0" height="15.0" fill="rgb(115.407989805774,115.407989805774,149.756385123698)" rx="2" ry="2" />
<text  x="1112.64" y="145.5" ></text>
</g>
<g >
<title>FunctionSpaceData: CreateElement (6,531 us, 0.11%)</title><rect x="618.7" y="199" width="1.2" height="15.0" fill="rgb(128.418191489066,128.418191489066,152.274488675303)" rx="2" ry="2" />
<text  x="621.66" y="209.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.solve (3,014,356 us, 48.77%)</title><rect x="614.5" y="71" width="575.5" height="15.0" fill="rgb(124.217712096872,149.241629062152,149.241629062152)" rx="2" ry="2" />
<text  x="617.54" y="81.5" >firedrake.variational_solver.NonlinearVariationalSolver.solve</text>
</g>
<g >
<title>FunctionSpaceData: CreateElement (9,362 us, 0.15%)</title><rect x="40.2" y="135" width="1.8" height="15.0" fill="rgb(153.626437197885,124.469351850449,124.469351850449)" rx="2" ry="2" />
<text  x="43.20" y="145.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (45,780 us, 0.74%)</title><rect x="36.9" y="71" width="8.7" height="15.0" fill="rgb(151.649437932166,151.649437932166,127.224199209728)" rx="2" ry="2" />
<text  x="39.86" y="81.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalProblem.__init__ (10,761 us, 0.17%)</title><rect x="610.6" y="87" width="2.0" height="15.0" fill="rgb(148.983091367223,159.467868847196,148.983091367223)" rx="2" ry="2" />
<text  x="613.57" y="97.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.derivative (1,020 us, 0.02%)</title><rect x="612.4" y="103" width="0.2" height="15.0" fill="rgb(109.028384271085,145.303655181392,145.303655181392)" rx="2" ry="2" />
<text  x="615.43" y="113.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_form1_cell_integral_otherwise (75,900 us, 1.23%)</title><rect x="1166.4" y="135" width="14.5" height="15.0" fill="rgb(125.391952181266,163.308286854213,125.391952181266)" rx="2" ry="2" />
<text  x="1169.38" y="145.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (13,382 us, 0.22%)</title><rect x="1125.6" y="135" width="2.5" height="15.0" fill="rgb(154.9314061154,134.474113551401,134.474113551401)" rx="2" ry="2" />
<text  x="1128.56" y="145.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (42,833 us, 0.69%)</title><rect x="37.4" y="103" width="8.2" height="15.0" fill="rgb(128.009825327841,128.009825327841,152.195450063453)" rx="2" ry="2" />
<text  x="40.43" y="113.5" ></text>
</g>
<g >
<title>DMPlexStratify (3,832 us, 0.06%)</title><rect x="53.0" y="87" width="0.8" height="15.0" fill="rgb(118.922769012014,147.868866040152,147.868866040152)" rx="2" ry="2" />
<text  x="56.03" y="97.5" ></text>
</g>
<g >
<title>firedrake.utility_meshes.RectangleMesh (8,802 us, 0.14%)</title><rect x="606.5" y="87" width="1.7" height="15.0" fill="rgb(151.88882716583,151.88882716583,128.384316265176)" rx="2" ry="2" />
<text  x="609.55" y="97.5" ></text>
</g>
<g >
<title>CreateExtMesh (140,717 us, 2.28%)</title><rect x="10.0" y="71" width="26.9" height="15.0" fill="rgb(154.882929298517,134.102457955296,134.102457955296)" rx="2" ry="2" />
<text  x="13.00" y="81.5" >C..</text>
</g>
<g >
<title>firedrake.parloops.par_loop (86,867 us, 1.41%)</title><rect x="1133.9" y="135" width="16.5" height="15.0" fill="rgb(129.315521776858,129.315521776858,152.448165505198)" rx="2" ry="2" />
<text  x="1136.85" y="145.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (8,679 us, 0.14%)</title><rect x="618.2" y="167" width="1.7" height="15.0" fill="rgb(143.365015953295,143.365015953295,155.167422442573)" rx="2" ry="2" />
<text  x="621.25" y="177.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (43,899 us, 0.71%)</title><rect x="37.2" y="87" width="8.4" height="15.0" fill="rgb(120.280553800842,120.280553800842,150.699462025969)" rx="2" ry="2" />
<text  x="40.22" y="97.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (7,152 us, 0.12%)</title><rect x="1126.6" y="183" width="1.4" height="15.0" fill="rgb(149.874782501721,149.874782501721,118.623945969879)" rx="2" ry="2" />
<text  x="1129.60" y="193.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (69,480 us, 1.12%)</title><rect x="1137.2" y="183" width="13.2" height="15.0" fill="rgb(130.670623777282,162.448968222303,130.670623777282)" rx="2" ry="2" />
<text  x="1140.17" y="193.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (2,001 us, 0.03%)</title><rect x="1150.4" y="135" width="0.4" height="15.0" fill="rgb(121.531673356352,148.545248647943,148.545248647943)" rx="2" ry="2" />
<text  x="1153.44" y="145.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (9,898 us, 0.16%)</title><rect x="1126.2" y="167" width="1.9" height="15.0" fill="rgb(140.610548363168,153.49162364971,153.49162364971)" rx="2" ry="2" />
<text  x="1129.22" y="177.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.WithGeometry.split (806 us, 0.01%)</title><rect x="1128.0" y="183" width="0.1" height="15.0" fill="rgb(128.528644078084,128.528644078084,152.295866595758)" rx="2" ry="2" />
<text  x="1130.96" y="193.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (2,422 us, 0.04%)</title><rect x="617.8" y="199" width="0.4" height="15.0" fill="rgb(152.140001396346,113.073344038651,113.073344038651)" rx="2" ry="2" />
<text  x="620.79" y="209.5" ></text>
</g>
<g >
<title>CreateMesh (1,359 us, 0.02%)</title><rect x="606.9" y="119" width="0.3" height="15.0" fill="rgb(140.534217462473,153.471834156937,153.471834156937)" rx="2" ry="2" />
<text  x="609.95" y="129.5" ></text>
</g>
<g >
<title>firedrake.function.Function.split (1,020 us, 0.02%)</title><rect x="612.4" y="119" width="0.2" height="15.0" fill="rgb(130.82841802787,130.82841802787,152.740984134426)" rx="2" ry="2" />
<text  x="615.43" y="129.5" ></text>
</g>
<g >
<title>CreateSparsity (59,729 us, 0.97%)</title><rect x="1110.3" y="151" width="11.4" height="15.0" fill="rgb(154.489784616164,131.088348723924,131.088348723924)" rx="2" ry="2" />
<text  x="1113.32" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (8,394 us, 0.14%)</title><rect x="34.9" y="151" width="1.6" height="15.0" fill="rgb(152.81340036222,118.236069443689,118.236069443689)" rx="2" ry="2" />
<text  x="37.90" y="161.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (67,544 us, 1.09%)</title><rect x="1168.0" y="151" width="12.9" height="15.0" fill="rgb(137.897293999389,137.897293999389,154.109153677301)" rx="2" ry="2" />
<text  x="1170.97" y="161.5" ></text>
</g>
<g >
<title>firedrake.mesh.ExtrudedMeshTopology.__init__ (909 us, 0.01%)</title><rect x="36.5" y="87" width="0.2" height="15.0" fill="rgb(135.410979260997,100.115634356305,135.410979260997)" rx="2" ry="2" />
<text  x="39.51" y="97.5" ></text>
</g>
<g >
<title>Mesh: reorder (3,887 us, 0.06%)</title><rect x="48.4" y="87" width="0.7" height="15.0" fill="rgb(144.083142710726,160.265534907556,144.083142710726)" rx="2" ry="2" />
<text  x="51.36" y="97.5" ></text>
</g>
<g >
<title>SNESFunctionEval (205,242 us, 3.32%)</title><rect x="1150.8" y="103" width="39.2" height="15.0" fill="rgb(147.069220015261,159.779429299841,147.069220015261)" rx="2" ry="2" />
<text  x="1153.82" y="113.5" >SNE..</text>
</g>
<g >
<title>CreateFunctionSpace (13,495 us, 0.22%)</title><rect x="617.3" y="135" width="2.6" height="15.0" fill="rgb(142.621748263142,160.503436329256,142.621748263142)" rx="2" ry="2" />
<text  x="620.33" y="145.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (2,536 us, 0.04%)</title><rect x="1127.5" y="231" width="0.5" height="15.0" fill="rgb(114.869492173097,146.818016489321,146.818016489321)" rx="2" ry="2" />
<text  x="1130.48" y="241.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (80,232 us, 1.30%)</title><rect x="1135.1" y="167" width="15.3" height="15.0" fill="rgb(155.749722281691,140.747870826295,140.747870826295)" rx="2" ry="2" />
<text  x="1138.12" y="177.5" ></text>
</g>
<g >
<title>ParLoopExecute (95,731 us, 1.55%)</title><rect x="16.6" y="103" width="18.3" height="15.0" fill="rgb(148.418041199469,148.418041199469,111.564353505118)" rx="2" ry="2" />
<text  x="19.63" y="113.5" ></text>
</g>
<g >
<title>firedrake.functionspace.make_scalar_element (1,549 us, 0.03%)</title><rect x="1127.0" y="199" width="0.3" height="15.0" fill="rgb(149.842467697432,137.096323474669,149.842467697432)" rx="2" ry="2" />
<text  x="1129.97" y="209.5" ></text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (152,761 us, 2.47%)</title><rect x="1080.5" y="151" width="29.1" height="15.0" fill="rgb(153.217819652268,121.336617334052,121.336617334052)" rx="2" ry="2" />
<text  x="1083.47" y="161.5" >f..</text>
</g>
<g >
<title>DMPlexInterp (3,682 us, 0.06%)</title><rect x="607.5" y="119" width="0.7" height="15.0" fill="rgb(128.002878378031,162.883252357065,128.002878378031)" rx="2" ry="2" />
<text  x="610.52" y="129.5" ></text>
</g>
<g >
<title>SNESSolve (3,014,356 us, 48.77%)</title><rect x="614.5" y="87" width="575.5" height="15.0" fill="rgb(128.66970155946,150.395848552453,150.395848552453)" rx="2" ry="2" />
<text  x="617.54" y="97.5" >SNESSolve</text>
</g>
<g >
<title>firedrake.utility_meshes.SquareMesh (8,802 us, 0.14%)</title><rect x="606.5" y="71" width="1.7" height="15.0" fill="rgb(139.58047460424,160.998527390007,139.58047460424)" rx="2" ry="2" />
<text  x="609.55" y="81.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (8,679 us, 0.14%)</title><rect x="618.2" y="151" width="1.7" height="15.0" fill="rgb(126.256177228607,163.167599055808,126.256177228607)" rx="2" ry="2" />
<text  x="621.25" y="161.5" ></text>
</g>
<g >
<title>MatAssemblyEnd (742 us, 0.01%)</title><rect x="1121.7" y="151" width="0.2" height="15.0" fill="rgb(130.685504980195,130.685504980195,152.713323544554)" rx="2" ry="2" />
<text  x="1124.72" y="161.5" ></text>
</g>
<g >
<title>Log_Event_form1_cell_integral_otherwise (6,165 us, 0.10%)</title><rect x="1166.8" y="151" width="1.2" height="15.0" fill="rgb(149.564285542547,149.564285542547,117.119229936958)" rx="2" ry="2" />
<text  x="1169.79" y="161.5" ></text>
</g>
<g >
<title>FunctionSpaceData: CreateElement (868 us, 0.01%)</title><rect x="36.3" y="167" width="0.2" height="15.0" fill="rgb(140.607324501965,160.83136577875,140.607324501965)" rx="2" ry="2" />
<text  x="39.34" y="177.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.action (12,263 us, 0.20%)</title><rect x="608.2" y="87" width="2.4" height="15.0" fill="rgb(155.868963595925,141.662054235421,141.662054235421)" rx="2" ry="2" />
<text  x="611.23" y="97.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (2,801 us, 0.05%)</title><rect x="1189.5" y="151" width="0.5" height="15.0" fill="rgb(149.035297843045,159.459370118574,149.035297843045)" rx="2" ry="2" />
<text  x="1192.47" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspace.VectorFunctionSpace (8,394 us, 0.14%)</title><rect x="34.9" y="87" width="1.6" height="15.0" fill="rgb(113.518126880544,113.518126880544,149.390605202686)" rx="2" ry="2" />
<text  x="37.90" y="97.5" ></text>
</g>
<g >
<title>HybridOperatorAssembly (2,565,308 us, 41.50%)</title><rect x="619.9" y="135" width="489.7" height="15.0" fill="rgb(108.823924021177,108.823924021177,148.48204981055)" rx="2" ry="2" />
<text  x="622.91" y="145.5" >HybridOperatorAssembly</text>
</g>
<g >
<title>firedrake.mesh._from_cell_list (5,356 us, 0.09%)</title><rect x="607.2" y="103" width="1.0" height="15.0" fill="rgb(143.595437696612,121.088309097567,143.595437696612)" rx="2" ry="2" />
<text  x="610.20" y="113.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_form0_cell_integral_otherwise (76,121 us, 1.23%)</title><rect x="1151.8" y="135" width="14.6" height="15.0" fill="rgb(154.050464188103,127.720225442127,127.720225442127)" rx="2" ry="2" />
<text  x="1154.84" y="145.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (5,156 us, 0.08%)</title><rect x="1189.0" y="135" width="1.0" height="15.0" fill="rgb(137.14516595364,137.14516595364,153.963580507156)" rx="2" ry="2" />
<text  x="1192.02" y="145.5" ></text>
</g>
<g >
<title>CreateMesh (18,339 us, 0.30%)</title><rect x="45.6" y="71" width="3.5" height="15.0" fill="rgb(156.44963809625,146.113892071247,146.113892071247)" rx="2" ry="2" />
<text  x="48.60" y="81.5" ></text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (47,852 us, 0.77%)</title><rect x="1180.9" y="119" width="9.1" height="15.0" fill="rgb(154.096549140329,154.096549140329,139.083276603131)" rx="2" ry="2" />
<text  x="1183.86" y="129.5" ></text>
</g>
<g >
<title>firedrake.function.Function.__init__ (1,318 us, 0.02%)</title><rect x="1128.1" y="135" width="0.3" height="15.0" fill="rgb(136.090258412395,101.856287181763,136.090258412395)" rx="2" ry="2" />
<text  x="1131.11" y="145.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (42,833 us, 0.69%)</title><rect x="37.4" y="119" width="8.2" height="15.0" fill="rgb(154.616006031597,154.616006031597,141.600644614663)" rx="2" ry="2" />
<text  x="40.43" y="129.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (8,394 us, 0.14%)</title><rect x="34.9" y="119" width="1.6" height="15.0" fill="rgb(111.293809795942,145.890987724874,145.890987724874)" rx="2" ry="2" />
<text  x="37.90" y="129.5" ></text>
</g>
<g >
<title>Log_Event_form0_cell_integral_otherwise (5,424 us, 0.09%)</title><rect x="1152.3" y="151" width="1.0" height="15.0" fill="rgb(113.882691863315,146.562179371971,146.562179371971)" rx="2" ry="2" />
<text  x="1155.26" y="161.5" ></text>
</g>
<g >
<title>HybridInit (2,809,114 us, 45.45%)</title><rect x="614.5" y="119" width="536.3" height="15.0" fill="rgb(154.059955265234,154.059955265234,138.905937054598)" rx="2" ry="2" />
<text  x="617.54" y="129.5" >HybridInit</text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (13,382 us, 0.22%)</title><rect x="1125.6" y="151" width="2.5" height="15.0" fill="rgb(154.1727559989,128.657795991565,128.657795991565)" rx="2" ry="2" />
<text  x="1128.56" y="161.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (790 us, 0.01%)</title><rect x="1189.8" y="167" width="0.2" height="15.0" fill="rgb(117.73317602083,147.560453042437,147.560453042437)" rx="2" ry="2" />
<text  x="1192.85" y="177.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (2,422 us, 0.04%)</title><rect x="617.8" y="167" width="0.4" height="15.0" fill="rgb(120.077335783507,120.077335783507,150.660129506485)" rx="2" ry="2" />
<text  x="620.79" y="177.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (3,641 us, 0.06%)</title><rect x="1127.3" y="199" width="0.7" height="15.0" fill="rgb(124.006286322574,149.186814972519,149.186814972519)" rx="2" ry="2" />
<text  x="1130.27" y="209.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (2,536 us, 0.04%)</title><rect x="1127.5" y="215" width="0.5" height="15.0" fill="rgb(137.994000093896,161.256790682389,137.994000093896)" rx="2" ry="2" />
<text  x="1130.48" y="225.5" ></text>
</g>
<g >
<title>firedrake.mesh.make_mesh_from_coordinates (969 us, 0.02%)</title><rect x="36.7" y="87" width="0.2" height="15.0" fill="rgb(125.72769064105,163.253631756108,125.72769064105)" rx="2" ry="2" />
<text  x="39.68" y="97.5" ></text>
</g>
<g >
<title>CreateMesh (3,593 us, 0.06%)</title><rect x="46.5" y="87" width="0.7" height="15.0" fill="rgb(136.758699815219,136.758699815219,153.888780609397)" rx="2" ry="2" />
<text  x="49.49" y="97.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (790 us, 0.01%)</title><rect x="1189.8" y="183" width="0.2" height="15.0" fill="rgb(139.21276793261,109.857717827314,139.21276793261)" rx="2" ry="2" />
<text  x="1192.85" y="193.5" ></text>
</g>
<g >
<title>Mesh: numbering (6,188 us, 0.10%)</title><rect x="47.2" y="87" width="1.2" height="15.0" fill="rgb(148.9731886101,148.9731886101,114.254683264331)" rx="2" ry="2" />
<text  x="50.18" y="97.5" ></text>
</g>
<g >
<title>firedrake.matrix_free.operators.ImplicitMatrixContext.__init__ (6,752 us, 0.11%)</title><rect x="613.3" y="103" width="1.2" height="15.0" fill="rgb(150.030255438655,150.030255438655,119.377391741174)" rx="2" ry="2" />
<text  x="616.25" y="113.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (8,679 us, 0.14%)</title><rect x="618.2" y="183" width="1.7" height="15.0" fill="rgb(150.93566933974,159.150007316787,150.93566933974)" rx="2" ry="2" />
<text  x="621.25" y="193.5" ></text>
</g>
<g >
<title>firedrake.functionspace.MixedFunctionSpace (1,633 us, 0.03%)</title><rect x="606.2" y="71" width="0.3" height="15.0" fill="rgb(134.798008228415,161.777068427932,134.798008228415)" rx="2" ry="2" />
<text  x="609.24" y="81.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (2,422 us, 0.04%)</title><rect x="617.8" y="215" width="0.4" height="15.0" fill="rgb(104.022670817331,144.005877619308,144.005877619308)" rx="2" ry="2" />
<text  x="620.79" y="225.5" ></text>
</g>
<g >
<title>firedrake.functionspace.MixedFunctionSpace (3,946 us, 0.06%)</title><rect x="617.5" y="151" width="0.7" height="15.0" fill="rgb(143.047891706402,160.434064140818,143.047891706402)" rx="2" ry="2" />
<text  x="620.49" y="161.5" ></text>
</g>
<g >
<title>CreateMesh (1,359 us, 0.02%)</title><rect x="606.9" y="103" width="0.3" height="15.0" fill="rgb(146.99270196019,146.99270196019,155.869555218101)" rx="2" ry="2" />
<text  x="609.95" y="113.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (68,522 us, 1.11%)</title><rect x="1153.3" y="151" width="13.1" height="15.0" fill="rgb(148.242741310577,159.588390949441,148.242741310577)" rx="2" ry="2" />
<text  x="1156.29" y="161.5" ></text>
</g>
<g >
<title>PCSetUp (2,809,114 us, 45.45%)</title><rect x="614.5" y="103" width="536.3" height="15.0" fill="rgb(155.879653326745,141.744008838381,141.744008838381)" rx="2" ry="2" />
<text  x="617.54" y="113.5" >PCSetUp</text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (755 us, 0.01%)</title><rect x="606.4" y="103" width="0.1" height="15.0" fill="rgb(124.633230059046,149.349355941234,149.349355941234)" rx="2" ry="2" />
<text  x="609.40" y="113.5" ></text>
</g>
<g >
<title>firedrake (6,181,074 us, 100.00%)</title><rect x="10.0" y="55" width="1180.0" height="15.0" fill="rgb(120.265710722494,120.265710722494,150.696589172096)" rx="2" ry="2" />
<text  x="13.00" y="65.5" >firedrake</text>
</g>
<g >
<title>firedrake.slate.slac.optimise.optimise (831 us, 0.01%)</title><rect x="1080.3" y="151" width="0.2" height="15.0" fill="rgb(147.202332678729,147.202332678729,155.91012890556)" rx="2" ry="2" />
<text  x="1083.31" y="161.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_pyop2_kernel_uniform_extrusion (95,731 us, 1.55%)</title><rect x="16.6" y="119" width="18.3" height="15.0" fill="rgb(135.338788723319,161.689034393878,135.338788723319)" rx="2" ry="2" />
<text  x="19.63" y="129.5" ></text>
</g>
<g >
<title>MatZeroInitial (19,368 us, 0.31%)</title><rect x="1121.9" y="151" width="3.7" height="15.0" fill="rgb(123.717261088657,163.580910985567,123.717261088657)" rx="2" ry="2" />
<text  x="1124.86" y="161.5" ></text>
</g>
<g >
<title>ParLoopExecute (153,209 us, 2.48%)</title><rect x="1151.6" y="119" width="29.3" height="15.0" fill="rgb(140.496170298548,140.496170298548,154.612161993267)" rx="2" ry="2" />
<text  x="1154.62" y="129.5" >P..</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (95,731 us, 1.55%)</title><rect x="16.6" y="135" width="18.3" height="15.0" fill="rgb(155.785355354733,155.785355354733,147.267491334476)" rx="2" ry="2" />
<text  x="19.63" y="145.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (2,640 us, 0.04%)</title><rect x="614.0" y="119" width="0.5" height="15.0" fill="rgb(153.182047505942,153.182047505942,134.651460990334)" rx="2" ry="2" />
<text  x="617.04" y="129.5" ></text>
</g>
<g >
<title>firedrake.mesh.MeshTopology._facets (18,958 us, 0.31%)</title><rect x="42.0" y="135" width="3.6" height="15.0" fill="rgb(107.940944253422,145.021726287924,145.021726287924)" rx="2" ry="2" />
<text  x="44.98" y="145.5" ></text>
</g>
<g >
<title>all (6,181,074 us, 100%)</title><rect x="10.0" y="39" width="1180.0" height="15.0" fill="rgb(136.735080116009,136.735080116009,153.884209054711)" rx="2" ry="2" />
<text  x="13.00" y="49.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.action (4,112 us, 0.07%)</title><rect x="613.3" y="119" width="0.7" height="15.0" fill="rgb(137.773236229634,137.773236229634,154.085142496058)" rx="2" ry="2" />
<text  x="616.25" y="129.5" ></text>
</g>
<g >
<title>ParLoopExecute (80,232 us, 1.30%)</title><rect x="1135.1" y="151" width="15.3" height="15.0" fill="rgb(134.762164496102,134.762164496102,153.5023544186)" rx="2" ry="2" />
<text  x="1138.12" y="161.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.__init__ (10,060 us, 0.16%)</title><rect x="612.6" y="71" width="1.9" height="15.0" fill="rgb(145.578239544941,160.022147050824,145.578239544941)" rx="2" ry="2" />
<text  x="615.62" y="81.5" ></text>
</g>
<g >
<title>firedrake.mesh._Facets.__init__ (1,710 us, 0.03%)</title><rect x="45.3" y="151" width="0.3" height="15.0" fill="rgb(154.581513586133,131.791604160353,131.791604160353)" rx="2" ry="2" />
<text  x="48.28" y="161.5" ></text>
</g>
<g >
<title>firedrake.extrusion_utils.make_extruded_coords (129,713 us, 2.10%)</title><rect x="10.1" y="87" width="24.8" height="15.0" fill="rgb(142.798013718769,160.474741952759,142.798013718769)" rx="2" ry="2" />
<text  x="13.14" y="97.5" >f..</text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (9,741 us, 0.16%)</title><rect x="610.6" y="103" width="1.8" height="15.0" fill="rgb(124.074158090978,163.522811473562,124.074158090978)" rx="2" ry="2" />
<text  x="613.57" y="113.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (790 us, 0.01%)</title><rect x="1189.8" y="199" width="0.2" height="15.0" fill="rgb(120.4165694616,148.256147638193,148.256147638193)" rx="2" ry="2" />
<text  x="1192.85" y="209.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (8,394 us, 0.14%)</title><rect x="34.9" y="103" width="1.6" height="15.0" fill="rgb(154.215038646189,154.215038646189,139.657494977685)" rx="2" ry="2" />
<text  x="37.90" y="113.5" ></text>
</g>
</g>
</svg>
