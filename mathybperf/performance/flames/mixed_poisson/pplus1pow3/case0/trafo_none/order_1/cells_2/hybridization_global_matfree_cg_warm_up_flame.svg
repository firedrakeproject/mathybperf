<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="283" onload="init(evt)" viewBox="0 0 1200 283" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:13px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:18px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 13 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (1 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="283.0" fill="url(#background)"  />
<text id="title" x="600.00" y="26" >Firedrake example</text>
<text id="details" x="10.00" y="265" > </text>
<text id="unzoom" x="10.00" y="26" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="26" >Search</text>
<text id="ignorecase" x="1174.00" y="26" >ic</text>
<text id="matched" x="1090.00" y="265" > </text>
<g id="frames">
<g >
<title>FunctionSpaceData: CreateElement (11,342 us, 0.04%)</title><rect x="62.1" y="135" width="0.4" height="15.0" fill="rgb(125.392267679517,163.308235494032,125.392267679517)" rx="2" ry="2" />
<text  x="65.10" y="145.5" ></text>
</g>
<g >
<title>CreateMesh (3,825 us, 0.01%)</title><rect x="63.5" y="87" width="0.1" height="15.0" fill="rgb(148.777723910589,148.777723910589,113.307431259008)" rx="2" ry="2" />
<text  x="66.50" y="97.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_form1_cell_integral_otherwise (4,089,816 us, 13.64%)</title><rect x="958.9" y="135" width="160.9" height="15.0" fill="rgb(155.82830204602,141.350315686157,141.350315686157)" rx="2" ry="2" />
<text  x="961.86" y="145.5" >Parloop_Cells_wrap..</text>
</g>
<g >
<title>Log_Event_form1_cell_integral_otherwise (8,460 us, 0.03%)</title><rect x="958.9" y="151" width="0.3" height="15.0" fill="rgb(118.716998379583,147.81551809841,147.81551809841)" rx="2" ry="2" />
<text  x="961.86" y="161.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (4,204 us, 0.01%)</title><rect x="202.1" y="119" width="0.2" height="15.0" fill="rgb(137.859426486211,152.778369829759,152.778369829759)" rx="2" ry="2" />
<text  x="205.14" y="129.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (9,416 us, 0.03%)</title><rect x="61.0" y="119" width="0.3" height="15.0" fill="rgb(143.389726421964,120.561173956283,143.389726421964)" rx="2" ry="2" />
<text  x="63.96" y="129.5" ></text>
</g>
<g >
<title>CreateMesh (19,731 us, 0.07%)</title><rect x="63.3" y="71" width="0.8" height="15.0" fill="rgb(155.551434484696,139.227664382668,139.227664382668)" rx="2" ry="2" />
<text  x="66.30" y="81.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (3,709 us, 0.01%)</title><rect x="451.3" y="231" width="0.2" height="15.0" fill="rgb(136.552318182226,161.491483086614,136.552318182226)" rx="2" ry="2" />
<text  x="454.35" y="241.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.LinearVariationalProblem.__init__ (24,652 us, 0.08%)</title><rect x="200.8" y="71" width="1.0" height="15.0" fill="rgb(150.51968825673,138.831701157871,150.51968825673)" rx="2" ry="2" />
<text  x="203.78" y="81.5" ></text>
</g>
<g >
<title>DMPlexInterp (4,149 us, 0.01%)</title><rect x="200.6" y="119" width="0.2" height="15.0" fill="rgb(106.315541122221,144.600325476131,144.600325476131)" rx="2" ry="2" />
<text  x="203.62" y="129.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (18,083 us, 0.06%)</title><rect x="450.8" y="135" width="0.7" height="15.0" fill="rgb(141.033116550609,141.033116550609,154.716087074311)" rx="2" ry="2" />
<text  x="453.78" y="145.5" ></text>
</g>
<g >
<title>ParLoopExecute (1,452,854 us, 4.85%)</title><rect x="202.7" y="183" width="57.2" height="15.0" fill="rgb(155.721372284176,155.721372284176,146.957419531008)" rx="2" ry="2" />
<text  x="205.69" y="193.5" >ParLo..</text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (50,168 us, 0.17%)</title><rect x="61.3" y="87" width="2.0" height="15.0" fill="rgb(153.873146697216,126.360791345325,126.360791345325)" rx="2" ry="2" />
<text  x="64.33" y="97.5" ></text>
</g>
<g >
<title>Mesh: numbering (6,680 us, 0.02%)</title><rect x="63.6" y="87" width="0.3" height="15.0" fill="rgb(153.475065753123,123.308837440609,123.308837440609)" rx="2" ry="2" />
<text  x="66.65" y="97.5" ></text>
</g>
<g >
<title>firedrake.parloops.par_loop (1,187,309 us, 3.96%)</title><rect x="452.5" y="135" width="46.7" height="15.0" fill="rgb(146.58683256613,159.857957489235,146.58683256613)" rx="2" ry="2" />
<text  x="455.51" y="145.5" >fire..</text>
</g>
<g >
<title>HybridRHS (4,804,544 us, 16.02%)</title><rect x="259.9" y="151" width="189.1" height="15.0" fill="rgb(142.801750045308,142.801750045308,155.058403234576)" rx="2" ry="2" />
<text  x="262.87" y="161.5" >HybridRHS</text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (1,452,854 us, 4.85%)</title><rect x="202.7" y="199" width="57.2" height="15.0" fill="rgb(106.653201140642,144.687866962389,144.687866962389)" rx="2" ry="2" />
<text  x="205.69" y="209.5" >Parlo..</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (1,258,604 us, 4.20%)</title><rect x="11.4" y="135" width="49.6" height="15.0" fill="rgb(152.180660016212,113.385060124292,113.385060124292)" rx="2" ry="2" />
<text  x="14.43" y="145.5" >pyop..</text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (4,579 us, 0.02%)</title><rect x="1189.8" y="151" width="0.2" height="15.0" fill="rgb(138.249271371299,152.879440725892,152.879440725892)" rx="2" ry="2" />
<text  x="1192.82" y="161.5" ></text>
</g>
<g >
<title>firedrake.extrusion_utils.make_extruded_coords (1,294,881 us, 4.32%)</title><rect x="10.0" y="87" width="51.0" height="15.0" fill="rgb(126.762373574108,163.085194999564,126.762373574108)" rx="2" ry="2" />
<text  x="13.00" y="97.5" >fire..</text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (8,682 us, 0.03%)</title><rect x="450.4" y="183" width="0.4" height="15.0" fill="rgb(154.32236956386,129.804833322926,129.804833322926)" rx="2" ry="2" />
<text  x="453.44" y="193.5" ></text>
</g>
<g >
<title>firedrake.utility_meshes.SquareMesh (8,120 us, 0.03%)</title><rect x="200.5" y="71" width="0.3" height="15.0" fill="rgb(136.60729490131,161.482533388159,136.60729490131)" rx="2" ry="2" />
<text  x="203.47" y="81.5" ></text>
</g>
<g >
<title>firedrake.matrix_free.operators.ImplicitMatrixContext.__init__ (9,418 us, 0.03%)</title><rect x="201.9" y="103" width="0.4" height="15.0" fill="rgb(113.209924740834,113.209924740834,149.330953175645)" rx="2" ry="2" />
<text  x="204.94" y="113.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.__init__ (13,995 us, 0.05%)</title><rect x="201.8" y="71" width="0.5" height="15.0" fill="rgb(132.066900268975,132.066900268975,152.98069037464)" rx="2" ry="2" />
<text  x="204.75" y="81.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (8,822 us, 0.03%)</title><rect x="451.1" y="183" width="0.4" height="15.0" fill="rgb(143.740879050388,160.321252247611,143.740879050388)" rx="2" ry="2" />
<text  x="454.15" y="193.5" ></text>
</g>
<g >
<title>KSPSolve (6,267,248 us, 20.90%)</title><rect x="202.3" y="103" width="246.7" height="15.0" fill="rgb(143.848720094184,143.848720094184,155.261042598874)" rx="2" ry="2" />
<text  x="205.31" y="113.5" >KSPSolve</text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (4,208 us, 0.01%)</title><rect x="450.3" y="199" width="0.1" height="15.0" fill="rgb(155.246025853491,155.246025853491,144.653817597688)" rx="2" ry="2" />
<text  x="453.27" y="209.5" ></text>
</g>
<g >
<title>ParLoopExecute (1,179,117 us, 3.93%)</title><rect x="452.8" y="151" width="46.4" height="15.0" fill="rgb(111.82247224409,111.82247224409,149.062413982727)" rx="2" ry="2" />
<text  x="455.83" y="161.5" >ParL..</text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (8,682 us, 0.03%)</title><rect x="450.4" y="167" width="0.4" height="15.0" fill="rgb(152.514666477231,143.943832847904,152.514666477231)" rx="2" ry="2" />
<text  x="453.44" y="177.5" ></text>
</g>
<g >
<title>SNESSolve (25,097,160 us, 83.70%)</title><rect x="202.3" y="87" width="987.7" height="15.0" fill="rgb(133.785600010018,151.72219259519,151.72219259519)" rx="2" ry="2" />
<text  x="205.31" y="97.5" >SNESSolve</text>
</g>
<g >
<title>PCApply (6,267,248 us, 20.90%)</title><rect x="202.3" y="119" width="246.7" height="15.0" fill="rgb(112.883040632315,112.883040632315,149.267685283674)" rx="2" ry="2" />
<text  x="205.31" y="129.5" >PCApply</text>
</g>
<g >
<title>firedrake.functionspace.MixedFunctionSpace (4,208 us, 0.01%)</title><rect x="450.3" y="151" width="0.1" height="15.0" fill="rgb(129.501814105136,162.63923956428,129.501814105136)" rx="2" ry="2" />
<text  x="453.27" y="161.5" ></text>
</g>
<g >
<title>firedrake.utility_meshes.RectangleMesh (8,120 us, 0.03%)</title><rect x="200.5" y="87" width="0.3" height="15.0" fill="rgb(154.580774315587,154.580774315587,141.429906298615)" rx="2" ry="2" />
<text  x="203.47" y="97.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (9,416 us, 0.03%)</title><rect x="61.0" y="103" width="0.3" height="15.0" fill="rgb(107.369778719447,144.873646334671,144.873646334671)" rx="2" ry="2" />
<text  x="63.96" y="113.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (4,081,356 us, 13.61%)</title><rect x="959.2" y="151" width="160.6" height="15.0" fill="rgb(152.111259521476,112.85298966465,112.85298966465)" rx="2" ry="2" />
<text  x="962.19" y="161.5" >pyop2.global_kerne..</text>
</g>
<g >
<title>Mesh: reorder (4,390 us, 0.01%)</title><rect x="63.9" y="87" width="0.2" height="15.0" fill="rgb(156.617351749751,147.399696748092,147.399696748092)" rx="2" ry="2" />
<text  x="66.91" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (4,208 us, 0.01%)</title><rect x="450.3" y="183" width="0.1" height="15.0" fill="rgb(139.759829119867,160.969330143277,139.759829119867)" rx="2" ry="2" />
<text  x="453.27" y="193.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.solve (25,097,160 us, 83.70%)</title><rect x="202.3" y="71" width="987.7" height="15.0" fill="rgb(152.640175310238,152.640175310238,132.025464965001)" rx="2" ry="2" />
<text  x="205.31" y="81.5" >firedrake.variational_solver.NonlinearVariationalSolver.solve</text>
</g>
<g >
<title>PetscBarrier (28,732 us, 0.10%)</title><rect x="64.1" y="71" width="1.1" height="15.0" fill="rgb(144.430556865533,160.208979114913,144.430556865533)" rx="2" ry="2" />
<text  x="67.08" y="81.5" ></text>
</g>
<g >
<title>all (29,983,619 us, 100%)</title><rect x="10.0" y="39" width="1180.0" height="15.0" fill="rgb(104.403306931139,144.104561056221,144.104561056221)" rx="2" ry="2" />
<text  x="13.00" y="49.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (9,416 us, 0.03%)</title><rect x="61.0" y="135" width="0.3" height="15.0" fill="rgb(113.591432315126,146.486667637255,146.486667637255)" rx="2" ry="2" />
<text  x="63.96" y="145.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalProblem.__init__ (11,516 us, 0.04%)</title><rect x="201.3" y="87" width="0.5" height="15.0" fill="rgb(130.04252213226,162.551217327306,130.04252213226)" rx="2" ry="2" />
<text  x="204.30" y="97.5" ></text>
</g>
<g >
<title>CreateExtMesh (1,304,297 us, 4.35%)</title><rect x="10.0" y="71" width="51.3" height="15.0" fill="rgb(154.56199757665,131.641981420985,131.641981420985)" rx="2" ry="2" />
<text  x="13.00" y="81.5" >Crea..</text>
</g>
<g >
<title>Parloop_Cells_wrap_pyop2_kernel_uniform_extrusion (1,258,604 us, 4.20%)</title><rect x="11.4" y="119" width="49.6" height="15.0" fill="rgb(140.898579772271,140.898579772271,154.690047697859)" rx="2" ry="2" />
<text  x="14.43" y="129.5" >Parl..</text>
</g>
<g >
<title>PCSetUp (1,277,740 us, 4.26%)</title><rect x="449.0" y="103" width="50.2" height="15.0" fill="rgb(140.894576897465,140.894576897465,154.689272947896)" rx="2" ry="2" />
<text  x="451.95" y="113.5" >PCSe..</text>
</g>
<g >
<title>FunctionSpaceData: CreateElement (8,682 us, 0.03%)</title><rect x="450.4" y="199" width="0.4" height="15.0" fill="rgb(131.141022227176,162.37239173046,131.141022227176)" rx="2" ry="2" />
<text  x="453.44" y="209.5" ></text>
</g>
<g >
<title>firedrake (29,983,619 us, 100.00%)</title><rect x="10.0" y="55" width="1180.0" height="15.0" fill="rgb(131.611518086197,162.295799381317,131.611518086197)" rx="2" ry="2" />
<text  x="13.00" y="65.5" >firedrake</text>
</g>
<g >
<title>firedrake.interpolation.make_interpolator (25,885 us, 0.09%)</title><rect x="451.5" y="135" width="1.0" height="15.0" fill="rgb(126.140050939107,149.740013206435,149.740013206435)" rx="2" ry="2" />
<text  x="454.49" y="145.5" ></text>
</g>
<g >
<title>firedrake.__init__ (3,436,764 us, 11.46%)</title><rect x="65.2" y="71" width="135.3" height="15.0" fill="rgb(147.617988637711,147.617988637711,107.687175705829)" rx="2" ry="2" />
<text  x="68.21" y="81.5" >firedrake.__ini..</text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (2,876,714 us, 9.59%)</title><rect x="335.7" y="167" width="113.3" height="15.0" fill="rgb(141.636763738918,153.757679487868,153.757679487868)" rx="2" ry="2" />
<text  x="338.74" y="177.5" >firedrake.ts..</text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (1,783,469 us, 5.95%)</title><rect x="1119.8" y="119" width="70.2" height="15.0" fill="rgb(153.69424294326,124.989195898323,124.989195898323)" rx="2" ry="2" />
<text  x="1122.81" y="129.5" >firedra..</text>
</g>
<g >
<title>Parloop_Cells_wrap_form0_cell_integral_otherwise (11,673,988 us, 38.93%)</title><rect x="499.4" y="135" width="459.5" height="15.0" fill="rgb(149.603708741843,149.603708741843,117.310280825854)" rx="2" ry="2" />
<text  x="502.43" y="145.5" >Parloop_Cells_wrap_form0_cell_integral_otherwise</text>
</g>
<g >
<title>firedrake.assemble.allocate_matrix (9,418 us, 0.03%)</title><rect x="201.9" y="87" width="0.4" height="15.0" fill="rgb(128.317805062439,162.831985222394,128.317805062439)" rx="2" ry="2" />
<text  x="204.94" y="97.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (1,179,117 us, 3.93%)</title><rect x="452.8" y="167" width="46.4" height="15.0" fill="rgb(153.481312928794,123.356732454084,123.356732454084)" rx="2" ry="2" />
<text  x="455.83" y="177.5" >Parl..</text>
</g>
<g >
<title>ParLoopExecute (1,258,604 us, 4.20%)</title><rect x="11.4" y="103" width="49.6" height="15.0" fill="rgb(156.377244809274,145.558876871104,145.558876871104)" rx="2" ry="2" />
<text  x="14.43" y="113.5" >ParL..</text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (13,104 us, 0.04%)</title><rect x="451.0" y="167" width="0.5" height="15.0" fill="rgb(141.849480302255,160.6291543694,141.849480302255)" rx="2" ry="2" />
<text  x="453.98" y="177.5" ></text>
</g>
<g >
<title>HybridBreak (1,462,704 us, 4.88%)</title><rect x="202.3" y="151" width="57.6" height="15.0" fill="rgb(155.469562199922,138.599976866067,138.599976866067)" rx="2" ry="2" />
<text  x="205.31" y="161.5" >Hybri..</text>
</g>
<g >
<title>firedrake.ufl_expr.action (5,214 us, 0.02%)</title><rect x="201.9" y="119" width="0.2" height="15.0" fill="rgb(107.100109561504,144.803732108538,144.803732108538)" rx="2" ry="2" />
<text  x="204.94" y="129.5" ></text>
</g>
<g >
<title>firedrake.mesh._from_cell_list (4,149 us, 0.01%)</title><rect x="200.6" y="103" width="0.2" height="15.0" fill="rgb(123.896026483673,123.896026483673,151.399230932324)" rx="2" ry="2" />
<text  x="203.62" y="113.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (1,434,445 us, 4.78%)</title><rect x="203.4" y="215" width="56.5" height="15.0" fill="rgb(144.799518000602,160.148915674321,144.799518000602)" rx="2" ry="2" />
<text  x="206.42" y="225.5" >pyop2..</text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (9,416 us, 0.03%)</title><rect x="61.0" y="151" width="0.3" height="15.0" fill="rgb(141.359332251015,160.708945912626,141.359332251015)" rx="2" ry="2" />
<text  x="63.96" y="161.5" ></text>
</g>
<g >
<title>SNESFunctionEval (17,552,172 us, 58.54%)</title><rect x="499.2" y="103" width="690.8" height="15.0" fill="rgb(154.748759816175,154.748759816175,142.243989878388)" rx="2" ry="2" />
<text  x="502.24" y="113.5" >SNESFunctionEval</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (1,166,193 us, 3.89%)</title><rect x="453.3" y="183" width="45.9" height="15.0" fill="rgb(129.923280853136,162.570628698327,129.923280853136)" rx="2" ry="2" />
<text  x="456.34" y="193.5" >pyo..</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (11,667,552 us, 38.91%)</title><rect x="499.7" y="151" width="459.2" height="15.0" fill="rgb(148.291893528735,148.291893528735,110.953022485409)" rx="2" ry="2" />
<text  x="502.68" y="161.5" >pyop2.global_kernel.GlobalKernel.compile</text>
</g>
<g >
<title>Log_Event_form0_cell_integral_otherwise (6,436 us, 0.02%)</title><rect x="499.4" y="151" width="0.3" height="15.0" fill="rgb(149.428752767022,149.428752767022,116.462417255569)" rx="2" ry="2" />
<text  x="502.43" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (4,208 us, 0.01%)</title><rect x="450.3" y="215" width="0.1" height="15.0" fill="rgb(125.286590540035,163.325438749297,125.286590540035)" rx="2" ry="2" />
<text  x="453.27" y="225.5" ></text>
</g>
<g >
<title>SCForwardElim (6,267,248 us, 20.90%)</title><rect x="202.3" y="135" width="246.7" height="15.0" fill="rgb(144.303487487584,160.229664827603,144.303487487584)" rx="2" ry="2" />
<text  x="205.31" y="145.5" >SCForwardElim</text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (3,709 us, 0.01%)</title><rect x="451.3" y="215" width="0.2" height="15.0" fill="rgb(115.640694186704,115.640694186704,149.801424681298)" rx="2" ry="2" />
<text  x="454.35" y="225.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (4,208 us, 0.01%)</title><rect x="450.3" y="167" width="0.1" height="15.0" fill="rgb(134.978007649927,152.031335316648,152.031335316648)" rx="2" ry="2" />
<text  x="453.27" y="177.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (4,579 us, 0.02%)</title><rect x="1189.8" y="135" width="0.2" height="15.0" fill="rgb(151.794863158751,151.794863158751,127.928952230868)" rx="2" ry="2" />
<text  x="1192.82" y="145.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (8,682 us, 0.03%)</title><rect x="450.4" y="151" width="0.4" height="15.0" fill="rgb(154.085430894487,154.085430894487,139.029395873282)" rx="2" ry="2" />
<text  x="453.44" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspace.VectorFunctionSpace (9,416 us, 0.03%)</title><rect x="61.0" y="87" width="0.3" height="15.0" fill="rgb(148.251924815706,148.251924815706,110.759327953038)" rx="2" ry="2" />
<text  x="63.96" y="97.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (11,516 us, 0.04%)</title><rect x="201.3" y="103" width="0.5" height="15.0" fill="rgb(132.344868116145,162.176416818302,132.344868116145)" rx="2" ry="2" />
<text  x="204.30" y="113.5" ></text>
</g>
<g >
<title>DMPlexStratify (3,683 us, 0.01%)</title><rect x="65.1" y="87" width="0.1" height="15.0" fill="rgb(149.538060956596,159.377524960554,149.538060956596)" rx="2" ry="2" />
<text  x="68.07" y="97.5" ></text>
</g>
<g >
<title>ParLoopExecute (15,763,804 us, 52.57%)</title><rect x="499.4" y="119" width="620.4" height="15.0" fill="rgb(156.184796588355,144.083440510721,144.083440510721)" rx="2" ry="2" />
<text  x="502.43" y="129.5" >ParLoopExecute</text>
</g>
<g >
<title>firedrake.parloops.par_loop (1,462,704 us, 4.88%)</title><rect x="202.3" y="167" width="57.6" height="15.0" fill="rgb(108.437678152029,108.437678152029,148.407292545554)" rx="2" ry="2" />
<text  x="205.31" y="177.5" >fired..</text>
</g>
<g >
<title>HybridInit (1,277,740 us, 4.26%)</title><rect x="449.0" y="119" width="50.2" height="15.0" fill="rgb(110.271008772187,145.625817089086,145.625817089086)" rx="2" ry="2" />
<text  x="451.95" y="129.5" >Hybr..</text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (18,083 us, 0.06%)</title><rect x="450.8" y="151" width="0.7" height="15.0" fill="rgb(150.469017003187,150.469017003187,121.503697784676)" rx="2" ry="2" />
<text  x="453.78" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (50,168 us, 0.17%)</title><rect x="61.3" y="103" width="2.0" height="15.0" fill="rgb(156.537541627386,146.787819143292,146.787819143292)" rx="2" ry="2" />
<text  x="64.33" y="113.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.action (13,136 us, 0.04%)</title><rect x="200.8" y="87" width="0.5" height="15.0" fill="rgb(134.647493816917,161.80157077399,134.647493816917)" rx="2" ry="2" />
<text  x="203.78" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (50,168 us, 0.17%)</title><rect x="61.3" y="119" width="2.0" height="15.0" fill="rgb(145.967546508231,154.880475020653,154.880475020653)" rx="2" ry="2" />
<text  x="64.33" y="129.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (50,168 us, 0.17%)</title><rect x="61.3" y="71" width="2.0" height="15.0" fill="rgb(150.484948195347,150.484948195347,121.580902792838)" rx="2" ry="2" />
<text  x="64.33" y="81.5" ></text>
</g>
<g >
<title>firedrake.mesh.MeshTopology._facets (19,325 us, 0.06%)</title><rect x="62.5" y="135" width="0.8" height="15.0" fill="rgb(141.501073077445,141.501073077445,154.806659305312)" rx="2" ry="2" />
<text  x="65.54" y="145.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (12,890 us, 0.04%)</title><rect x="450.3" y="135" width="0.5" height="15.0" fill="rgb(127.096642467214,163.030779133244,127.096642467214)" rx="2" ry="2" />
<text  x="453.27" y="145.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (3,709 us, 0.01%)</title><rect x="451.3" y="199" width="0.2" height="15.0" fill="rgb(154.179621454102,128.710431148114,128.710431148114)" rx="2" ry="2" />
<text  x="454.35" y="209.5" ></text>
</g>
</g>
</svg>
