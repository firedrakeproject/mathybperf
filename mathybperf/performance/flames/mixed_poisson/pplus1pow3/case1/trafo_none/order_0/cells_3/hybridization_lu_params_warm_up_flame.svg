<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="283" onload="init(evt)" viewBox="0 0 1200 283" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:13px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:18px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 13 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (1 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="283.0" fill="url(#background)"  />
<text id="title" x="600.00" y="26" >Firedrake example</text>
<text id="details" x="10.00" y="265" > </text>
<text id="unzoom" x="10.00" y="26" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="26" >Search</text>
<text id="ignorecase" x="1174.00" y="26" >ic</text>
<text id="matched" x="1090.00" y="265" > </text>
<g id="frames">
<g >
<title>firedrake.assemble.allocate_matrix (6,910 us, 0.01%)</title><rect x="68.3" y="87" width="0.1" height="15.0" fill="rgb(143.804474682878,121.623966374875,143.804474682878)" rx="2" ry="2" />
<text  x="71.27" y="97.5" ></text>
</g>
<g >
<title>PCSetUp (35,612 us, 0.06%)</title><rect x="782.4" y="167" width="0.7" height="15.0" fill="rgb(137.488456747629,152.682192490126,152.682192490126)" rx="2" ry="2" />
<text  x="785.42" y="177.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (7,779,407 us, 12.78%)</title><rect x="108.9" y="199" width="150.8" height="15.0" fill="rgb(154.915133284886,134.349355184128,134.349355184128)" rx="2" ry="2" />
<text  x="111.90" y="209.5" >pyop2.global_kern..</text>
</g>
<g >
<title>MatLUFactor (35,612 us, 0.06%)</title><rect x="782.4" y="183" width="0.7" height="15.0" fill="rgb(152.296176650551,114.270687654226,114.270687654226)" rx="2" ry="2" />
<text  x="785.42" y="193.5" ></text>
</g>
<g >
<title>PCApply (36,865,299 us, 60.57%)</title><rect x="68.4" y="135" width="714.7" height="15.0" fill="rgb(117.530544033366,147.507918823465,147.507918823465)" rx="2" ry="2" />
<text  x="71.40" y="145.5" >PCApply</text>
</g>
<g >
<title>HybridRHS (11,252,722 us, 18.49%)</title><rect x="564.3" y="167" width="218.1" height="15.0" fill="rgb(153.518480342499,153.518480342499,136.281866275187)" rx="2" ry="2" />
<text  x="567.27" y="177.5" >HybridRHS</text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.__init__ (6,910 us, 0.01%)</title><rect x="68.3" y="71" width="0.1" height="15.0" fill="rgb(154.129040848637,128.322646506218,128.322646506218)" rx="2" ry="2" />
<text  x="71.27" y="81.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (11,833 us, 0.02%)</title><rect x="35.8" y="71" width="0.2" height="15.0" fill="rgb(140.015196601852,153.337273193073,153.337273193073)" rx="2" ry="2" />
<text  x="38.80" y="81.5" ></text>
</g>
<g >
<title>firedrake.functionspace.VectorFunctionSpace (6,378 us, 0.01%)</title><rect x="35.7" y="87" width="0.1" height="15.0" fill="rgb(126.686845445523,126.686845445523,151.939389441069)" rx="2" ry="2" />
<text  x="38.68" y="97.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (713,231 us, 1.17%)</title><rect x="1064.5" y="183" width="13.8" height="15.0" fill="rgb(156.367201188633,145.48187577952,145.48187577952)" rx="2" ry="2" />
<text  x="1067.52" y="193.5" ></text>
</g>
<g >
<title>SCSolve (35,612 us, 0.06%)</title><rect x="782.4" y="151" width="0.7" height="15.0" fill="rgb(151.574145537649,151.574145537649,126.859320682453)" rx="2" ry="2" />
<text  x="785.42" y="161.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (864,445 us, 1.42%)</title><rect x="91.9" y="231" width="16.8" height="15.0" fill="rgb(139.515058031166,139.515058031166,154.422269296355)" rx="2" ry="2" />
<text  x="94.93" y="241.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.LinearVariationalProblem.__init__ (21,341 us, 0.04%)</title><rect x="67.9" y="71" width="0.4" height="15.0" fill="rgb(136.108724127435,161.563696072278,136.108724127435)" rx="2" ry="2" />
<text  x="70.85" y="81.5" ></text>
</g>
<g >
<title>CreateSparsity (6,545 us, 0.01%)</title><rect x="1063.8" y="167" width="0.1" height="15.0" fill="rgb(148.765865334221,148.765865334221,113.249962773532)" rx="2" ry="2" />
<text  x="1066.82" y="177.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (8,637,005 us, 14.19%)</title><rect x="584.8" y="215" width="167.4" height="15.0" fill="rgb(150.74140306333,150.74140306333,122.823722537674)" rx="2" ry="2" />
<text  x="587.79" y="225.5" >pyop2.global_kernel..</text>
</g>
<g >
<title>firedrake.interpolation.make_interpolator (22,541 us, 0.04%)</title><rect x="1064.1" y="151" width="0.4" height="15.0" fill="rgb(145.49833624039,160.035154565518,145.49833624039)" rx="2" ry="2" />
<text  x="1067.08" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (11,833 us, 0.02%)</title><rect x="35.8" y="103" width="0.2" height="15.0" fill="rgb(149.766800959981,149.766800959981,118.100650806061)" rx="2" ry="2" />
<text  x="38.80" y="113.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_pyop2_kernel_uniform_extrusion (907,510 us, 1.49%)</title><rect x="18.1" y="119" width="17.6" height="15.0" fill="rgb(144.926061231313,144.926061231313,155.469560238319)" rx="2" ry="2" />
<text  x="21.08" y="129.5" ></text>
</g>
<g >
<title>ParLoopExecute (854,557 us, 1.40%)</title><rect x="547.7" y="199" width="16.6" height="15.0" fill="rgb(148.978916900491,159.468548411548,148.978916900491)" rx="2" ry="2" />
<text  x="550.70" y="209.5" ></text>
</g>
<g >
<title>firedrake.__init__ (1,635,260 us, 2.69%)</title><rect x="36.0" y="71" width="31.7" height="15.0" fill="rgb(153.774548820713,125.604874292132,125.604874292132)" rx="2" ry="2" />
<text  x="39.03" y="81.5" >fi..</text>
</g>
<g >
<title>HybridInit (15,228,287 us, 25.02%)</title><rect x="783.1" y="135" width="295.2" height="15.0" fill="rgb(138.715612923642,153.000344091315,153.000344091315)" rx="2" ry="2" />
<text  x="786.11" y="145.5" >HybridInit</text>
</g>
<g >
<title>Parloop_Cells_wrap_wrap_slate_loopy_knl_4 (8,647,412 us, 14.21%)</title><rect x="584.6" y="199" width="167.6" height="15.0" fill="rgb(154.493397234571,131.116045465042,131.116045465042)" rx="2" ry="2" />
<text  x="587.59" y="209.5" >Parloop_Cells_wrap_..</text>
</g>
<g >
<title>ParLoopExecute (907,510 us, 1.49%)</title><rect x="18.1" y="103" width="17.6" height="15.0" fill="rgb(132.852297106626,162.093812098921,132.852297106626)" rx="2" ry="2" />
<text  x="21.08" y="113.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.solve (57,852,777 us, 95.05%)</title><rect x="68.4" y="87" width="1121.6" height="15.0" fill="rgb(155.825285360051,141.32718776039,141.32718776039)" rx="2" ry="2" />
<text  x="71.40" y="97.5" >firedrake.variational_solver.NonlinearVariationalSolver.solve</text>
</g>
<g >
<title>SCForwardElim (12,113,963 us, 19.90%)</title><rect x="547.6" y="151" width="234.8" height="15.0" fill="rgb(136.994815111055,161.419448702852,136.994815111055)" rx="2" ry="2" />
<text  x="550.57" y="161.5" >SCForwardElim</text>
</g>
<g >
<title>Parloop_Cells_wrap_form1_cell_integral_otherwise (2,158,539 us, 3.55%)</title><rect x="1129.4" y="151" width="41.9" height="15.0" fill="rgb(155.484551877257,155.484551877257,145.809751405167)" rx="2" ry="2" />
<text  x="1132.42" y="161.5" >Par..</text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (966,465 us, 1.59%)</title><rect x="1171.3" y="135" width="18.7" height="15.0" fill="rgb(127.69189071829,162.933878255162,127.69189071829)" rx="2" ry="2" />
<text  x="1174.26" y="145.5" ></text>
</g>
<g >
<title>RecoverFirstElim (13,384,153 us, 21.99%)</title><rect x="259.7" y="167" width="259.5" height="15.0" fill="rgb(151.601961853379,151.601961853379,126.994122827913)" rx="2" ry="2" />
<text  x="262.72" y="177.5" >RecoverFirstElim</text>
</g>
<g >
<title>HybridBreak (861,241 us, 1.41%)</title><rect x="547.6" y="167" width="16.7" height="15.0" fill="rgb(153.609000020332,124.335666822542,124.335666822542)" rx="2" ry="2" />
<text  x="550.57" y="177.5" ></text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (2,146,385 us, 3.53%)</title><rect x="1022.2" y="167" width="41.6" height="15.0" fill="rgb(149.407354633366,149.407354633366,116.358718607853)" rx="2" ry="2" />
<text  x="1025.21" y="177.5" >fir..</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (9,780,659 us, 16.07%)</title><rect x="288.4" y="215" width="189.6" height="15.0" fill="rgb(132.388088239125,132.388088239125,153.042855788218)" rx="2" ry="2" />
<text  x="291.40" y="225.5" >pyop2.global_kernel.Gl..</text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (854,557 us, 1.40%)</title><rect x="547.7" y="215" width="16.6" height="15.0" fill="rgb(140.446342937717,153.449051872742,153.449051872742)" rx="2" ry="2" />
<text  x="550.70" y="225.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (864,445 us, 1.42%)</title><rect x="91.9" y="215" width="16.8" height="15.0" fill="rgb(155.161007246599,136.234388890596,136.234388890596)" rx="2" ry="2" />
<text  x="94.93" y="225.5" ></text>
</g>
<g >
<title>firedrake (60,865,186 us, 100.00%)</title><rect x="10.0" y="55" width="1180.0" height="15.0" fill="rgb(153.501517044773,153.501517044773,136.199659524668)" rx="2" ry="2" />
<text  x="13.00" y="65.5" >firedrake</text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (7,070 us, 0.01%)</title><rect x="1063.9" y="183" width="0.2" height="15.0" fill="rgb(152.944995863804,119.244968289161,119.244968289161)" rx="2" ry="2" />
<text  x="1066.94" y="193.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (10,738 us, 0.02%)</title><rect x="68.1" y="103" width="0.2" height="15.0" fill="rgb(114.067778336368,114.067778336368,149.496989355426)" rx="2" ry="2" />
<text  x="71.06" y="113.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (7,070 us, 0.01%)</title><rect x="1063.9" y="151" width="0.2" height="15.0" fill="rgb(123.860852740809,123.860852740809,151.392423111124)" rx="2" ry="2" />
<text  x="1066.94" y="161.5" ></text>
</g>
<g >
<title>ParLoopExecute (713,231 us, 1.17%)</title><rect x="1064.5" y="167" width="13.8" height="15.0" fill="rgb(154.731279981271,154.731279981271,142.159279909238)" rx="2" ry="2" />
<text  x="1067.52" y="177.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_wrap_slate_loopy_knl_14 (7,790,098 us, 12.80%)</title><rect x="108.7" y="183" width="151.0" height="15.0" fill="rgb(126.922032209089,126.922032209089,151.984909459824)" rx="2" ry="2" />
<text  x="111.69" y="193.5" >Parloop_Cells_wra..</text>
</g>
<g >
<title>PCSetUp (15,228,287 us, 25.02%)</title><rect x="783.1" y="119" width="295.2" height="15.0" fill="rgb(154.612476491995,154.612476491995,141.583539922745)" rx="2" ry="2" />
<text  x="786.11" y="129.5" >PCSetUp</text>
</g>
<g >
<title>firedrake.parloops.par_loop (713,231 us, 1.17%)</title><rect x="1064.5" y="151" width="13.8" height="15.0" fill="rgb(152.582220095726,116.463687400562,116.463687400562)" rx="2" ry="2" />
<text  x="1067.52" y="161.5" ></text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (1,463,213 us, 2.40%)</title><rect x="519.2" y="167" width="28.4" height="15.0" fill="rgb(147.903535837947,147.903535837947,109.070981368514)" rx="2" ry="2" />
<text  x="522.20" y="177.5" >f..</text>
</g>
<g >
<title>Parloop_Cells_wrap_form0_cell_integral_otherwise (2,634,187 us, 4.33%)</title><rect x="1078.3" y="151" width="51.1" height="15.0" fill="rgb(114.693653069068,114.693653069068,149.618126400465)" rx="2" ry="2" />
<text  x="1081.35" y="161.5" >Parl..</text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (2,124,227 us, 3.49%)</title><rect x="478.0" y="183" width="41.2" height="15.0" fill="rgb(154.436999973632,154.436999973632,140.733153718369)" rx="2" ry="2" />
<text  x="481.02" y="193.5" >fir..</text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (11,833 us, 0.02%)</title><rect x="35.8" y="87" width="0.2" height="15.0" fill="rgb(146.303745057426,146.303745057426,155.736208720792)" rx="2" ry="2" />
<text  x="38.80" y="97.5" ></text>
</g>
<g >
<title>all (60,865,186 us, 100%)</title><rect x="10.0" y="39" width="1180.0" height="15.0" fill="rgb(146.542965212695,159.865098686306,146.542965212695)" rx="2" ry="2" />
<text  x="13.00" y="49.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (2,626,697 us, 4.32%)</title><rect x="1078.5" y="167" width="50.9" height="15.0" fill="rgb(152.278306060198,114.133679794852,114.133679794852)" rx="2" ry="2" />
<text  x="1081.49" y="177.5" >pyop..</text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (1,556,912 us, 2.56%)</title><rect x="752.2" y="183" width="30.2" height="15.0" fill="rgb(134.599568838894,134.599568838894,153.470884291399)" rx="2" ry="2" />
<text  x="755.24" y="193.5" >f..</text>
</g>
<g >
<title>ParLoopExecute (10,767,328 us, 17.69%)</title><rect x="813.5" y="167" width="208.7" height="15.0" fill="rgb(134.338472888938,161.851876506452,134.338472888938)" rx="2" ry="2" />
<text  x="816.46" y="177.5" >ParLoopExecute</text>
</g>
<g >
<title>ParLoopExecute (864,445 us, 1.42%)</title><rect x="91.9" y="199" width="16.8" height="15.0" fill="rgb(104.956466617513,144.247972826763,144.247972826763)" rx="2" ry="2" />
<text  x="94.93" y="209.5" ></text>
</g>
<g >
<title>firedrake.parloops.par_loop (861,241 us, 1.41%)</title><rect x="547.6" y="183" width="16.7" height="15.0" fill="rgb(143.545440507539,154.252521613066,154.252521613066)" rx="2" ry="2" />
<text  x="550.57" y="193.5" ></text>
</g>
<g >
<title>KSPSolve (36,865,299 us, 60.57%)</title><rect x="68.4" y="119" width="714.7" height="15.0" fill="rgb(155.579691757021,139.444303470491,139.444303470491)" rx="2" ry="2" />
<text  x="71.40" y="129.5" >KSPSolve</text>
</g>
<g >
<title>CreateExtMesh (945,798 us, 1.55%)</title><rect x="17.5" y="71" width="18.3" height="15.0" fill="rgb(149.531112541445,136.298475887454,149.531112541445)" rx="2" ry="2" />
<text  x="20.47" y="81.5" ></text>
</g>
<g >
<title>firedrake.extrusion_utils.make_extruded_coords (939,420 us, 1.54%)</title><rect x="17.5" y="87" width="18.2" height="15.0" fill="rgb(134.949339927502,161.752433035058,134.949339927502)" rx="2" ry="2" />
<text  x="20.47" y="97.5" ></text>
</g>
<g >
<title>HybridProject (871,525 us, 1.43%)</title><rect x="91.8" y="167" width="16.9" height="15.0" fill="rgb(109.290181779821,145.371528609583,145.371528609583)" rx="2" ry="2" />
<text  x="94.80" y="177.5" ></text>
</g>
<g >
<title>perfsolve (57,852,777 us, 95.05%)</title><rect x="68.4" y="71" width="1121.6" height="15.0" fill="rgb(132.918263035434,132.918263035434,153.145470264923)" rx="2" ry="2" />
<text  x="71.40" y="81.5" >perfsolve</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (2,158,539 us, 3.55%)</title><rect x="1129.4" y="167" width="41.9" height="15.0" fill="rgb(144.774548653352,160.15298045178,144.774548653352)" rx="2" ry="2" />
<text  x="1132.42" y="177.5" >pyo..</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (713,231 us, 1.17%)</title><rect x="1064.5" y="199" width="13.8" height="15.0" fill="rgb(156.619561956412,147.416641665826,147.416641665826)" rx="2" ry="2" />
<text  x="1067.52" y="209.5" ></text>
</g>
<g >
<title>firedrake.parloops.par_loop (871,525 us, 1.43%)</title><rect x="91.8" y="183" width="16.9" height="15.0" fill="rgb(143.21235076753,160.407291735518,143.21235076753)" rx="2" ry="2" />
<text  x="94.80" y="193.5" ></text>
</g>
<g >
<title>ParLoopExecute (7,790,098 us, 12.80%)</title><rect x="108.7" y="167" width="151.0" height="15.0" fill="rgb(156.135592161791,143.706206573735,143.706206573735)" rx="2" ry="2" />
<text  x="111.69" y="177.5" >ParLoopExecute</text>
</g>
<g >
<title>firedrake.matrix_free.operators.ImplicitMatrixContext.__init__ (6,910 us, 0.01%)</title><rect x="68.3" y="103" width="0.1" height="15.0" fill="rgb(141.319529225059,115.256293639215,141.319529225059)" rx="2" ry="2" />
<text  x="71.27" y="113.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (6,712 us, 0.01%)</title><rect x="1189.9" y="151" width="0.1" height="15.0" fill="rgb(153.385570483892,122.622707043174,122.622707043174)" rx="2" ry="2" />
<text  x="1192.87" y="161.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_wrap_slate_loopy_knl_0 (10,767,328 us, 17.69%)</title><rect x="813.5" y="183" width="208.7" height="15.0" fill="rgb(132.86876271735,162.091131650664,132.86876271735)" rx="2" ry="2" />
<text  x="816.46" y="193.5" >Parloop_Cells_wrap_wrap_s..</text>
</g>
<g >
<title>firedrake.functionspace.VectorFunctionSpace (6,157 us, 0.01%)</title><rect x="67.7" y="71" width="0.2" height="15.0" fill="rgb(133.815186530092,133.815186530092,153.319068360663)" rx="2" ry="2" />
<text  x="70.73" y="81.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (11,833 us, 0.02%)</title><rect x="35.8" y="119" width="0.2" height="15.0" fill="rgb(152.556528940375,152.556528940375,131.620101787973)" rx="2" ry="2" />
<text  x="38.80" y="129.5" ></text>
</g>
<g >
<title>SNESFunctionEval (5,759,191 us, 9.46%)</title><rect x="1078.3" y="119" width="111.7" height="15.0" fill="rgb(123.433422189384,123.433422189384,151.3096946173)" rx="2" ry="2" />
<text  x="1081.35" y="129.5" >SNESFunction..</text>
</g>
<g >
<title>CreateFunctionSpace (6,378 us, 0.01%)</title><rect x="35.7" y="103" width="0.1" height="15.0" fill="rgb(150.871096127342,150.871096127342,123.452235078656)" rx="2" ry="2" />
<text  x="38.68" y="113.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (907,510 us, 1.49%)</title><rect x="18.1" y="135" width="17.6" height="15.0" fill="rgb(139.847034526706,160.955133914257,139.847034526706)" rx="2" ry="2" />
<text  x="21.08" y="145.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_wrap_slate_loopy_knl_7 (9,799,427 us, 16.10%)</title><rect x="288.0" y="199" width="190.0" height="15.0" fill="rgb(119.719630979815,119.719630979815,150.590896318674)" rx="2" ry="2" />
<text  x="291.04" y="209.5" >Parloop_Cells_wrap_wra..</text>
</g>
<g >
<title>SCBackSub (24,715,724 us, 40.61%)</title><rect x="68.4" y="151" width="479.2" height="15.0" fill="rgb(154.460380615902,154.460380615902,140.846459907832)" rx="2" ry="2" />
<text  x="71.40" y="161.5" >SCBackSub</text>
</g>
<g >
<title>firedrake.ufl_expr.action (10,603 us, 0.02%)</title><rect x="67.9" y="87" width="0.2" height="15.0" fill="rgb(109.938196610411,145.539532454551,145.539532454551)" rx="2" ry="2" />
<text  x="70.85" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (6,378 us, 0.01%)</title><rect x="35.7" y="119" width="0.1" height="15.0" fill="rgb(147.08004836138,159.777666545822,147.08004836138)" rx="2" ry="2" />
<text  x="38.68" y="129.5" ></text>
</g>
<g >
<title>ParLoopExecute (4,792,726 us, 7.87%)</title><rect x="1078.3" y="135" width="93.0" height="15.0" fill="rgb(153.319911597883,122.119322250438,122.119322250438)" rx="2" ry="2" />
<text  x="1081.35" y="145.5" >ParLoopExe..</text>
</g>
<g >
<title>Log_Event_form0_cell_integral_otherwise (7,490 us, 0.01%)</title><rect x="1078.3" y="167" width="0.2" height="15.0" fill="rgb(130.064675711339,130.064675711339,152.593163040904)" rx="2" ry="2" />
<text  x="1081.35" y="177.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (10,749,233 us, 17.66%)</title><rect x="813.8" y="199" width="208.4" height="15.0" fill="rgb(141.152499921659,160.742616291823,141.152499921659)" rx="2" ry="2" />
<text  x="816.81" y="209.5" >pyop2.global_kernel.Globa..</text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (7,070 us, 0.01%)</title><rect x="1063.9" y="167" width="0.2" height="15.0" fill="rgb(155.275785248899,155.275785248899,144.798036206202)" rx="2" ry="2" />
<text  x="1066.94" y="177.5" ></text>
</g>
<g >
<title>firedrake.assemble.allocate_matrix (6,545 us, 0.01%)</title><rect x="1063.8" y="151" width="0.1" height="15.0" fill="rgb(150.28760144952,150.28760144952,120.624530101521)" rx="2" ry="2" />
<text  x="1066.82" y="161.5" ></text>
</g>
<g >
<title>ParLoopExecute (8,647,412 us, 14.21%)</title><rect x="584.6" y="183" width="167.6" height="15.0" fill="rgb(141.988381730572,116.970228184592,141.988381730572)" rx="2" ry="2" />
<text  x="587.59" y="193.5" >ParLoopExecute</text>
</g>
<g >
<title>Log_Event_slate_loopy_knl_7 (8,105 us, 0.01%)</title><rect x="288.2" y="215" width="0.2" height="15.0" fill="rgb(151.68179630074,151.68179630074,127.381012842048)" rx="2" ry="2" />
<text  x="291.24" y="225.5" ></text>
</g>
<g >
<title>SNESSolve (57,852,777 us, 95.05%)</title><rect x="68.4" y="103" width="1121.6" height="15.0" fill="rgb(143.243989357398,120.187722728331,143.243989357398)" rx="2" ry="2" />
<text  x="71.40" y="113.5" >SNESSolve</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (854,557 us, 1.40%)</title><rect x="547.7" y="231" width="16.6" height="15.0" fill="rgb(140.287474206751,112.611652654799,140.287474206751)" rx="2" ry="2" />
<text  x="550.70" y="241.5" ></text>
</g>
<g >
<title>HybridOperatorAssembly (14,452,477 us, 23.75%)</title><rect x="783.6" y="151" width="280.2" height="15.0" fill="rgb(155.183361621031,155.183361621031,144.350137086537)" rx="2" ry="2" />
<text  x="786.63" y="161.5" >HybridOperatorAssembly</text>
</g>
<g >
<title>CreateFunctionSpace (9,080 us, 0.01%)</title><rect x="783.4" y="151" width="0.2" height="15.0" fill="rgb(144.589309378391,144.589309378391,155.404382460334)" rx="2" ry="2" />
<text  x="786.45" y="161.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalProblem.__init__ (10,738 us, 0.02%)</title><rect x="68.1" y="87" width="0.2" height="15.0" fill="rgb(154.779749766414,133.311414875839,133.311414875839)" rx="2" ry="2" />
<text  x="71.06" y="97.5" ></text>
</g>
<g >
<title>ParLoopExecute (9,799,427 us, 16.10%)</title><rect x="288.0" y="183" width="190.0" height="15.0" fill="rgb(126.546025213402,149.845265796067,149.845265796067)" rx="2" ry="2" />
<text  x="291.04" y="193.5" >ParLoopExecute</text>
</g>
</g>
</svg>
