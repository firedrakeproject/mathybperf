<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="283" onload="init(evt)" viewBox="0 0 1200 283" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:13px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:18px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 13 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (1 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="283.0" fill="url(#background)"  />
<text id="title" x="600.00" y="26" >Firedrake example</text>
<text id="details" x="10.00" y="265" > </text>
<text id="unzoom" x="10.00" y="26" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="26" >Search</text>
<text id="ignorecase" x="1174.00" y="26" >ic</text>
<text id="matched" x="1090.00" y="265" > </text>
<g id="frames">
<g >
<title>ParLoopExecute (33,242 us, 0.05%)</title><rect x="1188.7" y="167" width="0.5" height="15.0" fill="rgb(116.618584706621,116.618584706621,149.990693814185)" rx="2" ry="2" />
<text  x="1191.66" y="177.5" ></text>
</g>
<g >
<title>ParLoop_Cells_wrap_form1_cell_integral_otherwise (18,289 us, 0.03%)</title><rect x="1188.9" y="183" width="0.3" height="15.0" fill="rgb(149.516271323142,159.381072110186,149.516271323142)" rx="2" ry="2" />
<text  x="1191.91" y="193.5" ></text>
</g>
<g >
<title>HybridOperatorAssembly (1,648,246 us, 2.36%)</title><rect x="1147.4" y="151" width="27.8" height="15.0" fill="rgb(126.576217595246,126.576217595246,151.91797759908)" rx="2" ry="2" />
<text  x="1150.36" y="161.5" >H..</text>
</g>
<g >
<title>KSPSolve (63,266,644 us, 90.67%)</title><rect x="76.9" y="119" width="1070.0" height="15.0" fill="rgb(112.577654025798,146.223836228911,146.223836228911)" rx="2" ry="2" />
<text  x="79.95" y="129.5" >KSPSolve</text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (7,063 us, 0.01%)</title><rect x="21.3" y="119" width="0.1" height="15.0" fill="rgb(152.191221654715,113.466032686149,113.466032686149)" rx="2" ry="2" />
<text  x="24.27" y="129.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (7,289 us, 0.01%)</title><rect x="1186.4" y="151" width="0.2" height="15.0" fill="rgb(131.234846908555,131.234846908555,152.819647788753)" rx="2" ry="2" />
<text  x="1189.43" y="161.5" ></text>
</g>
<g >
<title>firedrake.parloops.par_loop (15,800 us, 0.02%)</title><rect x="76.9" y="183" width="0.3" height="15.0" fill="rgb(107.626258499246,144.940141092397,144.940141092397)" rx="2" ry="2" />
<text  x="79.95" y="193.5" ></text>
</g>
<g >
<title>firedrake.assemble.assemble_form (79,302 us, 0.11%)</title><rect x="1188.7" y="151" width="1.3" height="15.0" fill="rgb(152.953941131815,152.953941131815,133.546022408025)" rx="2" ry="2" />
<text  x="1191.66" y="161.5" ></text>
</g>
<g >
<title>HybridInit (2,470,853 us, 3.54%)</title><rect x="1146.9" y="135" width="41.8" height="15.0" fill="rgb(140.37413981676,160.869326076341,140.37413981676)" rx="2" ry="2" />
<text  x="1149.87" y="145.5" >Hyb..</text>
</g>
<g >
<title>RecoverFirstElim (1,216,634 us, 1.74%)</title><rect x="77.2" y="167" width="20.6" height="15.0" fill="rgb(142.659506760102,160.497289597193,142.659506760102)" rx="2" ry="2" />
<text  x="80.22" y="177.5" ></text>
</g>
<g >
<title>PCSetUp (2,470,853 us, 3.54%)</title><rect x="1146.9" y="119" width="41.8" height="15.0" fill="rgb(133.340771705941,133.340771705941,153.227246136634)" rx="2" ry="2" />
<text  x="1149.87" y="129.5" >PCS..</text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (7,063 us, 0.01%)</title><rect x="21.3" y="151" width="0.1" height="15.0" fill="rgb(123.789998278369,163.569070047707,123.789998278369)" rx="2" ry="2" />
<text  x="24.27" y="161.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (7,559 us, 0.01%)</title><rect x="1147.2" y="151" width="0.2" height="15.0" fill="rgb(156.76484308309,148.530463637027,148.530463637027)" rx="2" ry="2" />
<text  x="1150.23" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (7,065 us, 0.01%)</title><rect x="76.3" y="119" width="0.1" height="15.0" fill="rgb(154.982014533333,154.982014533333,143.374378123075)" rx="2" ry="2" />
<text  x="79.33" y="129.5" ></text>
</g>
<g >
<title>firedrake.assemble.allocate_matrix (7,673 us, 0.01%)</title><rect x="76.8" y="87" width="0.1" height="15.0" fill="rgb(127.665985301901,150.135625819011,150.135625819011)" rx="2" ry="2" />
<text  x="79.82" y="97.5" ></text>
</g>
<g >
<title>MatGetOrdering (8,163 us, 0.01%)</title><rect x="120.6" y="183" width="0.2" height="15.0" fill="rgb(104.116245838472,144.030137809974,144.030137809974)" rx="2" ry="2" />
<text  x="123.63" y="193.5" ></text>
</g>
<g >
<title>ParLoopExecute (1,110,525 us, 1.59%)</title><rect x="77.2" y="215" width="18.8" height="15.0" fill="rgb(137.002719530931,161.418161936825,137.002719530931)" rx="2" ry="2" />
<text  x="80.22" y="225.5" ></text>
</g>
<g >
<title>firedrake.slate.slac.compiler.compile_expression (169,632 us, 0.24%)</title><rect x="104.8" y="199" width="2.9" height="15.0" fill="rgb(154.806955335412,133.519990904822,133.519990904822)" rx="2" ry="2" />
<text  x="107.83" y="209.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (7,063 us, 0.01%)</title><rect x="21.3" y="135" width="0.1" height="15.0" fill="rgb(149.503728598263,149.503728598263,116.825761668505)" rx="2" ry="2" />
<text  x="24.27" y="145.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (7,559 us, 0.01%)</title><rect x="1147.2" y="183" width="0.2" height="15.0" fill="rgb(116.604956758547,147.267951752216,147.267951752216)" rx="2" ry="2" />
<text  x="1150.23" y="193.5" ></text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (46,060 us, 0.07%)</title><rect x="1189.2" y="167" width="0.8" height="15.0" fill="rgb(147.840081815631,147.840081815631,108.763473414212)" rx="2" ry="2" />
<text  x="1192.22" y="177.5" ></text>
</g>
<g >
<title>SCSolve (60,801,097 us, 87.14%)</title><rect x="118.6" y="151" width="1028.3" height="15.0" fill="rgb(153.085825536382,153.085825536382,134.185154522469)" rx="2" ry="2" />
<text  x="121.64" y="161.5" >SCSolve</text>
</g>
<g >
<title>perfsolve (65,816,799 us, 94.33%)</title><rect x="76.9" y="71" width="1113.1" height="15.0" fill="rgb(141.823363630729,141.823363630729,154.869038122077)" rx="2" ry="2" />
<text  x="79.95" y="81.5" >perfsolve</text>
</g>
<g >
<title>firedrake.assemble.assemble_form (585,639 us, 0.84%)</title><rect x="97.8" y="183" width="9.9" height="15.0" fill="rgb(154.699590471553,132.696860281907,132.696860281907)" rx="2" ry="2" />
<text  x="100.79" y="193.5" ></text>
</g>
<g >
<title>ParLoopExecute (416,007 us, 0.60%)</title><rect x="97.8" y="199" width="7.0" height="15.0" fill="rgb(119.42407156419,119.42407156419,150.533691270488)" rx="2" ry="2" />
<text  x="100.79" y="209.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.LinearVariationalProblem.__init__ (22,063 us, 0.03%)</title><rect x="76.4" y="71" width="0.4" height="15.0" fill="rgb(134.848000296572,134.848000296572,153.518967799337)" rx="2" ry="2" />
<text  x="79.45" y="81.5" ></text>
</g>
<g >
<title>firedrake.interpolation.make_interpolator (124,479 us, 0.18%)</title><rect x="1186.6" y="151" width="2.1" height="15.0" fill="rgb(141.160927428156,141.160927428156,154.740824663514)" rx="2" ry="2" />
<text  x="1189.55" y="161.5" ></text>
</g>
<g >
<title>ParLoop_Cells_wrap_wrap_slate_loopy_knl_7 (1,110,525 us, 1.59%)</title><rect x="77.2" y="231" width="18.8" height="15.0" fill="rgb(152.901627147584,118.912474798143,118.912474798143)" rx="2" ry="2" />
<text  x="80.22" y="241.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.action (11,821 us, 0.02%)</title><rect x="76.4" y="87" width="0.2" height="15.0" fill="rgb(152.54564776982,152.54564776982,131.567369961435)" rx="2" ry="2" />
<text  x="79.45" y="97.5" ></text>
</g>
<g >
<title>SNESSolve (65,816,799 us, 94.33%)</title><rect x="76.9" y="103" width="1113.1" height="15.0" fill="rgb(152.397932038654,115.050812296345,115.050812296345)" rx="2" ry="2" />
<text  x="79.95" y="113.5" >SNESSolve</text>
</g>
<g >
<title>firedrake.functionspace.VectorFunctionSpace (7,063 us, 0.01%)</title><rect x="21.3" y="87" width="0.1" height="15.0" fill="rgb(146.62589937595,128.853867150873,146.62589937595)" rx="2" ry="2" />
<text  x="24.27" y="97.5" ></text>
</g>
<g >
<title>PCApply (63,266,644 us, 90.67%)</title><rect x="76.9" y="135" width="1070.0" height="15.0" fill="rgb(152.428840521467,115.287777331247,115.287777331247)" rx="2" ry="2" />
<text  x="79.95" y="145.5" >PCApply</text>
</g>
<g >
<title>firedrake.assemble.assemble_form (639,795 us, 0.92%)</title><rect x="107.8" y="199" width="10.8" height="15.0" fill="rgb(119.33536452151,147.975835246318,147.975835246318)" rx="2" ry="2" />
<text  x="110.82" y="209.5" ></text>
</g>
<g >
<title>MatZeroInitial (117,158 us, 0.17%)</title><rect x="1184.4" y="167" width="2.0" height="15.0" fill="rgb(147.203692127951,147.203692127951,155.910392024765)" rx="2" ry="2" />
<text  x="1187.45" y="177.5" ></text>
</g>
<g >
<title>firedrake.matrix_free.operators.ImplicitMatrixContext.__init__ (7,673 us, 0.01%)</title><rect x="76.8" y="103" width="0.1" height="15.0" fill="rgb(136.115118730672,161.562655090356,136.115118730672)" rx="2" ry="2" />
<text  x="79.82" y="113.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (7,065 us, 0.01%)</title><rect x="76.3" y="87" width="0.1" height="15.0" fill="rgb(129.911559959171,150.717811841267,150.717811841267)" rx="2" ry="2" />
<text  x="79.33" y="97.5" ></text>
</g>
<g >
<title>ParLoop_Cells_wrap_form0_cell_integral_otherwise (14,953 us, 0.02%)</title><rect x="1188.7" y="183" width="0.2" height="15.0" fill="rgb(135.202810290858,135.202810290858,153.587640701456)" rx="2" ry="2" />
<text  x="1191.66" y="193.5" ></text>
</g>
<g >
<title>firedrake.assemble.assemble (79,302 us, 0.11%)</title><rect x="1188.7" y="135" width="1.3" height="15.0" fill="rgb(112.715804566544,146.259653035771,146.259653035771)" rx="2" ry="2" />
<text  x="1191.66" y="145.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (7,289 us, 0.01%)</title><rect x="1186.4" y="167" width="0.2" height="15.0" fill="rgb(134.542636460002,97.8905059287539,134.542636460002)" rx="2" ry="2" />
<text  x="1189.43" y="177.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (7,289 us, 0.01%)</title><rect x="1186.4" y="199" width="0.2" height="15.0" fill="rgb(148.349335412912,148.349335412912,111.231394693344)" rx="2" ry="2" />
<text  x="1189.43" y="209.5" ></text>
</g>
<g >
<title>PCApply (117,586 us, 0.17%)</title><rect x="118.6" y="183" width="2.0" height="15.0" fill="rgb(140.870377479694,160.78854320098,140.870377479694)" rx="2" ry="2" />
<text  x="121.64" y="193.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (7,065 us, 0.01%)</title><rect x="76.3" y="103" width="0.1" height="15.0" fill="rgb(131.611348779402,151.158497831697,151.158497831697)" rx="2" ry="2" />
<text  x="79.33" y="113.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (16,977 us, 0.02%)</title><rect x="21.4" y="103" width="0.3" height="15.0" fill="rgb(136.191132030752,152.34584904501,152.34584904501)" rx="2" ry="2" />
<text  x="24.39" y="113.5" ></text>
</g>
<g >
<title>HybridBreak (7,679 us, 0.01%)</title><rect x="107.7" y="167" width="0.1" height="15.0" fill="rgb(155.353904185914,155.353904185914,145.176612593277)" rx="2" ry="2" />
<text  x="110.69" y="177.5" ></text>
</g>
<g >
<title>firedrake.extrusion_utils.make_extruded_coords (75,558 us, 0.11%)</title><rect x="20.0" y="87" width="1.3" height="15.0" fill="rgb(142.53241739019,142.53241739019,155.006274333585)" rx="2" ry="2" />
<text  x="22.99" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspace.VectorFunctionSpace (7,065 us, 0.01%)</title><rect x="76.3" y="71" width="0.1" height="15.0" fill="rgb(155.242890344254,136.862159305946,136.862159305946)" rx="2" ry="2" />
<text  x="79.33" y="81.5" ></text>
</g>
<g >
<title>firedrake (69,775,555 us, 100.00%)</title><rect x="10.0" y="55" width="1180.0" height="15.0" fill="rgb(151.874969848643,151.874969848643,128.317161574194)" rx="2" ry="2" />
<text  x="13.00" y="65.5" >firedrake</text>
</g>
<g >
<title>MatLUFactorNum (58,914,154 us, 84.43%)</title><rect x="120.8" y="183" width="996.3" height="15.0" fill="rgb(123.068486750508,148.943681750132,148.943681750132)" rx="2" ry="2" />
<text  x="123.77" y="193.5" >MatLUFactorNum</text>
</g>
<g >
<title>CreateSparsity (544,791 us, 0.78%)</title><rect x="1175.2" y="167" width="9.2" height="15.0" fill="rgb(154.197657400843,128.848706739793,128.848706739793)" rx="2" ry="2" />
<text  x="1178.24" y="177.5" ></text>
</g>
<g >
<title>pyop2.parloop.JITModule.compile (36,946 us, 0.05%)</title><rect x="20.6" y="119" width="0.7" height="15.0" fill="rgb(138.298944345014,107.516044884097,138.298944345014)" rx="2" ry="2" />
<text  x="23.64" y="129.5" ></text>
</g>
<g >
<title>PCSetUp (60,683,511 us, 86.97%)</title><rect x="120.6" y="167" width="1026.3" height="15.0" fill="rgb(139.034064256205,161.087477911781,139.034064256205)" rx="2" ry="2" />
<text  x="123.63" y="177.5" >PCSetUp</text>
</g>
<g >
<title>firedrake.assemble.assemble_form (1,216,634 us, 1.74%)</title><rect x="77.2" y="199" width="20.6" height="15.0" fill="rgb(133.319522241744,133.319522241744,153.223133337112)" rx="2" ry="2" />
<text  x="80.22" y="209.5" ></text>
</g>
<g >
<title>SCForwardElim (647,474 us, 0.93%)</title><rect x="107.7" y="151" width="10.9" height="15.0" fill="rgb(149.713441538949,149.713441538949,117.842062842599)" rx="2" ry="2" />
<text  x="110.69" y="161.5" ></text>
</g>
<g >
<title>ParLoop_Cells_wrap_wrap_slate_loopy_knl_0 (1,536,708 us, 2.20%)</title><rect x="1147.4" y="215" width="25.9" height="15.0" fill="rgb(126.746928065917,126.746928065917,151.951018335339)" rx="2" ry="2" />
<text  x="1150.36" y="225.5" >P..</text>
</g>
<g >
<title>CreateExtMesh (82,621 us, 0.12%)</title><rect x="20.0" y="71" width="1.4" height="15.0" fill="rgb(124.112067114538,163.516640237168,124.112067114538)" rx="2" ry="2" />
<text  x="22.99" y="81.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (7,559 us, 0.01%)</title><rect x="1147.2" y="199" width="0.2" height="15.0" fill="rgb(134.122355900424,134.122355900424,153.378520496856)" rx="2" ry="2" />
<text  x="1150.23" y="209.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (7,289 us, 0.01%)</title><rect x="1186.4" y="183" width="0.2" height="15.0" fill="rgb(112.214154602987,146.129595637812,146.129595637812)" rx="2" ry="2" />
<text  x="1189.43" y="193.5" ></text>
</g>
<g >
<title>firedrake.assemble.assemble_form (1,648,246 us, 2.36%)</title><rect x="1147.4" y="183" width="27.8" height="15.0" fill="rgb(152.501349382285,152.501349382285,131.352693160302)" rx="2" ry="2" />
<text  x="1150.36" y="193.5" >f..</text>
</g>
<g >
<title>firedrake.assemble.assemble (1,648,246 us, 2.36%)</title><rect x="1147.4" y="167" width="27.8" height="15.0" fill="rgb(135.742544938646,161.623306637895,135.742544938646)" rx="2" ry="2" />
<text  x="1150.36" y="177.5" >f..</text>
</g>
<g >
<title>CreateFunctionSpace (16,977 us, 0.02%)</title><rect x="21.4" y="71" width="0.3" height="15.0" fill="rgb(152.776964101964,152.776964101964,132.688364494131)" rx="2" ry="2" />
<text  x="24.39" y="81.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (7,065 us, 0.01%)</title><rect x="76.3" y="135" width="0.1" height="15.0" fill="rgb(126.590356089411,163.11319784591,126.590356089411)" rx="2" ry="2" />
<text  x="79.33" y="145.5" ></text>
</g>
<g >
<title>MatLUFactorSym (1,761,194 us, 2.52%)</title><rect x="1117.1" y="183" width="29.8" height="15.0" fill="rgb(146.92756209003,159.802489892321,146.92756209003)" rx="2" ry="2" />
<text  x="1120.09" y="193.5" >M..</text>
</g>
<g >
<title>HybridRHS (639,795 us, 0.92%)</title><rect x="107.8" y="167" width="10.8" height="15.0" fill="rgb(133.358280472789,94.8555937115231,133.358280472789)" rx="2" ry="2" />
<text  x="110.82" y="177.5" ></text>
</g>
<g >
<title>ParLoopExecute (560,684 us, 0.80%)</title><rect x="107.8" y="215" width="9.5" height="15.0" fill="rgb(110.094467688539,110.094467688539,148.727961488104)" rx="2" ry="2" />
<text  x="110.82" y="225.5" ></text>
</g>
<g >
<title>firedrake.assemble.assemble (639,795 us, 0.92%)</title><rect x="107.8" y="183" width="10.8" height="15.0" fill="rgb(151.61270882624,151.61270882624,127.046204311777)" rx="2" ry="2" />
<text  x="110.82" y="193.5" ></text>
</g>
<g >
<title>firedrake.assemble.assemble (1,216,634 us, 1.74%)</title><rect x="77.2" y="183" width="20.6" height="15.0" fill="rgb(142.412516580253,142.412516580253,154.98306772521)" rx="2" ry="2" />
<text  x="80.22" y="193.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.solve (65,816,799 us, 94.33%)</title><rect x="76.9" y="87" width="1113.1" height="15.0" fill="rgb(153.612631823708,153.612631823708,136.73813883797)" rx="2" ry="2" />
<text  x="79.95" y="97.5" >firedrake.variational_solver.NonlinearVariationalSolver.solve</text>
</g>
<g >
<title>MatSolve (117,586 us, 0.17%)</title><rect x="118.6" y="199" width="2.0" height="15.0" fill="rgb(154.373151813974,130.194163907136,130.194163907136)" rx="2" ry="2" />
<text  x="121.64" y="209.5" ></text>
</g>
<g >
<title>firedrake.assemble.assemble (585,639 us, 0.84%)</title><rect x="97.8" y="167" width="9.9" height="15.0" fill="rgb(152.165664661974,113.2700957418,113.2700957418)" rx="2" ry="2" />
<text  x="100.79" y="177.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.__init__ (7,673 us, 0.01%)</title><rect x="76.8" y="71" width="0.1" height="15.0" fill="rgb(151.392542739201,151.392542739201,125.97924558228)" rx="2" ry="2" />
<text  x="79.82" y="81.5" ></text>
</g>
<g >
<title>ParLoopExecute (1,536,708 us, 2.20%)</title><rect x="1147.4" y="199" width="25.9" height="15.0" fill="rgb(113.060340262453,146.34897710508,146.34897710508)" rx="2" ry="2" />
<text  x="1150.36" y="209.5" >P..</text>
</g>
<g >
<title>KSPSolve (117,586 us, 0.17%)</title><rect x="118.6" y="167" width="2.0" height="15.0" fill="rgb(151.123573492237,151.123573492237,124.675779231611)" rx="2" ry="2" />
<text  x="121.64" y="177.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (16,977 us, 0.02%)</title><rect x="21.4" y="87" width="0.3" height="15.0" fill="rgb(144.382840014462,160.21674697439,144.382840014462)" rx="2" ry="2" />
<text  x="24.39" y="97.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalProblem.__init__ (10,242 us, 0.01%)</title><rect x="76.6" y="87" width="0.2" height="15.0" fill="rgb(155.165309458243,136.2673725132,136.2673725132)" rx="2" ry="2" />
<text  x="79.65" y="97.5" ></text>
</g>
<g >
<title>SCBackSub (1,818,073 us, 2.61%)</title><rect x="76.9" y="151" width="30.8" height="15.0" fill="rgb(115.766370120046,147.050540401494,147.050540401494)" rx="2" ry="2" />
<text  x="79.95" y="161.5" >SC..</text>
</g>
<g >
<title>firedrake.slate.slac.compiler.compile_expression (79,111 us, 0.11%)</title><rect x="117.3" y="215" width="1.3" height="15.0" fill="rgb(126.349206024702,126.349206024702,151.874039875749)" rx="2" ry="2" />
<text  x="120.31" y="225.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (7,063 us, 0.01%)</title><rect x="21.3" y="103" width="0.1" height="15.0" fill="rgb(125.900587835533,125.900587835533,151.787210548813)" rx="2" ry="2" />
<text  x="24.27" y="113.5" ></text>
</g>
<g >
<title>firedrake.__init__ (3,231,522 us, 4.63%)</title><rect x="21.7" y="71" width="54.6" height="15.0" fill="rgb(115.312144033491,115.312144033491,149.737834329063)" rx="2" ry="2" />
<text  x="24.68" y="81.5" >fired..</text>
</g>
<g >
<title>firedrake.parloops.par_loop (7,679 us, 0.01%)</title><rect x="107.7" y="183" width="0.1" height="15.0" fill="rgb(155.024270742268,155.024270742268,143.579158212532)" rx="2" ry="2" />
<text  x="110.69" y="193.5" ></text>
</g>
<g >
<title>ParLoopExecute (36,946 us, 0.05%)</title><rect x="20.6" y="103" width="0.7" height="15.0" fill="rgb(132.769431052759,93.3466670726939,132.769431052759)" rx="2" ry="2" />
<text  x="23.64" y="113.5" ></text>
</g>
<g >
<title>firedrake.assemble.allocate_matrix (661,949 us, 0.95%)</title><rect x="1175.2" y="151" width="11.2" height="15.0" fill="rgb(155.495826237191,155.495826237191,145.864388687925)" rx="2" ry="2" />
<text  x="1178.24" y="161.5" ></text>
</g>
<g >
<title>firedrake.slate.slac.compiler.compile_expression (106,109 us, 0.15%)</title><rect x="96.0" y="215" width="1.8" height="15.0" fill="rgb(135.887681116633,161.599679818223,135.887681116633)" rx="2" ry="2" />
<text  x="99.00" y="225.5" ></text>
</g>
<g >
<title>ParLoop_Cells_wrap_wrap_slate_loopy_knl_14 (416,007 us, 0.60%)</title><rect x="97.8" y="215" width="7.0" height="15.0" fill="rgb(112.763425638999,146.27199923974,146.27199923974)" rx="2" ry="2" />
<text  x="100.79" y="225.5" ></text>
</g>
<g >
<title>ParLoop_Cells_wrap_wrap_slate_loopy_knl_4 (560,684 us, 0.80%)</title><rect x="107.8" y="231" width="9.5" height="15.0" fill="rgb(111.591710453522,111.591710453522,149.017750410359)" rx="2" ry="2" />
<text  x="110.82" y="241.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (16,977 us, 0.02%)</title><rect x="21.4" y="119" width="0.3" height="15.0" fill="rgb(153.535242582339,123.770193131266,123.770193131266)" rx="2" ry="2" />
<text  x="24.39" y="129.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (7,559 us, 0.01%)</title><rect x="1147.2" y="167" width="0.2" height="15.0" fill="rgb(124.852554096336,163.396095844783,124.852554096336)" rx="2" ry="2" />
<text  x="1150.23" y="177.5" ></text>
</g>
<g >
<title>firedrake.slate.slac.compiler.compile_expression (111,538 us, 0.16%)</title><rect x="1173.3" y="199" width="1.9" height="15.0" fill="rgb(113.839796387845,113.839796387845,149.452863817002)" rx="2" ry="2" />
<text  x="1176.35" y="209.5" ></text>
</g>
<g >
<title>all (69,775,555 us, 100%)</title><rect x="10.0" y="39" width="1180.0" height="15.0" fill="rgb(150.1668922651,150.1668922651,120.039554823177)" rx="2" ry="2" />
<text  x="13.00" y="49.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (10,242 us, 0.01%)</title><rect x="76.6" y="103" width="0.2" height="15.0" fill="rgb(132.551847510103,92.7891092446388,132.551847510103)" rx="2" ry="2" />
<text  x="79.65" y="113.5" ></text>
</g>
<g >
<title>HybridProject (15,800 us, 0.02%)</title><rect x="76.9" y="167" width="0.3" height="15.0" fill="rgb(156.37381921217,145.532613959969,145.532613959969)" rx="2" ry="2" />
<text  x="79.95" y="177.5" ></text>
</g>
<g >
<title>SNESFunctionEval (79,302 us, 0.11%)</title><rect x="1188.7" y="119" width="1.3" height="15.0" fill="rgb(153.464042438679,153.464042438679,136.018051818214)" rx="2" ry="2" />
<text  x="1191.66" y="129.5" ></text>
</g>
</g>
</svg>
