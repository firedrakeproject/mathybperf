<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="299" onload="init(evt)" viewBox="0 0 1200 299" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:13px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:18px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 13 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (1 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="299.0" fill="url(#background)"  />
<text id="title" x="600.00" y="26" >Firedrake example</text>
<text id="details" x="10.00" y="281" > </text>
<text id="unzoom" x="10.00" y="26" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="26" >Search</text>
<text id="ignorecase" x="1174.00" y="26" >ic</text>
<text id="matched" x="1090.00" y="281" > </text>
<g id="frames">
<g >
<title>SCBackSub (10,596,658 us, 20.17%)</title><rect x="96.5" y="151" width="237.9" height="15.0" fill="rgb(127.641823443825,162.942028741703,127.641823443825)" rx="2" ry="2" />
<text  x="99.48" y="161.5" >SCBackSub</text>
</g>
<g >
<title>SNESSolve (48,698,202 us, 92.67%)</title><rect x="96.5" y="103" width="1093.5" height="15.0" fill="rgb(149.769743589339,159.339809183131,149.769743589339)" rx="2" ry="2" />
<text  x="99.48" y="113.5" >SNESSolve</text>
</g>
<g >
<title>firedrake.parloops.par_loop (8,196 us, 0.02%)</title><rect x="334.4" y="183" width="0.2" height="15.0" fill="rgb(154.625684477975,154.625684477975,141.647547854802)" rx="2" ry="2" />
<text  x="337.43" y="193.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (5,531 us, 0.01%)</title><rect x="1189.9" y="183" width="0.1" height="15.0" fill="rgb(155.966727838489,142.411580095084,142.411580095084)" rx="2" ry="2" />
<text  x="1192.88" y="193.5" ></text>
</g>
<g >
<title>firedrake.assemble.allocate_matrix (2,727,097 us, 5.19%)</title><rect x="1124.2" y="151" width="61.3" height="15.0" fill="rgb(154.422576237245,154.422576237245,140.663254072801)" rx="2" ry="2" />
<text  x="1127.23" y="161.5" >fired..</text>
</g>
<g >
<title>SCSolve (20,542,404 us, 39.09%)</title><rect x="411.7" y="151" width="461.3" height="15.0" fill="rgb(156.531230914748,146.73943701307,146.73943701307)" rx="2" ry="2" />
<text  x="414.72" y="161.5" >SCSolve</text>
</g>
<g >
<title>firedrake.assemble.assemble (3,434,132 us, 6.54%)</title><rect x="334.6" y="183" width="77.1" height="15.0" fill="rgb(132.497935387195,162.151498890457,132.497935387195)" rx="2" ry="2" />
<text  x="337.61" y="193.5" >firedrak..</text>
</g>
<g >
<title>firedrake.functionspace.VectorFunctionSpace (6,408 us, 0.01%)</title><rect x="95.5" y="71" width="0.1" height="15.0" fill="rgb(130.719058645431,130.719058645431,152.719817802342)" rx="2" ry="2" />
<text  x="98.46" y="81.5" ></text>
</g>
<g >
<title>ParLoopExecute (1,932,802 us, 3.68%)</title><rect x="291.0" y="199" width="43.4" height="15.0" fill="rgb(146.88600878477,159.809254383875,146.88600878477)" rx="2" ry="2" />
<text  x="294.02" y="209.5" >Par..</text>
</g>
<g >
<title>MatSolve (166,107 us, 0.32%)</title><rect x="413.1" y="199" width="3.8" height="15.0" fill="rgb(145.45200383709,160.042697049776,145.45200383709)" rx="2" ry="2" />
<text  x="416.13" y="209.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (6,408 us, 0.01%)</title><rect x="95.5" y="119" width="0.1" height="15.0" fill="rgb(145.757951093799,159.992891682405,145.757951093799)" rx="2" ry="2" />
<text  x="98.46" y="129.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (7,575 us, 0.01%)</title><rect x="873.3" y="167" width="0.2" height="15.0" fill="rgb(156.093126160088,143.380633894012,143.380633894012)" rx="2" ry="2" />
<text  x="876.32" y="177.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (6,408 us, 0.01%)</title><rect x="95.5" y="103" width="0.1" height="15.0" fill="rgb(105.163702672722,144.301700692928,144.301700692928)" rx="2" ry="2" />
<text  x="98.46" y="113.5" ></text>
</g>
<g >
<title>MatMult (62,578 us, 0.12%)</title><rect x="411.7" y="183" width="1.4" height="15.0" fill="rgb(153.110461324712,120.513536822795,120.513536822795)" rx="2" ry="2" />
<text  x="414.72" y="193.5" ></text>
</g>
<g >
<title>firedrake.functionspace.VectorFunctionSpace (6,429 us, 0.01%)</title><rect x="23.3" y="87" width="0.2" height="15.0" fill="rgb(150.692393776384,150.692393776384,122.586215993248)" rx="2" ry="2" />
<text  x="26.34" y="97.5" ></text>
</g>
<g >
<title>KSPSolve (34,581,390 us, 65.81%)</title><rect x="96.5" y="119" width="776.5" height="15.0" fill="rgb(132.785661848852,151.462949368221,151.462949368221)" rx="2" ry="2" />
<text  x="99.48" y="129.5" >KSPSolve</text>
</g>
<g >
<title>ParLoop_Cells_wrap_wrap_slate_loopy_knl_14 (1,932,802 us, 3.68%)</title><rect x="291.0" y="215" width="43.4" height="15.0" fill="rgb(118.580555556894,147.780144033269,147.780144033269)" rx="2" ry="2" />
<text  x="294.02" y="225.5" >Par..</text>
</g>
<g >
<title>PyOP2SolveCallable_getrf (767,721 us, 1.46%)</title><rect x="316.6" y="231" width="17.2" height="15.0" fill="rgb(155.011181487766,135.085724739537,135.085724739537)" rx="2" ry="2" />
<text  x="319.59" y="241.5" ></text>
</g>
<g >
<title>ParLoopExecute (10,935,053 us, 20.81%)</title><rect x="878.7" y="199" width="245.5" height="15.0" fill="rgb(142.140812924241,160.581728128612,142.140812924241)" rx="2" ry="2" />
<text  x="881.68" y="209.5" >ParLoopExecute</text>
</g>
<g >
<title>firedrake.assemble.assemble_form (8,480,295 us, 16.14%)</title><rect x="96.8" y="199" width="190.5" height="15.0" fill="rgb(152.824824887281,152.824824887281,132.920305222975)" rx="2" ry="2" />
<text  x="99.85" y="209.5" >firedrake.assemble.ass..</text>
</g>
<g >
<title>ParLoop_Cells_wrap_wrap_slate_loopy_knl_4 (3,353,785 us, 6.38%)</title><rect x="336.4" y="231" width="75.3" height="15.0" fill="rgb(153.272807402699,153.272807402699,135.091297413081)" rx="2" ry="2" />
<text  x="339.41" y="241.5" >ParLoop..</text>
</g>
<g >
<title>firedrake.assemble.assemble (11,166,185 us, 21.25%)</title><rect x="873.5" y="167" width="250.7" height="15.0" fill="rgb(139.456025078596,161.018786615112,139.456025078596)" rx="2" ry="2" />
<text  x="876.49" y="177.5" >firedrake.assemble.assemble</text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalProblem.__init__ (8,804 us, 0.02%)</title><rect x="95.8" y="87" width="0.2" height="15.0" fill="rgb(140.097825073359,160.914307546197,140.097825073359)" rx="2" ry="2" />
<text  x="98.84" y="97.5" ></text>
</g>
<g >
<title>ParLoopExecute (38,405 us, 0.07%)</title><rect x="22.5" y="103" width="0.8" height="15.0" fill="rgb(152.194850620461,113.49385475687,113.49385475687)" rx="2" ry="2" />
<text  x="25.48" y="113.5" ></text>
</g>
<g >
<title>firedrake.assemble.assemble_form (11,166,185 us, 21.25%)</title><rect x="873.5" y="183" width="250.7" height="15.0" fill="rgb(125.155184186225,149.484677381614,149.484677381614)" rx="2" ry="2" />
<text  x="876.49" y="193.5" >firedrake.assemble.assemble_form</text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.__init__ (12,712 us, 0.02%)</title><rect x="96.0" y="71" width="0.3" height="15.0" fill="rgb(154.065300917123,127.833973697944,127.833973697944)" rx="2" ry="2" />
<text  x="99.04" y="81.5" ></text>
</g>
<g >
<title>PyOP2InverseCallable_memcpy (41,534 us, 0.08%)</title><rect x="1123.3" y="231" width="0.9" height="15.0" fill="rgb(143.172220410257,143.172220410257,155.130107176179)" rx="2" ry="2" />
<text  x="1126.29" y="241.5" ></text>
</g>
<g >
<title>CreateExtMesh (83,241 us, 0.16%)</title><rect x="21.6" y="71" width="1.9" height="15.0" fill="rgb(154.268580939644,154.268580939644,139.916969169046)" rx="2" ry="2" />
<text  x="24.62" y="81.5" ></text>
</g>
<g >
<title>PyOP2SolveCallable_gerts (30,239 us, 0.06%)</title><rect x="315.9" y="231" width="0.7" height="15.0" fill="rgb(153.680443484479,124.88340004767,124.88340004767)" rx="2" ry="2" />
<text  x="318.91" y="241.5" ></text>
</g>
<g >
<title>PyOP2SolveCallable_getrf (1,575,695 us, 3.00%)</title><rect x="250.6" y="247" width="35.4" height="15.0" fill="rgb(152.029379361117,152.029379361117,129.065453826954)" rx="2" ry="2" />
<text  x="253.61" y="257.5" >Py..</text>
</g>
<g >
<title>HybridOperatorAssembly (11,166,185 us, 21.25%)</title><rect x="873.5" y="151" width="250.7" height="15.0" fill="rgb(145.092679416464,154.653657626491,154.653657626491)" rx="2" ry="2" />
<text  x="876.49" y="161.5" >HybridOperatorAssembly</text>
</g>
<g >
<title>PyOP2SolveCallable_getrf (1,337,067 us, 2.54%)</title><rect x="380.8" y="247" width="30.0" height="15.0" fill="rgb(112.450204238823,112.450204238823,149.183910497837)" rx="2" ry="2" />
<text  x="383.79" y="257.5" >P..</text>
</g>
<g >
<title>firedrake.extrusion_utils.make_extruded_coords (76,812 us, 0.15%)</title><rect x="21.6" y="87" width="1.7" height="15.0" fill="rgb(129.866725994217,129.866725994217,152.554850192429)" rx="2" ry="2" />
<text  x="24.62" y="97.5" ></text>
</g>
<g >
<title>KSPSolve (228,685 us, 0.44%)</title><rect x="411.7" y="167" width="5.2" height="15.0" fill="rgb(154.597488288736,131.91407688031,131.91407688031)" rx="2" ry="2" />
<text  x="414.72" y="177.5" ></text>
</g>
<g >
<title>PyOP2SolveCallable_memcpy (40,637 us, 0.08%)</title><rect x="410.8" y="247" width="0.9" height="15.0" fill="rgb(144.55422387778,160.18884727571,144.55422387778)" rx="2" ry="2" />
<text  x="413.81" y="257.5" ></text>
</g>
<g >
<title>PyOP2InverseCallable_memcpy (26,047 us, 0.05%)</title><rect x="248.6" y="247" width="0.5" height="15.0" fill="rgb(152.940288156059,119.208875863121,119.208875863121)" rx="2" ry="2" />
<text  x="251.56" y="257.5" ></text>
</g>
<g >
<title>ParLoop_Cells_wrap_wrap_slate_loopy_knl_7 (8,369,944 us, 15.93%)</title><rect x="99.3" y="231" width="188.0" height="15.0" fill="rgb(144.194531205699,144.194531205699,155.327973781748)" rx="2" ry="2" />
<text  x="102.33" y="241.5" >ParLoop_Cells_wrap_wra..</text>
</g>
<g >
<title>MatLUFactor (20,313,719 us, 38.66%)</title><rect x="416.9" y="183" width="456.1" height="15.0" fill="rgb(156.518687886839,146.643273799097,146.643273799097)" rx="2" ry="2" />
<text  x="419.86" y="193.5" >MatLUFactor</text>
</g>
<g >
<title>firedrake.variational_solver.LinearVariationalProblem.__init__ (19,292 us, 0.04%)</title><rect x="95.6" y="71" width="0.4" height="15.0" fill="rgb(150.123665085237,159.282194055892,150.123665085237)" rx="2" ry="2" />
<text  x="98.61" y="81.5" ></text>
</g>
<g >
<title>ParLoop_Cells_wrap_form1_cell_integral_otherwise (34,317 us, 0.07%)</title><rect x="1188.3" y="183" width="0.8" height="15.0" fill="rgb(134.689352598336,161.794756553759,134.689352598336)" rx="2" ry="2" />
<text  x="1191.32" y="193.5" ></text>
</g>
<g >
<title>PCSetUp (20,313,719 us, 38.66%)</title><rect x="416.9" y="167" width="456.1" height="15.0" fill="rgb(146.233123759089,146.233123759089,155.722540082404)" rx="2" ry="2" />
<text  x="419.86" y="177.5" >PCSetUp</text>
</g>
<g >
<title>firedrake.ufl_expr.action (10,488 us, 0.02%)</title><rect x="95.6" y="87" width="0.2" height="15.0" fill="rgb(151.272478952228,151.272478952228,125.397397999259)" rx="2" ry="2" />
<text  x="98.61" y="97.5" ></text>
</g>
<g >
<title>PyOP2SolveCallable_gerts (42,873 us, 0.08%)</title><rect x="379.8" y="247" width="1.0" height="15.0" fill="rgb(126.814600948114,163.076692868912,126.814600948114)" rx="2" ry="2" />
<text  x="382.82" y="257.5" ></text>
</g>
<g >
<title>firedrake.parloops.par_loop (16,488 us, 0.03%)</title><rect x="96.5" y="183" width="0.3" height="15.0" fill="rgb(148.243294658042,148.243294658042,110.717504881279)" rx="2" ry="2" />
<text  x="99.48" y="193.5" ></text>
</g>
<g >
<title>MatAssemblyEnd (12,134 us, 0.02%)</title><rect x="1176.7" y="167" width="0.2" height="15.0" fill="rgb(154.992293873064,134.940919693488,134.940919693488)" rx="2" ry="2" />
<text  x="1179.66" y="177.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (7,575 us, 0.01%)</title><rect x="873.3" y="199" width="0.2" height="15.0" fill="rgb(124.534699197642,163.4478396655,124.534699197642)" rx="2" ry="2" />
<text  x="876.32" y="209.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (6,828 us, 0.01%)</title><rect x="1185.5" y="183" width="0.1" height="15.0" fill="rgb(121.782759462266,148.610345045773,148.610345045773)" rx="2" ry="2" />
<text  x="1188.46" y="193.5" ></text>
</g>
<g >
<title>PyOP2InverseCallable_getrf (759,852 us, 1.45%)</title><rect x="181.1" y="247" width="17.1" height="15.0" fill="rgb(144.518161892712,144.518161892712,155.390611979235)" rx="2" ry="2" />
<text  x="184.13" y="257.5" ></text>
</g>
<g >
<title>PyOP2InverseCallable_getrf (1,344,568 us, 2.56%)</title><rect x="997.9" y="231" width="30.2" height="15.0" fill="rgb(123.956899307454,149.174010931562,149.174010931562)" rx="2" ry="2" />
<text  x="1000.95" y="241.5" >P..</text>
</g>
<g >
<title>firedrake.assemble.assemble (2,099,875 us, 4.00%)</title><rect x="287.3" y="167" width="47.1" height="15.0" fill="rgb(149.629391071118,159.362657267492,149.629391071118)" rx="2" ry="2" />
<text  x="290.27" y="177.5" >fire..</text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (6,828 us, 0.01%)</title><rect x="1185.5" y="151" width="0.1" height="15.0" fill="rgb(154.102229169937,128.117090302854,128.117090302854)" rx="2" ry="2" />
<text  x="1188.46" y="161.5" ></text>
</g>
<g >
<title>PCSetUp (14,015,105 us, 26.67%)</title><rect x="873.0" y="119" width="314.7" height="15.0" fill="rgb(104.989519680227,144.256542139318,144.256542139318)" rx="2" ry="2" />
<text  x="876.01" y="129.5" >PCSetUp</text>
</g>
<g >
<title>firedrake.matrix_free.operators.ImplicitMatrixContext.__init__ (6,812 us, 0.01%)</title><rect x="96.2" y="103" width="0.1" height="15.0" fill="rgb(142.409516289327,160.537985720342,142.409516289327)" rx="2" ry="2" />
<text  x="99.17" y="113.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (16,045 us, 0.03%)</title><rect x="23.5" y="87" width="0.3" height="15.0" fill="rgb(153.442521418331,123.05933087387,123.05933087387)" rx="2" ry="2" />
<text  x="26.49" y="97.5" ></text>
</g>
<g >
<title>ParLoop_Cells_wrap_form0_cell_integral_otherwise (26,710 us, 0.05%)</title><rect x="1187.7" y="183" width="0.6" height="15.0" fill="rgb(118.686758457782,118.686758457782,150.390985507958)" rx="2" ry="2" />
<text  x="1190.72" y="193.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (6,429 us, 0.01%)</title><rect x="23.3" y="103" width="0.2" height="15.0" fill="rgb(147.700806310125,147.700806310125,108.08852288753)" rx="2" ry="2" />
<text  x="26.34" y="113.5" ></text>
</g>
<g >
<title>SNESFunctionEval (101,707 us, 0.19%)</title><rect x="1187.7" y="119" width="2.3" height="15.0" fill="rgb(145.576366716635,160.02245192985,145.576366716635)" rx="2" ry="2" />
<text  x="1190.72" y="129.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (6,408 us, 0.01%)</title><rect x="95.5" y="87" width="0.1" height="15.0" fill="rgb(147.421541385831,147.421541385831,155.952556397258)" rx="2" ry="2" />
<text  x="98.46" y="97.5" ></text>
</g>
<g >
<title>firedrake.interpolation.make_interpolator (86,570 us, 0.16%)</title><rect x="1185.6" y="151" width="2.0" height="15.0" fill="rgb(156.53255724961,146.749605580345,146.749605580345)" rx="2" ry="2" />
<text  x="1188.62" y="161.5" ></text>
</g>
<g >
<title>firedrake.parloops.par_loop (6,909 us, 0.01%)</title><rect x="1187.6" y="151" width="0.1" height="15.0" fill="rgb(132.296604034187,162.184273761877,132.296604034187)" rx="2" ry="2" />
<text  x="1190.56" y="161.5" ></text>
</g>
<g >
<title>PCApply (166,107 us, 0.32%)</title><rect x="413.1" y="183" width="3.8" height="15.0" fill="rgb(154.319682819755,154.319682819755,140.164616741891)" rx="2" ry="2" />
<text  x="416.13" y="193.5" ></text>
</g>
<g >
<title>HybridProject (16,488 us, 0.03%)</title><rect x="96.5" y="167" width="0.3" height="15.0" fill="rgb(155.536470978945,139.112944171909,139.112944171909)" rx="2" ry="2" />
<text  x="99.48" y="177.5" ></text>
</g>
<g >
<title>PyOP2InverseCallable_getri (2,243,241 us, 4.27%)</title><rect x="198.2" y="247" width="50.4" height="15.0" fill="rgb(126.053993892566,163.20051262214,126.053993892566)" rx="2" ry="2" />
<text  x="201.19" y="257.5" >PyOP..</text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (16,045 us, 0.03%)</title><rect x="23.5" y="103" width="0.3" height="15.0" fill="rgb(140.973142200317,160.771814060414,140.973142200317)" rx="2" ry="2" />
<text  x="26.49" y="113.5" ></text>
</g>
<g >
<title>VecSet (5,900 us, 0.01%)</title><rect x="96.0" y="87" width="0.2" height="15.0" fill="rgb(146.476997878524,159.875837554659,146.476997878524)" rx="2" ry="2" />
<text  x="99.04" y="97.5" ></text>
</g>
<g >
<title>RecoverFirstElim (8,480,295 us, 16.14%)</title><rect x="96.8" y="167" width="190.5" height="15.0" fill="rgb(128.223968075888,162.847261010902,128.223968075888)" rx="2" ry="2" />
<text  x="99.85" y="177.5" >RecoverFirstElim</text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (7,575 us, 0.01%)</title><rect x="873.3" y="183" width="0.2" height="15.0" fill="rgb(141.821759231537,160.633667101843,141.821759231537)" rx="2" ry="2" />
<text  x="876.32" y="193.5" ></text>
</g>
<g >
<title>PCApply (34,581,390 us, 65.81%)</title><rect x="96.5" y="135" width="776.5" height="15.0" fill="rgb(152.165312895855,152.165312895855,129.724208649144)" rx="2" ry="2" />
<text  x="99.48" y="145.5" >PCApply</text>
</g>
<g >
<title>PyOP2SolveCallable_memcpy (26,766 us, 0.05%)</title><rect x="333.8" y="231" width="0.6" height="15.0" fill="rgb(150.322172751208,150.322172751208,120.792067948161)" rx="2" ry="2" />
<text  x="336.82" y="241.5" ></text>
</g>
<g >
<title>firedrake.__init__ (3,189,269 us, 6.07%)</title><rect x="23.8" y="71" width="71.7" height="15.0" fill="rgb(154.189434108202,128.785661496217,128.785661496217)" rx="2" ry="2" />
<text  x="26.85" y="81.5" >firedra..</text>
</g>
<g >
<title>SCForwardElim (3,442,328 us, 6.55%)</title><rect x="334.4" y="151" width="77.3" height="15.0" fill="rgb(114.209722866335,114.209722866335,149.524462490258)" rx="2" ry="2" />
<text  x="337.43" y="161.5" >SCForwar..</text>
</g>
<g >
<title>firedrake.assemble.assemble (8,480,295 us, 16.14%)</title><rect x="96.8" y="183" width="190.5" height="15.0" fill="rgb(153.650534502796,153.650534502796,136.921821052012)" rx="2" ry="2" />
<text  x="99.85" y="193.5" >firedrake.assemble.ass..</text>
</g>
<g >
<title>firedrake (52,549,307 us, 100.00%)</title><rect x="10.0" y="55" width="1180.0" height="15.0" fill="rgb(128.663253490707,128.663253490707,152.321920030459)" rx="2" ry="2" />
<text  x="13.00" y="65.5" >firedrake</text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (8,804 us, 0.02%)</title><rect x="95.8" y="103" width="0.2" height="15.0" fill="rgb(133.955891216939,133.955891216939,153.346301525859)" rx="2" ry="2" />
<text  x="98.84" y="113.5" ></text>
</g>
<g >
<title>firedrake.assemble.assemble_form (3,434,132 us, 6.54%)</title><rect x="334.6" y="199" width="77.1" height="15.0" fill="rgb(155.428367300634,155.428367300634,145.537472303075)" rx="2" ry="2" />
<text  x="337.61" y="209.5" >firedrak..</text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (6,408 us, 0.01%)</title><rect x="95.5" y="135" width="0.1" height="15.0" fill="rgb(112.035259882506,112.035259882506,149.103598686937)" rx="2" ry="2" />
<text  x="98.46" y="145.5" ></text>
</g>
<g >
<title>CreateSparsity (2,334,867 us, 4.44%)</title><rect x="1124.2" y="167" width="52.5" height="15.0" fill="rgb(146.205958586548,127.777768878029,146.205958586548)" rx="2" ry="2" />
<text  x="1127.23" y="177.5" >Crea..</text>
</g>
<g >
<title>perfsolve (48,704,964 us, 92.68%)</title><rect x="96.3" y="71" width="1093.7" height="15.0" fill="rgb(152.90782763328,118.960011855149,118.960011855149)" rx="2" ry="2" />
<text  x="99.33" y="81.5" >perfsolve</text>
</g>
<g >
<title>PyOP2SolveCallable_memcpy (56,822 us, 0.11%)</title><rect x="286.0" y="247" width="1.3" height="15.0" fill="rgb(110.37971151917,145.653999282748,145.653999282748)" rx="2" ry="2" />
<text  x="289.00" y="257.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (16,045 us, 0.03%)</title><rect x="23.5" y="119" width="0.3" height="15.0" fill="rgb(154.62218967626,132.10345418466,132.10345418466)" rx="2" ry="2" />
<text  x="26.49" y="129.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (7,575 us, 0.01%)</title><rect x="873.3" y="151" width="0.2" height="15.0" fill="rgb(151.451661360275,151.451661360275,126.265743515177)" rx="2" ry="2" />
<text  x="876.32" y="161.5" ></text>
</g>
<g >
<title>PyOP2SolveCallable_gerts (65,306 us, 0.12%)</title><rect x="249.1" y="247" width="1.5" height="15.0" fill="rgb(111.166937590312,145.858094930822,145.858094930822)" rx="2" ry="2" />
<text  x="252.15" y="257.5" ></text>
</g>
<g >
<title>all (52,549,307 us, 100%)</title><rect x="10.0" y="39" width="1180.0" height="15.0" fill="rgb(148.531095250809,148.531095250809,112.112230830845)" rx="2" ry="2" />
<text  x="13.00" y="49.5" ></text>
</g>
<g >
<title>firedrake.assemble.assemble (101,707 us, 0.19%)</title><rect x="1187.7" y="135" width="2.3" height="15.0" fill="rgb(144.924819154309,160.128517812089,144.924819154309)" rx="2" ry="2" />
<text  x="1190.72" y="145.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (6,828 us, 0.01%)</title><rect x="1185.5" y="167" width="0.1" height="15.0" fill="rgb(151.47174148145,141.271337546217,151.47174148145)" rx="2" ry="2" />
<text  x="1188.46" y="177.5" ></text>
</g>
<g >
<title>ParLoopExecute (3,353,785 us, 6.38%)</title><rect x="336.4" y="215" width="75.3" height="15.0" fill="rgb(156.60141762482,147.277535123617,147.277535123617)" rx="2" ry="2" />
<text  x="339.41" y="225.5" >ParLoop..</text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (6,429 us, 0.01%)</title><rect x="23.3" y="151" width="0.2" height="15.0" fill="rgb(146.425264899726,154.999142751781,154.999142751781)" rx="2" ry="2" />
<text  x="26.34" y="161.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (16,045 us, 0.03%)</title><rect x="23.5" y="71" width="0.3" height="15.0" fill="rgb(131.186926071189,131.186926071189,152.810372787972)" rx="2" ry="2" />
<text  x="26.49" y="81.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (6,429 us, 0.01%)</title><rect x="23.3" y="135" width="0.2" height="15.0" fill="rgb(109.274272146944,145.367403889948,145.367403889948)" rx="2" ry="2" />
<text  x="26.34" y="145.5" ></text>
</g>
<g >
<title>ParLoop_Cells_wrap_wrap_slate_loopy_knl_0 (10,935,053 us, 20.81%)</title><rect x="878.7" y="215" width="245.5" height="15.0" fill="rgb(153.802552643793,153.802552643793,137.658524350691)" rx="2" ry="2" />
<text  x="881.68" y="225.5" >ParLoop_Cells_wrap_wrap_slate_..</text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (6,429 us, 0.01%)</title><rect x="23.3" y="119" width="0.2" height="15.0" fill="rgb(154.473817780851,130.965936319855,130.965936319855)" rx="2" ry="2" />
<text  x="26.34" y="129.5" ></text>
</g>
<g >
<title>ParLoopExecute (61,027 us, 0.12%)</title><rect x="1187.7" y="167" width="1.4" height="15.0" fill="rgb(136.54676654744,161.492386841114,136.54676654744)" rx="2" ry="2" />
<text  x="1190.72" y="177.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.solve (48,704,964 us, 92.68%)</title><rect x="96.3" y="87" width="1093.7" height="15.0" fill="rgb(154.406381838509,154.406381838509,140.584773525082)" rx="2" ry="2" />
<text  x="99.33" y="97.5" >firedrake.variational_solver.NonlinearVariationalSolver.solve</text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (40,680 us, 0.08%)</title><rect x="1189.1" y="167" width="0.9" height="15.0" fill="rgb(156.35749327019,145.407448404793,145.407448404793)" rx="2" ry="2" />
<text  x="1192.09" y="177.5" ></text>
</g>
<g >
<title>pyop2.parloop.JITModule.compile (38,405 us, 0.07%)</title><rect x="22.5" y="119" width="0.8" height="15.0" fill="rgb(152.234985405142,152.234985405142,130.061852347998)" rx="2" ry="2" />
<text  x="25.48" y="129.5" ></text>
</g>
<g >
<title>HybridInit (14,015,105 us, 26.67%)</title><rect x="873.0" y="135" width="314.7" height="15.0" fill="rgb(144.873390519099,160.136889915496,144.873390519099)" rx="2" ry="2" />
<text  x="876.01" y="145.5" >HybridInit</text>
</g>
<g >
<title>PyOP2InverseCallable_getri (4,237,477 us, 8.06%)</title><rect x="1028.1" y="231" width="95.2" height="15.0" fill="rgb(111.656059731615,145.984904374863,145.984904374863)" rx="2" ry="2" />
<text  x="1031.14" y="241.5" >PyOP2Inver..</text>
</g>
<g >
<title>HybridRHS (3,434,132 us, 6.54%)</title><rect x="334.6" y="167" width="77.1" height="15.0" fill="rgb(137.82187486865,106.293554350917,137.82187486865)" rx="2" ry="2" />
<text  x="337.61" y="177.5" >HybridRHS</text>
</g>
<g >
<title>ParLoopExecute (8,369,944 us, 15.93%)</title><rect x="99.3" y="215" width="188.0" height="15.0" fill="rgb(149.793686510279,159.335911498327,149.793686510279)" rx="2" ry="2" />
<text  x="102.33" y="225.5" >ParLoopExecute</text>
</g>
<g >
<title>HybridBreak (8,196 us, 0.02%)</title><rect x="334.4" y="167" width="0.2" height="15.0" fill="rgb(132.253614509135,162.191272056653,132.253614509135)" rx="2" ry="2" />
<text  x="337.43" y="177.5" ></text>
</g>
<g >
<title>firedrake.assemble.assemble_form (2,099,875 us, 4.00%)</title><rect x="287.3" y="183" width="47.1" height="15.0" fill="rgb(145.909220469758,127.017377453755,145.909220469758)" rx="2" ry="2" />
<text  x="290.27" y="193.5" >fire..</text>
</g>
<g >
<title>MatZeroInitial (380,096 us, 0.72%)</title><rect x="1176.9" y="167" width="8.6" height="15.0" fill="rgb(105.522976566822,144.394845776583,144.394845776583)" rx="2" ry="2" />
<text  x="1179.93" y="177.5" ></text>
</g>
<g >
<title>ParLoopExecute (5,685 us, 0.01%)</title><rect x="96.7" y="199" width="0.1" height="15.0" fill="rgb(153.727686927487,125.245599777401,125.245599777401)" rx="2" ry="2" />
<text  x="99.72" y="209.5" ></text>
</g>
<g >
<title>firedrake.assemble.allocate_matrix (6,812 us, 0.01%)</title><rect x="96.2" y="87" width="0.1" height="15.0" fill="rgb(142.000080288697,160.604638092538,142.000080288697)" rx="2" ry="2" />
<text  x="99.17" y="97.5" ></text>
</g>
<g >
<title>firedrake.assemble.assemble_form (101,707 us, 0.19%)</title><rect x="1187.7" y="151" width="2.3" height="15.0" fill="rgb(127.933875825812,162.894485330682,127.933875825812)" rx="2" ry="2" />
<text  x="1190.72" y="161.5" ></text>
</g>
</g>
</svg>
