<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="299" onload="init(evt)" viewBox="0 0 1200 299" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:13px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:18px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 13 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (1 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="299.0" fill="url(#background)"  />
<text id="title" x="600.00" y="26" >Firedrake example</text>
<text id="details" x="10.00" y="281" > </text>
<text id="unzoom" x="10.00" y="26" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="26" >Search</text>
<text id="ignorecase" x="1174.00" y="26" >ic</text>
<text id="matched" x="1090.00" y="281" > </text>
<g id="frames">
<g >
<title>firedrake.parloops.par_loop (9,959 us, 0.02%)</title><rect x="314.9" y="183" width="0.2" height="15.0" fill="rgb(111.327542280926,145.899733183944,145.899733183944)" rx="2" ry="2" />
<text  x="317.88" y="193.5" ></text>
</g>
<g >
<title>HybridRHS (4,128,986 us, 6.84%)</title><rect x="315.1" y="167" width="80.7" height="15.0" fill="rgb(142.313291811523,160.553650170217,142.313291811523)" rx="2" ry="2" />
<text  x="318.08" y="177.5" >HybridRHS</text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (43,000 us, 0.07%)</title><rect x="1189.2" y="167" width="0.8" height="15.0" fill="rgb(127.488087350258,162.967055547632,127.488087350258)" rx="2" ry="2" />
<text  x="1192.16" y="177.5" ></text>
</g>
<g >
<title>pyop2.parloop.JITModule.compile (45,949 us, 0.08%)</title><rect x="23.3" y="119" width="0.9" height="15.0" fill="rgb(151.941765200304,151.941765200304,128.640862124551)" rx="2" ry="2" />
<text  x="26.28" y="129.5" ></text>
</g>
<g >
<title>ParLoopExecute (45,949 us, 0.08%)</title><rect x="23.3" y="103" width="0.9" height="15.0" fill="rgb(140.281609480364,153.406343198613,153.406343198613)" rx="2" ry="2" />
<text  x="26.28" y="113.5" ></text>
</g>
<g >
<title>PyOP2SolveCallable_memcpy (62,322 us, 0.10%)</title><rect x="394.6" y="247" width="1.2" height="15.0" fill="rgb(137.382728005749,161.356300092087,137.382728005749)" rx="2" ry="2" />
<text  x="397.62" y="257.5" ></text>
</g>
<g >
<title>firedrake.assemble.assemble_form (13,968,739 us, 23.15%)</title><rect x="858.0" y="183" width="273.2" height="15.0" fill="rgb(147.69479566852,147.69479566852,108.059394393597)" rx="2" ry="2" />
<text  x="860.97" y="193.5" >firedrake.assemble.assemble_form</text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (20,062 us, 0.03%)</title><rect x="24.3" y="103" width="0.4" height="15.0" fill="rgb(129.744177851315,162.599785000949,129.744177851315)" rx="2" ry="2" />
<text  x="27.34" y="113.5" ></text>
</g>
<g >
<title>ParLoop_Cells_wrap_wrap_slate_loopy_knl_7 (9,406,132 us, 15.59%)</title><rect x="82.2" y="231" width="183.9" height="15.0" fill="rgb(141.071759610771,160.755760063363,141.071759610771)" rx="2" ry="2" />
<text  x="85.17" y="241.5" >ParLoop_Cells_wrap_wr..</text>
</g>
<g >
<title>ParLoopExecute (13,758,185 us, 22.80%)</title><rect x="862.1" y="199" width="269.1" height="15.0" fill="rgb(150.531855807845,150.531855807845,121.808224299556)" rx="2" ry="2" />
<text  x="865.08" y="209.5" >ParLoopExecute</text>
</g>
<g >
<title>SCForwardElim (4,138,945 us, 6.86%)</title><rect x="314.9" y="151" width="80.9" height="15.0" fill="rgb(155.160856506194,155.160856506194,144.241073837711)" rx="2" ry="2" />
<text  x="317.88" y="161.5" >SCForwar..</text>
</g>
<g >
<title>PCSetUp (23,381,837 us, 38.76%)</title><rect x="400.1" y="167" width="457.3" height="15.0" fill="rgb(134.550883992826,134.550883992826,153.461461417966)" rx="2" ry="2" />
<text  x="403.06" y="177.5" >PCSetUp</text>
</g>
<g >
<title>SCSolve (23,597,788 us, 39.11%)</title><rect x="395.8" y="151" width="461.6" height="15.0" fill="rgb(123.475370921197,149.049170238829,149.049170238829)" rx="2" ry="2" />
<text  x="398.84" y="161.5" >SCSolve</text>
</g>
<g >
<title>perfsolve (56,805,160 us, 94.15%)</title><rect x="79.0" y="71" width="1111.0" height="15.0" fill="rgb(151.10509646351,151.10509646351,124.586236707777)" rx="2" ry="2" />
<text  x="81.97" y="81.5" >perfsolve</text>
</g>
<g >
<title>PyOP2SolveCallable_gerts (82,910 us, 0.14%)</title><rect x="228.1" y="247" width="1.6" height="15.0" fill="rgb(125.171166201031,125.171166201031,151.646032167941)" rx="2" ry="2" />
<text  x="231.06" y="257.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (11,445 us, 0.02%)</title><rect x="857.7" y="183" width="0.3" height="15.0" fill="rgb(148.048535130722,148.048535130722,109.773670248882)" rx="2" ry="2" />
<text  x="860.74" y="193.5" ></text>
</g>
<g >
<title>MatZeroInitial (418,917 us, 0.69%)</title><rect x="1177.3" y="167" width="8.2" height="15.0" fill="rgb(147.821287334433,159.656999736255,147.821287334433)" rx="2" ry="2" />
<text  x="1180.26" y="177.5" ></text>
</g>
<g >
<title>SCBackSub (12,050,963 us, 19.97%)</title><rect x="79.2" y="151" width="235.7" height="15.0" fill="rgb(156.784062763426,148.677814519598,148.677814519598)" rx="2" ry="2" />
<text  x="82.19" y="161.5" >SCBackSub</text>
</g>
<g >
<title>MatAssemblyEnd (13,288 us, 0.02%)</title><rect x="1177.0" y="167" width="0.3" height="15.0" fill="rgb(137.076611895698,104.383817982727,137.076611895698)" rx="2" ry="2" />
<text  x="1180.00" y="177.5" ></text>
</g>
<g >
<title>PyOP2SolveCallable_memcpy (91,127 us, 0.15%)</title><rect x="264.4" y="247" width="1.7" height="15.0" fill="rgb(127.636991463077,150.128108897835,150.128108897835)" rx="2" ry="2" />
<text  x="267.36" y="257.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (6,237 us, 0.01%)</title><rect x="1185.5" y="151" width="0.1" height="15.0" fill="rgb(142.694698410193,154.031958847087,154.031958847087)" rx="2" ry="2" />
<text  x="1188.45" y="161.5" ></text>
</g>
<g >
<title>firedrake.assemble.assemble_form (4,128,986 us, 6.84%)</title><rect x="315.1" y="199" width="80.7" height="15.0" fill="rgb(144.450017190757,123.278169051314,144.450017190757)" rx="2" ry="2" />
<text  x="318.08" y="209.5" >firedrak..</text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (6,237 us, 0.01%)</title><rect x="1185.5" y="183" width="0.1" height="15.0" fill="rgb(148.757955456982,148.757955456982,113.21163029153)" rx="2" ry="2" />
<text  x="1188.45" y="193.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (7,238 us, 0.01%)</title><rect x="78.0" y="87" width="0.1" height="15.0" fill="rgb(152.850571905683,152.850571905683,133.045079235231)" rx="2" ry="2" />
<text  x="80.99" y="97.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (6,902 us, 0.01%)</title><rect x="1189.9" y="183" width="0.1" height="15.0" fill="rgb(117.503428990419,147.500888997516,147.500888997516)" rx="2" ry="2" />
<text  x="1192.87" y="193.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (7,238 us, 0.01%)</title><rect x="78.0" y="103" width="0.1" height="15.0" fill="rgb(148.398507589599,159.563033648205,148.398507589599)" rx="2" ry="2" />
<text  x="80.99" y="113.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (7,238 us, 0.01%)</title><rect x="78.0" y="119" width="0.1" height="15.0" fill="rgb(154.166755001807,154.166755001807,139.423505008756)" rx="2" ry="2" />
<text  x="80.99" y="129.5" ></text>
</g>
<g >
<title>SNESSolve (56,794,377 us, 94.14%)</title><rect x="79.2" y="103" width="1110.8" height="15.0" fill="rgb(153.450657797964,123.121709784388,123.121709784388)" rx="2" ry="2" />
<text  x="82.19" y="113.5" >SNESSolve</text>
</g>
<g >
<title>firedrake.assemble.assemble (13,968,739 us, 23.15%)</title><rect x="858.0" y="167" width="273.2" height="15.0" fill="rgb(144.119785255405,122.431949716975,144.119785255405)" rx="2" ry="2" />
<text  x="860.97" y="177.5" >firedrake.assemble.assemble</text>
</g>
<g >
<title>firedrake.__init__ (2,722,910 us, 4.51%)</title><rect x="24.7" y="71" width="53.3" height="15.0" fill="rgb(142.232462935487,160.566808359339,142.232462935487)" rx="2" ry="2" />
<text  x="27.73" y="81.5" >fire..</text>
</g>
<g >
<title>VecSet (6,823 us, 0.01%)</title><rect x="78.7" y="87" width="0.1" height="15.0" fill="rgb(154.015310070886,154.015310070886,138.689579574296)" rx="2" ry="2" />
<text  x="81.66" y="97.5" ></text>
</g>
<g >
<title>firedrake.extrusion_utils.make_extruded_coords (86,889 us, 0.14%)</title><rect x="22.5" y="87" width="1.7" height="15.0" fill="rgb(143.56390246742,143.56390246742,155.205916606597)" rx="2" ry="2" />
<text  x="25.48" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (11,445 us, 0.02%)</title><rect x="857.7" y="167" width="0.3" height="15.0" fill="rgb(137.582409744925,152.70655067461,152.70655067461)" rx="2" ry="2" />
<text  x="860.74" y="177.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (8,148 us, 0.01%)</title><rect x="24.2" y="151" width="0.1" height="15.0" fill="rgb(125.743701085554,163.251025404677,125.743701085554)" rx="2" ry="2" />
<text  x="27.18" y="161.5" ></text>
</g>
<g >
<title>firedrake.assemble.assemble_form (9,546,319 us, 15.82%)</title><rect x="79.4" y="199" width="186.7" height="15.0" fill="rgb(149.050816071313,149.050816071313,114.630877884056)" rx="2" ry="2" />
<text  x="82.43" y="209.5" >firedrake.assemble.ass..</text>
</g>
<g >
<title>KSPSolve (215,951 us, 0.36%)</title><rect x="395.8" y="167" width="4.3" height="15.0" fill="rgb(149.556353129437,136.363154894183,149.556353129437)" rx="2" ry="2" />
<text  x="398.84" y="177.5" ></text>
</g>
<g >
<title>ParLoop_Cells_wrap_wrap_slate_loopy_knl_4 (4,037,684 us, 6.69%)</title><rect x="316.9" y="231" width="78.9" height="15.0" fill="rgb(148.388034590655,159.56473855501,148.388034590655)" rx="2" ry="2" />
<text  x="319.87" y="241.5" >ParLoop_..</text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (13,397 us, 0.02%)</title><rect x="78.4" y="103" width="0.3" height="15.0" fill="rgb(152.459233663813,152.459233663813,131.148593909249)" rx="2" ry="2" />
<text  x="81.40" y="113.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.solve (56,805,160 us, 94.15%)</title><rect x="79.0" y="87" width="1111.0" height="15.0" fill="rgb(132.37424563658,151.35628590578,151.35628590578)" rx="2" ry="2" />
<text  x="81.97" y="97.5" >firedrake.variational_solver.NonlinearVariationalSolver.solve</text>
</g>
<g >
<title>firedrake.variational_solver.LinearVariationalProblem.__init__ (27,231 us, 0.05%)</title><rect x="78.1" y="71" width="0.6" height="15.0" fill="rgb(156.575474200494,147.078635537118,147.078635537118)" rx="2" ry="2" />
<text  x="81.13" y="81.5" ></text>
</g>
<g >
<title>PyOP2SolveCallable_getrf (1,772,889 us, 2.94%)</title><rect x="229.7" y="247" width="34.7" height="15.0" fill="rgb(144.55390196806,144.55390196806,155.397529413173)" rx="2" ry="2" />
<text  x="232.68" y="257.5" >Py..</text>
</g>
<g >
<title>HybridBreak (9,959 us, 0.02%)</title><rect x="314.9" y="167" width="0.2" height="15.0" fill="rgb(155.965274098526,142.400434755369,142.400434755369)" rx="2" ry="2" />
<text  x="317.88" y="177.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (7,238 us, 0.01%)</title><rect x="78.0" y="135" width="0.1" height="15.0" fill="rgb(147.284609377962,159.744365915216,147.284609377962)" rx="2" ry="2" />
<text  x="80.99" y="145.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (8,148 us, 0.01%)</title><rect x="24.2" y="135" width="0.1" height="15.0" fill="rgb(148.703944234825,148.703944234825,112.949883599536)" rx="2" ry="2" />
<text  x="27.18" y="145.5" ></text>
</g>
<g >
<title>MatLUFactor (23,381,837 us, 38.76%)</title><rect x="400.1" y="183" width="457.3" height="15.0" fill="rgb(137.296280556828,161.370372932609,137.296280556828)" rx="2" ry="2" />
<text  x="403.06" y="193.5" >MatLUFactor</text>
</g>
<g >
<title>MatSolve (215,951 us, 0.36%)</title><rect x="395.8" y="199" width="4.3" height="15.0" fill="rgb(131.300203928004,131.300203928004,152.832297534452)" rx="2" ry="2" />
<text  x="398.84" y="209.5" ></text>
</g>
<g >
<title>ParLoop_Cells_wrap_wrap_slate_loopy_knl_0 (13,758,185 us, 22.80%)</title><rect x="862.1" y="215" width="269.1" height="15.0" fill="rgb(148.87928013121,148.87928013121,113.799588328174)" rx="2" ry="2" />
<text  x="865.08" y="225.5" >ParLoop_Cells_wrap_wrap_slate_loo..</text>
</g>
<g >
<title>CreateExtMesh (95,037 us, 0.16%)</title><rect x="22.5" y="71" width="1.8" height="15.0" fill="rgb(153.952606732108,126.969984946158,126.969984946158)" rx="2" ry="2" />
<text  x="25.48" y="81.5" ></text>
</g>
<g >
<title>PyOP2SolveCallable_gerts (61,785 us, 0.10%)</title><rect x="362.3" y="247" width="1.2" height="15.0" fill="rgb(106.646655780292,144.686170017113,144.686170017113)" rx="2" ry="2" />
<text  x="365.29" y="257.5" ></text>
</g>
<g >
<title>PyOP2SolveCallable_getrf (1,590,937 us, 2.64%)</title><rect x="363.5" y="247" width="31.1" height="15.0" fill="rgb(118.320705088912,118.320705088912,150.320136468822)" rx="2" ry="2" />
<text  x="366.50" y="257.5" >Py..</text>
</g>
<g >
<title>ParLoop_Cells_wrap_form0_cell_integral_otherwise (33,592 us, 0.06%)</title><rect x="1187.8" y="183" width="0.7" height="15.0" fill="rgb(147.609521148097,147.609521148097,155.988939577051)" rx="2" ry="2" />
<text  x="1190.81" y="193.5" ></text>
</g>
<g >
<title>ParLoop_Cells_wrap_wrap_slate_loopy_knl_14 (2,194,203 us, 3.64%)</title><rect x="272.0" y="215" width="42.9" height="15.0" fill="rgb(153.872860195992,126.358594835936,126.358594835936)" rx="2" ry="2" />
<text  x="274.97" y="225.5" >Par..</text>
</g>
<g >
<title>KSPSolve (39,787,696 us, 65.95%)</title><rect x="79.2" y="119" width="778.2" height="15.0" fill="rgb(134.496425937899,97.772091465867,134.496425937899)" rx="2" ry="2" />
<text  x="82.19" y="129.5" >KSPSolve</text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalProblem.__init__ (13,397 us, 0.02%)</title><rect x="78.4" y="87" width="0.3" height="15.0" fill="rgb(154.669105816188,132.463144590773,132.463144590773)" rx="2" ry="2" />
<text  x="81.40" y="97.5" ></text>
</g>
<g >
<title>all (60,331,735 us, 100%)</title><rect x="10.0" y="39" width="1180.0" height="15.0" fill="rgb(129.80520518797,162.589850318237,129.80520518797)" rx="2" ry="2" />
<text  x="13.00" y="49.5" ></text>
</g>
<g >
<title>firedrake (60,331,735 us, 100.00%)</title><rect x="10.0" y="55" width="1180.0" height="15.0" fill="rgb(126.553174933257,149.847119427141,149.847119427141)" rx="2" ry="2" />
<text  x="13.00" y="65.5" >firedrake</text>
</g>
<g >
<title>CreateFunctionSpace (11,445 us, 0.02%)</title><rect x="857.7" y="151" width="0.3" height="15.0" fill="rgb(133.490385860813,161.989937185449,133.490385860813)" rx="2" ry="2" />
<text  x="860.74" y="161.5" ></text>
</g>
<g >
<title>PyOP2SolveCallable_getrf (846,879 us, 1.40%)</title><rect x="297.6" y="231" width="16.6" height="15.0" fill="rgb(140.875044378013,160.787783473347,140.875044378013)" rx="2" ry="2" />
<text  x="300.61" y="241.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.action (13,834 us, 0.02%)</title><rect x="78.1" y="87" width="0.3" height="15.0" fill="rgb(154.535013194923,131.435101161078,131.435101161078)" rx="2" ry="2" />
<text  x="81.13" y="97.5" ></text>
</g>
<g >
<title>PCApply (39,787,696 us, 65.95%)</title><rect x="79.2" y="135" width="778.2" height="15.0" fill="rgb(154.283372836537,154.283372836537,139.988652977063)" rx="2" ry="2" />
<text  x="82.19" y="145.5" >PCApply</text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (6,237 us, 0.01%)</title><rect x="1185.5" y="167" width="0.1" height="15.0" fill="rgb(155.162711166827,155.162711166827,144.250061808472)" rx="2" ry="2" />
<text  x="1188.45" y="177.5" ></text>
</g>
<g >
<title>firedrake.matrix_free.operators.ImplicitMatrixContext.__init__ (9,244 us, 0.02%)</title><rect x="78.8" y="103" width="0.2" height="15.0" fill="rgb(152.836912253017,152.836912253017,132.978882456927)" rx="2" ry="2" />
<text  x="81.79" y="113.5" ></text>
</g>
<g >
<title>firedrake.assemble.assemble (9,546,319 us, 15.82%)</title><rect x="79.4" y="183" width="186.7" height="15.0" fill="rgb(127.721502491935,162.929057733871,127.721502491935)" rx="2" ry="2" />
<text  x="82.43" y="193.5" >firedrake.assemble.ass..</text>
</g>
<g >
<title>firedrake.parloops.par_loop (7,860 us, 0.01%)</title><rect x="1187.7" y="151" width="0.1" height="15.0" fill="rgb(155.858342032343,141.580622247966,141.580622247966)" rx="2" ry="2" />
<text  x="1190.66" y="161.5" ></text>
</g>
<g >
<title>SNESFunctionEval (111,842 us, 0.19%)</title><rect x="1187.8" y="119" width="2.2" height="15.0" fill="rgb(118.118104560918,118.118104560918,150.280923463403)" rx="2" ry="2" />
<text  x="1190.81" y="129.5" ></text>
</g>
<g >
<title>PyOP2SolveCallable_memcpy (36,303 us, 0.06%)</title><rect x="314.2" y="231" width="0.7" height="15.0" fill="rgb(148.381141311972,148.381141311972,111.385530973403)" rx="2" ry="2" />
<text  x="317.17" y="241.5" ></text>
</g>
<g >
<title>firedrake.assemble.assemble (4,128,986 us, 6.84%)</title><rect x="315.1" y="183" width="80.7" height="15.0" fill="rgb(134.497611462264,151.906788156883,151.906788156883)" rx="2" ry="2" />
<text  x="318.08" y="193.5" >firedrak..</text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (11,445 us, 0.02%)</title><rect x="857.7" y="199" width="0.3" height="15.0" fill="rgb(151.290648102245,151.290648102245,125.485448495493)" rx="2" ry="2" />
<text  x="860.74" y="209.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (8,148 us, 0.01%)</title><rect x="24.2" y="103" width="0.1" height="15.0" fill="rgb(127.955619030149,150.210716044853,150.210716044853)" rx="2" ry="2" />
<text  x="27.18" y="113.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (20,062 us, 0.03%)</title><rect x="24.3" y="87" width="0.4" height="15.0" fill="rgb(129.413763033431,150.588753379038,150.588753379038)" rx="2" ry="2" />
<text  x="27.34" y="97.5" ></text>
</g>
<g >
<title>firedrake.assemble.allocate_matrix (9,244 us, 0.02%)</title><rect x="78.8" y="87" width="0.2" height="15.0" fill="rgb(148.712815042741,148.712815042741,112.99287289944)" rx="2" ry="2" />
<text  x="81.79" y="97.5" ></text>
</g>
<g >
<title>firedrake.assemble.assemble_form (111,842 us, 0.19%)</title><rect x="1187.8" y="151" width="2.2" height="15.0" fill="rgb(109.287830747231,109.287830747231,148.571838209141)" rx="2" ry="2" />
<text  x="1190.81" y="161.5" ></text>
</g>
<g >
<title>ParLoopExecute (4,037,684 us, 6.69%)</title><rect x="316.9" y="215" width="78.9" height="15.0" fill="rgb(124.636882898445,163.431205109555,124.636882898445)" rx="2" ry="2" />
<text  x="319.87" y="225.5" >ParLoopE..</text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (20,062 us, 0.03%)</title><rect x="24.3" y="119" width="0.4" height="15.0" fill="rgb(147.340754332596,147.340754332596,155.936920193406)" rx="2" ry="2" />
<text  x="27.34" y="129.5" ></text>
</g>
<g >
<title>RecoverFirstElim (9,546,319 us, 15.82%)</title><rect x="79.4" y="167" width="186.7" height="15.0" fill="rgb(137.541972606377,105.576304803842,137.541972606377)" rx="2" ry="2" />
<text  x="82.43" y="177.5" >RecoverFirstElim</text>
</g>
<g >
<title>HybridProject (12,448 us, 0.02%)</title><rect x="79.2" y="167" width="0.2" height="15.0" fill="rgb(155.142066403604,155.142066403604,144.150014109774)" rx="2" ry="2" />
<text  x="82.19" y="177.5" ></text>
</g>
<g >
<title>HybridOperatorAssembly (13,968,739 us, 23.15%)</title><rect x="858.0" y="151" width="273.2" height="15.0" fill="rgb(115.78157254122,115.78157254122,149.828691459591)" rx="2" ry="2" />
<text  x="860.97" y="161.5" >HybridOperatorAssembly</text>
</g>
<g >
<title>firedrake.functionspace.VectorFunctionSpace (7,238 us, 0.01%)</title><rect x="78.0" y="71" width="0.1" height="15.0" fill="rgb(142.915179430019,154.089120592968,154.089120592968)" rx="2" ry="2" />
<text  x="80.99" y="81.5" ></text>
</g>
<g >
<title>firedrake.interpolation.make_interpolator (106,591 us, 0.18%)</title><rect x="1185.6" y="151" width="2.1" height="15.0" fill="rgb(144.094745607251,160.263646063936,144.094745607251)" rx="2" ry="2" />
<text  x="1188.57" y="161.5" ></text>
</g>
<g >
<title>CreateSparsity (2,342,942 us, 3.88%)</title><rect x="1131.2" y="167" width="45.8" height="15.0" fill="rgb(123.602034422711,149.082008924407,149.082008924407)" rx="2" ry="2" />
<text  x="1134.17" y="177.5" >Cre..</text>
</g>
<g >
<title>ParLoopExecute (68,842 us, 0.11%)</title><rect x="1187.8" y="167" width="1.4" height="15.0" fill="rgb(140.778869981592,160.803439770439,140.778869981592)" rx="2" ry="2" />
<text  x="1190.81" y="177.5" ></text>
</g>
<g >
<title>firedrake.assemble.assemble (111,842 us, 0.19%)</title><rect x="1187.8" y="135" width="2.2" height="15.0" fill="rgb(151.472107482424,151.472107482424,126.364828568671)" rx="2" ry="2" />
<text  x="1190.81" y="145.5" ></text>
</g>
<g >
<title>PCSetUp (16,894,839 us, 28.00%)</title><rect x="857.4" y="119" width="330.4" height="15.0" fill="rgb(148.502946115713,159.546032027675,148.502946115713)" rx="2" ry="2" />
<text  x="860.37" y="129.5" >PCSetUp</text>
</g>
<g >
<title>PyOP2SolveCallable_gerts (36,880 us, 0.06%)</title><rect x="296.9" y="231" width="0.7" height="15.0" fill="rgb(130.051120229794,162.54981763701,130.051120229794)" rx="2" ry="2" />
<text  x="299.89" y="241.5" ></text>
</g>
<g >
<title>firedrake.functionspace.VectorFunctionSpace (8,148 us, 0.01%)</title><rect x="24.2" y="87" width="0.1" height="15.0" fill="rgb(112.29358642866,146.150189074097,146.150189074097)" rx="2" ry="2" />
<text  x="27.18" y="97.5" ></text>
</g>
<g >
<title>ParLoop_Cells_wrap_form1_cell_integral_otherwise (35,250 us, 0.06%)</title><rect x="1188.5" y="183" width="0.7" height="15.0" fill="rgb(123.787223180819,123.787223180819,151.378172228546)" rx="2" ry="2" />
<text  x="1191.47" y="193.5" ></text>
</g>
<g >
<title>ParLoopExecute (9,406,132 us, 15.59%)</title><rect x="82.2" y="215" width="183.9" height="15.0" fill="rgb(144.67011597783,144.67011597783,155.420022447322)" rx="2" ry="2" />
<text  x="85.17" y="225.5" >ParLoopExecute</text>
</g>
<g >
<title>firedrake.parloops.par_loop (12,448 us, 0.02%)</title><rect x="79.2" y="183" width="0.2" height="15.0" fill="rgb(153.261891147476,153.261891147476,135.038395560844)" rx="2" ry="2" />
<text  x="82.19" y="193.5" ></text>
</g>
<g >
<title>PCApply (215,951 us, 0.36%)</title><rect x="395.8" y="183" width="4.3" height="15.0" fill="rgb(151.784739248401,151.784739248401,127.879890203789)" rx="2" ry="2" />
<text  x="398.84" y="193.5" ></text>
</g>
<g >
<title>firedrake.assemble.assemble_form (2,492,196 us, 4.13%)</title><rect x="266.1" y="183" width="48.8" height="15.0" fill="rgb(155.008236498086,135.063146485328,135.063146485328)" rx="2" ry="2" />
<text  x="269.14" y="193.5" >fire..</text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (8,148 us, 0.01%)</title><rect x="24.2" y="119" width="0.1" height="15.0" fill="rgb(155.132223789157,136.013715716871,136.013715716871)" rx="2" ry="2" />
<text  x="27.18" y="129.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (20,062 us, 0.03%)</title><rect x="24.3" y="71" width="0.4" height="15.0" fill="rgb(129.781575932623,162.593696941201,129.781575932623)" rx="2" ry="2" />
<text  x="27.34" y="81.5" ></text>
</g>
<g >
<title>firedrake.assemble.assemble (2,492,196 us, 4.13%)</title><rect x="266.1" y="167" width="48.8" height="15.0" fill="rgb(135.180271234764,135.180271234764,153.583278303503)" rx="2" ry="2" />
<text  x="269.14" y="177.5" >fire..</text>
</g>
<g >
<title>CreateFunctionSpace (6,237 us, 0.01%)</title><rect x="1185.5" y="199" width="0.1" height="15.0" fill="rgb(153.180807016389,153.180807016389,134.645449387117)" rx="2" ry="2" />
<text  x="1188.45" y="209.5" ></text>
</g>
<g >
<title>HybridInit (16,894,839 us, 28.00%)</title><rect x="857.4" y="135" width="330.4" height="15.0" fill="rgb(152.582120414345,116.462923176641,116.462923176641)" rx="2" ry="2" />
<text  x="860.37" y="145.5" >HybridInit</text>
</g>
<g >
<title>ParLoopExecute (2,194,203 us, 3.64%)</title><rect x="272.0" y="199" width="42.9" height="15.0" fill="rgb(149.591081921978,159.368893640608,149.591081921978)" rx="2" ry="2" />
<text  x="274.97" y="209.5" >Par..</text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.__init__ (16,067 us, 0.03%)</title><rect x="78.7" y="71" width="0.3" height="15.0" fill="rgb(147.804102023164,147.804102023164,108.589109804563)" rx="2" ry="2" />
<text  x="81.66" y="81.5" ></text>
</g>
<g >
<title>firedrake.assemble.allocate_matrix (2,775,147 us, 4.60%)</title><rect x="1131.2" y="151" width="54.3" height="15.0" fill="rgb(155.307956916601,137.361003027276,137.361003027276)" rx="2" ry="2" />
<text  x="1134.17" y="161.5" >fired..</text>
</g>
</g>
</svg>
