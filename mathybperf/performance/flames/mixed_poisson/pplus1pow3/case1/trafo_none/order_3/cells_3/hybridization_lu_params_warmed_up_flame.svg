<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="283" onload="init(evt)" viewBox="0 0 1200 283" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:13px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:18px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 13 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (1 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="283.0" fill="url(#background)"  />
<text id="title" x="600.00" y="26" >Firedrake example</text>
<text id="details" x="10.00" y="265" > </text>
<text id="unzoom" x="10.00" y="26" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="26" >Search</text>
<text id="ignorecase" x="1174.00" y="26" >ic</text>
<text id="matched" x="1090.00" y="265" > </text>
<g id="frames">
<g >
<title>KSPSolve (1,890,076 us, 0.45%)</title><rect x="62.9" y="167" width="5.4" height="15.0" fill="rgb(129.44901630856,150.597893117034,150.597893117034)" rx="2" ry="2" />
<text  x="65.95" y="177.5" ></text>
</g>
<g >
<title>ParLoopExecute (62,186 us, 0.01%)</title><rect x="1189.7" y="167" width="0.2" height="15.0" fill="rgb(155.710236493725,155.710236493725,146.903453777285)" rx="2" ry="2" />
<text  x="1192.68" y="177.5" ></text>
</g>
<g >
<title>HybridRHS (3,578,020 us, 0.86%)</title><rect x="52.8" y="167" width="10.1" height="15.0" fill="rgb(145.326103688606,160.063192422785,145.326103688606)" rx="2" ry="2" />
<text  x="55.83" y="177.5" ></text>
</g>
<g >
<title>ParLoop_Cells_wrap_wrap_slate_loopy_knl_7 (8,352,399 us, 2.00%)</title><rect x="22.1" y="231" width="23.7" height="15.0" fill="rgb(134.174896148498,151.823121223685,151.823121223685)" rx="2" ry="2" />
<text  x="25.15" y="241.5" >P..</text>
</g>
<g >
<title>MatSolve (1,890,076 us, 0.45%)</title><rect x="62.9" y="199" width="5.4" height="15.0" fill="rgb(140.455358688814,153.451389289693,153.451389289693)" rx="2" ry="2" />
<text  x="65.95" y="209.5" ></text>
</g>
<g >
<title>firedrake.slate.slac.compiler.compile_expression (195,848 us, 0.05%)</title><rect x="1181.1" y="199" width="0.6" height="15.0" fill="rgb(140.082757980954,112.087067326196,140.082757980954)" rx="2" ry="2" />
<text  x="1184.11" y="209.5" ></text>
</g>
<g >
<title>firedrake.extrusion_utils.make_extruded_coords (72,727 us, 0.02%)</title><rect x="12.3" y="87" width="0.2" height="15.0" fill="rgb(156.362772683228,145.447923904745,145.447923904745)" rx="2" ry="2" />
<text  x="15.28" y="97.5" ></text>
</g>
<g >
<title>SNESSolve (412,804,049 us, 98.97%)</title><rect x="22.1" y="103" width="1167.9" height="15.0" fill="rgb(156.505800169354,146.544467965044,146.544467965044)" rx="2" ry="2" />
<text  x="25.15" y="113.5" >SNESSolve</text>
</g>
<g >
<title>ParLoop_Cells_wrap_wrap_slate_loopy_knl_14 (2,048,354 us, 0.49%)</title><rect x="46.2" y="215" width="5.8" height="15.0" fill="rgb(153.454093092715,123.148047044147,123.148047044147)" rx="2" ry="2" />
<text  x="49.17" y="225.5" ></text>
</g>
<g >
<title>perfsolve (412,804,049 us, 98.97%)</title><rect x="22.1" y="71" width="1167.9" height="15.0" fill="rgb(155.138454108367,136.061481497477,136.061481497477)" rx="2" ry="2" />
<text  x="25.15" y="81.5" >perfsolve</text>
</g>
<g >
<title>firedrake (417,097,258 us, 100.00%)</title><rect x="10.0" y="55" width="1180.0" height="15.0" fill="rgb(155.314531855305,137.411410890671,137.411410890671)" rx="2" ry="2" />
<text  x="13.00" y="65.5" >firedrake</text>
</g>
<g >
<title>firedrake.assemble.allocate_matrix (2,747,222 us, 0.66%)</title><rect x="1181.7" y="151" width="7.7" height="15.0" fill="rgb(156.474098677751,146.301423196092,146.301423196092)" rx="2" ry="2" />
<text  x="1184.66" y="161.5" ></text>
</g>
<g >
<title>SCForwardElim (3,578,020 us, 0.86%)</title><rect x="52.8" y="151" width="10.1" height="15.0" fill="rgb(134.293732770705,161.859159781513,134.293732770705)" rx="2" ry="2" />
<text  x="55.83" y="161.5" ></text>
</g>
<g >
<title>firedrake.assemble.assemble (3,578,020 us, 0.86%)</title><rect x="52.8" y="183" width="10.1" height="15.0" fill="rgb(153.949717171749,126.947831650077,126.947831650077)" rx="2" ry="2" />
<text  x="55.83" y="193.5" ></text>
</g>
<g >
<title>CreateSparsity (2,338,934 us, 0.56%)</title><rect x="1181.7" y="167" width="6.6" height="15.0" fill="rgb(131.967971793878,162.237772033555,131.967971793878)" rx="2" ry="2" />
<text  x="1184.66" y="177.5" ></text>
</g>
<g >
<title>firedrake.assemble.assemble_form (3,578,020 us, 0.86%)</title><rect x="52.8" y="199" width="10.1" height="15.0" fill="rgb(152.775310026902,152.775310026902,132.680348591908)" rx="2" ry="2" />
<text  x="55.83" y="209.5" ></text>
</g>
<g >
<title>HybridInit (14,181,695 us, 3.40%)</title><rect x="1149.6" y="135" width="40.1" height="15.0" fill="rgb(105.507782083571,144.390906466111,144.390906466111)" rx="2" ry="2" />
<text  x="1152.55" y="145.5" >Hyb..</text>
</g>
<g >
<title>SNESFunctionEval (114,764 us, 0.03%)</title><rect x="1189.7" y="119" width="0.3" height="15.0" fill="rgb(112.84898215866,146.294180559652,146.294180559652)" rx="2" ry="2" />
<text  x="1192.68" y="129.5" ></text>
</g>
<g >
<title>all (417,097,258 us, 100%)</title><rect x="10.0" y="39" width="1180.0" height="15.0" fill="rgb(114.015841298467,146.596699595899,146.596699595899)" rx="2" ry="2" />
<text  x="13.00" y="49.5" ></text>
</g>
<g >
<title>MatLUFactorNum (375,989,373 us, 90.14%)</title><rect x="68.3" y="183" width="1063.7" height="15.0" fill="rgb(150.622324684496,150.622324684496,122.246650394095)" rx="2" ry="2" />
<text  x="71.30" y="193.5" >MatLUFactorNum</text>
</g>
<g >
<title>firedrake.slate.slac.compiler.compile_expression (140,331 us, 0.03%)</title><rect x="45.8" y="215" width="0.4" height="15.0" fill="rgb(150.637152721374,150.637152721374,122.318509342045)" rx="2" ry="2" />
<text  x="48.78" y="225.5" ></text>
</g>
<g >
<title>firedrake.assemble.assemble (2,352,350 us, 0.56%)</title><rect x="46.2" y="167" width="6.6" height="15.0" fill="rgb(130.739397852124,162.437772442677,130.739397852124)" rx="2" ry="2" />
<text  x="49.17" y="177.5" ></text>
</g>
<g >
<title>CreateExtMesh (72,727 us, 0.02%)</title><rect x="12.3" y="71" width="0.2" height="15.0" fill="rgb(109.790255044656,109.790255044656,148.669081621546)" rx="2" ry="2" />
<text  x="15.28" y="81.5" ></text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (52,578 us, 0.01%)</title><rect x="1189.9" y="167" width="0.1" height="15.0" fill="rgb(156.663962466849,147.757045579173,147.757045579173)" rx="2" ry="2" />
<text  x="1192.85" y="177.5" ></text>
</g>
<g >
<title>PCSetUp (14,181,695 us, 3.40%)</title><rect x="1149.6" y="119" width="40.1" height="15.0" fill="rgb(123.028089967482,123.028089967482,151.231243219513)" rx="2" ry="2" />
<text  x="1152.55" y="129.5" >PCS..</text>
</g>
<g >
<title>MatLUFactorSym (6,205,041 us, 1.49%)</title><rect x="1132.0" y="183" width="17.6" height="15.0" fill="rgb(139.41046463559,161.026203431416,139.41046463559)" rx="2" ry="2" />
<text  x="1135.00" y="193.5" ></text>
</g>
<g >
<title>RecoverFirstElim (8,492,730 us, 2.04%)</title><rect x="22.1" y="167" width="24.1" height="15.0" fill="rgb(142.274575741752,117.70360033824,142.274575741752)" rx="2" ry="2" />
<text  x="25.15" y="177.5" >R..</text>
</g>
<g >
<title>firedrake.assemble.assemble (114,764 us, 0.03%)</title><rect x="1189.7" y="135" width="0.3" height="15.0" fill="rgb(154.516633607061,131.294190987467,131.294190987467)" rx="2" ry="2" />
<text  x="1192.68" y="145.5" ></text>
</g>
<g >
<title>ParLoop_Cells_wrap_wrap_slate_loopy_knl_4 (3,487,438 us, 0.84%)</title><rect x="52.8" y="231" width="9.9" height="15.0" fill="rgb(131.870803613009,151.225763899669,151.225763899669)" rx="2" ry="2" />
<text  x="55.83" y="241.5" ></text>
</g>
<g >
<title>firedrake.slate.slac.compiler.compile_expression (303,996 us, 0.07%)</title><rect x="52.0" y="199" width="0.8" height="15.0" fill="rgb(149.695183689749,149.695183689749,117.753582496474)" rx="2" ry="2" />
<text  x="54.97" y="209.5" ></text>
</g>
<g >
<title>firedrake.assemble.assemble (11,348,958 us, 2.72%)</title><rect x="1149.6" y="167" width="32.1" height="15.0" fill="rgb(146.188498645748,127.733027779728,146.188498645748)" rx="2" ry="2" />
<text  x="1152.55" y="177.5" >fi..</text>
</g>
<g >
<title>firedrake.assemble.assemble_form (8,492,730 us, 2.04%)</title><rect x="22.1" y="199" width="24.1" height="15.0" fill="rgb(126.661597587091,163.101600392799,126.661597587091)" rx="2" ry="2" />
<text  x="25.15" y="209.5" >f..</text>
</g>
<g >
<title>ParLoopExecute (3,487,438 us, 0.84%)</title><rect x="52.8" y="215" width="9.9" height="15.0" fill="rgb(149.71978871494,159.347941371986,149.71978871494)" rx="2" ry="2" />
<text  x="55.83" y="225.5" ></text>
</g>
<g >
<title>KSPSolve (398,507,590 us, 95.54%)</title><rect x="22.1" y="119" width="1127.5" height="15.0" fill="rgb(154.382070699489,130.262542029415,130.262542029415)" rx="2" ry="2" />
<text  x="25.15" y="129.5" >KSPSolve</text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.solve (412,804,049 us, 98.97%)</title><rect x="22.1" y="87" width="1167.9" height="15.0" fill="rgb(115.111735478655,146.880820309281,146.880820309281)" rx="2" ry="2" />
<text  x="25.15" y="97.5" >firedrake.variational_solver.NonlinearVariationalSolver.solve</text>
</g>
<g >
<title>firedrake.assemble.assemble_form (114,764 us, 0.03%)</title><rect x="1189.7" y="151" width="0.3" height="15.0" fill="rgb(156.207453532305,144.257143747673,144.257143747673)" rx="2" ry="2" />
<text  x="1192.68" y="161.5" ></text>
</g>
<g >
<title>SCSolve (384,084,490 us, 92.09%)</title><rect x="62.9" y="151" width="1086.7" height="15.0" fill="rgb(140.025306152125,153.339894187588,153.339894187588)" rx="2" ry="2" />
<text  x="65.95" y="161.5" >SCSolve</text>
</g>
<g >
<title>ParLoopExecute (8,352,399 us, 2.00%)</title><rect x="22.1" y="215" width="23.7" height="15.0" fill="rgb(143.361062169256,143.361062169256,155.16665719405)" rx="2" ry="2" />
<text  x="25.15" y="225.5" >P..</text>
</g>
<g >
<title>MatZeroInitial (408,288 us, 0.10%)</title><rect x="1188.3" y="167" width="1.1" height="15.0" fill="rgb(152.581125657175,152.581125657175,131.739301261693)" rx="2" ry="2" />
<text  x="1191.28" y="177.5" ></text>
</g>
<g >
<title>firedrake.assemble.assemble_form (11,348,958 us, 2.72%)</title><rect x="1149.6" y="183" width="32.1" height="15.0" fill="rgb(129.340965874375,150.569880041505,150.569880041505)" rx="2" ry="2" />
<text  x="1152.55" y="193.5" >fi..</text>
</g>
<g >
<title>ParLoopExecute (11,153,110 us, 2.67%)</title><rect x="1149.6" y="199" width="31.5" height="15.0" fill="rgb(148.310673850081,159.57733216394,148.310673850081)" rx="2" ry="2" />
<text  x="1152.55" y="209.5" >Pa..</text>
</g>
<g >
<title>ParLoop_Cells_wrap_wrap_slate_loopy_knl_0 (11,153,110 us, 2.67%)</title><rect x="1149.6" y="215" width="31.5" height="15.0" fill="rgb(154.385949015201,154.385949015201,140.485752919821)" rx="2" ry="2" />
<text  x="1152.55" y="225.5" >Pa..</text>
</g>
<g >
<title>PCSetUp (382,194,414 us, 91.63%)</title><rect x="68.3" y="167" width="1081.3" height="15.0" fill="rgb(133.760990434256,151.715812334807,151.715812334807)" rx="2" ry="2" />
<text  x="71.30" y="177.5" >PCSetUp</text>
</g>
<g >
<title>SCBackSub (10,845,080 us, 2.60%)</title><rect x="22.1" y="151" width="30.7" height="15.0" fill="rgb(139.768691580736,139.768691580736,154.471359660788)" rx="2" ry="2" />
<text  x="25.15" y="161.5" >SC..</text>
</g>
<g >
<title>PCApply (398,507,590 us, 95.54%)</title><rect x="22.1" y="135" width="1127.5" height="15.0" fill="rgb(141.227993511118,141.227993511118,154.7538051957)" rx="2" ry="2" />
<text  x="25.15" y="145.5" >PCApply</text>
</g>
<g >
<title>firedrake.assemble.assemble (8,492,730 us, 2.04%)</title><rect x="22.1" y="183" width="24.1" height="15.0" fill="rgb(154.106723949646,154.106723949646,139.132585294436)" rx="2" ry="2" />
<text  x="25.15" y="193.5" >f..</text>
</g>
<g >
<title>firedrake.assemble.assemble_form (2,352,350 us, 0.56%)</title><rect x="46.2" y="183" width="6.6" height="15.0" fill="rgb(151.834682563514,142.201374069004,151.834682563514)" rx="2" ry="2" />
<text  x="49.17" y="193.5" ></text>
</g>
<g >
<title>firedrake.__init__ (3,412,914 us, 0.82%)</title><rect x="12.5" y="71" width="9.6" height="15.0" fill="rgb(149.83246261437,149.83246261437,118.418857285024)" rx="2" ry="2" />
<text  x="15.49" y="81.5" ></text>
</g>
<g >
<title>ParLoopExecute (2,048,354 us, 0.49%)</title><rect x="46.2" y="199" width="5.8" height="15.0" fill="rgb(139.711292189145,153.258483160149,153.258483160149)" rx="2" ry="2" />
<text  x="49.17" y="209.5" ></text>
</g>
<g >
<title>PCApply (1,890,076 us, 0.45%)</title><rect x="62.9" y="183" width="5.4" height="15.0" fill="rgb(116.366379284036,147.206098332898,147.206098332898)" rx="2" ry="2" />
<text  x="65.95" y="193.5" ></text>
</g>
<g >
<title>firedrake.slate.slac.compiler.compile_expression (90,582 us, 0.02%)</title><rect x="62.7" y="215" width="0.2" height="15.0" fill="rgb(105.488456133895,144.385896034713,144.385896034713)" rx="2" ry="2" />
<text  x="65.69" y="225.5" ></text>
</g>
<g >
<title>HybridOperatorAssembly (11,348,958 us, 2.72%)</title><rect x="1149.6" y="151" width="32.1" height="15.0" fill="rgb(156.667347052452,147.7829940688,147.7829940688)" rx="2" ry="2" />
<text  x="1152.55" y="161.5" >Hy..</text>
</g>
<g >
<title>firedrake.interpolation.make_interpolator (85,515 us, 0.02%)</title><rect x="1189.4" y="151" width="0.3" height="15.0" fill="rgb(153.541466935415,153.541466935415,136.393262840858)" rx="2" ry="2" />
<text  x="1192.43" y="161.5" ></text>
</g>
</g>
</svg>
