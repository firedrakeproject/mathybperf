<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="299" onload="init(evt)" viewBox="0 0 1200 299" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:13px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:18px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 13 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (1 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="299.0" fill="url(#background)"  />
<text id="title" x="600.00" y="26" >Firedrake example</text>
<text id="details" x="10.00" y="281" > </text>
<text id="unzoom" x="10.00" y="26" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="26" >Search</text>
<text id="ignorecase" x="1174.00" y="26" >ic</text>
<text id="matched" x="1090.00" y="281" > </text>
<g id="frames">
<g >
<title>firedrake.assemble.assemble_form (2,239,299 us, 3.88%)</title><rect x="274.4" y="183" width="45.8" height="15.0" fill="rgb(137.388595278914,161.355344954595,137.388595278914)" rx="2" ry="2" />
<text  x="277.43" y="193.5" >fir..</text>
</g>
<g >
<title>CreateSparsity (2,367,461 us, 4.10%)</title><rect x="1129.4" y="167" width="48.3" height="15.0" fill="rgb(153.770128598433,153.770128598433,137.501392438559)" rx="2" ry="2" />
<text  x="1132.36" y="177.5" >Crea..</text>
</g>
<g >
<title>firedrake.variational_solver.LinearVariationalProblem.__init__ (19,000 us, 0.03%)</title><rect x="86.4" y="71" width="0.4" height="15.0" fill="rgb(153.913385762284,153.913385762284,138.195638694147)" rx="2" ry="2" />
<text  x="89.41" y="81.5" ></text>
</g>
<g >
<title>firedrake.functionspace.VectorFunctionSpace (6,061 us, 0.01%)</title><rect x="86.3" y="71" width="0.1" height="15.0" fill="rgb(128.966726409549,150.472854995068,150.472854995068)" rx="2" ry="2" />
<text  x="89.29" y="81.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (15,980 us, 0.03%)</title><rect x="26.0" y="71" width="0.3" height="15.0" fill="rgb(126.156697279496,149.744328924314,149.744328924314)" rx="2" ry="2" />
<text  x="28.98" y="81.5" ></text>
</g>
<g >
<title>PCSetUp (22,456,314 us, 38.86%)</title><rect x="407.1" y="167" width="458.6" height="15.0" fill="rgb(115.107924547687,115.107924547687,149.698307976972)" rx="2" ry="2" />
<text  x="410.10" y="177.5" >PCSetUp</text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (6,530 us, 0.01%)</title><rect x="25.8" y="151" width="0.2" height="15.0" fill="rgb(126.759943904657,149.900726197504,149.900726197504)" rx="2" ry="2" />
<text  x="28.84" y="161.5" ></text>
</g>
<g >
<title>PyOP2SolveCallable_memcpy (73,679 us, 0.13%)</title><rect x="272.9" y="247" width="1.5" height="15.0" fill="rgb(151.846172571167,151.846172571167,128.177605537193)" rx="2" ry="2" />
<text  x="275.92" y="257.5" ></text>
</g>
<g >
<title>HybridInit (15,771,925 us, 27.30%)</title><rect x="865.7" y="135" width="322.1" height="15.0" fill="rgb(154.763433627944,154.763433627944,142.315101427728)" rx="2" ry="2" />
<text  x="868.68" y="145.5" >HybridInit</text>
</g>
<g >
<title>PCSetUp (15,771,925 us, 27.30%)</title><rect x="865.7" y="119" width="322.1" height="15.0" fill="rgb(147.857904026957,147.857904026957,156.037013682637)" rx="2" ry="2" />
<text  x="868.68" y="129.5" >PCSetUp</text>
</g>
<g >
<title>PyOP2InverseCallable_getri (4,853,498 us, 8.40%)</title><rect x="1029.0" y="231" width="99.1" height="15.0" fill="rgb(150.451709060753,138.65750446818,150.451709060753)" rx="2" ry="2" />
<text  x="1032.00" y="241.5" >PyOP2Inver..</text>
</g>
<g >
<title>firedrake.assemble.assemble (2,239,299 us, 3.88%)</title><rect x="274.4" y="167" width="45.8" height="15.0" fill="rgb(138.826293995296,138.826293995296,154.288960128122)" rx="2" ry="2" />
<text  x="277.43" y="177.5" >fir..</text>
</g>
<g >
<title>firedrake.parloops.par_loop (9,497 us, 0.02%)</title><rect x="320.2" y="183" width="0.2" height="15.0" fill="rgb(152.253091647559,113.940369297949,113.940369297949)" rx="2" ry="2" />
<text  x="323.16" y="193.5" ></text>
</g>
<g >
<title>KSPSolve (495,591 us, 0.86%)</title><rect x="397.0" y="167" width="10.1" height="15.0" fill="rgb(130.18642699107,130.18642699107,152.616727804723)" rx="2" ry="2" />
<text  x="399.98" y="177.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (7,613 us, 0.01%)</title><rect x="866.0" y="199" width="0.1" height="15.0" fill="rgb(143.79017875271,154.315972269221,154.315972269221)" rx="2" ry="2" />
<text  x="868.97" y="209.5" ></text>
</g>
<g >
<title>RecoverFirstElim (9,148,547 us, 15.83%)</title><rect x="87.6" y="167" width="186.8" height="15.0" fill="rgb(126.663278401426,149.87566477074,149.87566477074)" rx="2" ry="2" />
<text  x="90.60" y="177.5" >RecoverFirstElim</text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (6,061 us, 0.01%)</title><rect x="86.3" y="103" width="0.1" height="15.0" fill="rgb(121.297160656929,148.484449059204,148.484449059204)" rx="2" ry="2" />
<text  x="89.29" y="113.5" ></text>
</g>
<g >
<title>ParLoop_Cells_wrap_wrap_slate_loopy_knl_14 (1,941,321 us, 3.36%)</title><rect x="280.5" y="215" width="39.7" height="15.0" fill="rgb(154.735943679896,154.735943679896,142.181880910263)" rx="2" ry="2" />
<text  x="283.51" y="225.5" >Par..</text>
</g>
<g >
<title>firedrake.assemble.allocate_matrix (2,761,120 us, 4.78%)</title><rect x="1129.4" y="151" width="56.3" height="15.0" fill="rgb(142.962635249233,160.447943098962,142.962635249233)" rx="2" ry="2" />
<text  x="1132.36" y="161.5" >fired..</text>
</g>
<g >
<title>firedrake.assemble.assemble (12,890,139 us, 22.31%)</title><rect x="866.1" y="167" width="263.3" height="15.0" fill="rgb(149.968624313953,137.419599804505,149.968624313953)" rx="2" ry="2" />
<text  x="869.12" y="177.5" >firedrake.assemble.assemble</text>
</g>
<g >
<title>pyop2.parloop.JITModule.compile (35,452 us, 0.06%)</title><rect x="25.1" y="119" width="0.7" height="15.0" fill="rgb(134.246918787095,134.246918787095,153.402629442664)" rx="2" ry="2" />
<text  x="28.12" y="129.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (6,061 us, 0.01%)</title><rect x="86.3" y="87" width="0.1" height="15.0" fill="rgb(126.531405672134,163.122794425467,126.531405672134)" rx="2" ry="2" />
<text  x="89.29" y="97.5" ></text>
</g>
<g >
<title>all (57,783,166 us, 100%)</title><rect x="10.0" y="39" width="1180.0" height="15.0" fill="rgb(125.231495015976,163.334407788097,125.231495015976)" rx="2" ry="2" />
<text  x="13.00" y="49.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.action (10,154 us, 0.02%)</title><rect x="86.4" y="87" width="0.2" height="15.0" fill="rgb(154.87206412821,154.87206412821,142.841541544403)" rx="2" ry="2" />
<text  x="89.41" y="97.5" ></text>
</g>
<g >
<title>MatSolve (277,814 us, 0.48%)</title><rect x="401.4" y="199" width="5.7" height="15.0" fill="rgb(154.051197497461,127.725847480535,127.725847480535)" rx="2" ry="2" />
<text  x="404.43" y="209.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (6,061 us, 0.01%)</title><rect x="86.3" y="119" width="0.1" height="15.0" fill="rgb(150.382810218433,159.24000763886,150.382810218433)" rx="2" ry="2" />
<text  x="89.29" y="129.5" ></text>
</g>
<g >
<title>firedrake.functionspace.VectorFunctionSpace (6,530 us, 0.01%)</title><rect x="25.8" y="87" width="0.2" height="15.0" fill="rgb(154.792219640393,133.407017243011,133.407017243011)" rx="2" ry="2" />
<text  x="28.84" y="97.5" ></text>
</g>
<g >
<title>ParLoopExecute (3,665,404 us, 6.34%)</title><rect x="322.1" y="215" width="74.9" height="15.0" fill="rgb(154.826265607947,154.826265607947,142.619594869281)" rx="2" ry="2" />
<text  x="325.13" y="225.5" >ParLoop..</text>
</g>
<g >
<title>PyOP2SolveCallable_getrf (1,696,195 us, 2.94%)</title><rect x="238.3" y="247" width="34.6" height="15.0" fill="rgb(134.304257369913,161.857446474665,134.304257369913)" rx="2" ry="2" />
<text  x="241.28" y="257.5" >Py..</text>
</g>
<g >
<title>firedrake.assemble.assemble_form (9,148,547 us, 15.83%)</title><rect x="87.6" y="199" width="186.8" height="15.0" fill="rgb(152.014160808766,152.014160808766,128.991702380945)" rx="2" ry="2" />
<text  x="90.60" y="209.5" >firedrake.assemble.ass..</text>
</g>
<g >
<title>CreateExtMesh (77,244 us, 0.13%)</title><rect x="24.4" y="71" width="1.6" height="15.0" fill="rgb(123.008326378755,123.008326378755,151.227418008791)" rx="2" ry="2" />
<text  x="27.40" y="81.5" ></text>
</g>
<g >
<title>ParLoopExecute (58,372 us, 0.10%)</title><rect x="1187.8" y="167" width="1.2" height="15.0" fill="rgb(154.384627892918,154.384627892918,140.479350557988)" rx="2" ry="2" />
<text  x="1190.77" y="177.5" ></text>
</g>
<g >
<title>PCApply (38,116,323 us, 65.96%)</title><rect x="87.3" y="135" width="778.4" height="15.0" fill="rgb(153.190528732763,121.12738695118,121.12738695118)" rx="2" ry="2" />
<text  x="90.30" y="145.5" >PCApply</text>
</g>
<g >
<title>PCApply (277,814 us, 0.48%)</title><rect x="401.4" y="183" width="5.7" height="15.0" fill="rgb(153.440070779776,123.040542644952,123.040542644952)" rx="2" ry="2" />
<text  x="404.43" y="193.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (6,720 us, 0.01%)</title><rect x="1185.7" y="183" width="0.2" height="15.0" fill="rgb(154.850573109072,154.850573109072,142.737392759349)" rx="2" ry="2" />
<text  x="1188.74" y="193.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.solve (54,007,164 us, 93.47%)</title><rect x="87.1" y="87" width="1102.9" height="15.0" fill="rgb(133.306603813805,133.306603813805,153.22063299622)" rx="2" ry="2" />
<text  x="90.11" y="97.5" >firedrake.variational_solver.NonlinearVariationalSolver.solve</text>
</g>
<g >
<title>firedrake.assemble.assemble_form (3,752,462 us, 6.49%)</title><rect x="320.4" y="199" width="76.6" height="15.0" fill="rgb(137.534826586839,105.557993128774,137.534826586839)" rx="2" ry="2" />
<text  x="323.35" y="209.5" >firedra..</text>
</g>
<g >
<title>firedrake.assemble.assemble_form (12,890,139 us, 22.31%)</title><rect x="866.1" y="183" width="263.3" height="15.0" fill="rgb(142.013971258599,153.855474030007,153.855474030007)" rx="2" ry="2" />
<text  x="869.12" y="193.5" >firedrake.assemble.assemble_form</text>
</g>
<g >
<title>firedrake.matrix_free.operators.ImplicitMatrixContext.__init__ (7,020 us, 0.01%)</title><rect x="87.0" y="103" width="0.1" height="15.0" fill="rgb(148.032884682353,132.459266998529,148.032884682353)" rx="2" ry="2" />
<text  x="89.97" y="113.5" ></text>
</g>
<g >
<title>firedrake.assemble.assemble (109,408 us, 0.19%)</title><rect x="1187.8" y="135" width="2.2" height="15.0" fill="rgb(132.830555859949,162.097351371636,132.830555859949)" rx="2" ry="2" />
<text  x="1190.77" y="145.5" ></text>
</g>
<g >
<title>firedrake.assemble.assemble_form (109,408 us, 0.19%)</title><rect x="1187.8" y="151" width="2.2" height="15.0" fill="rgb(128.671918129936,150.396423218872,150.396423218872)" rx="2" ry="2" />
<text  x="1190.77" y="161.5" ></text>
</g>
<g >
<title>ParLoopExecute (12,679,962 us, 21.94%)</title><rect x="870.4" y="199" width="259.0" height="15.0" fill="rgb(153.089499039959,120.352825973018,120.352825973018)" rx="2" ry="2" />
<text  x="873.42" y="209.5" >ParLoopExecute</text>
</g>
<g >
<title>PyOP2SolveCallable_getrf (769,563 us, 1.33%)</title><rect x="303.9" y="231" width="15.7" height="15.0" fill="rgb(148.364349001679,148.364349001679,111.304152854292)" rx="2" ry="2" />
<text  x="306.90" y="241.5" ></text>
</g>
<g >
<title>PyOP2SolveCallable_gerts (30,555 us, 0.05%)</title><rect x="303.3" y="231" width="0.6" height="15.0" fill="rgb(113.187173797768,146.381859873496,146.381859873496)" rx="2" ry="2" />
<text  x="306.27" y="241.5" ></text>
</g>
<g >
<title>HybridProject (14,613 us, 0.03%)</title><rect x="87.3" y="167" width="0.3" height="15.0" fill="rgb(139.846633676976,160.955199168864,139.846633676976)" rx="2" ry="2" />
<text  x="90.30" y="177.5" ></text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (51,036 us, 0.09%)</title><rect x="1189.0" y="167" width="1.0" height="15.0" fill="rgb(137.905170225848,137.905170225848,154.110678108229)" rx="2" ry="2" />
<text  x="1191.96" y="177.5" ></text>
</g>
<g >
<title>SCForwardElim (3,761,959 us, 6.51%)</title><rect x="320.2" y="151" width="76.8" height="15.0" fill="rgb(107.604230146141,144.934430037888,144.934430037888)" rx="2" ry="2" />
<text  x="323.16" y="161.5" >SCForwar..</text>
</g>
<g >
<title>SNESSolve (53,997,656 us, 93.45%)</title><rect x="87.3" y="103" width="1102.7" height="15.0" fill="rgb(149.382980787378,159.402770569497,149.382980787378)" rx="2" ry="2" />
<text  x="90.30" y="113.5" >SNESSolve</text>
</g>
<g >
<title>ParLoop_Cells_wrap_wrap_slate_loopy_knl_7 (8,996,928 us, 15.57%)</title><rect x="90.7" y="231" width="183.7" height="15.0" fill="rgb(149.842829166676,149.842829166676,118.469095192351)" rx="2" ry="2" />
<text  x="93.70" y="241.5" >ParLoop_Cells_wrap_wr..</text>
</g>
<g >
<title>PyOP2SolveCallable_getrf (1,448,134 us, 2.51%)</title><rect x="366.4" y="247" width="29.6" height="15.0" fill="rgb(152.335017685047,152.335017685047,130.546624165999)" rx="2" ry="2" />
<text  x="369.38" y="257.5" >P..</text>
</g>
<g >
<title>ParLoop_Cells_wrap_form1_cell_integral_otherwise (29,630 us, 0.05%)</title><rect x="1188.4" y="183" width="0.6" height="15.0" fill="rgb(153.395545477601,122.699181994944,122.699181994944)" rx="2" ry="2" />
<text  x="1191.35" y="193.5" ></text>
</g>
<g >
<title>ParLoop_Cells_wrap_wrap_slate_loopy_knl_4 (3,665,404 us, 6.34%)</title><rect x="322.1" y="231" width="74.9" height="15.0" fill="rgb(148.527953367411,148.527953367411,112.097004780531)" rx="2" ry="2" />
<text  x="325.13" y="241.5" >ParLoop..</text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (6,720 us, 0.01%)</title><rect x="1185.7" y="151" width="0.2" height="15.0" fill="rgb(120.999787421702,120.999787421702,150.838668533233)" rx="2" ry="2" />
<text  x="1188.74" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (15,980 us, 0.03%)</title><rect x="26.0" y="119" width="0.3" height="15.0" fill="rgb(111.956867601255,146.062891600325,146.062891600325)" rx="2" ry="2" />
<text  x="28.98" y="129.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (6,061 us, 0.01%)</title><rect x="86.3" y="135" width="0.1" height="15.0" fill="rgb(142.392227056582,153.953540348003,153.953540348003)" rx="2" ry="2" />
<text  x="89.29" y="145.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (6,720 us, 0.01%)</title><rect x="1185.7" y="167" width="0.2" height="15.0" fill="rgb(147.188899462836,147.188899462836,155.907528928291)" rx="2" ry="2" />
<text  x="1188.74" y="177.5" ></text>
</g>
<g >
<title>HybridOperatorAssembly (12,890,139 us, 22.31%)</title><rect x="866.1" y="151" width="263.3" height="15.0" fill="rgb(134.941618222542,134.941618222542,153.537087397911)" rx="2" ry="2" />
<text  x="869.12" y="161.5" >HybridOperatorAssembly</text>
</g>
<g >
<title>firedrake.assemble.assemble (3,752,462 us, 6.49%)</title><rect x="320.4" y="183" width="76.6" height="15.0" fill="rgb(139.707279960484,160.977884657596,139.707279960484)" rx="2" ry="2" />
<text  x="323.35" y="193.5" >firedra..</text>
</g>
<g >
<title>PyOP2InverseCallable_getrf (1,555,455 us, 2.69%)</title><rect x="997.2" y="231" width="31.8" height="15.0" fill="rgb(126.304114504951,126.304114504951,151.865312484829)" rx="2" ry="2" />
<text  x="1000.23" y="241.5" >Py..</text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (7,613 us, 0.01%)</title><rect x="866.0" y="167" width="0.1" height="15.0" fill="rgb(149.718436222554,159.348161545166,149.718436222554)" rx="2" ry="2" />
<text  x="868.97" y="177.5" ></text>
</g>
<g >
<title>PyOP2SolveCallable_memcpy (50,188 us, 0.09%)</title><rect x="396.0" y="247" width="1.0" height="15.0" fill="rgb(127.075840067177,149.982625202601,149.982625202601)" rx="2" ry="2" />
<text  x="398.95" y="257.5" ></text>
</g>
<g >
<title>PyOP2SolveCallable_gerts (74,801 us, 0.13%)</title><rect x="236.8" y="247" width="1.5" height="15.0" fill="rgb(116.817733274303,147.323116034078,147.323116034078)" rx="2" ry="2" />
<text  x="239.76" y="257.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (15,980 us, 0.03%)</title><rect x="26.0" y="103" width="0.3" height="15.0" fill="rgb(152.192587751515,113.476506094946,113.476506094946)" rx="2" ry="2" />
<text  x="28.98" y="113.5" ></text>
</g>
<g >
<title>firedrake.__init__ (2,937,277 us, 5.08%)</title><rect x="26.3" y="71" width="60.0" height="15.0" fill="rgb(144.203910641279,160.245875011885,144.203910641279)" rx="2" ry="2" />
<text  x="29.30" y="81.5" >fired..</text>
</g>
<g >
<title>SNESFunctionEval (109,408 us, 0.19%)</title><rect x="1187.8" y="119" width="2.2" height="15.0" fill="rgb(108.473753839188,108.473753839188,148.414274936617)" rx="2" ry="2" />
<text  x="1190.77" y="129.5" ></text>
</g>
<g >
<title>firedrake.extrusion_utils.make_extruded_coords (70,714 us, 0.12%)</title><rect x="24.4" y="87" width="1.4" height="15.0" fill="rgb(144.720008910328,144.720008910328,155.429679143934)" rx="2" ry="2" />
<text  x="27.40" y="97.5" ></text>
</g>
<g >
<title>perfsolve (54,007,164 us, 93.47%)</title><rect x="87.1" y="71" width="1102.9" height="15.0" fill="rgb(131.783509788602,151.203132167415,151.203132167415)" rx="2" ry="2" />
<text  x="90.11" y="81.5" >perfsolve</text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.__init__ (15,343 us, 0.03%)</title><rect x="86.8" y="71" width="0.3" height="15.0" fill="rgb(137.883126709104,161.274839838053,137.883126709104)" rx="2" ry="2" />
<text  x="89.80" y="81.5" ></text>
</g>
<g >
<title>PyOP2SolveCallable_gerts (50,989 us, 0.09%)</title><rect x="365.3" y="247" width="1.1" height="15.0" fill="rgb(126.257397066731,163.167400477509,126.257397066731)" rx="2" ry="2" />
<text  x="368.34" y="257.5" ></text>
</g>
<g >
<title>SCBackSub (11,402,459 us, 19.73%)</title><rect x="87.3" y="151" width="232.9" height="15.0" fill="rgb(133.817545554902,133.817545554902,153.31952494611)" rx="2" ry="2" />
<text  x="90.30" y="161.5" >SCBackSub</text>
</g>
<g >
<title>MatMult (217,777 us, 0.38%)</title><rect x="397.0" y="183" width="4.4" height="15.0" fill="rgb(144.866791842381,154.595094181358,154.595094181358)" rx="2" ry="2" />
<text  x="399.98" y="193.5" ></text>
</g>
<g >
<title>firedrake.interpolation.make_interpolator (85,716 us, 0.15%)</title><rect x="1185.9" y="151" width="1.7" height="15.0" fill="rgb(154.871496154734,154.871496154734,142.838789057556)" rx="2" ry="2" />
<text  x="1188.88" y="161.5" ></text>
</g>
<g >
<title>MatAssemblyEnd (10,822 us, 0.02%)</title><rect x="1177.7" y="167" width="0.2" height="15.0" fill="rgb(124.56565741555,149.331837107735,149.331837107735)" rx="2" ry="2" />
<text  x="1180.70" y="177.5" ></text>
</g>
<g >
<title>PyOP2InverseCallable_memcpy (60,903 us, 0.11%)</title><rect x="1128.1" y="231" width="1.3" height="15.0" fill="rgb(119.785861209685,119.785861209685,150.603715072842)" rx="2" ry="2" />
<text  x="1131.11" y="241.5" ></text>
</g>
<g >
<title>SCSolve (22,951,905 us, 39.72%)</title><rect x="397.0" y="151" width="468.7" height="15.0" fill="rgb(147.286446122268,159.744066910328,147.286446122268)" rx="2" ry="2" />
<text  x="399.98" y="161.5" >SCSolve</text>
</g>
<g >
<title>CreateFunctionSpace (7,613 us, 0.01%)</title><rect x="866.0" y="151" width="0.1" height="15.0" fill="rgb(151.039991151125,159.133024696328,151.039991151125)" rx="2" ry="2" />
<text  x="868.97" y="161.5" ></text>
</g>
<g >
<title>MatZeroInitial (382,837 us, 0.66%)</title><rect x="1177.9" y="167" width="7.8" height="15.0" fill="rgb(129.559641880796,162.629825740335,129.559641880796)" rx="2" ry="2" />
<text  x="1180.92" y="177.5" ></text>
</g>
<g >
<title>firedrake.assemble.assemble (9,148,547 us, 15.83%)</title><rect x="87.6" y="183" width="186.8" height="15.0" fill="rgb(142.673645716976,154.026500741438,154.026500741438)" rx="2" ry="2" />
<text  x="90.60" y="193.5" >firedrake.assemble.ass..</text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (7,613 us, 0.01%)</title><rect x="866.0" y="183" width="0.1" height="15.0" fill="rgb(139.67590734547,139.67590734547,154.453401421704)" rx="2" ry="2" />
<text  x="868.97" y="193.5" ></text>
</g>
<g >
<title>PyOP2InverseCallable_getri (2,361,177 us, 4.09%)</title><rect x="187.8" y="247" width="48.2" height="15.0" fill="rgb(136.707592605994,103.438206052859,136.707592605994)" rx="2" ry="2" />
<text  x="190.83" y="257.5" >PyOP..</text>
</g>
<g >
<title>PyOP2SolveCallable_memcpy (26,672 us, 0.05%)</title><rect x="319.6" y="231" width="0.6" height="15.0" fill="rgb(121.510478254638,148.539753621573,148.539753621573)" rx="2" ry="2" />
<text  x="322.61" y="241.5" ></text>
</g>
<g >
<title>ParLoopExecute (35,452 us, 0.06%)</title><rect x="25.1" y="103" width="0.7" height="15.0" fill="rgb(121.281116244864,148.480289396816,148.480289396816)" rx="2" ry="2" />
<text  x="28.12" y="113.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (6,530 us, 0.01%)</title><rect x="25.8" y="135" width="0.2" height="15.0" fill="rgb(153.313640382254,153.313640382254,135.289180314001)" rx="2" ry="2" />
<text  x="28.84" y="145.5" ></text>
</g>
<g >
<title>ParLoop_Cells_wrap_form0_cell_integral_otherwise (28,742 us, 0.05%)</title><rect x="1187.8" y="183" width="0.6" height="15.0" fill="rgb(153.147826695021,120.800004661824,120.800004661824)" rx="2" ry="2" />
<text  x="1190.77" y="193.5" ></text>
</g>
<g >
<title>HybridRHS (3,752,462 us, 6.49%)</title><rect x="320.4" y="167" width="76.6" height="15.0" fill="rgb(154.225701615318,154.225701615318,139.709169366543)" rx="2" ry="2" />
<text  x="323.35" y="177.5" >HybridRHS</text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (6,530 us, 0.01%)</title><rect x="25.8" y="119" width="0.2" height="15.0" fill="rgb(144.847315203907,124.296245210011,144.847315203907)" rx="2" ry="2" />
<text  x="28.84" y="129.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (8,846 us, 0.02%)</title><rect x="86.6" y="103" width="0.2" height="15.0" fill="rgb(154.509796137977,154.509796137977,141.085935130194)" rx="2" ry="2" />
<text  x="89.62" y="113.5" ></text>
</g>
<g >
<title>PyOP2InverseCallable_memcpy (34,867 us, 0.06%)</title><rect x="236.0" y="247" width="0.8" height="15.0" fill="rgb(154.540889562083,131.4801533093,131.4801533093)" rx="2" ry="2" />
<text  x="239.04" y="257.5" ></text>
</g>
<g >
<title>PyOP2InverseCallable_getrf (813,501 us, 1.41%)</title><rect x="171.2" y="247" width="16.6" height="15.0" fill="rgb(133.902267891326,133.902267891326,153.335922817676)" rx="2" ry="2" />
<text  x="174.21" y="257.5" ></text>
</g>
<g >
<title>firedrake (57,783,166 us, 100.00%)</title><rect x="10.0" y="55" width="1180.0" height="15.0" fill="rgb(116.345273516042,147.200626467122,147.200626467122)" rx="2" ry="2" />
<text  x="13.00" y="65.5" >firedrake</text>
</g>
<g >
<title>firedrake.assemble.allocate_matrix (7,020 us, 0.01%)</title><rect x="87.0" y="87" width="0.1" height="15.0" fill="rgb(154.726157098772,132.90053775725,132.90053775725)" rx="2" ry="2" />
<text  x="89.97" y="97.5" ></text>
</g>
<g >
<title>HybridBreak (9,497 us, 0.02%)</title><rect x="320.2" y="167" width="0.2" height="15.0" fill="rgb(144.322515312237,154.453985451321,154.453985451321)" rx="2" ry="2" />
<text  x="323.16" y="177.5" ></text>
</g>
<g >
<title>firedrake.parloops.par_loop (14,613 us, 0.03%)</title><rect x="87.3" y="183" width="0.3" height="15.0" fill="rgb(136.686586541052,161.469625446806,136.686586541052)" rx="2" ry="2" />
<text  x="90.30" y="193.5" ></text>
</g>
<g >
<title>ParLoopExecute (8,996,928 us, 15.57%)</title><rect x="90.7" y="215" width="183.7" height="15.0" fill="rgb(153.765743549911,125.537367215987,125.537367215987)" rx="2" ry="2" />
<text  x="93.70" y="225.5" >ParLoopExecute</text>
</g>
<g >
<title>ParLoopExecute (1,941,321 us, 3.36%)</title><rect x="280.5" y="199" width="39.7" height="15.0" fill="rgb(148.591751239641,133.89136255158,148.591751239641)" rx="2" ry="2" />
<text  x="283.51" y="209.5" >Par..</text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalProblem.__init__ (8,846 us, 0.02%)</title><rect x="86.6" y="87" width="0.2" height="15.0" fill="rgb(152.988655972875,119.579695792043,119.579695792043)" rx="2" ry="2" />
<text  x="89.62" y="97.5" ></text>
</g>
<g >
<title>ParLoop_Cells_wrap_wrap_slate_loopy_knl_0 (12,679,962 us, 21.94%)</title><rect x="870.4" y="215" width="259.0" height="15.0" fill="rgb(134.435478615197,97.6159139514425,134.435478615197)" rx="2" ry="2" />
<text  x="873.42" y="225.5" >ParLoop_Cells_wrap_wrap_slate_l..</text>
</g>
<g >
<title>CreateFunctionSpace (6,530 us, 0.01%)</title><rect x="25.8" y="103" width="0.2" height="15.0" fill="rgb(127.469338461232,162.970107692358,127.469338461232)" rx="2" ry="2" />
<text  x="28.84" y="113.5" ></text>
</g>
<g >
<title>MatLUFactor (22,456,314 us, 38.86%)</title><rect x="407.1" y="183" width="458.6" height="15.0" fill="rgb(156.00087812017,142.6733989213,142.6733989213)" rx="2" ry="2" />
<text  x="410.10" y="193.5" >MatLUFactor</text>
</g>
<g >
<title>ParLoopExecute (5,901 us, 0.01%)</title><rect x="87.5" y="199" width="0.1" height="15.0" fill="rgb(133.240503863165,133.240503863165,153.207839457387)" rx="2" ry="2" />
<text  x="90.48" y="209.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (15,980 us, 0.03%)</title><rect x="26.0" y="87" width="0.3" height="15.0" fill="rgb(153.170910746596,120.97698239057,120.97698239057)" rx="2" ry="2" />
<text  x="28.98" y="97.5" ></text>
</g>
<g >
<title>KSPSolve (38,116,323 us, 65.96%)</title><rect x="87.3" y="119" width="778.4" height="15.0" fill="rgb(128.101164429823,128.101164429823,152.213128599321)" rx="2" ry="2" />
<text  x="90.30" y="129.5" >KSPSolve</text>
</g>
<g >
<title>firedrake.parloops.par_loop (6,690 us, 0.01%)</title><rect x="1187.6" y="151" width="0.2" height="15.0" fill="rgb(137.127927827752,104.515315058615,137.127927827752)" rx="2" ry="2" />
<text  x="1190.63" y="161.5" ></text>
</g>
</g>
</svg>
