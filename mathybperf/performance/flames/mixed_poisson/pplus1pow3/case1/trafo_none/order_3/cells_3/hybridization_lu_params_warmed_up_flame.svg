<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="283" onload="init(evt)" viewBox="0 0 1200 283" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:13px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:18px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 13 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (1 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="283.0" fill="url(#background)"  />
<text id="title" x="600.00" y="26" >Firedrake example</text>
<text id="details" x="10.00" y="265" > </text>
<text id="unzoom" x="10.00" y="26" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="26" >Search</text>
<text id="ignorecase" x="1174.00" y="26" >ic</text>
<text id="matched" x="1090.00" y="265" > </text>
<g id="frames">
<g >
<title>firedrake.ufl_expr.action (11,720 us, 0.02%)</title><rect x="91.6" y="87" width="0.2" height="15.0" fill="rgb(155.056737608852,135.434988334528,135.434988334528)" rx="2" ry="2" />
<text  x="94.58" y="97.5" ></text>
</g>
<g >
<title>CreateSparsity (2,253,866 us, 3.42%)</title><rect x="1137.9" y="167" width="40.4" height="15.0" fill="rgb(138.499568302133,152.944332522775,152.944332522775)" rx="2" ry="2" />
<text  x="1140.93" y="177.5" >Cre..</text>
</g>
<g >
<title>HybridRHS (3,739,031 us, 5.67%)</title><rect x="355.8" y="167" width="66.9" height="15.0" fill="rgb(128.442049037687,162.811759458981,128.442049037687)" rx="2" ry="2" />
<text  x="358.78" y="177.5" >Hybrid..</text>
</g>
<g >
<title>HybridInit (14,835,498 us, 22.49%)</title><rect x="922.4" y="135" width="265.5" height="15.0" fill="rgb(153.330825722787,122.20299720803,122.20299720803)" rx="2" ry="2" />
<text  x="925.44" y="145.5" >HybridInit</text>
</g>
<g >
<title>firedrake.assemble.assemble_form (12,021,538 us, 18.23%)</title><rect x="922.9" y="183" width="215.0" height="15.0" fill="rgb(116.424599111361,147.221192362205,147.221192362205)" rx="2" ry="2" />
<text  x="925.86" y="193.5" >firedrake.assemble.assembl..</text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (17,645 us, 0.03%)</title><rect x="28.3" y="103" width="0.3" height="15.0" fill="rgb(110.672503103719,110.672503103719,148.839839310397)" rx="2" ry="2" />
<text  x="31.29" y="113.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (6,732 us, 0.01%)</title><rect x="28.2" y="103" width="0.1" height="15.0" fill="rgb(154.039970030986,154.039970030986,138.809085534777)" rx="2" ry="2" />
<text  x="31.17" y="113.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (8,185 us, 0.01%)</title><rect x="922.7" y="199" width="0.2" height="15.0" fill="rgb(154.037615997776,154.037615997776,138.797677527683)" rx="2" ry="2" />
<text  x="925.71" y="209.5" ></text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (42,675 us, 0.06%)</title><rect x="1189.2" y="167" width="0.8" height="15.0" fill="rgb(154.402382622694,130.418266773987,130.418266773987)" rx="2" ry="2" />
<text  x="1192.24" y="177.5" ></text>
</g>
<g >
<title>HybridBreak (10,690 us, 0.02%)</title><rect x="355.6" y="167" width="0.2" height="15.0" fill="rgb(134.61502767251,161.806855960289,134.61502767251)" rx="2" ry="2" />
<text  x="358.59" y="177.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (8,185 us, 0.01%)</title><rect x="922.7" y="167" width="0.2" height="15.0" fill="rgb(128.765889568216,162.759041233081,128.765889568216)" rx="2" ry="2" />
<text  x="925.71" y="177.5" ></text>
</g>
<g >
<title>HybridOperatorAssembly (12,021,538 us, 18.23%)</title><rect x="922.9" y="151" width="215.0" height="15.0" fill="rgb(155.618764787433,155.618764787433,146.460167816023)" rx="2" ry="2" />
<text  x="925.86" y="161.5" >HybridOperatorAssembly</text>
</g>
<g >
<title>PCApply (46,391,266 us, 70.34%)</title><rect x="92.5" y="135" width="829.9" height="15.0" fill="rgb(123.854943397926,123.854943397926,151.391279367341)" rx="2" ry="2" />
<text  x="95.47" y="145.5" >PCApply</text>
</g>
<g >
<title>ParLoopExecute (76,887 us, 0.12%)</title><rect x="1187.9" y="167" width="1.3" height="15.0" fill="rgb(155.234439358763,155.234439358763,144.597667661697)" rx="2" ry="2" />
<text  x="1190.86" y="177.5" ></text>
</g>
<g >
<title>KSPSolve (1,420,491 us, 2.15%)</title><rect x="422.7" y="167" width="25.4" height="15.0" fill="rgb(137.13368309511,161.396842286843,137.13368309511)" rx="2" ry="2" />
<text  x="425.67" y="177.5" >K..</text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (6,873 us, 0.01%)</title><rect x="91.5" y="103" width="0.1" height="15.0" fill="rgb(132.308375213483,162.182357523387,132.308375213483)" rx="2" ry="2" />
<text  x="94.46" y="113.5" ></text>
</g>
<g >
<title>RecoverFirstElim (11,945,769 us, 18.11%)</title><rect x="92.8" y="167" width="213.7" height="15.0" fill="rgb(116.568913521052,147.258607209162,147.258607209162)" rx="2" ry="2" />
<text  x="95.77" y="177.5" >RecoverFirstElim</text>
</g>
<g >
<title>PCSetUp (14,835,498 us, 22.49%)</title><rect x="922.4" y="119" width="265.5" height="15.0" fill="rgb(145.53444325547,160.029276679342,145.53444325547)" rx="2" ry="2" />
<text  x="925.44" y="129.5" >PCSetUp</text>
</g>
<g >
<title>firedrake.assemble.allocate_matrix (2,679,905 us, 4.06%)</title><rect x="1137.9" y="151" width="48.0" height="15.0" fill="rgb(154.193677778337,154.193677778337,139.553976925789)" rx="2" ry="2" />
<text  x="1140.93" y="161.5" >fire..</text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (6,732 us, 0.01%)</title><rect x="28.2" y="151" width="0.1" height="15.0" fill="rgb(152.336503488784,152.336503488784,130.553824599491)" rx="2" ry="2" />
<text  x="31.17" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspace.VectorFunctionSpace (6,732 us, 0.01%)</title><rect x="28.2" y="87" width="0.1" height="15.0" fill="rgb(107.088435253958,144.800705436211,144.800705436211)" rx="2" ry="2" />
<text  x="31.17" y="97.5" ></text>
</g>
<g >
<title>firedrake.parloops.par_loop (16,411 us, 0.02%)</title><rect x="92.5" y="183" width="0.3" height="15.0" fill="rgb(136.864910000264,161.440596046469,136.864910000264)" rx="2" ry="2" />
<text  x="95.47" y="193.5" ></text>
</g>
<g >
<title>SCBackSub (14,706,698 us, 22.30%)</title><rect x="92.5" y="151" width="263.1" height="15.0" fill="rgb(140.950555578501,153.5797736685,153.5797736685)" rx="2" ry="2" />
<text  x="95.47" y="161.5" >SCBackSub</text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (17,645 us, 0.03%)</title><rect x="28.3" y="119" width="0.3" height="15.0" fill="rgb(118.364729003603,147.724189000934,147.724189000934)" rx="2" ry="2" />
<text  x="31.29" y="129.5" ></text>
</g>
<g >
<title>ParLoop_Cells_wrap_form0_cell_integral_otherwise (29,695 us, 0.05%)</title><rect x="1187.9" y="183" width="0.5" height="15.0" fill="rgb(110.058421366699,110.058421366699,148.720984780651)" rx="2" ry="2" />
<text  x="1190.86" y="193.5" ></text>
</g>
<g >
<title>ParLoop_Cells_wrap_wrap_slate_loopy_knl_4 (3,653,687 us, 5.54%)</title><rect x="357.3" y="231" width="65.4" height="15.0" fill="rgb(141.913543723473,153.829437261641,153.829437261641)" rx="2" ry="2" />
<text  x="360.30" y="241.5" >ParLoo..</text>
</g>
<g >
<title>firedrake.matrix_free.operators.ImplicitMatrixContext.__init__ (7,875 us, 0.01%)</title><rect x="92.1" y="103" width="0.2" height="15.0" fill="rgb(130.439730856964,162.48655544189,130.439730856964)" rx="2" ry="2" />
<text  x="95.13" y="113.5" ></text>
</g>
<g >
<title>PCApply (1,420,491 us, 2.15%)</title><rect x="422.7" y="183" width="25.4" height="15.0" fill="rgb(114.23192312767,146.652720810877,146.652720810877)" rx="2" ry="2" />
<text  x="425.67" y="193.5" >P..</text>
</g>
<g >
<title>all (65,956,116 us, 100%)</title><rect x="10.0" y="39" width="1180.0" height="15.0" fill="rgb(153.977349629749,153.977349629749,138.505617436474)" rx="2" ry="2" />
<text  x="13.00" y="49.5" ></text>
</g>
<g >
<title>firedrake.assemble.assemble (119,562 us, 0.18%)</title><rect x="1187.9" y="135" width="2.1" height="15.0" fill="rgb(149.949349665006,159.310570984766,149.949349665006)" rx="2" ry="2" />
<text  x="1190.86" y="145.5" ></text>
</g>
<g >
<title>firedrake (65,956,116 us, 100.00%)</title><rect x="10.0" y="55" width="1180.0" height="15.0" fill="rgb(150.486346405969,150.486346405969,121.587678736618)" rx="2" ry="2" />
<text  x="13.00" y="65.5" >firedrake</text>
</g>
<g >
<title>ParLoopExecute (11,792,988 us, 17.88%)</title><rect x="926.7" y="199" width="211.0" height="15.0" fill="rgb(143.845724904162,160.304184317927,143.845724904162)" rx="2" ry="2" />
<text  x="929.72" y="209.5" >ParLoopExecute</text>
</g>
<g >
<title>pyop2.parloop.JITModule.compile (38,326 us, 0.06%)</title><rect x="27.5" y="119" width="0.7" height="15.0" fill="rgb(153.090533125176,120.360753959684,120.360753959684)" rx="2" ry="2" />
<text  x="30.48" y="129.5" ></text>
</g>
<g >
<title>firedrake.assemble.assemble (11,945,769 us, 18.11%)</title><rect x="92.8" y="183" width="213.7" height="15.0" fill="rgb(155.87126975224,141.679734767173,141.679734767173)" rx="2" ry="2" />
<text  x="95.77" y="193.5" >firedrake.assemble.assemble</text>
</g>
<g >
<title>firedrake.assemble.assemble (2,744,518 us, 4.16%)</title><rect x="306.5" y="167" width="49.1" height="15.0" fill="rgb(154.671726952561,132.483239969635,132.483239969635)" rx="2" ry="2" />
<text  x="309.48" y="177.5" >fire..</text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (8,185 us, 0.01%)</title><rect x="922.7" y="183" width="0.2" height="15.0" fill="rgb(150.636546343932,150.636546343932,122.31557074367)" rx="2" ry="2" />
<text  x="925.71" y="193.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (6,732 us, 0.01%)</title><rect x="28.2" y="119" width="0.1" height="15.0" fill="rgb(132.09220533748,132.09220533748,152.985588129835)" rx="2" ry="2" />
<text  x="31.17" y="129.5" ></text>
</g>
<g >
<title>MatSolve (1,420,491 us, 2.15%)</title><rect x="422.7" y="199" width="25.4" height="15.0" fill="rgb(150.783206039532,150.783206039532,123.026306191578)" rx="2" ry="2" />
<text  x="425.67" y="209.5" >M..</text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (8,207 us, 0.01%)</title><rect x="1185.9" y="167" width="0.1" height="15.0" fill="rgb(148.554795264218,148.554795264218,112.22708474198)" rx="2" ry="2" />
<text  x="1188.87" y="177.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (6,873 us, 0.01%)</title><rect x="91.5" y="119" width="0.1" height="15.0" fill="rgb(154.263591436215,154.263591436215,139.89278926781)" rx="2" ry="2" />
<text  x="94.46" y="129.5" ></text>
</g>
<g >
<title>SCSolve (27,934,847 us, 42.35%)</title><rect x="422.7" y="151" width="499.7" height="15.0" fill="rgb(145.294331971465,145.294331971465,155.54083844609)" rx="2" ry="2" />
<text  x="425.67" y="161.5" >SCSolve</text>
</g>
<g >
<title>HybridProject (16,411 us, 0.02%)</title><rect x="92.5" y="167" width="0.3" height="15.0" fill="rgb(154.226039923609,154.226039923609,139.710808860568)" rx="2" ry="2" />
<text  x="95.47" y="177.5" ></text>
</g>
<g >
<title>firedrake.assemble.assemble_form (119,562 us, 0.18%)</title><rect x="1187.9" y="151" width="2.1" height="15.0" fill="rgb(131.265098600406,162.352193251097,131.265098600406)" rx="2" ry="2" />
<text  x="1190.86" y="161.5" ></text>
</g>
<g >
<title>ParLoopExecute (3,653,687 us, 5.54%)</title><rect x="357.3" y="215" width="65.4" height="15.0" fill="rgb(155.011138710278,135.0853967788,135.0853967788)" rx="2" ry="2" />
<text  x="360.30" y="225.5" >ParLoo..</text>
</g>
<g >
<title>firedrake.functionspace.VectorFunctionSpace (6,873 us, 0.01%)</title><rect x="91.5" y="71" width="0.1" height="15.0" fill="rgb(138.589141001858,138.589141001858,154.243059548747)" rx="2" ry="2" />
<text  x="94.46" y="81.5" ></text>
</g>
<g >
<title>firedrake.assemble.assemble_form (3,739,031 us, 5.67%)</title><rect x="355.8" y="199" width="66.9" height="15.0" fill="rgb(133.303889319531,162.020297087518,133.303889319531)" rx="2" ry="2" />
<text  x="358.78" y="209.5" >firedr..</text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (8,207 us, 0.01%)</title><rect x="1185.9" y="183" width="0.1" height="15.0" fill="rgb(127.226474381683,163.009643705307,127.226474381683)" rx="2" ry="2" />
<text  x="1188.87" y="193.5" ></text>
</g>
<g >
<title>ParLoopExecute (38,326 us, 0.06%)</title><rect x="27.5" y="103" width="0.7" height="15.0" fill="rgb(125.533577404398,163.285231585331,125.533577404398)" rx="2" ry="2" />
<text  x="30.48" y="113.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.solve (61,357,785 us, 93.03%)</title><rect x="92.3" y="87" width="1097.7" height="15.0" fill="rgb(149.291818355347,149.291818355347,115.798812029758)" rx="2" ry="2" />
<text  x="95.27" y="97.5" >firedrake.variational_solver.NonlinearVariationalSolver.solve</text>
</g>
<g >
<title>firedrake.__init__ (3,513,068 us, 5.33%)</title><rect x="28.6" y="71" width="62.9" height="15.0" fill="rgb(106.275679922771,144.589991091089,144.589991091089)" rx="2" ry="2" />
<text  x="31.61" y="81.5" >firedr..</text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.__init__ (16,947 us, 0.03%)</title><rect x="92.0" y="71" width="0.3" height="15.0" fill="rgb(149.765624698019,149.765624698019,118.094950459632)" rx="2" ry="2" />
<text  x="94.96" y="81.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (8,185 us, 0.01%)</title><rect x="922.7" y="151" width="0.2" height="15.0" fill="rgb(143.464081134712,154.231428442333,154.231428442333)" rx="2" ry="2" />
<text  x="925.71" y="161.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.LinearVariationalProblem.__init__ (21,477 us, 0.03%)</title><rect x="91.6" y="71" width="0.4" height="15.0" fill="rgb(145.492559524289,125.949683780992,145.492559524289)" rx="2" ry="2" />
<text  x="94.58" y="81.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (9,757 us, 0.01%)</title><rect x="91.8" y="103" width="0.2" height="15.0" fill="rgb(154.687164364455,132.601593460821,132.601593460821)" rx="2" ry="2" />
<text  x="94.79" y="113.5" ></text>
</g>
<g >
<title>firedrake.parloops.par_loop (10,690 us, 0.02%)</title><rect x="355.6" y="183" width="0.2" height="15.0" fill="rgb(152.519624212389,115.983785628314,115.983785628314)" rx="2" ry="2" />
<text  x="358.59" y="193.5" ></text>
</g>
<g >
<title>SNESFunctionEval (119,562 us, 0.18%)</title><rect x="1187.9" y="119" width="2.1" height="15.0" fill="rgb(114.585752546174,114.585752546174,149.597242428292)" rx="2" ry="2" />
<text  x="1190.86" y="129.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (17,645 us, 0.03%)</title><rect x="28.3" y="87" width="0.3" height="15.0" fill="rgb(154.815338018747,133.584258143724,133.584258143724)" rx="2" ry="2" />
<text  x="31.29" y="97.5" ></text>
</g>
<g >
<title>MatAssemblyEnd (16,706 us, 0.03%)</title><rect x="1178.3" y="167" width="0.3" height="15.0" fill="rgb(143.761911591114,154.308643745844,154.308643745844)" rx="2" ry="2" />
<text  x="1181.25" y="177.5" ></text>
</g>
<g >
<title>firedrake.interpolation.make_interpolator (95,596 us, 0.14%)</title><rect x="1186.0" y="151" width="1.7" height="15.0" fill="rgb(155.212750684675,155.212750684675,144.492561010346)" rx="2" ry="2" />
<text  x="1189.02" y="161.5" ></text>
</g>
<g >
<title>firedrake.extrusion_utils.make_extruded_coords (74,640 us, 0.11%)</title><rect x="26.8" y="87" width="1.4" height="15.0" fill="rgb(152.676786067264,117.188693182359,117.188693182359)" rx="2" ry="2" />
<text  x="29.83" y="97.5" ></text>
</g>
<g >
<title>ParLoop_Cells_wrap_wrap_slate_loopy_knl_7 (11,745,067 us, 17.81%)</title><rect x="96.4" y="231" width="210.1" height="15.0" fill="rgb(134.035976136778,134.035976136778,153.361801832925)" rx="2" ry="2" />
<text  x="99.36" y="241.5" >ParLoop_Cells_wrap_wrap_s..</text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (8,207 us, 0.01%)</title><rect x="1185.9" y="151" width="0.1" height="15.0" fill="rgb(137.018288476863,152.56029701252,152.56029701252)" rx="2" ry="2" />
<text  x="1188.87" y="161.5" ></text>
</g>
<g >
<title>KSPSolve (46,391,266 us, 70.34%)</title><rect x="92.5" y="119" width="829.9" height="15.0" fill="rgb(137.6130617652,137.6130617652,154.054140986813)" rx="2" ry="2" />
<text  x="95.47" y="129.5" >KSPSolve</text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (6,873 us, 0.01%)</title><rect x="91.5" y="135" width="0.1" height="15.0" fill="rgb(156.178185206861,144.032753252598,144.032753252598)" rx="2" ry="2" />
<text  x="94.46" y="145.5" ></text>
</g>
<g >
<title>ParLoop_Cells_wrap_wrap_slate_loopy_knl_14 (2,294,701 us, 3.48%)</title><rect x="314.5" y="215" width="41.1" height="15.0" fill="rgb(145.007304111746,160.11509002832,145.007304111746)" rx="2" ry="2" />
<text  x="317.53" y="225.5" >Par..</text>
</g>
<g >
<title>ParLoopExecute (2,294,701 us, 3.48%)</title><rect x="314.5" y="199" width="41.1" height="15.0" fill="rgb(137.431635883228,161.348338344591,137.431635883228)" rx="2" ry="2" />
<text  x="317.53" y="209.5" >Par..</text>
</g>
<g >
<title>CreateFunctionSpace (6,873 us, 0.01%)</title><rect x="91.5" y="87" width="0.1" height="15.0" fill="rgb(148.307512535165,148.307512535165,111.028714593493)" rx="2" ry="2" />
<text  x="94.46" y="97.5" ></text>
</g>
<g >
<title>ParLoopExecute (11,745,067 us, 17.81%)</title><rect x="96.4" y="215" width="210.1" height="15.0" fill="rgb(155.421138950219,138.228731951679,138.228731951679)" rx="2" ry="2" />
<text  x="99.36" y="225.5" >ParLoopExecute</text>
</g>
<g >
<title>CreateExtMesh (81,372 us, 0.12%)</title><rect x="26.8" y="71" width="1.5" height="15.0" fill="rgb(152.122164591104,112.936595198461,112.936595198461)" rx="2" ry="2" />
<text  x="29.83" y="81.5" ></text>
</g>
<g >
<title>ParLoop_Cells_wrap_form1_cell_integral_otherwise (47,192 us, 0.07%)</title><rect x="1188.4" y="183" width="0.8" height="15.0" fill="rgb(112.244003922675,112.244003922675,149.144000759227)" rx="2" ry="2" />
<text  x="1191.39" y="193.5" ></text>
</g>
<g >
<title>firedrake.assemble.assemble_form (2,744,518 us, 4.16%)</title><rect x="306.5" y="183" width="49.1" height="15.0" fill="rgb(151.028315452941,151.028315452941,124.214144118097)" rx="2" ry="2" />
<text  x="309.48" y="193.5" >fire..</text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (6,732 us, 0.01%)</title><rect x="28.2" y="135" width="0.1" height="15.0" fill="rgb(151.480857415728,151.480857415728,126.407232091603)" rx="2" ry="2" />
<text  x="31.17" y="145.5" ></text>
</g>
<g >
<title>firedrake.parloops.par_loop (7,247 us, 0.01%)</title><rect x="1187.7" y="151" width="0.2" height="15.0" fill="rgb(110.977900448878,145.809085301561,145.809085301561)" rx="2" ry="2" />
<text  x="1190.73" y="161.5" ></text>
</g>
<g >
<title>ParLoop_Cells_wrap_wrap_slate_loopy_knl_0 (11,792,988 us, 17.88%)</title><rect x="926.7" y="215" width="211.0" height="15.0" fill="rgb(120.87048705577,148.373829977422,148.373829977422)" rx="2" ry="2" />
<text  x="929.72" y="225.5" >ParLoop_Cells_wrap_wrap_s..</text>
</g>
<g >
<title>MatZeroInitial (409,333 us, 0.62%)</title><rect x="1178.6" y="167" width="7.3" height="15.0" fill="rgb(147.756997854778,147.756997854778,156.017483455764)" rx="2" ry="2" />
<text  x="1181.55" y="177.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (17,645 us, 0.03%)</title><rect x="28.3" y="71" width="0.3" height="15.0" fill="rgb(138.821258250343,153.027733620459,153.027733620459)" rx="2" ry="2" />
<text  x="31.29" y="81.5" ></text>
</g>
<g >
<title>SNESSolve (61,346,326 us, 93.01%)</title><rect x="92.5" y="103" width="1097.5" height="15.0" fill="rgb(145.707623606391,154.813087601657,154.813087601657)" rx="2" ry="2" />
<text  x="95.47" y="113.5" >SNESSolve</text>
</g>
<g >
<title>PCSetUp (26,514,356 us, 40.20%)</title><rect x="448.1" y="167" width="474.3" height="15.0" fill="rgb(153.645499334078,124.6154948946,124.6154948946)" rx="2" ry="2" />
<text  x="451.08" y="177.5" >PCSetUp</text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalProblem.__init__ (9,757 us, 0.01%)</title><rect x="91.8" y="87" width="0.2" height="15.0" fill="rgb(131.102900905895,151.02667801264,151.02667801264)" rx="2" ry="2" />
<text  x="94.79" y="97.5" ></text>
</g>
<g >
<title>MatLUFactor (26,514,356 us, 40.20%)</title><rect x="448.1" y="183" width="474.3" height="15.0" fill="rgb(144.109231980736,160.26128781709,144.109231980736)" rx="2" ry="2" />
<text  x="451.08" y="193.5" >MatLUFactor</text>
</g>
<g >
<title>firedrake.assemble.assemble (3,739,031 us, 5.67%)</title><rect x="355.8" y="183" width="66.9" height="15.0" fill="rgb(114.563411206701,114.563411206701,149.592918298071)" rx="2" ry="2" />
<text  x="358.78" y="193.5" >firedr..</text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.local_to_global_map (12,346 us, 0.02%)</title><rect x="1137.7" y="199" width="0.2" height="15.0" fill="rgb(114.080383866446,114.080383866446,149.499429135441)" rx="2" ry="2" />
<text  x="1140.71" y="209.5" ></text>
</g>
<g >
<title>firedrake.assemble.assemble_form (11,945,769 us, 18.11%)</title><rect x="92.8" y="199" width="213.7" height="15.0" fill="rgb(104.720410161937,144.186773004947,144.186773004947)" rx="2" ry="2" />
<text  x="95.77" y="209.5" >firedrake.assemble.assemb..</text>
</g>
<g >
<title>firedrake.assemble.assemble (12,021,538 us, 18.23%)</title><rect x="922.9" y="167" width="215.0" height="15.0" fill="rgb(144.018560312282,144.018560312282,155.293914899151)" rx="2" ry="2" />
<text  x="925.86" y="177.5" >firedrake.assemble.assemble</text>
</g>
<g >
<title>ParLoopExecute (7,503 us, 0.01%)</title><rect x="92.6" y="199" width="0.2" height="15.0" fill="rgb(117.489588058192,147.497300607679,147.497300607679)" rx="2" ry="2" />
<text  x="95.63" y="209.5" ></text>
</g>
<g >
<title>firedrake.assemble.allocate_matrix (7,875 us, 0.01%)</title><rect x="92.1" y="87" width="0.2" height="15.0" fill="rgb(147.92832592266,147.92832592266,109.19111793289)" rx="2" ry="2" />
<text  x="95.13" y="97.5" ></text>
</g>
<g >
<title>perfsolve (61,357,785 us, 93.03%)</title><rect x="92.3" y="71" width="1097.7" height="15.0" fill="rgb(154.062509384884,127.81257195078,127.81257195078)" rx="2" ry="2" />
<text  x="95.27" y="81.5" >perfsolve</text>
</g>
<g >
<title>SCForwardElim (3,749,721 us, 5.69%)</title><rect x="355.6" y="151" width="67.1" height="15.0" fill="rgb(109.546070804141,109.546070804141,148.62182015564)" rx="2" ry="2" />
<text  x="358.59" y="161.5" >SCForw..</text>
</g>
</g>
</svg>
