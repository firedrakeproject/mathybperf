<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="267" onload="init(evt)" viewBox="0 0 1200 267" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:13px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:18px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 13 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (1 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="267.0" fill="url(#background)"  />
<text id="title" x="600.00" y="26" >Firedrake example</text>
<text id="details" x="10.00" y="249" > </text>
<text id="unzoom" x="10.00" y="26" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="26" >Search</text>
<text id="ignorecase" x="1174.00" y="26" >ic</text>
<text id="matched" x="1090.00" y="249" > </text>
<g id="frames">
<g >
<title>CreateFunctionSpace (8,081 us, 0.03%)</title><rect x="95.8" y="103" width="0.4" height="15.0" fill="rgb(150.815872233333,150.815872233333,123.184611592304)" rx="2" ry="2" />
<text  x="98.83" y="113.5" ></text>
</g>
<g >
<title>firedrake (27,922,617 us, 100.00%)</title><rect x="10.0" y="55" width="1180.0" height="15.0" fill="rgb(149.692046280127,149.692046280127,117.738378126769)" rx="2" ry="2" />
<text  x="13.00" y="65.5" >firedrake</text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (17,871 us, 0.06%)</title><rect x="216.4" y="103" width="0.7" height="15.0" fill="rgb(124.073680505391,149.204287538435,149.204287538435)" rx="2" ry="2" />
<text  x="219.36" y="113.5" ></text>
</g>
<g >
<title>ParLoopExecute (11,755,258 us, 42.10%)</title><rect x="289.1" y="199" width="496.7" height="15.0" fill="rgb(152.060764188143,112.465858775766,112.465858775766)" rx="2" ry="2" />
<text  x="292.07" y="209.5" >ParLoopExecute</text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.__init__ (14,419 us, 0.05%)</title><rect x="217.1" y="71" width="0.6" height="15.0" fill="rgb(155.4644672361,138.560915476765,138.560915476765)" rx="2" ry="2" />
<text  x="220.12" y="81.5" ></text>
</g>
<g >
<title>ParLoopExecute (807,656 us, 2.89%)</title><rect x="885.7" y="167" width="34.2" height="15.0" fill="rgb(153.890760997093,126.495834311049,126.495834311049)" rx="2" ry="2" />
<text  x="888.73" y="177.5" >Pa..</text>
</g>
<g >
<title>pyop2.parloop.JITModule.compile (1,985,563 us, 7.11%)</title><rect x="11.9" y="119" width="83.9" height="15.0" fill="rgb(137.27619204287,137.27619204287,153.988940395394)" rx="2" ry="2" />
<text  x="14.92" y="129.5" >pyop2.pa..</text>
</g>
<g >
<title>firedrake.functionspace.MixedFunctionSpace (3,860 us, 0.01%)</title><rect x="218.3" y="167" width="0.2" height="15.0" fill="rgb(131.023767815296,131.023767815296,152.778793770702)" rx="2" ry="2" />
<text  x="221.30" y="177.5" ></text>
</g>
<g >
<title>ParLoopExecute (1,985,563 us, 7.11%)</title><rect x="11.9" y="103" width="83.9" height="15.0" fill="rgb(154.096848316456,128.075837092828,128.075837092828)" rx="2" ry="2" />
<text  x="14.92" y="113.5" >ParLoopE..</text>
</g>
<g >
<title>firedrake.functionspace.VectorFunctionSpace (8,081 us, 0.03%)</title><rect x="95.8" y="87" width="0.4" height="15.0" fill="rgb(145.490383950014,160.036449124416,145.490383950014)" rx="2" ry="2" />
<text  x="98.83" y="97.5" ></text>
</g>
<g >
<title>firedrake.matrix_free.operators.ImplicitMatrixContext.__init__ (14,419 us, 0.05%)</title><rect x="217.1" y="103" width="0.6" height="15.0" fill="rgb(121.487362319408,148.533760601328,148.533760601328)" rx="2" ry="2" />
<text  x="220.12" y="113.5" ></text>
</g>
<g >
<title>CreateExtMesh (2,039,086 us, 7.30%)</title><rect x="10.0" y="71" width="86.2" height="15.0" fill="rgb(150.336369479645,159.247567759128,150.336369479645)" rx="2" ry="2" />
<text  x="13.00" y="81.5" >CreateExt..</text>
</g>
<g >
<title>firedrake.assemble.assemble_form (6,392,457 us, 22.89%)</title><rect x="919.9" y="151" width="270.1" height="15.0" fill="rgb(137.496514878846,161.33777664763,137.496514878846)" rx="2" ry="2" />
<text  x="922.86" y="161.5" >firedrake.assemble.assemble_form</text>
</g>
<g >
<title>firedrake.ufl_expr.action (24,426 us, 0.09%)</title><rect x="215.3" y="87" width="1.1" height="15.0" fill="rgb(149.337731363825,149.337731363825,116.021313532382)" rx="2" ry="2" />
<text  x="218.33" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (16,935 us, 0.06%)</title><rect x="96.2" y="103" width="0.7" height="15.0" fill="rgb(142.148354962003,160.580500355023,142.148354962003)" rx="2" ry="2" />
<text  x="99.17" y="113.5" ></text>
</g>
<g >
<title>firedrake.assemble.allocate_matrix (14,419 us, 0.05%)</title><rect x="217.1" y="87" width="0.6" height="15.0" fill="rgb(146.442486543992,159.881455678885,146.442486543992)" rx="2" ry="2" />
<text  x="220.12" y="97.5" ></text>
</g>
<g >
<title>pyop2.parloop.JITModule.compile (5,301,781 us, 18.99%)</title><rect x="920.3" y="183" width="224.0" height="15.0" fill="rgb(148.769184815562,148.769184815562,113.266049490801)" rx="2" ry="2" />
<text  x="923.29" y="193.5" >pyop2.parloop.JITModule.com..</text>
</g>
<g >
<title>PCSetUp (16,614,633 us, 59.50%)</title><rect x="217.7" y="119" width="702.2" height="15.0" fill="rgb(155.781096433726,140.988405991898,140.988405991898)" rx="2" ry="2" />
<text  x="220.73" y="129.5" >PCSetUp</text>
</g>
<g >
<title>firedrake.assemble.assemble (6,392,457 us, 22.89%)</title><rect x="919.9" y="135" width="270.1" height="15.0" fill="rgb(130.377117429638,162.496748325408,130.377117429638)" rx="2" ry="2" />
<text  x="922.86" y="145.5" >firedrake.assemble.assemble</text>
</g>
<g >
<title>pyop2.parloop.JITModule.compile (807,656 us, 2.89%)</title><rect x="885.7" y="183" width="34.2" height="15.0" fill="rgb(153.201144884965,121.208777451399,121.208777451399)" rx="2" ry="2" />
<text  x="888.73" y="193.5" >py..</text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (2,987 us, 0.01%)</title><rect x="884.4" y="167" width="0.1" height="15.0" fill="rgb(146.17109173973,127.688422583058,146.17109173973)" rx="2" ry="2" />
<text  x="887.42" y="177.5" ></text>
</g>
<g >
<title>firedrake.extrusion_utils.make_extruded_coords (2,031,005 us, 7.27%)</title><rect x="10.0" y="87" width="85.8" height="15.0" fill="rgb(134.535906254038,134.535906254038,153.458562500782)" rx="2" ry="2" />
<text  x="13.00" y="97.5" >firedrake..</text>
</g>
<g >
<title>firedrake.slate.slac.optimise.optimise (3,346 us, 0.01%)</title><rect x="785.8" y="199" width="0.2" height="15.0" fill="rgb(149.523540219654,149.523540219654,116.921771833709)" rx="2" ry="2" />
<text  x="788.85" y="209.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (5,112 us, 0.02%)</title><rect x="218.5" y="167" width="0.2" height="15.0" fill="rgb(128.931542872009,128.931542872009,152.373847007486)" rx="2" ry="2" />
<text  x="221.46" y="177.5" ></text>
</g>
<g >
<title>firedrake.assemble.assemble (15,746,885 us, 56.39%)</title><rect x="218.7" y="167" width="665.4" height="15.0" fill="rgb(136.654114583625,161.47491157941,136.654114583625)" rx="2" ry="2" />
<text  x="221.67" y="177.5" >firedrake.assemble.assemble</text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (9,289 us, 0.03%)</title><rect x="214.9" y="119" width="0.4" height="15.0" fill="rgb(131.775131721845,151.200960076034,151.200960076034)" rx="2" ry="2" />
<text  x="217.94" y="129.5" ></text>
</g>
<g >
<title>firedrake.__init__ (2,793,501 us, 10.00%)</title><rect x="96.9" y="71" width="118.0" height="15.0" fill="rgb(155.614717425484,139.712833595378,139.712833595378)" rx="2" ry="2" />
<text  x="99.89" y="81.5" >firedrake.__i..</text>
</g>
<g >
<title>CreateFunctionSpace (9,289 us, 0.03%)</title><rect x="214.9" y="87" width="0.4" height="15.0" fill="rgb(116.254393368464,147.17706494738,147.17706494738)" rx="2" ry="2" />
<text  x="217.94" y="97.5" ></text>
</g>
<g >
<title>all (27,922,617 us, 100%)</title><rect x="10.0" y="39" width="1180.0" height="15.0" fill="rgb(155.302636640418,155.302636640418,144.928162180489)" rx="2" ry="2" />
<text  x="13.00" y="49.5" ></text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (1,080,364 us, 3.87%)</title><rect x="1144.3" y="167" width="45.7" height="15.0" fill="rgb(145.692481352644,145.692481352644,155.617899616641)" rx="2" ry="2" />
<text  x="1147.34" y="177.5" >fir..</text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (8,081 us, 0.03%)</title><rect x="95.8" y="135" width="0.4" height="15.0" fill="rgb(148.516180652156,148.516180652156,112.039952391216)" rx="2" ry="2" />
<text  x="98.83" y="145.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (8,972 us, 0.03%)</title><rect x="218.3" y="151" width="0.4" height="15.0" fill="rgb(152.547077925152,152.547077925152,131.5743007142)" rx="2" ry="2" />
<text  x="221.30" y="161.5" ></text>
</g>
<g >
<title>perfsolve (23,007,090 us, 82.40%)</title><rect x="217.7" y="71" width="972.3" height="15.0" fill="rgb(118.508267851703,147.761402776368,147.761402776368)" rx="2" ry="2" />
<text  x="220.73" y="81.5" >perfsolve</text>
</g>
<g >
<title>pyop2.parloop.JITModule.compile (11,755,258 us, 42.10%)</title><rect x="289.1" y="215" width="496.7" height="15.0" fill="rgb(123.607371895419,163.598799924001,123.607371895419)" rx="2" ry="2" />
<text  x="292.07" y="225.5" >pyop2.parloop.JITModule.compile</text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (5,864 us, 0.02%)</title><rect x="217.5" y="119" width="0.2" height="15.0" fill="rgb(127.898253088311,150.195843393266,150.195843393266)" rx="2" ry="2" />
<text  x="220.48" y="129.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (8,081 us, 0.03%)</title><rect x="95.8" y="151" width="0.4" height="15.0" fill="rgb(112.440015293242,146.188152113063,146.188152113063)" rx="2" ry="2" />
<text  x="98.83" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (8,081 us, 0.03%)</title><rect x="95.8" y="119" width="0.4" height="15.0" fill="rgb(151.998258873207,151.998258873207,128.914639154773)" rx="2" ry="2" />
<text  x="98.83" y="129.5" ></text>
</g>
<g >
<title>firedrake.mesh.MeshTopology._facets (4,405 us, 0.02%)</title><rect x="215.1" y="151" width="0.2" height="15.0" fill="rgb(131.921241063717,162.245379361721,131.921241063717)" rx="2" ry="2" />
<text  x="218.15" y="161.5" ></text>
</g>
<g >
<title>firedrake.assemble.allocate_matrix (6,793 us, 0.02%)</title><rect x="884.1" y="151" width="0.3" height="15.0" fill="rgb(152.278255293813,114.133290585898,114.133290585898)" rx="2" ry="2" />
<text  x="887.13" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (9,289 us, 0.03%)</title><rect x="214.9" y="135" width="0.4" height="15.0" fill="rgb(132.63326455176,132.63326455176,153.090309268083)" rx="2" ry="2" />
<text  x="217.94" y="145.5" ></text>
</g>
<g >
<title>HybridInit (16,614,633 us, 59.50%)</title><rect x="217.7" y="135" width="702.2" height="15.0" fill="rgb(137.245852291569,152.619295038555,152.619295038555)" rx="2" ry="2" />
<text  x="220.73" y="145.5" >HybridInit</text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (2,987 us, 0.01%)</title><rect x="884.4" y="215" width="0.1" height="15.0" fill="rgb(105.605955414376,144.416358811135,144.416358811135)" rx="2" ry="2" />
<text  x="887.42" y="225.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalProblem.__init__ (17,871 us, 0.06%)</title><rect x="216.4" y="87" width="0.7" height="15.0" fill="rgb(140.151746315625,153.372674970718,153.372674970718)" rx="2" ry="2" />
<text  x="219.36" y="97.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (16,935 us, 0.06%)</title><rect x="96.2" y="71" width="0.7" height="15.0" fill="rgb(140.629009031092,113.486835642174,140.629009031092)" rx="2" ry="2" />
<text  x="99.17" y="81.5" ></text>
</g>
<g >
<title>ParLoopExecute (5,312,093 us, 19.02%)</title><rect x="919.9" y="167" width="224.4" height="15.0" fill="rgb(150.288983870508,150.288983870508,120.63122952631)" rx="2" ry="2" />
<text  x="922.86" y="177.5" >ParLoopExecute</text>
</g>
<g >
<title>SNESFunctionEval (6,392,457 us, 22.89%)</title><rect x="919.9" y="119" width="270.1" height="15.0" fill="rgb(153.155566685208,120.859344586595,120.859344586595)" rx="2" ry="2" />
<text  x="922.86" y="129.5" >SNESFunctionEval</text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (9,289 us, 0.03%)</title><rect x="214.9" y="103" width="0.4" height="15.0" fill="rgb(127.130526436565,163.025263138234,127.130526436565)" rx="2" ry="2" />
<text  x="217.94" y="113.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (5,112 us, 0.02%)</title><rect x="218.5" y="183" width="0.2" height="15.0" fill="rgb(117.38215946418,117.38215946418,150.138482476938)" rx="2" ry="2" />
<text  x="221.46" y="193.5" ></text>
</g>
<g >
<title>firedrake.functionspace.VectorFunctionSpace (9,289 us, 0.03%)</title><rect x="214.9" y="71" width="0.4" height="15.0" fill="rgb(145.354556007469,154.721551557492,154.721551557492)" rx="2" ry="2" />
<text  x="217.94" y="81.5" ></text>
</g>
<g >
<title>firedrake.interpolation.make_interpolator (21,737 us, 0.08%)</title><rect x="884.5" y="151" width="1.0" height="15.0" fill="rgb(147.623914377154,147.623914377154,155.99172536332)" rx="2" ry="2" />
<text  x="887.55" y="161.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.solve (23,007,090 us, 82.40%)</title><rect x="217.7" y="87" width="972.3" height="15.0" fill="rgb(125.681375493996,149.621097350295,149.621097350295)" rx="2" ry="2" />
<text  x="220.73" y="97.5" >firedrake.variational_solver.NonlinearVariationalSolver.solve</text>
</g>
<g >
<title>firedrake.ufl_expr.action (8,555 us, 0.03%)</title><rect x="217.1" y="119" width="0.4" height="15.0" fill="rgb(128.149036304545,162.859459206237,128.149036304545)" rx="2" ry="2" />
<text  x="220.12" y="129.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (2,987 us, 0.01%)</title><rect x="884.4" y="199" width="0.1" height="15.0" fill="rgb(121.687269471212,148.585588381425,148.585588381425)" rx="2" ry="2" />
<text  x="887.42" y="209.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (12,116 us, 0.04%)</title><rect x="1189.5" y="183" width="0.5" height="15.0" fill="rgb(155.794752552434,155.794752552434,147.313031600256)" rx="2" ry="2" />
<text  x="1192.49" y="193.5" ></text>
</g>
<g >
<title>firedrake.parloops.par_loop (813,852 us, 2.91%)</title><rect x="885.5" y="151" width="34.4" height="15.0" fill="rgb(148.027366076348,148.027366076348,156.069812788971)" rx="2" ry="2" />
<text  x="888.46" y="161.5" >fi..</text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (16,935 us, 0.06%)</title><rect x="96.2" y="87" width="0.7" height="15.0" fill="rgb(153.314837480835,153.314837480835,135.294981637893)" rx="2" ry="2" />
<text  x="99.17" y="97.5" ></text>
</g>
<g >
<title>HybridOperatorAssembly (15,746,885 us, 56.39%)</title><rect x="218.7" y="151" width="665.4" height="15.0" fill="rgb(152.534792706138,152.534792706138,131.514764652824)" rx="2" ry="2" />
<text  x="221.67" y="161.5" >HybridOperatorAssembly</text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (5,112 us, 0.02%)</title><rect x="218.5" y="199" width="0.2" height="15.0" fill="rgb(151.158950556401,151.158950556401,124.847221927173)" rx="2" ry="2" />
<text  x="221.46" y="209.5" ></text>
</g>
<g >
<title>firedrake.assemble.assemble_form (15,746,885 us, 56.39%)</title><rect x="218.7" y="183" width="665.4" height="15.0" fill="rgb(153.663389370386,124.752651839629,124.752651839629)" rx="2" ry="2" />
<text  x="221.67" y="193.5" >firedrake.assemble.assemble_form</text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (2,987 us, 0.01%)</title><rect x="884.4" y="151" width="0.1" height="15.0" fill="rgb(151.618954059058,151.618954059058,127.076469670819)" rx="2" ry="2" />
<text  x="887.42" y="161.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (2,987 us, 0.01%)</title><rect x="884.4" y="183" width="0.1" height="15.0" fill="rgb(127.393411456491,127.393411456491,152.076144152869)" rx="2" ry="2" />
<text  x="887.42" y="193.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (6,160 us, 0.02%)</title><rect x="1189.7" y="199" width="0.3" height="15.0" fill="rgb(134.0524699227,151.79138109107,151.79138109107)" rx="2" ry="2" />
<text  x="1192.74" y="209.5" ></text>
</g>
<g >
<title>CreateSparsity (6,793 us, 0.02%)</title><rect x="884.1" y="167" width="0.3" height="15.0" fill="rgb(131.84322755956,131.84322755956,152.937398882496)" rx="2" ry="2" />
<text  x="887.13" y="177.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.LinearVariationalProblem.__init__ (42,297 us, 0.15%)</title><rect x="215.3" y="71" width="1.8" height="15.0" fill="rgb(125.433737584612,125.433737584612,151.696852435731)" rx="2" ry="2" />
<text  x="218.33" y="81.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (12,222 us, 0.04%)</title><rect x="96.4" y="119" width="0.5" height="15.0" fill="rgb(146.178286987,146.178286987,155.711926513613)" rx="2" ry="2" />
<text  x="99.37" y="129.5" ></text>
</g>
<g >
<title>ParLoop_Cells_wrap_form0_cell_integral_otherwise (7,351 us, 0.03%)</title><rect x="920.0" y="183" width="0.3" height="15.0" fill="rgb(154.99267727254,134.943859089475,134.943859089475)" rx="2" ry="2" />
<text  x="922.98" y="193.5" ></text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (2,322,420 us, 8.32%)</title><rect x="786.0" y="199" width="98.1" height="15.0" fill="rgb(142.611067690662,142.611067690662,155.021496972386)" rx="2" ry="2" />
<text  x="788.99" y="209.5" >firedrake...</text>
</g>
<g >
<title>SNESSolve (23,007,090 us, 82.40%)</title><rect x="217.7" y="103" width="972.3" height="15.0" fill="rgb(141.811365649343,160.63535908034,141.811365649343)" rx="2" ry="2" />
<text  x="220.73" y="113.5" >SNESSolve</text>
</g>
</g>
</svg>
