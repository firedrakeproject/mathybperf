<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="299" onload="init(evt)" viewBox="0 0 1200 299" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:13px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:18px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 13 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (1 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="299.0" fill="url(#background)"  />
<text id="title" x="600.00" y="26" >Firedrake example</text>
<text id="details" x="10.00" y="281" > </text>
<text id="unzoom" x="10.00" y="26" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="26" >Search</text>
<text id="ignorecase" x="1174.00" y="26" >ic</text>
<text id="matched" x="1090.00" y="281" > </text>
<g id="frames">
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (8,085 us, 0.06%)</title><rect x="380.7" y="183" width="0.8" height="15.0" fill="rgb(105.747403567805,144.453030554616,144.453030554616)" rx="2" ry="2" />
<text  x="383.71" y="193.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_form1_cell_integral_otherwise (3,352,648 us, 26.34%)</title><rect x="762.5" y="151" width="310.8" height="15.0" fill="rgb(153.873179058213,153.873179058213,138.00079082057)" rx="2" ry="2" />
<text  x="765.48" y="161.5" >Parloop_Cells_wrap_form1_cell_integral..</text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (12,104 us, 0.10%)</title><rect x="109.6" y="103" width="1.1" height="15.0" fill="rgb(144.770818314459,144.770818314459,155.439513222153)" rx="2" ry="2" />
<text  x="112.55" y="113.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (1,998 us, 0.02%)</title><rect x="379.7" y="231" width="0.2" height="15.0" fill="rgb(107.151264991706,144.816994627479,144.816994627479)" rx="2" ry="2" />
<text  x="382.72" y="241.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (12,104 us, 0.10%)</title><rect x="109.6" y="87" width="1.1" height="15.0" fill="rgb(154.053011699839,154.053011699839,138.872287468449)" rx="2" ry="2" />
<text  x="112.55" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (5,955 us, 0.05%)</title><rect x="379.9" y="167" width="0.6" height="15.0" fill="rgb(156.665859072066,147.771586219172,147.771586219172)" rx="2" ry="2" />
<text  x="382.90" y="177.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (11,560 us, 0.09%)</title><rect x="271.7" y="103" width="1.0" height="15.0" fill="rgb(153.906263206327,126.614684581844,126.614684581844)" rx="2" ry="2" />
<text  x="274.67" y="113.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (2,179 us, 0.02%)</title><rect x="381.3" y="215" width="0.2" height="15.0" fill="rgb(156.707290660982,148.089228400864,148.089228400864)" rx="2" ry="2" />
<text  x="384.26" y="225.5" ></text>
</g>
<g >
<title>firedrake.mesh.MeshTopology._facets (2,986 us, 0.02%)</title><rect x="270.0" y="151" width="0.3" height="15.0" fill="rgb(140.688923624157,160.818082200719,140.688923624157)" rx="2" ry="2" />
<text  x="273.01" y="161.5" ></text>
</g>
<g >
<title>firedrake.interpolation.make_interpolator (26,948 us, 0.21%)</title><rect x="381.6" y="151" width="2.5" height="15.0" fill="rgb(152.843089209923,118.463683942746,118.463683942746)" rx="2" ry="2" />
<text  x="384.59" y="161.5" ></text>
</g>
<g >
<title>HybridInit (902,963 us, 7.09%)</title><rect x="377.8" y="135" width="83.7" height="15.0" fill="rgb(123.939525200249,149.169506533398,149.169506533398)" rx="2" ry="2" />
<text  x="380.81" y="145.5" >HybridInit</text>
</g>
<g >
<title>firedrake.ufl_expr.action (4,452 us, 0.03%)</title><rect x="272.9" y="119" width="0.4" height="15.0" fill="rgb(137.234827888161,152.616436859893,152.616436859893)" rx="2" ry="2" />
<text  x="275.89" y="129.5" ></text>
</g>
<g >
<title>firedrake (12,727,923 us, 100.00%)</title><rect x="10.0" y="55" width="1180.0" height="15.0" fill="rgb(137.215173940359,152.611341391945,152.611341391945)" rx="2" ry="2" />
<text  x="13.00" y="65.5" >firedrake</text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (6,574 us, 0.05%)</title><rect x="108.9" y="151" width="0.7" height="15.0" fill="rgb(146.439305768504,159.881973479546,146.439305768504)" rx="2" ry="2" />
<text  x="111.94" y="161.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (1,109,249 us, 8.72%)</title><rect x="274.3" y="215" width="102.9" height="15.0" fill="rgb(149.188556361926,159.434421057361,149.188556361926)" rx="2" ry="2" />
<text  x="277.33" y="225.5" >Parloop_Cel..</text>
</g>
<g >
<title>CreateExtMesh (1,073,818 us, 8.44%)</title><rect x="10.0" y="71" width="99.6" height="15.0" fill="rgb(140.46113752816,160.855163658207,140.46113752816)" rx="2" ry="2" />
<text  x="13.00" y="81.5" >CreateExtM..</text>
</g>
<g >
<title>HybridRHS (6,940 us, 0.05%)</title><rect x="377.2" y="167" width="0.6" height="15.0" fill="rgb(140.583348574297,140.583348574297,154.629035207928)" rx="2" ry="2" />
<text  x="380.16" y="177.5" ></text>
</g>
<g >
<title>all (12,727,923 us, 100%)</title><rect x="10.0" y="39" width="1180.0" height="15.0" fill="rgb(141.397204027591,141.397204027591,154.786555618244)" rx="2" ry="2" />
<text  x="13.00" y="49.5" ></text>
</g>
<g >
<title>firedrake.assemble.allocate_matrix (7,281 us, 0.06%)</title><rect x="272.9" y="87" width="0.7" height="15.0" fill="rgb(151.379725290034,151.379725290034,125.917130251704)" rx="2" ry="2" />
<text  x="275.89" y="97.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.__init__ (8,897 us, 0.07%)</title><rect x="272.7" y="71" width="0.9" height="15.0" fill="rgb(135.514548959287,135.514548959287,153.647977217927)" rx="2" ry="2" />
<text  x="275.74" y="81.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.LinearVariationalProblem.__init__ (24,442 us, 0.19%)</title><rect x="270.5" y="71" width="2.2" height="15.0" fill="rgb(137.138050257829,137.138050257829,153.962203275709)" rx="2" ry="2" />
<text  x="273.48" y="81.5" ></text>
</g>
<g >
<title>ParLoopExecute (828,593 us, 6.51%)</title><rect x="384.7" y="167" width="76.8" height="15.0" fill="rgb(122.606154422775,122.606154422775,151.149578275376)" rx="2" ry="2" />
<text  x="387.70" y="177.5" >ParLoopE..</text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (1,538 us, 0.01%)</title><rect x="1189.9" y="183" width="0.1" height="15.0" fill="rgb(149.875321701775,149.875321701775,118.626559016296)" rx="2" ry="2" />
<text  x="1192.86" y="193.5" ></text>
</g>
<g >
<title>ParLoopExecute (6,592,191 us, 51.79%)</title><rect x="462.1" y="135" width="611.2" height="15.0" fill="rgb(146.246668255324,154.952839918047,154.952839918047)" rx="2" ry="2" />
<text  x="465.14" y="145.5" >ParLoopExecute</text>
</g>
<g >
<title>Parloop_Cells_wrap_form0_cell_integral_otherwise (3,238,182 us, 25.44%)</title><rect x="462.3" y="151" width="300.2" height="15.0" fill="rgb(110.046553886707,145.567625081739,145.567625081739)" rx="2" ry="2" />
<text  x="465.27" y="161.5" >Parloop_Cells_wrap_form0_cell_integra..</text>
</g>
<g >
<title>firedrake.__init__ (1,712,993 us, 13.46%)</title><rect x="110.9" y="71" width="158.8" height="15.0" fill="rgb(153.27781371573,121.7965718206,121.7965718206)" rx="2" ry="2" />
<text  x="113.88" y="81.5" >firedrake.__init__</text>
</g>
<g >
<title>CreateFunctionSpace (12,104 us, 0.10%)</title><rect x="109.6" y="71" width="1.1" height="15.0" fill="rgb(110.065894088852,145.572639208221,145.572639208221)" rx="2" ry="2" />
<text  x="112.55" y="81.5" ></text>
</g>
<g >
<title>firedrake.slate.slac.optimise.optimise (2,469 us, 0.02%)</title><rect x="377.6" y="183" width="0.2" height="15.0" fill="rgb(150.857331200117,150.857331200117,123.385528123642)" rx="2" ry="2" />
<text  x="380.58" y="193.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (3,230,370 us, 25.38%)</title><rect x="463.0" y="167" width="299.5" height="15.0" fill="rgb(149.769661565077,149.769661565077,118.114513738448)" rx="2" ry="2" />
<text  x="465.99" y="177.5" >pyop2.global_kernel.GlobalKernel.comp..</text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (12,104 us, 0.10%)</title><rect x="109.6" y="119" width="1.1" height="15.0" fill="rgb(123.609809338014,149.084024643189,149.084024643189)" rx="2" ry="2" />
<text  x="112.55" y="129.5" ></text>
</g>
<g >
<title>firedrake.extrusion_utils.make_extruded_coords (1,064,799 us, 8.37%)</title><rect x="10.2" y="87" width="98.7" height="15.0" fill="rgb(134.455146094965,161.832883193843,134.455146094965)" rx="2" ry="2" />
<text  x="13.23" y="97.5" >firedrake...</text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (1,998 us, 0.02%)</title><rect x="379.7" y="199" width="0.2" height="15.0" fill="rgb(140.443410047514,160.858049527149,140.443410047514)" rx="2" ry="2" />
<text  x="382.72" y="209.5" ></text>
</g>
<g >
<title>PCSetUp (902,963 us, 7.09%)</title><rect x="377.8" y="119" width="83.7" height="15.0" fill="rgb(153.244664992168,121.542431606619,121.542431606619)" rx="2" ry="2" />
<text  x="380.81" y="129.5" >PCSetUp</text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (828,593 us, 6.51%)</title><rect x="384.7" y="183" width="76.8" height="15.0" fill="rgb(155.924952593291,142.091303215231,142.091303215231)" rx="2" ry="2" />
<text  x="387.70" y="193.5" >Parloop_..</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (1,109,249 us, 8.72%)</title><rect x="274.3" y="231" width="102.9" height="15.0" fill="rgb(135.421875012426,100.143554719341,135.421875012426)" rx="2" ry="2" />
<text  x="277.33" y="241.5" >pyop2.globa..</text>
</g>
<g >
<title>firedrake.function.Function.__init__ (1,405 us, 0.01%)</title><rect x="381.5" y="151" width="0.1" height="15.0" fill="rgb(156.747706986752,148.399086898432,148.399086898432)" rx="2" ry="2" />
<text  x="384.46" y="161.5" ></text>
</g>
<g >
<title>perfsolve (9,885,002 us, 77.66%)</title><rect x="273.6" y="71" width="916.4" height="15.0" fill="rgb(138.650687403659,152.983511549097,152.983511549097)" rx="2" ry="2" />
<text  x="276.57" y="81.5" >perfsolve</text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (1,258,750 us, 9.89%)</title><rect x="1073.3" y="135" width="116.7" height="15.0" fill="rgb(153.95352896219,126.977055376793,126.977055376793)" rx="2" ry="2" />
<text  x="1076.30" y="145.5" >firedrake.tsf..</text>
</g>
<g >
<title>Log_Event_form0_cell_integral_otherwise (7,812 us, 0.06%)</title><rect x="462.3" y="167" width="0.7" height="15.0" fill="rgb(144.866597913621,154.595043903531,154.595043903531)" rx="2" ry="2" />
<text  x="465.27" y="177.5" ></text>
</g>
<g >
<title>firedrake.parloops.par_loop (835,181 us, 6.56%)</title><rect x="384.1" y="151" width="77.4" height="15.0" fill="rgb(139.031523453595,139.031523453595,154.32868195876)" rx="2" ry="2" />
<text  x="387.09" y="161.5" >firedrak..</text>
</g>
<g >
<title>HybridBreak (1,117,458 us, 8.78%)</title><rect x="273.6" y="167" width="103.6" height="15.0" fill="rgb(154.761397419348,154.761397419348,142.305233647611)" rx="2" ry="2" />
<text  x="276.57" y="177.5" >HybridBreak</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (1,031,635 us, 8.11%)</title><rect x="13.3" y="135" width="95.6" height="15.0" fill="rgb(130.319453621795,130.319453621795,152.642474894541)" rx="2" ry="2" />
<text  x="16.30" y="145.5" >pyop2.glob..</text>
</g>
<g >
<title>firedrake.functionspace.make_scalar_element (1,540 us, 0.01%)</title><rect x="381.1" y="215" width="0.2" height="15.0" fill="rgb(147.687505552206,147.687505552206,108.024065368383)" rx="2" ry="2" />
<text  x="384.12" y="225.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (1,998 us, 0.02%)</title><rect x="379.7" y="215" width="0.2" height="15.0" fill="rgb(156.760047854382,148.493700216927,148.493700216927)" rx="2" ry="2" />
<text  x="382.72" y="225.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (1,998 us, 0.02%)</title><rect x="379.7" y="183" width="0.2" height="15.0" fill="rgb(151.658359979751,151.658359979751,127.267436824946)" rx="2" ry="2" />
<text  x="382.72" y="193.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (2,829 us, 0.02%)</title><rect x="273.3" y="119" width="0.3" height="15.0" fill="rgb(142.065732903763,117.168440565892,142.065732903763)" rx="2" ry="2" />
<text  x="276.30" y="129.5" ></text>
</g>
<g >
<title>ParLoopExecute (1,109,249 us, 8.72%)</title><rect x="274.3" y="199" width="102.9" height="15.0" fill="rgb(154.628537110935,154.628537110935,141.661372152993)" rx="2" ry="2" />
<text  x="277.33" y="209.5" >ParLoopExec..</text>
</g>
<g >
<title>firedrake.matrix_free.operators.ImplicitMatrixContext.__init__ (7,281 us, 0.06%)</title><rect x="272.9" y="103" width="0.7" height="15.0" fill="rgb(131.803802676881,151.208393286599,151.208393286599)" rx="2" ry="2" />
<text  x="275.89" y="113.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (6,433 us, 0.05%)</title><rect x="269.7" y="103" width="0.6" height="15.0" fill="rgb(153.92598704872,153.92598704872,138.256706466875)" rx="2" ry="2" />
<text  x="272.69" y="113.5" ></text>
</g>
<g >
<title>CreateMesh (2,201 us, 0.02%)</title><rect x="110.7" y="71" width="0.2" height="15.0" fill="rgb(154.427728586156,130.612585827195,130.612585827195)" rx="2" ry="2" />
<text  x="113.68" y="81.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (6,574 us, 0.05%)</title><rect x="108.9" y="103" width="0.7" height="15.0" fill="rgb(154.101180717913,128.109052170665,128.109052170665)" rx="2" ry="2" />
<text  x="111.94" y="113.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (6,433 us, 0.05%)</title><rect x="269.7" y="87" width="0.6" height="15.0" fill="rgb(131.291413426009,131.291413426009,152.830596146969)" rx="2" ry="2" />
<text  x="272.69" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (2,179 us, 0.02%)</title><rect x="381.3" y="247" width="0.2" height="15.0" fill="rgb(143.818325975164,154.323269697265,154.323269697265)" rx="2" ry="2" />
<text  x="384.26" y="257.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.solve (9,885,002 us, 77.66%)</title><rect x="273.6" y="87" width="916.4" height="15.0" fill="rgb(149.049736097379,149.049736097379,114.625644164223)" rx="2" ry="2" />
<text  x="276.57" y="97.5" >firedrake.variational_solver.NonlinearVariationalSolver.solve</text>
</g>
<g >
<title>firedrake.functionspace.MixedFunctionSpace (1,998 us, 0.02%)</title><rect x="379.7" y="167" width="0.2" height="15.0" fill="rgb(136.081439922709,152.317410350332,152.317410350332)" rx="2" ry="2" />
<text  x="382.72" y="177.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (5,432 us, 0.04%)</title><rect x="381.0" y="199" width="0.5" height="15.0" fill="rgb(154.965677235133,134.736858802689,134.736858802689)" rx="2" ry="2" />
<text  x="383.96" y="209.5" ></text>
</g>
<g >
<title>KSPSolve (1,124,398 us, 8.83%)</title><rect x="273.6" y="119" width="104.2" height="15.0" fill="rgb(151.257745580905,151.257745580905,125.325997815156)" rx="2" ry="2" />
<text  x="276.57" y="129.5" >KSPSolve</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (828,593 us, 6.51%)</title><rect x="384.7" y="199" width="76.8" height="15.0" fill="rgb(151.548731915471,151.548731915471,126.736162359589)" rx="2" ry="2" />
<text  x="387.70" y="209.5" >pyop2.gl..</text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (6,574 us, 0.05%)</title><rect x="108.9" y="135" width="0.7" height="15.0" fill="rgb(131.552386572085,162.305425441754,131.552386572085)" rx="2" ry="2" />
<text  x="111.94" y="145.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_pyop2_kernel_uniform_extrusion (1,031,635 us, 8.11%)</title><rect x="13.3" y="119" width="95.6" height="15.0" fill="rgb(152.128283937401,152.128283937401,129.544760619714)" rx="2" ry="2" />
<text  x="16.30" y="129.5" >Parloop_Ce..</text>
</g>
<g >
<title>CreateFunctionSpace (7,953 us, 0.06%)</title><rect x="379.7" y="151" width="0.8" height="15.0" fill="rgb(153.995342437713,153.995342437713,138.592813351994)" rx="2" ry="2" />
<text  x="382.72" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (2,179 us, 0.02%)</title><rect x="381.3" y="231" width="0.2" height="15.0" fill="rgb(130.336113801178,130.336113801178,152.645699445389)" rx="2" ry="2" />
<text  x="384.26" y="241.5" ></text>
</g>
<g >
<title>firedrake.functionspace.VectorFunctionSpace (6,574 us, 0.05%)</title><rect x="108.9" y="87" width="0.7" height="15.0" fill="rgb(109.105667111642,109.105667111642,148.536580731285)" rx="2" ry="2" />
<text  x="111.94" y="97.5" ></text>
</g>
<g >
<title>ParLoopExecute (1,031,635 us, 8.11%)</title><rect x="13.3" y="103" width="95.6" height="15.0" fill="rgb(142.366938869693,142.366938869693,154.974246232844)" rx="2" ry="2" />
<text  x="16.30" y="113.5" >ParLoopExe..</text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (6,574 us, 0.05%)</title><rect x="108.9" y="119" width="0.7" height="15.0" fill="rgb(145.020894847713,124.741043047264,145.020894847713)" rx="2" ry="2" />
<text  x="111.94" y="129.5" ></text>
</g>
<g >
<title>SNESSolve (9,885,002 us, 77.66%)</title><rect x="273.6" y="103" width="916.4" height="15.0" fill="rgb(154.038621020167,154.038621020167,138.802548020808)" rx="2" ry="2" />
<text  x="276.57" y="113.5" >SNESSolve</text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (10,861 us, 0.09%)</title><rect x="380.5" y="151" width="1.0" height="15.0" fill="rgb(147.677214521021,159.680453450066,147.677214521021)" rx="2" ry="2" />
<text  x="383.46" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (5,955 us, 0.05%)</title><rect x="379.9" y="183" width="0.6" height="15.0" fill="rgb(142.108821528197,160.586936030294,142.108821528197)" rx="2" ry="2" />
<text  x="382.90" y="193.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (5,955 us, 0.05%)</title><rect x="379.9" y="199" width="0.6" height="15.0" fill="rgb(151.585242890934,151.585242890934,126.913100163759)" rx="2" ry="2" />
<text  x="382.90" y="209.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (6,433 us, 0.05%)</title><rect x="269.7" y="135" width="0.6" height="15.0" fill="rgb(148.269744855475,148.269744855475,110.845686607304)" rx="2" ry="2" />
<text  x="272.69" y="145.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (10,861 us, 0.09%)</title><rect x="380.5" y="167" width="1.0" height="15.0" fill="rgb(126.091015120068,126.091015120068,151.824067442594)" rx="2" ry="2" />
<text  x="383.46" y="177.5" ></text>
</g>
<g >
<title>firedrake.utility_meshes.RectangleMesh (2,033 us, 0.02%)</title><rect x="270.3" y="87" width="0.2" height="15.0" fill="rgb(148.018972641297,148.018972641297,109.630405877057)" rx="2" ry="2" />
<text  x="273.29" y="97.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (6,086 us, 0.05%)</title><rect x="1189.4" y="151" width="0.6" height="15.0" fill="rgb(135.701834299106,152.218994077546,152.218994077546)" rx="2" ry="2" />
<text  x="1192.44" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (6,433 us, 0.05%)</title><rect x="269.7" y="119" width="0.6" height="15.0" fill="rgb(148.680469945668,159.517132799542,148.680469945668)" rx="2" ry="2" />
<text  x="272.69" y="129.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (3,564 us, 0.03%)</title><rect x="1189.7" y="167" width="0.3" height="15.0" fill="rgb(148.956648131614,148.956648131614,114.174525560898)" rx="2" ry="2" />
<text  x="1192.67" y="177.5" ></text>
</g>
<g >
<title>firedrake.functionspace.VectorFunctionSpace (6,433 us, 0.05%)</title><rect x="269.7" y="71" width="0.6" height="15.0" fill="rgb(119.538195853527,119.538195853527,150.555779842618)" rx="2" ry="2" />
<text  x="272.69" y="81.5" ></text>
</g>
<g >
<title>firedrake.parloops.par_loop (1,117,458 us, 8.78%)</title><rect x="273.6" y="183" width="103.6" height="15.0" fill="rgb(139.823320500024,153.287527537043,153.287527537043)" rx="2" ry="2" />
<text  x="276.57" y="193.5" >firedrake.p..</text>
</g>
<g >
<title>Log_Event_form1_cell_integral_otherwise (1,677 us, 0.01%)</title><rect x="762.5" y="167" width="0.1" height="15.0" fill="rgb(154.774232463845,154.774232463845,142.367434247865)" rx="2" ry="2" />
<text  x="765.48" y="177.5" ></text>
</g>
<g >
<title>SCForwardElim (1,124,398 us, 8.83%)</title><rect x="273.6" y="151" width="104.2" height="15.0" fill="rgb(131.784293820983,162.26767309891,131.784293820983)" rx="2" ry="2" />
<text  x="276.57" y="161.5" >SCForwardElim</text>
</g>
<g >
<title>firedrake.ufl_expr.action (11,293 us, 0.09%)</title><rect x="270.5" y="87" width="1.0" height="15.0" fill="rgb(124.100953156049,163.518449486225,124.100953156049)" rx="2" ry="2" />
<text  x="273.48" y="97.5" ></text>
</g>
<g >
<title>PCApply (1,124,398 us, 8.83%)</title><rect x="273.6" y="135" width="104.2" height="15.0" fill="rgb(145.105877681472,145.105877681472,155.50436342222)" rx="2" ry="2" />
<text  x="276.57" y="145.5" >PCApply</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (3,350,971 us, 26.33%)</title><rect x="762.6" y="167" width="310.7" height="15.0" fill="rgb(111.308282104958,145.894739804989,145.894739804989)" rx="2" ry="2" />
<text  x="765.63" y="177.5" >pyop2.global_kernel.GlobalKernel.compile</text>
</g>
<g >
<title>firedrake.utility_meshes.SquareMesh (2,033 us, 0.02%)</title><rect x="270.3" y="71" width="0.2" height="15.0" fill="rgb(153.885864451663,126.458294129415,126.458294129415)" rx="2" ry="2" />
<text  x="273.29" y="81.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalProblem.__init__ (13,149 us, 0.10%)</title><rect x="271.5" y="87" width="1.2" height="15.0" fill="rgb(113.752743740786,113.752743740786,149.436014917571)" rx="2" ry="2" />
<text  x="274.52" y="97.5" ></text>
</g>
<g >
<title>SNESFunctionEval (7,857,641 us, 61.74%)</title><rect x="461.5" y="119" width="728.5" height="15.0" fill="rgb(118.308017335251,118.308017335251,150.317680774565)" rx="2" ry="2" />
<text  x="464.52" y="129.5" >SNESFunctionEval</text>
</g>
</g>
</svg>
