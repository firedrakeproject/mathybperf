<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="299" onload="init(evt)" viewBox="0 0 1200 299" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:13px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:18px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 13 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (1 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="299.0" fill="url(#background)"  />
<text id="title" x="600.00" y="26" >Firedrake example</text>
<text id="details" x="10.00" y="281" > </text>
<text id="unzoom" x="10.00" y="26" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="26" >Search</text>
<text id="ignorecase" x="1174.00" y="26" >ic</text>
<text id="matched" x="1090.00" y="281" > </text>
<g id="frames">
<g >
<title>SNESFunctionEval (6,188,901 us, 17.13%)</title><rect x="987.9" y="119" width="202.1" height="15.0" fill="rgb(156.262234351395,144.677130027362,144.677130027362)" rx="2" ry="2" />
<text  x="990.85" y="129.5" >SNESFunctionEval</text>
</g>
<g >
<title>CreateExtMesh (1,140,901 us, 3.16%)</title><rect x="10.0" y="71" width="37.3" height="15.0" fill="rgb(125.185748018799,163.341854973684,125.185748018799)" rx="2" ry="2" />
<text  x="13.00" y="81.5" >Cr..</text>
</g>
<g >
<title>CreateFunctionSpace (12,109 us, 0.03%)</title><rect x="956.5" y="151" width="0.4" height="15.0" fill="rgb(145.209142416588,160.082232629858,145.209142416588)" rx="2" ry="2" />
<text  x="959.50" y="161.5" ></text>
</g>
<g >
<title>firedrake.interpolation.make_interpolator (23,049 us, 0.06%)</title><rect x="957.1" y="151" width="0.8" height="15.0" fill="rgb(156.754327737364,148.449845986457,148.449845986457)" rx="2" ry="2" />
<text  x="960.10" y="161.5" ></text>
</g>
<g >
<title>firedrake.assemble.assemble_form (25,030,631 us, 69.29%)</title><rect x="138.2" y="199" width="817.6" height="15.0" fill="rgb(146.205677806234,146.205677806234,155.717227962497)" rx="2" ry="2" />
<text  x="141.22" y="209.5" >firedrake.assemble.assemble_form</text>
</g>
<g >
<title>firedrake.assemble.assemble (6,188,901 us, 17.13%)</title><rect x="987.9" y="135" width="202.1" height="15.0" fill="rgb(149.279037888181,135.652534588464,149.279037888181)" rx="2" ry="2" />
<text  x="990.85" y="145.5" >firedrake.assemble.assem..</text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (10,536,810 us, 29.17%)</title><rect x="611.6" y="247" width="344.2" height="15.0" fill="rgb(155.406122990524,138.113609594019,138.113609594019)" rx="2" ry="2" />
<text  x="614.62" y="257.5" >firedrake.tsfc_interface.compile_form</text>
</g>
<g >
<title>PCApply (26,118,420 us, 72.30%)</title><rect x="102.7" y="135" width="853.1" height="15.0" fill="rgb(152.526814449445,152.526814449445,131.476100793464)" rx="2" ry="2" />
<text  x="105.69" y="145.5" >PCApply</text>
</g>
<g >
<title>HybridInit (981,820 us, 2.72%)</title><rect x="955.8" y="135" width="32.1" height="15.0" fill="rgb(150.112208556395,150.112208556395,119.774549157912)" rx="2" ry="2" />
<text  x="958.79" y="145.5" >Hy..</text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (6,322 us, 0.02%)</title><rect x="956.9" y="183" width="0.2" height="15.0" fill="rgb(150.460387149398,150.460387149398,121.461876185542)" rx="2" ry="2" />
<text  x="959.90" y="193.5" ></text>
</g>
<g >
<title>firedrake.slate.slac.compiler.compile_expression (16,458,267 us, 45.56%)</title><rect x="418.2" y="215" width="537.6" height="15.0" fill="rgb(150.960933291429,159.145894580465,150.960933291429)" rx="2" ry="2" />
<text  x="421.21" y="225.5" >firedrake.slate.slac.compiler.compile_expression</text>
</g>
<g >
<title>firedrake.functionspace.MixedFunctionSpace (4,669 us, 0.01%)</title><rect x="956.5" y="167" width="0.2" height="15.0" fill="rgb(153.847866292116,126.166974906221,126.166974906221)" rx="2" ry="2" />
<text  x="959.50" y="177.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (7,440 us, 0.02%)</title><rect x="956.7" y="199" width="0.2" height="15.0" fill="rgb(143.234903711104,160.403620326099,143.234903711104)" rx="2" ry="2" />
<text  x="959.65" y="209.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (7,440 us, 0.02%)</title><rect x="956.7" y="167" width="0.2" height="15.0" fill="rgb(134.150924132362,161.882407699383,134.150924132362)" rx="2" ry="2" />
<text  x="959.65" y="177.5" ></text>
</g>
<g >
<title>firedrake.assemble.allocate_matrix (6,775 us, 0.02%)</title><rect x="102.5" y="87" width="0.2" height="15.0" fill="rgb(154.397964517195,130.384394631827,130.384394631827)" rx="2" ry="2" />
<text  x="105.47" y="97.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.solve (33,289,141 us, 92.15%)</title><rect x="102.7" y="87" width="1087.3" height="15.0" fill="rgb(133.462772588023,133.462772588023,153.250859210585)" rx="2" ry="2" />
<text  x="105.69" y="97.5" >firedrake.variational_solver.NonlinearVariationalSolver.solve</text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (8,123 us, 0.02%)</title><rect x="47.0" y="135" width="0.3" height="15.0" fill="rgb(106.892928463041,144.750018490418,144.750018490418)" rx="2" ry="2" />
<text  x="50.00" y="145.5" ></text>
</g>
<g >
<title>firedrake.parloops.par_loop (918,396 us, 2.54%)</title><rect x="957.9" y="151" width="30.0" height="15.0" fill="rgb(151.64512561151,151.64512561151,127.203301040396)" rx="2" ry="2" />
<text  x="960.86" y="161.5" >f..</text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.__init__ (6,775 us, 0.02%)</title><rect x="102.5" y="71" width="0.2" height="15.0" fill="rgb(115.326570076579,146.936518168002,146.936518168002)" rx="2" ry="2" />
<text  x="105.47" y="81.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (11,677 us, 0.03%)</title><rect x="47.3" y="71" width="0.3" height="15.0" fill="rgb(145.000318630817,124.688316491469,145.000318630817)" rx="2" ry="2" />
<text  x="50.26" y="81.5" ></text>
</g>
<g >
<title>HybridBreak (1,087,789 us, 3.01%)</title><rect x="102.7" y="167" width="35.5" height="15.0" fill="rgb(119.351755218665,147.980084686321,147.980084686321)" rx="2" ry="2" />
<text  x="105.69" y="177.5" >Hy..</text>
</g>
<g >
<title>SCForwardElim (26,118,420 us, 72.30%)</title><rect x="102.7" y="151" width="853.1" height="15.0" fill="rgb(155.380254531097,137.915284738411,137.915284738411)" rx="2" ry="2" />
<text  x="105.69" y="161.5" >SCForwardElim</text>
</g>
<g >
<title>ParLoopExecute (1,094,941 us, 3.03%)</title><rect x="11.2" y="103" width="35.8" height="15.0" fill="rgb(126.735797392173,126.735797392173,151.948864011388)" rx="2" ry="2" />
<text  x="14.24" y="113.5" >Pa..</text>
</g>
<g >
<title>firedrake.variational_solver.LinearVariationalProblem.__init__ (19,267 us, 0.05%)</title><rect x="101.8" y="71" width="0.7" height="15.0" fill="rgb(120.878249186272,148.375842381626,148.375842381626)" rx="2" ry="2" />
<text  x="104.84" y="81.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (8,123 us, 0.02%)</title><rect x="47.0" y="151" width="0.3" height="15.0" fill="rgb(138.025246099718,138.025246099718,154.133918599945)" rx="2" ry="2" />
<text  x="50.00" y="161.5" ></text>
</g>
<g >
<title>firedrake.__init__ (1,653,663 us, 4.58%)</title><rect x="47.6" y="71" width="54.1" height="15.0" fill="rgb(155.847478209938,141.49733294286,141.49733294286)" rx="2" ry="2" />
<text  x="50.65" y="81.5" >fired..</text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (6,322 us, 0.02%)</title><rect x="956.9" y="151" width="0.2" height="15.0" fill="rgb(134.038846371635,96.5995438273151,134.038846371635)" rx="2" ry="2" />
<text  x="959.90" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspace.VectorFunctionSpace (8,123 us, 0.02%)</title><rect x="47.0" y="87" width="0.3" height="15.0" fill="rgb(133.754617643767,133.754617643767,153.307345350407)" rx="2" ry="2" />
<text  x="50.00" y="97.5" ></text>
</g>
<g >
<title>ParLoop_Cells_wrap_form0_cell_integral_otherwise (11,954 us, 0.03%)</title><rect x="988.0" y="183" width="0.4" height="15.0" fill="rgb(118.607777212673,118.607777212673,150.375698815356)" rx="2" ry="2" />
<text  x="991.00" y="193.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.action (10,424 us, 0.03%)</title><rect x="101.8" y="87" width="0.4" height="15.0" fill="rgb(131.428837599794,162.32553806515,131.428837599794)" rx="2" ry="2" />
<text  x="104.84" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (11,677 us, 0.03%)</title><rect x="47.3" y="119" width="0.3" height="15.0" fill="rgb(133.431997199365,133.431997199365,153.244902683748)" rx="2" ry="2" />
<text  x="50.26" y="129.5" ></text>
</g>
<g >
<title>all (36,126,865 us, 100%)</title><rect x="10.0" y="39" width="1180.0" height="15.0" fill="rgb(119.172035707166,119.172035707166,150.484910136871)" rx="2" ry="2" />
<text  x="13.00" y="49.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (8,123 us, 0.02%)</title><rect x="47.0" y="103" width="0.3" height="15.0" fill="rgb(153.85463134773,126.218840332596,126.218840332596)" rx="2" ry="2" />
<text  x="50.00" y="113.5" ></text>
</g>
<g >
<title>firedrake.slate.slac.compiler.generate_loopy_kernel (15,288,196 us, 42.32%)</title><rect x="456.4" y="231" width="499.4" height="15.0" fill="rgb(116.614361326299,147.270389973485,147.270389973485)" rx="2" ry="2" />
<text  x="459.43" y="241.5" >firedrake.slate.slac.compiler.generate_loopy_kernel</text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (11,677 us, 0.03%)</title><rect x="47.3" y="103" width="0.3" height="15.0" fill="rgb(142.246568057032,117.631830646145,142.246568057032)" rx="2" ry="2" />
<text  x="50.26" y="113.5" ></text>
</g>
<g >
<title>pyop2.parloop.JITModule.compile (1,081,950 us, 2.99%)</title><rect x="102.9" y="215" width="35.3" height="15.0" fill="rgb(143.923155440726,143.923155440726,155.275449440141)" rx="2" ry="2" />
<text  x="105.88" y="225.5" >py..</text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (6,322 us, 0.02%)</title><rect x="956.9" y="167" width="0.2" height="15.0" fill="rgb(149.526259880645,149.526259880645,116.934951729279)" rx="2" ry="2" />
<text  x="959.90" y="177.5" ></text>
</g>
<g >
<title>perfsolve (33,289,141 us, 92.15%)</title><rect x="102.7" y="71" width="1087.3" height="15.0" fill="rgb(137.818441533641,106.284756429956,137.818441533641)" rx="2" ry="2" />
<text  x="105.69" y="81.5" >perfsolve</text>
</g>
<g >
<title>ParLoopExecute (912,038 us, 2.52%)</title><rect x="958.1" y="167" width="29.8" height="15.0" fill="rgb(149.137277409647,149.137277409647,115.049882831365)" rx="2" ry="2" />
<text  x="961.06" y="177.5" >P..</text>
</g>
<g >
<title>ParLoopExecute (8,567,287 us, 23.71%)</title><rect x="138.4" y="215" width="279.8" height="15.0" fill="rgb(155.176432833917,136.352651726693,136.352651726693)" rx="2" ry="2" />
<text  x="141.38" y="225.5" >ParLoopExecute</text>
</g>
<g >
<title>ParLoopExecute (5,275,680 us, 14.60%)</title><rect x="987.9" y="167" width="172.3" height="15.0" fill="rgb(131.068474162123,162.384201880585,131.068474162123)" rx="2" ry="2" />
<text  x="990.85" y="177.5" >ParLoopExecute</text>
</g>
<g >
<title>firedrake.slate.slac.optimise.optimise (22,269 us, 0.06%)</title><rect x="610.9" y="247" width="0.7" height="15.0" fill="rgb(129.937295457623,150.724484007532,150.724484007532)" rx="2" ry="2" />
<text  x="613.90" y="257.5" ></text>
</g>
<g >
<title>firedrake (36,126,865 us, 100.00%)</title><rect x="10.0" y="55" width="1180.0" height="15.0" fill="rgb(111.571953720484,145.963099112718,145.963099112718)" rx="2" ry="2" />
<text  x="13.00" y="65.5" >firedrake</text>
</g>
<g >
<title>pyop2.parloop.JITModule.compile (912,038 us, 2.52%)</title><rect x="958.1" y="183" width="29.8" height="15.0" fill="rgb(155.944605366987,142.241974480234,142.241974480234)" rx="2" ry="2" />
<text  x="961.06" y="193.5" >p..</text>
</g>
<g >
<title>firedrake.parloops.par_loop (1,087,789 us, 3.01%)</title><rect x="102.7" y="183" width="35.5" height="15.0" fill="rgb(140.75543127774,153.529185886821,153.529185886821)" rx="2" ry="2" />
<text  x="105.69" y="193.5" >fi..</text>
</g>
<g >
<title>CreateFunctionSpace (6,322 us, 0.02%)</title><rect x="956.9" y="199" width="0.2" height="15.0" fill="rgb(155.234406555005,136.797116921707,136.797116921707)" rx="2" ry="2" />
<text  x="959.90" y="209.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (5,441 us, 0.02%)</title><rect x="101.7" y="119" width="0.1" height="15.0" fill="rgb(142.650816398265,160.498704307259,142.650816398265)" rx="2" ry="2" />
<text  x="104.66" y="129.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalProblem.__init__ (8,843 us, 0.02%)</title><rect x="102.2" y="87" width="0.3" height="15.0" fill="rgb(148.657858331991,148.657858331991,112.726544224264)" rx="2" ry="2" />
<text  x="105.18" y="97.5" ></text>
</g>
<g >
<title>PCSetUp (981,820 us, 2.72%)</title><rect x="955.8" y="119" width="32.1" height="15.0" fill="rgb(142.228664698473,160.567426676993,142.228664698473)" rx="2" ry="2" />
<text  x="958.79" y="129.5" >PC..</text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (8,843 us, 0.02%)</title><rect x="102.2" y="103" width="0.3" height="15.0" fill="rgb(148.696669633142,148.696669633142,112.91462976061)" rx="2" ry="2" />
<text  x="105.18" y="113.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (5,441 us, 0.02%)</title><rect x="101.7" y="103" width="0.1" height="15.0" fill="rgb(117.170175750148,117.170175750148,150.097453370996)" rx="2" ry="2" />
<text  x="104.66" y="113.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (5,441 us, 0.02%)</title><rect x="101.7" y="87" width="0.1" height="15.0" fill="rgb(133.008751230049,162.068342823015,133.008751230049)" rx="2" ry="2" />
<text  x="104.66" y="97.5" ></text>
</g>
<g >
<title>KSPSolve (26,118,420 us, 72.30%)</title><rect x="102.7" y="119" width="853.1" height="15.0" fill="rgb(152.042383230684,112.324938101914,112.324938101914)" rx="2" ry="2" />
<text  x="105.69" y="129.5" >KSPSolve</text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (913,221 us, 2.53%)</title><rect x="1160.2" y="167" width="29.8" height="15.0" fill="rgb(151.572618674711,151.572618674711,126.851921269756)" rx="2" ry="2" />
<text  x="1163.17" y="177.5" >f..</text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (11,677 us, 0.03%)</title><rect x="47.3" y="87" width="0.3" height="15.0" fill="rgb(150.321343370867,150.321343370867,120.788048643432)" rx="2" ry="2" />
<text  x="50.26" y="97.5" ></text>
</g>
<g >
<title>firedrake.matrix_free.operators.ImplicitMatrixContext.__init__ (6,775 us, 0.02%)</title><rect x="102.5" y="103" width="0.2" height="15.0" fill="rgb(153.309155638866,153.309155638866,135.267446557579)" rx="2" ry="2" />
<text  x="105.47" y="113.5" ></text>
</g>
<g >
<title>pyop2.parloop.JITModule.compile (5,259,337 us, 14.56%)</title><rect x="988.4" y="183" width="171.8" height="15.0" fill="rgb(133.594597145967,133.594597145967,153.276373641155)" rx="2" ry="2" />
<text  x="991.39" y="193.5" >pyop2.parloop.JITMod..</text>
</g>
<g >
<title>HybridRHS (25,030,631 us, 69.29%)</title><rect x="138.2" y="167" width="817.6" height="15.0" fill="rgb(152.335193786141,152.335193786141,130.547477578991)" rx="2" ry="2" />
<text  x="141.22" y="177.5" >HybridRHS</text>
</g>
<g >
<title>firedrake.functionspace.VectorFunctionSpace (5,441 us, 0.02%)</title><rect x="101.7" y="71" width="0.1" height="15.0" fill="rgb(135.362794675551,161.685126448166,135.362794675551)" rx="2" ry="2" />
<text  x="104.66" y="81.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (5,482 us, 0.02%)</title><rect x="1189.8" y="183" width="0.2" height="15.0" fill="rgb(149.482616207718,159.386550849906,149.482616207718)" rx="2" ry="2" />
<text  x="1192.82" y="193.5" ></text>
</g>
<g >
<title>pyop2.parloop.JITModule.compile (8,567,287 us, 23.71%)</title><rect x="138.4" y="231" width="279.8" height="15.0" fill="rgb(105.776821147592,144.460657334561,144.460657334561)" rx="2" ry="2" />
<text  x="141.38" y="241.5" >pyop2.parloop.JITModule.compile</text>
</g>
<g >
<title>ParLoopExecute (1,081,950 us, 2.99%)</title><rect x="102.9" y="199" width="35.3" height="15.0" fill="rgb(122.207236328624,148.720394603717,148.720394603717)" rx="2" ry="2" />
<text  x="105.88" y="209.5" >Pa..</text>
</g>
<g >
<title>firedrake.assemble.assemble_form (6,188,901 us, 17.13%)</title><rect x="987.9" y="151" width="202.1" height="15.0" fill="rgb(152.314589293666,114.411851251437,114.411851251437)" rx="2" ry="2" />
<text  x="990.85" y="161.5" >firedrake.assemble.assem..</text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (5,441 us, 0.02%)</title><rect x="101.7" y="135" width="0.1" height="15.0" fill="rgb(130.667232334874,130.667232334874,152.709786903524)" rx="2" ry="2" />
<text  x="104.66" y="145.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (8,123 us, 0.02%)</title><rect x="47.0" y="119" width="0.3" height="15.0" fill="rgb(129.505248268876,150.612471773412,150.612471773412)" rx="2" ry="2" />
<text  x="50.00" y="129.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (7,440 us, 0.02%)</title><rect x="956.7" y="183" width="0.2" height="15.0" fill="rgb(112.92763757096,146.314572703582,146.314572703582)" rx="2" ry="2" />
<text  x="959.65" y="193.5" ></text>
</g>
<g >
<title>firedrake.extrusion_utils.make_extruded_coords (1,132,778 us, 3.14%)</title><rect x="10.0" y="87" width="37.0" height="15.0" fill="rgb(142.032479838282,160.599363747256,142.032479838282)" rx="2" ry="2" />
<text  x="13.00" y="97.5" >fi..</text>
</g>
<g >
<title>SNESSolve (33,289,141 us, 92.15%)</title><rect x="102.7" y="103" width="1087.3" height="15.0" fill="rgb(148.602818359813,148.602818359813,112.459812051401)" rx="2" ry="2" />
<text  x="105.69" y="113.5" >SNESSolve</text>
</g>
<g >
<title>pyop2.parloop.JITModule.compile (1,094,941 us, 3.03%)</title><rect x="11.2" y="119" width="35.8" height="15.0" fill="rgb(126.879031636934,163.066204152127,126.879031636934)" rx="2" ry="2" />
<text  x="14.24" y="129.5" >py..</text>
</g>
<g >
<title>firedrake.assemble.assemble (25,030,631 us, 69.29%)</title><rect x="138.2" y="183" width="817.6" height="15.0" fill="rgb(152.722251792836,152.722251792836,132.423220226822)" rx="2" ry="2" />
<text  x="141.22" y="193.5" >firedrake.assemble.assemble</text>
</g>
</g>
</svg>
