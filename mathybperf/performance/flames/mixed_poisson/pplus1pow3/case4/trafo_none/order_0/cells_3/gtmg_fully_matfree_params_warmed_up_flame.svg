<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="299" onload="init(evt)" viewBox="0 0 1200 299" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:13px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:18px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 13 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (1 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="299.0" fill="url(#background)"  />
<text id="title" x="600.00" y="26" >Firedrake example</text>
<text id="details" x="10.00" y="281" > </text>
<text id="unzoom" x="10.00" y="26" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="26" >Search</text>
<text id="ignorecase" x="1174.00" y="26" >ic</text>
<text id="matched" x="1090.00" y="281" > </text>
<g id="frames">
<g >
<title>firedrake.variational_solver.NonlinearVariationalProblem.__init__ (11,781 us, 0.09%)</title><rect x="210.1" y="87" width="1.1" height="15.0" fill="rgb(138.968562264984,161.098141026631,138.968562264984)" rx="2" ry="2" />
<text  x="213.14" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (7,317 us, 0.06%)</title><rect x="208.1" y="119" width="0.6" height="15.0" fill="rgb(153.489761830349,153.489761830349,136.142691947074)" rx="2" ry="2" />
<text  x="211.06" y="129.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.__init__ (8,591 us, 0.07%)</title><rect x="211.2" y="71" width="0.8" height="15.0" fill="rgb(152.039657361815,152.039657361815,129.115262599567)" rx="2" ry="2" />
<text  x="214.24" y="81.5" ></text>
</g>
<g >
<title>firedrake.parloops.par_loop (5,153 us, 0.04%)</title><rect x="1185.3" y="151" width="0.5" height="15.0" fill="rgb(150.642812909079,150.642812909079,122.345939482462)" rx="2" ry="2" />
<text  x="1188.33" y="161.5" ></text>
</g>
<g >
<title>HybridBreak (6,505 us, 0.05%)</title><rect x="212.0" y="167" width="0.6" height="15.0" fill="rgb(127.611605326465,162.94694797011,127.611605326465)" rx="2" ry="2" />
<text  x="215.04" y="177.5" ></text>
</g>
<g >
<title>CreateMesh (2,480 us, 0.02%)</title><rect x="23.5" y="71" width="0.2" height="15.0" fill="rgb(135.386969287887,135.386969287887,153.623284378301)" rx="2" ry="2" />
<text  x="26.46" y="81.5" ></text>
</g>
<g >
<title>HybridRHS (10,382,659 us, 81.99%)</title><rect x="212.6" y="167" width="967.6" height="15.0" fill="rgb(156.171997202014,143.98531188211,143.98531188211)" rx="2" ry="2" />
<text  x="215.64" y="177.5" >HybridRHS</text>
</g>
<g >
<title>firedrake.assemble.assemble_form (44,912 us, 0.35%)</title><rect x="1185.8" y="151" width="4.2" height="15.0" fill="rgb(152.571725457922,152.571725457922,131.693746449931)" rx="2" ry="2" />
<text  x="1188.81" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspace.VectorFunctionSpace (7,317 us, 0.06%)</title><rect x="208.1" y="71" width="0.6" height="15.0" fill="rgb(152.092285166646,112.707519610953,112.707519610953)" rx="2" ry="2" />
<text  x="211.06" y="81.5" ></text>
</g>
<g >
<title>firedrake.assemble.assemble_form (10,382,659 us, 81.99%)</title><rect x="212.6" y="199" width="967.6" height="15.0" fill="rgb(122.126672468634,122.126672468634,151.05677531651)" rx="2" ry="2" />
<text  x="215.64" y="209.5" >firedrake.assemble.assemble_form</text>
</g>
<g >
<title>firedrake.assemble.assemble (44,912 us, 0.35%)</title><rect x="1185.8" y="135" width="4.2" height="15.0" fill="rgb(108.563168728189,108.563168728189,148.431581044166)" rx="2" ry="2" />
<text  x="1188.81" y="145.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.LinearVariationalProblem.__init__ (23,894 us, 0.19%)</title><rect x="209.0" y="71" width="2.2" height="15.0" fill="rgb(124.872385048617,163.392867550225,124.872385048617)" rx="2" ry="2" />
<text  x="212.01" y="81.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (7,317 us, 0.06%)</title><rect x="208.1" y="103" width="0.6" height="15.0" fill="rgb(149.781952325944,149.781952325944,118.174076656499)" rx="2" ry="2" />
<text  x="211.06" y="113.5" ></text>
</g>
<g >
<title>KSPSolve (10,389,164 us, 82.05%)</title><rect x="212.0" y="119" width="968.2" height="15.0" fill="rgb(145.653284374529,154.798999652656,154.798999652656)" rx="2" ry="2" />
<text  x="215.04" y="129.5" >KSPSolve</text>
</g>
<g >
<title>firedrake.parloops.par_loop (6,505 us, 0.05%)</title><rect x="212.0" y="183" width="0.6" height="15.0" fill="rgb(124.986448956335,124.986448956335,151.610280443162)" rx="2" ry="2" />
<text  x="215.04" y="193.5" ></text>
</g>
<g >
<title>firedrake.assemble.assemble (10,382,659 us, 81.99%)</title><rect x="212.6" y="183" width="967.6" height="15.0" fill="rgb(153.39901550402,153.39901550402,135.702921288713)" rx="2" ry="2" />
<text  x="215.64" y="193.5" >firedrake.assemble.assemble</text>
</g>
<g >
<title>ParLoopExecute (81,341 us, 0.64%)</title><rect x="13.7" y="103" width="7.5" height="15.0" fill="rgb(155.398583291448,155.398583291448,145.3931344124)" rx="2" ry="2" />
<text  x="16.67" y="113.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (6,771 us, 0.05%)</title><rect x="21.2" y="119" width="0.7" height="15.0" fill="rgb(134.963156355204,134.963156355204,153.541256068749)" rx="2" ry="2" />
<text  x="24.25" y="129.5" ></text>
</g>
<g >
<title>firedrake.utility_meshes.RectangleMesh (2,875 us, 0.02%)</title><rect x="208.7" y="87" width="0.3" height="15.0" fill="rgb(152.480804112149,115.686164859809,115.686164859809)" rx="2" ry="2" />
<text  x="211.74" y="97.5" ></text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (34,637 us, 0.27%)</title><rect x="1186.8" y="167" width="3.2" height="15.0" fill="rgb(145.451208583562,145.451208583562,155.571201661334)" rx="2" ry="2" />
<text  x="1189.77" y="177.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (5,742 us, 0.05%)</title><rect x="1189.5" y="183" width="0.5" height="15.0" fill="rgb(131.280297089797,162.349719078405,131.280297089797)" rx="2" ry="2" />
<text  x="1192.46" y="193.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (7,317 us, 0.06%)</title><rect x="208.1" y="87" width="0.6" height="15.0" fill="rgb(128.352049581705,162.826410533211,128.352049581705)" rx="2" ry="2" />
<text  x="211.06" y="97.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (1,554 us, 0.01%)</title><rect x="1189.9" y="215" width="0.1" height="15.0" fill="rgb(153.381895731625,122.594533942456,122.594533942456)" rx="2" ry="2" />
<text  x="1192.86" y="225.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (6,771 us, 0.05%)</title><rect x="21.2" y="151" width="0.7" height="15.0" fill="rgb(155.549377015399,139.211890451394,139.211890451394)" rx="2" ry="2" />
<text  x="24.25" y="161.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (5,118 us, 0.04%)</title><rect x="1181.5" y="151" width="0.5" height="15.0" fill="rgb(127.361522445784,162.987659136733,127.361522445784)" rx="2" ry="2" />
<text  x="1184.50" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (15,439 us, 0.12%)</title><rect x="22.0" y="103" width="1.5" height="15.0" fill="rgb(146.928728665015,159.802299984765,146.928728665015)" rx="2" ry="2" />
<text  x="25.02" y="113.5" ></text>
</g>
<g >
<title>PCSetUp (60,479 us, 0.48%)</title><rect x="1180.2" y="119" width="5.6" height="15.0" fill="rgb(154.740169607067,154.740169607067,142.202360403477)" rx="2" ry="2" />
<text  x="1183.18" y="129.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (1,872 us, 0.01%)</title><rect x="1182.6" y="215" width="0.2" height="15.0" fill="rgb(155.199453714019,155.199453714019,144.428121844863)" rx="2" ry="2" />
<text  x="1185.58" y="225.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (10,155 us, 0.08%)</title><rect x="210.3" y="103" width="0.9" height="15.0" fill="rgb(156.74293605774,148.362509776007,148.362509776007)" rx="2" ry="2" />
<text  x="213.29" y="113.5" ></text>
</g>
<g >
<title>pyop2.parloop.JITModule.compile (9,827,663 us, 77.61%)</title><rect x="212.9" y="231" width="915.9" height="15.0" fill="rgb(153.915913047444,126.688666697071,126.688666697071)" rx="2" ry="2" />
<text  x="215.93" y="241.5" >pyop2.parloop.JITModule.compile</text>
</g>
<g >
<title>firedrake.interpolation.make_interpolator (27,713 us, 0.22%)</title><rect x="1182.8" y="151" width="2.5" height="15.0" fill="rgb(148.201156034245,148.201156034245,110.513294627497)" rx="2" ry="2" />
<text  x="1185.75" y="161.5" ></text>
</g>
<g >
<title>SNESFunctionEval (44,912 us, 0.35%)</title><rect x="1185.8" y="119" width="4.2" height="15.0" fill="rgb(152.912230733526,118.993768957033,118.993768957033)" rx="2" ry="2" />
<text  x="1188.81" y="129.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (15,439 us, 0.12%)</title><rect x="22.0" y="87" width="1.5" height="15.0" fill="rgb(152.186354264841,113.42871603045,113.42871603045)" rx="2" ry="2" />
<text  x="25.02" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspace.MixedFunctionSpace (1,462 us, 0.01%)</title><rect x="1181.5" y="167" width="0.1" height="15.0" fill="rgb(110.193463538401,110.193463538401,148.747121975174)" rx="2" ry="2" />
<text  x="1184.50" y="177.5" ></text>
</g>
<g >
<title>firedrake.extrusion_utils.make_extruded_coords (118,334 us, 0.93%)</title><rect x="10.2" y="87" width="11.0" height="15.0" fill="rgb(129.846333046869,150.700901160299,150.700901160299)" rx="2" ry="2" />
<text  x="13.22" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (3,656 us, 0.03%)</title><rect x="1181.6" y="199" width="0.4" height="15.0" fill="rgb(123.634129027607,149.090329747898,149.090329747898)" rx="2" ry="2" />
<text  x="1184.64" y="209.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.action (12,113 us, 0.10%)</title><rect x="209.0" y="87" width="1.1" height="15.0" fill="rgb(140.203555695012,140.203555695012,154.555526908712)" rx="2" ry="2" />
<text  x="212.01" y="97.5" ></text>
</g>
<g >
<title>firedrake.assemble.allocate_matrix (7,129 us, 0.06%)</title><rect x="211.4" y="87" width="0.6" height="15.0" fill="rgb(147.776280173418,159.664326483397,147.776280173418)" rx="2" ry="2" />
<text  x="214.37" y="97.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (6,771 us, 0.05%)</title><rect x="21.2" y="103" width="0.7" height="15.0" fill="rgb(155.623592986848,155.623592986848,146.483566013187)" rx="2" ry="2" />
<text  x="24.25" y="113.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (4,187 us, 0.03%)</title><rect x="1182.4" y="199" width="0.4" height="15.0" fill="rgb(133.607648292302,151.676056964671,151.676056964671)" rx="2" ry="2" />
<text  x="1185.36" y="209.5" ></text>
</g>
<g >
<title>firedrake.matrix_free.operators.ImplicitMatrixContext.__init__ (7,129 us, 0.06%)</title><rect x="211.4" y="103" width="0.6" height="15.0" fill="rgb(134.459423438253,134.459423438253,153.443759375146)" rx="2" ry="2" />
<text  x="214.37" y="113.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (2,577 us, 0.02%)</title><rect x="211.8" y="119" width="0.2" height="15.0" fill="rgb(124.386487357416,149.285385611182,149.285385611182)" rx="2" ry="2" />
<text  x="214.80" y="129.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (3,656 us, 0.03%)</title><rect x="1181.6" y="167" width="0.4" height="15.0" fill="rgb(122.054848118354,122.054848118354,151.042873829359)" rx="2" ry="2" />
<text  x="1184.64" y="177.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (6,771 us, 0.05%)</title><rect x="21.2" y="135" width="0.7" height="15.0" fill="rgb(138.70737454204,152.998208214603,152.998208214603)" rx="2" ry="2" />
<text  x="24.25" y="145.5" ></text>
</g>
<g >
<title>ParLoop_Cells_wrap_form0_cell_integral_otherwise (6,952 us, 0.05%)</title><rect x="1186.0" y="183" width="0.6" height="15.0" fill="rgb(155.584675719968,139.482513853092,139.482513853092)" rx="2" ry="2" />
<text  x="1188.98" y="193.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.solve (10,494,555 us, 82.88%)</title><rect x="212.0" y="87" width="978.0" height="15.0" fill="rgb(135.525929112955,152.173389029285,152.173389029285)" rx="2" ry="2" />
<text  x="215.04" y="97.5" >firedrake.variational_solver.NonlinearVariationalSolver.solve</text>
</g>
<g >
<title>PCApply (10,389,164 us, 82.05%)</title><rect x="212.0" y="135" width="968.2" height="15.0" fill="rgb(153.438091417302,153.438091417302,135.892289176157)" rx="2" ry="2" />
<text  x="215.04" y="145.5" >PCApply</text>
</g>
<g >
<title>firedrake (12,662,614 us, 100.00%)</title><rect x="10.0" y="55" width="1180.0" height="15.0" fill="rgb(136.396011700809,136.396011700809,153.818582909834)" rx="2" ry="2" />
<text  x="13.00" y="65.5" >firedrake</text>
</g>
<g >
<title>pyop2.parloop.JITModule.compile (81,341 us, 0.64%)</title><rect x="13.7" y="119" width="7.5" height="15.0" fill="rgb(115.240799651825,146.914281391214,146.914281391214)" rx="2" ry="2" />
<text  x="16.67" y="129.5" ></text>
</g>
<g >
<title>firedrake.functionspace.VectorFunctionSpace (6,771 us, 0.05%)</title><rect x="21.2" y="87" width="0.7" height="15.0" fill="rgb(128.386429914893,128.386429914893,152.26834127385)" rx="2" ry="2" />
<text  x="24.25" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (1,872 us, 0.01%)</title><rect x="1182.6" y="247" width="0.2" height="15.0" fill="rgb(155.985040505794,142.551977211089,142.551977211089)" rx="2" ry="2" />
<text  x="1185.58" y="257.5" ></text>
</g>
<g >
<title>SCForwardElim (10,389,164 us, 82.05%)</title><rect x="212.0" y="151" width="968.2" height="15.0" fill="rgb(134.890887202187,98.7828984556053,134.890887202187)" rx="2" ry="2" />
<text  x="215.04" y="161.5" >SCForwardElim</text>
</g>
<g >
<title>SNESSolve (10,494,555 us, 82.88%)</title><rect x="212.0" y="103" width="978.0" height="15.0" fill="rgb(136.936637748965,104.025134231723,136.936637748965)" rx="2" ry="2" />
<text  x="215.04" y="113.5" >SNESSolve</text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (3,656 us, 0.03%)</title><rect x="1181.6" y="183" width="0.4" height="15.0" fill="rgb(152.612455941436,116.695495551013,116.695495551013)" rx="2" ry="2" />
<text  x="1184.64" y="193.5" ></text>
</g>
<g >
<title>perfsolve (10,494,555 us, 82.88%)</title><rect x="212.0" y="71" width="978.0" height="15.0" fill="rgb(129.756404759115,162.597794574098,129.756404759115)" rx="2" ry="2" />
<text  x="215.04" y="81.5" >perfsolve</text>
</g>
<g >
<title>CreateFunctionSpace (16,923 us, 0.13%)</title><rect x="21.9" y="71" width="1.6" height="15.0" fill="rgb(155.793573171788,141.084060983705,141.084060983705)" rx="2" ry="2" />
<text  x="24.88" y="81.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (3,451 us, 0.03%)</title><rect x="1189.7" y="199" width="0.3" height="15.0" fill="rgb(151.094082507723,151.094082507723,124.532861383581)" rx="2" ry="2" />
<text  x="1192.68" y="209.5" ></text>
</g>
<g >
<title>firedrake.mesh.MeshTopology._facets (3,239 us, 0.03%)</title><rect x="208.4" y="151" width="0.3" height="15.0" fill="rgb(138.968003023302,109.230507747212,138.968003023302)" rx="2" ry="2" />
<text  x="211.44" y="161.5" ></text>
</g>
<g >
<title>firedrake.slate.slac.compiler.compile_expression (551,881 us, 4.36%)</title><rect x="1128.8" y="215" width="51.4" height="15.0" fill="rgb(152.022502099927,112.172516099438,112.172516099438)" rx="2" ry="2" />
<text  x="1131.75" y="225.5" >fire..</text>
</g>
<g >
<title>firedrake.__init__ (1,978,495 us, 15.62%)</title><rect x="23.7" y="71" width="184.4" height="15.0" fill="rgb(142.507801825286,160.521985749372,142.507801825286)" rx="2" ry="2" />
<text  x="26.69" y="81.5" >firedrake.__init__</text>
</g>
<g >
<title>firedrake.utility_meshes.SquareMesh (2,875 us, 0.02%)</title><rect x="208.7" y="71" width="0.3" height="15.0" fill="rgb(144.518994029335,123.454922200171,144.518994029335)" rx="2" ry="2" />
<text  x="211.74" y="81.5" ></text>
</g>
<g >
<title>ParLoopExecute (9,827,663 us, 77.61%)</title><rect x="212.9" y="215" width="915.9" height="15.0" fill="rgb(129.96068761488,150.730548640895,150.730548640895)" rx="2" ry="2" />
<text  x="215.93" y="225.5" >ParLoopExecute</text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (6,066 us, 0.05%)</title><rect x="1182.2" y="183" width="0.6" height="15.0" fill="rgb(127.820420889751,162.912954738878,127.820420889751)" rx="2" ry="2" />
<text  x="1185.19" y="193.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (1,872 us, 0.01%)</title><rect x="1182.6" y="231" width="0.2" height="15.0" fill="rgb(150.655207264459,150.655207264459,122.406004435453)" rx="2" ry="2" />
<text  x="1185.58" y="241.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (1,462 us, 0.01%)</title><rect x="1181.5" y="199" width="0.1" height="15.0" fill="rgb(137.43691949194,137.43691949194,154.020048933924)" rx="2" ry="2" />
<text  x="1184.50" y="209.5" ></text>
</g>
<g >
<title>HybridInit (60,479 us, 0.48%)</title><rect x="1180.2" y="135" width="5.6" height="15.0" fill="rgb(137.425855344908,161.349279362457,137.425855344908)" rx="2" ry="2" />
<text  x="1183.18" y="145.5" ></text>
</g>
<g >
<title>all (12,662,614 us, 100%)</title><rect x="10.0" y="39" width="1180.0" height="15.0" fill="rgb(148.06676898687,148.06676898687,109.862034320987)" rx="2" ry="2" />
<text  x="13.00" y="49.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (1,462 us, 0.01%)</title><rect x="1181.5" y="183" width="0.1" height="15.0" fill="rgb(145.613889031427,145.613889031427,155.602688199631)" rx="2" ry="2" />
<text  x="1184.50" y="193.5" ></text>
</g>
<g >
<title>ParLoopExecute (10,275 us, 0.08%)</title><rect x="1185.8" y="167" width="1.0" height="15.0" fill="rgb(110.632810757012,145.71961760367,145.71961760367)" rx="2" ry="2" />
<text  x="1188.81" y="177.5" ></text>
</g>
<g >
<title>CreateExtMesh (127,484 us, 1.01%)</title><rect x="10.0" y="71" width="11.9" height="15.0" fill="rgb(152.366370013292,114.808836768572,114.808836768572)" rx="2" ry="2" />
<text  x="13.00" y="81.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (15,439 us, 0.12%)</title><rect x="22.0" y="119" width="1.5" height="15.0" fill="rgb(153.691660521634,153.691660521634,137.121124066379)" rx="2" ry="2" />
<text  x="25.02" y="129.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.action (4,552 us, 0.04%)</title><rect x="211.4" y="119" width="0.4" height="15.0" fill="rgb(132.393930921419,132.393930921419,153.043986629952)" rx="2" ry="2" />
<text  x="214.37" y="129.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (8,303 us, 0.07%)</title><rect x="1182.0" y="167" width="0.8" height="15.0" fill="rgb(152.776420878088,117.952560065341,117.952560065341)" rx="2" ry="2" />
<text  x="1184.98" y="177.5" ></text>
</g>
<g >
<title>pyop2.parloop.JITModule.compile (1,533 us, 0.01%)</title><rect x="1186.6" y="183" width="0.2" height="15.0" fill="rgb(139.765562345385,160.968396827496,139.765562345385)" rx="2" ry="2" />
<text  x="1189.63" y="193.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (7,317 us, 0.06%)</title><rect x="208.1" y="135" width="0.6" height="15.0" fill="rgb(132.113867368696,151.288780428921,151.288780428921)" rx="2" ry="2" />
<text  x="211.06" y="145.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (8,303 us, 0.07%)</title><rect x="1182.0" y="151" width="0.8" height="15.0" fill="rgb(152.93048343852,119.133706361984,119.133706361984)" rx="2" ry="2" />
<text  x="1184.98" y="161.5" ></text>
</g>
</g>
</svg>
