<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="251" onload="init(evt)" viewBox="0 0 1200 251" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:13px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:18px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 13 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (1 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="251.0" fill="url(#background)"  />
<text id="title" x="600.00" y="26" >Firedrake example</text>
<text id="details" x="10.00" y="233" > </text>
<text id="unzoom" x="10.00" y="26" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="26" >Search</text>
<text id="ignorecase" x="1174.00" y="26" >ic</text>
<text id="matched" x="1090.00" y="233" > </text>
<g id="frames">
<g >
<title>CreateFunctionSpace (13,189 us, 0.05%)</title><rect x="86.4" y="71" width="0.5" height="15.0" fill="rgb(122.063028830452,122.063028830452,151.044457192991)" rx="2" ry="2" />
<text  x="89.37" y="81.5" ></text>
</g>
<g >
<title>CreateSparsity (13,660 us, 0.05%)</title><rect x="900.8" y="167" width="0.5" height="15.0" fill="rgb(155.265138346862,137.03272732594,137.03272732594)" rx="2" ry="2" />
<text  x="903.76" y="177.5" ></text>
</g>
<g >
<title>firedrake.functionspace.VectorFunctionSpace (9,315 us, 0.03%)</title><rect x="204.1" y="71" width="0.4" height="15.0" fill="rgb(134.604619288351,134.604619288351,153.471861797745)" rx="2" ry="2" />
<text  x="207.11" y="81.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (5,004 us, 0.02%)</title><rect x="208.0" y="199" width="0.2" height="15.0" fill="rgb(128.136387541756,128.136387541756,152.219945975824)" rx="2" ry="2" />
<text  x="211.03" y="209.5" ></text>
</g>
<g >
<title>firedrake.matrix_free.operators.ImplicitMatrixContext.__init__ (7,165 us, 0.02%)</title><rect x="206.7" y="103" width="0.3" height="15.0" fill="rgb(140.722794707918,140.722794707918,154.656024782178)" rx="2" ry="2" />
<text  x="209.69" y="113.5" ></text>
</g>
<g >
<title>firedrake.utility_meshes.RectangleMesh (21,074 us, 0.07%)</title><rect x="204.5" y="87" width="0.9" height="15.0" fill="rgb(146.655203050285,155.05875634637,155.05875634637)" rx="2" ry="2" />
<text  x="207.49" y="97.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.action (11,527 us, 0.04%)</title><rect x="205.4" y="87" width="0.4" height="15.0" fill="rgb(130.916051961141,130.916051961141,152.757945540866)" rx="2" ry="2" />
<text  x="208.36" y="97.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_pyop2_kernel_uniform_extrusion (1,815,394 us, 6.32%)</title><rect x="11.6" y="119" width="74.5" height="15.0" fill="rgb(122.919608667688,148.90508372866,148.90508372866)" rx="2" ry="2" />
<text  x="14.56" y="129.5" >Parloop..</text>
</g>
<g >
<title>Parloop_Cells_wrap_wrap_slate_loopy_knl_0 (12,822,349 us, 44.62%)</title><rect x="274.9" y="183" width="526.5" height="15.0" fill="rgb(137.320784441342,137.320784441342,153.997571182195)" rx="2" ry="2" />
<text  x="277.89" y="193.5" >Parloop_Cells_wrap_wrap_slate_loopy_knl_0</text>
</g>
<g >
<title>firedrake.slate.slac.optimise.optimise (3,273 us, 0.01%)</title><rect x="801.4" y="167" width="0.1" height="15.0" fill="rgb(153.067306326756,120.182681838464,120.182681838464)" rx="2" ry="2" />
<text  x="804.36" y="177.5" ></text>
</g>
<g >
<title>ParLoopExecute (12,822,349 us, 44.62%)</title><rect x="274.9" y="167" width="526.5" height="15.0" fill="rgb(147.973597546254,147.973597546254,109.410511185692)" rx="2" ry="2" />
<text  x="277.89" y="177.5" >ParLoopExecute</text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (4,765 us, 0.02%)</title><rect x="1189.8" y="167" width="0.2" height="15.0" fill="rgb(155.667281768205,155.667281768205,146.695288568994)" rx="2" ry="2" />
<text  x="1192.80" y="177.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (6,704 us, 0.02%)</title><rect x="86.1" y="135" width="0.3" height="15.0" fill="rgb(126.753710116125,163.086605329933,126.753710116125)" rx="2" ry="2" />
<text  x="89.10" y="145.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_form0_cell_integral_otherwise (2,872,245 us, 9.99%)</title><rect x="934.6" y="151" width="117.9" height="15.0" fill="rgb(154.688511174373,154.688511174373,141.952015691191)" rx="2" ry="2" />
<text  x="937.61" y="161.5" >Parloop_Cells..</text>
</g>
<g >
<title>firedrake.parloops.par_loop (776,635 us, 2.70%)</title><rect x="902.6" y="151" width="31.9" height="15.0" fill="rgb(113.36992866,113.36992866,149.361921676129)" rx="2" ry="2" />
<text  x="905.58" y="161.5" >fi..</text>
</g>
<g >
<title>CreateFunctionSpace (8,829 us, 0.03%)</title><rect x="207.9" y="151" width="0.3" height="15.0" fill="rgb(128.297125629672,128.297125629672,152.251056573485)" rx="2" ry="2" />
<text  x="210.87" y="161.5" ></text>
</g>
<g >
<title>SNESFunctionEval (6,223,566 us, 21.66%)</title><rect x="934.5" y="119" width="255.5" height="15.0" fill="rgb(121.145310223282,148.445080428258,148.445080428258)" rx="2" ry="2" />
<text  x="937.47" y="129.5" >SNESFunctionEval</text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (2,411,831 us, 8.39%)</title><rect x="801.5" y="167" width="99.0" height="15.0" fill="rgb(152.95616302726,119.330583208992,119.330583208992)" rx="2" ry="2" />
<text  x="804.49" y="177.5" >firedrake...</text>
</g>
<g >
<title>firedrake.__init__ (2,846,790 us, 9.91%)</title><rect x="87.2" y="71" width="116.9" height="15.0" fill="rgb(124.288756105336,124.288756105336,151.475243117162)" rx="2" ry="2" />
<text  x="90.23" y="81.5" >firedrake.__i..</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (1,815,394 us, 6.32%)</title><rect x="11.6" y="135" width="74.5" height="15.0" fill="rgb(152.899206864395,118.893919293699,118.893919293699)" rx="2" ry="2" />
<text  x="14.56" y="145.5" >pyop2.g..</text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (9,315 us, 0.03%)</title><rect x="204.1" y="119" width="0.4" height="15.0" fill="rgb(141.646134747108,153.760109008509,153.760109008509)" rx="2" ry="2" />
<text  x="207.11" y="129.5" ></text>
</g>
<g >
<title>PCSetUp (17,718,316 us, 61.65%)</title><rect x="207.0" y="119" width="727.5" height="15.0" fill="rgb(136.164734057859,152.339005126111,152.339005126111)" rx="2" ry="2" />
<text  x="209.98" y="129.5" >PCSetUp</text>
</g>
<g >
<title>Parloop_Cells_wrap_form1_cell_integral_otherwise (2,362,388 us, 8.22%)</title><rect x="1052.5" y="151" width="97.0" height="15.0" fill="rgb(139.667664592475,111.023390518217,139.667664592475)" rx="2" ry="2" />
<text  x="1055.54" y="161.5" >Parloop_Ce..</text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (5,868 us, 0.02%)</title><rect x="901.3" y="183" width="0.3" height="15.0" fill="rgb(154.725191597055,154.725191597055,142.129774662649)" rx="2" ry="2" />
<text  x="904.32" y="193.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (5,004 us, 0.02%)</title><rect x="208.0" y="167" width="0.2" height="15.0" fill="rgb(133.046519442095,162.062194509426,133.046519442095)" rx="2" ry="2" />
<text  x="211.03" y="177.5" ></text>
</g>
<g >
<title>CreateMesh (3,082 us, 0.01%)</title><rect x="86.9" y="71" width="0.1" height="15.0" fill="rgb(141.795717231533,160.637906497192,141.795717231533)" rx="2" ry="2" />
<text  x="89.92" y="81.5" ></text>
</g>
<g >
<title>Log_Event_subkernel3_interior_facet_vert_to__exterior_facet_vert_integral_otherwise (3,045 us, 0.01%)</title><rect x="275.6" y="199" width="0.1" height="15.0" fill="rgb(132.037681348273,162.22642396656,132.037681348273)" rx="2" ry="2" />
<text  x="278.61" y="209.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (13,189 us, 0.05%)</title><rect x="86.4" y="87" width="0.5" height="15.0" fill="rgb(147.847532467371,147.847532467371,108.7995804188)" rx="2" ry="2" />
<text  x="89.37" y="97.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (12,801,781 us, 44.54%)</title><rect x="275.7" y="199" width="525.7" height="15.0" fill="rgb(151.396947044345,141.079676801134,151.396947044345)" rx="2" ry="2" />
<text  x="278.74" y="209.5" >pyop2.global_kernel.GlobalKernel.compile</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (771,000 us, 2.68%)</title><rect x="902.8" y="199" width="31.7" height="15.0" fill="rgb(145.090231085856,154.653022874111,154.653022874111)" rx="2" ry="2" />
<text  x="905.81" y="209.5" >py..</text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalProblem.__init__ (11,271 us, 0.04%)</title><rect x="205.8" y="87" width="0.5" height="15.0" fill="rgb(143.314948749848,143.314948749848,155.1577320161)" rx="2" ry="2" />
<text  x="208.83" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspace.MixedFunctionSpace (3,825 us, 0.01%)</title><rect x="207.9" y="167" width="0.1" height="15.0" fill="rgb(150.051420151538,150.051420151538,119.479959195917)" rx="2" ry="2" />
<text  x="210.87" y="177.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.LinearVariationalProblem.__init__ (22,798 us, 0.08%)</title><rect x="205.4" y="71" width="0.9" height="15.0" fill="rgb(134.316812812753,151.859914432936,151.859914432936)" rx="2" ry="2" />
<text  x="208.36" y="81.5" ></text>
</g>
<g >
<title>firedrake.extrusion_utils.make_extruded_coords (1,853,443 us, 6.45%)</title><rect x="10.0" y="87" width="76.1" height="15.0" fill="rgb(154.405315947662,154.405315947662,140.579608054053)" rx="2" ry="2" />
<text  x="13.00" y="97.5" >firedra..</text>
</g>
<g >
<title>all (28,739,536 us, 100%)</title><rect x="10.0" y="39" width="1180.0" height="15.0" fill="rgb(126.798256413929,163.079353607035,126.798256413929)" rx="2" ry="2" />
<text  x="13.00" y="49.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (9,315 us, 0.03%)</title><rect x="204.1" y="87" width="0.4" height="15.0" fill="rgb(132.390298909523,162.169021107752,132.390298909523)" rx="2" ry="2" />
<text  x="207.11" y="97.5" ></text>
</g>
<g >
<title>perfsolve (23,941,882 us, 83.31%)</title><rect x="207.0" y="71" width="983.0" height="15.0" fill="rgb(148.424239708785,133.462114253762,148.424239708785)" rx="2" ry="2" />
<text  x="209.98" y="81.5" >perfsolve</text>
</g>
<g >
<title>firedrake.utility_meshes.SquareMesh (21,074 us, 0.07%)</title><rect x="204.5" y="71" width="0.9" height="15.0" fill="rgb(152.698280300363,152.698280300363,132.307050686374)" rx="2" ry="2" />
<text  x="207.49" y="81.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.action (4,131 us, 0.01%)</title><rect x="206.8" y="119" width="0.2" height="15.0" fill="rgb(154.269081125114,129.396288625874,129.396288625874)" rx="2" ry="2" />
<text  x="209.81" y="129.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (771,000 us, 2.68%)</title><rect x="902.8" y="183" width="31.7" height="15.0" fill="rgb(135.932804276558,101.45281095868,135.932804276558)" rx="2" ry="2" />
<text  x="905.81" y="193.5" >Pa..</text>
</g>
<g >
<title>firedrake.mesh._from_cell_list (14,393 us, 0.05%)</title><rect x="204.8" y="103" width="0.6" height="15.0" fill="rgb(125.508204665126,125.508204665126,151.711265419057)" rx="2" ry="2" />
<text  x="207.77" y="113.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (2,864,379 us, 9.97%)</title><rect x="934.9" y="167" width="117.6" height="15.0" fill="rgb(139.75028093384,160.970884499142,139.75028093384)" rx="2" ry="2" />
<text  x="937.94" y="177.5" >pyop2.global_..</text>
</g>
<g >
<title>ParLoopExecute (771,000 us, 2.68%)</title><rect x="902.8" y="167" width="31.7" height="15.0" fill="rgb(154.20902218524,154.20902218524,139.628338282316)" rx="2" ry="2" />
<text  x="905.81" y="177.5" >Pa..</text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (5,004 us, 0.02%)</title><rect x="208.0" y="183" width="0.2" height="15.0" fill="rgb(156.312809060615,145.064869464717,145.064869464717)" rx="2" ry="2" />
<text  x="211.03" y="193.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (13,189 us, 0.05%)</title><rect x="86.4" y="119" width="0.5" height="15.0" fill="rgb(137.486818364769,161.339355149921,137.486818364769)" rx="2" ry="2" />
<text  x="89.37" y="129.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (4,765 us, 0.02%)</title><rect x="1189.8" y="151" width="0.2" height="15.0" fill="rgb(155.461826891013,138.540672831103,138.540672831103)" rx="2" ry="2" />
<text  x="1192.80" y="161.5" ></text>
</g>
<g >
<title>firedrake.interpolation.make_interpolator (24,974 us, 0.09%)</title><rect x="901.6" y="151" width="1.0" height="15.0" fill="rgb(128.970048153432,150.473716187927,150.473716187927)" rx="2" ry="2" />
<text  x="904.56" y="161.5" ></text>
</g>
<g >
<title>HybridInit (17,718,316 us, 61.65%)</title><rect x="207.0" y="135" width="727.5" height="15.0" fill="rgb(152.816357799364,152.816357799364,132.879272412301)" rx="2" ry="2" />
<text  x="209.98" y="145.5" >HybridInit</text>
</g>
<g >
<title>Log_Event_form0_cell_integral_otherwise (7,866 us, 0.03%)</title><rect x="934.6" y="167" width="0.3" height="15.0" fill="rgb(132.658745610499,151.430045158278,151.430045158278)" rx="2" ry="2" />
<text  x="937.61" y="177.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (5,868 us, 0.02%)</title><rect x="901.3" y="167" width="0.3" height="15.0" fill="rgb(134.366204599841,97.4383992870929,134.366204599841)" rx="2" ry="2" />
<text  x="904.32" y="177.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.__init__ (16,752 us, 0.06%)</title><rect x="206.3" y="71" width="0.7" height="15.0" fill="rgb(149.969290945745,149.969290945745,119.081948429379)" rx="2" ry="2" />
<text  x="209.30" y="81.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (6,704 us, 0.02%)</title><rect x="86.1" y="103" width="0.3" height="15.0" fill="rgb(140.746707219695,153.526924093995,153.526924093995)" rx="2" ry="2" />
<text  x="89.10" y="113.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (9,315 us, 0.03%)</title><rect x="204.1" y="135" width="0.4" height="15.0" fill="rgb(142.717036544587,160.487924283439,142.717036544587)" rx="2" ry="2" />
<text  x="207.11" y="145.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.solve (23,941,882 us, 83.31%)</title><rect x="207.0" y="87" width="983.0" height="15.0" fill="rgb(114.08849969236,146.615536957279,146.615536957279)" rx="2" ry="2" />
<text  x="209.98" y="97.5" >firedrake.variational_solver.NonlinearVariationalSolver.solve</text>
</g>
<g >
<title>ParLoopExecute (1,815,394 us, 6.32%)</title><rect x="11.6" y="103" width="74.5" height="15.0" fill="rgb(156.457962821419,146.177714964216,146.177714964216)" rx="2" ry="2" />
<text  x="14.56" y="113.5" >ParLoop..</text>
</g>
<g >
<title>PetscBarrier (4,507 us, 0.02%)</title><rect x="87.0" y="71" width="0.2" height="15.0" fill="rgb(141.639302510609,116.075712683435,141.639302510609)" rx="2" ry="2" />
<text  x="90.04" y="81.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (6,704 us, 0.02%)</title><rect x="86.1" y="151" width="0.3" height="15.0" fill="rgb(148.364665061844,159.568542896909,148.364665061844)" rx="2" ry="2" />
<text  x="89.10" y="161.5" ></text>
</g>
<g >
<title>firedrake.assemble.allocate_matrix (19,393 us, 0.07%)</title><rect x="900.5" y="151" width="0.8" height="15.0" fill="rgb(143.470041817456,160.365342029717,143.470041817456)" rx="2" ry="2" />
<text  x="903.52" y="161.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (2,362,388 us, 8.22%)</title><rect x="1052.5" y="167" width="97.0" height="15.0" fill="rgb(152.303581176157,114.327455683872,114.327455683872)" rx="2" ry="2" />
<text  x="1055.54" y="177.5" >pyop2.glob..</text>
</g>
<g >
<title>CreateExtMesh (1,860,147 us, 6.47%)</title><rect x="10.0" y="71" width="76.4" height="15.0" fill="rgb(125.088188529133,163.357736751071,125.088188529133)" rx="2" ry="2" />
<text  x="13.00" y="81.5" >CreateE..</text>
</g>
<g >
<title>CreateMesh (3,290 us, 0.01%)</title><rect x="204.6" y="103" width="0.2" height="15.0" fill="rgb(148.510051113305,159.54487540016,148.510051113305)" rx="2" ry="2" />
<text  x="207.63" y="113.5" ></text>
</g>
<g >
<title>DMPlexBuFrCeLi (3,247 us, 0.01%)</title><rect x="205.0" y="119" width="0.2" height="15.0" fill="rgb(155.764116234893,155.764116234893,147.164563292174)" rx="2" ry="2" />
<text  x="208.03" y="129.5" ></text>
</g>
<g >
<title>SNESSolve (23,941,882 us, 83.31%)</title><rect x="207.0" y="103" width="983.0" height="15.0" fill="rgb(151.833557788567,151.833557788567,128.116472359978)" rx="2" ry="2" />
<text  x="209.98" y="113.5" >SNESSolve</text>
</g>
<g >
<title>ParLoopExecute (5,234,633 us, 18.21%)</title><rect x="934.6" y="135" width="214.9" height="15.0" fill="rgb(149.63762377199,149.63762377199,117.474638279643)" rx="2" ry="2" />
<text  x="937.61" y="145.5" >ParLoopExecute</text>
</g>
<g >
<title>firedrake.functionspace.VectorFunctionSpace (6,704 us, 0.02%)</title><rect x="86.1" y="87" width="0.3" height="15.0" fill="rgb(134.000307676759,151.777857545826,151.777857545826)" rx="2" ry="2" />
<text  x="89.10" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (9,315 us, 0.03%)</title><rect x="204.1" y="103" width="0.4" height="15.0" fill="rgb(145.877715899378,145.877715899378,155.653751464396)" rx="2" ry="2" />
<text  x="207.11" y="113.5" ></text>
</g>
<g >
<title>CreateMesh (3,290 us, 0.01%)</title><rect x="204.6" y="119" width="0.2" height="15.0" fill="rgb(148.062029034187,148.062029034187,109.83906378106)" rx="2" ry="2" />
<text  x="207.63" y="129.5" ></text>
</g>
<g >
<title>Log_Event_subkernel1_interior_facet_vert_to__exterior_facet_vert_integral_otherwise (3,102 us, 0.01%)</title><rect x="275.5" y="199" width="0.1" height="15.0" fill="rgb(152.581379410098,116.457242144083,116.457242144083)" rx="2" ry="2" />
<text  x="278.49" y="209.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (5,868 us, 0.02%)</title><rect x="901.3" y="199" width="0.3" height="15.0" fill="rgb(112.07729239568,146.094112843324,146.094112843324)" rx="2" ry="2" />
<text  x="904.32" y="209.5" ></text>
</g>
<g >
<title>HybridOperatorAssembly (16,861,086 us, 58.67%)</title><rect x="208.2" y="151" width="692.3" height="15.0" fill="rgb(125.264974838231,125.264974838231,151.664188678367)" rx="2" ry="2" />
<text  x="211.23" y="161.5" >HybridOperatorAssembly</text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (13,189 us, 0.05%)</title><rect x="86.4" y="103" width="0.5" height="15.0" fill="rgb(153.441792033502,123.053738923518,123.053738923518)" rx="2" ry="2" />
<text  x="89.37" y="113.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (6,704 us, 0.02%)</title><rect x="86.1" y="119" width="0.3" height="15.0" fill="rgb(155.082662253387,135.63374394263,135.63374394263)" rx="2" ry="2" />
<text  x="89.10" y="129.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (5,868 us, 0.02%)</title><rect x="901.3" y="151" width="0.3" height="15.0" fill="rgb(153.052676163938,153.052676163938,134.024507563701)" rx="2" ry="2" />
<text  x="904.32" y="161.5" ></text>
</g>
<g >
<title>firedrake (28,739,536 us, 100.00%)</title><rect x="10.0" y="55" width="1180.0" height="15.0" fill="rgb(150.370539743373,150.370539743373,121.02646183327)" rx="2" ry="2" />
<text  x="13.00" y="65.5" >firedrake</text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (11,271 us, 0.04%)</title><rect x="205.8" y="103" width="0.5" height="15.0" fill="rgb(141.511965247097,153.725324323321,153.725324323321)" rx="2" ry="2" />
<text  x="208.83" y="113.5" ></text>
</g>
<g >
<title>Log_Event_slate_loopy_knl_0 (4,221 us, 0.01%)</title><rect x="275.3" y="199" width="0.2" height="15.0" fill="rgb(140.751653198886,113.801111322146,140.751653198886)" rx="2" ry="2" />
<text  x="278.31" y="209.5" ></text>
</g>
<g >
<title>firedrake.assemble.allocate_matrix (7,165 us, 0.02%)</title><rect x="206.7" y="87" width="0.3" height="15.0" fill="rgb(112.400521703594,146.177913034265,146.177913034265)" rx="2" ry="2" />
<text  x="209.69" y="97.5" ></text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (985,410 us, 3.43%)</title><rect x="1149.5" y="135" width="40.5" height="15.0" fill="rgb(153.974666991242,153.974666991242,138.492616957559)" rx="2" ry="2" />
<text  x="1152.54" y="145.5" >fir..</text>
</g>
<g >
<title>DMPlexInterp (4,763 us, 0.02%)</title><rect x="205.2" y="119" width="0.2" height="15.0" fill="rgb(155.004437995949,135.03402463561,135.03402463561)" rx="2" ry="2" />
<text  x="208.16" y="129.5" ></text>
</g>
</g>
</svg>
