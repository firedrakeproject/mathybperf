<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="299" onload="init(evt)" viewBox="0 0 1200 299" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:13px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:18px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 13 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (1 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="299.0" fill="url(#background)"  />
<text id="title" x="600.00" y="26" >Firedrake example</text>
<text id="details" x="10.00" y="281" > </text>
<text id="unzoom" x="10.00" y="26" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="26" >Search</text>
<text id="ignorecase" x="1174.00" y="26" >ic</text>
<text id="matched" x="1090.00" y="281" > </text>
<g id="frames">
<g >
<title>firedrake.assemble.allocate_matrix (6,324 us, 0.01%)</title><rect x="88.2" y="87" width="0.2" height="15.0" fill="rgb(147.709010653673,147.709010653673,108.128282398571)" rx="2" ry="2" />
<text  x="91.25" y="97.5" ></text>
</g>
<g >
<title>ParLoopExecute (7,484,483 us, 16.62%)</title><rect x="960.6" y="167" width="196.2" height="15.0" fill="rgb(147.065836941424,159.779980032792,147.065836941424)" rx="2" ry="2" />
<text  x="963.64" y="177.5" >ParLoopExecute</text>
</g>
<g >
<title>ParLoop_Cells_wrap_form1_cell_integral_otherwise (23,721 us, 0.05%)</title><rect x="961.0" y="183" width="0.7" height="15.0" fill="rgb(118.011381970111,147.63258051077,147.63258051077)" rx="2" ry="2" />
<text  x="964.04" y="193.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (6,550 us, 0.01%)</title><rect x="42.3" y="151" width="0.1" height="15.0" fill="rgb(133.724135402795,95.793096969662,133.724135402795)" rx="2" ry="2" />
<text  x="45.26" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (6,550 us, 0.01%)</title><rect x="42.3" y="135" width="0.1" height="15.0" fill="rgb(121.402485011237,148.511755373284,148.511755373284)" rx="2" ry="2" />
<text  x="45.26" y="145.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (8,108 us, 0.02%)</title><rect x="936.3" y="167" width="0.2" height="15.0" fill="rgb(120.40811270307,120.40811270307,150.724150845756)" rx="2" ry="2" />
<text  x="939.30" y="177.5" ></text>
</g>
<g >
<title>firedrake.assemble.assemble_form (31,279,068 us, 69.46%)</title><rect x="116.1" y="199" width="819.7" height="15.0" fill="rgb(152.112993235314,112.866281470744,112.866281470744)" rx="2" ry="2" />
<text  x="119.11" y="209.5" >firedrake.assemble.assemble_form</text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.__init__ (6,324 us, 0.01%)</title><rect x="88.2" y="71" width="0.2" height="15.0" fill="rgb(150.519862481669,138.832147609276,150.519862481669)" rx="2" ry="2" />
<text  x="91.25" y="81.5" ></text>
</g>
<g >
<title>pyop2.parloop.JITModule.compile (1,051,060 us, 2.33%)</title><rect x="88.6" y="215" width="27.5" height="15.0" fill="rgb(118.512793031022,147.762575971006,147.762575971006)" rx="2" ry="2" />
<text  x="91.57" y="225.5" >p..</text>
</g>
<g >
<title>pyop2.parloop.JITModule.compile (11,409,153 us, 25.34%)</title><rect x="116.2" y="231" width="299.0" height="15.0" fill="rgb(139.346324580459,139.346324580459,154.389611209121)" rx="2" ry="2" />
<text  x="119.24" y="241.5" >pyop2.parloop.JITModule.compile</text>
</g>
<g >
<title>pyop2.parloop.JITModule.compile (1,198,889 us, 2.66%)</title><rect x="10.8" y="119" width="31.5" height="15.0" fill="rgb(137.995326210423,137.995326210423,154.12812765363)" rx="2" ry="2" />
<text  x="13.84" y="129.5" >py..</text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (4,975 us, 0.01%)</title><rect x="936.5" y="151" width="0.1" height="15.0" fill="rgb(148.188236328017,159.597263853579,148.188236328017)" rx="2" ry="2" />
<text  x="939.51" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (13,441 us, 0.03%)</title><rect x="42.4" y="87" width="0.4" height="15.0" fill="rgb(120.016777826844,148.152497955108,148.152497955108)" rx="2" ry="2" />
<text  x="45.43" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (13,441 us, 0.03%)</title><rect x="42.4" y="103" width="0.4" height="15.0" fill="rgb(153.957951404504,153.957951404504,138.411610652596)" rx="2" ry="2" />
<text  x="45.43" y="113.5" ></text>
</g>
<g >
<title>SCForwardElim (32,335,833 us, 71.81%)</title><rect x="88.4" y="151" width="847.4" height="15.0" fill="rgb(146.414952405561,154.996469142183,154.996469142183)" rx="2" ry="2" />
<text  x="91.42" y="161.5" >SCForwardElim</text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.solve (42,037,799 us, 93.35%)</title><rect x="88.4" y="87" width="1101.6" height="15.0" fill="rgb(146.476247861019,155.012360556561,155.012360556561)" rx="2" ry="2" />
<text  x="91.42" y="97.5" >firedrake.variational_solver.NonlinearVariationalSolver.solve</text>
</g>
<g >
<title>firedrake.interpolation.make_interpolator (34,300 us, 0.08%)</title><rect x="936.6" y="151" width="0.9" height="15.0" fill="rgb(150.756645836556,150.756645836556,122.897591361769)" rx="2" ry="2" />
<text  x="939.64" y="161.5" ></text>
</g>
<g >
<title>CreateExtMesh (1,237,624 us, 2.75%)</title><rect x="10.0" y="71" width="32.4" height="15.0" fill="rgb(139.946532793567,111.737990283516,139.946532793567)" rx="2" ry="2" />
<text  x="13.00" y="81.5" >Cr..</text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (6,550 us, 0.01%)</title><rect x="42.3" y="119" width="0.1" height="15.0" fill="rgb(152.525679402458,116.030208752178,116.030208752178)" rx="2" ry="2" />
<text  x="45.26" y="129.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (8,108 us, 0.02%)</title><rect x="936.3" y="199" width="0.2" height="15.0" fill="rgb(156.63347891315,147.523338334146,147.523338334146)" rx="2" ry="2" />
<text  x="939.30" y="209.5" ></text>
</g>
<g >
<title>SNESFunctionEval (8,752,698 us, 19.44%)</title><rect x="960.6" y="119" width="229.4" height="15.0" fill="rgb(141.03587052147,114.529418211267,141.03587052147)" rx="2" ry="2" />
<text  x="963.64" y="129.5" >SNESFunctionEval</text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (13,441 us, 0.03%)</title><rect x="42.4" y="119" width="0.4" height="15.0" fill="rgb(144.678549706951,144.678549706951,155.421654781991)" rx="2" ry="2" />
<text  x="45.43" y="129.5" ></text>
</g>
<g >
<title>ParLoopExecute (1,051,060 us, 2.33%)</title><rect x="88.6" y="199" width="27.5" height="15.0" fill="rgb(144.398664122579,160.21417095679,144.398664122579)" rx="2" ry="2" />
<text  x="91.57" y="209.5" >P..</text>
</g>
<g >
<title>CreateFunctionSpace (6,550 us, 0.01%)</title><rect x="42.3" y="103" width="0.1" height="15.0" fill="rgb(116.73994426507,116.73994426507,150.014182760981)" rx="2" ry="2" />
<text  x="45.26" y="113.5" ></text>
</g>
<g >
<title>firedrake.functionspace.VectorFunctionSpace (6,550 us, 0.01%)</title><rect x="42.3" y="87" width="0.1" height="15.0" fill="rgb(146.05012987446,146.05012987446,155.687121911186)" rx="2" ry="2" />
<text  x="45.26" y="97.5" ></text>
</g>
<g >
<title>all (45,030,232 us, 100%)</title><rect x="10.0" y="39" width="1180.0" height="15.0" fill="rgb(139.260703566572,161.050583140326,139.260703566572)" rx="2" ry="2" />
<text  x="13.00" y="49.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (8,946 us, 0.02%)</title><rect x="88.0" y="103" width="0.2" height="15.0" fill="rgb(155.309026049637,155.309026049637,144.959126240551)" rx="2" ry="2" />
<text  x="91.02" y="113.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (5,549 us, 0.01%)</title><rect x="87.6" y="103" width="0.1" height="15.0" fill="rgb(152.648464628929,152.648464628929,132.065636278654)" rx="2" ry="2" />
<text  x="90.60" y="113.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.action (10,257 us, 0.02%)</title><rect x="87.7" y="87" width="0.3" height="15.0" fill="rgb(127.287677005715,127.287677005715,152.055679420461)" rx="2" ry="2" />
<text  x="90.75" y="97.5" ></text>
</g>
<g >
<title>HybridInit (949,268 us, 2.11%)</title><rect x="935.8" y="135" width="24.8" height="15.0" fill="rgb(109.383453578396,109.383453578396,148.590345853883)" rx="2" ry="2" />
<text  x="938.76" y="145.5" >H..</text>
</g>
<g >
<title>ParLoopExecute (1,198,889 us, 2.66%)</title><rect x="10.8" y="103" width="31.5" height="15.0" fill="rgb(155.776885282091,140.956120496032,140.956120496032)" rx="2" ry="2" />
<text  x="13.84" y="113.5" >Pa..</text>
</g>
<g >
<title>KSPSolve (32,335,833 us, 71.81%)</title><rect x="88.4" y="119" width="847.4" height="15.0" fill="rgb(132.570340280754,162.139712047319,132.570340280754)" rx="2" ry="2" />
<text  x="91.42" y="129.5" >KSPSolve</text>
</g>
<g >
<title>SNESSolve (42,037,799 us, 93.35%)</title><rect x="88.4" y="103" width="1101.6" height="15.0" fill="rgb(155.525465307905,139.028567360608,139.028567360608)" rx="2" ry="2" />
<text  x="91.42" y="113.5" >SNESSolve</text>
</g>
<g >
<title>CreateFunctionSpace (4,975 us, 0.01%)</title><rect x="936.5" y="199" width="0.1" height="15.0" fill="rgb(150.058787263761,150.058787263761,119.515661355149)" rx="2" ry="2" />
<text  x="939.51" y="209.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (5,683 us, 0.01%)</title><rect x="1189.9" y="183" width="0.1" height="15.0" fill="rgb(156.29444131858,144.924050109112,144.924050109112)" rx="2" ry="2" />
<text  x="1192.85" y="193.5" ></text>
</g>
<g >
<title>ParLoop_Cells_wrap_form0_cell_integral_otherwise (15,428 us, 0.03%)</title><rect x="960.6" y="183" width="0.4" height="15.0" fill="rgb(128.832297276876,162.748230675857,128.832297276876)" rx="2" ry="2" />
<text  x="963.64" y="193.5" ></text>
</g>
<g >
<title>PCSetUp (949,268 us, 2.11%)</title><rect x="935.8" y="119" width="24.8" height="15.0" fill="rgb(152.116066751677,112.889845096187,112.889845096187)" rx="2" ry="2" />
<text  x="938.76" y="129.5" >P..</text>
</g>
<g >
<title>firedrake.assemble.assemble (31,279,068 us, 69.46%)</title><rect x="116.1" y="183" width="819.7" height="15.0" fill="rgb(144.423115706203,160.210190466432,144.423115706203)" rx="2" ry="2" />
<text  x="119.11" y="193.5" >firedrake.assemble.assemble</text>
</g>
<g >
<title>PCApply (32,335,833 us, 71.81%)</title><rect x="88.4" y="135" width="847.4" height="15.0" fill="rgb(140.272545596425,112.57339809084,140.272545596425)" rx="2" ry="2" />
<text  x="91.42" y="145.5" >PCApply</text>
</g>
<g >
<title>HybridRHS (31,279,068 us, 69.46%)</title><rect x="116.1" y="167" width="819.7" height="15.0" fill="rgb(147.167829737069,147.167829737069,155.903450916852)" rx="2" ry="2" />
<text  x="119.11" y="177.5" >HybridRHS</text>
</g>
<g >
<title>HybridBreak (1,056,765 us, 2.35%)</title><rect x="88.4" y="167" width="27.7" height="15.0" fill="rgb(156.347073950203,145.327566951556,145.327566951556)" rx="2" ry="2" />
<text  x="91.42" y="177.5" >H..</text>
</g>
<g >
<title>firedrake.extrusion_utils.make_extruded_coords (1,231,074 us, 2.73%)</title><rect x="10.0" y="87" width="32.3" height="15.0" fill="rgb(119.909633547165,148.124719808524,148.124719808524)" rx="2" ry="2" />
<text  x="13.00" y="97.5" >fi..</text>
</g>
<g >
<title>CreateFunctionSpace (5,549 us, 0.01%)</title><rect x="87.6" y="87" width="0.1" height="15.0" fill="rgb(155.264619336125,137.028748243621,137.028748243621)" rx="2" ry="2" />
<text  x="90.60" y="97.5" ></text>
</g>
<g >
<title>firedrake.slate.slac.optimise.optimise (21,602 us, 0.05%)</title><rect x="608.0" y="247" width="0.6" height="15.0" fill="rgb(155.823489280146,141.313417814455,141.313417814455)" rx="2" ry="2" />
<text  x="611.01" y="257.5" ></text>
</g>
<g >
<title>firedrake.matrix_free.operators.ImplicitMatrixContext.__init__ (6,324 us, 0.01%)</title><rect x="88.2" y="103" width="0.2" height="15.0" fill="rgb(133.258409354597,162.02770080274,133.258409354597)" rx="2" ry="2" />
<text  x="91.25" y="113.5" ></text>
</g>
<g >
<title>firedrake.parloops.par_loop (1,056,765 us, 2.35%)</title><rect x="88.4" y="183" width="27.7" height="15.0" fill="rgb(146.946140303329,129.674484527282,146.946140303329)" rx="2" ry="2" />
<text  x="91.42" y="193.5" >f..</text>
</g>
<g >
<title>pyop2.parloop.JITModule.compile (875,350 us, 1.94%)</title><rect x="937.7" y="183" width="22.9" height="15.0" fill="rgb(149.80394848908,149.80394848908,118.280673447082)" rx="2" ry="2" />
<text  x="940.70" y="193.5" ></text>
</g>
<g >
<title>pyop2.parloop.JITModule.compile (7,445,334 us, 16.53%)</title><rect x="961.7" y="183" width="195.1" height="15.0" fill="rgb(146.015384222489,159.950983963781,146.015384222489)" rx="2" ry="2" />
<text  x="964.66" y="193.5" >pyop2.parloop.JITModule..</text>
</g>
<g >
<title>CreateFunctionSpace (8,108 us, 0.02%)</title><rect x="936.3" y="151" width="0.2" height="15.0" fill="rgb(135.411197587187,135.411197587187,153.627973726552)" rx="2" ry="2" />
<text  x="939.30" y="161.5" ></text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (1,268,215 us, 2.82%)</title><rect x="1156.8" y="167" width="33.2" height="15.0" fill="rgb(155.521396960575,138.997376697742,138.997376697742)" rx="2" ry="2" />
<text  x="1159.77" y="177.5" >fi..</text>
</g>
<g >
<title>firedrake.assemble.assemble (8,752,698 us, 19.44%)</title><rect x="960.6" y="135" width="229.4" height="15.0" fill="rgb(140.725413430585,160.812141999672,140.725413430585)" rx="2" ry="2" />
<text  x="963.64" y="145.5" >firedrake.assemble.assemble</text>
</g>
<g >
<title>firedrake.parloops.par_loop (881,573 us, 1.96%)</title><rect x="937.5" y="151" width="23.1" height="15.0" fill="rgb(110.502507379445,110.502507379445,148.806936912151)" rx="2" ry="2" />
<text  x="940.54" y="161.5" >f..</text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (5,549 us, 0.01%)</title><rect x="87.6" y="119" width="0.1" height="15.0" fill="rgb(153.497935388444,123.484171311405,123.484171311405)" rx="2" ry="2" />
<text  x="90.60" y="129.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (5,549 us, 0.01%)</title><rect x="87.6" y="135" width="0.1" height="15.0" fill="rgb(131.217837591269,131.217837591269,152.816355662826)" rx="2" ry="2" />
<text  x="90.60" y="145.5" ></text>
</g>
<g >
<title>firedrake (45,030,232 us, 100.00%)</title><rect x="10.0" y="55" width="1180.0" height="15.0" fill="rgb(141.440576561517,160.695720094637,141.440576561517)" rx="2" ry="2" />
<text  x="13.00" y="65.5" >firedrake</text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (4,975 us, 0.01%)</title><rect x="936.5" y="183" width="0.1" height="15.0" fill="rgb(154.513667719953,131.271452519642,131.271452519642)" rx="2" ry="2" />
<text  x="939.51" y="193.5" ></text>
</g>
<g >
<title>firedrake.__init__ (1,710,292 us, 3.80%)</title><rect x="42.8" y="71" width="44.8" height="15.0" fill="rgb(155.223431091221,136.712971699358,136.712971699358)" rx="2" ry="2" />
<text  x="45.78" y="81.5" >fir..</text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalProblem.__init__ (8,946 us, 0.02%)</title><rect x="88.0" y="87" width="0.2" height="15.0" fill="rgb(141.949579466021,116.870797381678,141.949579466021)" rx="2" ry="2" />
<text  x="91.02" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (8,108 us, 0.02%)</title><rect x="936.3" y="183" width="0.2" height="15.0" fill="rgb(150.914364192541,150.914364192541,123.661918779239)" rx="2" ry="2" />
<text  x="939.30" y="193.5" ></text>
</g>
<g >
<title>firedrake.functionspace.VectorFunctionSpace (5,549 us, 0.01%)</title><rect x="87.6" y="71" width="0.1" height="15.0" fill="rgb(106.787414714602,144.722663074156,144.722663074156)" rx="2" ry="2" />
<text  x="90.60" y="81.5" ></text>
</g>
<g >
<title>perfsolve (42,037,799 us, 93.35%)</title><rect x="88.4" y="71" width="1101.6" height="15.0" fill="rgb(139.324163677837,139.324163677837,154.385322002162)" rx="2" ry="2" />
<text  x="91.42" y="81.5" >perfsolve</text>
</g>
<g >
<title>firedrake.slate.slac.compiler.generate_loopy_kernel (18,412,615 us, 40.89%)</title><rect x="453.3" y="231" width="482.5" height="15.0" fill="rgb(138.358358585659,138.358358585659,154.198391984321)" rx="2" ry="2" />
<text  x="456.27" y="241.5" >firedrake.slate.slac.compiler.generate_loopy_kernel</text>
</g>
<g >
<title>CreateFunctionSpace (13,441 us, 0.03%)</title><rect x="42.4" y="71" width="0.4" height="15.0" fill="rgb(153.459325121708,123.188159266426,123.188159266426)" rx="2" ry="2" />
<text  x="45.43" y="81.5" ></text>
</g>
<g >
<title>firedrake.slate.slac.compiler.compile_expression (19,864,969 us, 44.11%)</title><rect x="415.2" y="215" width="520.6" height="15.0" fill="rgb(138.059609127249,161.246110142076,138.059609127249)" rx="2" ry="2" />
<text  x="418.21" y="225.5" >firedrake.slate.slac.compiler.compile_expression</text>
</g>
<g >
<title>firedrake.variational_solver.LinearVariationalProblem.__init__ (19,203 us, 0.04%)</title><rect x="87.7" y="71" width="0.5" height="15.0" fill="rgb(118.139321988258,147.665750145104,147.665750145104)" rx="2" ry="2" />
<text  x="90.75" y="81.5" ></text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (12,485,805 us, 27.73%)</title><rect x="608.6" y="247" width="327.2" height="15.0" fill="rgb(135.111391345901,99.3479403238715,135.111391345901)" rx="2" ry="2" />
<text  x="611.58" y="257.5" >firedrake.tsfc_interface.compile_form</text>
</g>
<g >
<title>ParLoopExecute (875,350 us, 1.94%)</title><rect x="937.7" y="167" width="22.9" height="15.0" fill="rgb(155.394917930255,138.027704131958,138.027704131958)" rx="2" ry="2" />
<text  x="940.70" y="177.5" ></text>
</g>
<g >
<title>ParLoopExecute (11,409,153 us, 25.34%)</title><rect x="116.2" y="215" width="299.0" height="15.0" fill="rgb(146.560614215119,146.560614215119,155.785925331959)" rx="2" ry="2" />
<text  x="119.24" y="225.5" >ParLoopExecute</text>
</g>
<g >
<title>firedrake.assemble.assemble_form (8,752,698 us, 19.44%)</title><rect x="960.6" y="151" width="229.4" height="15.0" fill="rgb(150.28288192906,150.28288192906,120.601658579289)" rx="2" ry="2" />
<text  x="963.64" y="161.5" >firedrake.assemble.assemble..</text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (4,975 us, 0.01%)</title><rect x="936.5" y="167" width="0.1" height="15.0" fill="rgb(136.368050853331,152.391716887901,152.391716887901)" rx="2" ry="2" />
<text  x="939.51" y="177.5" ></text>
</g>
</g>
</svg>
