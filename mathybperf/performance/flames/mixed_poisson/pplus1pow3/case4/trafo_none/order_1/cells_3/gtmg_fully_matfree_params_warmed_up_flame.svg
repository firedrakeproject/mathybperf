<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="299" onload="init(evt)" viewBox="0 0 1200 299" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:13px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:18px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 13 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (1 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="299.0" fill="url(#background)"  />
<text id="title" x="600.00" y="26" >Firedrake example</text>
<text id="details" x="10.00" y="281" > </text>
<text id="unzoom" x="10.00" y="26" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="26" >Search</text>
<text id="ignorecase" x="1174.00" y="26" >ic</text>
<text id="matched" x="1090.00" y="281" > </text>
<g id="frames">
<g >
<title>HybridRHS (13,244,468 us, 78.04%)</title><rect x="253.4" y="167" width="920.8" height="15.0" fill="rgb(131.3981493699,162.330533823505,131.3981493699)" rx="2" ry="2" />
<text  x="256.37" y="177.5" >HybridRHS</text>
</g>
<g >
<title>CreateFunctionSpace (7,156 us, 0.04%)</title><rect x="18.3" y="103" width="0.5" height="15.0" fill="rgb(115.184760484368,115.184760484368,149.713179448587)" rx="2" ry="2" />
<text  x="21.26" y="113.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (6,404 us, 0.04%)</title><rect x="1181.0" y="199" width="0.5" height="15.0" fill="rgb(135.337034605209,152.124416379128,152.124416379128)" rx="2" ry="2" />
<text  x="1184.03" y="209.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (7,156 us, 0.04%)</title><rect x="18.3" y="119" width="0.5" height="15.0" fill="rgb(152.689731665525,117.287942769022,117.287942769022)" rx="2" ry="2" />
<text  x="21.26" y="129.5" ></text>
</g>
<g >
<title>ParLoopExecute (74,752 us, 0.44%)</title><rect x="13.1" y="103" width="5.2" height="15.0" fill="rgb(155.569297714831,139.364615813707,139.364615813707)" rx="2" ry="2" />
<text  x="16.06" y="113.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (6,106 us, 0.04%)</title><rect x="249.9" y="103" width="0.4" height="15.0" fill="rgb(154.939562150964,154.939562150964,143.168647346978)" rx="2" ry="2" />
<text  x="252.90" y="113.5" ></text>
</g>
<g >
<title>firedrake.functionspace.VectorFunctionSpace (7,156 us, 0.04%)</title><rect x="18.3" y="87" width="0.5" height="15.0" fill="rgb(154.894021448292,154.894021448292,142.947950095568)" rx="2" ry="2" />
<text  x="21.26" y="97.5" ></text>
</g>
<g >
<title>CreateMesh (2,101 us, 0.01%)</title><rect x="20.0" y="71" width="0.2" height="15.0" fill="rgb(152.233022424296,143.222119962258,152.233022424296)" rx="2" ry="2" />
<text  x="23.00" y="81.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (2,656 us, 0.02%)</title><rect x="252.6" y="119" width="0.2" height="15.0" fill="rgb(105.65507936211,144.429094649436,144.429094649436)" rx="2" ry="2" />
<text  x="255.65" y="129.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (9,338 us, 0.06%)</title><rect x="1180.8" y="183" width="0.7" height="15.0" fill="rgb(119.889899640643,148.119603610537,148.119603610537)" rx="2" ry="2" />
<text  x="1183.83" y="193.5" ></text>
</g>
<g >
<title>firedrake.functionspace.MixedFunctionSpace (2,066 us, 0.01%)</title><rect x="1175.5" y="167" width="0.1" height="15.0" fill="rgb(149.692546482002,136.71215036013,149.692546482002)" rx="2" ry="2" />
<text  x="1178.46" y="177.5" ></text>
</g>
<g >
<title>ParLoopExecute (12,610,376 us, 74.30%)</title><rect x="253.6" y="215" width="876.8" height="15.0" fill="rgb(133.504333963842,151.649271768403,151.649271768403)" rx="2" ry="2" />
<text  x="256.59" y="225.5" >ParLoopExecute</text>
</g>
<g >
<title>firedrake.utility_meshes.SquareMesh (2,198 us, 0.01%)</title><rect x="250.3" y="71" width="0.2" height="15.0" fill="rgb(135.8804645434,152.265305622363,152.265305622363)" rx="2" ry="2" />
<text  x="253.32" y="81.5" ></text>
</g>
<g >
<title>firedrake.functionspace.VectorFunctionSpace (6,106 us, 0.04%)</title><rect x="249.9" y="71" width="0.4" height="15.0" fill="rgb(154.198456461469,128.85483287126,128.85483287126)" rx="2" ry="2" />
<text  x="252.90" y="81.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (6,367 us, 0.04%)</title><rect x="1175.6" y="167" width="0.4" height="15.0" fill="rgb(139.618547507395,153.234438242658,153.234438242658)" rx="2" ry="2" />
<text  x="1178.61" y="177.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (8,433 us, 0.05%)</title><rect x="1175.5" y="151" width="0.5" height="15.0" fill="rgb(130.607871414163,162.459183723276,130.607871414163)" rx="2" ry="2" />
<text  x="1178.46" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (7,156 us, 0.04%)</title><rect x="18.3" y="135" width="0.5" height="15.0" fill="rgb(148.182880767117,159.598135689074,148.182880767117)" rx="2" ry="2" />
<text  x="21.26" y="145.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (6,106 us, 0.04%)</title><rect x="249.9" y="119" width="0.4" height="15.0" fill="rgb(127.028747470782,163.041831807082,127.028747470782)" rx="2" ry="2" />
<text  x="252.90" y="129.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (7,156 us, 0.04%)</title><rect x="18.3" y="151" width="0.5" height="15.0" fill="rgb(117.041722210413,147.381187239737,147.381187239737)" rx="2" ry="2" />
<text  x="21.26" y="161.5" ></text>
</g>
<g >
<title>ParLoop_Cells_wrap_form0_cell_integral_otherwise (10,107 us, 0.06%)</title><rect x="1184.7" y="183" width="0.7" height="15.0" fill="rgb(113.843303703297,146.551967626781,146.551967626781)" rx="2" ry="2" />
<text  x="1187.74" y="193.5" ></text>
</g>
<g >
<title>ParLoop_Cells_wrap_form1_cell_integral_otherwise (15,774 us, 0.09%)</title><rect x="1185.4" y="183" width="1.1" height="15.0" fill="rgb(142.488661796645,118.252195853904,142.488661796645)" rx="2" ry="2" />
<text  x="1188.44" y="193.5" ></text>
</g>
<g >
<title>firedrake.assemble.assemble (13,244,468 us, 78.04%)</title><rect x="253.4" y="183" width="920.8" height="15.0" fill="rgb(111.851935093387,111.851935093387,149.068116469688)" rx="2" ry="2" />
<text  x="256.37" y="193.5" >firedrake.assemble.assemble</text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (17,945 us, 0.11%)</title><rect x="18.8" y="119" width="1.2" height="15.0" fill="rgb(138.690612183767,138.690612183767,154.262699132342)" rx="2" ry="2" />
<text  x="21.76" y="129.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (12,614 us, 0.07%)</title><rect x="1180.6" y="167" width="0.9" height="15.0" fill="rgb(152.641578866708,116.918771311425,116.918771311425)" rx="2" ry="2" />
<text  x="1183.60" y="177.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (6,438 us, 0.04%)</title><rect x="1189.6" y="183" width="0.4" height="15.0" fill="rgb(149.326633491151,135.774498321074,149.326633491151)" rx="2" ry="2" />
<text  x="1192.55" y="193.5" ></text>
</g>
<g >
<title>ParLoopExecute (28,260 us, 0.17%)</title><rect x="1184.6" y="167" width="1.9" height="15.0" fill="rgb(118.946047017356,118.946047017356,150.441170390456)" rx="2" ry="2" />
<text  x="1187.57" y="177.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (2,917 us, 0.02%)</title><rect x="1181.3" y="247" width="0.2" height="15.0" fill="rgb(153.339433673882,153.339433673882,135.414178573429)" rx="2" ry="2" />
<text  x="1184.28" y="257.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (17,945 us, 0.11%)</title><rect x="18.8" y="87" width="1.2" height="15.0" fill="rgb(135.823105854791,152.250434851242,152.250434851242)" rx="2" ry="2" />
<text  x="21.76" y="97.5" ></text>
</g>
<g >
<title>firedrake.parloops.par_loop (5,382 us, 0.03%)</title><rect x="1184.2" y="151" width="0.4" height="15.0" fill="rgb(141.200253536759,153.644510176197,153.644510176197)" rx="2" ry="2" />
<text  x="1187.20" y="161.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.action (12,324 us, 0.07%)</title><rect x="250.5" y="87" width="0.8" height="15.0" fill="rgb(137.709724346836,152.739558163994,152.739558163994)" rx="2" ry="2" />
<text  x="253.47" y="97.5" ></text>
</g>
<g >
<title>all (16,971,299 us, 100%)</title><rect x="10.0" y="39" width="1180.0" height="15.0" fill="rgb(154.151490687422,128.4947619369,128.4947619369)" rx="2" ry="2" />
<text  x="13.00" y="49.5" ></text>
</g>
<g >
<title>pyop2.parloop.JITModule.compile (12,610,376 us, 74.30%)</title><rect x="253.6" y="231" width="876.8" height="15.0" fill="rgb(142.133412966507,160.582932772894,142.133412966507)" rx="2" ry="2" />
<text  x="256.59" y="241.5" >pyop2.parloop.JITModule.compile</text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalProblem.__init__ (10,647 us, 0.06%)</title><rect x="251.3" y="87" width="0.8" height="15.0" fill="rgb(156.709836934283,148.108749829499,148.108749829499)" rx="2" ry="2" />
<text  x="254.33" y="97.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (17,945 us, 0.11%)</title><rect x="18.8" y="71" width="1.2" height="15.0" fill="rgb(131.319505761154,131.319505761154,152.836033373127)" rx="2" ry="2" />
<text  x="21.76" y="81.5" ></text>
</g>
<g >
<title>firedrake.__init__ (3,304,314 us, 19.47%)</title><rect x="20.2" y="71" width="229.7" height="15.0" fill="rgb(139.234838392968,139.234838392968,154.368033237349)" rx="2" ry="2" />
<text  x="23.15" y="81.5" >firedrake.__init__</text>
</g>
<g >
<title>CreateFunctionSpace (2,066 us, 0.01%)</title><rect x="1175.5" y="183" width="0.1" height="15.0" fill="rgb(107.840619001208,144.99571603735,144.99571603735)" rx="2" ry="2" />
<text  x="1178.46" y="193.5" ></text>
</g>
<g >
<title>firedrake.interpolation.make_interpolator (39,076 us, 0.23%)</title><rect x="1181.5" y="151" width="2.7" height="15.0" fill="rgb(128.152272250846,128.152272250846,152.223020435648)" rx="2" ry="2" />
<text  x="1184.48" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (17,945 us, 0.11%)</title><rect x="18.8" y="103" width="1.2" height="15.0" fill="rgb(130.923554744961,162.407793413611,130.923554744961)" rx="2" ry="2" />
<text  x="21.76" y="113.5" ></text>
</g>
<g >
<title>firedrake.assemble.allocate_matrix (7,721 us, 0.05%)</title><rect x="252.3" y="87" width="0.5" height="15.0" fill="rgb(134.782382001398,151.980617555918,151.980617555918)" rx="2" ry="2" />
<text  x="255.30" y="97.5" ></text>
</g>
<g >
<title>KSPSolve (13,252,162 us, 78.09%)</title><rect x="252.8" y="119" width="921.4" height="15.0" fill="rgb(135.481594216438,100.296585179623,135.481594216438)" rx="2" ry="2" />
<text  x="255.83" y="129.5" >KSPSolve</text>
</g>
<g >
<title>SNESFunctionEval (78,079 us, 0.46%)</title><rect x="1184.6" y="119" width="5.4" height="15.0" fill="rgb(144.5625518172,160.187491564642,144.5625518172)" rx="2" ry="2" />
<text  x="1187.57" y="129.5" ></text>
</g>
<g >
<title>firedrake.matrix_free.operators.ImplicitMatrixContext.__init__ (7,721 us, 0.05%)</title><rect x="252.3" y="103" width="0.5" height="15.0" fill="rgb(142.337660866878,153.939393558079,153.939393558079)" rx="2" ry="2" />
<text  x="255.30" y="113.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (2,917 us, 0.02%)</title><rect x="1181.3" y="231" width="0.2" height="15.0" fill="rgb(109.74643049005,145.489815312235,145.489815312235)" rx="2" ry="2" />
<text  x="1184.28" y="241.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.__init__ (10,960 us, 0.06%)</title><rect x="252.1" y="71" width="0.7" height="15.0" fill="rgb(131.388518976783,162.332101561919,131.388518976783)" rx="2" ry="2" />
<text  x="255.07" y="81.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.LinearVariationalProblem.__init__ (22,971 us, 0.14%)</title><rect x="250.5" y="71" width="1.6" height="15.0" fill="rgb(152.628157470991,144.234653519416,152.628157470991)" rx="2" ry="2" />
<text  x="253.47" y="81.5" ></text>
</g>
<g >
<title>pyop2.parloop.JITModule.compile (74,752 us, 0.44%)</title><rect x="13.1" y="119" width="5.2" height="15.0" fill="rgb(136.117792957772,136.117792957772,153.764734120859)" rx="2" ry="2" />
<text  x="16.06" y="129.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (2,917 us, 0.02%)</title><rect x="1181.3" y="215" width="0.2" height="15.0" fill="rgb(143.551346250174,160.35210642439,143.551346250174)" rx="2" ry="2" />
<text  x="1184.28" y="225.5" ></text>
</g>
<g >
<title>PCSetUp (148,523 us, 0.88%)</title><rect x="1174.2" y="119" width="10.4" height="15.0" fill="rgb(151.523230268551,151.523230268551,126.612577455284)" rx="2" ry="2" />
<text  x="1177.24" y="129.5" ></text>
</g>
<g >
<title>SNESSolve (13,478,764 us, 79.42%)</title><rect x="252.8" y="103" width="937.2" height="15.0" fill="rgb(156.096802901204,143.408822242567,143.408822242567)" rx="2" ry="2" />
<text  x="255.83" y="113.5" >SNESSolve</text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (6,106 us, 0.04%)</title><rect x="249.9" y="135" width="0.4" height="15.0" fill="rgb(124.876492229618,163.392198939365,124.876492229618)" rx="2" ry="2" />
<text  x="252.90" y="145.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.solve (13,478,764 us, 79.42%)</title><rect x="252.8" y="87" width="937.2" height="15.0" fill="rgb(146.947429604638,146.947429604638,155.860792826704)" rx="2" ry="2" />
<text  x="255.83" y="97.5" >firedrake.variational_solver.NonlinearVariationalSolver.solve</text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (10,647 us, 0.06%)</title><rect x="251.3" y="103" width="0.8" height="15.0" fill="rgb(144.69223310132,160.166380657925,144.69223310132)" rx="2" ry="2" />
<text  x="254.33" y="113.5" ></text>
</g>
<g >
<title>CreateExtMesh (125,940 us, 0.74%)</title><rect x="10.0" y="71" width="8.8" height="15.0" fill="rgb(112.199862593039,146.125890301899,146.125890301899)" rx="2" ry="2" />
<text  x="13.00" y="81.5" ></text>
</g>
<g >
<title>perfsolve (13,478,764 us, 79.42%)</title><rect x="252.8" y="71" width="937.2" height="15.0" fill="rgb(128.924449825189,128.924449825189,152.372474159714)" rx="2" ry="2" />
<text  x="255.83" y="81.5" >perfsolve</text>
</g>
<g >
<title>firedrake.mesh.MeshTopology._facets (2,609 us, 0.02%)</title><rect x="250.1" y="151" width="0.2" height="15.0" fill="rgb(130.060362609452,162.548313063578,130.060362609452)" rx="2" ry="2" />
<text  x="253.14" y="161.5" ></text>
</g>
<g >
<title>firedrake.utility_meshes.RectangleMesh (2,198 us, 0.01%)</title><rect x="250.3" y="87" width="0.2" height="15.0" fill="rgb(150.708537571975,150.708537571975,122.664451310339)" rx="2" ry="2" />
<text  x="253.32" y="97.5" ></text>
</g>
<g >
<title>HybridInit (148,523 us, 0.88%)</title><rect x="1174.2" y="135" width="10.4" height="15.0" fill="rgb(124.073210303175,163.522965764599,124.073210303175)" rx="2" ry="2" />
<text  x="1177.24" y="145.5" ></text>
</g>
<g >
<title>firedrake.extrusion_utils.make_extruded_coords (116,185 us, 0.68%)</title><rect x="10.2" y="87" width="8.1" height="15.0" fill="rgb(132.220983178586,162.196584133718,132.220983178586)" rx="2" ry="2" />
<text  x="13.18" y="97.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (6,106 us, 0.04%)</title><rect x="249.9" y="87" width="0.4" height="15.0" fill="rgb(155.782546489482,140.999523086027,140.999523086027)" rx="2" ry="2" />
<text  x="252.90" y="97.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (3,537 us, 0.02%)</title><rect x="1189.8" y="199" width="0.2" height="15.0" fill="rgb(153.348243937569,122.336536854694,122.336536854694)" rx="2" ry="2" />
<text  x="1192.75" y="209.5" ></text>
</g>
<g >
<title>firedrake.assemble.assemble_form (78,079 us, 0.46%)</title><rect x="1184.6" y="151" width="5.4" height="15.0" fill="rgb(146.07724785104,146.07724785104,155.692370551814)" rx="2" ry="2" />
<text  x="1187.57" y="161.5" ></text>
</g>
<g >
<title>firedrake.assemble.assemble_form (13,244,468 us, 78.04%)</title><rect x="253.4" y="199" width="920.8" height="15.0" fill="rgb(154.818166416997,154.818166416997,142.580344943909)" rx="2" ry="2" />
<text  x="256.37" y="209.5" >firedrake.assemble.assemble_form</text>
</g>
<g >
<title>firedrake.ufl_expr.action (5,065 us, 0.03%)</title><rect x="252.3" y="119" width="0.3" height="15.0" fill="rgb(109.931847458118,109.931847458118,148.696486604797)" rx="2" ry="2" />
<text  x="255.30" y="129.5" ></text>
</g>
<g >
<title>firedrake (16,971,299 us, 100.00%)</title><rect x="10.0" y="55" width="1180.0" height="15.0" fill="rgb(119.937311997154,119.937311997154,150.633028128481)" rx="2" ry="2" />
<text  x="13.00" y="65.5" >firedrake</text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (49,819 us, 0.29%)</title><rect x="1186.5" y="167" width="3.5" height="15.0" fill="rgb(145.709912180277,160.000711970653,145.709912180277)" rx="2" ry="2" />
<text  x="1189.54" y="177.5" ></text>
</g>
<g >
<title>firedrake.parloops.par_loop (7,694 us, 0.05%)</title><rect x="252.8" y="183" width="0.6" height="15.0" fill="rgb(152.943897294682,119.236545925897,119.236545925897)" rx="2" ry="2" />
<text  x="255.83" y="193.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (6,367 us, 0.04%)</title><rect x="1175.6" y="183" width="0.4" height="15.0" fill="rgb(142.387733898312,160.541531690972,142.387733898312)" rx="2" ry="2" />
<text  x="1178.61" y="193.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (6,367 us, 0.04%)</title><rect x="1175.6" y="199" width="0.4" height="15.0" fill="rgb(121.993186243789,121.993186243789,151.030939272991)" rx="2" ry="2" />
<text  x="1178.61" y="209.5" ></text>
</g>
<g >
<title>PCApply (13,252,162 us, 78.09%)</title><rect x="252.8" y="135" width="921.4" height="15.0" fill="rgb(114.796823812047,114.796823812047,149.638094931364)" rx="2" ry="2" />
<text  x="255.83" y="145.5" >PCApply</text>
</g>
<g >
<title>HybridBreak (7,694 us, 0.05%)</title><rect x="252.8" y="167" width="0.6" height="15.0" fill="rgb(129.228315504223,162.683762592336,129.228315504223)" rx="2" ry="2" />
<text  x="255.83" y="177.5" ></text>
</g>
<g >
<title>SCForwardElim (13,252,162 us, 78.09%)</title><rect x="252.8" y="151" width="921.4" height="15.0" fill="rgb(134.234013143704,97.0996586807421,134.234013143704)" rx="2" ry="2" />
<text  x="255.83" y="161.5" >SCForwardElim</text>
</g>
<g >
<title>firedrake.assemble.assemble (78,079 us, 0.46%)</title><rect x="1184.6" y="135" width="5.4" height="15.0" fill="rgb(143.468580937345,160.365579847409,143.468580937345)" rx="2" ry="2" />
<text  x="1187.57" y="145.5" ></text>
</g>
<g >
<title>firedrake.slate.slac.compiler.compile_expression (630,931 us, 3.72%)</title><rect x="1130.4" y="215" width="43.8" height="15.0" fill="rgb(133.00140540206,162.069538655479,133.00140540206)" rx="2" ry="2" />
<text  x="1133.38" y="225.5" >fir..</text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (78,099 us, 0.46%)</title><rect x="1176.0" y="151" width="5.5" height="15.0" fill="rgb(154.773323122429,133.262143938626,133.262143938626)" rx="2" ry="2" />
<text  x="1179.05" y="161.5" ></text>
</g>
</g>
</svg>
