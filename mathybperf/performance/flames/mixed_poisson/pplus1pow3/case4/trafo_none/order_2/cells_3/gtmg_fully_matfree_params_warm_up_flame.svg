<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="299" onload="init(evt)" viewBox="0 0 1200 299" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:13px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:18px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 13 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (1 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="299.0" fill="url(#background)"  />
<text id="title" x="600.00" y="26" >Firedrake example</text>
<text id="details" x="10.00" y="281" > </text>
<text id="unzoom" x="10.00" y="26" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="26" >Search</text>
<text id="ignorecase" x="1174.00" y="26" >ic</text>
<text id="matched" x="1090.00" y="281" > </text>
<g id="frames">
<g >
<title>CreateFunctionSpace (8,740 us, 0.02%)</title><rect x="961.0" y="151" width="0.3" height="15.0" fill="rgb(133.277980599474,94.6498252861509,133.277980599474)" rx="2" ry="2" />
<text  x="964.03" y="161.5" ></text>
</g>
<g >
<title>firedrake.__init__ (1,819,074 us, 4.02%)</title><rect x="43.8" y="71" width="47.5" height="15.0" fill="rgb(150.45095112233,138.655562250971,150.45095112233)" rx="2" ry="2" />
<text  x="46.79" y="81.5" >fire..</text>
</g>
<g >
<title>ParLoopExecute (1,242,146 us, 2.75%)</title><rect x="10.8" y="103" width="32.4" height="15.0" fill="rgb(148.664200936844,148.664200936844,112.757281463167)" rx="2" ry="2" />
<text  x="13.83" y="113.5" >Pa..</text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (14,678 us, 0.03%)</title><rect x="43.4" y="87" width="0.4" height="15.0" fill="rgb(116.821784052387,116.821784052387,150.030022719817)" rx="2" ry="2" />
<text  x="46.41" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspace.VectorFunctionSpace (6,351 us, 0.01%)</title><rect x="43.2" y="87" width="0.2" height="15.0" fill="rgb(156.183753846286,144.075446154858,144.075446154858)" rx="2" ry="2" />
<text  x="46.24" y="97.5" ></text>
</g>
<g >
<title>firedrake.parloops.par_loop (1,120,024 us, 2.48%)</title><rect x="92.1" y="183" width="29.2" height="15.0" fill="rgb(128.429469576583,128.429469576583,152.276671530952)" rx="2" ry="2" />
<text  x="95.07" y="193.5" >f..</text>
</g>
<g >
<title>CreateFunctionSpace (6,351 us, 0.01%)</title><rect x="43.2" y="103" width="0.2" height="15.0" fill="rgb(152.462746728385,115.547724917618,115.547724917618)" rx="2" ry="2" />
<text  x="46.24" y="113.5" ></text>
</g>
<g >
<title>firedrake.extrusion_utils.make_extruded_coords (1,273,935 us, 2.82%)</title><rect x="10.0" y="87" width="33.2" height="15.0" fill="rgb(136.833179891988,103.76002347322,136.833179891988)" rx="2" ry="2" />
<text  x="13.00" y="97.5" >fi..</text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (6,351 us, 0.01%)</title><rect x="43.2" y="135" width="0.2" height="15.0" fill="rgb(153.716719844972,125.161518811453,125.161518811453)" rx="2" ry="2" />
<text  x="46.24" y="145.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (14,678 us, 0.03%)</title><rect x="43.4" y="119" width="0.4" height="15.0" fill="rgb(145.244873821873,160.076415889462,145.244873821873)" rx="2" ry="2" />
<text  x="46.41" y="129.5" ></text>
</g>
<g >
<title>pyop2.parloop.JITModule.compile (11,387,103 us, 25.18%)</title><rect x="121.3" y="231" width="297.2" height="15.0" fill="rgb(143.554286023541,143.554286023541,155.204055359395)" rx="2" ry="2" />
<text  x="124.30" y="241.5" >pyop2.parloop.JITModule.compile</text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.solve (42,073,086 us, 93.04%)</title><rect x="92.1" y="87" width="1097.9" height="15.0" fill="rgb(127.461288890094,150.082556378913,150.082556378913)" rx="2" ry="2" />
<text  x="95.07" y="97.5" >firedrake.variational_solver.NonlinearVariationalSolver.solve</text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (5,629 us, 0.01%)</title><rect x="1189.9" y="183" width="0.1" height="15.0" fill="rgb(119.62077450305,148.049830426717,148.049830426717)" rx="2" ry="2" />
<text  x="1192.85" y="193.5" ></text>
</g>
<g >
<title>firedrake.slate.slac.compiler.compile_expression (20,770,356 us, 45.93%)</title><rect x="418.5" y="215" width="542.0" height="15.0" fill="rgb(131.353867333089,131.353867333089,152.842683999953)" rx="2" ry="2" />
<text  x="421.45" y="225.5" >firedrake.slate.slac.compiler.compile_expression</text>
</g>
<g >
<title>firedrake.assemble.assemble (32,157,459 us, 71.12%)</title><rect x="121.3" y="183" width="839.2" height="15.0" fill="rgb(148.417234305533,148.417234305533,111.560443172969)" rx="2" ry="2" />
<text  x="124.30" y="193.5" >firedrake.assemble.assemble</text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (5,154 us, 0.01%)</title><rect x="961.3" y="167" width="0.1" height="15.0" fill="rgb(147.637327214964,147.637327214964,155.994321396445)" rx="2" ry="2" />
<text  x="964.26" y="177.5" ></text>
</g>
<g >
<title>perfsolve (42,073,086 us, 93.04%)</title><rect x="92.1" y="71" width="1097.9" height="15.0" fill="rgb(151.468453395641,151.468453395641,126.347120301954)" rx="2" ry="2" />
<text  x="95.07" y="81.5" >perfsolve</text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (8,740 us, 0.02%)</title><rect x="961.0" y="183" width="0.3" height="15.0" fill="rgb(148.21937281796,148.21937281796,110.601575963959)" rx="2" ry="2" />
<text  x="964.03" y="193.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (8,740 us, 0.02%)</title><rect x="961.0" y="199" width="0.3" height="15.0" fill="rgb(153.763773513926,125.522263606764,125.522263606764)" rx="2" ry="2" />
<text  x="964.03" y="209.5" ></text>
</g>
<g >
<title>SNESSolve (42,073,086 us, 93.04%)</title><rect x="92.1" y="103" width="1097.9" height="15.0" fill="rgb(144.817334071514,124.219418558255,144.817334071514)" rx="2" ry="2" />
<text  x="95.07" y="113.5" >SNESSolve</text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (6,351 us, 0.01%)</title><rect x="43.2" y="119" width="0.2" height="15.0" fill="rgb(140.545737831191,113.273453192428,140.545737831191)" rx="2" ry="2" />
<text  x="46.24" y="129.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.__init__ (6,490 us, 0.01%)</title><rect x="91.9" y="71" width="0.2" height="15.0" fill="rgb(146.03831618549,146.03831618549,155.68483539074)" rx="2" ry="2" />
<text  x="94.90" y="81.5" ></text>
</g>
<g >
<title>HybridRHS (32,157,459 us, 71.12%)</title><rect x="121.3" y="167" width="839.2" height="15.0" fill="rgb(152.047501969327,152.047501969327,129.153278774432)" rx="2" ry="2" />
<text  x="124.30" y="177.5" >HybridRHS</text>
</g>
<g >
<title>HybridBreak (1,120,024 us, 2.48%)</title><rect x="92.1" y="167" width="29.2" height="15.0" fill="rgb(109.301836869535,109.301836869535,148.574549071523)" rx="2" ry="2" />
<text  x="95.07" y="177.5" >H..</text>
</g>
<g >
<title>SCForwardElim (33,277,483 us, 73.59%)</title><rect x="92.1" y="151" width="868.4" height="15.0" fill="rgb(156.315301558461,145.083978614867,145.083978614867)" rx="2" ry="2" />
<text  x="95.07" y="161.5" >SCForwardElim</text>
</g>
<g >
<title>ParLoop_Cells_wrap_form1_cell_integral_otherwise (28,245 us, 0.06%)</title><rect x="984.7" y="183" width="0.7" height="15.0" fill="rgb(152.335765248414,152.335765248414,130.550246973085)" rx="2" ry="2" />
<text  x="987.69" y="193.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (14,678 us, 0.03%)</title><rect x="43.4" y="71" width="0.4" height="15.0" fill="rgb(136.540512211471,136.540512211471,153.846550750607)" rx="2" ry="2" />
<text  x="46.41" y="81.5" ></text>
</g>
<g >
<title>ParLoopExecute (1,114,288 us, 2.46%)</title><rect x="92.2" y="199" width="29.1" height="15.0" fill="rgb(143.185060131181,160.41173439725,143.185060131181)" rx="2" ry="2" />
<text  x="95.22" y="209.5" >P..</text>
</g>
<g >
<title>firedrake.assemble.assemble (7,889,279 us, 17.45%)</title><rect x="984.1" y="135" width="205.9" height="15.0" fill="rgb(104.302185252847,144.078344324812,144.078344324812)" rx="2" ry="2" />
<text  x="987.12" y="145.5" >firedrake.assemble.assem..</text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (8,740 us, 0.02%)</title><rect x="961.0" y="167" width="0.3" height="15.0" fill="rgb(152.257959722435,152.257959722435,130.173189424108)" rx="2" ry="2" />
<text  x="964.03" y="177.5" ></text>
</g>
<g >
<title>KSPSolve (33,277,483 us, 73.59%)</title><rect x="92.1" y="119" width="868.4" height="15.0" fill="rgb(152.087624032208,112.671784246925,112.671784246925)" rx="2" ry="2" />
<text  x="95.07" y="129.5" >KSPSolve</text>
</g>
<g >
<title>firedrake.interpolation.make_interpolator (46,888 us, 0.10%)</title><rect x="961.4" y="151" width="1.2" height="15.0" fill="rgb(126.130638884375,126.130638884375,151.831736558266)" rx="2" ry="2" />
<text  x="964.39" y="161.5" ></text>
</g>
<g >
<title>SNESFunctionEval (7,889,279 us, 17.45%)</title><rect x="984.1" y="119" width="205.9" height="15.0" fill="rgb(129.375108339493,162.659866084269,129.375108339493)" rx="2" ry="2" />
<text  x="987.12" y="129.5" >SNESFunctionEval</text>
</g>
<g >
<title>HybridInit (906,324 us, 2.00%)</title><rect x="960.5" y="135" width="23.6" height="15.0" fill="rgb(150.327511623969,150.327511623969,120.817940946925)" rx="2" ry="2" />
<text  x="963.47" y="145.5" >H..</text>
</g>
<g >
<title>firedrake.slate.slac.compiler.generate_loopy_kernel (19,302,216 us, 42.69%)</title><rect x="456.8" y="231" width="503.7" height="15.0" fill="rgb(133.812624938721,133.812624938721,153.318572568785)" rx="2" ry="2" />
<text  x="459.77" y="241.5" >firedrake.slate.slac.compiler.generate_loopy_kernel</text>
</g>
<g >
<title>firedrake.assemble.assemble_form (7,889,279 us, 17.45%)</title><rect x="984.1" y="151" width="205.9" height="15.0" fill="rgb(118.670786610661,147.803537269431,147.803537269431)" rx="2" ry="2" />
<text  x="987.12" y="161.5" >firedrake.assemble.assem..</text>
</g>
<g >
<title>firedrake.assemble.allocate_matrix (6,490 us, 0.01%)</title><rect x="91.9" y="87" width="0.2" height="15.0" fill="rgb(136.599330435375,152.451678261023,152.451678261023)" rx="2" ry="2" />
<text  x="94.90" y="97.5" ></text>
</g>
<g >
<title>PCSetUp (906,324 us, 2.00%)</title><rect x="960.5" y="119" width="23.6" height="15.0" fill="rgb(152.194070110782,152.194070110782,129.863570536867)" rx="2" ry="2" />
<text  x="963.47" y="129.5" >P..</text>
</g>
<g >
<title>firedrake.slate.slac.optimise.optimise (19,323 us, 0.04%)</title><rect x="611.6" y="247" width="0.5" height="15.0" fill="rgb(152.255434426453,152.255434426453,130.160951451272)" rx="2" ry="2" />
<text  x="614.65" y="257.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (8,910 us, 0.02%)</title><rect x="91.7" y="103" width="0.2" height="15.0" fill="rgb(135.360556001069,135.360556001069,153.618172129239)" rx="2" ry="2" />
<text  x="94.67" y="113.5" ></text>
</g>
<g >
<title>ParLoopExecute (6,650,978 us, 14.71%)</title><rect x="984.1" y="167" width="173.6" height="15.0" fill="rgb(146.586508219936,159.858010289778,146.586508219936)" rx="2" ry="2" />
<text  x="987.12" y="177.5" >ParLoopExecute</text>
</g>
<g >
<title>ParLoop_Cells_wrap_form0_cell_integral_otherwise (21,793 us, 0.05%)</title><rect x="984.1" y="183" width="0.6" height="15.0" fill="rgb(137.627711588495,105.796010945519,137.627711588495)" rx="2" ry="2" />
<text  x="987.12" y="193.5" ></text>
</g>
<g >
<title>firedrake (45,218,063 us, 100.00%)</title><rect x="10.0" y="55" width="1180.0" height="15.0" fill="rgb(131.401550737094,131.401550737094,152.851913045889)" rx="2" ry="2" />
<text  x="13.00" y="65.5" >firedrake</text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (5,490 us, 0.01%)</title><rect x="91.3" y="119" width="0.1" height="15.0" fill="rgb(154.686899651688,132.599563996277,132.599563996277)" rx="2" ry="2" />
<text  x="94.26" y="129.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (5,154 us, 0.01%)</title><rect x="961.3" y="183" width="0.1" height="15.0" fill="rgb(124.527537360102,163.44900554603,124.527537360102)" rx="2" ry="2" />
<text  x="964.26" y="193.5" ></text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (13,347,861 us, 29.52%)</title><rect x="612.1" y="247" width="348.4" height="15.0" fill="rgb(131.938319136153,131.938319136153,152.955803703772)" rx="2" ry="2" />
<text  x="615.15" y="257.5" >firedrake.tsfc_interface.compile_form</text>
</g>
<g >
<title>ParLoopExecute (11,387,103 us, 25.18%)</title><rect x="121.3" y="215" width="297.2" height="15.0" fill="rgb(147.450066917536,159.717430966913,147.450066917536)" rx="2" ry="2" />
<text  x="124.30" y="225.5" >ParLoopExecute</text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (6,351 us, 0.01%)</title><rect x="43.2" y="151" width="0.2" height="15.0" fill="rgb(142.874952122152,142.874952122152,155.072571378481)" rx="2" ry="2" />
<text  x="46.24" y="161.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (5,154 us, 0.01%)</title><rect x="961.3" y="199" width="0.1" height="15.0" fill="rgb(139.907553831274,139.907553831274,154.498236225408)" rx="2" ry="2" />
<text  x="964.26" y="209.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (5,154 us, 0.01%)</title><rect x="961.3" y="151" width="0.1" height="15.0" fill="rgb(125.110706373988,125.110706373988,151.634330265933)" rx="2" ry="2" />
<text  x="964.26" y="161.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (5,490 us, 0.01%)</title><rect x="91.3" y="87" width="0.1" height="15.0" fill="rgb(109.146743191175,145.334340827342,145.334340827342)" rx="2" ry="2" />
<text  x="94.26" y="97.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.action (10,049 us, 0.02%)</title><rect x="91.4" y="87" width="0.3" height="15.0" fill="rgb(123.729082644376,123.729082644376,151.366919221492)" rx="2" ry="2" />
<text  x="94.41" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (14,678 us, 0.03%)</title><rect x="43.4" y="103" width="0.4" height="15.0" fill="rgb(153.804938670041,125.837863136981,125.837863136981)" rx="2" ry="2" />
<text  x="46.41" y="113.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (5,490 us, 0.01%)</title><rect x="91.3" y="135" width="0.1" height="15.0" fill="rgb(130.986198342376,162.397595618683,130.986198342376)" rx="2" ry="2" />
<text  x="94.26" y="145.5" ></text>
</g>
<g >
<title>firedrake.assemble.assemble_form (32,157,459 us, 71.12%)</title><rect x="121.3" y="199" width="839.2" height="15.0" fill="rgb(139.31181384361,139.31181384361,154.382931711667)" rx="2" ry="2" />
<text  x="124.30" y="209.5" >firedrake.assemble.assemble_form</text>
</g>
<g >
<title>firedrake.functionspace.VectorFunctionSpace (5,490 us, 0.01%)</title><rect x="91.3" y="71" width="0.1" height="15.0" fill="rgb(139.36904816447,139.36904816447,154.394009322155)" rx="2" ry="2" />
<text  x="94.26" y="81.5" ></text>
</g>
<g >
<title>CreateExtMesh (1,280,286 us, 2.83%)</title><rect x="10.0" y="71" width="33.4" height="15.0" fill="rgb(112.567317720004,112.567317720004,149.206577623227)" rx="2" ry="2" />
<text  x="13.00" y="81.5" >Cr..</text>
</g>
<g >
<title>pyop2.parloop.JITModule.compile (6,600,940 us, 14.60%)</title><rect x="985.4" y="183" width="172.3" height="15.0" fill="rgb(156.255245978051,144.62355249839,144.62355249839)" rx="2" ry="2" />
<text  x="988.43" y="193.5" >pyop2.parloop.JITMod..</text>
</g>
<g >
<title>ParLoopExecute (818,899 us, 1.81%)</title><rect x="962.8" y="167" width="21.3" height="15.0" fill="rgb(142.030794233359,160.599638148058,142.030794233359)" rx="2" ry="2" />
<text  x="965.75" y="177.5" ></text>
</g>
<g >
<title>all (45,218,063 us, 100%)</title><rect x="10.0" y="39" width="1180.0" height="15.0" fill="rgb(150.033354023577,159.296895856627,150.033354023577)" rx="2" ry="2" />
<text  x="13.00" y="49.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (5,490 us, 0.01%)</title><rect x="91.3" y="103" width="0.1" height="15.0" fill="rgb(135.282595236157,135.282595236157,153.603082948934)" rx="2" ry="2" />
<text  x="94.26" y="113.5" ></text>
</g>
<g >
<title>pyop2.parloop.JITModule.compile (818,899 us, 1.81%)</title><rect x="962.8" y="183" width="21.3" height="15.0" fill="rgb(155.74045980969,140.676858540955,140.676858540955)" rx="2" ry="2" />
<text  x="965.75" y="193.5" ></text>
</g>
<g >
<title>pyop2.parloop.JITModule.compile (1,242,146 us, 2.75%)</title><rect x="10.8" y="119" width="32.4" height="15.0" fill="rgb(137.295151500003,161.370556732558,137.295151500003)" rx="2" ry="2" />
<text  x="13.83" y="129.5" >py..</text>
</g>
<g >
<title>firedrake.parloops.par_loop (824,248 us, 1.82%)</title><rect x="962.6" y="151" width="21.5" height="15.0" fill="rgb(150.796673020756,150.796673020756,123.091569254432)" rx="2" ry="2" />
<text  x="965.61" y="161.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.LinearVariationalProblem.__init__ (18,959 us, 0.04%)</title><rect x="91.4" y="71" width="0.5" height="15.0" fill="rgb(143.487423679205,160.362512424315,143.487423679205)" rx="2" ry="2" />
<text  x="94.41" y="81.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalProblem.__init__ (8,910 us, 0.02%)</title><rect x="91.7" y="87" width="0.2" height="15.0" fill="rgb(152.741137581748,117.682054793399,117.682054793399)" rx="2" ry="2" />
<text  x="94.67" y="97.5" ></text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (1,238,301 us, 2.74%)</title><rect x="1157.7" y="167" width="32.3" height="15.0" fill="rgb(130.476575257629,162.4805575162,130.476575257629)" rx="2" ry="2" />
<text  x="1160.69" y="177.5" >fi..</text>
</g>
<g >
<title>firedrake.matrix_free.operators.ImplicitMatrixContext.__init__ (6,490 us, 0.01%)</title><rect x="91.9" y="103" width="0.2" height="15.0" fill="rgb(146.713311818854,146.713311818854,155.815479706875)" rx="2" ry="2" />
<text  x="94.90" y="113.5" ></text>
</g>
<g >
<title>pyop2.parloop.JITModule.compile (1,114,288 us, 2.46%)</title><rect x="92.2" y="215" width="29.1" height="15.0" fill="rgb(149.206891160826,149.206891160826,115.387241779388)" rx="2" ry="2" />
<text  x="95.22" y="225.5" >p..</text>
</g>
<g >
<title>PCApply (33,277,483 us, 73.59%)</title><rect x="92.1" y="135" width="868.4" height="15.0" fill="rgb(132.798345953897,93.4207615068617,132.798345953897)" rx="2" ry="2" />
<text  x="95.07" y="145.5" >PCApply</text>
</g>
</g>
</svg>
