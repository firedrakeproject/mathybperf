<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="299" onload="init(evt)" viewBox="0 0 1200 299" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:13px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:18px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 13 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (1 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="299.0" fill="url(#background)"  />
<text id="title" x="600.00" y="26" >Firedrake example</text>
<text id="details" x="10.00" y="281" > </text>
<text id="unzoom" x="10.00" y="26" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="26" >Search</text>
<text id="ignorecase" x="1174.00" y="26" >ic</text>
<text id="matched" x="1090.00" y="281" > </text>
<g id="frames">
<g >
<title>firedrake.parloops.par_loop (7,509 us, 0.05%)</title><rect x="152.4" y="183" width="0.6" height="15.0" fill="rgb(152.692466619967,117.308910753079,117.308910753079)" rx="2" ry="2" />
<text  x="155.36" y="193.5" ></text>
</g>
<g >
<title>PCApply (12,778,463 us, 86.43%)</title><rect x="152.1" y="135" width="1019.9" height="15.0" fill="rgb(141.822173116408,153.805748585735,153.805748585735)" rx="2" ry="2" />
<text  x="155.14" y="145.5" >PCApply</text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.__init__ (11,113 us, 0.08%)</title><rect x="151.3" y="71" width="0.8" height="15.0" fill="rgb(130.075200587383,162.545897578798,130.075200587383)" rx="2" ry="2" />
<text  x="154.25" y="81.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (7,571 us, 0.05%)</title><rect x="1174.1" y="183" width="0.6" height="15.0" fill="rgb(120.965630617087,148.398496826652,148.398496826652)" rx="2" ry="2" />
<text  x="1177.05" y="193.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (6,012 us, 0.04%)</title><rect x="15.6" y="103" width="0.5" height="15.0" fill="rgb(150.329435630961,150.329435630961,120.827264980809)" rx="2" ry="2" />
<text  x="18.62" y="113.5" ></text>
</g>
<g >
<title>ParLoop_Cells_wrap_form1_cell_integral_otherwise (17,220 us, 0.12%)</title><rect x="1185.5" y="183" width="1.4" height="15.0" fill="rgb(129.536939083236,162.633521544589,129.536939083236)" rx="2" ry="2" />
<text  x="1188.55" y="193.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (8,616 us, 0.06%)</title><rect x="1173.2" y="151" width="0.6" height="15.0" fill="rgb(151.598401727282,151.598401727282,126.976869909134)" rx="2" ry="2" />
<text  x="1176.15" y="161.5" ></text>
</g>
<g >
<title>VecSet (2,421 us, 0.02%)</title><rect x="151.4" y="87" width="0.2" height="15.0" fill="rgb(154.049030737265,154.049030737265,138.852995111363)" rx="2" ry="2" />
<text  x="154.42" y="97.5" ></text>
</g>
<g >
<title>firedrake.interpolation.make_interpolator (116,301 us, 0.79%)</title><rect x="1174.7" y="151" width="9.2" height="15.0" fill="rgb(154.474906671082,130.974284478295,130.974284478295)" rx="2" ry="2" />
<text  x="1177.65" y="161.5" ></text>
</g>
<g >
<title>ParLoopExecute (2,178 us, 0.01%)</title><rect x="152.8" y="199" width="0.2" height="15.0" fill="rgb(133.58958524571,161.973788448373,133.58958524571)" rx="2" ry="2" />
<text  x="155.78" y="209.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (6,723 us, 0.05%)</title><rect x="1173.3" y="183" width="0.5" height="15.0" fill="rgb(152.786801610907,118.032145683619,118.032145683619)" rx="2" ry="2" />
<text  x="1176.30" y="193.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (6,012 us, 0.04%)</title><rect x="15.6" y="151" width="0.5" height="15.0" fill="rgb(139.358025507114,110.229940361981,139.358025507114)" rx="2" ry="2" />
<text  x="18.62" y="161.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalProblem.__init__ (8,957 us, 0.06%)</title><rect x="150.5" y="87" width="0.8" height="15.0" fill="rgb(113.015527610479,146.337359010124,146.337359010124)" rx="2" ry="2" />
<text  x="153.54" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (15,180 us, 0.10%)</title><rect x="16.1" y="103" width="1.2" height="15.0" fill="rgb(137.301270591902,104.95950589175,137.301270591902)" rx="2" ry="2" />
<text  x="19.10" y="113.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (15,180 us, 0.10%)</title><rect x="16.1" y="87" width="1.2" height="15.0" fill="rgb(139.978093971813,139.978093971813,154.511889155835)" rx="2" ry="2" />
<text  x="19.10" y="97.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (5,516 us, 0.04%)</title><rect x="149.1" y="87" width="0.4" height="15.0" fill="rgb(133.019934649727,162.066522266323,133.019934649727)" rx="2" ry="2" />
<text  x="152.09" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspace.MixedFunctionSpace (1,893 us, 0.01%)</title><rect x="1173.2" y="167" width="0.1" height="15.0" fill="rgb(151.849147151983,151.849147151983,128.192020813457)" rx="2" ry="2" />
<text  x="1176.15" y="177.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (5,516 us, 0.04%)</title><rect x="149.1" y="103" width="0.4" height="15.0" fill="rgb(144.792179164647,154.575750153797,154.575750153797)" rx="2" ry="2" />
<text  x="152.09" y="113.5" ></text>
</g>
<g >
<title>CreateExtMesh (76,479 us, 0.52%)</title><rect x="10.0" y="71" width="6.1" height="15.0" fill="rgb(150.165850339625,150.165850339625,120.03450549203)" rx="2" ry="2" />
<text  x="13.00" y="81.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (10,193 us, 0.07%)</title><rect x="1173.8" y="151" width="0.9" height="15.0" fill="rgb(128.551386856109,162.793960279238,128.551386856109)" rx="2" ry="2" />
<text  x="1176.84" y="161.5" ></text>
</g>
<g >
<title>ParLoopExecute (33,315 us, 0.23%)</title><rect x="1184.4" y="167" width="2.7" height="15.0" fill="rgb(117.360369961592,117.360369961592,150.134265153857)" rx="2" ry="2" />
<text  x="1187.42" y="177.5" ></text>
</g>
<g >
<title>firedrake.assemble.assemble (69,946 us, 0.47%)</title><rect x="1184.4" y="135" width="5.6" height="15.0" fill="rgb(153.613205844354,124.367911473383,124.367911473383)" rx="2" ry="2" />
<text  x="1187.42" y="145.5" ></text>
</g>
<g >
<title>perfsolve (13,004,409 us, 87.95%)</title><rect x="152.1" y="71" width="1037.9" height="15.0" fill="rgb(155.583897936579,139.476550847108,139.476550847108)" rx="2" ry="2" />
<text  x="155.14" y="81.5" >perfsolve</text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (2,508 us, 0.02%)</title><rect x="1174.5" y="247" width="0.2" height="15.0" fill="rgb(144.24053858262,144.24053858262,155.336878435346)" rx="2" ry="2" />
<text  x="1177.45" y="257.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (3,404 us, 0.02%)</title><rect x="1189.7" y="199" width="0.3" height="15.0" fill="rgb(131.716306219809,131.716306219809,152.912833461898)" rx="2" ry="2" />
<text  x="1192.73" y="209.5" ></text>
</g>
<g >
<title>firedrake.parloops.par_loop (6,029 us, 0.04%)</title><rect x="1183.9" y="151" width="0.5" height="15.0" fill="rgb(132.750144860199,151.453741260052,151.453741260052)" rx="2" ry="2" />
<text  x="1186.94" y="161.5" ></text>
</g>
<g >
<title>firedrake.assemble.assemble (12,768,178 us, 86.36%)</title><rect x="153.0" y="183" width="1019.0" height="15.0" fill="rgb(156.644935163934,147.611169590158,147.611169590158)" rx="2" ry="2" />
<text  x="155.96" y="193.5" >firedrake.assemble.assemble</text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (5,728 us, 0.04%)</title><rect x="1189.5" y="183" width="0.5" height="15.0" fill="rgb(109.083864609402,145.318038972808,145.318038972808)" rx="2" ry="2" />
<text  x="1192.54" y="193.5" ></text>
</g>
<g >
<title>ParLoopExecute (37,466 us, 0.25%)</title><rect x="12.6" y="103" width="3.0" height="15.0" fill="rgb(154.240413182371,129.176501064847,129.176501064847)" rx="2" ry="2" />
<text  x="15.63" y="113.5" ></text>
</g>
<g >
<title>pyop2.parloop.JITModule.compile (12,166,107 us, 82.28%)</title><rect x="153.2" y="231" width="971.0" height="15.0" fill="rgb(116.213020531578,116.213020531578,149.912197522241)" rx="2" ry="2" />
<text  x="156.21" y="241.5" >pyop2.parloop.JITModule.compile</text>
</g>
<g >
<title>firedrake.assemble.assemble_form (69,946 us, 0.47%)</title><rect x="1184.4" y="151" width="5.6" height="15.0" fill="rgb(155.52659285985,155.52659285985,146.013488474658)" rx="2" ry="2" />
<text  x="1187.42" y="161.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.action (10,414 us, 0.07%)</title><rect x="149.7" y="87" width="0.8" height="15.0" fill="rgb(150.302505723781,150.302505723781,120.696758507555)" rx="2" ry="2" />
<text  x="152.70" y="97.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.solve (13,004,409 us, 87.95%)</title><rect x="152.1" y="87" width="1037.9" height="15.0" fill="rgb(114.525695354807,114.525695354807,149.585618455769)" rx="2" ry="2" />
<text  x="155.14" y="97.5" >firedrake.variational_solver.NonlinearVariationalSolver.solve</text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (6,723 us, 0.05%)</title><rect x="1173.3" y="199" width="0.5" height="15.0" fill="rgb(152.806573906386,118.183733282294,118.183733282294)" rx="2" ry="2" />
<text  x="1176.30" y="209.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (6,012 us, 0.04%)</title><rect x="15.6" y="119" width="0.5" height="15.0" fill="rgb(135.183682341342,135.183682341342,153.583938517679)" rx="2" ry="2" />
<text  x="18.62" y="129.5" ></text>
</g>
<g >
<title>ParLoopExecute (1,788 us, 0.01%)</title><rect x="1184.3" y="167" width="0.1" height="15.0" fill="rgb(147.937046037338,159.638155296247,147.937046037338)" rx="2" ry="2" />
<text  x="1187.28" y="177.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (2,460 us, 0.02%)</title><rect x="151.9" y="119" width="0.2" height="15.0" fill="rgb(145.608940548877,154.787503105264,154.787503105264)" rx="2" ry="2" />
<text  x="154.94" y="129.5" ></text>
</g>
<g >
<title>SNESSolve (13,004,409 us, 87.95%)</title><rect x="152.1" y="103" width="1037.9" height="15.0" fill="rgb(129.662454949376,162.613088729171,129.662454949376)" rx="2" ry="2" />
<text  x="155.14" y="113.5" >SNESSolve</text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (6,012 us, 0.04%)</title><rect x="15.6" y="135" width="0.5" height="15.0" fill="rgb(127.394985559533,127.394985559533,152.076448817974)" rx="2" ry="2" />
<text  x="18.62" y="145.5" ></text>
</g>
<g >
<title>HybridInit (156,000 us, 1.06%)</title><rect x="1172.0" y="135" width="12.4" height="15.0" fill="rgb(154.216673334592,128.994495565205,128.994495565205)" rx="2" ry="2" />
<text  x="1174.97" y="145.5" ></text>
</g>
<g >
<title>HybridBreak (10,285 us, 0.07%)</title><rect x="152.1" y="167" width="0.9" height="15.0" fill="rgb(154.891437823741,134.167689982014,134.167689982014)" rx="2" ry="2" />
<text  x="155.14" y="177.5" ></text>
</g>
<g >
<title>firedrake.functionspace.VectorFunctionSpace (6,012 us, 0.04%)</title><rect x="15.6" y="87" width="0.5" height="15.0" fill="rgb(111.672238539765,111.672238539765,149.033336491567)" rx="2" ry="2" />
<text  x="18.62" y="97.5" ></text>
</g>
<g >
<title>firedrake.slate.slac.compiler.compile_expression (598,899 us, 4.05%)</title><rect x="1124.2" y="215" width="47.8" height="15.0" fill="rgb(109.92548614807,109.92548614807,148.695255383497)" rx="2" ry="2" />
<text  x="1127.17" y="225.5" >fire..</text>
</g>
<g >
<title>HybridRHS (12,768,178 us, 86.36%)</title><rect x="153.0" y="167" width="1019.0" height="15.0" fill="rgb(109.621868173636,109.621868173636,148.636490614252)" rx="2" ry="2" />
<text  x="155.96" y="177.5" >HybridRHS</text>
</g>
<g >
<title>firedrake.assemble.allocate_matrix (6,585 us, 0.04%)</title><rect x="151.6" y="87" width="0.5" height="15.0" fill="rgb(156.296027894684,144.936213859242,144.936213859242)" rx="2" ry="2" />
<text  x="154.61" y="97.5" ></text>
</g>
<g >
<title>firedrake.assemble.assemble_form (12,768,178 us, 86.36%)</title><rect x="153.0" y="199" width="1019.0" height="15.0" fill="rgb(156.515059536389,146.61545644565,146.61545644565)" rx="2" ry="2" />
<text  x="155.96" y="209.5" >firedrake.assemble.assemble_form</text>
</g>
<g >
<title>KSPSolve (12,778,463 us, 86.43%)</title><rect x="152.1" y="119" width="1019.9" height="15.0" fill="rgb(154.215562587318,128.985979836102,128.985979836102)" rx="2" ry="2" />
<text  x="155.14" y="129.5" >KSPSolve</text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (15,180 us, 0.10%)</title><rect x="16.1" y="119" width="1.2" height="15.0" fill="rgb(131.592173745412,162.298948460049,131.592173745412)" rx="2" ry="2" />
<text  x="19.10" y="129.5" ></text>
</g>
<g >
<title>firedrake.extrusion_utils.make_extruded_coords (68,328 us, 0.46%)</title><rect x="10.2" y="87" width="5.4" height="15.0" fill="rgb(136.117432642198,152.326741796125,152.326741796125)" rx="2" ry="2" />
<text  x="13.17" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (5,516 us, 0.04%)</title><rect x="149.1" y="135" width="0.4" height="15.0" fill="rgb(124.322905573188,124.322905573188,151.481852691585)" rx="2" ry="2" />
<text  x="152.09" y="145.5" ></text>
</g>
<g >
<title>SNESFunctionEval (69,946 us, 0.47%)</title><rect x="1184.4" y="119" width="5.6" height="15.0" fill="rgb(152.238349935976,113.827349509151,113.827349509151)" rx="2" ry="2" />
<text  x="1187.42" y="129.5" ></text>
</g>
<g >
<title>CreateMesh (1,866 us, 0.01%)</title><rect x="17.3" y="71" width="0.2" height="15.0" fill="rgb(120.919472820376,148.386529990468,148.386529990468)" rx="2" ry="2" />
<text  x="20.32" y="81.5" ></text>
</g>
<g >
<title>ParLoopExecute (12,166,107 us, 82.28%)</title><rect x="153.2" y="215" width="971.0" height="15.0" fill="rgb(142.006650425671,142.006650425671,154.904512985614)" rx="2" ry="2" />
<text  x="156.21" y="225.5" >ParLoopExecute</text>
</g>
<g >
<title>firedrake.ufl_expr.action (4,125 us, 0.03%)</title><rect x="151.6" y="119" width="0.3" height="15.0" fill="rgb(120.447248545567,148.264101474777,148.264101474777)" rx="2" ry="2" />
<text  x="154.61" y="129.5" ></text>
</g>
<g >
<title>firedrake.matrix_free.operators.ImplicitMatrixContext.__init__ (6,585 us, 0.04%)</title><rect x="151.6" y="103" width="0.5" height="15.0" fill="rgb(132.955592062646,162.076996640965,132.955592062646)" rx="2" ry="2" />
<text  x="154.61" y="113.5" ></text>
</g>
<g >
<title>firedrake.__init__ (1,649,260 us, 11.15%)</title><rect x="17.5" y="71" width="131.6" height="15.0" fill="rgb(140.840067825896,140.840067825896,154.678722805012)" rx="2" ry="2" />
<text  x="20.46" y="81.5" >firedrake.__ini..</text>
</g>
<g >
<title>ParLoop_Cells_wrap_form0_cell_integral_otherwise (14,179 us, 0.10%)</title><rect x="1184.4" y="183" width="1.1" height="15.0" fill="rgb(153.019724275382,119.81788611126,119.81788611126)" rx="2" ry="2" />
<text  x="1187.42" y="193.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (2,508 us, 0.02%)</title><rect x="1174.5" y="215" width="0.2" height="15.0" fill="rgb(150.11530241299,150.11530241299,119.789542462952)" rx="2" ry="2" />
<text  x="1177.45" y="225.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (6,723 us, 0.05%)</title><rect x="1173.3" y="167" width="0.5" height="15.0" fill="rgb(110.546304547888,110.546304547888,148.815413783462)" rx="2" ry="2" />
<text  x="1176.30" y="177.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (5,254 us, 0.04%)</title><rect x="1174.2" y="199" width="0.5" height="15.0" fill="rgb(141.86330500832,153.816412409564,153.816412409564)" rx="2" ry="2" />
<text  x="1177.24" y="209.5" ></text>
</g>
<g >
<title>PCSetUp (156,000 us, 1.06%)</title><rect x="1172.0" y="119" width="12.4" height="15.0" fill="rgb(153.294775009907,121.926608409286,121.926608409286)" rx="2" ry="2" />
<text  x="1174.97" y="129.5" ></text>
</g>
<g >
<title>firedrake (14,785,393 us, 100.00%)</title><rect x="10.0" y="55" width="1180.0" height="15.0" fill="rgb(154.889286290617,134.151194894728,134.151194894728)" rx="2" ry="2" />
<text  x="13.00" y="65.5" >firedrake</text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (8,957 us, 0.06%)</title><rect x="150.5" y="103" width="0.8" height="15.0" fill="rgb(153.337366622253,153.337366622253,135.404161323227)" rx="2" ry="2" />
<text  x="153.54" y="113.5" ></text>
</g>
<g >
<title>pyop2.parloop.JITModule.compile (37,466 us, 0.25%)</title><rect x="12.6" y="119" width="3.0" height="15.0" fill="rgb(125.283336536624,125.283336536624,151.667742555476)" rx="2" ry="2" />
<text  x="15.63" y="129.5" ></text>
</g>
<g >
<title>pyop2.parloop.JITModule.compile (1,916 us, 0.01%)</title><rect x="1186.9" y="183" width="0.2" height="15.0" fill="rgb(136.971148145768,161.423301464642,136.971148145768)" rx="2" ry="2" />
<text  x="1189.92" y="193.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (1,893 us, 0.01%)</title><rect x="1173.2" y="183" width="0.1" height="15.0" fill="rgb(133.181261302871,94.4019820886077,133.181261302871)" rx="2" ry="2" />
<text  x="1176.15" y="193.5" ></text>
</g>
<g >
<title>firedrake.functionspace.VectorFunctionSpace (5,516 us, 0.04%)</title><rect x="149.1" y="71" width="0.4" height="15.0" fill="rgb(154.657147491883,154.657147491883,141.800022460663)" rx="2" ry="2" />
<text  x="152.09" y="81.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (1,581 us, 0.01%)</title><rect x="1189.9" y="215" width="0.1" height="15.0" fill="rgb(136.466066809269,152.417128432033,152.417128432033)" rx="2" ry="2" />
<text  x="1192.87" y="225.5" ></text>
</g>
<g >
<title>firedrake.utility_meshes.RectangleMesh (2,199 us, 0.01%)</title><rect x="149.5" y="87" width="0.2" height="15.0" fill="rgb(129.749870901327,162.598858225365,129.749870901327)" rx="2" ry="2" />
<text  x="152.53" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (5,516 us, 0.04%)</title><rect x="149.1" y="119" width="0.4" height="15.0" fill="rgb(147.543950379416,131.206372847253,147.543950379416)" rx="2" ry="2" />
<text  x="152.09" y="129.5" ></text>
</g>
<g >
<title>firedrake.utility_meshes.SquareMesh (2,199 us, 0.01%)</title><rect x="149.5" y="71" width="0.2" height="15.0" fill="rgb(144.874676904163,144.874676904163,155.459614884677)" rx="2" ry="2" />
<text  x="152.53" y="81.5" ></text>
</g>
<g >
<title>SCForwardElim (12,778,463 us, 86.43%)</title><rect x="152.1" y="151" width="1019.9" height="15.0" fill="rgb(154.032688539035,127.583945465934,127.583945465934)" rx="2" ry="2" />
<text  x="155.14" y="161.5" >SCForwardElim</text>
</g>
<g >
<title>firedrake.mesh.MeshTopology._facets (2,336 us, 0.02%)</title><rect x="149.3" y="151" width="0.2" height="15.0" fill="rgb(132.594328815819,92.8979675905351,132.594328815819)" rx="2" ry="2" />
<text  x="152.34" y="161.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.LinearVariationalProblem.__init__ (19,371 us, 0.13%)</title><rect x="149.7" y="71" width="1.6" height="15.0" fill="rgb(144.445408712627,160.206561372363,144.445408712627)" rx="2" ry="2" />
<text  x="152.70" y="81.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (15,180 us, 0.10%)</title><rect x="16.1" y="71" width="1.2" height="15.0" fill="rgb(149.62506104589,149.62506104589,117.413757376236)" rx="2" ry="2" />
<text  x="19.10" y="81.5" ></text>
</g>
<g >
<title>all (14,785,393 us, 100%)</title><rect x="10.0" y="39" width="1180.0" height="15.0" fill="rgb(115.360497332645,146.945314123278,146.945314123278)" rx="2" ry="2" />
<text  x="13.00" y="49.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (2,508 us, 0.02%)</title><rect x="1174.5" y="231" width="0.2" height="15.0" fill="rgb(147.616829382808,147.616829382808,107.681557778222)" rx="2" ry="2" />
<text  x="1177.45" y="241.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (10,193 us, 0.07%)</title><rect x="1173.8" y="167" width="0.9" height="15.0" fill="rgb(109.219951446283,145.353320745333,145.353320745333)" rx="2" ry="2" />
<text  x="1176.84" y="177.5" ></text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (36,631 us, 0.25%)</title><rect x="1187.1" y="167" width="2.9" height="15.0" fill="rgb(127.858367936736,162.906777312624,127.858367936736)" rx="2" ry="2" />
<text  x="1190.08" y="177.5" ></text>
</g>
</g>
</svg>
