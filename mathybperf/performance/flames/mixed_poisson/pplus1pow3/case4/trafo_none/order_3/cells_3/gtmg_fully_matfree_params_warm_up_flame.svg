<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="299" onload="init(evt)" viewBox="0 0 1200 299" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:13px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:18px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 13 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (1 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="299.0" fill="url(#background)"  />
<text id="title" x="600.00" y="26" >Firedrake example</text>
<text id="details" x="10.00" y="281" > </text>
<text id="unzoom" x="10.00" y="26" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="26" >Search</text>
<text id="ignorecase" x="1174.00" y="26" >ic</text>
<text id="matched" x="1090.00" y="281" > </text>
<g id="frames">
<g >
<title>SNESFunctionEval (9,109,662 us, 17.51%)</title><rect x="983.4" y="119" width="206.6" height="15.0" fill="rgb(150.620513547008,159.201311748161,150.620513547008)" rx="2" ry="2" />
<text  x="986.41" y="129.5" >SNESFunctionEval</text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (6,293 us, 0.01%)</title><rect x="960.0" y="167" width="0.2" height="15.0" fill="rgb(153.586439017047,124.162699130691,124.162699130691)" rx="2" ry="2" />
<text  x="963.01" y="177.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (10,606 us, 0.02%)</title><rect x="959.8" y="183" width="0.2" height="15.0" fill="rgb(152.674526849101,152.674526849101,132.191937807182)" rx="2" ry="2" />
<text  x="962.77" y="193.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (16,256 us, 0.03%)</title><rect x="959.6" y="151" width="0.4" height="15.0" fill="rgb(140.033218642011,140.033218642011,154.522558446841)" rx="2" ry="2" />
<text  x="962.64" y="161.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.LinearVariationalProblem.__init__ (33,250 us, 0.06%)</title><rect x="152.5" y="71" width="0.8" height="15.0" fill="rgb(152.518953496518,115.978643473302,115.978643473302)" rx="2" ry="2" />
<text  x="155.53" y="81.5" ></text>
</g>
<g >
<title>pyop2.parloop.JITModule.compile (7,257,853 us, 13.95%)</title><rect x="985.1" y="183" width="164.6" height="15.0" fill="rgb(128.029293818682,150.229816915955,150.229816915955)" rx="2" ry="2" />
<text  x="988.06" y="193.5" >pyop2.parloop.JITMo..</text>
</g>
<g >
<title>firedrake.interpolation.make_interpolator (89,023 us, 0.17%)</title><rect x="960.2" y="151" width="2.0" height="15.0" fill="rgb(152.419293660497,115.214584730478,115.214584730478)" rx="2" ry="2" />
<text  x="963.15" y="161.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (23,995 us, 0.05%)</title><rect x="78.9" y="71" width="0.5" height="15.0" fill="rgb(123.966912171181,123.966912171181,151.412950742809)" rx="2" ry="2" />
<text  x="81.87" y="81.5" ></text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (1,779,070 us, 3.42%)</title><rect x="1149.7" y="167" width="40.3" height="15.0" fill="rgb(143.658780512809,160.334617125822,143.658780512809)" rx="2" ry="2" />
<text  x="1152.65" y="177.5" >fir..</text>
</g>
<g >
<title>pyop2.parloop.JITModule.compile (11,569,359 us, 22.24%)</title><rect x="180.4" y="231" width="262.3" height="15.0" fill="rgb(153.179488339594,121.042743936886,121.042743936886)" rx="2" ry="2" />
<text  x="183.36" y="241.5" >pyop2.parloop.JITModule.compile</text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (23,995 us, 0.05%)</title><rect x="78.9" y="87" width="0.5" height="15.0" fill="rgb(143.955060622529,143.955060622529,155.281624636619)" rx="2" ry="2" />
<text  x="81.87" y="97.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (16,364 us, 0.03%)</title><rect x="152.9" y="103" width="0.4" height="15.0" fill="rgb(123.377396607315,123.377396607315,151.298850956254)" rx="2" ry="2" />
<text  x="155.91" y="113.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (9,767 us, 0.02%)</title><rect x="78.7" y="151" width="0.2" height="15.0" fill="rgb(117.44091550112,147.484681796587,147.484681796587)" rx="2" ry="2" />
<text  x="81.65" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (23,995 us, 0.05%)</title><rect x="78.9" y="103" width="0.5" height="15.0" fill="rgb(124.106877652253,124.106877652253,151.44004083592)" rx="2" ry="2" />
<text  x="81.87" y="113.5" ></text>
</g>
<g >
<title>VecSet (8,929 us, 0.02%)</title><rect x="153.4" y="87" width="0.2" height="15.0" fill="rgb(147.889673095623,132.092287307535,147.889673095623)" rx="2" ry="2" />
<text  x="156.41" y="97.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (6,293 us, 0.01%)</title><rect x="960.0" y="183" width="0.2" height="15.0" fill="rgb(153.601601356166,153.601601356166,136.684683495267)" rx="2" ry="2" />
<text  x="963.01" y="193.5" ></text>
</g>
<g >
<title>ParLoopExecute (11,569,359 us, 22.24%)</title><rect x="180.4" y="215" width="262.3" height="15.0" fill="rgb(128.754715349803,162.760860291893,128.754715349803)" rx="2" ry="2" />
<text  x="183.36" y="225.5" >ParLoopExecute</text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (9,818 us, 0.02%)</title><rect x="1189.8" y="183" width="0.2" height="15.0" fill="rgb(146.400323127093,146.400323127093,155.754901250405)" rx="2" ry="2" />
<text  x="1192.78" y="193.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (9,767 us, 0.02%)</title><rect x="78.7" y="135" width="0.2" height="15.0" fill="rgb(131.722595671979,131.722595671979,152.914050775222)" rx="2" ry="2" />
<text  x="81.65" y="145.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (6,293 us, 0.01%)</title><rect x="960.0" y="199" width="0.2" height="15.0" fill="rgb(153.699450172922,125.029117992404,125.029117992404)" rx="2" ry="2" />
<text  x="963.01" y="209.5" ></text>
</g>
<g >
<title>firedrake.assemble.assemble_form (34,343,082 us, 66.00%)</title><rect x="180.4" y="199" width="778.8" height="15.0" fill="rgb(147.930201580436,147.930201580436,109.200207659036)" rx="2" ry="2" />
<text  x="183.36" y="209.5" >firedrake.assemble.assemble_form</text>
</g>
<g >
<title>pyop2.parloop.JITModule.compile (2,976,198 us, 5.72%)</title><rect x="11.2" y="119" width="67.5" height="15.0" fill="rgb(109.183266226069,109.183266226069,148.551599914723)" rx="2" ry="2" />
<text  x="14.16" y="129.5" >pyop2...</text>
</g>
<g >
<title>all (52,031,938 us, 100%)</title><rect x="10.0" y="39" width="1180.0" height="15.0" fill="rgb(142.938950417084,142.938950417084,155.084958145242)" rx="2" ry="2" />
<text  x="13.00" y="49.5" ></text>
</g>
<g >
<title>HybridBreak (1,165,369 us, 2.24%)</title><rect x="153.9" y="167" width="26.5" height="15.0" fill="rgb(142.862428297757,160.464255858505,142.862428297757)" rx="2" ry="2" />
<text  x="156.93" y="177.5" >H..</text>
</g>
<g >
<title>SNESSolve (45,685,471 us, 87.80%)</title><rect x="153.9" y="103" width="1036.1" height="15.0" fill="rgb(149.994207317724,159.303268576184,149.994207317724)" rx="2" ry="2" />
<text  x="156.93" y="113.5" >SNESSolve</text>
</g>
<g >
<title>firedrake.extrusion_utils.make_extruded_coords (3,027,132 us, 5.82%)</title><rect x="10.0" y="87" width="68.7" height="15.0" fill="rgb(156.194725209977,144.159559943156,144.159559943156)" rx="2" ry="2" />
<text  x="13.00" y="97.5" >firedr..</text>
</g>
<g >
<title>HybridInit (1,067,358 us, 2.05%)</title><rect x="959.2" y="135" width="24.2" height="15.0" fill="rgb(152.047978360873,112.367834100025,112.367834100025)" rx="2" ry="2" />
<text  x="962.20" y="145.5" >H..</text>
</g>
<g >
<title>ParLoopExecute (7,330,592 us, 14.09%)</title><rect x="983.4" y="167" width="166.3" height="15.0" fill="rgb(147.644795692932,159.685730933709,147.644795692932)" rx="2" ry="2" />
<text  x="986.41" y="177.5" >ParLoopExecute</text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (16,025,787 us, 30.80%)</title><rect x="595.8" y="247" width="363.4" height="15.0" fill="rgb(145.974707410521,145.974707410521,155.67252401494)" rx="2" ry="2" />
<text  x="598.76" y="257.5" >firedrake.tsfc_interface.compile_form</text>
</g>
<g >
<title>PCSetUp (1,067,358 us, 2.05%)</title><rect x="959.2" y="119" width="24.2" height="15.0" fill="rgb(155.406863789117,155.406863789117,145.433262978027)" rx="2" ry="2" />
<text  x="962.20" y="129.5" >P..</text>
</g>
<g >
<title>firedrake.slate.slac.compiler.generate_loopy_kernel (21,516,013 us, 41.35%)</title><rect x="471.3" y="231" width="487.9" height="15.0" fill="rgb(108.429600161984,145.148414856811,145.148414856811)" rx="2" ry="2" />
<text  x="474.25" y="241.5" >firedrake.slate.slac.compiler.generate_loopy_kernel</text>
</g>
<g >
<title>SCForwardElim (35,508,451 us, 68.24%)</title><rect x="153.9" y="151" width="805.3" height="15.0" fill="rgb(110.286759673128,145.629900655996,145.629900655996)" rx="2" ry="2" />
<text  x="156.93" y="161.5" >SCForwardElim</text>
</g>
<g >
<title>firedrake.functionspace.VectorFunctionSpace (9,767 us, 0.02%)</title><rect x="78.7" y="87" width="0.2" height="15.0" fill="rgb(151.303208620557,151.303208620557,125.546318699621)" rx="2" ry="2" />
<text  x="81.65" y="97.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (7,937 us, 0.02%)</title><rect x="152.3" y="87" width="0.2" height="15.0" fill="rgb(124.707220452918,163.41975480999,124.707220452918)" rx="2" ry="2" />
<text  x="155.35" y="97.5" ></text>
</g>
<g >
<title>ParLoop_Cells_wrap_form1_cell_integral_otherwise (40,193 us, 0.08%)</title><rect x="984.1" y="183" width="1.0" height="15.0" fill="rgb(155.159415084999,155.159415084999,144.234088488843)" rx="2" ry="2" />
<text  x="987.15" y="193.5" ></text>
</g>
<g >
<title>pyop2.parloop.JITModule.compile (1,152,514 us, 2.22%)</title><rect x="154.2" y="215" width="26.2" height="15.0" fill="rgb(137.788765863158,161.290200905997,137.788765863158)" rx="2" ry="2" />
<text  x="157.22" y="225.5" >p..</text>
</g>
<g >
<title>ParLoop_Cells_wrap_form0_cell_integral_otherwise (32,546 us, 0.06%)</title><rect x="983.4" y="183" width="0.7" height="15.0" fill="rgb(119.824113652428,148.102547983963,148.102547983963)" rx="2" ry="2" />
<text  x="986.41" y="193.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (9,767 us, 0.02%)</title><rect x="78.7" y="119" width="0.2" height="15.0" fill="rgb(137.379023262618,161.356903189806,137.379023262618)" rx="2" ry="2" />
<text  x="81.65" y="129.5" ></text>
</g>
<g >
<title>PCApply (35,508,451 us, 68.24%)</title><rect x="153.9" y="135" width="805.3" height="15.0" fill="rgb(147.665224597666,147.665224597666,107.916088434845)" rx="2" ry="2" />
<text  x="156.93" y="145.5" >PCApply</text>
</g>
<g >
<title>KSPSolve (35,508,451 us, 68.24%)</title><rect x="153.9" y="119" width="805.3" height="15.0" fill="rgb(145.115900910498,145.115900910498,155.506303402032)" rx="2" ry="2" />
<text  x="156.93" y="129.5" >KSPSolve</text>
</g>
<g >
<title>firedrake (52,031,938 us, 100.00%)</title><rect x="10.0" y="55" width="1180.0" height="15.0" fill="rgb(113.139889539538,113.139889539538,149.317397975394)" rx="2" ry="2" />
<text  x="13.00" y="65.5" >firedrake</text>
</g>
<g >
<title>HybridRHS (34,343,082 us, 66.00%)</title><rect x="180.4" y="167" width="778.8" height="15.0" fill="rgb(142.591381447623,142.591381447623,155.017686731798)" rx="2" ry="2" />
<text  x="183.36" y="177.5" >HybridRHS</text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (10,606 us, 0.02%)</title><rect x="959.8" y="199" width="0.2" height="15.0" fill="rgb(128.768165413406,150.42137621829,150.42137621829)" rx="2" ry="2" />
<text  x="962.77" y="209.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (10,606 us, 0.02%)</title><rect x="959.8" y="167" width="0.2" height="15.0" fill="rgb(152.10795967589,112.827690848492,112.827690848492)" rx="2" ry="2" />
<text  x="962.77" y="177.5" ></text>
</g>
<g >
<title>firedrake.assemble.allocate_matrix (13,818 us, 0.03%)</title><rect x="153.6" y="87" width="0.3" height="15.0" fill="rgb(133.611091192454,161.970287480298,133.611091192454)" rx="2" ry="2" />
<text  x="156.61" y="97.5" ></text>
</g>
<g >
<title>ParLoopExecute (2,976,198 us, 5.72%)</title><rect x="11.2" y="103" width="67.5" height="15.0" fill="rgb(125.319305898472,149.527227455159,149.527227455159)" rx="2" ry="2" />
<text  x="14.16" y="113.5" >ParLoo..</text>
</g>
<g >
<title>firedrake.assemble.assemble_form (9,109,662 us, 17.51%)</title><rect x="983.4" y="151" width="206.6" height="15.0" fill="rgb(146.086204357149,159.93945510465,146.086204357149)" rx="2" ry="2" />
<text  x="986.41" y="161.5" >firedrake.assemble.assem..</text>
</g>
<g >
<title>pyop2.parloop.JITModule.compile (930,747 us, 1.79%)</title><rect x="962.3" y="183" width="21.1" height="15.0" fill="rgb(153.167751751386,120.952763427291,120.952763427291)" rx="2" ry="2" />
<text  x="965.30" y="193.5" ></text>
</g>
<g >
<title>firedrake.matrix_free.operators.ImplicitMatrixContext.__init__ (13,818 us, 0.03%)</title><rect x="153.6" y="103" width="0.3" height="15.0" fill="rgb(154.291177403454,129.565693426481,129.565693426481)" rx="2" ry="2" />
<text  x="156.61" y="113.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (9,818 us, 0.02%)</title><rect x="1189.8" y="199" width="0.2" height="15.0" fill="rgb(139.945626534737,160.939084052485,139.945626534737)" rx="2" ry="2" />
<text  x="1192.78" y="209.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.action (8,124 us, 0.02%)</title><rect x="153.7" y="119" width="0.2" height="15.0" fill="rgb(143.849898399367,160.303504911731,143.849898399367)" rx="2" ry="2" />
<text  x="156.74" y="129.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (23,995 us, 0.05%)</title><rect x="78.9" y="119" width="0.5" height="15.0" fill="rgb(153.020888810101,119.826814210774,119.826814210774)" rx="2" ry="2" />
<text  x="81.87" y="129.5" ></text>
</g>
<g >
<title>firedrake.slate.slac.compiler.compile_expression (22,773,723 us, 43.77%)</title><rect x="442.7" y="215" width="516.5" height="15.0" fill="rgb(145.408845071868,154.735626500114,154.735626500114)" rx="2" ry="2" />
<text  x="445.73" y="225.5" >firedrake.slate.slac.compiler.compile_expression</text>
</g>
<g >
<title>firedrake.__init__ (3,215,848 us, 6.18%)</title><rect x="79.4" y="71" width="72.9" height="15.0" fill="rgb(152.848075299265,118.5019106277,118.5019106277)" rx="2" ry="2" />
<text  x="82.42" y="81.5" >firedra..</text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.solve (45,685,471 us, 87.80%)</title><rect x="153.9" y="87" width="1036.1" height="15.0" fill="rgb(114.191744119289,114.191744119289,149.520982732766)" rx="2" ry="2" />
<text  x="156.93" y="97.5" >firedrake.variational_solver.NonlinearVariationalSolver.solve</text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.__init__ (28,538 us, 0.05%)</title><rect x="153.3" y="71" width="0.6" height="15.0" fill="rgb(152.455015029856,152.455015029856,131.128149760069)" rx="2" ry="2" />
<text  x="156.28" y="81.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (6,293 us, 0.01%)</title><rect x="960.0" y="151" width="0.2" height="15.0" fill="rgb(154.360920192831,154.360920192831,140.364459396029)" rx="2" ry="2" />
<text  x="963.01" y="161.5" ></text>
</g>
<g >
<title>firedrake.parloops.par_loop (936,408 us, 1.80%)</title><rect x="962.2" y="151" width="21.2" height="15.0" fill="rgb(133.184917467272,94.4113510098846,133.184917467272)" rx="2" ry="2" />
<text  x="965.17" y="161.5" ></text>
</g>
<g >
<title>firedrake.parloops.par_loop (1,158,426 us, 2.23%)</title><rect x="154.1" y="183" width="26.3" height="15.0" fill="rgb(132.490619255203,151.386456843942,151.386456843942)" rx="2" ry="2" />
<text  x="157.09" y="193.5" >f..</text>
</g>
<g >
<title>firedrake.functionspace.VectorFunctionSpace (7,937 us, 0.02%)</title><rect x="152.3" y="71" width="0.2" height="15.0" fill="rgb(138.062012730631,152.830892189423,152.830892189423)" rx="2" ry="2" />
<text  x="155.35" y="81.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (9,767 us, 0.02%)</title><rect x="78.7" y="103" width="0.2" height="15.0" fill="rgb(142.459404848959,142.459404848959,154.992142873992)" rx="2" ry="2" />
<text  x="81.65" y="113.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (7,937 us, 0.02%)</title><rect x="152.3" y="135" width="0.2" height="15.0" fill="rgb(152.520741713555,115.992353137252,115.992353137252)" rx="2" ry="2" />
<text  x="155.35" y="145.5" ></text>
</g>
<g >
<title>CreateExtMesh (3,036,899 us, 5.84%)</title><rect x="10.0" y="71" width="68.9" height="15.0" fill="rgb(137.599024040802,161.321089109637,137.599024040802)" rx="2" ry="2" />
<text  x="13.00" y="81.5" >Create..</text>
</g>
<g >
<title>perfsolve (45,685,471 us, 87.80%)</title><rect x="153.9" y="71" width="1036.1" height="15.0" fill="rgb(148.11442534218,132.668214939335,148.11442534218)" rx="2" ry="2" />
<text  x="156.93" y="81.5" >perfsolve</text>
</g>
<g >
<title>ParLoopExecute (1,152,514 us, 2.22%)</title><rect x="154.2" y="199" width="26.2" height="15.0" fill="rgb(131.517801353282,131.517801353282,152.874413165151)" rx="2" ry="2" />
<text  x="157.22" y="209.5" >P..</text>
</g>
<g >
<title>firedrake.assemble.assemble (9,109,662 us, 17.51%)</title><rect x="983.4" y="135" width="206.6" height="15.0" fill="rgb(139.714278687673,153.259257437545,153.259257437545)" rx="2" ry="2" />
<text  x="986.41" y="145.5" >firedrake.assemble.assem..</text>
</g>
<g >
<title>firedrake.ufl_expr.action (16,886 us, 0.03%)</title><rect x="152.5" y="87" width="0.4" height="15.0" fill="rgb(121.465006925872,121.465006925872,150.928711017911)" rx="2" ry="2" />
<text  x="155.53" y="97.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalProblem.__init__ (16,364 us, 0.03%)</title><rect x="152.9" y="87" width="0.4" height="15.0" fill="rgb(150.170017564377,150.170017564377,120.054700504289)" rx="2" ry="2" />
<text  x="155.91" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (7,937 us, 0.02%)</title><rect x="152.3" y="103" width="0.2" height="15.0" fill="rgb(153.362912983745,122.448999542049,122.448999542049)" rx="2" ry="2" />
<text  x="155.35" y="113.5" ></text>
</g>
<g >
<title>ParLoopExecute (930,747 us, 1.79%)</title><rect x="962.3" y="167" width="21.1" height="15.0" fill="rgb(150.363123519707,150.363123519707,120.990521672425)" rx="2" ry="2" />
<text  x="965.30" y="177.5" ></text>
</g>
<g >
<title>firedrake.slate.slac.optimise.optimise (20,992 us, 0.04%)</title><rect x="595.3" y="247" width="0.5" height="15.0" fill="rgb(123.791633599003,149.131164266408,149.131164266408)" rx="2" ry="2" />
<text  x="598.29" y="257.5" ></text>
</g>
<g >
<title>firedrake.assemble.assemble (34,343,082 us, 66.00%)</title><rect x="180.4" y="183" width="778.8" height="15.0" fill="rgb(136.447085898478,161.508613923504,136.447085898478)" rx="2" ry="2" />
<text  x="183.36" y="193.5" >firedrake.assemble.assemble</text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (7,937 us, 0.02%)</title><rect x="152.3" y="119" width="0.2" height="15.0" fill="rgb(151.386004722741,151.386004722741,125.947561348667)" rx="2" ry="2" />
<text  x="155.35" y="129.5" ></text>
</g>
</g>
</svg>
