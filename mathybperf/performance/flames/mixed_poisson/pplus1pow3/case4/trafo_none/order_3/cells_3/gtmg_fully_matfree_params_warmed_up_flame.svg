<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="299" onload="init(evt)" viewBox="0 0 1200 299" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:13px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:18px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 13 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (1 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="299.0" fill="url(#background)"  />
<text id="title" x="600.00" y="26" >Firedrake example</text>
<text id="details" x="10.00" y="281" > </text>
<text id="unzoom" x="10.00" y="26" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="26" >Search</text>
<text id="ignorecase" x="1174.00" y="26" >ic</text>
<text id="matched" x="1090.00" y="281" > </text>
<g id="frames">
<g >
<title>ParLoop_Cells_wrap_par_loop_kernel (2,811 us, 0.02%)</title><rect x="254.1" y="215" width="0.2" height="15.0" fill="rgb(149.218429750149,159.42955794765,149.218429750149)" rx="2" ry="2" />
<text  x="257.07" y="225.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalProblem.__init__ (18,852 us, 0.11%)</title><rect x="249.8" y="87" width="1.3" height="15.0" fill="rgb(134.604894781909,151.934602350865,151.934602350865)" rx="2" ry="2" />
<text  x="252.78" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspace.VectorFunctionSpace (8,516 us, 0.05%)</title><rect x="247.7" y="71" width="0.6" height="15.0" fill="rgb(155.866647572179,141.644298053374,141.644298053374)" rx="2" ry="2" />
<text  x="250.69" y="81.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (7,035 us, 0.04%)</title><rect x="1168.8" y="199" width="0.5" height="15.0" fill="rgb(150.944401102471,150.944401102471,123.807482265819)" rx="2" ry="2" />
<text  x="1171.78" y="209.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (16,802 us, 0.10%)</title><rect x="1167.0" y="167" width="1.2" height="15.0" fill="rgb(148.273399908466,148.273399908466,110.863399556414)" rx="2" ry="2" />
<text  x="1170.04" y="177.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (27,873 us, 0.17%)</title><rect x="20.0" y="71" width="2.0" height="15.0" fill="rgb(117.567069938689,147.517388502623,147.517388502623)" rx="2" ry="2" />
<text  x="23.02" y="81.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (25,805 us, 0.15%)</title><rect x="20.2" y="87" width="1.8" height="15.0" fill="rgb(126.784267812073,163.081630821291,126.784267812073)" rx="2" ry="2" />
<text  x="23.16" y="97.5" ></text>
</g>
<g >
<title>ParLoop_Cells_wrap_form0_cell_integral_otherwise (39,038 us, 0.23%)</title><rect x="1179.3" y="183" width="2.8" height="15.0" fill="rgb(110.266012186472,110.266012186472,148.761163648995)" rx="2" ry="2" />
<text  x="1182.32" y="193.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (16,802 us, 0.10%)</title><rect x="1167.0" y="183" width="1.2" height="15.0" fill="rgb(122.496946965346,122.496946965346,151.128441348132)" rx="2" ry="2" />
<text  x="1170.04" y="193.5" ></text>
</g>
<g >
<title>pyop2.parloop.JITModule.compile (3,455 us, 0.02%)</title><rect x="1185.2" y="183" width="0.3" height="15.0" fill="rgb(142.816791210037,160.471685151855,142.816791210037)" rx="2" ry="2" />
<text  x="1188.25" y="193.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (8,516 us, 0.05%)</title><rect x="247.7" y="119" width="0.6" height="15.0" fill="rgb(120.455122937439,148.266142983781,148.266142983781)" rx="2" ry="2" />
<text  x="250.69" y="129.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (13,218 us, 0.08%)</title><rect x="1168.3" y="151" width="1.0" height="15.0" fill="rgb(133.685042676478,151.696122175383,151.696122175383)" rx="2" ry="2" />
<text  x="1171.35" y="161.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (9,678 us, 0.06%)</title><rect x="19.3" y="103" width="0.7" height="15.0" fill="rgb(141.194941128788,153.643132885241,153.643132885241)" rx="2" ry="2" />
<text  x="22.33" y="113.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (25,805 us, 0.15%)</title><rect x="20.2" y="119" width="1.8" height="15.0" fill="rgb(105.341481454021,144.34779148808,144.34779148808)" rx="2" ry="2" />
<text  x="23.16" y="129.5" ></text>
</g>
<g >
<title>HybridInit (199,230 us, 1.19%)</title><rect x="1165.1" y="135" width="14.1" height="15.0" fill="rgb(104.373399230112,144.096807207807,144.096807207807)" rx="2" ry="2" />
<text  x="1168.13" y="145.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (8,516 us, 0.05%)</title><rect x="247.7" y="87" width="0.6" height="15.0" fill="rgb(110.139609095343,110.139609095343,148.736698534583)" rx="2" ry="2" />
<text  x="250.69" y="97.5" ></text>
</g>
<g >
<title>KSPSolve (12,929,513 us, 77.31%)</title><rect x="252.8" y="119" width="912.3" height="15.0" fill="rgb(152.272446967847,114.088760086826,114.088760086826)" rx="2" ry="2" />
<text  x="255.84" y="129.5" >KSPSolve</text>
</g>
<g >
<title>ParLoop_Cells_wrap_form1_cell_integral_otherwise (45,031 us, 0.27%)</title><rect x="1182.1" y="183" width="3.1" height="15.0" fill="rgb(119.660960858704,148.060249111516,148.060249111516)" rx="2" ry="2" />
<text  x="1185.07" y="193.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (3,451 us, 0.02%)</title><rect x="1169.0" y="231" width="0.3" height="15.0" fill="rgb(113.368686013785,113.368686013785,149.361681163958)" rx="2" ry="2" />
<text  x="1172.04" y="241.5" ></text>
</g>
<g >
<title>firedrake.interpolation.make_interpolator (130,513 us, 0.78%)</title><rect x="1169.3" y="151" width="9.2" height="15.0" fill="rgb(144.577436737746,160.185068438041,144.577436737746)" rx="2" ry="2" />
<text  x="1172.28" y="161.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (2,003 us, 0.01%)</title><rect x="1189.6" y="215" width="0.1" height="15.0" fill="rgb(132.761476738052,93.3262841412571,132.761476738052)" rx="2" ry="2" />
<text  x="1192.55" y="225.5" ></text>
</g>
<g >
<title>firedrake.assemble.assemble_form (148,919 us, 0.89%)</title><rect x="1179.2" y="151" width="10.5" height="15.0" fill="rgb(125.063198421017,125.063198421017,151.625135178261)" rx="2" ry="2" />
<text  x="1182.18" y="161.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (13,218 us, 0.08%)</title><rect x="1168.3" y="167" width="1.0" height="15.0" fill="rgb(146.372227326589,146.372227326589,155.749463353533)" rx="2" ry="2" />
<text  x="1171.35" y="177.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (2,202 us, 0.01%)</title><rect x="1166.9" y="231" width="0.1" height="15.0" fill="rgb(153.869886217425,153.869886217425,137.984833207523)" rx="2" ry="2" />
<text  x="1169.88" y="241.5" ></text>
</g>
<g >
<title>firedrake.matrix_free.operators.ImplicitMatrixContext.__init__ (1,803 us, 0.01%)</title><rect x="1168.2" y="167" width="0.1" height="15.0" fill="rgb(133.816931895192,151.730315676531,151.730315676531)" rx="2" ry="2" />
<text  x="1171.22" y="177.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.action (5,695 us, 0.03%)</title><rect x="252.1" y="119" width="0.4" height="15.0" fill="rgb(137.237266748449,161.379979831648,137.237266748449)" rx="2" ry="2" />
<text  x="255.13" y="129.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (25,805 us, 0.15%)</title><rect x="20.2" y="103" width="1.8" height="15.0" fill="rgb(152.008478084541,152.008478084541,128.964163025082)" rx="2" ry="2" />
<text  x="23.16" y="113.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (7,802 us, 0.05%)</title><rect x="1189.1" y="183" width="0.6" height="15.0" fill="rgb(145.950655014926,145.950655014926,155.667868712566)" rx="2" ry="2" />
<text  x="1192.14" y="193.5" ></text>
</g>
<g >
<title>firedrake.assemble.allocate_matrix (1,803 us, 0.01%)</title><rect x="1168.2" y="151" width="0.1" height="15.0" fill="rgb(147.858716822587,159.650906563765,147.858716822587)" rx="2" ry="2" />
<text  x="1171.22" y="161.5" ></text>
</g>
<g >
<title>firedrake.assemble.assemble_form (12,907,453 us, 77.18%)</title><rect x="254.4" y="199" width="910.7" height="15.0" fill="rgb(154.58008322363,131.780638047828,131.780638047828)" rx="2" ry="2" />
<text  x="257.40" y="209.5" >firedrake.assemble.assemble_form</text>
</g>
<g >
<title>firedrake.assemble.assemble (148,919 us, 0.89%)</title><rect x="1179.2" y="135" width="10.5" height="15.0" fill="rgb(108.757513514982,145.23342942981,145.23342942981)" rx="2" ry="2" />
<text  x="1182.18" y="145.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (2,202 us, 0.01%)</title><rect x="1166.9" y="183" width="0.1" height="15.0" fill="rgb(135.855443652937,135.855443652937,153.713956836052)" rx="2" ry="2" />
<text  x="1169.88" y="193.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (9,678 us, 0.06%)</title><rect x="19.3" y="151" width="0.7" height="15.0" fill="rgb(155.072575213239,135.556409968169,135.556409968169)" rx="2" ry="2" />
<text  x="22.33" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (2,202 us, 0.01%)</title><rect x="1166.9" y="215" width="0.1" height="15.0" fill="rgb(153.419008094227,122.879062055741,122.879062055741)" rx="2" ry="2" />
<text  x="1169.88" y="225.5" ></text>
</g>
<g >
<title>SNESSolve (13,277,662 us, 79.39%)</title><rect x="252.8" y="103" width="936.9" height="15.0" fill="rgb(139.866812962286,160.95191416893,139.866812962286)" rx="2" ry="2" />
<text  x="255.84" y="113.5" >SNESSolve</text>
</g>
<g >
<title>VecSet (8,275 us, 0.05%)</title><rect x="251.5" y="87" width="0.6" height="15.0" fill="rgb(128.193154993238,150.272299442691,150.272299442691)" rx="2" ry="2" />
<text  x="254.54" y="97.5" ></text>
</g>
<g >
<title>pyop2.parloop.JITModule.compile (1,876 us, 0.01%)</title><rect x="254.3" y="215" width="0.1" height="15.0" fill="rgb(124.361599972054,124.361599972054,151.489341930075)" rx="2" ry="2" />
<text  x="257.27" y="225.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (3,451 us, 0.02%)</title><rect x="1169.0" y="215" width="0.3" height="15.0" fill="rgb(156.147145884578,143.794785115098,143.794785115098)" rx="2" ry="2" />
<text  x="1172.04" y="225.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (2,202 us, 0.01%)</title><rect x="1166.9" y="199" width="0.1" height="15.0" fill="rgb(139.318334332903,161.041201387667,139.318334332903)" rx="2" ry="2" />
<text  x="1169.88" y="209.5" ></text>
</g>
<g >
<title>firedrake.parloops.par_loop (9,845 us, 0.06%)</title><rect x="1178.5" y="151" width="0.7" height="15.0" fill="rgb(128.926298870446,128.926298870446,152.372832039441)" rx="2" ry="2" />
<text  x="1181.49" y="161.5" ></text>
</g>
<g >
<title>ParLoopExecute (4,687 us, 0.03%)</title><rect x="254.1" y="199" width="0.3" height="15.0" fill="rgb(145.005310559456,124.701108308607,145.005310559456)" rx="2" ry="2" />
<text  x="257.07" y="209.5" ></text>
</g>
<g >
<title>firedrake.mesh.MeshTopology._facets (4,121 us, 0.02%)</title><rect x="248.0" y="151" width="0.3" height="15.0" fill="rgb(135.721407056587,161.626747688463,135.721407056587)" rx="2" ry="2" />
<text  x="251.00" y="161.5" ></text>
</g>
<g >
<title>all (16,723,793 us, 100%)</title><rect x="10.0" y="39" width="1180.0" height="15.0" fill="rgb(155.800837759342,155.800837759342,147.34252144912)" rx="2" ry="2" />
<text  x="13.00" y="49.5" ></text>
</g>
<g >
<title>firedrake.functionspace.VectorFunctionSpace (9,678 us, 0.06%)</title><rect x="19.3" y="87" width="0.7" height="15.0" fill="rgb(153.933953729891,153.933953729891,138.295314229472)" rx="2" ry="2" />
<text  x="22.33" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspace.make_scalar_element (1,788 us, 0.01%)</title><rect x="1168.9" y="215" width="0.1" height="15.0" fill="rgb(155.637229469182,155.637229469182,146.549650504498)" rx="2" ry="2" />
<text  x="1171.91" y="225.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (4,696 us, 0.03%)</title><rect x="1189.4" y="199" width="0.3" height="15.0" fill="rgb(104.343611544594,144.089084474524,144.089084474524)" rx="2" ry="2" />
<text  x="1192.36" y="209.5" ></text>
</g>
<g >
<title>ParLoopExecute (12,062,325 us, 72.13%)</title><rect x="254.8" y="215" width="851.1" height="15.0" fill="rgb(140.014695170837,140.014695170837,154.518973258872)" rx="2" ry="2" />
<text  x="257.76" y="225.5" >ParLoopExecute</text>
</g>
<g >
<title>CreateFunctionSpace (19,004 us, 0.11%)</title><rect x="1166.9" y="151" width="1.3" height="15.0" fill="rgb(150.079817869259,150.079817869259,119.617578904869)" rx="2" ry="2" />
<text  x="1169.88" y="161.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.derivative (2,003 us, 0.01%)</title><rect x="251.0" y="103" width="0.1" height="15.0" fill="rgb(150.710683824395,150.710683824395,122.674852379761)" rx="2" ry="2" />
<text  x="253.97" y="113.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (16,849 us, 0.10%)</title><rect x="249.8" y="103" width="1.2" height="15.0" fill="rgb(151.757498210422,151.757498210422,127.747875942813)" rx="2" ry="2" />
<text  x="252.78" y="113.5" ></text>
</g>
<g >
<title>ParLoopExecute (3,848 us, 0.02%)</title><rect x="1178.9" y="167" width="0.3" height="15.0" fill="rgb(144.835450240718,160.143066239883,144.835450240718)" rx="2" ry="2" />
<text  x="1181.91" y="177.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (16,802 us, 0.10%)</title><rect x="1167.0" y="199" width="1.2" height="15.0" fill="rgb(148.546076569975,148.546076569975,112.184832608342)" rx="2" ry="2" />
<text  x="1170.04" y="209.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.LinearVariationalProblem.__init__ (36,682 us, 0.22%)</title><rect x="248.5" y="71" width="2.6" height="15.0" fill="rgb(156.636853947284,147.549213595841,147.549213595841)" rx="2" ry="2" />
<text  x="251.52" y="81.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (4,455 us, 0.03%)</title><rect x="252.5" y="119" width="0.3" height="15.0" fill="rgb(153.765419450102,125.534882450782,125.534882450782)" rx="2" ry="2" />
<text  x="255.53" y="129.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (3,451 us, 0.02%)</title><rect x="1169.0" y="247" width="0.3" height="15.0" fill="rgb(152.600346593563,116.602657217319,116.602657217319)" rx="2" ry="2" />
<text  x="1172.04" y="257.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.solve (13,282,036 us, 79.42%)</title><rect x="252.8" y="87" width="937.2" height="15.0" fill="rgb(152.97004811228,119.437035527481,119.437035527481)" rx="2" ry="2" />
<text  x="255.84" y="97.5" >firedrake.variational_solver.NonlinearVariationalSolver.solve</text>
</g>
<g >
<title>VecSet (1,952 us, 0.01%)</title><rect x="253.3" y="183" width="0.2" height="15.0" fill="rgb(153.662545187561,124.746179771303,124.746179771303)" rx="2" ry="2" />
<text  x="256.32" y="193.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (8,516 us, 0.05%)</title><rect x="247.7" y="103" width="0.6" height="15.0" fill="rgb(152.176492601153,152.176492601153,129.778387220972)" rx="2" ry="2" />
<text  x="250.69" y="113.5" ></text>
</g>
<g >
<title>VecSet (4,374 us, 0.03%)</title><rect x="1189.7" y="103" width="0.3" height="15.0" fill="rgb(149.852027547304,149.852027547304,118.513671960011)" rx="2" ry="2" />
<text  x="1192.69" y="113.5" ></text>
</g>
<g >
<title>pyop2.parloop.JITModule.compile (80,739 us, 0.48%)</title><rect x="13.6" y="119" width="5.7" height="15.0" fill="rgb(135.215634126659,135.215634126659,153.590122734192)" rx="2" ry="2" />
<text  x="16.64" y="129.5" ></text>
</g>
<g >
<title>firedrake.utility_meshes.RectangleMesh (3,352 us, 0.02%)</title><rect x="248.3" y="87" width="0.2" height="15.0" fill="rgb(115.473406293247,115.473406293247,149.769046379338)" rx="2" ry="2" />
<text  x="251.29" y="97.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.action (17,830 us, 0.11%)</title><rect x="248.5" y="87" width="1.3" height="15.0" fill="rgb(137.015820455649,152.559657155168,152.559657155168)" rx="2" ry="2" />
<text  x="251.52" y="97.5" ></text>
</g>
<g >
<title>PCApply (12,929,513 us, 77.31%)</title><rect x="252.8" y="135" width="912.3" height="15.0" fill="rgb(144.704151768718,123.929388907341,144.704151768718)" rx="2" ry="2" />
<text  x="255.84" y="145.5" >PCApply</text>
</g>
<g >
<title>PCSetUp (199,230 us, 1.19%)</title><rect x="1165.1" y="119" width="14.1" height="15.0" fill="rgb(134.864558383432,152.001922543853,152.001922543853)" rx="2" ry="2" />
<text  x="1168.13" y="129.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (10,070 us, 0.06%)</title><rect x="1168.6" y="183" width="0.7" height="15.0" fill="rgb(154.945017764903,134.578469530924,134.578469530924)" rx="2" ry="2" />
<text  x="1171.57" y="193.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.__init__ (24,544 us, 0.15%)</title><rect x="251.1" y="71" width="1.7" height="15.0" fill="rgb(153.126826025097,153.126826025097,134.383849198548)" rx="2" ry="2" />
<text  x="254.11" y="81.5" ></text>
</g>
<g >
<title>HybridRHS (12,907,453 us, 77.18%)</title><rect x="254.4" y="167" width="910.7" height="15.0" fill="rgb(135.372783614646,100.017758012532,135.372783614646)" rx="2" ry="2" />
<text  x="257.40" y="177.5" >HybridRHS</text>
</g>
<g >
<title>firedrake.extrusion_utils.make_extruded_coords (128,883 us, 0.77%)</title><rect x="10.2" y="87" width="9.1" height="15.0" fill="rgb(119.33254904029,147.975105306742,147.975105306742)" rx="2" ry="2" />
<text  x="13.24" y="97.5" ></text>
</g>
<g >
<title>firedrake.assemble.allocate_matrix (10,150 us, 0.06%)</title><rect x="252.1" y="87" width="0.7" height="15.0" fill="rgb(144.936762283294,154.613234666039,154.613234666039)" rx="2" ry="2" />
<text  x="255.13" y="97.5" ></text>
</g>
<g >
<title>HybridBreak (22,060 us, 0.13%)</title><rect x="252.8" y="167" width="1.6" height="15.0" fill="rgb(109.410017797019,109.410017797019,148.595487315552)" rx="2" ry="2" />
<text  x="255.84" y="177.5" ></text>
</g>
<g >
<title>ParLoop_Cells_wrap_par_loop_kernel (1,997 us, 0.01%)</title><rect x="1179.0" y="183" width="0.2" height="15.0" fill="rgb(110.245257789393,145.619140908361,145.619140908361)" rx="2" ry="2" />
<text  x="1182.04" y="193.5" ></text>
</g>
<g >
<title>firedrake.__init__ (3,195,644 us, 19.11%)</title><rect x="22.2" y="71" width="225.5" height="15.0" fill="rgb(112.681060844525,112.681060844525,149.228592421521)" rx="2" ry="2" />
<text  x="25.21" y="81.5" >firedrake.__init__</text>
</g>
<g >
<title>pyop2.parloop.JITModule.compile (12,062,325 us, 72.13%)</title><rect x="254.8" y="231" width="851.1" height="15.0" fill="rgb(140.917635066371,153.571238720911,153.571238720911)" rx="2" ry="2" />
<text  x="257.76" y="241.5" >pyop2.parloop.JITModule.compile</text>
</g>
<g >
<title>firedrake (16,723,793 us, 100.00%)</title><rect x="10.0" y="55" width="1180.0" height="15.0" fill="rgb(143.817298124143,154.32300321737,154.32300321737)" rx="2" ry="2" />
<text  x="13.00" y="65.5" >firedrake</text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (59,529 us, 0.36%)</title><rect x="1185.5" y="167" width="4.2" height="15.0" fill="rgb(135.802018634012,135.802018634012,153.703616509809)" rx="2" ry="2" />
<text  x="1188.49" y="177.5" ></text>
</g>
<g >
<title>firedrake.assemble.assemble (12,907,453 us, 77.18%)</title><rect x="254.4" y="183" width="910.7" height="15.0" fill="rgb(147.800579450107,147.800579450107,108.572038873597)" rx="2" ry="2" />
<text  x="257.40" y="193.5" >firedrake.assemble.assemble</text>
</g>
<g >
<title>perfsolve (13,282,036 us, 79.42%)</title><rect x="252.8" y="71" width="937.2" height="15.0" fill="rgb(111.81529420994,111.81529420994,149.061024685795)" rx="2" ry="2" />
<text  x="255.84" y="81.5" >perfsolve</text>
</g>
<g >
<title>SCForwardElim (12,929,513 us, 77.31%)</title><rect x="252.8" y="151" width="912.3" height="15.0" fill="rgb(146.688928417791,155.067499960168,155.067499960168)" rx="2" ry="2" />
<text  x="255.84" y="161.5" >SCForwardElim</text>
</g>
<g >
<title>ParLoopExecute (87,524 us, 0.52%)</title><rect x="1179.3" y="167" width="6.2" height="15.0" fill="rgb(134.456048399198,151.89601254794,151.89601254794)" rx="2" ry="2" />
<text  x="1182.32" y="177.5" ></text>
</g>
<g >
<title>CreateExtMesh (141,951 us, 0.85%)</title><rect x="10.0" y="71" width="10.0" height="15.0" fill="rgb(156.406583978737,145.783810503653,145.783810503653)" rx="2" ry="2" />
<text  x="13.00" y="81.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (8,516 us, 0.05%)</title><rect x="247.7" y="135" width="0.6" height="15.0" fill="rgb(150.339609972174,138.370250553695,150.339609972174)" rx="2" ry="2" />
<text  x="250.69" y="145.5" ></text>
</g>
<g >
<title>firedrake.functionspace.MixedFunctionSpace (2,202 us, 0.01%)</title><rect x="1166.9" y="167" width="0.1" height="15.0" fill="rgb(133.491674315106,151.64598963725,151.64598963725)" rx="2" ry="2" />
<text  x="1169.88" y="177.5" ></text>
</g>
<g >
<title>SNESFunctionEval (148,919 us, 0.89%)</title><rect x="1179.2" y="119" width="10.5" height="15.0" fill="rgb(144.706516013165,160.164055532741,144.706516013165)" rx="2" ry="2" />
<text  x="1182.18" y="129.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (9,678 us, 0.06%)</title><rect x="19.3" y="119" width="0.7" height="15.0" fill="rgb(150.101467531387,150.101467531387,119.722496498262)" rx="2" ry="2" />
<text  x="22.33" y="129.5" ></text>
</g>
<g >
<title>CreateMesh (3,195 us, 0.02%)</title><rect x="22.0" y="71" width="0.2" height="15.0" fill="rgb(136.170191151783,136.170191151783,153.774875706797)" rx="2" ry="2" />
<text  x="24.98" y="81.5" ></text>
</g>
<g >
<title>firedrake.parloops.par_loop (13,413 us, 0.08%)</title><rect x="253.5" y="183" width="0.9" height="15.0" fill="rgb(145.078521378277,124.888711031835,145.078521378277)" rx="2" ry="2" />
<text  x="256.45" y="193.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (9,678 us, 0.06%)</title><rect x="19.3" y="135" width="0.7" height="15.0" fill="rgb(135.589828601771,135.589828601771,153.662547471311)" rx="2" ry="2" />
<text  x="22.33" y="145.5" ></text>
</g>
<g >
<title>firedrake.slate.slac.compiler.compile_expression (839,985 us, 5.02%)</title><rect x="1105.9" y="215" width="59.2" height="15.0" fill="rgb(132.974900836459,151.512011327971,151.512011327971)" rx="2" ry="2" />
<text  x="1108.86" y="225.5" >fired..</text>
</g>
<g >
<title>ParLoopExecute (80,739 us, 0.48%)</title><rect x="13.6" y="103" width="5.7" height="15.0" fill="rgb(137.58342663034,137.58342663034,154.048405154259)" rx="2" ry="2" />
<text  x="16.64" y="113.5" ></text>
</g>
<g >
<title>firedrake.matrix_free.operators.ImplicitMatrixContext.__init__ (10,150 us, 0.06%)</title><rect x="252.1" y="103" width="0.7" height="15.0" fill="rgb(153.462290467841,153.462290467841,136.009561497998)" rx="2" ry="2" />
<text  x="255.13" y="113.5" ></text>
</g>
<g >
<title>firedrake.utility_meshes.SquareMesh (3,352 us, 0.02%)</title><rect x="248.3" y="71" width="0.2" height="15.0" fill="rgb(150.39173762899,150.39173762899,121.12919004818)" rx="2" ry="2" />
<text  x="251.29" y="81.5" ></text>
</g>
</g>
</svg>
