<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="299" onload="init(evt)" viewBox="0 0 1200 299" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:13px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:18px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 13 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (1 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="299.0" fill="url(#background)"  />
<text id="title" x="600.00" y="26" >Firedrake example</text>
<text id="details" x="10.00" y="281" > </text>
<text id="unzoom" x="10.00" y="26" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="26" >Search</text>
<text id="ignorecase" x="1174.00" y="26" >ic</text>
<text id="matched" x="1090.00" y="281" > </text>
<g id="frames">
<g >
<title>firedrake.mesh.MeshTopology._facets (2,260 us, 0.02%)</title><rect x="339.8" y="151" width="0.3" height="15.0" fill="rgb(152.15384368038,113.179468216248,113.179468216248)" rx="2" ry="2" />
<text  x="342.84" y="161.5" ></text>
</g>
<g >
<title>Log_Event_form0_cell_integral_otherwise (7,729 us, 0.08%)</title><rect x="492.5" y="167" width="1.0" height="15.0" fill="rgb(145.063333263197,154.646049364532,154.646049364532)" rx="2" ry="2" />
<text  x="495.47" y="177.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (5,932 us, 0.07%)</title><rect x="125.7" y="103" width="0.8" height="15.0" fill="rgb(117.341136174139,147.458813082184,147.458813082184)" rx="2" ry="2" />
<text  x="128.73" y="113.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (1,725 us, 0.02%)</title><rect x="404.7" y="215" width="0.2" height="15.0" fill="rgb(127.090303733294,149.986375041965,149.986375041965)" rx="2" ry="2" />
<text  x="407.70" y="225.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (10,775 us, 0.12%)</title><rect x="126.8" y="103" width="1.3" height="15.0" fill="rgb(148.695925043897,148.695925043897,112.91102136658)" rx="2" ry="2" />
<text  x="129.75" y="113.5" ></text>
</g>
<g >
<title>PCSetUp (1,142,881 us, 12.52%)</title><rect x="344.2" y="119" width="147.7" height="15.0" fill="rgb(141.912591431272,116.776015542634,141.912591431272)" rx="2" ry="2" />
<text  x="347.15" y="129.5" >PCSetUp</text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (3,197 us, 0.04%)</title><rect x="402.3" y="183" width="0.4" height="15.0" fill="rgb(132.896816143095,162.086564813915,132.896816143095)" rx="2" ry="2" />
<text  x="405.33" y="193.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (1,580 us, 0.02%)</title><rect x="345.9" y="215" width="0.2" height="15.0" fill="rgb(113.066371310289,113.066371310289,149.303168640701)" rx="2" ry="2" />
<text  x="348.89" y="225.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (4,914 us, 0.05%)</title><rect x="346.1" y="183" width="0.6" height="15.0" fill="rgb(153.079450318079,153.079450318079,134.154259233767)" rx="2" ry="2" />
<text  x="349.10" y="193.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.solve (6,541,490 us, 71.68%)</title><rect x="344.2" y="87" width="845.8" height="15.0" fill="rgb(153.215032600293,121.315249935578,121.315249935578)" rx="2" ry="2" />
<text  x="347.15" y="97.5" >firedrake.variational_solver.NonlinearVariationalSolver.solve</text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (6,004 us, 0.07%)</title><rect x="404.1" y="183" width="0.8" height="15.0" fill="rgb(146.773453746325,159.82757729711,146.773453746325)" rx="2" ry="2" />
<text  x="407.15" y="193.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (10,775 us, 0.12%)</title><rect x="126.8" y="87" width="1.3" height="15.0" fill="rgb(152.395696756957,152.395696756957,130.840684283713)" rx="2" ry="2" />
<text  x="129.75" y="97.5" ></text>
</g>
<g >
<title>firedrake.assemble.allocate_matrix (7,520 us, 0.08%)</title><rect x="402.7" y="151" width="1.0" height="15.0" fill="rgb(154.04928881431,154.04928881431,138.854245792427)" rx="2" ry="2" />
<text  x="405.75" y="161.5" ></text>
</g>
<g >
<title>firedrake.parloops.par_loop (651,360 us, 7.14%)</title><rect x="407.7" y="151" width="84.2" height="15.0" fill="rgb(142.200231142535,160.572055395401,142.200231142535)" rx="2" ry="2" />
<text  x="410.71" y="161.5" >firedrak..</text>
</g>
<g >
<title>firedrake.function.Function.__init__ (1,032 us, 0.01%)</title><rect x="404.9" y="151" width="0.2" height="15.0" fill="rgb(109.241511178409,109.241511178409,148.562873131305)" rx="2" ry="2" />
<text  x="407.92" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspace.VectorFunctionSpace (5,932 us, 0.07%)</title><rect x="125.7" y="87" width="0.8" height="15.0" fill="rgb(156.367609082221,145.485002963695,145.485002963695)" rx="2" ry="2" />
<text  x="128.73" y="97.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (4,046 us, 0.04%)</title><rect x="404.4" y="199" width="0.5" height="15.0" fill="rgb(155.126293514854,135.96825028055,135.96825028055)" rx="2" ry="2" />
<text  x="407.40" y="209.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (9,938 us, 0.11%)</title><rect x="341.8" y="103" width="1.2" height="15.0" fill="rgb(152.602883085523,152.602883085523,131.844741106763)" rx="2" ry="2" />
<text  x="344.75" y="113.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (10,775 us, 0.12%)</title><rect x="126.8" y="119" width="1.3" height="15.0" fill="rgb(148.427769509051,148.427769509051,111.611498390017)" rx="2" ry="2" />
<text  x="129.75" y="129.5" ></text>
</g>
<g >
<title>ParLoopExecute (4,498,087 us, 49.29%)</title><rect x="492.3" y="135" width="581.7" height="15.0" fill="rgb(156.746588861504,148.390514604863,148.390514604863)" rx="2" ry="2" />
<text  x="495.34" y="145.5" >ParLoopExecute</text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalProblem.__init__ (11,062 us, 0.12%)</title><rect x="341.8" y="87" width="1.4" height="15.0" fill="rgb(154.136242748517,128.377861071961,128.377861071961)" rx="2" ry="2" />
<text  x="344.75" y="97.5" ></text>
</g>
<g >
<title>firedrake.extrusion_utils.make_extruded_coords (893,730 us, 9.79%)</title><rect x="10.2" y="87" width="115.5" height="15.0" fill="rgb(131.228723878876,131.228723878876,152.818462686234)" rx="2" ry="2" />
<text  x="13.16" y="97.5" >firedrake.ext..</text>
</g>
<g >
<title>MatZeroInitial (1,457 us, 0.02%)</title><rect x="403.5" y="167" width="0.2" height="15.0" fill="rgb(155.66056265236,155.66056265236,146.662726699897)" rx="2" ry="2" />
<text  x="406.53" y="177.5" ></text>
</g>
<g >
<title>firedrake.assemble.allocate_matrix (6,064 us, 0.07%)</title><rect x="343.4" y="87" width="0.8" height="15.0" fill="rgb(153.504887570275,123.537471372105,123.537471372105)" rx="2" ry="2" />
<text  x="346.37" y="97.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (1,580 us, 0.02%)</title><rect x="345.9" y="183" width="0.2" height="15.0" fill="rgb(116.074050331823,116.074050331823,149.885300064224)" rx="2" ry="2" />
<text  x="348.89" y="193.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.LinearVariationalProblem.__init__ (21,525 us, 0.24%)</title><rect x="340.4" y="71" width="2.8" height="15.0" fill="rgb(127.50093253558,150.092834361076,150.092834361076)" rx="2" ry="2" />
<text  x="343.40" y="81.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.__init__ (7,493 us, 0.08%)</title><rect x="343.2" y="71" width="1.0" height="15.0" fill="rgb(136.769676878345,152.495842153645,152.495842153645)" rx="2" ry="2" />
<text  x="346.18" y="81.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.derivative (1,124 us, 0.01%)</title><rect x="343.0" y="103" width="0.2" height="15.0" fill="rgb(126.076808186371,149.723616937207,149.723616937207)" rx="2" ry="2" />
<text  x="346.04" y="113.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_form1_cell_integral_otherwise (2,005,256 us, 21.97%)</title><rect x="814.7" y="151" width="259.3" height="15.0" fill="rgb(150.411062414371,159.235408444172,150.411062414371)" rx="2" ry="2" />
<text  x="817.67" y="161.5" >Parloop_Cells_wrap_form1_cell_i..</text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (5,932 us, 0.07%)</title><rect x="125.7" y="119" width="0.8" height="15.0" fill="rgb(137.614283993797,137.614283993797,154.054377547187)" rx="2" ry="2" />
<text  x="128.73" y="129.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (862,656 us, 9.45%)</title><rect x="14.2" y="135" width="111.5" height="15.0" fill="rgb(155.379867563619,155.379867563619,145.302435116002)" rx="2" ry="2" />
<text  x="17.18" y="145.5" >pyop2.global..</text>
</g>
<g >
<title>firedrake.utility_meshes.SquareMesh (2,081 us, 0.02%)</title><rect x="340.1" y="71" width="0.3" height="15.0" fill="rgb(109.004855881998,109.004855881998,148.517068880387)" rx="2" ry="2" />
<text  x="343.13" y="81.5" ></text>
</g>
<g >
<title>ParLoopExecute (646,220 us, 7.08%)</title><rect x="408.4" y="167" width="83.5" height="15.0" fill="rgb(116.705254376464,147.293954838343,147.293954838343)" rx="2" ry="2" />
<text  x="411.37" y="177.5" >ParLoopE..</text>
</g>
<g >
<title>CreateFunctionSpace (11,795 us, 0.13%)</title><rect x="126.6" y="71" width="1.5" height="15.0" fill="rgb(152.719348141706,117.515002419744,117.515002419744)" rx="2" ry="2" />
<text  x="129.62" y="81.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (1,725 us, 0.02%)</title><rect x="404.7" y="231" width="0.2" height="15.0" fill="rgb(153.302756262105,153.302756262105,135.236434193279)" rx="2" ry="2" />
<text  x="407.70" y="241.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (372,572 us, 4.08%)</title><rect x="353.7" y="199" width="48.2" height="15.0" fill="rgb(148.665856758127,148.665856758127,112.765305827846)" rx="2" ry="2" />
<text  x="356.68" y="209.5" >pyop..</text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (4,914 us, 0.05%)</title><rect x="346.1" y="199" width="0.6" height="15.0" fill="rgb(154.78348367135,133.340041480346,133.340041480346)" rx="2" ry="2" />
<text  x="349.10" y="209.5" ></text>
</g>
<g >
<title>firedrake.interpolation.make_interpolator (20,512 us, 0.22%)</title><rect x="405.1" y="151" width="2.6" height="15.0" fill="rgb(132.639155568675,93.0128361447309,132.639155568675)" rx="2" ry="2" />
<text  x="408.06" y="161.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (1,036 us, 0.01%)</title><rect x="1189.9" y="199" width="0.1" height="15.0" fill="rgb(149.342594746287,135.81539903736,149.342594746287)" rx="2" ry="2" />
<text  x="1192.87" y="209.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (5,118 us, 0.06%)</title><rect x="1189.3" y="151" width="0.7" height="15.0" fill="rgb(146.852478300931,146.852478300931,155.842415155019)" rx="2" ry="2" />
<text  x="1192.34" y="161.5" ></text>
</g>
<g >
<title>firedrake.slate.slac.optimise.optimise (6,906 us, 0.08%)</title><rect x="401.9" y="167" width="0.8" height="15.0" fill="rgb(153.362865428956,122.44863495533,122.44863495533)" rx="2" ry="2" />
<text  x="404.85" y="177.5" ></text>
</g>
<g >
<title>firedrake.utility_meshes.RectangleMesh (2,081 us, 0.02%)</title><rect x="340.1" y="87" width="0.3" height="15.0" fill="rgb(135.409281090806,135.409281090806,153.627602791769)" rx="2" ry="2" />
<text  x="343.13" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (1,580 us, 0.02%)</title><rect x="345.9" y="231" width="0.2" height="15.0" fill="rgb(129.972506605912,129.972506605912,152.575323859209)" rx="2" ry="2" />
<text  x="348.89" y="241.5" ></text>
</g>
<g >
<title>ParLoopExecute (862,656 us, 9.45%)</title><rect x="14.2" y="103" width="111.5" height="15.0" fill="rgb(124.7445251113,149.378210214041,149.378210214041)" rx="2" ry="2" />
<text  x="17.18" y="113.5" >ParLoopExecute</text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (5,268 us, 0.06%)</title><rect x="339.5" y="103" width="0.6" height="15.0" fill="rgb(147.321655952165,130.636743377424,147.321655952165)" rx="2" ry="2" />
<text  x="342.45" y="113.5" ></text>
</g>
<g >
<title>Log_Event_form1_cell_integral_otherwise (1,363 us, 0.01%)</title><rect x="814.7" y="167" width="0.1" height="15.0" fill="rgb(123.208828851358,148.980066739241,148.980066739241)" rx="2" ry="2" />
<text  x="817.67" y="177.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (5,932 us, 0.07%)</title><rect x="125.7" y="151" width="0.8" height="15.0" fill="rgb(148.610751757275,148.610751757275,112.498258516023)" rx="2" ry="2" />
<text  x="128.73" y="161.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (2,330 us, 0.03%)</title><rect x="343.9" y="119" width="0.3" height="15.0" fill="rgb(109.71795473882,145.482432710064,145.482432710064)" rx="2" ry="2" />
<text  x="346.85" y="129.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (7,514 us, 0.08%)</title><rect x="345.8" y="151" width="0.9" height="15.0" fill="rgb(117.030193921392,117.030193921392,150.070360113818)" rx="2" ry="2" />
<text  x="348.76" y="161.5" ></text>
</g>
<g >
<title>perfsolve (6,541,490 us, 71.68%)</title><rect x="344.2" y="71" width="845.8" height="15.0" fill="rgb(121.679039423835,148.583454665439,148.583454665439)" rx="2" ry="2" />
<text  x="347.15" y="81.5" >perfsolve</text>
</g>
<g >
<title>CreateExtMesh (901,892 us, 9.88%)</title><rect x="10.0" y="71" width="116.6" height="15.0" fill="rgb(108.987422480293,145.293035457854,145.293035457854)" rx="2" ry="2" />
<text  x="13.00" y="81.5" >CreateExtMesh</text>
</g>
<g >
<title>Parloop_Cells_wrap_slate_loopy_knl_0 (372,572 us, 4.08%)</title><rect x="353.7" y="183" width="48.2" height="15.0" fill="rgb(114.465908151056,146.713383594718,146.713383594718)" rx="2" ry="2" />
<text  x="356.68" y="193.5" >Parl..</text>
</g>
<g >
<title>firedrake.functionspace.VectorFunctionSpace (5,268 us, 0.06%)</title><rect x="339.5" y="71" width="0.6" height="15.0" fill="rgb(152.943433492424,119.232990108583,119.232990108583)" rx="2" ry="2" />
<text  x="342.45" y="81.5" ></text>
</g>
<g >
<title>CreateMesh (1,807 us, 0.02%)</title><rect x="128.1" y="71" width="0.3" height="15.0" fill="rgb(132.452382734925,92.5342307582451,132.452382734925)" rx="2" ry="2" />
<text  x="131.14" y="81.5" ></text>
</g>
<g >
<title>firedrake.matrix_free.operators.ImplicitMatrixContext.__init__ (6,064 us, 0.07%)</title><rect x="343.4" y="103" width="0.8" height="15.0" fill="rgb(125.680092294389,163.261380324169,125.680092294389)" rx="2" ry="2" />
<text  x="346.37" y="113.5" ></text>
</g>
<g >
<title>firedrake.mesh.make_mesh_from_coordinates (976 us, 0.01%)</title><rect x="126.5" y="87" width="0.1" height="15.0" fill="rgb(148.050075673409,148.050075673409,109.781135955753)" rx="2" ry="2" />
<text  x="129.49" y="97.5" ></text>
</g>
<g >
<title>firedrake (9,125,721 us, 100.00%)</title><rect x="10.0" y="55" width="1180.0" height="15.0" fill="rgb(154.331499971659,129.874833116055,129.874833116055)" rx="2" ry="2" />
<text  x="13.00" y="65.5" >firedrake</text>
</g>
<g >
<title>firedrake.functionspace.make_scalar_element (1,059 us, 0.01%)</title><rect x="404.6" y="215" width="0.1" height="15.0" fill="rgb(122.378774499176,148.764867462749,148.764867462749)" rx="2" ry="2" />
<text  x="407.56" y="225.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (8,136 us, 0.09%)</title><rect x="403.9" y="167" width="1.0" height="15.0" fill="rgb(153.764630498533,125.528833822087,125.528833822087)" rx="2" ry="2" />
<text  x="406.87" y="177.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (5,268 us, 0.06%)</title><rect x="339.5" y="119" width="0.6" height="15.0" fill="rgb(149.470023324066,149.470023324066,116.662420724319)" rx="2" ry="2" />
<text  x="342.45" y="129.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (1,036 us, 0.01%)</title><rect x="1189.9" y="183" width="0.1" height="15.0" fill="rgb(120.041611852791,120.041611852791,150.653215197314)" rx="2" ry="2" />
<text  x="1192.87" y="193.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.action (3,734 us, 0.04%)</title><rect x="343.4" y="119" width="0.5" height="15.0" fill="rgb(114.032813557885,146.601099811303,146.601099811303)" rx="2" ry="2" />
<text  x="346.37" y="129.5" ></text>
</g>
<g >
<title>HybridOperatorAssembly (433,208 us, 4.75%)</title><rect x="346.7" y="151" width="56.0" height="15.0" fill="rgb(152.143194537129,142.991936001392,152.143194537129)" rx="2" ry="2" />
<text  x="349.73" y="161.5" >Hybri..</text>
</g>
<g >
<title>firedrake.functionspace.MixedFunctionSpace (1,070 us, 0.01%)</title><rect x="339.3" y="71" width="0.2" height="15.0" fill="rgb(153.793285508787,153.793285508787,137.613614388738)" rx="2" ry="2" />
<text  x="342.31" y="81.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (2,003,893 us, 21.96%)</title><rect x="814.8" y="167" width="259.2" height="15.0" fill="rgb(156.256112045981,144.630192352518,144.630192352518)" rx="2" ry="2" />
<text  x="817.85" y="177.5" >pyop2.global_kernel.GlobalKerne..</text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (4,914 us, 0.05%)</title><rect x="346.1" y="167" width="0.6" height="15.0" fill="rgb(128.669445513709,162.774741428001,128.669445513709)" rx="2" ry="2" />
<text  x="349.10" y="177.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (1,725 us, 0.02%)</title><rect x="404.7" y="247" width="0.2" height="15.0" fill="rgb(141.789968679994,160.638842307908,141.789968679994)" rx="2" ry="2" />
<text  x="407.70" y="257.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (5,932 us, 0.07%)</title><rect x="125.7" y="135" width="0.8" height="15.0" fill="rgb(135.377986910105,161.682653293704,135.377986910105)" rx="2" ry="2" />
<text  x="128.73" y="145.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.action (10,463 us, 0.11%)</title><rect x="340.4" y="87" width="1.4" height="15.0" fill="rgb(138.491887449176,152.942341190527,152.942341190527)" rx="2" ry="2" />
<text  x="343.40" y="97.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_form0_cell_integral_otherwise (2,491,767 us, 27.30%)</title><rect x="492.5" y="151" width="322.2" height="15.0" fill="rgb(144.146366257388,154.408317177841,154.408317177841)" rx="2" ry="2" />
<text  x="495.47" y="161.5" >Parloop_Cells_wrap_form0_cell_integral_o..</text>
</g>
<g >
<title>SNESFunctionEval (5,398,609 us, 59.16%)</title><rect x="491.9" y="119" width="698.1" height="15.0" fill="rgb(118.04080713739,147.640209257842,147.640209257842)" rx="2" ry="2" />
<text  x="494.93" y="129.5" >SNESFunctionEval</text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (5,268 us, 0.06%)</title><rect x="339.5" y="135" width="0.6" height="15.0" fill="rgb(138.334470235245,138.334470235245,154.193768432628)" rx="2" ry="2" />
<text  x="342.45" y="145.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (5,268 us, 0.06%)</title><rect x="339.5" y="87" width="0.6" height="15.0" fill="rgb(141.68948276556,160.655200480025,141.68948276556)" rx="2" ry="2" />
<text  x="342.45" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspace.MixedFunctionSpace (2,600 us, 0.03%)</title><rect x="345.8" y="167" width="0.3" height="15.0" fill="rgb(142.261519413048,142.261519413048,154.953842467042)" rx="2" ry="2" />
<text  x="348.76" y="177.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_pyop2_kernel_uniform_extrusion (862,656 us, 9.45%)</title><rect x="14.2" y="119" width="111.5" height="15.0" fill="rgb(148.868204777045,134.599774741179,148.868204777045)" rx="2" ry="2" />
<text  x="17.18" y="129.5" >Parloop_Cell..</text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (897,409 us, 9.83%)</title><rect x="1074.0" y="135" width="116.0" height="15.0" fill="rgb(154.727558646051,132.911282953059,132.911282953059)" rx="2" ry="2" />
<text  x="1076.96" y="145.5" >firedrake.tsf..</text>
</g>
<g >
<title>firedrake.__init__ (1,631,300 us, 17.88%)</title><rect x="128.4" y="71" width="210.9" height="15.0" fill="rgb(128.863581391208,150.446113694017,150.446113694017)" rx="2" ry="2" />
<text  x="131.38" y="81.5" >firedrake.__init__</text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (2,889 us, 0.03%)</title><rect x="1189.6" y="167" width="0.4" height="15.0" fill="rgb(136.607203345072,152.453719385759,152.453719385759)" rx="2" ry="2" />
<text  x="1192.63" y="177.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (646,220 us, 7.08%)</title><rect x="408.4" y="199" width="83.5" height="15.0" fill="rgb(129.023251368875,162.717145125997,129.023251368875)" rx="2" ry="2" />
<text  x="411.37" y="209.5" >pyop2.gl..</text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (646,220 us, 7.08%)</title><rect x="408.4" y="183" width="83.5" height="15.0" fill="rgb(141.812202502782,160.635222848384,141.812202502782)" rx="2" ry="2" />
<text  x="411.37" y="193.5" >Parloop_..</text>
</g>
<g >
<title>HybridInit (1,142,881 us, 12.52%)</title><rect x="344.2" y="135" width="147.7" height="15.0" fill="rgb(138.572530701334,161.162611281178,138.572530701334)" rx="2" ry="2" />
<text  x="347.15" y="145.5" >HybridInit</text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (9,313 us, 0.10%)</title><rect x="403.7" y="151" width="1.2" height="15.0" fill="rgb(154.148228009119,128.469748069914,128.469748069914)" rx="2" ry="2" />
<text  x="406.72" y="161.5" ></text>
</g>
<g >
<title>CreateSparsity (6,063 us, 0.07%)</title><rect x="402.7" y="167" width="0.8" height="15.0" fill="rgb(126.285163996691,126.285163996691,151.861644644521)" rx="2" ry="2" />
<text  x="405.75" y="177.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (2,484,038 us, 27.22%)</title><rect x="493.5" y="167" width="321.2" height="15.0" fill="rgb(147.546546045707,159.701725062327,147.546546045707)" rx="2" ry="2" />
<text  x="496.47" y="177.5" >pyop2.global_kernel.GlobalKernel.compile</text>
</g>
<g >
<title>ParLoopExecute (372,572 us, 4.08%)</title><rect x="353.7" y="167" width="48.2" height="15.0" fill="rgb(148.753151286945,148.753151286945,113.188348544424)" rx="2" ry="2" />
<text  x="356.68" y="177.5" >ParL..</text>
</g>
<g >
<title>SNESSolve (6,541,490 us, 71.68%)</title><rect x="344.2" y="103" width="845.8" height="15.0" fill="rgb(147.666810851522,147.666810851522,107.92377566507)" rx="2" ry="2" />
<text  x="347.15" y="113.5" >SNESSolve</text>
</g>
<g >
<title>all (9,125,721 us, 100%)</title><rect x="10.0" y="39" width="1180.0" height="15.0" fill="rgb(105.381936031287,144.358279711815,144.358279711815)" rx="2" ry="2" />
<text  x="13.00" y="49.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (1,580 us, 0.02%)</title><rect x="345.9" y="199" width="0.2" height="15.0" fill="rgb(138.058970814317,161.246214053483,138.058970814317)" rx="2" ry="2" />
<text  x="348.89" y="209.5" ></text>
</g>
</g>
</svg>
