<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="299" onload="init(evt)" viewBox="0 0 1200 299" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:13px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:18px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 13 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (1 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="299.0" fill="url(#background)"  />
<text id="title" x="600.00" y="26" >Firedrake example</text>
<text id="details" x="10.00" y="281" > </text>
<text id="unzoom" x="10.00" y="26" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="26" >Search</text>
<text id="ignorecase" x="1174.00" y="26" >ic</text>
<text id="matched" x="1090.00" y="281" > </text>
<g id="frames">
<g >
<title>firedrake.variational_solver.LinearVariationalProblem.__init__ (22,671 us, 0.19%)</title><rect x="270.4" y="71" width="2.3" height="15.0" fill="rgb(153.906732417999,126.618281871327,126.618281871327)" rx="2" ry="2" />
<text  x="273.42" y="81.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (5,551 us, 0.05%)</title><rect x="269.6" y="135" width="0.6" height="15.0" fill="rgb(145.923614138541,159.965923279772,145.923614138541)" rx="2" ry="2" />
<text  x="272.65" y="145.5" ></text>
</g>
<g >
<title>CreateMesh (1,916 us, 0.02%)</title><rect x="106.2" y="71" width="0.2" height="15.0" fill="rgb(153.496427734206,153.496427734206,136.174995942691)" rx="2" ry="2" />
<text  x="109.25" y="81.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (7,066 us, 0.06%)</title><rect x="275.0" y="167" width="0.7" height="15.0" fill="rgb(139.147128325618,161.069072133039,139.147128325618)" rx="2" ry="2" />
<text  x="277.97" y="177.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (7,066 us, 0.06%)</title><rect x="275.0" y="183" width="0.7" height="15.0" fill="rgb(152.656594574152,117.033891735162,117.033891735162)" rx="2" ry="2" />
<text  x="277.97" y="193.5" ></text>
</g>
<g >
<title>firedrake.parloops.par_loop (669,243 us, 5.66%)</title><rect x="340.2" y="151" width="66.7" height="15.0" fill="rgb(135.390802119762,152.138356105124,152.138356105124)" rx="2" ry="2" />
<text  x="343.18" y="161.5" >firedr..</text>
</g>
<g >
<title>firedrake.interpolation.make_interpolator (31,676 us, 0.27%)</title><rect x="337.0" y="151" width="3.2" height="15.0" fill="rgb(144.764309842532,124.083543971487,144.764309842532)" rx="2" ry="2" />
<text  x="340.02" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (1,446 us, 0.01%)</title><rect x="274.8" y="231" width="0.2" height="15.0" fill="rgb(155.92612153774,142.100265122675,142.100265122675)" rx="2" ry="2" />
<text  x="277.82" y="241.5" ></text>
</g>
<g >
<title>MatZeroInitial (20,191 us, 0.17%)</title><rect x="334.2" y="167" width="2.0" height="15.0" fill="rgb(155.087728036975,135.672581616808,135.672581616808)" rx="2" ry="2" />
<text  x="337.19" y="177.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (5,565 us, 0.05%)</title><rect x="1189.4" y="151" width="0.6" height="15.0" fill="rgb(152.173407472428,152.173407472428,129.763436212534)" rx="2" ry="2" />
<text  x="1192.44" y="161.5" ></text>
</g>
<g >
<title>Log_Event_form1_cell_integral_otherwise (15,453 us, 0.13%)</title><rect x="758.6" y="167" width="1.5" height="15.0" fill="rgb(128.035974991159,128.035974991159,152.200511288611)" rx="2" ry="2" />
<text  x="761.56" y="177.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (663,930 us, 5.61%)</title><rect x="340.7" y="199" width="66.2" height="15.0" fill="rgb(154.818897098485,133.611544421718,133.611544421718)" rx="2" ry="2" />
<text  x="343.71" y="209.5" >pyop2...</text>
</g>
<g >
<title>firedrake.matrix_free.operators.ImplicitMatrixContext.__init__ (6,122 us, 0.05%)</title><rect x="272.9" y="103" width="0.6" height="15.0" fill="rgb(131.35971170068,151.093258589065,151.093258589065)" rx="2" ry="2" />
<text  x="275.87" y="113.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (5,551 us, 0.05%)</title><rect x="269.6" y="103" width="0.6" height="15.0" fill="rgb(155.3663705888,137.8088411808,137.8088411808)" rx="2" ry="2" />
<text  x="272.65" y="113.5" ></text>
</g>
<g >
<title>firedrake.__init__ (1,636,077 us, 13.83%)</title><rect x="106.4" y="71" width="163.2" height="15.0" fill="rgb(152.734050830621,117.627723034763,117.627723034763)" rx="2" ry="2" />
<text  x="109.44" y="81.5" >firedrake.__init__</text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (8,226 us, 0.07%)</title><rect x="336.2" y="167" width="0.8" height="15.0" fill="rgb(134.591780859939,134.591780859939,153.469376940633)" rx="2" ry="2" />
<text  x="339.20" y="177.5" ></text>
</g>
<g >
<title>ParLoopExecute (6,540,727 us, 55.29%)</title><rect x="407.3" y="135" width="652.4" height="15.0" fill="rgb(149.691080115712,149.691080115712,117.733695945374)" rx="2" ry="2" />
<text  x="410.27" y="145.5" >ParLoopExecute</text>
</g>
<g >
<title>CreateSparsity (100,256 us, 0.85%)</title><rect x="324.2" y="167" width="10.0" height="15.0" fill="rgb(119.308816118182,147.968952326936,147.968952326936)" rx="2" ry="2" />
<text  x="327.19" y="177.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (8,226 us, 0.07%)</title><rect x="336.2" y="151" width="0.8" height="15.0" fill="rgb(129.185696553522,150.529625032395,150.529625032395)" rx="2" ry="2" />
<text  x="339.20" y="161.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (907,400 us, 7.67%)</title><rect x="13.5" y="135" width="90.5" height="15.0" fill="rgb(147.30489163235,147.30489163235,155.929979025616)" rx="2" ry="2" />
<text  x="16.48" y="145.5" >pyop2.glo..</text>
</g>
<g >
<title>firedrake.functionspace.VectorFunctionSpace (5,551 us, 0.05%)</title><rect x="269.6" y="71" width="0.6" height="15.0" fill="rgb(144.502155939671,144.502155939671,155.38751405284)" rx="2" ry="2" />
<text  x="272.65" y="81.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (3,003,738 us, 25.39%)</title><rect x="760.1" y="167" width="299.6" height="15.0" fill="rgb(123.30907315375,123.30907315375,151.285627062016)" rx="2" ry="2" />
<text  x="763.10" y="177.5" >pyop2.global_kernel.GlobalKernel.comp..</text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (7,066 us, 0.06%)</title><rect x="275.0" y="199" width="0.7" height="15.0" fill="rgb(155.531369748701,155.531369748701,146.036638012937)" rx="2" ry="2" />
<text  x="277.97" y="209.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (15,230 us, 0.13%)</title><rect x="104.7" y="103" width="1.5" height="15.0" fill="rgb(156.478797272014,146.337445752106,146.337445752106)" rx="2" ry="2" />
<text  x="107.73" y="113.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (404,151 us, 3.42%)</title><rect x="283.0" y="199" width="40.4" height="15.0" fill="rgb(151.380126394481,151.380126394481,125.919074065562)" rx="2" ry="2" />
<text  x="286.04" y="209.5" >pyo..</text>
</g>
<g >
<title>ParLoopExecute (663,930 us, 5.61%)</title><rect x="340.7" y="167" width="66.2" height="15.0" fill="rgb(155.94285649011,142.228566424174,142.228566424174)" rx="2" ry="2" />
<text  x="343.71" y="177.5" >ParLoo..</text>
</g>
<g >
<title>firedrake.ufl_expr.action (3,752 us, 0.03%)</title><rect x="272.9" y="119" width="0.3" height="15.0" fill="rgb(112.033565343213,146.082776200092,146.082776200092)" rx="2" ry="2" />
<text  x="275.87" y="129.5" ></text>
</g>
<g >
<title>ParLoopExecute (404,151 us, 3.42%)</title><rect x="283.0" y="167" width="40.4" height="15.0" fill="rgb(143.878739363366,143.878739363366,155.266852780006)" rx="2" ry="2" />
<text  x="286.04" y="177.5" >Par..</text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (1,465 us, 0.01%)</title><rect x="1189.9" y="183" width="0.1" height="15.0" fill="rgb(123.400602724196,149.029785891458,149.029785891458)" rx="2" ry="2" />
<text  x="1192.85" y="193.5" ></text>
</g>
<g >
<title>firedrake (11,829,037 us, 100.00%)</title><rect x="10.0" y="55" width="1180.0" height="15.0" fill="rgb(146.943188268404,155.133419180697,155.133419180697)" rx="2" ry="2" />
<text  x="13.00" y="65.5" >firedrake</text>
</g>
<g >
<title>SNESFunctionEval (7,849,862 us, 66.36%)</title><rect x="406.9" y="119" width="783.1" height="15.0" fill="rgb(140.248925453151,112.5128714737,140.248925453151)" rx="2" ry="2" />
<text  x="409.94" y="129.5" >SNESFunctionEval</text>
</g>
<g >
<title>Parloop_Cells_wrap_slate_loopy_knl_0 (404,151 us, 3.42%)</title><rect x="283.0" y="183" width="40.4" height="15.0" fill="rgb(140.123235596793,160.910170949359,140.123235596793)" rx="2" ry="2" />
<text  x="286.04" y="193.5" >Par..</text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (1,446 us, 0.01%)</title><rect x="274.8" y="199" width="0.2" height="15.0" fill="rgb(149.163096656808,149.163096656808,115.175006875299)" rx="2" ry="2" />
<text  x="277.82" y="209.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (15,230 us, 0.13%)</title><rect x="104.7" y="119" width="1.5" height="15.0" fill="rgb(111.35682739567,111.35682739567,148.972289173355)" rx="2" ry="2" />
<text  x="107.73" y="129.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.__init__ (7,974 us, 0.07%)</title><rect x="272.7" y="71" width="0.8" height="15.0" fill="rgb(154.328435961834,129.851342374062,129.851342374062)" rx="2" ry="2" />
<text  x="275.68" y="81.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (15,230 us, 0.13%)</title><rect x="104.7" y="71" width="1.5" height="15.0" fill="rgb(152.426688009289,115.271274737881,115.271274737881)" rx="2" ry="2" />
<text  x="107.73" y="81.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_pyop2_kernel_uniform_extrusion (907,400 us, 7.67%)</title><rect x="13.5" y="119" width="90.5" height="15.0" fill="rgb(146.631637073949,146.631637073949,155.799671691732)" rx="2" ry="2" />
<text  x="16.48" y="129.5" >Parloop_C..</text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.solve (9,187,789 us, 77.67%)</title><rect x="273.5" y="87" width="916.5" height="15.0" fill="rgb(120.597729264099,148.303114994396,148.303114994396)" rx="2" ry="2" />
<text  x="276.48" y="97.5" >firedrake.variational_solver.NonlinearVariationalSolver.solve</text>
</g>
<g >
<title>firedrake.utility_meshes.SquareMesh (2,191 us, 0.02%)</title><rect x="270.2" y="71" width="0.2" height="15.0" fill="rgb(127.673983457269,150.137699414848,150.137699414848)" rx="2" ry="2" />
<text  x="273.20" y="81.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_form1_cell_integral_otherwise (3,019,191 us, 25.52%)</title><rect x="758.6" y="151" width="301.1" height="15.0" fill="rgb(104.337156495333,144.087410943235,144.087410943235)" rx="2" ry="2" />
<text  x="761.56" y="161.5" >Parloop_Cells_wrap_form1_cell_integra..</text>
</g>
<g >
<title>firedrake.mesh.make_mesh_from_coordinates (1,253 us, 0.01%)</title><rect x="104.6" y="87" width="0.1" height="15.0" fill="rgb(108.977323368846,108.977323368846,148.511740006873)" rx="2" ry="2" />
<text  x="107.61" y="97.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (3,126 us, 0.03%)</title><rect x="323.7" y="183" width="0.3" height="15.0" fill="rgb(139.623777015409,153.235794041032,153.235794041032)" rx="2" ry="2" />
<text  x="326.72" y="193.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (1,446 us, 0.01%)</title><rect x="274.8" y="215" width="0.2" height="15.0" fill="rgb(140.295825108308,160.882074982368,140.295825108308)" rx="2" ry="2" />
<text  x="277.82" y="225.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (2,370 us, 0.02%)</title><rect x="273.2" y="119" width="0.3" height="15.0" fill="rgb(107.040892083365,144.78837942902,144.78837942902)" rx="2" ry="2" />
<text  x="276.24" y="129.5" ></text>
</g>
<g >
<title>Log_Event_form0_cell_integral_otherwise (9,759 us, 0.08%)</title><rect x="407.3" y="167" width="0.9" height="15.0" fill="rgb(118.702102792106,118.702102792106,150.393955379117)" rx="2" ry="2" />
<text  x="410.27" y="177.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (1,811 us, 0.02%)</title><rect x="336.8" y="247" width="0.2" height="15.0" fill="rgb(149.641232574846,149.641232574846,117.492127093483)" rx="2" ry="2" />
<text  x="339.84" y="257.5" ></text>
</g>
<g >
<title>perfsolve (9,187,789 us, 77.67%)</title><rect x="273.5" y="71" width="916.5" height="15.0" fill="rgb(146.728822182088,155.077842787949,155.077842787949)" rx="2" ry="2" />
<text  x="276.48" y="81.5" >perfsolve</text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (1,811 us, 0.02%)</title><rect x="336.8" y="215" width="0.2" height="15.0" fill="rgb(155.814818115987,141.246938889231,141.246938889231)" rx="2" ry="2" />
<text  x="339.84" y="225.5" ></text>
</g>
<g >
<title>SNESSolve (9,187,789 us, 77.67%)</title><rect x="273.5" y="103" width="916.5" height="15.0" fill="rgb(108.947570620263,145.282703494142,145.282703494142)" rx="2" ry="2" />
<text  x="276.48" y="113.5" >SNESSolve</text>
</g>
<g >
<title>firedrake.mesh.MeshTopology._facets (2,386 us, 0.02%)</title><rect x="270.0" y="151" width="0.2" height="15.0" fill="rgb(142.808608191692,160.47301727112,142.808608191692)" rx="2" ry="2" />
<text  x="272.96" y="161.5" ></text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (1,305,798 us, 11.04%)</title><rect x="1059.7" y="135" width="130.3" height="15.0" fill="rgb(154.6688156394,154.6688156394,141.856568098632)" rx="2" ry="2" />
<text  x="1062.74" y="145.5" >firedrake.tsfc..</text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (1,811 us, 0.02%)</title><rect x="336.8" y="231" width="0.2" height="15.0" fill="rgb(152.832092384278,152.832092384278,132.955524631501)" rx="2" ry="2" />
<text  x="339.84" y="241.5" ></text>
</g>
<g >
<title>HybridInit (1,337,927 us, 11.31%)</title><rect x="273.5" y="135" width="133.4" height="15.0" fill="rgb(153.012675194602,153.012675194602,133.830656712303)" rx="2" ry="2" />
<text  x="276.48" y="145.5" >HybridInit</text>
</g>
<g >
<title>CreateFunctionSpace (6,124 us, 0.05%)</title><rect x="104.0" y="103" width="0.6" height="15.0" fill="rgb(136.420333896809,161.512968900519,136.420333896809)" rx="2" ry="2" />
<text  x="106.99" y="113.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_form0_cell_integral_otherwise (3,521,536 us, 29.77%)</title><rect x="407.3" y="151" width="351.3" height="15.0" fill="rgb(153.578877162938,124.104724915857,124.104724915857)" rx="2" ry="2" />
<text  x="410.27" y="161.5" >Parloop_Cells_wrap_form0_cell_integral_othe..</text>
</g>
<g >
<title>firedrake.utility_meshes.RectangleMesh (2,191 us, 0.02%)</title><rect x="270.2" y="87" width="0.2" height="15.0" fill="rgb(106.584987244966,144.670181878324,144.670181878324)" rx="2" ry="2" />
<text  x="273.20" y="97.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (4,134 us, 0.03%)</title><rect x="336.6" y="199" width="0.4" height="15.0" fill="rgb(153.6987307308,125.02360226947,125.02360226947)" rx="2" ry="2" />
<text  x="339.61" y="209.5" ></text>
</g>
<g >
<title>CreateExtMesh (949,638 us, 8.03%)</title><rect x="10.0" y="71" width="94.7" height="15.0" fill="rgb(117.610395019473,147.528620930975,147.528620930975)" rx="2" ry="2" />
<text  x="13.00" y="81.5" >CreateExtM..</text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (6,124 us, 0.05%)</title><rect x="104.0" y="119" width="0.6" height="15.0" fill="rgb(104.998132688898,144.258775141566,144.258775141566)" rx="2" ry="2" />
<text  x="106.99" y="129.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (5,551 us, 0.05%)</title><rect x="269.6" y="119" width="0.6" height="15.0" fill="rgb(144.433739468337,160.208461016782,144.433739468337)" rx="2" ry="2" />
<text  x="272.65" y="129.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (6,069 us, 0.05%)</title><rect x="336.4" y="183" width="0.6" height="15.0" fill="rgb(139.632874270587,153.238152588671,153.238152588671)" rx="2" ry="2" />
<text  x="339.42" y="193.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (10,343 us, 0.09%)</title><rect x="271.6" y="103" width="1.1" height="15.0" fill="rgb(147.114877499521,130.106873592522,147.114877499521)" rx="2" ry="2" />
<text  x="274.65" y="113.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (6,124 us, 0.05%)</title><rect x="104.0" y="135" width="0.6" height="15.0" fill="rgb(148.012256537513,148.012256537513,109.597858604871)" rx="2" ry="2" />
<text  x="106.99" y="145.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (3,331 us, 0.03%)</title><rect x="1189.7" y="167" width="0.3" height="15.0" fill="rgb(156.743815604061,148.369252964469,148.369252964469)" rx="2" ry="2" />
<text  x="1192.67" y="177.5" ></text>
</g>
<g >
<title>firedrake.assemble.allocate_matrix (6,122 us, 0.05%)</title><rect x="272.9" y="87" width="0.6" height="15.0" fill="rgb(152.403189092315,115.091116374417,115.091116374417)" rx="2" ry="2" />
<text  x="275.87" y="97.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.action (10,818 us, 0.09%)</title><rect x="270.4" y="87" width="1.1" height="15.0" fill="rgb(156.731113829035,148.271872689266,148.271872689266)" rx="2" ry="2" />
<text  x="273.42" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (15,230 us, 0.13%)</title><rect x="104.7" y="87" width="1.5" height="15.0" fill="rgb(133.805663449577,133.805663449577,153.317225183789)" rx="2" ry="2" />
<text  x="107.73" y="97.5" ></text>
</g>
<g >
<title>firedrake.assemble.allocate_matrix (121,980 us, 1.03%)</title><rect x="324.0" y="151" width="12.2" height="15.0" fill="rgb(147.996946034448,147.996946034448,156.063925038925)" rx="2" ry="2" />
<text  x="327.03" y="161.5" ></text>
</g>
<g >
<title>firedrake.slate.slac.optimise.optimise (6,734 us, 0.06%)</title><rect x="323.4" y="167" width="0.6" height="15.0" fill="rgb(151.220843734522,151.220843734522,125.147165790378)" rx="2" ry="2" />
<text  x="326.36" y="177.5" ></text>
</g>
<g >
<title>firedrake.functionspace.VectorFunctionSpace (6,124 us, 0.05%)</title><rect x="104.0" y="87" width="0.6" height="15.0" fill="rgb(146.393568942528,154.990925281396,154.990925281396)" rx="2" ry="2" />
<text  x="106.99" y="97.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (1,446 us, 0.01%)</title><rect x="274.8" y="183" width="0.2" height="15.0" fill="rgb(125.011882870359,163.3701586025,125.011882870359)" rx="2" ry="2" />
<text  x="277.82" y="193.5" ></text>
</g>
<g >
<title>firedrake.functionspace.MixedFunctionSpace (1,446 us, 0.01%)</title><rect x="274.8" y="167" width="0.2" height="15.0" fill="rgb(133.264434012066,94.61511215592,133.264434012066)" rx="2" ry="2" />
<text  x="277.82" y="177.5" ></text>
</g>
<g >
<title>PCSetUp (1,337,927 us, 11.31%)</title><rect x="273.5" y="119" width="133.4" height="15.0" fill="rgb(109.992202856323,109.992202856323,148.708168294772)" rx="2" ry="2" />
<text  x="276.48" y="129.5" >PCSetUp</text>
</g>
<g >
<title>all (11,829,037 us, 100%)</title><rect x="10.0" y="39" width="1180.0" height="15.0" fill="rgb(154.279595298303,129.476897286986,129.476897286986)" rx="2" ry="2" />
<text  x="13.00" y="49.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (3,511,777 us, 29.69%)</title><rect x="408.2" y="167" width="350.4" height="15.0" fill="rgb(156.542700930172,146.827373797984,146.827373797984)" rx="2" ry="2" />
<text  x="411.25" y="177.5" >pyop2.global_kernel.GlobalKernel.compile</text>
</g>
<g >
<title>CreateFunctionSpace (8,512 us, 0.07%)</title><rect x="274.8" y="151" width="0.9" height="15.0" fill="rgb(123.082954429094,123.082954429094,151.241862147567)" rx="2" ry="2" />
<text  x="277.82" y="161.5" ></text>
</g>
<g >
<title>ParLoopExecute (907,400 us, 7.67%)</title><rect x="13.5" y="103" width="90.5" height="15.0" fill="rgb(117.281616010887,117.281616010887,150.11902245372)" rx="2" ry="2" />
<text  x="16.48" y="113.5" >ParLoopEx..</text>
</g>
<g >
<title>CreateFunctionSpace (5,551 us, 0.05%)</title><rect x="269.6" y="87" width="0.6" height="15.0" fill="rgb(154.500043911081,131.167003318286,131.167003318286)" rx="2" ry="2" />
<text  x="272.65" y="97.5" ></text>
</g>
<g >
<title>HybridOperatorAssembly (484,783 us, 4.10%)</title><rect x="275.7" y="151" width="48.3" height="15.0" fill="rgb(148.676539661163,159.517772613299,148.676539661163)" rx="2" ry="2" />
<text  x="278.67" y="161.5" >Hybr..</text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalProblem.__init__ (11,853 us, 0.10%)</title><rect x="271.5" y="87" width="1.2" height="15.0" fill="rgb(125.080066678697,125.080066678697,151.628400002328)" rx="2" ry="2" />
<text  x="274.50" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (6,124 us, 0.05%)</title><rect x="104.0" y="151" width="0.6" height="15.0" fill="rgb(154.414860923301,154.414860923301,140.625864474459)" rx="2" ry="2" />
<text  x="106.99" y="161.5" ></text>
</g>
<g >
<title>firedrake.extrusion_utils.make_extruded_coords (940,940 us, 7.95%)</title><rect x="10.1" y="87" width="93.9" height="15.0" fill="rgb(118.15651663719,118.15651663719,150.288358058811)" rx="2" ry="2" />
<text  x="13.13" y="97.5" >firedrake...</text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (663,930 us, 5.61%)</title><rect x="340.7" y="183" width="66.2" height="15.0" fill="rgb(120.011013993496,120.011013993496,150.647293030999)" rx="2" ry="2" />
<text  x="343.71" y="193.5" >Parloo..</text>
</g>
</g>
</svg>
