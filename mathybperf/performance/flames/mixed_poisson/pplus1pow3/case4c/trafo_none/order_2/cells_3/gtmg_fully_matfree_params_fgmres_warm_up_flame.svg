<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="299" onload="init(evt)" viewBox="0 0 1200 299" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:13px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:18px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 13 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (1 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="299.0" fill="url(#background)"  />
<text id="title" x="600.00" y="26" >Firedrake example</text>
<text id="details" x="10.00" y="281" > </text>
<text id="unzoom" x="10.00" y="26" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="26" >Search</text>
<text id="ignorecase" x="1174.00" y="26" >ic</text>
<text id="matched" x="1090.00" y="281" > </text>
<g id="frames">
<g >
<title>CreateFunctionSpace (9,793 us, 0.08%)</title><rect x="264.1" y="151" width="1.0" height="15.0" fill="rgb(146.310724822934,159.902905261383,146.310724822934)" rx="2" ry="2" />
<text  x="267.09" y="161.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_slate_loopy_knl_0 (415,320 us, 3.46%)</title><rect x="272.4" y="183" width="40.8" height="15.0" fill="rgb(127.47696488271,150.086620525147,150.086620525147)" rx="2" ry="2" />
<text  x="275.44" y="193.5" >Par..</text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (1,252,956 us, 10.42%)</title><rect x="1066.9" y="135" width="123.0" height="15.0" fill="rgb(134.518274818592,97.828079222641,134.518274818592)" rx="2" ry="2" />
<text  x="1069.85" y="145.5" >firedrake.tsfc..</text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (5,312 us, 0.04%)</title><rect x="259.0" y="103" width="0.5" height="15.0" fill="rgb(155.305425325605,137.341594162972,137.341594162972)" rx="2" ry="2" />
<text  x="262.00" y="113.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (1,811 us, 0.02%)</title><rect x="381.6" y="215" width="0.2" height="15.0" fill="rgb(145.95428058775,154.877035707935,154.877035707935)" rx="2" ry="2" />
<text  x="384.58" y="225.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (415,320 us, 3.46%)</title><rect x="272.4" y="199" width="40.8" height="15.0" fill="rgb(147.627506434786,131.42048523914,147.627506434786)" rx="2" ry="2" />
<text  x="275.44" y="209.5" >pyo..</text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (661,627 us, 5.50%)</title><rect x="386.5" y="183" width="65.0" height="15.0" fill="rgb(141.40108826633,141.40108826633,154.787307406387)" rx="2" ry="2" />
<text  x="389.52" y="193.5" >Parloo..</text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (1,276 us, 0.01%)</title><rect x="1189.7" y="183" width="0.2" height="15.0" fill="rgb(152.256959687526,113.970024271034,113.970024271034)" rx="2" ry="2" />
<text  x="1192.74" y="193.5" ></text>
</g>
<g >
<title>firedrake.functionspace.VectorFunctionSpace (5,312 us, 0.04%)</title><rect x="259.0" y="71" width="0.5" height="15.0" fill="rgb(132.092072944642,162.21756952064,132.092072944642)" rx="2" ry="2" />
<text  x="262.00" y="81.5" ></text>
</g>
<g >
<title>firedrake.assemble.allocate_matrix (681,560 us, 5.67%)</title><rect x="314.0" y="151" width="66.9" height="15.0" fill="rgb(139.701828217276,111.110934806771,139.701828217276)" rx="2" ry="2" />
<text  x="317.03" y="161.5" >firedr..</text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (5,379 us, 0.04%)</title><rect x="1189.3" y="151" width="0.6" height="15.0" fill="rgb(128.237644421891,128.237644421891,152.239544081656)" rx="2" ry="2" />
<text  x="1192.33" y="161.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_pyop2_kernel_uniform_extrusion (869,739 us, 7.24%)</title><rect x="13.3" y="119" width="85.4" height="15.0" fill="rgb(104.314126588553,144.081440226662,144.081440226662)" rx="2" ry="2" />
<text  x="16.34" y="129.5" >Parloop_C..</text>
</g>
<g >
<title>firedrake.interpolation.make_interpolator (43,253 us, 0.36%)</title><rect x="381.8" y="151" width="4.2" height="15.0" fill="rgb(155.864568739467,141.628360335913,141.628360335913)" rx="2" ry="2" />
<text  x="384.76" y="161.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (9,825 us, 0.08%)</title><rect x="260.9" y="103" width="0.9" height="15.0" fill="rgb(153.535674762985,123.773506516217,123.773506516217)" rx="2" ry="2" />
<text  x="263.85" y="113.5" ></text>
</g>
<g >
<title>firedrake.functionspace.VectorFunctionSpace (5,994 us, 0.05%)</title><rect x="98.7" y="87" width="0.6" height="15.0" fill="rgb(120.535003770983,120.535003770983,150.748710407287)" rx="2" ry="2" />
<text  x="101.72" y="97.5" ></text>
</g>
<g >
<title>HybridInit (1,922,444 us, 15.99%)</title><rect x="262.7" y="135" width="188.8" height="15.0" fill="rgb(111.013988831111,145.818441548807,145.818441548807)" rx="2" ry="2" />
<text  x="265.74" y="145.5" >HybridInit</text>
</g>
<g >
<title>firedrake.extrusion_utils.make_extruded_coords (901,425 us, 7.50%)</title><rect x="10.2" y="87" width="88.5" height="15.0" fill="rgb(115.552383847356,146.995062478944,146.995062478944)" rx="2" ry="2" />
<text  x="13.23" y="97.5" >firedrake..</text>
</g>
<g >
<title>CreateFunctionSpace (5,994 us, 0.05%)</title><rect x="98.7" y="103" width="0.6" height="15.0" fill="rgb(146.974944273649,146.974944273649,155.866118246513)" rx="2" ry="2" />
<text  x="101.72" y="113.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.__init__ (9,358 us, 0.08%)</title><rect x="261.8" y="71" width="0.9" height="15.0" fill="rgb(152.806473163175,118.182960917674,118.182960917674)" rx="2" ry="2" />
<text  x="264.82" y="81.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (2,534 us, 0.02%)</title><rect x="262.5" y="119" width="0.2" height="15.0" fill="rgb(125.249803048897,149.509208197862,149.509208197862)" rx="2" ry="2" />
<text  x="265.49" y="129.5" ></text>
</g>
<g >
<title>SNESFunctionEval (7,521,236 us, 62.58%)</title><rect x="451.5" y="119" width="738.4" height="15.0" fill="rgb(130.042908244868,150.751865100521,150.751865100521)" rx="2" ry="2" />
<text  x="454.47" y="129.5" >SNESFunctionEval</text>
</g>
<g >
<title>firedrake.mesh.MeshTopology._facets (2,282 us, 0.02%)</title><rect x="259.3" y="151" width="0.2" height="15.0" fill="rgb(135.819394296823,101.162197885608,135.819394296823)" rx="2" ry="2" />
<text  x="262.29" y="161.5" ></text>
</g>
<g >
<title>firedrake.__init__ (1,610,537 us, 13.40%)</title><rect x="100.9" y="71" width="158.1" height="15.0" fill="rgb(152.508665154566,152.508665154566,131.388146518282)" rx="2" ry="2" />
<text  x="103.88" y="81.5" >firedrake.__init__</text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (8,234 us, 0.07%)</title><rect x="264.2" y="199" width="0.9" height="15.0" fill="rgb(119.272176025813,147.959453043729,147.959453043729)" rx="2" ry="2" />
<text  x="267.24" y="209.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (869,739 us, 7.24%)</title><rect x="13.3" y="135" width="85.4" height="15.0" fill="rgb(133.889903888218,133.889903888218,153.333529784816)" rx="2" ry="2" />
<text  x="16.34" y="145.5" >pyop2.glo..</text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (3,132 us, 0.03%)</title><rect x="1189.6" y="167" width="0.3" height="15.0" fill="rgb(138.401283957013,152.918851396263,152.918851396263)" rx="2" ry="2" />
<text  x="1192.55" y="177.5" ></text>
</g>
<g >
<title>CreateExtMesh (909,719 us, 7.57%)</title><rect x="10.0" y="71" width="89.3" height="15.0" fill="rgb(156.58209107377,147.129364898903,147.129364898903)" rx="2" ry="2" />
<text  x="13.00" y="81.5" >CreateExt..</text>
</g>
<g >
<title>Log_Event_form0_cell_integral_otherwise (14,167 us, 0.12%)</title><rect x="451.9" y="167" width="1.4" height="15.0" fill="rgb(155.282651906819,137.166997952282,137.166997952282)" rx="2" ry="2" />
<text  x="454.90" y="177.5" ></text>
</g>
<g >
<title>ParLoopExecute (661,627 us, 5.50%)</title><rect x="386.5" y="167" width="65.0" height="15.0" fill="rgb(118.267748006226,147.699045779392,147.699045779392)" rx="2" ry="2" />
<text  x="389.52" y="177.5" >ParLoo..</text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (6,202 us, 0.05%)</title><rect x="381.2" y="183" width="0.6" height="15.0" fill="rgb(139.506281856744,110.609847257906,139.506281856744)" rx="2" ry="2" />
<text  x="384.15" y="193.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (8,234 us, 0.07%)</title><rect x="264.2" y="167" width="0.9" height="15.0" fill="rgb(145.238766731297,125.299339748949,145.238766731297)" rx="2" ry="2" />
<text  x="267.24" y="177.5" ></text>
</g>
<g >
<title>CreateSparsity (572,422 us, 4.76%)</title><rect x="314.0" y="167" width="56.2" height="15.0" fill="rgb(109.150447510252,145.335301206362,145.335301206362)" rx="2" ry="2" />
<text  x="317.03" y="177.5" >Creat..</text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (5,994 us, 0.05%)</title><rect x="98.7" y="151" width="0.6" height="15.0" fill="rgb(148.225754001303,132.95349462834,148.225754001303)" rx="2" ry="2" />
<text  x="101.72" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (1,811 us, 0.02%)</title><rect x="381.6" y="247" width="0.2" height="15.0" fill="rgb(154.01595628128,127.455664823149,127.455664823149)" rx="2" ry="2" />
<text  x="384.58" y="257.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (3,091,456 us, 25.72%)</title><rect x="453.3" y="167" width="303.5" height="15.0" fill="rgb(143.793390260026,154.316804882229,154.316804882229)" rx="2" ry="2" />
<text  x="456.29" y="177.5" >pyop2.global_kernel.GlobalKernel.comp..</text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (5,312 us, 0.04%)</title><rect x="259.0" y="119" width="0.5" height="15.0" fill="rgb(117.841307184062,117.841307184062,150.22734977756)" rx="2" ry="2" />
<text  x="262.00" y="129.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_form1_cell_integral_otherwise (3,158,279 us, 26.28%)</title><rect x="756.8" y="151" width="310.1" height="15.0" fill="rgb(152.078071336729,152.078071336729,129.301422631841)" rx="2" ry="2" />
<text  x="759.79" y="161.5" >Parloop_Cells_wrap_form1_cell_integral..</text>
</g>
<g >
<title>CreateFunctionSpace (5,312 us, 0.04%)</title><rect x="259.0" y="87" width="0.5" height="15.0" fill="rgb(127.051261757257,163.038166690679,127.051261757257)" rx="2" ry="2" />
<text  x="262.00" y="97.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.solve (9,445,092 us, 78.58%)</title><rect x="262.7" y="87" width="927.3" height="15.0" fill="rgb(147.530886276166,159.704274327136,147.530886276166)" rx="2" ry="2" />
<text  x="265.74" y="97.5" >firedrake.variational_solver.NonlinearVariationalSolver.solve</text>
</g>
<g >
<title>HybridOperatorAssembly (498,903 us, 4.15%)</title><rect x="265.1" y="151" width="48.9" height="15.0" fill="rgb(151.863031270119,142.274017629679,151.863031270119)" rx="2" ry="2" />
<text  x="268.05" y="161.5" >Hybr..</text>
</g>
<g >
<title>firedrake.functionspace.MixedFunctionSpace (1,559 us, 0.01%)</title><rect x="264.1" y="167" width="0.1" height="15.0" fill="rgb(136.106826376731,101.898742590374,136.106826376731)" rx="2" ry="2" />
<text  x="267.09" y="177.5" ></text>
</g>
<g >
<title>MatZeroInitial (104,558 us, 0.87%)</title><rect x="370.7" y="167" width="10.2" height="15.0" fill="rgb(152.516003189992,115.956024456604,115.956024456604)" rx="2" ry="2" />
<text  x="373.68" y="177.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_form0_cell_integral_otherwise (3,105,623 us, 25.84%)</title><rect x="451.9" y="151" width="304.9" height="15.0" fill="rgb(126.820537983198,163.075726374828,126.820537983198)" rx="2" ry="2" />
<text  x="454.90" y="161.5" >Parloop_Cells_wrap_form0_cell_integra..</text>
</g>
<g >
<title>ParLoopExecute (869,739 us, 7.24%)</title><rect x="13.3" y="103" width="85.4" height="15.0" fill="rgb(127.501232578541,162.964915626749,127.501232578541)" rx="2" ry="2" />
<text  x="16.34" y="113.5" >ParLoopEx..</text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (14,220 us, 0.12%)</title><rect x="99.3" y="103" width="1.4" height="15.0" fill="rgb(149.249954907209,159.424425945338,149.249954907209)" rx="2" ry="2" />
<text  x="102.31" y="113.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (1,276 us, 0.01%)</title><rect x="1189.7" y="199" width="0.2" height="15.0" fill="rgb(148.613054247762,148.613054247762,112.509416739155)" rx="2" ry="2" />
<text  x="1192.74" y="209.5" ></text>
</g>
<g >
<title>firedrake (12,019,454 us, 100.00%)</title><rect x="10.0" y="55" width="1180.0" height="15.0" fill="rgb(114.813662464899,114.813662464899,149.641354025464)" rx="2" ry="2" />
<text  x="13.00" y="65.5" >firedrake</text>
</g>
<g >
<title>firedrake.parloops.par_loop (666,815 us, 5.55%)</title><rect x="386.0" y="151" width="65.5" height="15.0" fill="rgb(123.890454837459,163.552716654367,123.890454837459)" rx="2" ry="2" />
<text  x="389.01" y="161.5" >firedr..</text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (1,559 us, 0.01%)</title><rect x="264.1" y="215" width="0.1" height="15.0" fill="rgb(149.996668660666,149.996668660666,119.214625047841)" rx="2" ry="2" />
<text  x="267.09" y="225.5" ></text>
</g>
<g >
<title>ParLoopExecute (415,320 us, 3.46%)</title><rect x="272.4" y="167" width="40.8" height="15.0" fill="rgb(156.626232046146,147.467779020452,147.467779020452)" rx="2" ry="2" />
<text  x="275.44" y="177.5" >Par..</text>
</g>
<g >
<title>firedrake.slate.slac.optimise.optimise (6,857 us, 0.06%)</title><rect x="313.4" y="167" width="0.6" height="15.0" fill="rgb(128.984769314635,128.984769314635,152.384148899607)" rx="2" ry="2" />
<text  x="316.36" y="177.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (4,206 us, 0.03%)</title><rect x="381.3" y="199" width="0.5" height="15.0" fill="rgb(117.059822892341,117.059822892341,150.076094753356)" rx="2" ry="2" />
<text  x="384.35" y="209.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.local_to_global_map (1,473 us, 0.01%)</title><rect x="313.2" y="167" width="0.2" height="15.0" fill="rgb(138.637550101987,108.383722136342,138.637550101987)" rx="2" ry="2" />
<text  x="316.21" y="177.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.action (10,216 us, 0.08%)</title><rect x="259.7" y="87" width="1.0" height="15.0" fill="rgb(133.580755747468,95.4256866028858,133.580755747468)" rx="2" ry="2" />
<text  x="262.72" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (8,234 us, 0.07%)</title><rect x="264.2" y="183" width="0.9" height="15.0" fill="rgb(152.083140248065,112.637408568496,112.637408568496)" rx="2" ry="2" />
<text  x="267.24" y="193.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (5,312 us, 0.04%)</title><rect x="259.0" y="135" width="0.5" height="15.0" fill="rgb(136.468040560405,161.505202699469,136.468040560405)" rx="2" ry="2" />
<text  x="262.00" y="145.5" ></text>
</g>
<g >
<title>CreateMesh (1,796 us, 0.01%)</title><rect x="100.7" y="71" width="0.2" height="15.0" fill="rgb(106.131967834728,144.552732401596,144.552732401596)" rx="2" ry="2" />
<text  x="103.71" y="81.5" ></text>
</g>
<g >
<title>SNESSolve (9,445,092 us, 78.58%)</title><rect x="262.7" y="103" width="927.3" height="15.0" fill="rgb(146.644990611257,146.644990611257,155.80225624734)" rx="2" ry="2" />
<text  x="265.74" y="113.5" >SNESSolve</text>
</g>
<g >
<title>all (12,019,454 us, 100%)</title><rect x="10.0" y="39" width="1180.0" height="15.0" fill="rgb(156.789369375055,148.718498542086,148.718498542086)" rx="2" ry="2" />
<text  x="13.00" y="49.5" ></text>
</g>
<g >
<title>MatAssemblyEnd (4,580 us, 0.04%)</title><rect x="370.2" y="167" width="0.5" height="15.0" fill="rgb(119.303763843981,147.967642478069,147.967642478069)" rx="2" ry="2" />
<text  x="373.23" y="177.5" ></text>
</g>
<g >
<title>SNESJacobianEval (1,412 us, 0.01%)</title><rect x="1189.9" y="119" width="0.1" height="15.0" fill="rgb(152.71845572815,117.508160582483,117.508160582483)" rx="2" ry="2" />
<text  x="1192.86" y="129.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (661,627 us, 5.50%)</title><rect x="386.5" y="199" width="65.0" height="15.0" fill="rgb(119.971040755335,119.971040755335,150.639556275226)" rx="2" ry="2" />
<text  x="389.52" y="209.5" >pyop2...</text>
</g>
<g >
<title>firedrake.matrix_free.operators.ImplicitMatrixContext.__init__ (6,287 us, 0.05%)</title><rect x="262.1" y="103" width="0.6" height="15.0" fill="rgb(144.508050525292,160.196363867976,144.508050525292)" rx="2" ry="2" />
<text  x="265.12" y="113.5" ></text>
</g>
<g >
<title>firedrake.utility_meshes.SquareMesh (2,052 us, 0.02%)</title><rect x="259.5" y="71" width="0.2" height="15.0" fill="rgb(152.208029875368,113.594895711156,113.594895711156)" rx="2" ry="2" />
<text  x="262.52" y="81.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (1,559 us, 0.01%)</title><rect x="264.1" y="183" width="0.1" height="15.0" fill="rgb(151.056105382617,151.056105382617,124.348818392683)" rx="2" ry="2" />
<text  x="267.09" y="193.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (8,311 us, 0.07%)</title><rect x="380.9" y="167" width="0.9" height="15.0" fill="rgb(147.749957649154,131.734266475958,147.749957649154)" rx="2" ry="2" />
<text  x="383.94" y="177.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (5,994 us, 0.05%)</title><rect x="98.7" y="135" width="0.6" height="15.0" fill="rgb(152.255667910387,113.960120646301,113.960120646301)" rx="2" ry="2" />
<text  x="101.72" y="145.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (1,559 us, 0.01%)</title><rect x="264.1" y="231" width="0.1" height="15.0" fill="rgb(107.410136017474,144.884109337864,144.884109337864)" rx="2" ry="2" />
<text  x="267.09" y="241.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (8,311 us, 0.07%)</title><rect x="380.9" y="151" width="0.9" height="15.0" fill="rgb(142.716347407618,142.716347407618,155.041873691797)" rx="2" ry="2" />
<text  x="383.94" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (5,994 us, 0.05%)</title><rect x="98.7" y="119" width="0.6" height="15.0" fill="rgb(148.436881777719,133.494509555406,148.436881777719)" rx="2" ry="2" />
<text  x="101.72" y="129.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (3,141,192 us, 26.13%)</title><rect x="758.5" y="167" width="308.4" height="15.0" fill="rgb(129.434289927321,162.650231872297,129.434289927321)" rx="2" ry="2" />
<text  x="761.47" y="177.5" >pyop2.global_kernel.GlobalKernel.compile</text>
</g>
<g >
<title>PCSetUp (1,922,444 us, 15.99%)</title><rect x="262.7" y="119" width="188.8" height="15.0" fill="rgb(154.029067954116,127.556187648225,127.556187648225)" rx="2" ry="2" />
<text  x="265.74" y="129.5" >PCSetUp</text>
</g>
<g >
<title>firedrake.variational_solver.LinearVariationalProblem.__init__ (21,368 us, 0.18%)</title><rect x="259.7" y="71" width="2.1" height="15.0" fill="rgb(126.401683409432,126.401683409432,151.884196788922)" rx="2" ry="2" />
<text  x="262.72" y="81.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (14,220 us, 0.12%)</title><rect x="99.3" y="119" width="1.4" height="15.0" fill="rgb(109.241535924619,109.241535924619,148.562877920894)" rx="2" ry="2" />
<text  x="102.31" y="129.5" ></text>
</g>
<g >
<title>Log_Event_form1_cell_integral_otherwise (17,087 us, 0.14%)</title><rect x="756.8" y="167" width="1.7" height="15.0" fill="rgb(107.473941310642,144.900651450907,144.900651450907)" rx="2" ry="2" />
<text  x="759.79" y="177.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (1,559 us, 0.01%)</title><rect x="264.1" y="199" width="0.1" height="15.0" fill="rgb(108.423560727107,145.146849077398,145.146849077398)" rx="2" ry="2" />
<text  x="267.09" y="209.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (3,155 us, 0.03%)</title><rect x="313.7" y="183" width="0.3" height="15.0" fill="rgb(125.060629340477,149.460163162346,149.460163162346)" rx="2" ry="2" />
<text  x="316.72" y="193.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.action (3,753 us, 0.03%)</title><rect x="262.1" y="119" width="0.4" height="15.0" fill="rgb(124.368990342177,163.474815525692,124.368990342177)" rx="2" ry="2" />
<text  x="265.12" y="129.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalProblem.__init__ (11,152 us, 0.09%)</title><rect x="260.7" y="87" width="1.1" height="15.0" fill="rgb(134.724751109356,161.788994005454,134.724751109356)" rx="2" ry="2" />
<text  x="263.72" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (14,220 us, 0.12%)</title><rect x="99.3" y="87" width="1.4" height="15.0" fill="rgb(139.846759321862,139.846759321862,154.486469546167)" rx="2" ry="2" />
<text  x="102.31" y="97.5" ></text>
</g>
<g >
<title>ParLoopExecute (6,263,902 us, 52.11%)</title><rect x="451.9" y="135" width="615.0" height="15.0" fill="rgb(156.496818704795,146.475610070093,146.475610070093)" rx="2" ry="2" />
<text  x="454.90" y="145.5" >ParLoopExecute</text>
</g>
<g >
<title>firedrake.utility_meshes.RectangleMesh (2,052 us, 0.02%)</title><rect x="259.5" y="87" width="0.2" height="15.0" fill="rgb(148.176942536959,148.176942536959,110.395952294495)" rx="2" ry="2" />
<text  x="262.52" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (1,811 us, 0.02%)</title><rect x="381.6" y="231" width="0.2" height="15.0" fill="rgb(155.421919353442,138.234715043052,138.234715043052)" rx="2" ry="2" />
<text  x="384.58" y="241.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (14,220 us, 0.12%)</title><rect x="99.3" y="71" width="1.4" height="15.0" fill="rgb(140.593587708264,113.396068502426,140.593587708264)" rx="2" ry="2" />
<text  x="102.31" y="81.5" ></text>
</g>
<g >
<title>perfsolve (9,445,092 us, 78.58%)</title><rect x="262.7" y="71" width="927.3" height="15.0" fill="rgb(152.488417620438,115.744535090027,115.744535090027)" rx="2" ry="2" />
<text  x="265.74" y="81.5" >perfsolve</text>
</g>
<g >
<title>firedrake.assemble.allocate_matrix (6,287 us, 0.05%)</title><rect x="262.1" y="87" width="0.6" height="15.0" fill="rgb(128.721479482635,150.409272458461,150.409272458461)" rx="2" ry="2" />
<text  x="265.12" y="97.5" ></text>
</g>
</g>
</svg>
