<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="299" onload="init(evt)" viewBox="0 0 1200 299" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:13px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:18px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 13 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (1 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="299.0" fill="url(#background)"  />
<text id="title" x="600.00" y="26" >Firedrake example</text>
<text id="details" x="10.00" y="281" > </text>
<text id="unzoom" x="10.00" y="26" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="26" >Search</text>
<text id="ignorecase" x="1174.00" y="26" >ic</text>
<text id="matched" x="1090.00" y="281" > </text>
<g id="frames">
<g >
<title>CreateFunctionSpace (4,681 us, 0.15%)</title><rect x="1110.0" y="199" width="1.8" height="15.0" fill="rgb(152.07053892213,152.07053892213,129.26491939186)" rx="2" ry="2" />
<text  x="1112.96" y="209.5" ></text>
</g>
<g >
<title>firedrake.assemble.allocate_matrix (6,062 us, 0.20%)</title><rect x="681.8" y="87" width="2.3" height="15.0" fill="rgb(119.324623757273,119.324623757273,150.514443307859)" rx="2" ry="2" />
<text  x="684.77" y="97.5" ></text>
</g>
<g >
<title>CreateMesh (561 us, 0.02%)</title><rect x="46.6" y="87" width="0.2" height="15.0" fill="rgb(145.035491992959,160.110501303472,145.035491992959)" rx="2" ry="2" />
<text  x="49.56" y="97.5" ></text>
</g>
<g >
<title>firedrake.parloops.par_loop (6,328 us, 0.21%)</title><rect x="1158.5" y="151" width="2.4" height="15.0" fill="rgb(150.386543518388,159.239399892355,150.386543518388)" rx="2" ry="2" />
<text  x="1161.49" y="161.5" ></text>
</g>
<g >
<title>firedrake.mesh._Facets.__init__ (564 us, 0.02%)</title><rect x="39.7" y="167" width="0.2" height="15.0" fill="rgb(155.213401129766,155.213401129766,144.495713167326)" rx="2" ry="2" />
<text  x="42.73" y="177.5" ></text>
</g>
<g >
<title>VecCopy (677 us, 0.02%)</title><rect x="1189.7" y="103" width="0.3" height="15.0" fill="rgb(149.569701511991,136.397360124477,149.569701511991)" rx="2" ry="2" />
<text  x="1192.74" y="113.5" ></text>
</g>
<g >
<title>firedrake.functionspace.MixedFunctionSpace (2,716 us, 0.09%)</title><rect x="688.3" y="167" width="1.1" height="15.0" fill="rgb(135.036068879743,152.046388228081,152.046388228081)" rx="2" ry="2" />
<text  x="691.34" y="177.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (13,767 us, 0.45%)</title><rect x="41.0" y="119" width="5.3" height="15.0" fill="rgb(152.68795641547,117.2743325186,117.2743325186)" rx="2" ry="2" />
<text  x="44.04" y="129.5" ></text>
</g>
<g >
<title>CreateExtMesh (79,851 us, 2.59%)</title><rect x="10.0" y="71" width="30.6" height="15.0" fill="rgb(126.889875874629,126.889875874629,151.978685653154)" rx="2" ry="2" />
<text  x="13.00" y="81.5" >C..</text>
</g>
<g >
<title>firedrake.utility_meshes.RectangleMesh (1,669 us, 0.05%)</title><rect x="672.2" y="87" width="0.7" height="15.0" fill="rgb(135.680163108845,161.63346181949,135.680163108845)" rx="2" ry="2" />
<text  x="675.23" y="97.5" ></text>
</g>
<g >
<title>firedrake.mesh._from_cell_list (571 us, 0.02%)</title><rect x="672.6" y="103" width="0.3" height="15.0" fill="rgb(131.787183419047,151.204084590123,151.204084590123)" rx="2" ry="2" />
<text  x="675.65" y="113.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (7,311 us, 0.24%)</title><rect x="37.1" y="103" width="2.8" height="15.0" fill="rgb(148.145642506597,148.145642506597,110.244267531971)" rx="2" ry="2" />
<text  x="40.15" y="113.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_form0_cell_integral_otherwise (16,171 us, 0.52%)</title><rect x="1162.5" y="151" width="6.2" height="15.0" fill="rgb(149.056112165805,149.056112165805,114.656543572746)" rx="2" ry="2" />
<text  x="1165.52" y="161.5" ></text>
</g>
<g >
<title>firedrake.matrix_free.operators.ImplicitMatrixContext.__init__ (6,062 us, 0.20%)</title><rect x="681.8" y="103" width="2.3" height="15.0" fill="rgb(142.627860535537,142.627860535537,155.024747200427)" rx="2" ry="2" />
<text  x="684.77" y="113.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (415 us, 0.01%)</title><rect x="669.8" y="119" width="0.2" height="15.0" fill="rgb(152.031261804123,112.239673831606,112.239673831606)" rx="2" ry="2" />
<text  x="672.83" y="129.5" ></text>
</g>
<g >
<title>MatZeroEntries (1,202 us, 0.04%)</title><rect x="697.6" y="167" width="0.5" height="15.0" fill="rgb(147.042236747491,129.920731665447,147.042236747491)" rx="2" ry="2" />
<text  x="700.64" y="177.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (14,123 us, 0.46%)</title><rect x="40.9" y="87" width="5.4" height="15.0" fill="rgb(148.981616555131,148.981616555131,114.295526382557)" rx="2" ry="2" />
<text  x="43.91" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (470 us, 0.02%)</title><rect x="1189.4" y="231" width="0.2" height="15.0" fill="rgb(154.763947273579,154.763947273579,142.317590633497)" rx="2" ry="2" />
<text  x="1192.39" y="241.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_slate_loopy_knl_0 (411,355 us, 13.34%)</title><rect x="698.1" y="183" width="157.4" height="15.0" fill="rgb(127.58039917883,127.58039917883,152.112335324935)" rx="2" ry="2" />
<text  x="701.10" y="193.5" >Parloop_Cells_wrap..</text>
</g>
<g >
<title>firedrake.mesh.ExtrudedMeshTopology.__init__ (717 us, 0.02%)</title><rect x="39.9" y="87" width="0.3" height="15.0" fill="rgb(148.599806481928,159.530264061082,148.599806481928)" rx="2" ry="2" />
<text  x="42.94" y="97.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (2,867 us, 0.09%)</title><rect x="1188.5" y="167" width="1.1" height="15.0" fill="rgb(152.653403537675,144.299346565292,152.653403537675)" rx="2" ry="2" />
<text  x="1191.47" y="177.5" ></text>
</g>
<g >
<title>firedrake.mesh.MeshTopology._facets (2,555 us, 0.08%)</title><rect x="671.3" y="151" width="0.9" height="15.0" fill="rgb(133.72759613067,161.951321560123,133.72759613067)" rx="2" ry="2" />
<text  x="674.25" y="161.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (2,187 us, 0.07%)</title><rect x="1160.1" y="183" width="0.8" height="15.0" fill="rgb(142.662851340205,154.023702199312,154.023702199312)" rx="2" ry="2" />
<text  x="1163.08" y="193.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (9,216 us, 0.30%)</title><rect x="676.8" y="103" width="3.5" height="15.0" fill="rgb(155.101481530236,135.778025065146,135.778025065146)" rx="2" ry="2" />
<text  x="679.77" y="113.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (5,855 us, 0.19%)</title><rect x="670.0" y="135" width="2.2" height="15.0" fill="rgb(154.855417717248,154.855417717248,142.760870475892)" rx="2" ry="2" />
<text  x="672.99" y="145.5" ></text>
</g>
<g >
<title>firedrake.functionspace.VectorFunctionSpace (7,311 us, 0.24%)</title><rect x="37.1" y="87" width="2.8" height="15.0" fill="rgb(153.91643380573,126.692659177261,126.692659177261)" rx="2" ry="2" />
<text  x="40.15" y="97.5" ></text>
</g>
<g >
<title>firedrake.assemble.allocate_matrix (660,077 us, 21.41%)</title><rect x="856.0" y="151" width="252.7" height="15.0" fill="rgb(137.228651962927,161.381382238593,137.228651962927)" rx="2" ry="2" />
<text  x="859.04" y="161.5" >firedrake.assemble.allocate_ma..</text>
</g>
<g >
<title>ParLoopExecute (2,187 us, 0.07%)</title><rect x="1160.1" y="167" width="0.8" height="15.0" fill="rgb(115.71577251206,147.037422503127,147.037422503127)" rx="2" ry="2" />
<text  x="1163.08" y="177.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.local_to_global_map (1,324 us, 0.04%)</title><rect x="855.5" y="167" width="0.5" height="15.0" fill="rgb(156.42895793826,145.955344193329,145.955344193329)" rx="2" ry="2" />
<text  x="858.53" y="177.5" ></text>
</g>
<g >
<title>firedrake.mesh._Facets.__init__ (700 us, 0.02%)</title><rect x="672.0" y="167" width="0.2" height="15.0" fill="rgb(121.093360602398,148.431612008029,148.431612008029)" rx="2" ry="2" />
<text  x="674.96" y="177.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.LinearVariationalProblem.__init__ (20,172 us, 0.65%)</title><rect x="672.9" y="71" width="7.7" height="15.0" fill="rgb(155.646198094479,139.954185391006,139.954185391006)" rx="2" ry="2" />
<text  x="675.87" y="81.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (7,311 us, 0.24%)</title><rect x="37.1" y="135" width="2.8" height="15.0" fill="rgb(153.880385782826,126.416291001663,126.416291001663)" rx="2" ry="2" />
<text  x="40.15" y="145.5" ></text>
</g>
<g >
<title>MatAssemblyEnd (4,245 us, 0.14%)</title><rect x="1067.4" y="167" width="1.6" height="15.0" fill="rgb(148.403774240025,148.403774240025,111.495213624738)" rx="2" ry="2" />
<text  x="1070.38" y="177.5" ></text>
</g>
<g >
<title>perfsolve (1,321,910 us, 42.87%)</title><rect x="684.1" y="71" width="505.9" height="15.0" fill="rgb(131.942051771773,162.241991572037,131.942051771773)" rx="2" ry="2" />
<text  x="687.09" y="81.5" >perfsolve</text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.boundary_nodes (484 us, 0.02%)</title><rect x="855.9" y="183" width="0.1" height="15.0" fill="rgb(118.403725553984,118.403725553984,150.336204945932)" rx="2" ry="2" />
<text  x="858.85" y="193.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (5,162 us, 0.17%)</title><rect x="1187.6" y="151" width="2.0" height="15.0" fill="rgb(134.871709268727,134.871709268727,153.523556632657)" rx="2" ry="2" />
<text  x="1190.60" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (7,311 us, 0.24%)</title><rect x="37.1" y="151" width="2.8" height="15.0" fill="rgb(119.944090619365,148.133653123539,148.133653123539)" rx="2" ry="2" />
<text  x="40.15" y="161.5" ></text>
</g>
<g >
<title>CreateMesh (2,054 us, 0.07%)</title><rect x="46.3" y="71" width="0.8" height="15.0" fill="rgb(139.681324292777,160.98210999885,139.681324292777)" rx="2" ry="2" />
<text  x="49.31" y="81.5" ></text>
</g>
<g >
<title>SNESSolve (1,321,233 us, 42.85%)</title><rect x="684.1" y="103" width="505.6" height="15.0" fill="rgb(131.527957782099,131.527957782099,152.876378925568)" rx="2" ry="2" />
<text  x="687.09" y="113.5" >SNESSolve</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (411,355 us, 13.34%)</title><rect x="698.1" y="199" width="157.4" height="15.0" fill="rgb(147.273552205177,130.513477525767,147.273552205177)" rx="2" ry="2" />
<text  x="701.10" y="209.5" >pyop2.global_kerne..</text>
</g>
<g >
<title>SNESFunctionEval (74,879 us, 2.43%)</title><rect x="1160.9" y="119" width="28.7" height="15.0" fill="rgb(152.143540475145,152.143540475145,129.618696148779)" rx="2" ry="2" />
<text  x="1163.91" y="129.5" >S..</text>
</g>
<g >
<title>Log_Event_form1_cell_integral_otherwise (16,435 us, 0.53%)</title><rect x="1168.9" y="167" width="6.3" height="15.0" fill="rgb(151.723077905358,151.723077905358,127.581069849042)" rx="2" ry="2" />
<text  x="1171.90" y="177.5" ></text>
</g>
<g >
<title>PetscBarrier (860 us, 0.03%)</title><rect x="47.1" y="71" width="0.3" height="15.0" fill="rgb(120.559717603657,148.293260119467,148.293260119467)" rx="2" ry="2" />
<text  x="50.10" y="81.5" ></text>
</g>
<g >
<title>firedrake.functionspace.VectorFunctionSpace (5,855 us, 0.19%)</title><rect x="670.0" y="71" width="2.2" height="15.0" fill="rgb(121.990789831597,148.664278845229,148.664278845229)" rx="2" ry="2" />
<text  x="672.99" y="81.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (38,336 us, 1.24%)</title><rect x="22.5" y="135" width="14.6" height="15.0" fill="rgb(156.321645781032,145.13261765458,145.13261765458)" rx="2" ry="2" />
<text  x="25.47" y="145.5" ></text>
</g>
<g >
<title>ParLoopExecute (34,807 us, 1.13%)</title><rect x="1162.4" y="135" width="13.3" height="15.0" fill="rgb(126.486531236998,163.13009956607,126.486531236998)" rx="2" ry="2" />
<text  x="1165.35" y="145.5" ></text>
</g>
<g >
<title>firedrake.functionspace.make_scalar_element (401 us, 0.01%)</title><rect x="40.8" y="87" width="0.1" height="15.0" fill="rgb(154.222022341851,129.035504620854,129.035504620854)" rx="2" ry="2" />
<text  x="43.75" y="97.5" ></text>
</g>
<g >
<title>CreateMesh (451 us, 0.01%)</title><rect x="672.5" y="103" width="0.1" height="15.0" fill="rgb(126.510001467091,163.126278830939,126.510001467091)" rx="2" ry="2" />
<text  x="675.48" y="113.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (13,767 us, 0.45%)</title><rect x="41.0" y="103" width="5.3" height="15.0" fill="rgb(113.521525291884,146.468543594192,146.468543594192)" rx="2" ry="2" />
<text  x="44.04" y="113.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (415 us, 0.01%)</title><rect x="669.8" y="87" width="0.2" height="15.0" fill="rgb(149.086033821455,149.086033821455,114.80154851936)" rx="2" ry="2" />
<text  x="672.83" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (470 us, 0.02%)</title><rect x="1189.4" y="215" width="0.2" height="15.0" fill="rgb(148.455791845703,148.455791845703,111.74729894456)" rx="2" ry="2" />
<text  x="1192.39" y="225.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (6,644 us, 0.22%)</title><rect x="689.4" y="167" width="2.5" height="15.0" fill="rgb(142.425799424137,153.962244295147,153.962244295147)" rx="2" ry="2" />
<text  x="692.38" y="177.5" ></text>
</g>
<g >
<title>firedrake.functionspace.MixedFunctionSpace (968 us, 0.03%)</title><rect x="669.6" y="71" width="0.4" height="15.0" fill="rgb(153.879571335454,153.879571335454,138.031768779507)" rx="2" ry="2" />
<text  x="672.62" y="81.5" ></text>
</g>
<g >
<title>SNESJacobianEval (445 us, 0.01%)</title><rect x="1189.6" y="119" width="0.1" height="15.0" fill="rgb(154.588536630944,154.588536630944,141.467523673039)" rx="2" ry="2" />
<text  x="1192.57" y="129.5" ></text>
</g>
<g >
<title>firedrake.extrusion_utils.make_extruded_coords (70,357 us, 2.28%)</title><rect x="10.2" y="87" width="26.9" height="15.0" fill="rgb(142.929036746794,160.453412622615,142.929036746794)" rx="2" ry="2" />
<text  x="13.22" y="97.5" >f..</text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.solve (1,321,910 us, 42.87%)</title><rect x="684.1" y="87" width="505.9" height="15.0" fill="rgb(148.547308802656,148.547308802656,112.190804197488)" rx="2" ry="2" />
<text  x="687.09" y="97.5" >firedrake.variational_solver.NonlinearVariationalSolver.solve</text>
</g>
<g >
<title>Parloop_Cells_wrap_form1_cell_integral_otherwise (18,209 us, 0.59%)</title><rect x="1168.7" y="151" width="7.0" height="15.0" fill="rgb(109.310784794636,109.310784794636,148.576280927994)" rx="2" ry="2" />
<text  x="1171.71" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (470 us, 0.02%)</title><rect x="1189.4" y="247" width="0.2" height="15.0" fill="rgb(112.524823891343,146.210139527385,146.210139527385)" rx="2" ry="2" />
<text  x="1192.39" y="257.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (412 us, 0.01%)</title><rect x="689.2" y="183" width="0.2" height="15.0" fill="rgb(117.497963179249,147.499471935361,147.499471935361)" rx="2" ry="2" />
<text  x="692.23" y="193.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (415 us, 0.01%)</title><rect x="669.8" y="103" width="0.2" height="15.0" fill="rgb(149.25350246024,159.423848436705,149.25350246024)" rx="2" ry="2" />
<text  x="672.83" y="113.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (9,806 us, 0.32%)</title><rect x="688.2" y="151" width="3.7" height="15.0" fill="rgb(151.025823645504,151.025823645504,124.202068435903)" rx="2" ry="2" />
<text  x="691.17" y="161.5" ></text>
</g>
<g >
<title>firedrake.interpolation.make_interpolator (120,581 us, 3.91%)</title><rect x="1112.3" y="151" width="46.2" height="15.0" fill="rgb(131.791924275335,131.791924275335,152.927469214581)" rx="2" ry="2" />
<text  x="1115.34" y="161.5" >fire..</text>
</g>
<g >
<title>CreateFunctionSpace (15,026 us, 0.49%)</title><rect x="40.6" y="71" width="5.7" height="15.0" fill="rgb(130.166058002478,130.166058002478,152.612785419834)" rx="2" ry="2" />
<text  x="43.56" y="81.5" ></text>
</g>
<g >
<title>firedrake.functionspace.make_scalar_element (1,143 us, 0.04%)</title><rect x="1110.5" y="215" width="0.4" height="15.0" fill="rgb(129.471058739032,162.644246251785,129.471058739032)" rx="2" ry="2" />
<text  x="1113.45" y="225.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (1,708 us, 0.06%)</title><rect x="1111.1" y="231" width="0.7" height="15.0" fill="rgb(133.384521278538,94.9228357762548,133.384521278538)" rx="2" ry="2" />
<text  x="1114.10" y="241.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (8,793 us, 0.29%)</title><rect x="1108.7" y="167" width="3.3" height="15.0" fill="rgb(123.596696682602,123.596696682602,151.341296132116)" rx="2" ry="2" />
<text  x="1111.66" y="177.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalProblem.__init__ (9,967 us, 0.32%)</title><rect x="676.8" y="87" width="3.8" height="15.0" fill="rgb(149.347678556751,149.347678556751,116.069519159638)" rx="2" ry="2" />
<text  x="679.77" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (1,708 us, 0.06%)</title><rect x="1111.1" y="247" width="0.7" height="15.0" fill="rgb(145.055213584916,145.055213584916,155.494557468048)" rx="2" ry="2" />
<text  x="1114.10" y="257.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (1,015 us, 0.03%)</title><rect x="1189.2" y="183" width="0.4" height="15.0" fill="rgb(135.770196655173,161.618805195669,135.770196655173)" rx="2" ry="2" />
<text  x="1192.18" y="193.5" ></text>
</g>
<g >
<title>MatZeroInitial (103,618 us, 3.36%)</title><rect x="1069.0" y="167" width="39.7" height="15.0" fill="rgb(156.514746370976,146.613055510814,146.613055510814)" rx="2" ry="2" />
<text  x="1072.00" y="177.5" >Mat..</text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (1,285 us, 0.04%)</title><rect x="688.7" y="199" width="0.5" height="15.0" fill="rgb(152.458642893441,152.458642893441,131.145730945137)" rx="2" ry="2" />
<text  x="691.73" y="209.5" ></text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (36,308 us, 1.18%)</title><rect x="1175.7" y="135" width="13.9" height="15.0" fill="rgb(151.150529894165,151.150529894165,124.806414102492)" rx="2" ry="2" />
<text  x="1178.68" y="145.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (5,855 us, 0.19%)</title><rect x="670.0" y="119" width="2.2" height="15.0" fill="rgb(134.033581879021,96.58605356499,134.033581879021)" rx="2" ry="2" />
<text  x="672.99" y="129.5" ></text>
</g>
<g >
<title>firedrake.__init__ (1,625,745 us, 52.73%)</title><rect x="47.4" y="71" width="622.2" height="15.0" fill="rgb(148.434033703207,159.557250327385,148.434033703207)" rx="2" ry="2" />
<text  x="50.43" y="81.5" >firedrake.__init__</text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (1,285 us, 0.04%)</title><rect x="688.7" y="215" width="0.5" height="15.0" fill="rgb(116.351474007366,147.20223400191,147.20223400191)" rx="2" ry="2" />
<text  x="691.73" y="225.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.action (3,600 us, 0.12%)</title><rect x="681.8" y="119" width="1.3" height="15.0" fill="rgb(134.377757742374,161.845481297753,134.377757742374)" rx="2" ry="2" />
<text  x="684.77" y="129.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (6,644 us, 0.22%)</title><rect x="689.4" y="199" width="2.5" height="15.0" fill="rgb(153.087714851837,120.339147197418,120.339147197418)" rx="2" ry="2" />
<text  x="692.38" y="209.5" ></text>
</g>
<g >
<title>ParLoopExecute (39,329 us, 1.28%)</title><rect x="22.1" y="103" width="15.0" height="15.0" fill="rgb(125.135073420561,163.350104326885,125.135073420561)" rx="2" ry="2" />
<text  x="25.09" y="113.5" ></text>
</g>
<g >
<title>HybridInit (1,245,909 us, 40.41%)</title><rect x="684.1" y="135" width="476.8" height="15.0" fill="rgb(128.839090614009,150.439764233262,150.439764233262)" rx="2" ry="2" />
<text  x="687.09" y="145.5" >HybridInit</text>
</g>
<g >
<title>Parloop_Cells_wrap_pyop2_kernel_uniform_extrusion (38,885 us, 1.26%)</title><rect x="22.3" y="119" width="14.8" height="15.0" fill="rgb(145.554229400461,160.026055678995,145.554229400461)" rx="2" ry="2" />
<text  x="25.26" y="129.5" ></text>
</g>
<g >
<title>firedrake (3,083,264 us, 100.00%)</title><rect x="10.0" y="55" width="1180.0" height="15.0" fill="rgb(128.469356333711,128.469356333711,152.28439154846)" rx="2" ry="2" />
<text  x="13.00" y="65.5" >firedrake</text>
</g>
<g >
<title>CreateSparsity (551,556 us, 17.89%)</title><rect x="856.3" y="167" width="211.1" height="15.0" fill="rgb(147.566822955184,159.698424170086,147.566822955184)" rx="2" ry="2" />
<text  x="859.29" y="177.5" >CreateSparsity</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (1,421 us, 0.05%)</title><rect x="1160.4" y="199" width="0.5" height="15.0" fill="rgb(148.438249687572,159.556564004349,148.438249687572)" rx="2" ry="2" />
<text  x="1163.37" y="209.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (5,855 us, 0.19%)</title><rect x="670.0" y="87" width="2.2" height="15.0" fill="rgb(132.967377562732,93.8539050045019,132.967377562732)" rx="2" ry="2" />
<text  x="672.99" y="97.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (1,015 us, 0.03%)</title><rect x="1189.2" y="199" width="0.4" height="15.0" fill="rgb(129.580879290983,129.580879290983,152.499525024061)" rx="2" ry="2" />
<text  x="1192.18" y="209.5" ></text>
</g>
<g >
<title>firedrake.utility_meshes.SquareMesh (1,669 us, 0.05%)</title><rect x="672.2" y="71" width="0.7" height="15.0" fill="rgb(150.44676868064,150.44676868064,121.395878990795)" rx="2" ry="2" />
<text  x="675.23" y="81.5" ></text>
</g>
<g >
<title>CreateMesh (451 us, 0.01%)</title><rect x="672.5" y="119" width="0.1" height="15.0" fill="rgb(142.723482024974,142.723482024974,155.043254585479)" rx="2" ry="2" />
<text  x="675.48" y="129.5" ></text>
</g>
<g >
<title>HybridOperatorAssembly (428,811 us, 13.91%)</title><rect x="691.9" y="151" width="164.1" height="15.0" fill="rgb(130.555983600647,162.467630576639,130.555983600647)" rx="2" ry="2" />
<text  x="694.93" y="161.5" >HybridOperatorAssem..</text>
</g>
<g >
<title>Mesh: numbering (840 us, 0.03%)</title><rect x="46.8" y="87" width="0.3" height="15.0" fill="rgb(144.00710875647,160.277912528016,144.00710875647)" rx="2" ry="2" />
<text  x="49.78" y="97.5" ></text>
</g>
<g >
<title>Log_Event_form0_cell_integral_otherwise (13,692 us, 0.44%)</title><rect x="1162.9" y="167" width="5.2" height="15.0" fill="rgb(152.004040696172,112.030978670656,112.030978670656)" rx="2" ry="2" />
<text  x="1165.85" y="177.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (1,791 us, 0.06%)</title><rect x="688.5" y="183" width="0.7" height="15.0" fill="rgb(125.996333479032,149.702753124193,149.702753124193)" rx="2" ry="2" />
<text  x="691.54" y="193.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (1,285 us, 0.04%)</title><rect x="688.7" y="231" width="0.5" height="15.0" fill="rgb(152.585215364662,152.585215364662,131.759120613361)" rx="2" ry="2" />
<text  x="691.73" y="241.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (6,635 us, 0.22%)</title><rect x="1109.5" y="183" width="2.5" height="15.0" fill="rgb(141.130064731585,141.130064731585,154.734851238371)" rx="2" ry="2" />
<text  x="1112.48" y="193.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (5,855 us, 0.19%)</title><rect x="670.0" y="103" width="2.2" height="15.0" fill="rgb(152.896492797883,118.873111450438,118.873111450438)" rx="2" ry="2" />
<text  x="672.99" y="113.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.derivative (751 us, 0.02%)</title><rect x="680.3" y="103" width="0.3" height="15.0" fill="rgb(139.058701713022,161.083467162996,139.058701713022)" rx="2" ry="2" />
<text  x="683.30" y="113.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.action (10,205 us, 0.33%)</title><rect x="672.9" y="87" width="3.9" height="15.0" fill="rgb(130.229266712584,130.229266712584,152.625019363726)" rx="2" ry="2" />
<text  x="675.87" y="97.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (2,462 us, 0.08%)</title><rect x="683.1" y="119" width="1.0" height="15.0" fill="rgb(131.592773304892,162.298850857343,131.592773304892)" rx="2" ry="2" />
<text  x="686.15" y="129.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (1,609 us, 0.05%)</title><rect x="1168.1" y="167" width="0.6" height="15.0" fill="rgb(155.438652431056,155.438652431056,145.587315627426)" rx="2" ry="2" />
<text  x="1171.09" y="177.5" ></text>
</g>
<g >
<title>firedrake.function.Function.split (751 us, 0.02%)</title><rect x="680.3" y="119" width="0.3" height="15.0" fill="rgb(136.893872352884,161.435881244879,136.893872352884)" rx="2" ry="2" />
<text  x="683.30" y="129.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.__init__ (9,154 us, 0.30%)</title><rect x="680.6" y="71" width="3.5" height="15.0" fill="rgb(137.191287044217,137.191287044217,153.972507169849)" rx="2" ry="2" />
<text  x="683.59" y="81.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (1,272 us, 0.04%)</title><rect x="1175.2" y="167" width="0.5" height="15.0" fill="rgb(152.461215124045,152.461215124045,131.158196370372)" rx="2" ry="2" />
<text  x="1178.19" y="177.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (6,644 us, 0.22%)</title><rect x="689.4" y="183" width="2.5" height="15.0" fill="rgb(106.882762722701,144.747382928108,144.747382928108)" rx="2" ry="2" />
<text  x="692.38" y="193.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.WithGeometry.split (701 us, 0.02%)</title><rect x="1111.8" y="199" width="0.2" height="15.0" fill="rgb(123.797462163728,123.797462163728,151.380153967173)" rx="2" ry="2" />
<text  x="1114.75" y="209.5" ></text>
</g>
<g >
<title>firedrake.mesh.make_mesh_from_coordinates (892 us, 0.03%)</title><rect x="40.2" y="87" width="0.4" height="15.0" fill="rgb(138.038141675586,106.847738043688,138.038141675586)" rx="2" ry="2" />
<text  x="43.22" y="97.5" ></text>
</g>
<g >
<title>all (3,083,264 us, 100%)</title><rect x="10.0" y="39" width="1180.0" height="15.0" fill="rgb(149.783903521284,149.783903521284,118.183532449298)" rx="2" ry="2" />
<text  x="13.00" y="49.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (2,254 us, 0.07%)</title><rect x="1110.9" y="215" width="0.9" height="15.0" fill="rgb(124.391602028064,163.471134553571,124.391602028064)" rx="2" ry="2" />
<text  x="1113.89" y="225.5" ></text>
</g>
<g >
<title>ParLoopExecute (411,355 us, 13.34%)</title><rect x="698.1" y="167" width="157.4" height="15.0" fill="rgb(122.571742380873,122.571742380873,151.142917880169)" rx="2" ry="2" />
<text  x="701.10" y="177.5" >ParLoopExecute</text>
</g>
<g >
<title>firedrake.function.Function.__init__ (845 us, 0.03%)</title><rect x="1112.0" y="151" width="0.3" height="15.0" fill="rgb(153.256187188658,121.63076844638,121.63076844638)" rx="2" ry="2" />
<text  x="1115.02" y="161.5" ></text>
</g>
<g >
<title>PCSetUp (1,245,909 us, 40.41%)</title><rect x="684.1" y="119" width="476.8" height="15.0" fill="rgb(156.462637464609,146.213553895338,146.213553895338)" rx="2" ry="2" />
<text  x="687.09" y="129.5" >PCSetUp</text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (7,311 us, 0.24%)</title><rect x="37.1" y="119" width="2.8" height="15.0" fill="rgb(126.680568536849,163.098512098653,126.680568536849)" rx="2" ry="2" />
<text  x="40.15" y="129.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (8,793 us, 0.29%)</title><rect x="1108.7" y="151" width="3.3" height="15.0" fill="rgb(126.032040863336,149.712010594198,149.712010594198)" rx="2" ry="2" />
<text  x="1111.66" y="161.5" ></text>
</g>
</g>
</svg>
