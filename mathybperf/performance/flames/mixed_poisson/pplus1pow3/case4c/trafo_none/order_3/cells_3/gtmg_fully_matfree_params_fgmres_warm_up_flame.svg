<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="299" onload="init(evt)" viewBox="0 0 1200 299" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:13px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:18px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 13 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (1 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="299.0" fill="url(#background)"  />
<text id="title" x="600.00" y="26" >Firedrake example</text>
<text id="details" x="10.00" y="281" > </text>
<text id="unzoom" x="10.00" y="26" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="26" >Search</text>
<text id="ignorecase" x="1174.00" y="26" >ic</text>
<text id="matched" x="1090.00" y="281" > </text>
<g id="frames">
<g >
<title>Parloop_Cells_wrap_form0_cell_integral_otherwise (3,066,635 us, 23.08%)</title><rect x="589.3" y="151" width="272.3" height="15.0" fill="rgb(114.370624648259,146.688680464363,146.688680464363)" rx="2" ry="2" />
<text  x="592.30" y="161.5" >Parloop_Cells_wrap_form0_cell_int..</text>
</g>
<g >
<title>CreateSparsity (2,106,706 us, 15.86%)</title><rect x="297.9" y="167" width="187.1" height="15.0" fill="rgb(133.721280141971,151.705517073844,151.705517073844)" rx="2" ry="2" />
<text  x="300.91" y="177.5" >CreateSparsity</text>
</g>
<g >
<title>firedrake.assemble.allocate_matrix (6,187 us, 0.05%)</title><rect x="237.9" y="87" width="0.6" height="15.0" fill="rgb(148.347411720284,159.571351580419,148.347411720284)" rx="2" ry="2" />
<text  x="240.92" y="97.5" ></text>
</g>
<g >
<title>firedrake.mesh.MeshTopology._facets (2,279 us, 0.02%)</title><rect x="235.4" y="151" width="0.2" height="15.0" fill="rgb(133.743428257947,151.711259177986,151.711259177986)" rx="2" ry="2" />
<text  x="238.35" y="161.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (665,753 us, 5.01%)</title><rect x="529.6" y="199" width="59.1" height="15.0" fill="rgb(155.346087163987,137.653334923898,137.653334923898)" rx="2" ry="2" />
<text  x="532.62" y="209.5" >pyop2..</text>
</g>
<g >
<title>Log_Event_form0_cell_integral_otherwise (25,526 us, 0.19%)</title><rect x="589.5" y="167" width="2.3" height="15.0" fill="rgb(156.760326773084,148.495838593643,148.495838593643)" rx="2" ry="2" />
<text  x="592.48" y="177.5" ></text>
</g>
<g >
<title>all (13,286,487 us, 100%)</title><rect x="10.0" y="39" width="1180.0" height="15.0" fill="rgb(155.893822425032,141.852638591913,141.852638591913)" rx="2" ry="2" />
<text  x="13.00" y="49.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (1,530 us, 0.01%)</title><rect x="1189.4" y="183" width="0.1" height="15.0" fill="rgb(153.253157962545,153.253157962545,134.996073203104)" rx="2" ry="2" />
<text  x="1192.41" y="193.5" ></text>
</g>
<g >
<title>MatZeroInitial (394,927 us, 2.97%)</title><rect x="486.1" y="167" width="35.1" height="15.0" fill="rgb(115.329124865422,115.329124865422,149.741120941695)" rx="2" ry="2" />
<text  x="489.09" y="177.5" >Ma..</text>
</g>
<g >
<title>ParLoopExecute (667,496 us, 5.02%)</title><rect x="529.5" y="167" width="59.2" height="15.0" fill="rgb(126.903493282337,163.062222023806,126.903493282337)" rx="2" ry="2" />
<text  x="532.47" y="177.5" >ParLo..</text>
</g>
<g >
<title>Parloop_Cells_wrap_slate_loopy_knl_0 (549,353 us, 4.13%)</title><rect x="248.0" y="183" width="48.8" height="15.0" fill="rgb(152.907224145551,118.955385115894,118.955385115894)" rx="2" ry="2" />
<text  x="251.03" y="193.5" >Parl..</text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.__init__ (10,889 us, 0.08%)</title><rect x="237.5" y="71" width="1.0" height="15.0" fill="rgb(134.217196554325,97.056566170458,134.217196554325)" rx="2" ry="2" />
<text  x="240.50" y="81.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.solve (10,713,956 us, 80.64%)</title><rect x="238.5" y="87" width="951.5" height="15.0" fill="rgb(127.692600631716,150.142526089704,150.142526089704)" rx="2" ry="2" />
<text  x="241.47" y="97.5" >firedrake.variational_solver.NonlinearVariationalSolver.solve</text>
</g>
<g >
<title>PCSetUp (3,944,030 us, 29.68%)</title><rect x="238.5" y="119" width="350.2" height="15.0" fill="rgb(146.420778301072,128.328244396498,146.420778301072)" rx="2" ry="2" />
<text  x="241.47" y="129.5" >PCSetUp</text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (2,027 us, 0.02%)</title><rect x="521.7" y="231" width="0.2" height="15.0" fill="rgb(141.76781235801,160.642449151022,141.76781235801)" rx="2" ry="2" />
<text  x="524.72" y="241.5" ></text>
</g>
<g >
<title>ParLoopExecute (5,739,677 us, 43.20%)</title><rect x="589.3" y="135" width="509.7" height="15.0" fill="rgb(155.619166639942,155.619166639942,146.462115255101)" rx="2" ry="2" />
<text  x="592.30" y="145.5" >ParLoopExecute</text>
</g>
<g >
<title>HybridInit (3,944,030 us, 29.68%)</title><rect x="238.5" y="135" width="350.2" height="15.0" fill="rgb(155.837772389329,155.837772389329,147.521512348286)" rx="2" ry="2" />
<text  x="241.47" y="145.5" >HybridInit</text>
</g>
<g >
<title>firedrake.__init__ (1,616,695 us, 12.17%)</title><rect x="91.5" y="71" width="143.6" height="15.0" fill="rgb(112.292658318223,146.149948452873,146.149948452873)" rx="2" ry="2" />
<text  x="94.51" y="81.5" >firedrake.__init__</text>
</g>
<g >
<title>firedrake.utility_meshes.SquareMesh (2,043 us, 0.02%)</title><rect x="235.6" y="71" width="0.1" height="15.0" fill="rgb(134.165898237857,134.165898237857,153.386948046037)" rx="2" ry="2" />
<text  x="238.55" y="81.5" ></text>
</g>
<g >
<title>HybridOperatorAssembly (645,157 us, 4.86%)</title><rect x="240.6" y="151" width="57.3" height="15.0" fill="rgb(139.327779506,139.327779506,154.386021839871)" rx="2" ry="2" />
<text  x="243.61" y="161.5" >Hybri..</text>
</g>
<g >
<title>firedrake.functionspace.VectorFunctionSpace (5,252 us, 0.04%)</title><rect x="235.1" y="71" width="0.5" height="15.0" fill="rgb(127.306103636044,162.996680803435,127.306103636044)" rx="2" ry="2" />
<text  x="238.09" y="81.5" ></text>
</g>
<g >
<title>VecCopy (1,745 us, 0.01%)</title><rect x="1189.8" y="103" width="0.2" height="15.0" fill="rgb(134.191190114798,96.9899246691708,134.191190114798)" rx="2" ry="2" />
<text  x="1192.85" y="113.5" ></text>
</g>
<g >
<title>firedrake.utility_meshes.RectangleMesh (2,043 us, 0.02%)</title><rect x="235.6" y="87" width="0.1" height="15.0" fill="rgb(150.472199522612,159.225455891668,150.472199522612)" rx="2" ry="2" />
<text  x="238.55" y="97.5" ></text>
</g>
<g >
<title>firedrake.assemble.allocate_matrix (2,513,830 us, 18.92%)</title><rect x="297.9" y="151" width="223.3" height="15.0" fill="rgb(113.902226017895,113.902226017895,149.464946971206)" rx="2" ry="2" />
<text  x="300.91" y="161.5" >firedrake.assemble.allocate..</text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (14,920 us, 0.11%)</title><rect x="90.0" y="103" width="1.3" height="15.0" fill="rgb(129.524212729826,162.63559327654,129.524212729826)" rx="2" ry="2" />
<text  x="93.02" y="113.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (5,252 us, 0.04%)</title><rect x="235.1" y="87" width="0.5" height="15.0" fill="rgb(148.295244334463,148.295244334463,110.969261005473)" rx="2" ry="2" />
<text  x="238.09" y="97.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (8,320 us, 0.06%)</title><rect x="521.2" y="167" width="0.7" height="15.0" fill="rgb(132.729989222834,162.113722684655,132.729989222834)" rx="2" ry="2" />
<text  x="524.17" y="177.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (3,349 us, 0.03%)</title><rect x="1189.2" y="167" width="0.3" height="15.0" fill="rgb(125.733543803793,149.63462246765,149.63462246765)" rx="2" ry="2" />
<text  x="1192.25" y="177.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (4,294 us, 0.03%)</title><rect x="521.5" y="199" width="0.4" height="15.0" fill="rgb(152.729256581373,117.590967123856,117.590967123856)" rx="2" ry="2" />
<text  x="524.52" y="209.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (6,176 us, 0.05%)</title><rect x="89.5" y="135" width="0.5" height="15.0" fill="rgb(140.552225338856,160.840335409954,140.552225338856)" rx="2" ry="2" />
<text  x="92.47" y="145.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (8,700 us, 0.07%)</title><rect x="239.8" y="199" width="0.8" height="15.0" fill="rgb(141.574146552277,160.673976142653,141.574146552277)" rx="2" ry="2" />
<text  x="242.84" y="209.5" ></text>
</g>
<g >
<title>SNESJacobianEval (3,389 us, 0.03%)</title><rect x="1189.5" y="119" width="0.3" height="15.0" fill="rgb(143.247455884593,160.40157694902,143.247455884593)" rx="2" ry="2" />
<text  x="1192.54" y="129.5" ></text>
</g>
<g >
<title>MatZeroEntries (3,900 us, 0.03%)</title><rect x="247.7" y="167" width="0.3" height="15.0" fill="rgb(153.02193395771,119.83482700911,119.83482700911)" rx="2" ry="2" />
<text  x="250.68" y="177.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_form1_cell_integral_otherwise (2,673,042 us, 20.12%)</title><rect x="861.6" y="151" width="237.4" height="15.0" fill="rgb(127.19657269726,150.013926254845,150.013926254845)" rx="2" ry="2" />
<text  x="864.65" y="161.5" >Parloop_Cells_wrap_form1_cel..</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (861,603 us, 6.48%)</title><rect x="13.0" y="135" width="76.5" height="15.0" fill="rgb(113.471408548072,146.455550364315,146.455550364315)" rx="2" ry="2" />
<text  x="15.95" y="145.5" >pyop2.g..</text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (6,220 us, 0.05%)</title><rect x="521.4" y="183" width="0.5" height="15.0" fill="rgb(146.113915718772,159.934943952758,146.113915718772)" rx="2" ry="2" />
<text  x="524.35" y="193.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (6,176 us, 0.05%)</title><rect x="89.5" y="151" width="0.5" height="15.0" fill="rgb(155.093976637023,135.720487550513,135.720487550513)" rx="2" ry="2" />
<text  x="92.47" y="161.5" ></text>
</g>
<g >
<title>CreateExtMesh (901,010 us, 6.78%)</title><rect x="10.0" y="71" width="80.0" height="15.0" fill="rgb(135.83746523102,152.254157652487,152.254157652487)" rx="2" ry="2" />
<text  x="13.00" y="81.5" >CreateEx..</text>
</g>
<g >
<title>Log_Event_form1_cell_integral_otherwise (43,213 us, 0.33%)</title><rect x="861.6" y="167" width="3.9" height="15.0" fill="rgb(149.241149070051,149.241149070051,115.553260877937)" rx="2" ry="2" />
<text  x="864.65" y="177.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (3,191 us, 0.02%)</title><rect x="297.6" y="183" width="0.3" height="15.0" fill="rgb(140.779459879784,113.872365941946,140.779459879784)" rx="2" ry="2" />
<text  x="300.62" y="193.5" ></text>
</g>
<g >
<title>VecCopy (1,600 us, 0.01%)</title><rect x="1189.7" y="135" width="0.1" height="15.0" fill="rgb(152.863985466628,118.623888577478,118.623888577478)" rx="2" ry="2" />
<text  x="1192.70" y="145.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalProblem.__init__ (9,752 us, 0.07%)</title><rect x="236.6" y="87" width="0.9" height="15.0" fill="rgb(152.776449438685,144.614651686629,152.776449438685)" rx="2" ry="2" />
<text  x="239.64" y="97.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.LinearVariationalProblem.__init__ (19,914 us, 0.15%)</title><rect x="235.7" y="71" width="1.8" height="15.0" fill="rgb(111.841926101711,146.033091952295,146.033091952295)" rx="2" ry="2" />
<text  x="238.74" y="81.5" ></text>
</g>
<g >
<title>firedrake.functionspace.MixedFunctionSpace (1,594 us, 0.01%)</title><rect x="239.7" y="167" width="0.1" height="15.0" fill="rgb(153.688892376322,124.948174885132,124.948174885132)" rx="2" ry="2" />
<text  x="242.69" y="177.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.local_to_global_map (5,362 us, 0.04%)</title><rect x="296.8" y="167" width="0.5" height="15.0" fill="rgb(109.9363706185,109.9363706185,148.697362055194)" rx="2" ry="2" />
<text  x="299.82" y="177.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (3,038,997 us, 22.87%)</title><rect x="591.8" y="167" width="269.8" height="15.0" fill="rgb(123.707515333525,163.582497503845,123.707515333525)" rx="2" ry="2" />
<text  x="594.75" y="177.5" >pyop2.global_kernel.GlobalKernel...</text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (6,176 us, 0.05%)</title><rect x="89.5" y="119" width="0.5" height="15.0" fill="rgb(142.084274288445,117.215952864141,142.084274288445)" rx="2" ry="2" />
<text  x="92.47" y="129.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (9,752 us, 0.07%)</title><rect x="236.6" y="103" width="0.9" height="15.0" fill="rgb(129.48911670528,162.641306582861,129.48911670528)" rx="2" ry="2" />
<text  x="239.64" y="113.5" ></text>
</g>
<g >
<title>firedrake.parloops.par_loop (672,643 us, 5.06%)</title><rect x="529.0" y="151" width="59.7" height="15.0" fill="rgb(143.992988256896,154.368552511047,154.368552511047)" rx="2" ry="2" />
<text  x="532.01" y="161.5" >fired..</text>
</g>
<g >
<title>CreateFunctionSpace (10,294 us, 0.08%)</title><rect x="239.7" y="151" width="0.9" height="15.0" fill="rgb(114.054776068854,146.606793795629,146.606793795629)" rx="2" ry="2" />
<text  x="242.69" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (1,594 us, 0.01%)</title><rect x="239.7" y="199" width="0.1" height="15.0" fill="rgb(141.058402577387,160.757934464146,141.058402577387)" rx="2" ry="2" />
<text  x="242.69" y="209.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (14,920 us, 0.11%)</title><rect x="90.0" y="119" width="1.3" height="15.0" fill="rgb(131.826492792773,162.260803498851,131.826492792773)" rx="2" ry="2" />
<text  x="93.02" y="129.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (14,920 us, 0.11%)</title><rect x="90.0" y="87" width="1.3" height="15.0" fill="rgb(133.804581837561,161.938789003188,133.804581837561)" rx="2" ry="2" />
<text  x="93.02" y="97.5" ></text>
</g>
<g >
<title>firedrake.extrusion_utils.make_extruded_coords (892,555 us, 6.72%)</title><rect x="10.2" y="87" width="79.3" height="15.0" fill="rgb(112.474027459601,146.196970082119,146.196970082119)" rx="2" ry="2" />
<text  x="13.20" y="97.5" >firedrak..</text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (8,700 us, 0.07%)</title><rect x="239.8" y="183" width="0.8" height="15.0" fill="rgb(139.106242090842,109.584745357782,139.106242090842)" rx="2" ry="2" />
<text  x="242.84" y="193.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.action (3,615 us, 0.03%)</title><rect x="237.9" y="119" width="0.3" height="15.0" fill="rgb(144.667000816981,160.170488239096,144.667000816981)" rx="2" ry="2" />
<text  x="240.92" y="129.5" ></text>
</g>
<g >
<title>MatAssemblyEnd (12,197 us, 0.09%)</title><rect x="485.0" y="167" width="1.1" height="15.0" fill="rgb(131.638822628804,131.638822628804,152.897836637833)" rx="2" ry="2" />
<text  x="488.01" y="177.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.action (10,162 us, 0.08%)</title><rect x="235.7" y="87" width="0.9" height="15.0" fill="rgb(127.138974107085,149.998993287022,149.998993287022)" rx="2" ry="2" />
<text  x="238.74" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (5,252 us, 0.04%)</title><rect x="235.1" y="119" width="0.5" height="15.0" fill="rgb(149.355420170702,159.407257181514,149.355420170702)" rx="2" ry="2" />
<text  x="238.09" y="129.5" ></text>
</g>
<g >
<title>SNESFunctionEval (6,764,792 us, 50.91%)</title><rect x="588.7" y="119" width="600.8" height="15.0" fill="rgb(150.635569651299,150.635569651299,122.310837540911)" rx="2" ry="2" />
<text  x="591.75" y="129.5" >SNESFunctionEval</text>
</g>
<g >
<title>Parloop_Cells_wrap_pyop2_kernel_uniform_extrusion (861,603 us, 6.48%)</title><rect x="13.0" y="119" width="76.5" height="15.0" fill="rgb(133.446095915888,133.446095915888,153.247631467591)" rx="2" ry="2" />
<text  x="15.95" y="129.5" >Parloop..</text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (2,027 us, 0.02%)</title><rect x="521.7" y="215" width="0.2" height="15.0" fill="rgb(154.538878655941,131.464736362216,131.464736362216)" rx="2" ry="2" />
<text  x="524.72" y="225.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (14,920 us, 0.11%)</title><rect x="90.0" y="71" width="1.3" height="15.0" fill="rgb(136.625111479725,103.226848166796,136.625111479725)" rx="2" ry="2" />
<text  x="93.02" y="81.5" ></text>
</g>
<g >
<title>perfsolve (10,713,956 us, 80.64%)</title><rect x="238.5" y="71" width="951.5" height="15.0" fill="rgb(123.102523599955,148.952506118507,148.952506118507)" rx="2" ry="2" />
<text  x="241.47" y="81.5" >perfsolve</text>
</g>
<g >
<title>CreateFunctionSpace (1,594 us, 0.01%)</title><rect x="239.7" y="183" width="0.1" height="15.0" fill="rgb(147.652726047214,147.652726047214,107.855518536497)" rx="2" ry="2" />
<text  x="242.69" y="193.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (5,252 us, 0.04%)</title><rect x="235.1" y="135" width="0.5" height="15.0" fill="rgb(142.534594108301,153.990450324374,153.990450324374)" rx="2" ry="2" />
<text  x="238.09" y="145.5" ></text>
</g>
<g >
<title>firedrake.interpolation.make_interpolator (80,014 us, 0.60%)</title><rect x="521.9" y="151" width="7.1" height="15.0" fill="rgb(156.012633285334,142.763521854224,142.763521854224)" rx="2" ry="2" />
<text  x="524.90" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (1,594 us, 0.01%)</title><rect x="239.7" y="215" width="0.1" height="15.0" fill="rgb(150.221519658485,150.221519658485,120.304287575736)" rx="2" ry="2" />
<text  x="242.69" y="225.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (5,636 us, 0.04%)</title><rect x="1189.0" y="151" width="0.5" height="15.0" fill="rgb(150.831924168845,150.831924168845,123.262401741325)" rx="2" ry="2" />
<text  x="1192.04" y="161.5" ></text>
</g>
<g >
<title>CreateMesh (1,808 us, 0.01%)</title><rect x="91.3" y="71" width="0.2" height="15.0" fill="rgb(152.55741229945,116.273494295781,116.273494295781)" rx="2" ry="2" />
<text  x="94.35" y="81.5" ></text>
</g>
<g >
<title>ParLoopExecute (861,603 us, 6.48%)</title><rect x="13.0" y="103" width="76.5" height="15.0" fill="rgb(145.368681616585,154.725213752448,154.725213752448)" rx="2" ry="2" />
<text  x="15.95" y="113.5" >ParLoop..</text>
</g>
<g >
<title>firedrake.matrix_free.operators.ImplicitMatrixContext.__init__ (6,187 us, 0.05%)</title><rect x="237.9" y="103" width="0.6" height="15.0" fill="rgb(133.414488183368,94.9996259698811,133.414488183368)" rx="2" ry="2" />
<text  x="240.92" y="113.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (8,320 us, 0.06%)</title><rect x="521.2" y="151" width="0.7" height="15.0" fill="rgb(118.168202788074,147.673237759871,147.673237759871)" rx="2" ry="2" />
<text  x="524.17" y="161.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (2,572 us, 0.02%)</title><rect x="238.2" y="119" width="0.3" height="15.0" fill="rgb(153.575103627512,153.575103627512,136.556271425637)" rx="2" ry="2" />
<text  x="241.24" y="129.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (1,594 us, 0.01%)</title><rect x="239.7" y="231" width="0.1" height="15.0" fill="rgb(146.024247124,127.31213325525,146.024247124)" rx="2" ry="2" />
<text  x="242.69" y="241.5" ></text>
</g>
<g >
<title>firedrake.slate.slac.optimise.optimise (6,879 us, 0.05%)</title><rect x="297.3" y="167" width="0.6" height="15.0" fill="rgb(151.099660586692,151.099660586692,124.559893612428)" rx="2" ry="2" />
<text  x="300.30" y="177.5" ></text>
</g>
<g >
<title>firedrake (13,286,487 us, 100.00%)</title><rect x="10.0" y="55" width="1180.0" height="15.0" fill="rgb(151.243643226593,151.243643226593,125.257655636566)" rx="2" ry="2" />
<text  x="13.00" y="65.5" >firedrake</text>
</g>
<g >
<title>SNESSolve (10,712,211 us, 80.62%)</title><rect x="238.5" y="103" width="951.3" height="15.0" fill="rgb(130.558764260256,162.467177911121,130.558764260256)" rx="2" ry="2" />
<text  x="241.47" y="113.5" >SNESSolve</text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (5,252 us, 0.04%)</title><rect x="235.1" y="103" width="0.5" height="15.0" fill="rgb(114.093625955272,146.616865988404,146.616865988404)" rx="2" ry="2" />
<text  x="238.09" y="113.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (667,496 us, 5.02%)</title><rect x="529.5" y="183" width="59.2" height="15.0" fill="rgb(136.028750434472,101.698672988336,136.028750434472)" rx="2" ry="2" />
<text  x="532.47" y="193.5" >Parlo..</text>
</g>
<g >
<title>ParLoopExecute (549,353 us, 4.13%)</title><rect x="248.0" y="167" width="48.8" height="15.0" fill="rgb(126.26092733937,163.166825781963,126.26092733937)" rx="2" ry="2" />
<text  x="251.03" y="177.5" >ParL..</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (549,353 us, 4.13%)</title><rect x="248.0" y="199" width="48.8" height="15.0" fill="rgb(152.332053908986,143.475888141776,152.332053908986)" rx="2" ry="2" />
<text  x="251.03" y="209.5" >pyop..</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (2,629,829 us, 19.79%)</title><rect x="865.5" y="167" width="233.5" height="15.0" fill="rgb(153.29607122703,121.936546073897,121.936546073897)" rx="2" ry="2" />
<text  x="868.49" y="177.5" >pyop2.global_kernel.GlobalKe..</text>
</g>
<g >
<title>CreateFunctionSpace (6,176 us, 0.05%)</title><rect x="89.5" y="103" width="0.5" height="15.0" fill="rgb(152.943171287839,152.943171287839,133.493830087219)" rx="2" ry="2" />
<text  x="92.47" y="113.5" ></text>
</g>
<g >
<title>firedrake.functionspace.VectorFunctionSpace (6,176 us, 0.05%)</title><rect x="89.5" y="87" width="0.5" height="15.0" fill="rgb(134.130391719741,151.811583038451,151.811583038451)" rx="2" ry="2" />
<text  x="92.47" y="97.5" ></text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (1,018,962 us, 7.67%)</title><rect x="1099.0" y="135" width="90.5" height="15.0" fill="rgb(113.898092267227,113.898092267227,149.464146890431)" rx="2" ry="2" />
<text  x="1102.05" y="145.5" >firedrake..</text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (2,027 us, 0.02%)</title><rect x="521.7" y="247" width="0.2" height="15.0" fill="rgb(150.767791484959,159.17733626989,150.767791484959)" rx="2" ry="2" />
<text  x="524.72" y="257.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (8,700 us, 0.07%)</title><rect x="239.8" y="167" width="0.8" height="15.0" fill="rgb(131.096275012038,131.096275012038,152.792827421685)" rx="2" ry="2" />
<text  x="242.84" y="177.5" ></text>
</g>
</g>
</svg>
