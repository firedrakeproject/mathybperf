<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="299" onload="init(evt)" viewBox="0 0 1200 299" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:13px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:18px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 13 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (1 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="299.0" fill="url(#background)"  />
<text id="title" x="600.00" y="26" >Firedrake example</text>
<text id="details" x="10.00" y="281" > </text>
<text id="unzoom" x="10.00" y="26" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="26" >Search</text>
<text id="ignorecase" x="1174.00" y="26" >ic</text>
<text id="matched" x="1090.00" y="281" > </text>
<g id="frames">
<g >
<title>firedrake.ufl_expr.action (3,854 us, 0.07%)</title><rect x="431.6" y="119" width="0.8" height="15.0" fill="rgb(148.921936818539,148.921936818539,114.006309197534)" rx="2" ry="2" />
<text  x="434.56" y="129.5" ></text>
</g>
<g >
<title>firedrake.functionspace.make_scalar_element (1,129 us, 0.02%)</title><rect x="1139.3" y="215" width="0.2" height="15.0" fill="rgb(129.616462848514,129.616462848514,152.506412164229)" rx="2" ry="2" />
<text  x="1142.29" y="225.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.local_to_global_map (1,893 us, 0.04%)</title><rect x="556.2" y="167" width="0.5" height="15.0" fill="rgb(144.94522438871,160.125196029745,144.94522438871)" rx="2" ry="2" />
<text  x="559.25" y="177.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.__init__ (11,599 us, 0.23%)</title><rect x="430.4" y="71" width="2.6" height="15.0" fill="rgb(148.573710323977,148.573710323977,112.318750031579)" rx="2" ry="2" />
<text  x="433.39" y="81.5" ></text>
</g>
<g >
<title>firedrake.extrusion_utils.make_extruded_coords (70,861 us, 1.38%)</title><rect x="10.0" y="87" width="16.2" height="15.0" fill="rgb(148.773941360781,159.501916522664,148.773941360781)" rx="2" ry="2" />
<text  x="13.00" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (14,952 us, 0.29%)</title><rect x="28.4" y="119" width="3.4" height="15.0" fill="rgb(127.33414362678,150.049592792128,150.049592792128)" rx="2" ry="2" />
<text  x="31.42" y="129.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (1,749 us, 0.03%)</title><rect x="435.8" y="199" width="0.4" height="15.0" fill="rgb(147.834511935316,147.834511935316,108.736480917301)" rx="2" ry="2" />
<text  x="438.83" y="209.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (497,280 us, 9.65%)</title><rect x="442.4" y="199" width="113.8" height="15.0" fill="rgb(151.963285768644,151.963285768644,128.74515410958)" rx="2" ry="2" />
<text  x="445.36" y="209.5" >pyop2.global..</text>
</g>
<g >
<title>SNESFunctionEval (113,161 us, 2.20%)</title><rect x="1163.4" y="119" width="25.9" height="15.0" fill="rgb(152.208983272349,113.602205088008,113.602205088008)" rx="2" ry="2" />
<text  x="1166.39" y="129.5" >S..</text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (8,360 us, 0.16%)</title><rect x="436.2" y="183" width="1.9" height="15.0" fill="rgb(130.050020531453,150.753709026673,150.753709026673)" rx="2" ry="2" />
<text  x="439.23" y="193.5" ></text>
</g>
<g >
<title>firedrake.function.Function.split (778 us, 0.02%)</title><rect x="430.2" y="119" width="0.2" height="15.0" fill="rgb(127.070555813433,149.98125521089,149.98125521089)" rx="2" ry="2" />
<text  x="433.21" y="129.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.solve (3,305,145 us, 64.15%)</title><rect x="433.0" y="87" width="757.0" height="15.0" fill="rgb(133.325053429257,162.01685176733,133.325053429257)" rx="2" ry="2" />
<text  x="436.04" y="97.5" >firedrake.variational_solver.NonlinearVariationalSolver.solve</text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (5,373 us, 0.10%)</title><rect x="423.9" y="135" width="1.2" height="15.0" fill="rgb(148.560644550566,148.560644550566,112.255431283512)" rx="2" ry="2" />
<text  x="426.86" y="145.5" ></text>
</g>
<g >
<title>firedrake (5,152,301 us, 100.00%)</title><rect x="10.0" y="55" width="1180.0" height="15.0" fill="rgb(131.893054650321,162.249967847622,131.893054650321)" rx="2" ry="2" />
<text  x="13.00" y="65.5" >firedrake</text>
</g>
<g >
<title>CreateFunctionSpace (6,915 us, 0.13%)</title><rect x="26.2" y="103" width="1.6" height="15.0" fill="rgb(107.15354852749,144.817586655275,144.817586655275)" rx="2" ry="2" />
<text  x="29.23" y="113.5" ></text>
</g>
<g >
<title>SNESJacobianEval (1,388 us, 0.03%)</title><rect x="1189.3" y="119" width="0.3" height="15.0" fill="rgb(122.404396658651,122.404396658651,151.110528385545)" rx="2" ry="2" />
<text  x="1192.31" y="129.5" ></text>
</g>
<g >
<title>HybridOperatorAssembly (517,570 us, 10.05%)</title><rect x="438.1" y="151" width="118.6" height="15.0" fill="rgb(108.583536892278,108.583536892278,148.435523269473)" rx="2" ry="2" />
<text  x="441.14" y="161.5" >HybridOperato..</text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (8,360 us, 0.16%)</title><rect x="436.2" y="167" width="1.9" height="15.0" fill="rgb(124.634980067254,149.349809647066,149.349809647066)" rx="2" ry="2" />
<text  x="439.23" y="177.5" ></text>
</g>
<g >
<title>firedrake.functionspace.VectorFunctionSpace (5,373 us, 0.10%)</title><rect x="423.9" y="71" width="1.2" height="15.0" fill="rgb(153.8102744787,153.8102744787,137.695945550622)" rx="2" ry="2" />
<text  x="426.86" y="81.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (647 us, 0.01%)</title><rect x="1189.2" y="215" width="0.1" height="15.0" fill="rgb(154.08760597066,128.00497910839,128.00497910839)" rx="2" ry="2" />
<text  x="1192.16" y="225.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (1,749 us, 0.03%)</title><rect x="435.8" y="215" width="0.4" height="15.0" fill="rgb(135.969161823126,135.969161823126,153.735966804476)" rx="2" ry="2" />
<text  x="438.83" y="225.5" ></text>
</g>
<g >
<title>firedrake.utility_meshes.SquareMesh (2,084 us, 0.04%)</title><rect x="425.1" y="71" width="0.5" height="15.0" fill="rgb(123.978018746392,123.978018746392,151.415100402527)" rx="2" ry="2" />
<text  x="428.09" y="81.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.derivative (778 us, 0.02%)</title><rect x="430.2" y="103" width="0.2" height="15.0" fill="rgb(138.755243817835,153.010618767587,153.010618767587)" rx="2" ry="2" />
<text  x="433.21" y="113.5" ></text>
</g>
<g >
<title>firedrake.interpolation.make_interpolator (92,429 us, 1.79%)</title><rect x="1140.5" y="151" width="21.1" height="15.0" fill="rgb(140.384939451036,140.384939451036,154.590633442136)" rx="2" ry="2" />
<text  x="1143.48" y="161.5" ></text>
</g>
<g >
<title>CreateMesh (831 us, 0.02%)</title><rect x="425.2" y="103" width="0.2" height="15.0" fill="rgb(152.131691581096,113.009635455073,113.009635455073)" rx="2" ry="2" />
<text  x="428.24" y="113.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (4,851 us, 0.09%)</title><rect x="1188.2" y="151" width="1.1" height="15.0" fill="rgb(151.751176405989,141.987389540346,151.751176405989)" rx="2" ry="2" />
<text  x="1191.19" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspace.MixedFunctionSpace (2,822 us, 0.05%)</title><rect x="435.6" y="167" width="0.6" height="15.0" fill="rgb(109.989940366596,109.989940366596,148.707730393535)" rx="2" ry="2" />
<text  x="438.58" y="177.5" ></text>
</g>
<g >
<title>CreateSparsity (2,147,412 us, 41.68%)</title><rect x="556.9" y="167" width="491.8" height="15.0" fill="rgb(152.232374214022,113.781535640836,113.781535640836)" rx="2" ry="2" />
<text  x="559.91" y="177.5" >CreateSparsity</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (1,357 us, 0.03%)</title><rect x="1163.1" y="199" width="0.3" height="15.0" fill="rgb(151.328006122362,151.328006122362,125.666491208369)" rx="2" ry="2" />
<text  x="1166.08" y="209.5" ></text>
</g>
<g >
<title>CreateExtMesh (79,436 us, 1.54%)</title><rect x="10.0" y="71" width="18.2" height="15.0" fill="rgb(150.690770304357,150.690770304357,122.57834839804)" rx="2" ry="2" />
<text  x="13.00" y="81.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (9,409 us, 0.18%)</title><rect x="1138.1" y="151" width="2.2" height="15.0" fill="rgb(124.75533760108,149.381013452132,149.381013452132)" rx="2" ry="2" />
<text  x="1141.12" y="161.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (3,173 us, 0.06%)</title><rect x="1162.7" y="183" width="0.7" height="15.0" fill="rgb(150.413790520973,150.413790520973,121.236061755483)" rx="2" ry="2" />
<text  x="1165.66" y="193.5" ></text>
</g>
<g >
<title>firedrake.mesh.MeshTopology._facets (2,296 us, 0.04%)</title><rect x="424.6" y="151" width="0.5" height="15.0" fill="rgb(134.74295280308,161.786030939033,134.74295280308)" rx="2" ry="2" />
<text  x="427.56" y="161.5" ></text>
</g>
<g >
<title>firedrake.parloops.par_loop (7,596 us, 0.15%)</title><rect x="1161.6" y="151" width="1.8" height="15.0" fill="rgb(146.965328950397,146.965328950397,155.864257216206)" rx="2" ry="2" />
<text  x="1164.65" y="161.5" ></text>
</g>
<g >
<title>Log_Event_form0_cell_integral_otherwise (25,990 us, 0.50%)</title><rect x="1165.1" y="167" width="6.0" height="15.0" fill="rgb(133.892381843313,151.749876774192,151.749876774192)" rx="2" ry="2" />
<text  x="1168.13" y="177.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.action (10,282 us, 0.20%)</title><rect x="425.6" y="87" width="2.3" height="15.0" fill="rgb(146.78625331702,159.825493646066,146.78625331702)" rx="2" ry="2" />
<text  x="428.57" y="97.5" ></text>
</g>
<g >
<title>MatZeroEntries (3,527 us, 0.07%)</title><rect x="441.5" y="167" width="0.9" height="15.0" fill="rgb(126.971496806338,126.971496806338,151.99448325284)" rx="2" ry="2" />
<text  x="444.55" y="177.5" ></text>
</g>
<g >
<title>CreateMesh (1,848 us, 0.04%)</title><rect x="31.8" y="71" width="0.5" height="15.0" fill="rgb(153.25627575709,153.25627575709,135.01118251513)" rx="2" ry="2" />
<text  x="34.85" y="81.5" ></text>
</g>
<g >
<title>all (5,152,301 us, 100%)</title><rect x="10.0" y="39" width="1180.0" height="15.0" fill="rgb(152.49054131851,115.76081677524,115.76081677524)" rx="2" ry="2" />
<text  x="13.00" y="49.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (1,939 us, 0.04%)</title><rect x="1171.1" y="167" width="0.4" height="15.0" fill="rgb(135.641159650685,135.641159650685,153.672482513036)" rx="2" ry="2" />
<text  x="1174.08" y="177.5" ></text>
</g>
<g >
<title>firedrake.functionspace.MixedFunctionSpace (1,238 us, 0.02%)</title><rect x="423.6" y="71" width="0.3" height="15.0" fill="rgb(137.377161799386,152.653338244285,152.653338244285)" rx="2" ry="2" />
<text  x="426.58" y="81.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (5,373 us, 0.10%)</title><rect x="423.9" y="119" width="1.2" height="15.0" fill="rgb(123.928827106493,163.54647000592,123.928827106493)" rx="2" ry="2" />
<text  x="426.86" y="129.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (7,028 us, 0.14%)</title><rect x="1138.7" y="183" width="1.6" height="15.0" fill="rgb(139.84768126316,139.84768126316,154.486647986418)" rx="2" ry="2" />
<text  x="1141.67" y="193.5" ></text>
</g>
<g >
<title>ParLoopExecute (38,948 us, 0.76%)</title><rect x="17.3" y="103" width="8.9" height="15.0" fill="rgb(111.329011315686,145.900114044807,145.900114044807)" rx="2" ry="2" />
<text  x="20.31" y="113.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (5,373 us, 0.10%)</title><rect x="423.9" y="87" width="1.2" height="15.0" fill="rgb(155.714007614187,140.474058375437,140.474058375437)" rx="2" ry="2" />
<text  x="426.86" y="97.5" ></text>
</g>
<g >
<title>PCSetUp (3,188,953 us, 61.89%)</title><rect x="433.0" y="119" width="730.4" height="15.0" fill="rgb(143.304433035568,120.342609653644,143.304433035568)" rx="2" ry="2" />
<text  x="436.04" y="129.5" >PCSetUp</text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (9,409 us, 0.18%)</title><rect x="1138.1" y="167" width="2.2" height="15.0" fill="rgb(156.580338752929,147.115930439119,147.115930439119)" rx="2" ry="2" />
<text  x="1141.12" y="177.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.WithGeometry.split (694 us, 0.01%)</title><rect x="1140.1" y="199" width="0.2" height="15.0" fill="rgb(155.919794910742,155.919794910742,147.919006105901)" rx="2" ry="2" />
<text  x="1143.12" y="209.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (15,956 us, 0.31%)</title><rect x="28.2" y="71" width="3.6" height="15.0" fill="rgb(142.888844779665,142.888844779665,155.075260279935)" rx="2" ry="2" />
<text  x="31.19" y="81.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (1,536 us, 0.03%)</title><rect x="1180.9" y="167" width="0.4" height="15.0" fill="rgb(120.816733075011,148.359893760188,148.359893760188)" rx="2" ry="2" />
<text  x="1183.90" y="177.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (14,952 us, 0.29%)</title><rect x="28.4" y="87" width="3.4" height="15.0" fill="rgb(117.993145660452,147.627852578636,147.627852578636)" rx="2" ry="2" />
<text  x="31.42" y="97.5" ></text>
</g>
<g >
<title>firedrake.matrix_free.operators.ImplicitMatrixContext.__init__ (6,458 us, 0.13%)</title><rect x="431.6" y="103" width="1.4" height="15.0" fill="rgb(144.38065785369,144.38065785369,155.363998294263)" rx="2" ry="2" />
<text  x="434.56" y="113.5" ></text>
</g>
<g >
<title>perfsolve (3,305,145 us, 64.15%)</title><rect x="433.0" y="71" width="757.0" height="15.0" fill="rgb(132.327682295535,162.179214510029,132.327682295535)" rx="2" ry="2" />
<text  x="436.04" y="81.5" >perfsolve</text>
</g>
<g >
<title>SNESSolve (3,303,502 us, 64.12%)</title><rect x="433.0" y="103" width="756.6" height="15.0" fill="rgb(149.891946382002,149.891946382002,118.707124774318)" rx="2" ry="2" />
<text  x="436.04" y="113.5" >SNESSolve</text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (14,952 us, 0.29%)</title><rect x="28.4" y="103" width="3.4" height="15.0" fill="rgb(151.011013502902,159.1377419879,151.011013502902)" rx="2" ry="2" />
<text  x="31.42" y="113.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_slate_loopy_knl_0 (497,280 us, 9.65%)</title><rect x="442.4" y="183" width="113.8" height="15.0" fill="rgb(131.755594190421,151.195894790109,151.195894790109)" rx="2" ry="2" />
<text  x="445.36" y="193.5" >Parloop_Cell..</text>
</g>
<g >
<title>MatZeroInitial (379,777 us, 7.37%)</title><rect x="1051.1" y="167" width="87.0" height="15.0" fill="rgb(141.26946284955,141.26946284955,154.761831519268)" rx="2" ry="2" />
<text  x="1054.15" y="177.5" >MatZeroIn..</text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (1,944 us, 0.04%)</title><rect x="1139.7" y="231" width="0.4" height="15.0" fill="rgb(130.38532827732,162.495411675785,130.38532827732)" rx="2" ry="2" />
<text  x="1142.68" y="241.5" ></text>
</g>
<g >
<title>firedrake.assemble.allocate_matrix (2,538,795 us, 49.27%)</title><rect x="556.7" y="151" width="581.4" height="15.0" fill="rgb(130.196643066131,162.526127872955,130.196643066131)" rx="2" ry="2" />
<text  x="559.68" y="161.5" >firedrake.assemble.allocate_matrix</text>
</g>
<g >
<title>CreateFunctionSpace (11,182 us, 0.22%)</title><rect x="435.6" y="151" width="2.5" height="15.0" fill="rgb(148.610383638912,148.610383638912,112.496474557803)" rx="2" ry="2" />
<text  x="438.58" y="161.5" ></text>
</g>
<g >
<title>firedrake.mesh._from_cell_list (578 us, 0.01%)</title><rect x="425.4" y="103" width="0.2" height="15.0" fill="rgb(129.241341149003,150.544051409001,150.544051409001)" rx="2" ry="2" />
<text  x="428.43" y="113.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_pyop2_kernel_uniform_extrusion (38,948 us, 0.76%)</title><rect x="17.3" y="119" width="8.9" height="15.0" fill="rgb(154.629896933823,132.162543159309,132.162543159309)" rx="2" ry="2" />
<text  x="20.31" y="129.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (38,363 us, 0.74%)</title><rect x="17.4" y="135" width="8.8" height="15.0" fill="rgb(124.138589550254,149.221115809325,149.221115809325)" rx="2" ry="2" />
<text  x="20.44" y="145.5" ></text>
</g>
<g >
<title>firedrake.utility_meshes.RectangleMesh (2,084 us, 0.04%)</title><rect x="425.1" y="87" width="0.5" height="15.0" fill="rgb(133.327894097177,151.603528099268,151.603528099268)" rx="2" ry="2" />
<text  x="428.09" y="97.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (2,533 us, 0.05%)</title><rect x="1188.7" y="167" width="0.6" height="15.0" fill="rgb(105.334736505713,144.346042797778,144.346042797778)" rx="2" ry="2" />
<text  x="1191.73" y="177.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_form0_cell_integral_otherwise (29,345 us, 0.57%)</title><rect x="1164.8" y="151" width="6.7" height="15.0" fill="rgb(114.469139984221,114.469139984221,149.57467225501)" rx="2" ry="2" />
<text  x="1167.81" y="161.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (5,048 us, 0.10%)</title><rect x="1139.0" y="199" width="1.1" height="15.0" fill="rgb(148.331791444729,148.331791444729,111.146373924457)" rx="2" ry="2" />
<text  x="1141.96" y="209.5" ></text>
</g>
<g >
<title>ParLoopExecute (497,280 us, 9.65%)</title><rect x="442.4" y="167" width="113.8" height="15.0" fill="rgb(120.818896962973,148.360454768178,148.360454768178)" rx="2" ry="2" />
<text  x="445.36" y="177.5" >ParLoopExecute</text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (6,915 us, 0.13%)</title><rect x="26.2" y="151" width="1.6" height="15.0" fill="rgb(154.709803192238,154.709803192238,142.055200085462)" rx="2" ry="2" />
<text  x="29.23" y="161.5" ></text>
</g>
<g >
<title>firedrake.mesh._Facets.__init__ (676 us, 0.01%)</title><rect x="424.9" y="167" width="0.2" height="15.0" fill="rgb(153.168099885869,153.168099885869,134.583868677673)" rx="2" ry="2" />
<text  x="427.93" y="177.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (1,749 us, 0.03%)</title><rect x="435.8" y="231" width="0.4" height="15.0" fill="rgb(133.325743583341,151.602970558644,151.602970558644)" rx="2" ry="2" />
<text  x="438.83" y="241.5" ></text>
</g>
<g >
<title>firedrake.function.Function.__init__ (881 us, 0.02%)</title><rect x="1140.3" y="151" width="0.2" height="15.0" fill="rgb(144.776897271736,144.776897271736,155.44068979453)" rx="2" ry="2" />
<text  x="1143.28" y="161.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (9,985 us, 0.19%)</title><rect x="427.9" y="103" width="2.3" height="15.0" fill="rgb(154.853076702142,133.873588049758,133.873588049758)" rx="2" ry="2" />
<text  x="430.92" y="113.5" ></text>
</g>
<g >
<title>firedrake.functionspace.VectorFunctionSpace (6,915 us, 0.13%)</title><rect x="26.2" y="87" width="1.6" height="15.0" fill="rgb(150.480102906754,150.480102906754,121.557421778886)" rx="2" ry="2" />
<text  x="29.23" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (5,373 us, 0.10%)</title><rect x="423.9" y="103" width="1.2" height="15.0" fill="rgb(130.329808693191,162.50444974762,130.329808693191)" rx="2" ry="2" />
<text  x="426.86" y="113.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (647 us, 0.01%)</title><rect x="1189.2" y="183" width="0.1" height="15.0" fill="rgb(111.205844288039,145.868181852454,145.868181852454)" rx="2" ry="2" />
<text  x="1192.16" y="193.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (2,604 us, 0.05%)</title><rect x="432.4" y="119" width="0.6" height="15.0" fill="rgb(153.555375242799,153.555375242799,136.460664638179)" rx="2" ry="2" />
<text  x="435.45" y="129.5" ></text>
</g>
<g >
<title>firedrake.__init__ (1,707,676 us, 33.14%)</title><rect x="32.5" y="71" width="391.1" height="15.0" fill="rgb(151.543613909229,141.455510642398,151.543613909229)" rx="2" ry="2" />
<text  x="35.48" y="81.5" >firedrake.__init__</text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (6,915 us, 0.13%)</title><rect x="26.2" y="135" width="1.6" height="15.0" fill="rgb(112.04606759845,146.086017525524,146.086017525524)" rx="2" ry="2" />
<text  x="29.23" y="145.5" ></text>
</g>
<g >
<title>Mesh: numbering (778 us, 0.02%)</title><rect x="32.1" y="87" width="0.2" height="15.0" fill="rgb(128.588494423076,150.374794850427,150.374794850427)" rx="2" ry="2" />
<text  x="35.09" y="97.5" ></text>
</g>
<g >
<title>firedrake.mesh.make_mesh_from_coordinates (947 us, 0.02%)</title><rect x="28.0" y="87" width="0.2" height="15.0" fill="rgb(125.078797702616,163.359265490272,125.078797702616)" rx="2" ry="2" />
<text  x="30.98" y="97.5" ></text>
</g>
<g >
<title>ParLoopExecute (72,400 us, 1.41%)</title><rect x="1164.7" y="135" width="16.6" height="15.0" fill="rgb(147.508673531429,147.508673531429,155.969420683502)" rx="2" ry="2" />
<text  x="1167.67" y="145.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (8,360 us, 0.16%)</title><rect x="436.2" y="199" width="1.9" height="15.0" fill="rgb(138.816997150202,161.122814417409,138.816997150202)" rx="2" ry="2" />
<text  x="439.23" y="209.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_form1_cell_integral_otherwise (42,470 us, 0.82%)</title><rect x="1171.5" y="151" width="9.8" height="15.0" fill="rgb(130.990671447681,162.39686743875,130.990671447681)" rx="2" ry="2" />
<text  x="1174.53" y="161.5" ></text>
</g>
<g >
<title>firedrake.assemble.allocate_matrix (6,458 us, 0.13%)</title><rect x="431.6" y="87" width="1.4" height="15.0" fill="rgb(150.847150379523,150.847150379523,123.336190300768)" rx="2" ry="2" />
<text  x="434.56" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (1,944 us, 0.04%)</title><rect x="1139.7" y="247" width="0.4" height="15.0" fill="rgb(151.909193356462,151.909193356462,128.483013958241)" rx="2" ry="2" />
<text  x="1142.68" y="257.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (1,749 us, 0.03%)</title><rect x="435.8" y="183" width="0.4" height="15.0" fill="rgb(153.971911877823,153.971911877823,138.479265254065)" rx="2" ry="2" />
<text  x="438.83" y="193.5" ></text>
</g>
<g >
<title>firedrake.mesh.ExtrudedMeshTopology.__init__ (713 us, 0.01%)</title><rect x="27.8" y="87" width="0.2" height="15.0" fill="rgb(141.355410532214,141.355410532214,154.778466554622)" rx="2" ry="2" />
<text  x="30.81" y="97.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.LinearVariationalProblem.__init__ (21,045 us, 0.41%)</title><rect x="425.6" y="71" width="4.8" height="15.0" fill="rgb(152.444651386386,152.444651386386,131.07792594941)" rx="2" ry="2" />
<text  x="428.57" y="81.5" ></text>
</g>
<g >
<title>VecCopy (1,643 us, 0.03%)</title><rect x="1189.6" y="103" width="0.4" height="15.0" fill="rgb(150.326134246361,159.249233959895,150.326134246361)" rx="2" ry="2" />
<text  x="1192.62" y="113.5" ></text>
</g>
<g >
<title>Log_Event_form1_cell_integral_otherwise (40,110 us, 0.78%)</title><rect x="1171.7" y="167" width="9.2" height="15.0" fill="rgb(137.812783286616,152.766277148382,152.766277148382)" rx="2" ry="2" />
<text  x="1174.71" y="177.5" ></text>
</g>
<g >
<title>MatAssemblyEnd (10,616 us, 0.21%)</title><rect x="1048.7" y="167" width="2.4" height="15.0" fill="rgb(118.073257410408,118.073257410408,150.272243369756)" rx="2" ry="2" />
<text  x="1051.72" y="177.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (2,517 us, 0.05%)</title><rect x="1139.5" y="215" width="0.6" height="15.0" fill="rgb(117.79822725854,147.57731817814,147.57731817814)" rx="2" ry="2" />
<text  x="1142.54" y="225.5" ></text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (35,163 us, 0.68%)</title><rect x="1181.3" y="135" width="8.0" height="15.0" fill="rgb(154.438607208235,154.438607208235,140.740942624525)" rx="2" ry="2" />
<text  x="1184.25" y="145.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (647 us, 0.01%)</title><rect x="1189.2" y="199" width="0.1" height="15.0" fill="rgb(133.673826436782,133.673826436782,153.291708342603)" rx="2" ry="2" />
<text  x="1192.16" y="209.5" ></text>
</g>
<g >
<title>HybridInit (3,188,953 us, 61.89%)</title><rect x="433.0" y="135" width="730.4" height="15.0" fill="rgb(132.148621737881,162.208363903136,132.148621737881)" rx="2" ry="2" />
<text  x="436.04" y="145.5" >HybridInit</text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (6,915 us, 0.13%)</title><rect x="26.2" y="119" width="1.6" height="15.0" fill="rgb(151.7324422007,151.7324422007,127.62645066493)" rx="2" ry="2" />
<text  x="29.23" y="129.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalProblem.__init__ (10,763 us, 0.21%)</title><rect x="427.9" y="87" width="2.5" height="15.0" fill="rgb(152.70318971327,117.391121135072,117.391121135072)" rx="2" ry="2" />
<text  x="430.92" y="97.5" ></text>
</g>
<g >
<title>ParLoopExecute (3,173 us, 0.06%)</title><rect x="1162.7" y="167" width="0.7" height="15.0" fill="rgb(150.274818143623,150.274818143623,120.562580234481)" rx="2" ry="2" />
<text  x="1165.66" y="177.5" ></text>
</g>
<g >
<title>PetscBarrier (901 us, 0.02%)</title><rect x="32.3" y="71" width="0.2" height="15.0" fill="rgb(133.908013684819,133.908013684819,153.337034906739)" rx="2" ry="2" />
<text  x="35.27" y="81.5" ></text>
</g>
</g>
</svg>
