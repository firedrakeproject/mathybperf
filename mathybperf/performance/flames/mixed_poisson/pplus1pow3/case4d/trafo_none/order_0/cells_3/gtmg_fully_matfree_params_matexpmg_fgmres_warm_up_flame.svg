<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="299" onload="init(evt)" viewBox="0 0 1200 299" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:13px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:18px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 13 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (1 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="299.0" fill="url(#background)"  />
<text id="title" x="600.00" y="26" >Firedrake example</text>
<text id="details" x="10.00" y="281" > </text>
<text id="unzoom" x="10.00" y="26" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="26" >Search</text>
<text id="ignorecase" x="1174.00" y="26" >ic</text>
<text id="matched" x="1090.00" y="281" > </text>
<g id="frames">
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (658,222 us, 7.09%)</title><rect x="402.1" y="183" width="83.7" height="15.0" fill="rgb(148.8274087103,148.8274087103,113.548211442221)" rx="2" ry="2" />
<text  x="405.13" y="193.5" >Parloop_..</text>
</g>
<g >
<title>all (9,286,878 us, 100%)</title><rect x="10.0" y="39" width="1180.0" height="15.0" fill="rgb(142.705273898742,154.034700640415,154.034700640415)" rx="2" ry="2" />
<text  x="13.00" y="49.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (1,660 us, 0.02%)</title><rect x="398.3" y="247" width="0.2" height="15.0" fill="rgb(140.719966509811,160.813028707705,140.719966509811)" rx="2" ry="2" />
<text  x="401.29" y="257.5" ></text>
</g>
<g >
<title>Log_Event_form0_cell_integral_otherwise (7,582 us, 0.08%)</title><rect x="486.3" y="167" width="1.0" height="15.0" fill="rgb(127.255700405593,150.029255660709,150.029255660709)" rx="2" ry="2" />
<text  x="489.30" y="177.5" ></text>
</g>
<g >
<title>HybridOperatorAssembly (444,424 us, 4.79%)</title><rect x="340.0" y="151" width="56.5" height="15.0" fill="rgb(144.193071110153,144.193071110153,155.32769118261)" rx="2" ry="2" />
<text  x="343.04" y="161.5" >Hybri..</text>
</g>
<g >
<title>CreateExtMesh (919,446 us, 9.90%)</title><rect x="10.0" y="71" width="116.8" height="15.0" fill="rgb(135.132162186608,135.132162186608,153.573966874827)" rx="2" ry="2" />
<text  x="13.00" y="81.5" >CreateExtMesh</text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.__init__ (7,342 us, 0.08%)</title><rect x="336.7" y="71" width="0.9" height="15.0" fill="rgb(148.675447464883,159.517950412694,148.675447464883)" rx="2" ry="2" />
<text  x="339.65" y="81.5" ></text>
</g>
<g >
<title>firedrake.__init__ (1,609,272 us, 17.33%)</title><rect x="128.4" y="71" width="204.5" height="15.0" fill="rgb(142.066872440811,160.593764951496,142.066872440811)" rx="2" ry="2" />
<text  x="131.44" y="81.5" >firedrake.__init__</text>
</g>
<g >
<title>firedrake (9,286,878 us, 100.00%)</title><rect x="10.0" y="55" width="1180.0" height="15.0" fill="rgb(155.648728148604,139.973582472634,139.973582472634)" rx="2" ry="2" />
<text  x="13.00" y="65.5" >firedrake</text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (10,849 us, 0.12%)</title><rect x="126.8" y="103" width="1.4" height="15.0" fill="rgb(148.446882129963,148.446882129963,111.70412109136)" rx="2" ry="2" />
<text  x="129.83" y="113.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (1,561 us, 0.02%)</title><rect x="339.2" y="231" width="0.2" height="15.0" fill="rgb(141.217876985847,153.649079218553,153.649079218553)" rx="2" ry="2" />
<text  x="342.23" y="241.5" ></text>
</g>
<g >
<title>ParLoopExecute (880,099 us, 9.48%)</title><rect x="14.1" y="103" width="111.8" height="15.0" fill="rgb(153.140140330974,120.741075870797,120.741075870797)" rx="2" ry="2" />
<text  x="17.12" y="113.5" >ParLoopExecute</text>
</g>
<g >
<title>SNESFunctionEval (5,542,530 us, 59.68%)</title><rect x="485.8" y="119" width="704.2" height="15.0" fill="rgb(114.166992080214,146.635886835611,146.635886835611)" rx="2" ry="2" />
<text  x="488.76" y="129.5" >SNESFunctionEval</text>
</g>
<g >
<title>CreateFunctionSpace (7,385 us, 0.08%)</title><rect x="339.1" y="151" width="0.9" height="15.0" fill="rgb(152.457229029873,115.505422562362,115.505422562362)" rx="2" ry="2" />
<text  x="342.10" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (5,904 us, 0.06%)</title><rect x="125.9" y="119" width="0.8" height="15.0" fill="rgb(149.711270116774,149.711270116774,117.831539796672)" rx="2" ry="2" />
<text  x="128.95" y="129.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (2,342 us, 0.03%)</title><rect x="337.3" y="119" width="0.3" height="15.0" fill="rgb(152.334069480646,143.481053044155,152.334069480646)" rx="2" ry="2" />
<text  x="340.29" y="129.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (5,904 us, 0.06%)</title><rect x="125.9" y="103" width="0.8" height="15.0" fill="rgb(123.325768358826,149.010384389325,149.010384389325)" rx="2" ry="2" />
<text  x="128.95" y="113.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (5,313 us, 0.06%)</title><rect x="333.0" y="135" width="0.7" height="15.0" fill="rgb(107.005803228558,144.779282318515,144.779282318515)" rx="2" ry="2" />
<text  x="336.05" y="145.5" ></text>
</g>
<g >
<title>CreateSparsity (6,069 us, 0.07%)</title><rect x="396.5" y="167" width="0.8" height="15.0" fill="rgb(156.748696669532,148.406674466408,148.406674466408)" rx="2" ry="2" />
<text  x="399.51" y="177.5" ></text>
</g>
<g >
<title>firedrake.function.Function.__init__ (992 us, 0.01%)</title><rect x="398.5" y="151" width="0.1" height="15.0" fill="rgb(153.149917326429,120.816032835957,120.816032835957)" rx="2" ry="2" />
<text  x="401.51" y="161.5" ></text>
</g>
<g >
<title>PCSetUp (1,166,155 us, 12.56%)</title><rect x="337.6" y="119" width="148.2" height="15.0" fill="rgb(153.3079341484,153.3079341484,135.261527026862)" rx="2" ry="2" />
<text  x="340.59" y="129.5" >PCSetUp</text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (8,163 us, 0.09%)</title><rect x="397.5" y="167" width="1.0" height="15.0" fill="rgb(137.320022425352,161.366507977268,137.320022425352)" rx="2" ry="2" />
<text  x="400.47" y="177.5" ></text>
</g>
<g >
<title>firedrake.functionspace.MixedFunctionSpace (1,071 us, 0.01%)</title><rect x="332.9" y="71" width="0.1" height="15.0" fill="rgb(153.799437311281,153.799437311281,137.643426970056)" rx="2" ry="2" />
<text  x="335.91" y="81.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_pyop2_kernel_uniform_extrusion (880,099 us, 9.48%)</title><rect x="14.1" y="119" width="111.8" height="15.0" fill="rgb(155.988161197139,142.575902511396,142.575902511396)" rx="2" ry="2" />
<text  x="17.12" y="129.5" >Parloop_Cell..</text>
</g>
<g >
<title>Parloop_Cells_wrap_form1_cell_integral_otherwise (2,072,054 us, 22.31%)</title><rect x="812.8" y="151" width="263.3" height="15.0" fill="rgb(153.474583848267,153.474583848267,136.069137110833)" rx="2" ry="2" />
<text  x="815.78" y="161.5" >Parloop_Cells_wrap_form1_cell_in..</text>
</g>
<g >
<title>firedrake.utility_meshes.SquareMesh (2,039 us, 0.02%)</title><rect x="333.7" y="71" width="0.3" height="15.0" fill="rgb(126.728464184752,149.89256478864,149.89256478864)" rx="2" ry="2" />
<text  x="336.72" y="81.5" ></text>
</g>
<g >
<title>ParLoopExecute (4,642,576 us, 49.99%)</title><rect x="486.2" y="135" width="589.9" height="15.0" fill="rgb(147.813427654839,147.813427654839,108.634303250373)" rx="2" ry="2" />
<text  x="489.16" y="145.5" >ParLoopExecute</text>
</g>
<g >
<title>firedrake.mesh.MeshTopology._facets (2,265 us, 0.02%)</title><rect x="333.4" y="151" width="0.3" height="15.0" fill="rgb(146.358819807541,159.895075845284,146.358819807541)" rx="2" ry="2" />
<text  x="336.44" y="161.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (4,042 us, 0.04%)</title><rect x="398.0" y="199" width="0.5" height="15.0" fill="rgb(152.058641563958,112.449585323681,112.449585323681)" rx="2" ry="2" />
<text  x="400.99" y="209.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (10,849 us, 0.12%)</title><rect x="126.8" y="71" width="1.4" height="15.0" fill="rgb(104.55314838932,144.143408841676,144.143408841676)" rx="2" ry="2" />
<text  x="129.83" y="81.5" ></text>
</g>
<g >
<title>firedrake.interpolation.make_interpolator (22,116 us, 0.24%)</title><rect x="398.6" y="151" width="2.8" height="15.0" fill="rgb(117.190521298953,117.190521298953,150.101391219152)" rx="2" ry="2" />
<text  x="401.63" y="161.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_slate_loopy_knl_0 (384,335 us, 4.14%)</title><rect x="346.8" y="183" width="48.9" height="15.0" fill="rgb(123.616662451404,163.597287507911,123.616662451404)" rx="2" ry="2" />
<text  x="349.83" y="193.5" >Parl..</text>
</g>
<g >
<title>CreateFunctionSpace (1,024 us, 0.01%)</title><rect x="1189.9" y="199" width="0.1" height="15.0" fill="rgb(143.289797905986,160.394684061816,143.289797905986)" rx="2" ry="2" />
<text  x="1192.87" y="209.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (5,904 us, 0.06%)</title><rect x="125.9" y="151" width="0.8" height="15.0" fill="rgb(156.285715235615,144.857150139715,144.857150139715)" rx="2" ry="2" />
<text  x="128.95" y="161.5" ></text>
</g>
<g >
<title>firedrake.assemble.allocate_matrix (7,529 us, 0.08%)</title><rect x="396.5" y="151" width="1.0" height="15.0" fill="rgb(135.53239109306,152.17506435746,152.17506435746)" rx="2" ry="2" />
<text  x="399.51" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (4,802 us, 0.05%)</title><rect x="339.4" y="199" width="0.6" height="15.0" fill="rgb(128.104024413802,162.866786723335,128.104024413802)" rx="2" ry="2" />
<text  x="342.43" y="209.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (658,222 us, 7.09%)</title><rect x="402.1" y="199" width="83.7" height="15.0" fill="rgb(141.102647963956,141.102647963956,154.729544767217)" rx="2" ry="2" />
<text  x="405.13" y="209.5" >pyop2.gl..</text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.solve (6,708,685 us, 72.24%)</title><rect x="337.6" y="87" width="852.4" height="15.0" fill="rgb(124.073287976625,163.522953120084,124.073287976625)" rx="2" ry="2" />
<text  x="340.59" y="97.5" >firedrake.variational_solver.NonlinearVariationalSolver.solve</text>
</g>
<g >
<title>firedrake.utility_meshes.RectangleMesh (2,039 us, 0.02%)</title><rect x="333.7" y="87" width="0.3" height="15.0" fill="rgb(137.853432562749,161.279673768855,137.853432562749)" rx="2" ry="2" />
<text  x="336.72" y="97.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (1,024 us, 0.01%)</title><rect x="1189.9" y="183" width="0.1" height="15.0" fill="rgb(148.592921917372,148.592921917372,112.411852368801)" rx="2" ry="2" />
<text  x="1192.87" y="193.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (5,313 us, 0.06%)</title><rect x="333.0" y="119" width="0.7" height="15.0" fill="rgb(156.200897419123,144.206880213278,144.206880213278)" rx="2" ry="2" />
<text  x="336.05" y="129.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (8,163 us, 0.09%)</title><rect x="397.5" y="151" width="1.0" height="15.0" fill="rgb(151.878056738556,151.878056738556,128.33212111762)" rx="2" ry="2" />
<text  x="400.47" y="161.5" ></text>
</g>
<g >
<title>perfsolve (6,708,685 us, 72.24%)</title><rect x="337.6" y="71" width="852.4" height="15.0" fill="rgb(132.358601971883,162.174181074345,132.358601971883)" rx="2" ry="2" />
<text  x="340.59" y="81.5" >perfsolve</text>
</g>
<g >
<title>firedrake.ufl_expr.action (3,576 us, 0.04%)</title><rect x="336.8" y="119" width="0.5" height="15.0" fill="rgb(140.163249541241,153.37565728847,153.37565728847)" rx="2" ry="2" />
<text  x="339.84" y="129.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (6,003 us, 0.06%)</title><rect x="397.7" y="183" width="0.8" height="15.0" fill="rgb(156.638433441154,147.561323048848,147.561323048848)" rx="2" ry="2" />
<text  x="400.74" y="193.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (384,335 us, 4.14%)</title><rect x="346.8" y="199" width="48.9" height="15.0" fill="rgb(153.14060301005,120.74462307705,120.74462307705)" rx="2" ry="2" />
<text  x="349.83" y="209.5" >pyop..</text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (9,864 us, 0.11%)</title><rect x="335.3" y="103" width="1.2" height="15.0" fill="rgb(123.107350949912,148.953757653681,148.953757653681)" rx="2" ry="2" />
<text  x="338.26" y="113.5" ></text>
</g>
<g >
<title>firedrake.functionspace.VectorFunctionSpace (5,313 us, 0.06%)</title><rect x="333.0" y="71" width="0.7" height="15.0" fill="rgb(138.858998810428,161.115976937837,138.858998810428)" rx="2" ry="2" />
<text  x="336.05" y="81.5" ></text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (896,789 us, 9.66%)</title><rect x="1076.1" y="135" width="113.9" height="15.0" fill="rgb(132.034414295682,162.226955812331,132.034414295682)" rx="2" ry="2" />
<text  x="1079.05" y="145.5" >firedrake.ts..</text>
</g>
<g >
<title>firedrake.functionspace.MixedFunctionSpace (2,583 us, 0.03%)</title><rect x="339.1" y="167" width="0.3" height="15.0" fill="rgb(148.704036255561,159.513296423513,148.704036255561)" rx="2" ry="2" />
<text  x="342.10" y="177.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (880,099 us, 9.48%)</title><rect x="14.1" y="135" width="111.8" height="15.0" fill="rgb(142.57451733972,160.511125084232,142.57451733972)" rx="2" ry="2" />
<text  x="17.12" y="145.5" >pyop2.global..</text>
</g>
<g >
<title>ParLoopExecute (384,335 us, 4.14%)</title><rect x="346.8" y="167" width="48.9" height="15.0" fill="rgb(130.703226071206,130.703226071206,152.716753433137)" rx="2" ry="2" />
<text  x="349.83" y="177.5" >ParL..</text>
</g>
<g >
<title>ParLoopExecute (658,222 us, 7.09%)</title><rect x="402.1" y="167" width="83.7" height="15.0" fill="rgb(132.252735381202,151.324783246978,151.324783246978)" rx="2" ry="2" />
<text  x="405.13" y="177.5" >ParLoopE..</text>
</g>
<g >
<title>firedrake.slate.slac.optimise.optimise (6,703 us, 0.07%)</title><rect x="395.7" y="167" width="0.8" height="15.0" fill="rgb(111.895245571157,146.046915518448,146.046915518448)" rx="2" ry="2" />
<text  x="398.66" y="177.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (5,313 us, 0.06%)</title><rect x="333.0" y="103" width="0.7" height="15.0" fill="rgb(128.890532034595,150.453100897858,150.453100897858)" rx="2" ry="2" />
<text  x="336.05" y="113.5" ></text>
</g>
<g >
<title>firedrake.functionspace.VectorFunctionSpace (5,904 us, 0.06%)</title><rect x="125.9" y="87" width="0.8" height="15.0" fill="rgb(122.625981350777,148.828958127979,148.828958127979)" rx="2" ry="2" />
<text  x="128.95" y="97.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_form0_cell_integral_otherwise (2,569,464 us, 27.67%)</title><rect x="486.3" y="151" width="326.5" height="15.0" fill="rgb(155.11823272088,135.906450860082,135.906450860082)" rx="2" ry="2" />
<text  x="489.30" y="161.5" >Parloop_Cells_wrap_form0_cell_integral_o..</text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (10,849 us, 0.12%)</title><rect x="126.8" y="87" width="1.4" height="15.0" fill="rgb(148.512310378667,148.512310378667,112.021196450465)" rx="2" ry="2" />
<text  x="129.83" y="97.5" ></text>
</g>
<g >
<title>firedrake.parloops.par_loop (663,613 us, 7.15%)</title><rect x="401.4" y="151" width="84.4" height="15.0" fill="rgb(142.905417989813,160.457257536542,142.905417989813)" rx="2" ry="2" />
<text  x="404.44" y="161.5" >firedrak..</text>
</g>
<g >
<title>firedrake.variational_solver.LinearVariationalProblem.__init__ (21,022 us, 0.23%)</title><rect x="334.0" y="71" width="2.7" height="15.0" fill="rgb(147.634811451263,147.634811451263,107.768701648428)" rx="2" ry="2" />
<text  x="336.98" y="81.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (2,773 us, 0.03%)</title><rect x="1189.6" y="167" width="0.4" height="15.0" fill="rgb(134.842233769127,98.6582240333873,134.842233769127)" rx="2" ry="2" />
<text  x="1192.65" y="177.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (3,104 us, 0.03%)</title><rect x="396.1" y="183" width="0.4" height="15.0" fill="rgb(146.086231518809,146.086231518809,155.694109326221)" rx="2" ry="2" />
<text  x="399.12" y="193.5" ></text>
</g>
<g >
<title>firedrake.assemble.allocate_matrix (5,918 us, 0.06%)</title><rect x="336.8" y="87" width="0.8" height="15.0" fill="rgb(110.413482309348,110.413482309348,148.789706253422)" rx="2" ry="2" />
<text  x="339.84" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (1,561 us, 0.02%)</title><rect x="339.2" y="199" width="0.2" height="15.0" fill="rgb(116.244818511941,116.244818511941,149.918351970053)" rx="2" ry="2" />
<text  x="342.23" y="209.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (1,660 us, 0.02%)</title><rect x="398.3" y="231" width="0.2" height="15.0" fill="rgb(149.966313536342,149.966313536342,119.067519445348)" rx="2" ry="2" />
<text  x="401.29" y="241.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (2,561,882 us, 27.59%)</title><rect x="487.3" y="167" width="325.5" height="15.0" fill="rgb(153.276457591803,153.276457591803,135.108986791047)" rx="2" ry="2" />
<text  x="490.26" y="177.5" >pyop2.global_kernel.GlobalKernel.compile</text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (1,561 us, 0.02%)</title><rect x="339.2" y="215" width="0.2" height="15.0" fill="rgb(140.222864063729,112.446089163305,140.222864063729)" rx="2" ry="2" />
<text  x="342.23" y="225.5" ></text>
</g>
<g >
<title>CreateMesh (1,839 us, 0.02%)</title><rect x="128.2" y="71" width="0.2" height="15.0" fill="rgb(148.538113466859,159.540307110046,148.538113466859)" rx="2" ry="2" />
<text  x="131.20" y="81.5" ></text>
</g>
<g >
<title>firedrake.functionspace.make_scalar_element (1,118 us, 0.01%)</title><rect x="398.2" y="215" width="0.1" height="15.0" fill="rgb(138.026063421817,152.821571998249,152.821571998249)" rx="2" ry="2" />
<text  x="401.15" y="225.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (10,849 us, 0.12%)</title><rect x="126.8" y="119" width="1.4" height="15.0" fill="rgb(142.26105571267,160.562153721193,142.26105571267)" rx="2" ry="2" />
<text  x="129.83" y="129.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (5,904 us, 0.06%)</title><rect x="125.9" y="135" width="0.8" height="15.0" fill="rgb(148.452617053824,159.554225130773,148.452617053824)" rx="2" ry="2" />
<text  x="128.95" y="145.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (4,802 us, 0.05%)</title><rect x="339.4" y="167" width="0.6" height="15.0" fill="rgb(113.574244065149,113.574244065149,149.401466593255)" rx="2" ry="2" />
<text  x="342.43" y="177.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalProblem.__init__ (11,013 us, 0.12%)</title><rect x="335.3" y="87" width="1.4" height="15.0" fill="rgb(141.546938986022,153.734391588969,153.734391588969)" rx="2" ry="2" />
<text  x="338.26" y="97.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.action (10,009 us, 0.11%)</title><rect x="334.0" y="87" width="1.3" height="15.0" fill="rgb(139.685929841398,160.981360258377,139.685929841398)" rx="2" ry="2" />
<text  x="336.98" y="97.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (2,070,683 us, 22.30%)</title><rect x="813.0" y="167" width="263.1" height="15.0" fill="rgb(125.878609490732,163.229063571276,125.878609490732)" rx="2" ry="2" />
<text  x="815.95" y="177.5" >pyop2.global_kernel.GlobalKernel..</text>
</g>
<g >
<title>firedrake.matrix_free.operators.ImplicitMatrixContext.__init__ (5,918 us, 0.06%)</title><rect x="336.8" y="103" width="0.8" height="15.0" fill="rgb(150.531316524171,150.531316524171,121.805610847907)" rx="2" ry="2" />
<text  x="339.84" y="113.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (4,942 us, 0.05%)</title><rect x="1189.4" y="151" width="0.6" height="15.0" fill="rgb(151.122610058815,151.122610058815,124.671110285027)" rx="2" ry="2" />
<text  x="1192.37" y="161.5" ></text>
</g>
<g >
<title>firedrake.extrusion_utils.make_extruded_coords (911,211 us, 9.81%)</title><rect x="10.2" y="87" width="115.7" height="15.0" fill="rgb(152.245772600513,113.884256603933,113.884256603933)" rx="2" ry="2" />
<text  x="13.17" y="97.5" >firedrake.ext..</text>
</g>
<g >
<title>HybridInit (1,166,155 us, 12.56%)</title><rect x="337.6" y="135" width="148.2" height="15.0" fill="rgb(147.751380738883,147.751380738883,108.333614349972)" rx="2" ry="2" />
<text  x="340.59" y="145.5" >HybridInit</text>
</g>
<g >
<title>firedrake.ufl_expr.derivative (1,149 us, 0.01%)</title><rect x="336.5" y="103" width="0.2" height="15.0" fill="rgb(154.073757515028,154.073757515028,138.972824880522)" rx="2" ry="2" />
<text  x="339.51" y="113.5" ></text>
</g>
<g >
<title>MatZeroInitial (1,460 us, 0.02%)</title><rect x="397.3" y="167" width="0.2" height="15.0" fill="rgb(131.360917780898,131.360917780898,152.844048602754)" rx="2" ry="2" />
<text  x="400.28" y="177.5" ></text>
</g>
<g >
<title>SNESSolve (6,708,685 us, 72.24%)</title><rect x="337.6" y="103" width="852.4" height="15.0" fill="rgb(148.195593922267,148.195593922267,110.486339777138)" rx="2" ry="2" />
<text  x="340.59" y="113.5" >SNESSolve</text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (4,802 us, 0.05%)</title><rect x="339.4" y="183" width="0.6" height="15.0" fill="rgb(133.75126866283,161.947467892097,133.75126866283)" rx="2" ry="2" />
<text  x="342.43" y="193.5" ></text>
</g>
<g >
<title>Log_Event_form1_cell_integral_otherwise (1,371 us, 0.01%)</title><rect x="812.8" y="167" width="0.2" height="15.0" fill="rgb(129.984288478386,129.984288478386,152.577604221623)" rx="2" ry="2" />
<text  x="815.78" y="177.5" ></text>
</g>
<g >
<title>firedrake.mesh.make_mesh_from_coordinates (1,017 us, 0.01%)</title><rect x="126.7" y="87" width="0.1" height="15.0" fill="rgb(151.396286334291,151.396286334291,125.997387620027)" rx="2" ry="2" />
<text  x="129.70" y="97.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (5,313 us, 0.06%)</title><rect x="333.0" y="87" width="0.7" height="15.0" fill="rgb(132.420148588771,162.164161857642,132.420148588771)" rx="2" ry="2" />
<text  x="336.05" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (1,660 us, 0.02%)</title><rect x="398.3" y="215" width="0.2" height="15.0" fill="rgb(122.321422445469,122.321422445469,151.094468860413)" rx="2" ry="2" />
<text  x="401.29" y="225.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (1,561 us, 0.02%)</title><rect x="339.2" y="183" width="0.2" height="15.0" fill="rgb(150.24516526696,159.262414956541,150.24516526696)" rx="2" ry="2" />
<text  x="342.23" y="193.5" ></text>
</g>
</g>
</svg>
