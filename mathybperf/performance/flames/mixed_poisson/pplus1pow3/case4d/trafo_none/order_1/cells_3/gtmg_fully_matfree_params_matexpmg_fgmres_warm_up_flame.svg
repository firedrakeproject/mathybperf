<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="299" onload="init(evt)" viewBox="0 0 1200 299" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:13px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:18px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 13 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (1 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="299.0" fill="url(#background)"  />
<text id="title" x="600.00" y="26" >Firedrake example</text>
<text id="details" x="10.00" y="281" > </text>
<text id="unzoom" x="10.00" y="26" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="26" >Search</text>
<text id="ignorecase" x="1174.00" y="26" >ic</text>
<text id="matched" x="1090.00" y="281" > </text>
<g id="frames">
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (662,710 us, 5.67%)</title><rect x="348.4" y="183" width="66.9" height="15.0" fill="rgb(154.65719032252,132.371792472652,132.371792472652)" rx="2" ry="2" />
<text  x="351.36" y="193.5" >Parloo..</text>
</g>
<g >
<title>Log_Event_form0_cell_integral_otherwise (9,889 us, 0.08%)</title><rect x="415.6" y="167" width="1.0" height="15.0" fill="rgb(135.662834425745,161.636282767902,135.662834425745)" rx="2" ry="2" />
<text  x="418.60" y="177.5" ></text>
</g>
<g >
<title>firedrake.mesh.MeshTopology._facets (2,617 us, 0.02%)</title><rect x="277.7" y="151" width="0.3" height="15.0" fill="rgb(112.889603610572,146.304712047185,146.304712047185)" rx="2" ry="2" />
<text  x="280.72" y="161.5" ></text>
</g>
<g >
<title>CreateSparsity (96,263 us, 0.82%)</title><rect x="332.0" y="167" width="9.7" height="15.0" fill="rgb(154.60731768814,131.989435609074,131.989435609074)" rx="2" ry="2" />
<text  x="335.02" y="177.5" ></text>
</g>
<g >
<title>Log_Event_form1_cell_integral_otherwise (15,318 us, 0.13%)</title><rect x="764.2" y="167" width="1.6" height="15.0" fill="rgb(121.509481545591,121.509481545591,150.937319008824)" rx="2" ry="2" />
<text  x="767.20" y="177.5" ></text>
</g>
<g >
<title>firedrake.assemble.allocate_matrix (117,938 us, 1.01%)</title><rect x="331.9" y="151" width="11.9" height="15.0" fill="rgb(125.215428295836,125.215428295836,151.654599025001)" rx="2" ry="2" />
<text  x="334.86" y="161.5" ></text>
</g>
<g >
<title>firedrake.__init__ (1,733,494 us, 14.83%)</title><rect x="102.4" y="71" width="175.0" height="15.0" fill="rgb(148.513333347641,148.513333347641,112.026153915491)" rx="2" ry="2" />
<text  x="105.43" y="81.5" >firedrake.__init__</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (3,443,597 us, 29.46%)</title><rect x="416.6" y="167" width="347.6" height="15.0" fill="rgb(152.814986965413,118.2482334015,118.2482334015)" rx="2" ry="2" />
<text  x="419.60" y="177.5" >pyop2.global_kernel.GlobalKernel.compile</text>
</g>
<g >
<title>firedrake.slate.slac.optimise.optimise (6,791 us, 0.06%)</title><rect x="331.2" y="167" width="0.7" height="15.0" fill="rgb(149.212507819672,149.212507819672,115.414460972255)" rx="2" ry="2" />
<text  x="334.18" y="177.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_form1_cell_integral_otherwise (2,958,099 us, 25.30%)</title><rect x="764.2" y="151" width="298.6" height="15.0" fill="rgb(128.492027780266,128.492027780266,152.288779570374)" rx="2" ry="2" />
<text  x="767.20" y="161.5" >Parloop_Cells_wrap_form1_cell_integr..</text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (6,408 us, 0.05%)</title><rect x="100.2" y="135" width="0.7" height="15.0" fill="rgb(148.763580692524,159.503603143078,148.763580692524)" rx="2" ry="2" />
<text  x="103.24" y="145.5" ></text>
</g>
<g >
<title>ParLoopExecute (662,710 us, 5.67%)</title><rect x="348.4" y="167" width="66.9" height="15.0" fill="rgb(132.869608429324,162.090993976622,132.869608429324)" rx="2" ry="2" />
<text  x="351.36" y="177.5" >ParLoo..</text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (5,702 us, 0.05%)</title><rect x="277.4" y="119" width="0.6" height="15.0" fill="rgb(139.081501297974,161.079755602655,139.081501297974)" rx="2" ry="2" />
<text  x="280.41" y="129.5" ></text>
</g>
<g >
<title>SNESSolve (9,003,698 us, 77.02%)</title><rect x="281.1" y="103" width="908.9" height="15.0" fill="rgb(130.434668027514,150.853432451578,150.853432451578)" rx="2" ry="2" />
<text  x="284.15" y="113.5" >SNESSolve</text>
</g>
<g >
<title>firedrake.interpolation.make_interpolator (31,902 us, 0.27%)</title><rect x="344.6" y="151" width="3.2" height="15.0" fill="rgb(133.760536191071,133.760536191071,153.308490875691)" rx="2" ry="2" />
<text  x="347.59" y="161.5" ></text>
</g>
<g >
<title>ParLoopExecute (6,411,585 us, 54.85%)</title><rect x="415.6" y="135" width="647.2" height="15.0" fill="rgb(153.931813338297,153.931813338297,138.284941562517)" rx="2" ry="2" />
<text  x="418.60" y="145.5" >ParLoopExecute</text>
</g>
<g >
<title>HybridInit (1,328,591 us, 11.37%)</title><rect x="281.1" y="135" width="134.2" height="15.0" fill="rgb(139.601940155754,160.995032997901,139.601940155754)" rx="2" ry="2" />
<text  x="284.15" y="145.5" >HybridInit</text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (13,491 us, 0.12%)</title><rect x="100.9" y="87" width="1.3" height="15.0" fill="rgb(140.171771975086,112.315165686157,140.171771975086)" rx="2" ry="2" />
<text  x="103.88" y="97.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_pyop2_kernel_uniform_extrusion (859,920 us, 7.36%)</title><rect x="13.4" y="119" width="86.8" height="15.0" fill="rgb(129.724325372243,162.603016799867,129.724325372243)" rx="2" ry="2" />
<text  x="16.44" y="129.5" >Parloop_C..</text>
</g>
<g >
<title>firedrake.functionspace.VectorFunctionSpace (5,702 us, 0.05%)</title><rect x="277.4" y="71" width="0.6" height="15.0" fill="rgb(118.079138417017,147.650146997004,147.650146997004)" rx="2" ry="2" />
<text  x="280.41" y="81.5" ></text>
</g>
<g >
<title>firedrake.utility_meshes.RectangleMesh (2,088 us, 0.02%)</title><rect x="278.0" y="87" width="0.2" height="15.0" fill="rgb(153.287915545194,153.287915545194,135.164513795942)" rx="2" ry="2" />
<text  x="280.99" y="97.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (2,401 us, 0.02%)</title><rect x="280.9" y="119" width="0.2" height="15.0" fill="rgb(135.609188009204,161.645015905478,135.609188009204)" rx="2" ry="2" />
<text  x="283.90" y="129.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (1,785 us, 0.02%)</title><rect x="344.4" y="231" width="0.2" height="15.0" fill="rgb(104.88523162517,144.229504495414,144.229504495414)" rx="2" ry="2" />
<text  x="347.41" y="241.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (3,164 us, 0.03%)</title><rect x="331.5" y="183" width="0.4" height="15.0" fill="rgb(124.851205435635,163.396315394199,124.851205435635)" rx="2" ry="2" />
<text  x="334.54" y="193.5" ></text>
</g>
<g >
<title>ParLoopExecute (859,920 us, 7.36%)</title><rect x="13.4" y="103" width="86.8" height="15.0" fill="rgb(147.730973704905,147.730973704905,108.23471872377)" rx="2" ry="2" />
<text  x="16.44" y="113.5" >ParLoopEx..</text>
</g>
<g >
<title>CreateFunctionSpace (6,408 us, 0.05%)</title><rect x="100.2" y="103" width="0.7" height="15.0" fill="rgb(123.150821540574,123.150821540574,151.25499771753)" rx="2" ry="2" />
<text  x="103.24" y="113.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (1,785 us, 0.02%)</title><rect x="344.4" y="247" width="0.2" height="15.0" fill="rgb(129.387860096204,150.58203780272,150.58203780272)" rx="2" ry="2" />
<text  x="347.41" y="257.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (1,785 us, 0.02%)</title><rect x="344.4" y="215" width="0.2" height="15.0" fill="rgb(140.224715907985,140.224715907985,154.559622433803)" rx="2" ry="2" />
<text  x="347.41" y="225.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (9,821 us, 0.08%)</title><rect x="279.4" y="103" width="1.0" height="15.0" fill="rgb(133.535552016439,151.657365337595,151.657365337595)" rx="2" ry="2" />
<text  x="282.37" y="113.5" ></text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (1,260,117 us, 10.78%)</title><rect x="1062.8" y="135" width="127.2" height="15.0" fill="rgb(154.402782174194,154.402782174194,140.567328998019)" rx="2" ry="2" />
<text  x="1065.80" y="145.5" >firedrake.tsfc..</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (2,942,781 us, 25.17%)</title><rect x="765.8" y="167" width="297.0" height="15.0" fill="rgb(132.041944482021,132.041944482021,152.975860222327)" rx="2" ry="2" />
<text  x="768.75" y="177.5" >pyop2.global_kernel.GlobalKernel.com..</text>
</g>
<g >
<title>CreateFunctionSpace (1,422 us, 0.01%)</title><rect x="282.5" y="183" width="0.2" height="15.0" fill="rgb(125.215639207584,163.336988966207,125.215639207584)" rx="2" ry="2" />
<text  x="285.54" y="193.5" ></text>
</g>
<g >
<title>firedrake.functionspace.MixedFunctionSpace (1,422 us, 0.01%)</title><rect x="282.5" y="167" width="0.2" height="15.0" fill="rgb(155.863358466103,141.619081573455,141.619081573455)" rx="2" ry="2" />
<text  x="285.54" y="177.5" ></text>
</g>
<g >
<title>firedrake.utility_meshes.SquareMesh (2,088 us, 0.02%)</title><rect x="278.0" y="71" width="0.2" height="15.0" fill="rgb(132.616283097969,162.132232984052,132.616283097969)" rx="2" ry="2" />
<text  x="280.99" y="81.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (8,197 us, 0.07%)</title><rect x="343.8" y="167" width="0.8" height="15.0" fill="rgb(138.66515179923,108.454451485527,138.66515179923)" rx="2" ry="2" />
<text  x="346.77" y="177.5" ></text>
</g>
<g >
<title>MatZeroInitial (20,109 us, 0.17%)</title><rect x="341.7" y="167" width="2.1" height="15.0" fill="rgb(124.361227437438,149.27883674304,149.27883674304)" rx="2" ry="2" />
<text  x="344.74" y="177.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (5,702 us, 0.05%)</title><rect x="277.4" y="87" width="0.6" height="15.0" fill="rgb(155.40796327768,155.40796327768,145.438591268759)" rx="2" ry="2" />
<text  x="280.41" y="97.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalProblem.__init__ (11,206 us, 0.10%)</title><rect x="279.2" y="87" width="1.2" height="15.0" fill="rgb(150.102512355312,150.102512355312,119.727559875741)" rx="2" ry="2" />
<text  x="282.23" y="97.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (8,197 us, 0.07%)</title><rect x="343.8" y="151" width="0.8" height="15.0" fill="rgb(149.400048356865,149.400048356865,116.323311267883)" rx="2" ry="2" />
<text  x="346.77" y="161.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.action (10,201 us, 0.09%)</title><rect x="278.2" y="87" width="1.0" height="15.0" fill="rgb(154.752139259226,133.09973432073,133.09973432073)" rx="2" ry="2" />
<text  x="281.20" y="97.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (5,442 us, 0.05%)</title><rect x="1189.5" y="151" width="0.5" height="15.0" fill="rgb(155.958709077208,142.350102925258,142.350102925258)" rx="2" ry="2" />
<text  x="1192.45" y="161.5" ></text>
</g>
<g >
<title>HybridOperatorAssembly (480,247 us, 4.11%)</title><rect x="283.4" y="151" width="48.5" height="15.0" fill="rgb(155.613018000115,139.699804667548,139.699804667548)" rx="2" ry="2" />
<text  x="286.38" y="161.5" >Hybr..</text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (5,702 us, 0.05%)</title><rect x="277.4" y="135" width="0.6" height="15.0" fill="rgb(133.89390722685,133.89390722685,153.334304624552)" rx="2" ry="2" />
<text  x="280.41" y="145.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (662,710 us, 5.67%)</title><rect x="348.4" y="199" width="66.9" height="15.0" fill="rgb(145.823763485395,145.823763485395,155.643309061689)" rx="2" ry="2" />
<text  x="351.36" y="209.5" >pyop2...</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (859,920 us, 7.36%)</title><rect x="13.4" y="135" width="86.8" height="15.0" fill="rgb(119.671346915804,119.671346915804,150.581551015962)" rx="2" ry="2" />
<text  x="16.44" y="145.5" >pyop2.glo..</text>
</g>
<g >
<title>CreateExtMesh (900,358 us, 7.70%)</title><rect x="10.0" y="71" width="90.9" height="15.0" fill="rgb(149.231318434213,149.231318434213,115.505620104264)" rx="2" ry="2" />
<text  x="13.00" y="81.5" >CreateExt..</text>
</g>
<g >
<title>Parloop_Cells_wrap_form0_cell_integral_otherwise (3,453,486 us, 29.54%)</title><rect x="415.6" y="151" width="348.6" height="15.0" fill="rgb(133.122166706922,162.049879838408,133.122166706922)" rx="2" ry="2" />
<text  x="418.60" y="161.5" >Parloop_Cells_wrap_form0_cell_integral_othe..</text>
</g>
<g >
<title>CreateFunctionSpace (13,491 us, 0.12%)</title><rect x="100.9" y="71" width="1.3" height="15.0" fill="rgb(130.82568201679,130.82568201679,152.740454583895)" rx="2" ry="2" />
<text  x="103.88" y="81.5" ></text>
</g>
<g >
<title>SNESFunctionEval (7,675,107 us, 65.66%)</title><rect x="415.3" y="119" width="774.7" height="15.0" fill="rgb(156.453850751098,146.146189091751,146.146189091751)" rx="2" ry="2" />
<text  x="418.26" y="129.5" >SNESFunctionEval</text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (6,961 us, 0.06%)</title><rect x="282.7" y="183" width="0.7" height="15.0" fill="rgb(155.46012733404,138.527642894305,138.527642894305)" rx="2" ry="2" />
<text  x="285.68" y="193.5" ></text>
</g>
<g >
<title>ParLoopExecute (399,128 us, 3.41%)</title><rect x="290.9" y="167" width="40.3" height="15.0" fill="rgb(135.412270622146,135.412270622146,153.628181410738)" rx="2" ry="2" />
<text  x="293.89" y="177.5" >Par..</text>
</g>
<g >
<title>firedrake.matrix_free.operators.ImplicitMatrixContext.__init__ (6,020 us, 0.05%)</title><rect x="280.5" y="103" width="0.6" height="15.0" fill="rgb(151.657863637983,151.657863637983,127.265031476379)" rx="2" ry="2" />
<text  x="283.54" y="113.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.LinearVariationalProblem.__init__ (21,407 us, 0.18%)</title><rect x="278.2" y="71" width="2.2" height="15.0" fill="rgb(145.316567371394,160.064744846517,145.316567371394)" rx="2" ry="2" />
<text  x="281.20" y="81.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (6,084 us, 0.05%)</title><rect x="344.0" y="183" width="0.6" height="15.0" fill="rgb(112.749732956984,112.749732956984,149.241883798126)" rx="2" ry="2" />
<text  x="346.98" y="193.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (6,961 us, 0.06%)</title><rect x="282.7" y="199" width="0.7" height="15.0" fill="rgb(153.936140523855,126.843744016225,126.843744016225)" rx="2" ry="2" />
<text  x="285.68" y="209.5" ></text>
</g>
<g >
<title>firedrake.assemble.allocate_matrix (6,020 us, 0.05%)</title><rect x="280.5" y="87" width="0.6" height="15.0" fill="rgb(142.57576167046,118.475389280553,142.57576167046)" rx="2" ry="2" />
<text  x="283.54" y="97.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (3,260 us, 0.03%)</title><rect x="1189.7" y="167" width="0.3" height="15.0" fill="rgb(133.596686272013,161.972632467347,133.596686272013)" rx="2" ry="2" />
<text  x="1192.67" y="177.5" ></text>
</g>
<g >
<title>firedrake.parloops.par_loop (668,143 us, 5.72%)</title><rect x="347.8" y="151" width="67.5" height="15.0" fill="rgb(130.970682916612,162.400121385668,130.970682916612)" rx="2" ry="2" />
<text  x="350.81" y="161.5" >firedr..</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (399,128 us, 3.41%)</title><rect x="290.9" y="199" width="40.3" height="15.0" fill="rgb(152.004375716126,142.636212772573,152.004375716126)" rx="2" ry="2" />
<text  x="293.89" y="209.5" >pyo..</text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (6,408 us, 0.05%)</title><rect x="100.2" y="119" width="0.7" height="15.0" fill="rgb(115.546794791218,115.546794791218,149.783250604752)" rx="2" ry="2" />
<text  x="103.24" y="129.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (13,491 us, 0.12%)</title><rect x="100.9" y="119" width="1.3" height="15.0" fill="rgb(141.13103333241,160.746110852864,141.13103333241)" rx="2" ry="2" />
<text  x="103.88" y="129.5" ></text>
</g>
<g >
<title>firedrake.extrusion_utils.make_extruded_coords (891,622 us, 7.63%)</title><rect x="10.2" y="87" width="90.0" height="15.0" fill="rgb(130.176161087027,162.529462148624,130.176161087027)" rx="2" ry="2" />
<text  x="13.23" y="97.5" >firedrake..</text>
</g>
<g >
<title>firedrake (11,689,855 us, 100.00%)</title><rect x="10.0" y="55" width="1180.0" height="15.0" fill="rgb(113.644567914608,146.500443533417,146.500443533417)" rx="2" ry="2" />
<text  x="13.00" y="65.5" >firedrake</text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (6,408 us, 0.05%)</title><rect x="100.2" y="151" width="0.7" height="15.0" fill="rgb(108.814524021355,145.248209931462,145.248209931462)" rx="2" ry="2" />
<text  x="103.24" y="161.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.__init__ (7,814 us, 0.07%)</title><rect x="280.4" y="71" width="0.7" height="15.0" fill="rgb(144.300478842882,160.230154606973,144.300478842882)" rx="2" ry="2" />
<text  x="283.36" y="81.5" ></text>
</g>
<g >
<title>all (11,689,855 us, 100%)</title><rect x="10.0" y="39" width="1180.0" height="15.0" fill="rgb(154.08590211734,154.08590211734,139.031679491727)" rx="2" ry="2" />
<text  x="13.00" y="49.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.solve (9,003,698 us, 77.02%)</title><rect x="281.1" y="87" width="908.9" height="15.0" fill="rgb(150.225103752901,150.225103752901,120.321656648672)" rx="2" ry="2" />
<text  x="284.15" y="97.5" >firedrake.variational_solver.NonlinearVariationalSolver.solve</text>
</g>
<g >
<title>CreateMesh (1,803 us, 0.02%)</title><rect x="102.2" y="71" width="0.2" height="15.0" fill="rgb(133.34177838442,151.607127729294,151.607127729294)" rx="2" ry="2" />
<text  x="105.25" y="81.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (6,961 us, 0.06%)</title><rect x="282.7" y="167" width="0.7" height="15.0" fill="rgb(156.250909626037,144.59030713295,144.59030713295)" rx="2" ry="2" />
<text  x="285.68" y="177.5" ></text>
</g>
<g >
<title>firedrake.functionspace.VectorFunctionSpace (6,408 us, 0.05%)</title><rect x="100.2" y="87" width="0.7" height="15.0" fill="rgb(144.006999610398,144.006999610398,155.291677343948)" rx="2" ry="2" />
<text  x="103.24" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (13,491 us, 0.12%)</title><rect x="100.9" y="103" width="1.3" height="15.0" fill="rgb(153.961052095883,153.961052095883,138.426637080047)" rx="2" ry="2" />
<text  x="103.88" y="113.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (8,383 us, 0.07%)</title><rect x="282.5" y="151" width="0.9" height="15.0" fill="rgb(153.333090160482,122.220357897031,122.220357897031)" rx="2" ry="2" />
<text  x="285.54" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (1,422 us, 0.01%)</title><rect x="282.5" y="231" width="0.2" height="15.0" fill="rgb(148.740476078961,148.740476078961,113.126922536502)" rx="2" ry="2" />
<text  x="285.54" y="241.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (1,422 us, 0.01%)</title><rect x="282.5" y="215" width="0.2" height="15.0" fill="rgb(133.755968415017,95.8746690634814,133.755968415017)" rx="2" ry="2" />
<text  x="285.54" y="225.5" ></text>
</g>
<g >
<title>perfsolve (9,003,698 us, 77.02%)</title><rect x="281.1" y="71" width="908.9" height="15.0" fill="rgb(125.017630225679,163.369222986517,125.017630225679)" rx="2" ry="2" />
<text  x="284.15" y="81.5" >perfsolve</text>
</g>
<g >
<title>PCSetUp (1,328,591 us, 11.37%)</title><rect x="281.1" y="119" width="134.2" height="15.0" fill="rgb(151.197085804916,151.197085804916,125.032031208439)" rx="2" ry="2" />
<text  x="284.15" y="129.5" >PCSetUp</text>
</g>
<g >
<title>Parloop_Cells_wrap_slate_loopy_knl_0 (399,128 us, 3.41%)</title><rect x="290.9" y="183" width="40.3" height="15.0" fill="rgb(153.679086530835,153.679086530835,137.060188572509)" rx="2" ry="2" />
<text  x="293.89" y="193.5" >Par..</text>
</g>
<g >
<title>firedrake.ufl_expr.action (3,619 us, 0.03%)</title><rect x="280.5" y="119" width="0.4" height="15.0" fill="rgb(154.159082971852,128.552969450868,128.552969450868)" rx="2" ry="2" />
<text  x="283.54" y="129.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (5,702 us, 0.05%)</title><rect x="277.4" y="103" width="0.6" height="15.0" fill="rgb(156.417665513358,145.868768935743,145.868768935743)" rx="2" ry="2" />
<text  x="280.41" y="113.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (4,112 us, 0.04%)</title><rect x="344.2" y="199" width="0.4" height="15.0" fill="rgb(132.025894152825,162.228342812331,132.025894152825)" rx="2" ry="2" />
<text  x="347.18" y="209.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (1,465 us, 0.01%)</title><rect x="1189.9" y="183" width="0.1" height="15.0" fill="rgb(124.123451549313,124.123451549313,151.443248686964)" rx="2" ry="2" />
<text  x="1192.85" y="193.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (1,422 us, 0.01%)</title><rect x="282.5" y="199" width="0.2" height="15.0" fill="rgb(151.201425706616,151.201425706616,125.053063039753)" rx="2" ry="2" />
<text  x="285.54" y="209.5" ></text>
</g>
</g>
</svg>
