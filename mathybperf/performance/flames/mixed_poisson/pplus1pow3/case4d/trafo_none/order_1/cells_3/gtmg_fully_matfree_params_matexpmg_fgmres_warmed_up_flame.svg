<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="299" onload="init(evt)" viewBox="0 0 1200 299" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:13px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:18px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 13 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (1 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="299.0" fill="url(#background)"  />
<text id="title" x="600.00" y="26" >Firedrake example</text>
<text id="details" x="10.00" y="281" > </text>
<text id="unzoom" x="10.00" y="26" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="26" >Search</text>
<text id="ignorecase" x="1174.00" y="26" >ic</text>
<text id="matched" x="1090.00" y="281" > </text>
<g id="frames">
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (13,274 us, 0.53%)</title><rect x="48.6" y="119" width="6.2" height="15.0" fill="rgb(109.150661950274,109.150661950274,148.54528940973)" rx="2" ry="2" />
<text  x="51.61" y="129.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (4,447 us, 0.18%)</title><rect x="1133.3" y="199" width="2.1" height="15.0" fill="rgb(140.509389230341,140.509389230341,154.614720496195)" rx="2" ry="2" />
<text  x="1136.34" y="209.5" ></text>
</g>
<g >
<title>MatZeroInitial (20,369 us, 0.81%)</title><rect x="1122.3" y="167" width="9.5" height="15.0" fill="rgb(150.206171180318,150.206171180318,120.229906489232)" rx="2" ry="2" />
<text  x="1125.25" y="177.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (1,081 us, 0.04%)</title><rect x="1170.7" y="167" width="0.5" height="15.0" fill="rgb(154.304735014247,154.304735014247,140.092177376736)" rx="2" ry="2" />
<text  x="1173.67" y="177.5" ></text>
</g>
<g >
<title>firedrake.extrusion_utils.make_extruded_coords (70,915 us, 2.81%)</title><rect x="10.3" y="87" width="33.1" height="15.0" fill="rgb(147.990617114825,147.990617114825,109.492990633384)" rx="2" ry="2" />
<text  x="13.25" y="97.5" >fi..</text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (418 us, 0.02%)</title><rect x="1189.8" y="247" width="0.2" height="15.0" fill="rgb(146.561546303731,159.862073857532,146.561546303731)" rx="2" ry="2" />
<text  x="1192.80" y="257.5" ></text>
</g>
<g >
<title>firedrake.mesh._Facets.__init__ (539 us, 0.02%)</title><rect x="46.8" y="167" width="0.2" height="15.0" fill="rgb(142.087120344681,142.087120344681,154.920087808648)" rx="2" ry="2" />
<text  x="49.76" y="177.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_pyop2_kernel_uniform_extrusion (40,219 us, 1.59%)</title><rect x="24.6" y="119" width="18.8" height="15.0" fill="rgb(149.569319074138,149.569319074138,117.14362320544)" rx="2" ry="2" />
<text  x="27.61" y="129.5" ></text>
</g>
<g >
<title>firedrake.utility_meshes.RectangleMesh (2,073 us, 0.08%)</title><rect x="821.7" y="87" width="1.0" height="15.0" fill="rgb(154.584071271281,154.584071271281,141.445883853132)" rx="2" ry="2" />
<text  x="824.68" y="97.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_form1_cell_integral_otherwise (16,264 us, 0.64%)</title><rect x="1163.6" y="151" width="7.6" height="15.0" fill="rgb(150.910825476591,150.910825476591,123.644769617325)" rx="2" ry="2" />
<text  x="1166.57" y="161.5" ></text>
</g>
<g >
<title>CreateSparsity (92,540 us, 3.67%)</title><rect x="1078.5" y="167" width="43.3" height="15.0" fill="rgb(146.69381393441,129.027898206926,146.69381393441)" rx="2" ry="2" />
<text  x="1081.51" y="177.5" >Cre..</text>
</g>
<g >
<title>firedrake.functionspace.MixedFunctionSpace (2,619 us, 0.10%)</title><rect x="840.7" y="167" width="1.2" height="15.0" fill="rgb(121.420844905227,148.5165153458,148.5165153458)" rx="2" ry="2" />
<text  x="843.67" y="177.5" ></text>
</g>
<g >
<title>ParLoopExecute (40,664 us, 1.61%)</title><rect x="24.4" y="103" width="19.0" height="15.0" fill="rgb(138.403844401264,161.190071841655,138.403844401264)" rx="2" ry="2" />
<text  x="27.40" y="113.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.WithGeometry.split (642 us, 0.03%)</title><rect x="1135.4" y="199" width="0.3" height="15.0" fill="rgb(155.467797389368,138.586446651818,138.586446651818)" rx="2" ry="2" />
<text  x="1138.42" y="209.5" ></text>
</g>
<g >
<title>PetscBarrier (942 us, 0.04%)</title><rect x="55.7" y="71" width="0.4" height="15.0" fill="rgb(148.399070780071,148.399070780071,111.472419934191)" rx="2" ry="2" />
<text  x="58.66" y="81.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (7,341 us, 0.29%)</title><rect x="43.6" y="103" width="3.4" height="15.0" fill="rgb(156.05664445752,143.100940840987,143.100940840987)" rx="2" ry="2" />
<text  x="46.58" y="113.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (1,553 us, 0.06%)</title><rect x="1134.7" y="231" width="0.7" height="15.0" fill="rgb(114.881165140526,114.881165140526,149.654419059457)" rx="2" ry="2" />
<text  x="1137.69" y="241.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (2,296 us, 0.09%)</title><rect x="834.6" y="119" width="1.1" height="15.0" fill="rgb(135.202458795502,161.711227637942,135.202458795502)" rx="2" ry="2" />
<text  x="837.63" y="129.5" ></text>
</g>
<g >
<title>firedrake.functionspace.make_scalar_element (1,123 us, 0.04%)</title><rect x="1133.9" y="215" width="0.5" height="15.0" fill="rgb(152.873041326212,118.693316834294,118.693316834294)" rx="2" ry="2" />
<text  x="1136.92" y="225.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (1,265 us, 0.05%)</title><rect x="1156.0" y="183" width="0.6" height="15.0" fill="rgb(142.898659724442,142.898659724442,155.077159946666)" rx="2" ry="2" />
<text  x="1158.96" y="193.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (1,250 us, 0.05%)</title><rect x="841.1" y="199" width="0.6" height="15.0" fill="rgb(126.310705557731,126.310705557731,151.866588172464)" rx="2" ry="2" />
<text  x="844.12" y="209.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.action (3,727 us, 0.15%)</title><rect x="832.9" y="119" width="1.7" height="15.0" fill="rgb(148.135424848926,148.135424848926,110.19475119095)" rx="2" ry="2" />
<text  x="835.89" y="129.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (8,419 us, 0.33%)</title><rect x="1131.8" y="167" width="3.9" height="15.0" fill="rgb(108.848705931872,145.257071908263,145.257071908263)" rx="2" ry="2" />
<text  x="1134.78" y="177.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (940 us, 0.04%)</title><rect x="1189.6" y="183" width="0.4" height="15.0" fill="rgb(152.299250724604,152.299250724604,130.373291973079)" rx="2" ry="2" />
<text  x="1192.56" y="193.5" ></text>
</g>
<g >
<title>firedrake.functionspace.VectorFunctionSpace (7,673 us, 0.30%)</title><rect x="43.4" y="87" width="3.6" height="15.0" fill="rgb(121.791227843277,121.791227843277,150.991850550312)" rx="2" ry="2" />
<text  x="46.42" y="97.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (940 us, 0.04%)</title><rect x="1189.6" y="199" width="0.4" height="15.0" fill="rgb(120.151888595471,148.1875266729,148.1875266729)" rx="2" ry="2" />
<text  x="1192.56" y="209.5" ></text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (40,235 us, 1.59%)</title><rect x="1171.2" y="135" width="18.8" height="15.0" fill="rgb(155.92942427836,142.125586134093,142.125586134093)" rx="2" ry="2" />
<text  x="1174.18" y="145.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.LinearVariationalProblem.__init__ (20,110 us, 0.80%)</title><rect x="822.7" y="71" width="9.4" height="15.0" fill="rgb(120.697402490788,120.697402490788,150.780142417572)" rx="2" ry="2" />
<text  x="825.65" y="81.5" ></text>
</g>
<g >
<title>firedrake.mesh.ExtrudedMeshTopology.__init__ (702 us, 0.03%)</title><rect x="47.0" y="87" width="0.3" height="15.0" fill="rgb(152.704829092372,152.704829092372,132.338787139958)" rx="2" ry="2" />
<text  x="50.01" y="97.5" ></text>
</g>
<g >
<title>HybridOperatorAssembly (499,220 us, 19.79%)</title><rect x="844.7" y="151" width="233.6" height="15.0" fill="rgb(156.044226850022,143.0057391835,143.0057391835)" rx="2" ry="2" />
<text  x="847.74" y="161.5" >HybridOperatorAssembly</text>
</g>
<g >
<title>MatAssemblyEnd (970 us, 0.04%)</title><rect x="1121.8" y="167" width="0.5" height="15.0" fill="rgb(144.51979230504,160.194452415459,144.51979230504)" rx="2" ry="2" />
<text  x="1124.80" y="177.5" ></text>
</g>
<g >
<title>SNESSolve (757,441 us, 30.02%)</title><rect x="835.7" y="103" width="354.3" height="15.0" fill="rgb(136.243974954707,161.541678495745,136.243974954707)" rx="2" ry="2" />
<text  x="838.71" y="113.5" >SNESSolve</text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.local_to_global_map (876 us, 0.03%)</title><rect x="1077.8" y="167" width="0.5" height="15.0" fill="rgb(147.040716268652,155.158704217799,155.158704217799)" rx="2" ry="2" />
<text  x="1080.84" y="177.5" ></text>
</g>
<g >
<title>firedrake.mesh._Facets.__init__ (673 us, 0.03%)</title><rect x="821.4" y="167" width="0.3" height="15.0" fill="rgb(143.582916419372,121.05622332464,143.582916419372)" rx="2" ry="2" />
<text  x="824.37" y="177.5" ></text>
</g>
<g >
<title>firedrake (2,522,712 us, 100.00%)</title><rect x="10.0" y="55" width="1180.0" height="15.0" fill="rgb(156.111921288005,143.524729874706,143.524729874706)" rx="2" ry="2" />
<text  x="13.00" y="65.5" >firedrake</text>
</g>
<g >
<title>firedrake.utility_meshes.SquareMesh (2,073 us, 0.08%)</title><rect x="821.7" y="71" width="1.0" height="15.0" fill="rgb(141.013517100833,160.76524140219,141.013517100833)" rx="2" ry="2" />
<text  x="824.68" y="81.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (5,763 us, 0.23%)</title><rect x="842.0" y="183" width="2.7" height="15.0" fill="rgb(149.894047521776,159.319573659246,149.894047521776)" rx="2" ry="2" />
<text  x="845.05" y="193.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (8,717 us, 0.35%)</title><rect x="840.7" y="151" width="4.0" height="15.0" fill="rgb(126.739439994278,126.739439994278,151.949569031151)" rx="2" ry="2" />
<text  x="843.67" y="161.5" ></text>
</g>
<g >
<title>firedrake.mesh.make_mesh_from_coordinates (872 us, 0.03%)</title><rect x="47.3" y="87" width="0.4" height="15.0" fill="rgb(140.637585228617,113.508812148332,140.637585228617)" rx="2" ry="2" />
<text  x="50.34" y="97.5" ></text>
</g>
<g >
<title>ParLoopExecute (28,005 us, 1.11%)</title><rect x="1158.1" y="135" width="13.1" height="15.0" fill="rgb(146.933760694411,159.801480817189,146.933760694411)" rx="2" ry="2" />
<text  x="1161.08" y="145.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (13,274 us, 0.53%)</title><rect x="48.6" y="103" width="6.2" height="15.0" fill="rgb(132.190764160254,162.201503508796,132.190764160254)" rx="2" ry="2" />
<text  x="51.61" y="113.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (5,335 us, 0.21%)</title><rect x="819.2" y="103" width="2.5" height="15.0" fill="rgb(141.133640244848,114.779953127424,141.133640244848)" rx="2" ry="2" />
<text  x="822.19" y="113.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (482,739 us, 19.14%)</title><rect x="852.0" y="199" width="225.8" height="15.0" fill="rgb(155.486670359071,138.731139419547,138.731139419547)" rx="2" ry="2" />
<text  x="855.04" y="209.5" >pyop2.global_kernel.GlobalK..</text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (14,176 us, 0.56%)</title><rect x="48.2" y="87" width="6.6" height="15.0" fill="rgb(140.60924230435,160.831053578362,140.60924230435)" rx="2" ry="2" />
<text  x="51.18" y="97.5" ></text>
</g>
<g >
<title>firedrake.mesh._from_cell_list (599 us, 0.02%)</title><rect x="822.4" y="103" width="0.3" height="15.0" fill="rgb(151.980583917139,151.980583917139,128.828983598442)" rx="2" ry="2" />
<text  x="825.37" y="113.5" ></text>
</g>
<g >
<title>perfsolve (757,441 us, 30.02%)</title><rect x="835.7" y="71" width="354.3" height="15.0" fill="rgb(149.253377306794,149.253377306794,115.612520794462)" rx="2" ry="2" />
<text  x="838.71" y="81.5" >perfsolve</text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (418 us, 0.02%)</title><rect x="1189.8" y="215" width="0.2" height="15.0" fill="rgb(156.388892503742,145.648175862019,145.648175862019)" rx="2" ry="2" />
<text  x="1192.80" y="225.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (1,694 us, 0.07%)</title><rect x="840.9" y="183" width="0.8" height="15.0" fill="rgb(110.772327414537,145.755788588954,145.755788588954)" rx="2" ry="2" />
<text  x="843.91" y="193.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (8,791 us, 0.35%)</title><rect x="827.4" y="103" width="4.2" height="15.0" fill="rgb(114.139993758266,114.139993758266,149.510966533858)" rx="2" ry="2" />
<text  x="830.44" y="113.5" ></text>
</g>
<g >
<title>CreateMesh (1,811 us, 0.07%)</title><rect x="54.8" y="71" width="0.9" height="15.0" fill="rgb(126.287045885982,126.287045885982,151.862008881158)" rx="2" ry="2" />
<text  x="57.82" y="81.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (15,111 us, 0.60%)</title><rect x="47.7" y="71" width="7.1" height="15.0" fill="rgb(140.944270113599,140.944270113599,154.698890989729)" rx="2" ry="2" />
<text  x="50.75" y="81.5" ></text>
</g>
<g >
<title>CreateMesh (455 us, 0.02%)</title><rect x="822.2" y="119" width="0.2" height="15.0" fill="rgb(149.606676016259,159.366355067121,149.606676016259)" rx="2" ry="2" />
<text  x="825.16" y="129.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.solve (757,441 us, 30.02%)</title><rect x="835.7" y="87" width="354.3" height="15.0" fill="rgb(147.879081078051,147.879081078051,156.04111246672)" rx="2" ry="2" />
<text  x="838.71" y="97.5" >firedrake.variational_solver.NonlinearVariat..</text>
</g>
<g >
<title>CreateExtMesh (80,699 us, 3.20%)</title><rect x="10.0" y="71" width="37.7" height="15.0" fill="rgb(129.31270901384,150.562554188773,150.562554188773)" rx="2" ry="2" />
<text  x="13.00" y="81.5" >Cr..</text>
</g>
<g >
<title>firedrake.matrix_free.operators.ImplicitMatrixContext.__init__ (6,023 us, 0.24%)</title><rect x="832.9" y="103" width="2.8" height="15.0" fill="rgb(152.545316448812,116.180759440894,116.180759440894)" rx="2" ry="2" />
<text  x="835.89" y="113.5" ></text>
</g>
<g >
<title>all (2,522,712 us, 100%)</title><rect x="10.0" y="39" width="1180.0" height="15.0" fill="rgb(143.566597359417,154.258006722812,154.258006722812)" rx="2" ry="2" />
<text  x="13.00" y="49.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (1,250 us, 0.05%)</title><rect x="841.1" y="231" width="0.6" height="15.0" fill="rgb(152.754852715345,117.787204150976,117.787204150976)" rx="2" ry="2" />
<text  x="844.12" y="241.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (39,670 us, 1.57%)</title><rect x="24.9" y="135" width="18.5" height="15.0" fill="rgb(115.599836615501,147.007365048463,147.007365048463)" rx="2" ry="2" />
<text  x="27.87" y="145.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.derivative (1,079 us, 0.04%)</title><rect x="831.6" y="103" width="0.5" height="15.0" fill="rgb(142.830155479588,160.46950957309,142.830155479588)" rx="2" ry="2" />
<text  x="834.56" y="113.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (5,335 us, 0.21%)</title><rect x="819.2" y="119" width="2.5" height="15.0" fill="rgb(150.8417615022,150.8417615022,123.310074972199)" rx="2" ry="2" />
<text  x="822.19" y="129.5" ></text>
</g>
<g >
<title>firedrake.functionspace.VectorFunctionSpace (5,335 us, 0.21%)</title><rect x="819.2" y="71" width="2.5" height="15.0" fill="rgb(148.262841297476,148.262841297476,110.812230903153)" rx="2" ry="2" />
<text  x="822.19" y="81.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.boundary_nodes (430 us, 0.02%)</title><rect x="1078.1" y="183" width="0.2" height="15.0" fill="rgb(112.608002954897,112.608002954897,149.214452184819)" rx="2" ry="2" />
<text  x="1081.05" y="193.5" ></text>
</g>
<g >
<title>firedrake.parloops.par_loop (5,475 us, 0.22%)</title><rect x="1154.0" y="151" width="2.6" height="15.0" fill="rgb(151.849580483471,142.239549988894,151.849580483471)" rx="2" ry="2" />
<text  x="1156.99" y="161.5" ></text>
</g>
<g >
<title>firedrake.assemble.allocate_matrix (6,023 us, 0.24%)</title><rect x="832.9" y="87" width="2.8" height="15.0" fill="rgb(127.840603778754,162.909669152296,127.840603778754)" rx="2" ry="2" />
<text  x="835.89" y="97.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.__init__ (7,794 us, 0.31%)</title><rect x="832.1" y="71" width="3.6" height="15.0" fill="rgb(108.700062569048,145.218534740124,145.218534740124)" rx="2" ry="2" />
<text  x="835.06" y="81.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_slate_loopy_knl_0 (482,739 us, 19.14%)</title><rect x="852.0" y="183" width="225.8" height="15.0" fill="rgb(113.195969979601,146.384140365082,146.384140365082)" rx="2" ry="2" />
<text  x="855.04" y="193.5" >Parloop_Cells_wrap_slate_lo..</text>
</g>
<g >
<title>Parloop_Cells_wrap_form0_cell_integral_otherwise (11,324 us, 0.45%)</title><rect x="1158.3" y="151" width="5.3" height="15.0" fill="rgb(154.128829586913,128.321026833,128.321026833)" rx="2" ry="2" />
<text  x="1161.28" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (5,763 us, 0.23%)</title><rect x="842.0" y="167" width="2.7" height="15.0" fill="rgb(137.066956121905,137.066956121905,153.948443120369)" rx="2" ry="2" />
<text  x="845.05" y="177.5" ></text>
</g>
<g >
<title>firedrake.interpolation.make_interpolator (38,239 us, 1.52%)</title><rect x="1136.1" y="151" width="17.9" height="15.0" fill="rgb(148.209472356816,148.209472356816,110.553596806108)" rx="2" ry="2" />
<text  x="1139.10" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspace.MixedFunctionSpace (946 us, 0.04%)</title><rect x="818.7" y="71" width="0.5" height="15.0" fill="rgb(154.84075173049,154.84075173049,142.689796847758)" rx="2" ry="2" />
<text  x="821.75" y="81.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (1,250 us, 0.05%)</title><rect x="841.1" y="215" width="0.6" height="15.0" fill="rgb(129.354561582966,162.663210905099,129.354561582966)" rx="2" ry="2" />
<text  x="844.12" y="225.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (418 us, 0.02%)</title><rect x="1189.8" y="231" width="0.2" height="15.0" fill="rgb(149.326803590168,135.774934199804,149.326803590168)" rx="2" ry="2" />
<text  x="1192.80" y="241.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (1,553 us, 0.06%)</title><rect x="1134.7" y="247" width="0.7" height="15.0" fill="rgb(109.128485866945,145.329607446986,145.329607446986)" rx="2" ry="2" />
<text  x="1137.69" y="257.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.action (10,240 us, 0.41%)</title><rect x="822.7" y="87" width="4.7" height="15.0" fill="rgb(123.302130434505,149.004256038575,149.004256038575)" rx="2" ry="2" />
<text  x="825.65" y="97.5" ></text>
</g>
<g >
<title>firedrake.mesh.MeshTopology._facets (2,289 us, 0.09%)</title><rect x="820.6" y="151" width="1.1" height="15.0" fill="rgb(143.883006103234,121.825203139537,143.883006103234)" rx="2" ry="2" />
<text  x="823.61" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (6,991 us, 0.28%)</title><rect x="43.7" y="135" width="3.3" height="15.0" fill="rgb(139.292405966389,153.149883028323,153.149883028323)" rx="2" ry="2" />
<text  x="46.74" y="145.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (6,991 us, 0.28%)</title><rect x="43.7" y="151" width="3.3" height="15.0" fill="rgb(156.071677865643,143.216196969933,143.216196969933)" rx="2" ry="2" />
<text  x="46.74" y="161.5" ></text>
</g>
<g >
<title>ParLoopExecute (482,739 us, 19.14%)</title><rect x="852.0" y="167" width="225.8" height="15.0" fill="rgb(134.296630658685,134.296630658685,153.412251095229)" rx="2" ry="2" />
<text  x="855.04" y="177.5" >ParLoopExecute</text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (2,815 us, 0.11%)</title><rect x="1188.7" y="167" width="1.3" height="15.0" fill="rgb(136.320378263256,102.445969299593,136.320378263256)" rx="2" ry="2" />
<text  x="1191.68" y="177.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (5,057 us, 0.20%)</title><rect x="1187.6" y="151" width="2.4" height="15.0" fill="rgb(149.215766781265,159.429991454213,149.215766781265)" rx="2" ry="2" />
<text  x="1190.63" y="161.5" ></text>
</g>
<g >
<title>PCSetUp (685,929 us, 27.19%)</title><rect x="835.7" y="119" width="320.9" height="15.0" fill="rgb(111.243612060466,145.877973497158,145.877973497158)" rx="2" ry="2" />
<text  x="838.71" y="129.5" >PCSetUp</text>
</g>
<g >
<title>firedrake.function.Function.split (767 us, 0.03%)</title><rect x="831.7" y="119" width="0.4" height="15.0" fill="rgb(112.832965396063,112.832965396063,149.257993302464)" rx="2" ry="2" />
<text  x="834.70" y="129.5" ></text>
</g>
<g >
<title>CreateMesh (439 us, 0.02%)</title><rect x="55.1" y="87" width="0.2" height="15.0" fill="rgb(116.80436570021,147.319650366721,147.319650366721)" rx="2" ry="2" />
<text  x="58.10" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (5,335 us, 0.21%)</title><rect x="819.2" y="135" width="2.5" height="15.0" fill="rgb(151.581338014539,151.581338014539,126.894176531996)" rx="2" ry="2" />
<text  x="822.19" y="145.5" ></text>
</g>
<g >
<title>firedrake.functionspace.make_scalar_element (335 us, 0.01%)</title><rect x="841.9" y="167" width="0.1" height="15.0" fill="rgb(148.394236341015,148.394236341015,111.448991498763)" rx="2" ry="2" />
<text  x="844.89" y="177.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (8,419 us, 0.33%)</title><rect x="1131.8" y="151" width="3.9" height="15.0" fill="rgb(155.224162670839,136.718580476434,136.718580476434)" rx="2" ry="2" />
<text  x="1134.78" y="161.5" ></text>
</g>
<g >
<title>firedrake.assemble.allocate_matrix (114,434 us, 4.54%)</title><rect x="1078.3" y="151" width="53.5" height="15.0" fill="rgb(113.345752734833,113.345752734833,149.357242464806)" rx="2" ry="2" />
<text  x="1081.25" y="161.5" >fire..</text>
</g>
<g >
<title>firedrake.function.Function.__init__ (824 us, 0.03%)</title><rect x="1135.7" y="151" width="0.4" height="15.0" fill="rgb(115.49957285147,146.98137073927,146.98137073927)" rx="2" ry="2" />
<text  x="1138.72" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (402 us, 0.02%)</title><rect x="841.7" y="183" width="0.2" height="15.0" fill="rgb(146.888606805635,159.808831450246,146.888606805635)" rx="2" ry="2" />
<text  x="844.70" y="193.5" ></text>
</g>
<g >
<title>firedrake.functionspace.make_scalar_element (407 us, 0.02%)</title><rect x="48.0" y="87" width="0.2" height="15.0" fill="rgb(133.664666358096,151.690839426173,151.690839426173)" rx="2" ry="2" />
<text  x="50.99" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (387 us, 0.02%)</title><rect x="819.0" y="103" width="0.2" height="15.0" fill="rgb(131.758068314956,162.271942367333,131.758068314956)" rx="2" ry="2" />
<text  x="822.01" y="113.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalProblem.__init__ (9,870 us, 0.39%)</title><rect x="827.4" y="87" width="4.7" height="15.0" fill="rgb(142.630072589396,160.502081206377,142.630072589396)" rx="2" ry="2" />
<text  x="830.44" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (2,081 us, 0.08%)</title><rect x="1134.4" y="215" width="1.0" height="15.0" fill="rgb(132.606543759025,151.416511344933,151.416511344933)" rx="2" ry="2" />
<text  x="1137.44" y="225.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (5,763 us, 0.23%)</title><rect x="842.0" y="199" width="2.7" height="15.0" fill="rgb(114.812619920803,146.803271831319,146.803271831319)" rx="2" ry="2" />
<text  x="845.05" y="209.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (5,335 us, 0.21%)</title><rect x="819.2" y="87" width="2.5" height="15.0" fill="rgb(142.061212269005,160.594686374813,142.061212269005)" rx="2" ry="2" />
<text  x="822.19" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (6,991 us, 0.28%)</title><rect x="43.7" y="119" width="3.3" height="15.0" fill="rgb(153.592813660193,153.592813660193,136.642096968626)" rx="2" ry="2" />
<text  x="46.74" y="129.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (6,300 us, 0.25%)</title><rect x="1132.8" y="183" width="2.9" height="15.0" fill="rgb(110.208718477261,145.609667753364,145.609667753364)" rx="2" ry="2" />
<text  x="1135.77" y="193.5" ></text>
</g>
<g >
<title>SNESFunctionEval (71,512 us, 2.83%)</title><rect x="1156.6" y="119" width="33.4" height="15.0" fill="rgb(153.336415455058,153.336415455058,135.399551820665)" rx="2" ry="2" />
<text  x="1159.55" y="129.5" >SN..</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (1,515 us, 0.06%)</title><rect x="1162.9" y="167" width="0.7" height="15.0" fill="rgb(155.314023333087,137.407512220334,137.407512220334)" rx="2" ry="2" />
<text  x="1165.86" y="177.5" ></text>
</g>
<g >
<title>Log_Event_form1_cell_integral_otherwise (14,836 us, 0.59%)</title><rect x="1163.7" y="167" width="7.0" height="15.0" fill="rgb(141.764105911148,153.790694125112,153.790694125112)" rx="2" ry="2" />
<text  x="1166.73" y="177.5" ></text>
</g>
<g >
<title>Log_Event_form0_cell_integral_otherwise (9,324 us, 0.37%)</title><rect x="1158.5" y="167" width="4.4" height="15.0" fill="rgb(156.466246365764,146.241222137524,146.241222137524)" rx="2" ry="2" />
<text  x="1161.50" y="177.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (387 us, 0.02%)</title><rect x="819.0" y="119" width="0.2" height="15.0" fill="rgb(154.710931262874,132.7838063487,132.7838063487)" rx="2" ry="2" />
<text  x="822.01" y="129.5" ></text>
</g>
<g >
<title>firedrake.__init__ (1,630,450 us, 64.63%)</title><rect x="56.1" y="71" width="762.6" height="15.0" fill="rgb(148.956744656827,148.956744656827,114.174993336932)" rx="2" ry="2" />
<text  x="59.10" y="81.5" >firedrake.__init__</text>
</g>
<g >
<title>CreateMesh (809 us, 0.03%)</title><rect x="822.0" y="103" width="0.4" height="15.0" fill="rgb(114.937594436982,146.83567263181,146.83567263181)" rx="2" ry="2" />
<text  x="825.00" y="113.5" ></text>
</g>
<g >
<title>ParLoopExecute (1,265 us, 0.05%)</title><rect x="1156.0" y="167" width="0.6" height="15.0" fill="rgb(138.942245385171,138.942245385171,154.311402332614)" rx="2" ry="2" />
<text  x="1158.96" y="177.5" ></text>
</g>
<g >
<title>Mesh: numbering (764 us, 0.03%)</title><rect x="55.3" y="87" width="0.4" height="15.0" fill="rgb(133.639851282187,161.965605605225,133.639851282187)" rx="2" ry="2" />
<text  x="58.30" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (387 us, 0.02%)</title><rect x="819.0" y="87" width="0.2" height="15.0" fill="rgb(156.441489472458,146.051419288848,146.051419288848)" rx="2" ry="2" />
<text  x="822.01" y="97.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (1,265 us, 0.05%)</title><rect x="1156.0" y="199" width="0.6" height="15.0" fill="rgb(133.983776461424,96.4584271823986,133.983776461424)" rx="2" ry="2" />
<text  x="1158.96" y="209.5" ></text>
</g>
<g >
<title>HybridInit (685,929 us, 27.19%)</title><rect x="835.7" y="135" width="320.9" height="15.0" fill="rgb(149.542801890411,149.542801890411,117.015116853531)" rx="2" ry="2" />
<text  x="838.71" y="145.5" >HybridInit</text>
</g>
</g>
</svg>
