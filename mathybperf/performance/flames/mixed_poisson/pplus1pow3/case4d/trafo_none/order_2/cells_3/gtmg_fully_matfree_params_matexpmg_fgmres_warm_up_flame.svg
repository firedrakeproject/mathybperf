<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="299" onload="init(evt)" viewBox="0 0 1200 299" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:13px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:18px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 13 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (1 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="299.0" fill="url(#background)"  />
<text id="title" x="600.00" y="26" >Firedrake example</text>
<text id="details" x="10.00" y="281" > </text>
<text id="unzoom" x="10.00" y="26" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="26" >Search</text>
<text id="ignorecase" x="1174.00" y="26" >ic</text>
<text id="matched" x="1090.00" y="281" > </text>
<g id="frames">
<g >
<title>firedrake.ufl_expr.action (3,728 us, 0.03%)</title><rect x="265.3" y="119" width="0.3" height="15.0" fill="rgb(132.64238958375,132.64238958375,153.092075403306)" rx="2" ry="2" />
<text  x="268.25" y="129.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (5,410 us, 0.05%)</title><rect x="262.1" y="103" width="0.5" height="15.0" fill="rgb(149.813999652643,149.813999652643,118.329382932039)" rx="2" ry="2" />
<text  x="265.05" y="113.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (8,351 us, 0.07%)</title><rect x="267.8" y="183" width="0.8" height="15.0" fill="rgb(141.846624435655,160.629619277917,141.846624435655)" rx="2" ry="2" />
<text  x="270.76" y="193.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (5,724 us, 0.05%)</title><rect x="1189.3" y="151" width="0.5" height="15.0" fill="rgb(138.246195466602,161.215735621716,138.246195466602)" rx="2" ry="2" />
<text  x="1192.27" y="161.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (14,085 us, 0.12%)</title><rect x="99.7" y="71" width="1.5" height="15.0" fill="rgb(153.49845623642,123.488164479221,123.488164479221)" rx="2" ry="2" />
<text  x="102.75" y="81.5" ></text>
</g>
<g >
<title>Log_Event_form0_cell_integral_otherwise (14,223 us, 0.12%)</title><rect x="455.7" y="167" width="1.4" height="15.0" fill="rgb(135.499085336226,161.662939596428,135.499085336226)" rx="2" ry="2" />
<text  x="458.71" y="177.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (9,973 us, 0.08%)</title><rect x="264.0" y="103" width="0.9" height="15.0" fill="rgb(143.152735736413,143.152735736413,155.126335948983)" rx="2" ry="2" />
<text  x="266.95" y="113.5" ></text>
</g>
<g >
<title>ParLoopExecute (405,968 us, 3.44%)</title><rect x="276.1" y="167" width="40.5" height="15.0" fill="rgb(154.947928653305,134.600786342002,134.600786342002)" rx="2" ry="2" />
<text  x="279.09" y="177.5" >Par..</text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalProblem.__init__ (11,324 us, 0.10%)</title><rect x="263.8" y="87" width="1.1" height="15.0" fill="rgb(156.583598394657,147.140921025705,147.140921025705)" rx="2" ry="2" />
<text  x="266.82" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (1,576 us, 0.01%)</title><rect x="267.6" y="215" width="0.2" height="15.0" fill="rgb(151.089463884886,151.089463884886,124.510478826756)" rx="2" ry="2" />
<text  x="270.60" y="225.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (8,499 us, 0.07%)</title><rect x="381.3" y="167" width="0.8" height="15.0" fill="rgb(113.348498076023,146.423684686376,146.423684686376)" rx="2" ry="2" />
<text  x="384.25" y="177.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (14,085 us, 0.12%)</title><rect x="99.7" y="87" width="1.5" height="15.0" fill="rgb(143.908230842103,160.294008932681,143.908230842103)" rx="2" ry="2" />
<text  x="102.75" y="97.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (1,506 us, 0.01%)</title><rect x="1189.7" y="183" width="0.1" height="15.0" fill="rgb(139.369035562871,153.169749960744,153.169749960744)" rx="2" ry="2" />
<text  x="1192.69" y="193.5" ></text>
</g>
<g >
<title>firedrake.utility_meshes.SquareMesh (2,073 us, 0.02%)</title><rect x="262.6" y="71" width="0.2" height="15.0" fill="rgb(156.457193783185,146.171819004415,146.171819004415)" rx="2" ry="2" />
<text  x="265.60" y="81.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (14,085 us, 0.12%)</title><rect x="99.7" y="119" width="1.5" height="15.0" fill="rgb(154.243677670341,129.201528805947,129.201528805947)" rx="2" ry="2" />
<text  x="102.75" y="129.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (858,986 us, 7.27%)</title><rect x="13.4" y="135" width="85.8" height="15.0" fill="rgb(149.072478570602,159.453317441995,149.072478570602)" rx="2" ry="2" />
<text  x="16.35" y="145.5" >pyop2.glo..</text>
</g>
<g >
<title>firedrake.ufl_expr.action (10,151 us, 0.09%)</title><rect x="262.8" y="87" width="1.0" height="15.0" fill="rgb(136.857885796173,136.857885796173,153.907977896033)" rx="2" ry="2" />
<text  x="265.80" y="97.5" ></text>
</g>
<g >
<title>CreateExtMesh (898,518 us, 7.61%)</title><rect x="10.0" y="71" width="89.7" height="15.0" fill="rgb(132.906311750934,93.6974238617687,132.906311750934)" rx="2" ry="2" />
<text  x="13.00" y="81.5" >CreateExt..</text>
</g>
<g >
<title>firedrake.utility_meshes.RectangleMesh (2,073 us, 0.02%)</title><rect x="262.6" y="87" width="0.2" height="15.0" fill="rgb(125.957233015364,149.692615966946,149.692615966946)" rx="2" ry="2" />
<text  x="265.60" y="97.5" ></text>
</g>
<g >
<title>PCSetUp (1,894,858 us, 16.04%)</title><rect x="265.9" y="119" width="189.2" height="15.0" fill="rgb(109.391601329597,109.391601329597,148.591922837986)" rx="2" ry="2" />
<text  x="268.87" y="129.5" >PCSetUp</text>
</g>
<g >
<title>firedrake.functionspace.VectorFunctionSpace (5,410 us, 0.05%)</title><rect x="262.1" y="71" width="0.5" height="15.0" fill="rgb(117.849567684266,117.849567684266,150.228948584051)" rx="2" ry="2" />
<text  x="265.05" y="81.5" ></text>
</g>
<g >
<title>firedrake.functionspace.VectorFunctionSpace (5,973 us, 0.05%)</title><rect x="99.2" y="87" width="0.5" height="15.0" fill="rgb(137.099979620873,161.402328898928,137.099979620873)" rx="2" ry="2" />
<text  x="102.15" y="97.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_pyop2_kernel_uniform_extrusion (858,986 us, 7.27%)</title><rect x="13.4" y="119" width="85.8" height="15.0" fill="rgb(133.479259586377,133.479259586377,153.254050242525)" rx="2" ry="2" />
<text  x="16.35" y="129.5" >Parloop_C..</text>
</g>
<g >
<title>firedrake.parloops.par_loop (679,207 us, 5.75%)</title><rect x="387.3" y="151" width="67.8" height="15.0" fill="rgb(139.152291735229,139.152291735229,154.352056464883)" rx="2" ry="2" />
<text  x="390.29" y="161.5" >firedr..</text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (5,410 us, 0.05%)</title><rect x="262.1" y="119" width="0.5" height="15.0" fill="rgb(127.902284170494,162.899628158292,127.902284170494)" rx="2" ry="2" />
<text  x="265.05" y="129.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (1,576 us, 0.01%)</title><rect x="267.6" y="199" width="0.2" height="15.0" fill="rgb(156.436049214508,146.00971064456,146.00971064456)" rx="2" ry="2" />
<text  x="270.60" y="209.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (4,278 us, 0.04%)</title><rect x="381.7" y="199" width="0.4" height="15.0" fill="rgb(143.190744592953,154.160563412988,154.160563412988)" rx="2" ry="2" />
<text  x="384.68" y="209.5" ></text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (1,233,524 us, 10.44%)</title><rect x="1066.6" y="135" width="123.2" height="15.0" fill="rgb(138.189045577107,107.234429291338,138.189045577107)" rx="2" ry="2" />
<text  x="1069.63" y="145.5" >firedrake.tsfc..</text>
</g>
<g >
<title>firedrake.functionspace.MixedFunctionSpace (1,576 us, 0.01%)</title><rect x="267.6" y="167" width="0.2" height="15.0" fill="rgb(128.654750742727,128.654750742727,152.320274337302)" rx="2" ry="2" />
<text  x="270.60" y="177.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (1,829 us, 0.02%)</title><rect x="381.9" y="231" width="0.2" height="15.0" fill="rgb(141.331813324133,160.713425737932,141.331813324133)" rx="2" ry="2" />
<text  x="384.92" y="241.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (5,973 us, 0.05%)</title><rect x="99.2" y="119" width="0.5" height="15.0" fill="rgb(143.128352405024,160.420965887554,143.128352405024)" rx="2" ry="2" />
<text  x="102.15" y="129.5" ></text>
</g>
<g >
<title>MatZeroInitial (104,532 us, 0.88%)</title><rect x="370.8" y="167" width="10.5" height="15.0" fill="rgb(152.707384800422,117.423283469901,117.423283469901)" rx="2" ry="2" />
<text  x="373.81" y="177.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (673,599 us, 5.70%)</title><rect x="387.9" y="183" width="67.2" height="15.0" fill="rgb(149.981154658957,137.451708813578,149.981154658957)" rx="2" ry="2" />
<text  x="390.85" y="193.5" >Parloo..</text>
</g>
<g >
<title>CreateMesh (1,853 us, 0.02%)</title><rect x="101.2" y="71" width="0.1" height="15.0" fill="rgb(104.412374362252,144.106911871695,144.106911871695)" rx="2" ry="2" />
<text  x="104.16" y="81.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (673,599 us, 5.70%)</title><rect x="387.9" y="199" width="67.2" height="15.0" fill="rgb(151.303442083914,151.303442083914,125.547450098966)" rx="2" ry="2" />
<text  x="390.85" y="209.5" >pyop2...</text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (2,431 us, 0.02%)</title><rect x="265.6" y="119" width="0.3" height="15.0" fill="rgb(136.432104901634,136.432104901634,153.825568690639)" rx="2" ry="2" />
<text  x="268.62" y="129.5" ></text>
</g>
<g >
<title>HybridInit (1,894,858 us, 16.04%)</title><rect x="265.9" y="135" width="189.2" height="15.0" fill="rgb(149.66947562812,149.66947562812,117.628997274738)" rx="2" ry="2" />
<text  x="268.87" y="145.5" >HybridInit</text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (8,351 us, 0.07%)</title><rect x="267.8" y="167" width="0.8" height="15.0" fill="rgb(155.437828727718,138.356686912501,138.356686912501)" rx="2" ry="2" />
<text  x="270.76" y="177.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (8,499 us, 0.07%)</title><rect x="381.3" y="151" width="0.8" height="15.0" fill="rgb(155.888104508367,141.808801230811,141.808801230811)" rx="2" ry="2" />
<text  x="384.25" y="161.5" ></text>
</g>
<g >
<title>firedrake.__init__ (1,608,968 us, 13.62%)</title><rect x="101.3" y="71" width="160.8" height="15.0" fill="rgb(155.426703994817,138.271397293598,138.271397293598)" rx="2" ry="2" />
<text  x="104.34" y="81.5" >firedrake.__init__</text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (1,829 us, 0.02%)</title><rect x="381.9" y="215" width="0.2" height="15.0" fill="rgb(133.735544084253,133.735544084253,153.303653693726)" rx="2" ry="2" />
<text  x="384.92" y="225.5" ></text>
</g>
<g >
<title>firedrake (11,813,468 us, 100.00%)</title><rect x="10.0" y="55" width="1180.0" height="15.0" fill="rgb(143.462739825112,160.366530726145,143.462739825112)" rx="2" ry="2" />
<text  x="13.00" y="65.5" >firedrake</text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (6,273 us, 0.05%)</title><rect x="381.5" y="183" width="0.6" height="15.0" fill="rgb(124.470961003635,149.307286186128,149.307286186128)" rx="2" ry="2" />
<text  x="384.48" y="193.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.__init__ (9,211 us, 0.08%)</title><rect x="264.9" y="71" width="1.0" height="15.0" fill="rgb(112.300708117169,146.152035437785,146.152035437785)" rx="2" ry="2" />
<text  x="267.95" y="81.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_form0_cell_integral_otherwise (3,028,881 us, 25.64%)</title><rect x="455.6" y="151" width="302.5" height="15.0" fill="rgb(140.801733474225,160.799717806522,140.801733474225)" rx="2" ry="2" />
<text  x="458.58" y="161.5" >Parloop_Cells_wrap_form0_cell_integra..</text>
</g>
<g >
<title>HybridOperatorAssembly (489,433 us, 4.14%)</title><rect x="268.6" y="151" width="48.9" height="15.0" fill="rgb(128.500042186032,128.500042186032,152.290330745684)" rx="2" ry="2" />
<text  x="271.60" y="161.5" >Hybr..</text>
</g>
<g >
<title>perfsolve (9,251,875 us, 78.32%)</title><rect x="265.9" y="71" width="924.1" height="15.0" fill="rgb(153.878345191728,153.878345191728,138.025826698372)" rx="2" ry="2" />
<text  x="268.87" y="81.5" >perfsolve</text>
</g>
<g >
<title>all (11,813,468 us, 100%)</title><rect x="10.0" y="39" width="1180.0" height="15.0" fill="rgb(154.229545854486,129.093184884395,129.093184884395)" rx="2" ry="2" />
<text  x="13.00" y="49.5" ></text>
</g>
<g >
<title>ParLoopExecute (673,599 us, 5.70%)</title><rect x="387.9" y="167" width="67.2" height="15.0" fill="rgb(133.841306142724,151.736634925891,151.736634925891)" rx="2" ry="2" />
<text  x="390.85" y="177.5" >ParLoo..</text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (5,410 us, 0.05%)</title><rect x="262.1" y="135" width="0.5" height="15.0" fill="rgb(107.545592062998,144.919227571888,144.919227571888)" rx="2" ry="2" />
<text  x="265.05" y="145.5" ></text>
</g>
<g >
<title>firedrake.interpolation.make_interpolator (51,959 us, 0.44%)</title><rect x="382.1" y="151" width="5.2" height="15.0" fill="rgb(152.88732708373,152.88732708373,133.223200482693)" rx="2" ry="2" />
<text  x="385.10" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (8,351 us, 0.07%)</title><rect x="267.8" y="199" width="0.8" height="15.0" fill="rgb(151.346949229062,151.346949229062,125.758292417764)" rx="2" ry="2" />
<text  x="270.76" y="209.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (3,171 us, 0.03%)</title><rect x="317.2" y="183" width="0.3" height="15.0" fill="rgb(153.844749925079,126.143082758937,126.143082758937)" rx="2" ry="2" />
<text  x="320.17" y="193.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (5,973 us, 0.05%)</title><rect x="99.2" y="135" width="0.5" height="15.0" fill="rgb(142.612771592207,160.50489764778,142.612771592207)" rx="2" ry="2" />
<text  x="102.15" y="145.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (405,968 us, 3.44%)</title><rect x="276.1" y="199" width="40.5" height="15.0" fill="rgb(149.641956116748,149.641956116748,117.495633488856)" rx="2" ry="2" />
<text  x="279.09" y="209.5" >pyo..</text>
</g>
<g >
<title>CreateFunctionSpace (5,973 us, 0.05%)</title><rect x="99.2" y="103" width="0.5" height="15.0" fill="rgb(123.586855157035,123.586855157035,151.339391320716)" rx="2" ry="2" />
<text  x="102.15" y="113.5" ></text>
</g>
<g >
<title>SNESFunctionEval (7,355,402 us, 62.26%)</title><rect x="455.1" y="119" width="734.7" height="15.0" fill="rgb(153.596150306099,153.596150306099,136.658266868019)" rx="2" ry="2" />
<text  x="458.14" y="129.5" >SNESFunctionEval</text>
</g>
<g >
<title>Parloop_Cells_wrap_slate_loopy_knl_0 (405,968 us, 3.44%)</title><rect x="276.1" y="183" width="40.5" height="15.0" fill="rgb(153.388717802647,153.388717802647,135.653017043597)" rx="2" ry="2" />
<text  x="279.09" y="193.5" >Par..</text>
</g>
<g >
<title>CreateFunctionSpace (5,410 us, 0.05%)</title><rect x="262.1" y="87" width="0.5" height="15.0" fill="rgb(155.288510984834,155.288510984834,144.859707080349)" rx="2" ry="2" />
<text  x="265.05" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (14,085 us, 0.12%)</title><rect x="99.7" y="103" width="1.5" height="15.0" fill="rgb(116.60950689673,116.60950689673,149.988936818722)" rx="2" ry="2" />
<text  x="102.75" y="113.5" ></text>
</g>
<g >
<title>firedrake.mesh.MeshTopology._facets (2,358 us, 0.02%)</title><rect x="262.4" y="151" width="0.2" height="15.0" fill="rgb(146.354867421894,154.980891553824,154.980891553824)" rx="2" ry="2" />
<text  x="265.36" y="161.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (9,927 us, 0.08%)</title><rect x="267.6" y="151" width="1.0" height="15.0" fill="rgb(152.852227141946,118.533741421583,118.533741421583)" rx="2" ry="2" />
<text  x="270.60" y="161.5" ></text>
</g>
<g >
<title>SNESJacobianEval (1,615 us, 0.01%)</title><rect x="1189.8" y="119" width="0.2" height="15.0" fill="rgb(126.769038710299,149.903084110077,149.903084110077)" rx="2" ry="2" />
<text  x="1192.84" y="129.5" ></text>
</g>
<g >
<title>CreateSparsity (529,641 us, 4.48%)</title><rect x="317.5" y="167" width="52.9" height="15.0" fill="rgb(137.47071843376,105.393715986511,137.47071843376)" rx="2" ry="2" />
<text  x="320.48" y="177.5" >Crea..</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (3,013,324 us, 25.51%)</title><rect x="457.1" y="167" width="301.0" height="15.0" fill="rgb(147.820042644565,147.820042644565,108.666360508274)" rx="2" ry="2" />
<text  x="460.13" y="177.5" >pyop2.global_kernel.GlobalKernel.comp..</text>
</g>
<g >
<title>Log_Event_form1_cell_integral_otherwise (17,522 us, 0.15%)</title><rect x="758.1" y="167" width="1.8" height="15.0" fill="rgb(107.419766830044,144.886606215197,144.886606215197)" rx="2" ry="2" />
<text  x="761.12" y="177.5" ></text>
</g>
<g >
<title>SNESSolve (9,251,875 us, 78.32%)</title><rect x="265.9" y="103" width="924.1" height="15.0" fill="rgb(131.639777150341,131.639777150341,152.898021383937)" rx="2" ry="2" />
<text  x="268.87" y="113.5" >SNESSolve</text>
</g>
<g >
<title>MatAssemblyEnd (4,278 us, 0.04%)</title><rect x="370.4" y="167" width="0.4" height="15.0" fill="rgb(150.17628685824,150.17628685824,120.085082466855)" rx="2" ry="2" />
<text  x="373.39" y="177.5" ></text>
</g>
<g >
<title>firedrake.extrusion_utils.make_extruded_coords (890,247 us, 7.54%)</title><rect x="10.2" y="87" width="89.0" height="15.0" fill="rgb(135.824679929395,161.609935825447,135.824679929395)" rx="2" ry="2" />
<text  x="13.23" y="97.5" >firedrake..</text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (5,973 us, 0.05%)</title><rect x="99.2" y="151" width="0.5" height="15.0" fill="rgb(143.194561693404,143.194561693404,155.134431295498)" rx="2" ry="2" />
<text  x="102.15" y="161.5" ></text>
</g>
<g >
<title>ParLoopExecute (6,117,456 us, 51.78%)</title><rect x="455.6" y="135" width="611.0" height="15.0" fill="rgb(148.36067991554,148.36067991554,111.286371898386)" rx="2" ry="2" />
<text  x="458.58" y="145.5" >ParLoopExecute</text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (3,436 us, 0.03%)</title><rect x="1189.5" y="167" width="0.3" height="15.0" fill="rgb(134.828571816128,161.772092960165,134.828571816128)" rx="2" ry="2" />
<text  x="1192.50" y="177.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (1,576 us, 0.01%)</title><rect x="267.6" y="231" width="0.2" height="15.0" fill="rgb(156.158433111226,143.881320519399,143.881320519399)" rx="2" ry="2" />
<text  x="270.60" y="241.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (1,829 us, 0.02%)</title><rect x="381.9" y="247" width="0.2" height="15.0" fill="rgb(145.950848230177,145.950848230177,155.667906109067)" rx="2" ry="2" />
<text  x="384.92" y="257.5" ></text>
</g>
<g >
<title>firedrake.slate.slac.optimise.optimise (6,922 us, 0.06%)</title><rect x="316.8" y="167" width="0.7" height="15.0" fill="rgb(149.155322341328,149.155322341328,115.137331346434)" rx="2" ry="2" />
<text  x="319.79" y="177.5" ></text>
</g>
<g >
<title>firedrake.matrix_free.operators.ImplicitMatrixContext.__init__ (6,159 us, 0.05%)</title><rect x="265.3" y="103" width="0.6" height="15.0" fill="rgb(152.618856645675,116.744567616845,116.744567616845)" rx="2" ry="2" />
<text  x="268.25" y="113.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.local_to_global_map (1,461 us, 0.01%)</title><rect x="316.6" y="167" width="0.2" height="15.0" fill="rgb(154.798051567931,133.451728687472,133.451728687472)" rx="2" ry="2" />
<text  x="319.65" y="177.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (3,071,053 us, 26.00%)</title><rect x="759.9" y="167" width="306.7" height="15.0" fill="rgb(129.922228566849,162.570800000746,129.922228566849)" rx="2" ry="2" />
<text  x="762.87" y="177.5" >pyop2.global_kernel.GlobalKernel.comp..</text>
</g>
<g >
<title>firedrake.variational_solver.LinearVariationalProblem.__init__ (21,475 us, 0.18%)</title><rect x="262.8" y="71" width="2.1" height="15.0" fill="rgb(154.781988852718,133.328581204173,133.328581204173)" rx="2" ry="2" />
<text  x="265.80" y="81.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (1,576 us, 0.01%)</title><rect x="267.6" y="183" width="0.2" height="15.0" fill="rgb(123.812114171809,123.812114171809,151.382989839705)" rx="2" ry="2" />
<text  x="270.60" y="193.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.solve (9,251,875 us, 78.32%)</title><rect x="265.9" y="87" width="924.1" height="15.0" fill="rgb(145.080325432246,160.103202836611,145.080325432246)" rx="2" ry="2" />
<text  x="268.87" y="97.5" >firedrake.variational_solver.NonlinearVariationalSolver.solve</text>
</g>
<g >
<title>ParLoopExecute (858,986 us, 7.27%)</title><rect x="13.4" y="103" width="85.8" height="15.0" fill="rgb(149.667462278733,149.667462278733,117.619240273859)" rx="2" ry="2" />
<text  x="16.35" y="113.5" >ParLoopEx..</text>
</g>
<g >
<title>firedrake.assemble.allocate_matrix (6,159 us, 0.05%)</title><rect x="265.3" y="87" width="0.6" height="15.0" fill="rgb(141.241679071368,115.056802620379,141.241679071368)" rx="2" ry="2" />
<text  x="268.25" y="97.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_form1_cell_integral_otherwise (3,088,575 us, 26.14%)</title><rect x="758.1" y="151" width="308.5" height="15.0" fill="rgb(131.010088006477,151.002615409087,151.002615409087)" rx="2" ry="2" />
<text  x="761.12" y="161.5" >Parloop_Cells_wrap_form1_cell_integral..</text>
</g>
<g >
<title>firedrake.assemble.allocate_matrix (638,451 us, 5.40%)</title><rect x="317.5" y="151" width="63.8" height="15.0" fill="rgb(147.914158243254,147.914158243254,156.047901595469)" rx="2" ry="2" />
<text  x="320.48" y="161.5" >firedr..</text>
</g>
</g>
</svg>
