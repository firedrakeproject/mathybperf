<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="299" onload="init(evt)" viewBox="0 0 1200 299" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:13px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:18px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 13 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (1 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="299.0" fill="url(#background)"  />
<text id="title" x="600.00" y="26" >Firedrake example</text>
<text id="details" x="10.00" y="281" > </text>
<text id="unzoom" x="10.00" y="26" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="26" >Search</text>
<text id="ignorecase" x="1174.00" y="26" >ic</text>
<text id="matched" x="1090.00" y="281" > </text>
<g id="frames">
<g >
<title>CreateFunctionSpace (15,730 us, 0.51%)</title><rect x="40.0" y="71" width="6.0" height="15.0" fill="rgb(148.592058254899,148.592058254899,112.407666927587)" rx="2" ry="2" />
<text  x="43.01" y="81.5" ></text>
</g>
<g >
<title>perfsolve (1,328,039 us, 42.78%)</title><rect x="685.2" y="71" width="504.8" height="15.0" fill="rgb(116.685927766889,116.685927766889,150.003727954882)" rx="2" ry="2" />
<text  x="688.21" y="81.5" >perfsolve</text>
</g>
<g >
<title>HybridInit (1,251,353 us, 40.31%)</title><rect x="685.2" y="135" width="475.7" height="15.0" fill="rgb(145.060491533748,160.106431610785,145.060491533748)" rx="2" ry="2" />
<text  x="688.21" y="145.5" >HybridInit</text>
</g>
<g >
<title>firedrake.mesh.MeshTopology._facets (2,307 us, 0.07%)</title><rect x="672.3" y="151" width="0.9" height="15.0" fill="rgb(134.305819906459,134.305819906459,153.414029659315)" rx="2" ry="2" />
<text  x="675.33" y="161.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (1,786 us, 0.06%)</title><rect x="689.7" y="183" width="0.7" height="15.0" fill="rgb(152.06322671145,112.484738121117,112.484738121117)" rx="2" ry="2" />
<text  x="692.73" y="193.5" ></text>
</g>
<g >
<title>firedrake.functionspace.make_scalar_element (414 us, 0.01%)</title><rect x="40.3" y="87" width="0.1" height="15.0" fill="rgb(112.099143622906,146.099777976309,146.099777976309)" rx="2" ry="2" />
<text  x="43.26" y="97.5" ></text>
</g>
<g >
<title>all (3,104,434 us, 100%)</title><rect x="10.0" y="39" width="1180.0" height="15.0" fill="rgb(155.026294818915,155.026294818915,143.588967199359)" rx="2" ry="2" />
<text  x="13.00" y="49.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (5,361 us, 0.17%)</title><rect x="671.2" y="103" width="2.0" height="15.0" fill="rgb(143.946820505158,154.35658309393,154.35658309393)" rx="2" ry="2" />
<text  x="674.17" y="113.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.solve (1,328,039 us, 42.78%)</title><rect x="685.2" y="87" width="504.8" height="15.0" fill="rgb(153.364706434344,122.462749329973,122.462749329973)" rx="2" ry="2" />
<text  x="688.21" y="97.5" >firedrake.variational_solver.NonlinearVariationalSolver.solve</text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (6,940 us, 0.22%)</title><rect x="36.7" y="119" width="2.7" height="15.0" fill="rgb(152.796254888717,152.796254888717,132.781850614553)" rx="2" ry="2" />
<text  x="39.75" y="129.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (6,940 us, 0.22%)</title><rect x="36.7" y="103" width="2.7" height="15.0" fill="rgb(153.970365163704,127.106132921728,127.106132921728)" rx="2" ry="2" />
<text  x="39.75" y="113.5" ></text>
</g>
<g >
<title>PCSetUp (1,251,353 us, 40.31%)</title><rect x="685.2" y="119" width="475.7" height="15.0" fill="rgb(104.32398290202,144.08399556719,144.08399556719)" rx="2" ry="2" />
<text  x="688.21" y="129.5" >PCSetUp</text>
</g>
<g >
<title>firedrake.extrusion_utils.make_extruded_coords (69,809 us, 2.25%)</title><rect x="10.2" y="87" width="26.5" height="15.0" fill="rgb(123.508793469357,123.508793469357,151.324282606972)" rx="2" ry="2" />
<text  x="13.21" y="97.5" >f..</text>
</g>
<g >
<title>Log_Event_form0_cell_integral_otherwise (13,824 us, 0.45%)</title><rect x="1162.7" y="167" width="5.3" height="15.0" fill="rgb(136.300456415261,136.300456415261,153.800088338438)" rx="2" ry="2" />
<text  x="1165.72" y="177.5" ></text>
</g>
<g >
<title>CreateMesh (442 us, 0.01%)</title><rect x="46.2" y="87" width="0.2" height="15.0" fill="rgb(153.939625169245,153.939625169245,138.32279889711)" rx="2" ry="2" />
<text  x="49.22" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (428 us, 0.01%)</title><rect x="671.0" y="119" width="0.2" height="15.0" fill="rgb(141.876277535447,141.876277535447,154.87927952299)" rx="2" ry="2" />
<text  x="674.01" y="129.5" ></text>
</g>
<g >
<title>firedrake.functionspace.MixedFunctionSpace (1,001 us, 0.03%)</title><rect x="670.8" y="71" width="0.4" height="15.0" fill="rgb(128.326227188961,128.326227188961,152.256689133347)" rx="2" ry="2" />
<text  x="673.79" y="81.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.boundary_nodes (486 us, 0.02%)</title><rect x="856.1" y="183" width="0.2" height="15.0" fill="rgb(133.80590510626,161.938573587353,133.80590510626)" rx="2" ry="2" />
<text  x="859.07" y="193.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (1,024 us, 0.03%)</title><rect x="1189.2" y="183" width="0.4" height="15.0" fill="rgb(149.055592671726,149.055592671726,114.654026024519)" rx="2" ry="2" />
<text  x="1192.18" y="193.5" ></text>
</g>
<g >
<title>SNESJacobianEval (448 us, 0.01%)</title><rect x="1189.6" y="119" width="0.1" height="15.0" fill="rgb(153.283685861592,153.283685861592,135.144016098486)" rx="2" ry="2" />
<text  x="1192.57" y="129.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (38,345 us, 1.24%)</title><rect x="22.2" y="135" width="14.5" height="15.0" fill="rgb(152.786114797276,118.026880112453,118.026880112453)" rx="2" ry="2" />
<text  x="25.17" y="145.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_pyop2_kernel_uniform_extrusion (38,891 us, 1.25%)</title><rect x="22.0" y="119" width="14.7" height="15.0" fill="rgb(133.424670154749,162.000635091087,133.424670154749)" rx="2" ry="2" />
<text  x="24.97" y="129.5" ></text>
</g>
<g >
<title>firedrake.mesh._Facets.__init__ (683 us, 0.02%)</title><rect x="673.0" y="167" width="0.2" height="15.0" fill="rgb(137.606059744315,137.606059744315,154.052785756964)" rx="2" ry="2" />
<text  x="675.95" y="177.5" ></text>
</g>
<g >
<title>Mesh: numbering (774 us, 0.02%)</title><rect x="46.4" y="87" width="0.3" height="15.0" fill="rgb(154.118121746349,128.238933388673,128.238933388673)" rx="2" ry="2" />
<text  x="49.38" y="97.5" ></text>
</g>
<g >
<title>firedrake.mesh._Facets.__init__ (562 us, 0.02%)</title><rect x="39.2" y="167" width="0.2" height="15.0" fill="rgb(153.430788077328,122.969375259518,122.969375259518)" rx="2" ry="2" />
<text  x="42.17" y="177.5" ></text>
</g>
<g >
<title>firedrake.assemble.allocate_matrix (6,053 us, 0.19%)</title><rect x="682.9" y="87" width="2.3" height="15.0" fill="rgb(133.480863391004,95.1697124394487,133.480863391004)" rx="2" ry="2" />
<text  x="685.91" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspace.MixedFunctionSpace (2,717 us, 0.09%)</title><rect x="689.5" y="167" width="1.1" height="15.0" fill="rgb(142.049390061363,117.126562032243,142.049390061363)" rx="2" ry="2" />
<text  x="692.53" y="177.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.LinearVariationalProblem.__init__ (20,755 us, 0.67%)</title><rect x="673.9" y="71" width="7.9" height="15.0" fill="rgb(113.312530669075,146.414359803093,146.414359803093)" rx="2" ry="2" />
<text  x="676.87" y="81.5" ></text>
</g>
<g >
<title>SNESSolve (1,327,362 us, 42.76%)</title><rect x="685.2" y="103" width="504.5" height="15.0" fill="rgb(146.955742724263,159.797902347213,146.955742724263)" rx="2" ry="2" />
<text  x="688.21" y="113.5" >SNESSolve</text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (6,940 us, 0.22%)</title><rect x="36.7" y="151" width="2.7" height="15.0" fill="rgb(130.600926477175,150.896536494082,150.896536494082)" rx="2" ry="2" />
<text  x="39.75" y="161.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (1,209 us, 0.04%)</title><rect x="1175.1" y="167" width="0.4" height="15.0" fill="rgb(136.279151941015,152.368669021745,152.368669021745)" rx="2" ry="2" />
<text  x="1178.08" y="177.5" ></text>
</g>
<g >
<title>firedrake.utility_meshes.SquareMesh (1,739 us, 0.06%)</title><rect x="673.2" y="71" width="0.7" height="15.0" fill="rgb(104.919602625141,144.238415495407,144.238415495407)" rx="2" ry="2" />
<text  x="676.21" y="81.5" ></text>
</g>
<g >
<title>firedrake.utility_meshes.RectangleMesh (1,739 us, 0.06%)</title><rect x="673.2" y="87" width="0.7" height="15.0" fill="rgb(154.249137291537,129.243385901781,129.243385901781)" rx="2" ry="2" />
<text  x="676.21" y="97.5" ></text>
</g>
<g >
<title>HybridOperatorAssembly (429,358 us, 13.83%)</title><rect x="693.1" y="151" width="163.2" height="15.0" fill="rgb(121.079400707968,121.079400707968,150.854077556381)" rx="2" ry="2" />
<text  x="696.05" y="161.5" >HybridOperatorAssem..</text>
</g>
<g >
<title>CreateMesh (458 us, 0.01%)</title><rect x="673.5" y="119" width="0.1" height="15.0" fill="rgb(155.643850889522,155.643850889522,146.581738926147)" rx="2" ry="2" />
<text  x="676.47" y="129.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.action (3,690 us, 0.12%)</title><rect x="682.9" y="119" width="1.4" height="15.0" fill="rgb(126.517125745533,149.837773341435,149.837773341435)" rx="2" ry="2" />
<text  x="685.91" y="129.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_form0_cell_integral_otherwise (16,096 us, 0.52%)</title><rect x="1162.4" y="151" width="6.1" height="15.0" fill="rgb(112.889574870149,146.304704595965,146.304704595965)" rx="2" ry="2" />
<text  x="1165.43" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.WithGeometry.split (721 us, 0.02%)</title><rect x="1112.3" y="199" width="0.3" height="15.0" fill="rgb(153.36143886363,122.4376979545,122.4376979545)" rx="2" ry="2" />
<text  x="1115.34" y="209.5" ></text>
</g>
<g >
<title>CreateExtMesh (78,951 us, 2.54%)</title><rect x="10.0" y="71" width="30.0" height="15.0" fill="rgb(155.510618677352,155.510618677352,145.936075128704)" rx="2" ry="2" />
<text  x="13.00" y="81.5" >C..</text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (9,514 us, 0.31%)</title><rect x="677.8" y="103" width="3.7" height="15.0" fill="rgb(153.675237855978,153.675237855978,137.041537302048)" rx="2" ry="2" />
<text  x="680.84" y="113.5" ></text>
</g>
<g >
<title>CreateMesh (1,816 us, 0.06%)</title><rect x="46.0" y="71" width="0.7" height="15.0" fill="rgb(156.065966576667,143.172410421116,143.172410421116)" rx="2" ry="2" />
<text  x="48.99" y="81.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (428 us, 0.01%)</title><rect x="671.0" y="103" width="0.2" height="15.0" fill="rgb(152.890407614421,118.826458377226,118.826458377226)" rx="2" ry="2" />
<text  x="674.01" y="113.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (14,231 us, 0.46%)</title><rect x="40.6" y="119" width="5.4" height="15.0" fill="rgb(124.650743208196,149.35389638731,149.35389638731)" rx="2" ry="2" />
<text  x="43.58" y="129.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalProblem.__init__ (10,318 us, 0.33%)</title><rect x="677.8" y="87" width="4.0" height="15.0" fill="rgb(148.925416236543,148.925416236543,114.023170992477)" rx="2" ry="2" />
<text  x="680.84" y="97.5" ></text>
</g>
<g >
<title>firedrake.function.Function.__init__ (838 us, 0.03%)</title><rect x="1112.6" y="151" width="0.3" height="15.0" fill="rgb(155.826963687179,155.826963687179,147.469131714792)" rx="2" ry="2" />
<text  x="1115.62" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (428 us, 0.01%)</title><rect x="671.0" y="87" width="0.2" height="15.0" fill="rgb(139.182756831895,139.182756831895,154.357952935205)" rx="2" ry="2" />
<text  x="674.01" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (2,247 us, 0.07%)</title><rect x="1111.5" y="215" width="0.8" height="15.0" fill="rgb(138.228857133669,138.228857133669,154.173327187162)" rx="2" ry="2" />
<text  x="1114.49" y="225.5" ></text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (36,926 us, 1.19%)</title><rect x="1175.5" y="135" width="14.1" height="15.0" fill="rgb(155.715506724559,140.485551554952,140.485551554952)" rx="2" ry="2" />
<text  x="1178.54" y="145.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (1,697 us, 0.05%)</title><rect x="1111.7" y="247" width="0.6" height="15.0" fill="rgb(122.047028837884,148.67885932834,148.67885932834)" rx="2" ry="2" />
<text  x="1114.70" y="257.5" ></text>
</g>
<g >
<title>firedrake.matrix_free.operators.ImplicitMatrixContext.__init__ (6,053 us, 0.19%)</title><rect x="682.9" y="103" width="2.3" height="15.0" fill="rgb(121.398083009648,148.510614113613,148.510614113613)" rx="2" ry="2" />
<text  x="685.91" y="113.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (14,661 us, 0.47%)</title><rect x="40.4" y="87" width="5.6" height="15.0" fill="rgb(128.837007888663,128.837007888663,152.355549913935)" rx="2" ry="2" />
<text  x="43.42" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (6,552 us, 0.21%)</title><rect x="690.6" y="183" width="2.5" height="15.0" fill="rgb(152.60845860118,116.66484927571,116.66484927571)" rx="2" ry="2" />
<text  x="693.56" y="193.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (14,231 us, 0.46%)</title><rect x="40.6" y="103" width="5.4" height="15.0" fill="rgb(148.828528809409,148.828528809409,113.553639614829)" rx="2" ry="2" />
<text  x="43.58" y="113.5" ></text>
</g>
<g >
<title>CreateSparsity (556,545 us, 17.93%)</title><rect x="856.5" y="167" width="211.5" height="15.0" fill="rgb(146.361539760761,159.894633062202,146.361539760761)" rx="2" ry="2" />
<text  x="859.50" y="177.5" >CreateSparsity</text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (467 us, 0.02%)</title><rect x="1189.4" y="231" width="0.2" height="15.0" fill="rgb(128.714487253787,128.714487253787,152.331836242669)" rx="2" ry="2" />
<text  x="1192.39" y="241.5" ></text>
</g>
<g >
<title>firedrake (3,104,434 us, 100.00%)</title><rect x="10.0" y="55" width="1180.0" height="15.0" fill="rgb(127.95412321202,162.891189244555,127.95412321202)" rx="2" ry="2" />
<text  x="13.00" y="65.5" >firedrake</text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (1,985 us, 0.06%)</title><rect x="1160.1" y="183" width="0.8" height="15.0" fill="rgb(155.30828359106,137.363507531463,137.363507531463)" rx="2" ry="2" />
<text  x="1163.10" y="193.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (9,727 us, 0.31%)</title><rect x="689.4" y="151" width="3.7" height="15.0" fill="rgb(149.166271200064,149.166271200064,115.190391200311)" rx="2" ry="2" />
<text  x="692.35" y="161.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_form1_cell_integral_otherwise (18,392 us, 0.59%)</title><rect x="1168.5" y="151" width="7.0" height="15.0" fill="rgb(147.67826665727,159.680282172072,147.67826665727)" rx="2" ry="2" />
<text  x="1171.55" y="161.5" ></text>
</g>
<g >
<title>firedrake.parloops.par_loop (6,082 us, 0.20%)</title><rect x="1158.5" y="151" width="2.4" height="15.0" fill="rgb(131.27193276426,151.07050108703,151.07050108703)" rx="2" ry="2" />
<text  x="1161.54" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (408 us, 0.01%)</title><rect x="690.4" y="183" width="0.2" height="15.0" fill="rgb(155.751998469972,140.765321603119,140.765321603119)" rx="2" ry="2" />
<text  x="693.41" y="193.5" ></text>
</g>
<g >
<title>firedrake.functionspace.make_scalar_element (1,168 us, 0.04%)</title><rect x="1111.0" y="215" width="0.5" height="15.0" fill="rgb(153.774386591227,125.603630532739,125.603630532739)" rx="2" ry="2" />
<text  x="1114.04" y="225.5" ></text>
</g>
<g >
<title>Log_Event_form1_cell_integral_otherwise (16,707 us, 0.54%)</title><rect x="1168.7" y="167" width="6.4" height="15.0" fill="rgb(123.405562144217,149.031071667019,149.031071667019)" rx="2" ry="2" />
<text  x="1171.73" y="177.5" ></text>
</g>
<g >
<title>ParLoopExecute (39,327 us, 1.27%)</title><rect x="21.8" y="103" width="14.9" height="15.0" fill="rgb(150.786482922996,150.786482922996,123.042186472979)" rx="2" ry="2" />
<text  x="24.80" y="113.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (2,363 us, 0.08%)</title><rect x="684.3" y="119" width="0.9" height="15.0" fill="rgb(153.762134641968,125.509698921756,125.509698921756)" rx="2" ry="2" />
<text  x="687.31" y="129.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (1,269 us, 0.04%)</title><rect x="689.9" y="199" width="0.5" height="15.0" fill="rgb(145.034993141251,124.777169924456,145.034993141251)" rx="2" ry="2" />
<text  x="692.92" y="209.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (1,024 us, 0.03%)</title><rect x="1189.2" y="199" width="0.4" height="15.0" fill="rgb(149.539395783256,149.539395783256,116.998610334241)" rx="2" ry="2" />
<text  x="1192.18" y="209.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.action (10,437 us, 0.34%)</title><rect x="673.9" y="87" width="3.9" height="15.0" fill="rgb(125.517909034848,163.287782250141,125.517909034848)" rx="2" ry="2" />
<text  x="676.87" y="97.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (2,811 us, 0.09%)</title><rect x="1188.5" y="167" width="1.1" height="15.0" fill="rgb(147.095282636066,159.775186547617,147.095282636066)" rx="2" ry="2" />
<text  x="1191.50" y="177.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (5,361 us, 0.17%)</title><rect x="671.2" y="87" width="2.0" height="15.0" fill="rgb(131.661368572682,162.287684185842,131.661368572682)" rx="2" ry="2" />
<text  x="674.17" y="97.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_slate_loopy_knl_0 (411,657 us, 13.26%)</title><rect x="699.3" y="183" width="156.5" height="15.0" fill="rgb(152.704084968457,117.397984758167,117.397984758167)" rx="2" ry="2" />
<text  x="702.29" y="193.5" >Parloop_Cells_wrap..</text>
</g>
<g >
<title>firedrake.function.Function.split (804 us, 0.03%)</title><rect x="681.5" y="119" width="0.3" height="15.0" fill="rgb(153.190892313191,153.190892313191,134.694324287)" rx="2" ry="2" />
<text  x="684.46" y="129.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (1,260 us, 0.04%)</title><rect x="1160.4" y="199" width="0.5" height="15.0" fill="rgb(141.382283722918,153.691703187423,153.691703187423)" rx="2" ry="2" />
<text  x="1163.37" y="209.5" ></text>
</g>
<g >
<title>MatAssemblyEnd (4,236 us, 0.14%)</title><rect x="1068.0" y="167" width="1.6" height="15.0" fill="rgb(132.509820221068,162.149564150059,132.509820221068)" rx="2" ry="2" />
<text  x="1071.04" y="177.5" ></text>
</g>
<g >
<title>MatZeroEntries (1,220 us, 0.04%)</title><rect x="698.8" y="167" width="0.5" height="15.0" fill="rgb(133.131776407102,162.048315468611,133.131776407102)" rx="2" ry="2" />
<text  x="701.83" y="177.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (8,912 us, 0.29%)</title><rect x="1109.2" y="167" width="3.4" height="15.0" fill="rgb(116.852293103469,147.332075989788,147.332075989788)" rx="2" ry="2" />
<text  x="1112.23" y="177.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (4,697 us, 0.15%)</title><rect x="1110.6" y="199" width="1.7" height="15.0" fill="rgb(147.802958192604,147.802958192604,156.02637900502)" rx="2" ry="2" />
<text  x="1113.56" y="209.5" ></text>
</g>
<g >
<title>firedrake.assemble.allocate_matrix (665,551 us, 21.44%)</title><rect x="856.3" y="151" width="252.9" height="15.0" fill="rgb(155.12583002482,135.964696856952,135.964696856952)" rx="2" ry="2" />
<text  x="859.25" y="161.5" >firedrake.assemble.allocate_ma..</text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (6,552 us, 0.21%)</title><rect x="690.6" y="167" width="2.5" height="15.0" fill="rgb(131.210170887238,162.361134971845,131.210170887238)" rx="2" ry="2" />
<text  x="693.56" y="177.5" ></text>
</g>
<g >
<title>ParLoopExecute (1,985 us, 0.06%)</title><rect x="1160.1" y="167" width="0.8" height="15.0" fill="rgb(135.756519164736,161.62103176388,135.756519164736)" rx="2" ry="2" />
<text  x="1163.10" y="177.5" ></text>
</g>
<g >
<title>firedrake.interpolation.make_interpolator (119,983 us, 3.86%)</title><rect x="1112.9" y="151" width="45.6" height="15.0" fill="rgb(154.718183983754,132.839410542114,132.839410542114)" rx="2" ry="2" />
<text  x="1115.93" y="161.5" >fir..</text>
</g>
<g >
<title>SNESFunctionEval (75,561 us, 2.43%)</title><rect x="1160.9" y="119" width="28.7" height="15.0" fill="rgb(152.407719838545,115.125852095513,115.125852095513)" rx="2" ry="2" />
<text  x="1163.85" y="129.5" >S..</text>
</g>
<g >
<title>CreateMesh (458 us, 0.01%)</title><rect x="673.5" y="103" width="0.1" height="15.0" fill="rgb(150.781945952141,150.781945952141,123.020199614223)" rx="2" ry="2" />
<text  x="676.47" y="113.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (467 us, 0.02%)</title><rect x="1189.4" y="247" width="0.2" height="15.0" fill="rgb(154.429671343739,130.627480302002,130.627480302002)" rx="2" ry="2" />
<text  x="1192.39" y="257.5" ></text>
</g>
<g >
<title>firedrake.mesh._from_cell_list (609 us, 0.02%)</title><rect x="673.6" y="103" width="0.3" height="15.0" fill="rgb(113.918164738103,113.918164738103,149.468031884794)" rx="2" ry="2" />
<text  x="676.64" y="113.5" ></text>
</g>
<g >
<title>firedrake.mesh.ExtrudedMeshTopology.__init__ (719 us, 0.02%)</title><rect x="39.4" y="87" width="0.3" height="15.0" fill="rgb(146.590586372262,159.857346404516,146.590586372262)" rx="2" ry="2" />
<text  x="42.39" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (1,269 us, 0.04%)</title><rect x="689.9" y="215" width="0.5" height="15.0" fill="rgb(153.330694502725,122.201991187559,122.201991187559)" rx="2" ry="2" />
<text  x="692.92" y="225.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (411,657 us, 13.26%)</title><rect x="699.3" y="199" width="156.5" height="15.0" fill="rgb(152.774771038275,152.774771038275,132.677736570103)" rx="2" ry="2" />
<text  x="702.29" y="209.5" >pyop2.global_kerne..</text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (1,269 us, 0.04%)</title><rect x="689.9" y="231" width="0.5" height="15.0" fill="rgb(152.12510223953,112.959117169728,112.959117169728)" rx="2" ry="2" />
<text  x="692.92" y="241.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.local_to_global_map (1,290 us, 0.04%)</title><rect x="855.8" y="167" width="0.5" height="15.0" fill="rgb(124.190991353166,163.503792105299,124.190991353166)" rx="2" ry="2" />
<text  x="858.76" y="177.5" ></text>
</g>
<g >
<title>VecCopy (677 us, 0.02%)</title><rect x="1189.7" y="103" width="0.3" height="15.0" fill="rgb(137.272838275598,161.374189117926,137.272838275598)" rx="2" ry="2" />
<text  x="1192.74" y="113.5" ></text>
</g>
<g >
<title>MatZeroInitial (104,127 us, 3.35%)</title><rect x="1069.6" y="167" width="39.6" height="15.0" fill="rgb(124.017758297203,163.531992835339,124.017758297203)" rx="2" ry="2" />
<text  x="1072.65" y="177.5" >Mat..</text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (6,552 us, 0.21%)</title><rect x="690.6" y="199" width="2.5" height="15.0" fill="rgb(154.315945004149,129.755578365146,129.755578365146)" rx="2" ry="2" />
<text  x="693.56" y="209.5" ></text>
</g>
<g >
<title>ParLoopExecute (34,917 us, 1.12%)</title><rect x="1162.3" y="135" width="13.2" height="15.0" fill="rgb(129.165071623756,150.524277828381,150.524277828381)" rx="2" ry="2" />
<text  x="1165.26" y="145.5" ></text>
</g>
<g >
<title>firedrake.__init__ (1,641,071 us, 52.86%)</title><rect x="47.0" y="71" width="623.8" height="15.0" fill="rgb(136.220329913115,136.220329913115,153.784579983184)" rx="2" ry="2" />
<text  x="50.02" y="81.5" >firedrake.__init__</text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (6,674 us, 0.21%)</title><rect x="1110.1" y="183" width="2.5" height="15.0" fill="rgb(152.289217034377,114.217330596888,114.217330596888)" rx="2" ry="2" />
<text  x="1113.08" y="193.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.derivative (804 us, 0.03%)</title><rect x="681.5" y="103" width="0.3" height="15.0" fill="rgb(153.777704956623,125.629071334109,125.629071334109)" rx="2" ry="2" />
<text  x="684.46" y="113.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (5,361 us, 0.17%)</title><rect x="671.2" y="119" width="2.0" height="15.0" fill="rgb(117.42224065969,147.479840171031,147.479840171031)" rx="2" ry="2" />
<text  x="674.17" y="129.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (6,940 us, 0.22%)</title><rect x="36.7" y="135" width="2.7" height="15.0" fill="rgb(150.106739575045,150.106739575045,119.748045632912)" rx="2" ry="2" />
<text  x="39.75" y="145.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (8,912 us, 0.29%)</title><rect x="1109.2" y="151" width="3.4" height="15.0" fill="rgb(145.703184586833,145.703184586833,155.619971210355)" rx="2" ry="2" />
<text  x="1112.23" y="161.5" ></text>
</g>
<g >
<title>PetscBarrier (897 us, 0.03%)</title><rect x="46.7" y="71" width="0.3" height="15.0" fill="rgb(156.511103997371,146.585130646514,146.585130646514)" rx="2" ry="2" />
<text  x="49.68" y="81.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (5,361 us, 0.17%)</title><rect x="671.2" y="135" width="2.0" height="15.0" fill="rgb(130.11779023107,130.11779023107,152.60344327053)" rx="2" ry="2" />
<text  x="674.17" y="145.5" ></text>
</g>
<g >
<title>ParLoopExecute (411,657 us, 13.26%)</title><rect x="699.3" y="167" width="156.5" height="15.0" fill="rgb(146.853939103323,146.853939103323,155.842697890966)" rx="2" ry="2" />
<text  x="702.29" y="177.5" >ParLoopExecute</text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (467 us, 0.02%)</title><rect x="1189.4" y="215" width="0.2" height="15.0" fill="rgb(145.464195829028,125.877001811884,145.464195829028)" rx="2" ry="2" />
<text  x="1192.39" y="225.5" ></text>
</g>
<g >
<title>firedrake.mesh.make_mesh_from_coordinates (920 us, 0.03%)</title><rect x="39.7" y="87" width="0.3" height="15.0" fill="rgb(118.171282119275,118.171282119275,150.291215894053)" rx="2" ry="2" />
<text  x="42.66" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspace.VectorFunctionSpace (6,940 us, 0.22%)</title><rect x="36.7" y="87" width="2.7" height="15.0" fill="rgb(118.45038521798,147.746396167624,147.746396167624)" rx="2" ry="2" />
<text  x="39.75" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspace.VectorFunctionSpace (5,361 us, 0.17%)</title><rect x="671.2" y="71" width="2.0" height="15.0" fill="rgb(151.609069643952,141.623240962626,151.609069643952)" rx="2" ry="2" />
<text  x="674.17" y="81.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (1,493 us, 0.05%)</title><rect x="1168.0" y="167" width="0.5" height="15.0" fill="rgb(149.049478884595,149.049478884595,114.624397671499)" rx="2" ry="2" />
<text  x="1170.98" y="177.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.__init__ (9,074 us, 0.29%)</title><rect x="681.8" y="71" width="3.4" height="15.0" fill="rgb(151.331259602346,151.331259602346,125.682258072908)" rx="2" ry="2" />
<text  x="684.76" y="81.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (5,098 us, 0.16%)</title><rect x="1187.6" y="151" width="2.0" height="15.0" fill="rgb(111.66659777126,145.987636459216,145.987636459216)" rx="2" ry="2" />
<text  x="1190.63" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (1,697 us, 0.05%)</title><rect x="1111.7" y="231" width="0.6" height="15.0" fill="rgb(136.044798301758,152.307910670826,152.307910670826)" rx="2" ry="2" />
<text  x="1114.70" y="241.5" ></text>
</g>
</g>
</svg>
