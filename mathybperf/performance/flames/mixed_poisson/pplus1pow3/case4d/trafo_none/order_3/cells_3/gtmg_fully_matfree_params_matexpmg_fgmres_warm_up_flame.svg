<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="299" onload="init(evt)" viewBox="0 0 1200 299" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:13px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:18px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 13 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (1 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="299.0" fill="url(#background)"  />
<text id="title" x="600.00" y="26" >Firedrake example</text>
<text id="details" x="10.00" y="281" > </text>
<text id="unzoom" x="10.00" y="26" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="26" >Search</text>
<text id="ignorecase" x="1174.00" y="26" >ic</text>
<text id="matched" x="1090.00" y="281" > </text>
<g id="frames">
<g >
<title>firedrake.functionspacedata.get_shared_data (14,683 us, 0.10%)</title><rect x="104.3" y="103" width="1.1" height="15.0" fill="rgb(153.156618969499,120.867412099489,120.867412099489)" rx="2" ry="2" />
<text  x="107.26" y="113.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (1,589 us, 0.01%)</title><rect x="360.7" y="199" width="0.1" height="15.0" fill="rgb(130.462756978601,130.462756978601,152.670211028116)" rx="2" ry="2" />
<text  x="363.72" y="209.5" ></text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (1,037,867 us, 6.93%)</title><rect x="1107.8" y="135" width="81.8" height="15.0" fill="rgb(151.710145551274,151.710145551274,127.51839767156)" rx="2" ry="2" />
<text  x="1110.79" y="145.5" >firedrak..</text>
</g>
<g >
<title>Parloop_Cells_wrap_slate_loopy_knl_0 (420,174 us, 2.81%)</title><rect x="367.9" y="183" width="33.2" height="15.0" fill="rgb(153.33641323824,153.33641323824,135.399541077625)" rx="2" ry="2" />
<text  x="370.95" y="193.5" >Pa..</text>
</g>
<g >
<title>firedrake.utility_meshes.RectangleMesh (2,255 us, 0.02%)</title><rect x="356.9" y="87" width="0.2" height="15.0" fill="rgb(143.679952725837,160.331170486492,143.679952725837)" rx="2" ry="2" />
<text  x="359.94" y="97.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (6,535 us, 0.04%)</title><rect x="103.7" y="103" width="0.6" height="15.0" fill="rgb(128.586911152213,150.374384372796,150.374384372796)" rx="2" ry="2" />
<text  x="106.75" y="113.5" ></text>
</g>
<g >
<title>SNESJacobianEval (3,232 us, 0.02%)</title><rect x="1189.6" y="119" width="0.3" height="15.0" fill="rgb(134.624296381529,98.0997594776669,134.624296381529)" rx="2" ry="2" />
<text  x="1192.61" y="129.5" ></text>
</g>
<g >
<title>firedrake (14,967,223 us, 100.00%)</title><rect x="10.0" y="55" width="1180.0" height="15.0" fill="rgb(139.523540816542,161.007795681028,139.523540816542)" rx="2" ry="2" />
<text  x="13.00" y="65.5" >firedrake</text>
</g>
<g >
<title>perfsolve (10,532,440 us, 70.37%)</title><rect x="359.6" y="71" width="830.4" height="15.0" fill="rgb(156.265492464567,144.702108895015,144.702108895015)" rx="2" ry="2" />
<text  x="362.63" y="81.5" >perfsolve</text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (2,021 us, 0.01%)</title><rect x="598.3" y="215" width="0.1" height="15.0" fill="rgb(142.658646156054,160.497429695526,142.658646156054)" rx="2" ry="2" />
<text  x="601.27" y="225.5" ></text>
</g>
<g >
<title>MatZeroInitial (380,112 us, 2.54%)</title><rect x="567.8" y="167" width="30.0" height="15.0" fill="rgb(143.660538773424,160.33433089735,143.660538773424)" rx="2" ry="2" />
<text  x="570.79" y="177.5" >M..</text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.solve (10,532,440 us, 70.37%)</title><rect x="359.6" y="87" width="830.4" height="15.0" fill="rgb(145.446949250847,154.745505361331,154.745505361331)" rx="2" ry="2" />
<text  x="362.63" y="97.5" >firedrake.variational_solver.NonlinearVariationalSolver.solve</text>
</g>
<g >
<title>CreateFunctionSpace (11,547 us, 0.08%)</title><rect x="360.7" y="151" width="0.9" height="15.0" fill="rgb(152.125226155586,112.960067192826,112.960067192826)" rx="2" ry="2" />
<text  x="363.72" y="161.5" ></text>
</g>
<g >
<title>firedrake.slate.slac.optimise.optimise (6,964 us, 0.05%)</title><rect x="401.4" y="167" width="0.5" height="15.0" fill="rgb(153.430373182634,122.966194400193,122.966194400193)" rx="2" ry="2" />
<text  x="404.39" y="177.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (14,683 us, 0.10%)</title><rect x="104.3" y="119" width="1.1" height="15.0" fill="rgb(152.640094137769,116.907388389563,116.907388389563)" rx="2" ry="2" />
<text  x="107.26" y="129.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (1,589 us, 0.01%)</title><rect x="360.7" y="183" width="0.1" height="15.0" fill="rgb(156.216981798469,144.330193788263,144.330193788263)" rx="2" ry="2" />
<text  x="363.72" y="193.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (1,589 us, 0.01%)</title><rect x="360.7" y="215" width="0.1" height="15.0" fill="rgb(133.551626632929,151.661532830759,151.661532830759)" rx="2" ry="2" />
<text  x="363.72" y="225.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalProblem.__init__ (10,833 us, 0.07%)</title><rect x="357.9" y="87" width="0.9" height="15.0" fill="rgb(154.059130959835,127.786670692072,127.786670692072)" rx="2" ry="2" />
<text  x="360.92" y="97.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_form1_cell_integral_otherwise (2,631,360 us, 17.58%)</title><rect x="900.3" y="151" width="207.5" height="15.0" fill="rgb(147.901111064051,147.901111064051,109.059230541168)" rx="2" ry="2" />
<text  x="903.33" y="161.5" >Parloop_Cells_wrap_form1_..</text>
</g>
<g >
<title>firedrake.functionspace.MixedFunctionSpace (1,589 us, 0.01%)</title><rect x="360.7" y="167" width="0.1" height="15.0" fill="rgb(108.588814659866,108.588814659866,148.436544772877)" rx="2" ry="2" />
<text  x="363.72" y="177.5" ></text>
</g>
<g >
<title>firedrake.mesh.MeshTopology._facets (2,543 us, 0.02%)</title><rect x="356.7" y="151" width="0.2" height="15.0" fill="rgb(112.589228060384,146.226836904544,146.226836904544)" rx="2" ry="2" />
<text  x="359.74" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (2,021 us, 0.01%)</title><rect x="598.3" y="231" width="0.1" height="15.0" fill="rgb(129.855968317166,150.703399193339,150.703399193339)" rx="2" ry="2" />
<text  x="601.27" y="241.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (8,403 us, 0.06%)</title><rect x="597.8" y="167" width="0.6" height="15.0" fill="rgb(148.51257096073,133.688463086872,148.51257096073)" rx="2" ry="2" />
<text  x="600.76" y="177.5" ></text>
</g>
<g >
<title>SNESFunctionEval (6,744,379 us, 45.06%)</title><rect x="657.9" y="119" width="531.7" height="15.0" fill="rgb(127.860083334143,150.185947531074,150.185947531074)" rx="2" ry="2" />
<text  x="660.89" y="129.5" >SNESFunctionEval</text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (3,266 us, 0.02%)</title><rect x="401.7" y="183" width="0.2" height="15.0" fill="rgb(144.936485074051,144.936485074051,155.471577756268)" rx="2" ry="2" />
<text  x="404.68" y="193.5" ></text>
</g>
<g >
<title>firedrake.__init__ (3,182,377 us, 21.26%)</title><rect x="105.6" y="71" width="250.9" height="15.0" fill="rgb(152.326353197571,152.326353197571,130.504634726691)" rx="2" ry="2" />
<text  x="108.58" y="81.5" >firedrake.__init__</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (420,174 us, 2.81%)</title><rect x="367.9" y="199" width="33.2" height="15.0" fill="rgb(107.087942842436,144.800577773965,144.800577773965)" rx="2" ry="2" />
<text  x="370.95" y="209.5" >py..</text>
</g>
<g >
<title>CreateFunctionSpace (4,337 us, 0.03%)</title><rect x="598.1" y="199" width="0.3" height="15.0" fill="rgb(145.921874517613,145.921874517613,155.662298293732)" rx="2" ry="2" />
<text  x="601.08" y="209.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (9,958 us, 0.07%)</title><rect x="360.8" y="199" width="0.8" height="15.0" fill="rgb(153.494128564888,123.45498566414,123.45498566414)" rx="2" ry="2" />
<text  x="363.84" y="209.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (2,021 us, 0.01%)</title><rect x="598.3" y="247" width="0.1" height="15.0" fill="rgb(114.918100206213,114.918100206213,149.661567781848)" rx="2" ry="2" />
<text  x="601.27" y="257.5" ></text>
</g>
<g >
<title>firedrake.parloops.par_loop (672,251 us, 4.49%)</title><rect x="604.9" y="151" width="53.0" height="15.0" fill="rgb(120.530038867883,120.530038867883,150.7477494583)" rx="2" ry="2" />
<text  x="607.89" y="161.5" >fire..</text>
</g>
<g >
<title>Parloop_Cells_wrap_pyop2_kernel_uniform_extrusion (1,151,489 us, 7.69%)</title><rect x="13.0" y="119" width="90.7" height="15.0" fill="rgb(110.113359509339,145.584945057977,145.584945057977)" rx="2" ry="2" />
<text  x="15.96" y="129.5" >Parloop_C..</text>
</g>
<g >
<title>HybridInit (3,783,135 us, 25.28%)</title><rect x="359.6" y="135" width="298.3" height="15.0" fill="rgb(154.158988309131,128.552243703337,128.552243703337)" rx="2" ry="2" />
<text  x="362.63" y="145.5" >HybridInit</text>
</g>
<g >
<title>CreateExtMesh (1,195,632 us, 7.99%)</title><rect x="10.0" y="71" width="94.3" height="15.0" fill="rgb(111.621066352822,145.975832017398,145.975832017398)" rx="2" ry="2" />
<text  x="13.00" y="81.5" >CreateExtM..</text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (9,958 us, 0.07%)</title><rect x="360.8" y="183" width="0.8" height="15.0" fill="rgb(118.513376694684,118.513376694684,150.357427747358)" rx="2" ry="2" />
<text  x="363.84" y="193.5" ></text>
</g>
<g >
<title>all (14,967,223 us, 100%)</title><rect x="10.0" y="39" width="1180.0" height="15.0" fill="rgb(131.006634161451,162.394268857438,131.006634161451)" rx="2" ry="2" />
<text  x="13.00" y="49.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (5,890 us, 0.04%)</title><rect x="356.5" y="135" width="0.4" height="15.0" fill="rgb(133.542412323183,161.981467761342,133.542412323183)" rx="2" ry="2" />
<text  x="359.47" y="145.5" ></text>
</g>
<g >
<title>firedrake.utility_meshes.SquareMesh (2,255 us, 0.02%)</title><rect x="356.9" y="71" width="0.2" height="15.0" fill="rgb(153.789856419806,125.722232551848,125.722232551848)" rx="2" ry="2" />
<text  x="359.94" y="81.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.LinearVariationalProblem.__init__ (20,964 us, 0.14%)</title><rect x="357.1" y="71" width="1.7" height="15.0" fill="rgb(148.756756671879,148.756756671879,113.205820794493)" rx="2" ry="2" />
<text  x="360.12" y="81.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_form0_cell_integral_otherwise (3,067,454 us, 20.49%)</title><rect x="658.5" y="151" width="241.8" height="15.0" fill="rgb(141.403065219972,160.701826592098,141.403065219972)" rx="2" ry="2" />
<text  x="661.50" y="161.5" >Parloop_Cells_wrap_form0_cell..</text>
</g>
<g >
<title>ParLoopExecute (5,698,814 us, 38.08%)</title><rect x="658.5" y="135" width="449.3" height="15.0" fill="rgb(155.616288333908,155.616288333908,146.448166541245)" rx="2" ry="2" />
<text  x="661.50" y="145.5" >ParLoopExecute</text>
</g>
<g >
<title>MatZeroEntries (3,718 us, 0.02%)</title><rect x="367.7" y="167" width="0.2" height="15.0" fill="rgb(152.194748784613,113.493074015363,113.493074015363)" rx="2" ry="2" />
<text  x="370.65" y="177.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (5,644 us, 0.04%)</title><rect x="1189.2" y="151" width="0.4" height="15.0" fill="rgb(130.440309271794,162.486461281336,130.440309271794)" rx="2" ry="2" />
<text  x="1192.17" y="161.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.action (10,131 us, 0.07%)</title><rect x="357.1" y="87" width="0.8" height="15.0" fill="rgb(111.435229488295,145.927652089558,145.927652089558)" rx="2" ry="2" />
<text  x="360.12" y="97.5" ></text>
</g>
<g >
<title>ParLoopExecute (1,151,489 us, 7.69%)</title><rect x="13.0" y="103" width="90.7" height="15.0" fill="rgb(111.87881179781,146.042654910543,146.042654910543)" rx="2" ry="2" />
<text  x="15.96" y="113.5" >ParLoopEx..</text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (5,890 us, 0.04%)</title><rect x="356.5" y="119" width="0.4" height="15.0" fill="rgb(117.589967574824,117.589967574824,150.178703401579)" rx="2" ry="2" />
<text  x="359.47" y="129.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (9,958 us, 0.07%)</title><rect x="360.8" y="167" width="0.8" height="15.0" fill="rgb(130.478720474524,130.478720474524,152.673300737005)" rx="2" ry="2" />
<text  x="363.84" y="177.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (1,151,489 us, 7.69%)</title><rect x="13.0" y="135" width="90.7" height="15.0" fill="rgb(153.611553246819,124.355241558943,124.355241558943)" rx="2" ry="2" />
<text  x="15.96" y="145.5" >pyop2.glo..</text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (6,281 us, 0.04%)</title><rect x="597.9" y="183" width="0.5" height="15.0" fill="rgb(154.327456694816,154.327456694816,140.202290136418)" rx="2" ry="2" />
<text  x="600.93" y="193.5" ></text>
</g>
<g >
<title>firedrake.assemble.allocate_matrix (6,295 us, 0.04%)</title><rect x="359.1" y="87" width="0.5" height="15.0" fill="rgb(151.707703024498,151.707703024498,127.50656081103)" rx="2" ry="2" />
<text  x="362.14" y="97.5" ></text>
</g>
<g >
<title>VecCopy (1,694 us, 0.01%)</title><rect x="1189.9" y="103" width="0.1" height="15.0" fill="rgb(132.449922164671,151.375905746396,151.375905746396)" rx="2" ry="2" />
<text  x="1192.87" y="113.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (3,351 us, 0.02%)</title><rect x="1189.3" y="167" width="0.3" height="15.0" fill="rgb(156.743524225297,148.367019060613,148.367019060613)" rx="2" ry="2" />
<text  x="1192.35" y="177.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.action (3,682 us, 0.02%)</title><rect x="359.1" y="119" width="0.3" height="15.0" fill="rgb(135.363143314216,161.685069693035,135.363143314216)" rx="2" ry="2" />
<text  x="362.14" y="129.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (6,535 us, 0.04%)</title><rect x="103.7" y="151" width="0.6" height="15.0" fill="rgb(142.943131197602,119.416773693855,142.943131197602)" rx="2" ry="2" />
<text  x="106.75" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (5,890 us, 0.04%)</title><rect x="356.5" y="103" width="0.4" height="15.0" fill="rgb(132.267335042317,151.328568344304,151.328568344304)" rx="2" ry="2" />
<text  x="359.47" y="113.5" ></text>
</g>
<g >
<title>CreateSparsity (2,092,587 us, 13.98%)</title><rect x="401.9" y="167" width="165.0" height="15.0" fill="rgb(154.434691013999,130.665964440657,130.665964440657)" rx="2" ry="2" />
<text  x="404.94" y="177.5" >CreateSparsity</text>
</g>
<g >
<title>MatAssemblyEnd (11,112 us, 0.07%)</title><rect x="566.9" y="167" width="0.9" height="15.0" fill="rgb(124.253669952698,124.253669952698,151.468452248909)" rx="2" ry="2" />
<text  x="569.92" y="177.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (8,730 us, 0.06%)</title><rect x="357.9" y="103" width="0.7" height="15.0" fill="rgb(154.539754109495,131.471448172798,131.471448172798)" rx="2" ry="2" />
<text  x="360.92" y="113.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (667,006 us, 4.46%)</title><rect x="605.3" y="183" width="52.6" height="15.0" fill="rgb(155.714674826915,140.479173673018,140.479173673018)" rx="2" ry="2" />
<text  x="608.31" y="193.5" >Parl..</text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.local_to_global_map (4,060 us, 0.03%)</title><rect x="401.1" y="167" width="0.3" height="15.0" fill="rgb(124.003333843943,124.003333843943,151.420000098828)" rx="2" ry="2" />
<text  x="404.07" y="177.5" ></text>
</g>
<g >
<title>firedrake.matrix_free.operators.ImplicitMatrixContext.__init__ (6,295 us, 0.04%)</title><rect x="359.1" y="103" width="0.5" height="15.0" fill="rgb(130.332024310683,130.332024310683,152.6449079311)" rx="2" ry="2" />
<text  x="362.14" y="113.5" ></text>
</g>
<g >
<title>firedrake.functionspace.VectorFunctionSpace (5,890 us, 0.04%)</title><rect x="356.5" y="71" width="0.4" height="15.0" fill="rgb(144.48294727939,144.48294727939,155.383796247624)" rx="2" ry="2" />
<text  x="359.47" y="81.5" ></text>
</g>
<g >
<title>firedrake.functionspace.VectorFunctionSpace (6,535 us, 0.04%)</title><rect x="103.7" y="87" width="0.6" height="15.0" fill="rgb(149.027360308333,149.027360308333,114.517207648076)" rx="2" ry="2" />
<text  x="106.75" y="97.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.__init__ (10,959 us, 0.07%)</title><rect x="358.8" y="71" width="0.8" height="15.0" fill="rgb(141.198802109453,153.644133880229,153.644133880229)" rx="2" ry="2" />
<text  x="361.77" y="81.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (6,535 us, 0.04%)</title><rect x="103.7" y="119" width="0.6" height="15.0" fill="rgb(146.479129952735,146.479129952735,155.7701541844)" rx="2" ry="2" />
<text  x="106.75" y="129.5" ></text>
</g>
<g >
<title>Log_Event_form0_cell_integral_otherwise (28,171 us, 0.19%)</title><rect x="658.7" y="167" width="2.2" height="15.0" fill="rgb(146.978826878445,159.794144461649,146.978826878445)" rx="2" ry="2" />
<text  x="661.68" y="177.5" ></text>
</g>
<g >
<title>ParLoopExecute (667,006 us, 4.46%)</title><rect x="605.3" y="167" width="52.6" height="15.0" fill="rgb(124.825955753139,124.825955753139,151.579217242543)" rx="2" ry="2" />
<text  x="608.31" y="177.5" >ParL..</text>
</g>
<g >
<title>firedrake.extrusion_utils.make_extruded_coords (1,186,751 us, 7.93%)</title><rect x="10.2" y="87" width="93.5" height="15.0" fill="rgb(108.985703492435,145.292589794335,145.292589794335)" rx="2" ry="2" />
<text  x="13.18" y="97.5" >firedrake...</text>
</g>
<g >
<title>ParLoopExecute (420,174 us, 2.81%)</title><rect x="367.9" y="167" width="33.2" height="15.0" fill="rgb(114.562266766577,146.738365458001,146.738365458001)" rx="2" ry="2" />
<text  x="370.95" y="177.5" >Pa..</text>
</g>
<g >
<title>CreateFunctionSpace (5,890 us, 0.04%)</title><rect x="356.5" y="87" width="0.4" height="15.0" fill="rgb(149.559060493994,149.559060493994,117.093908547816)" rx="2" ry="2" />
<text  x="359.47" y="97.5" ></text>
</g>
<g >
<title>firedrake.interpolation.make_interpolator (82,036 us, 0.55%)</title><rect x="598.4" y="151" width="6.5" height="15.0" fill="rgb(142.521914860525,142.521914860525,155.004241585908)" rx="2" ry="2" />
<text  x="601.42" y="161.5" ></text>
</g>
<g >
<title>PCSetUp (3,783,135 us, 25.28%)</title><rect x="359.6" y="119" width="298.3" height="15.0" fill="rgb(140.976133033592,160.771327180578,140.976133033592)" rx="2" ry="2" />
<text  x="362.63" y="129.5" >PCSetUp</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (3,036,988 us, 20.29%)</title><rect x="660.9" y="167" width="239.4" height="15.0" fill="rgb(142.501665504097,118.285517854249,142.501665504097)" rx="2" ry="2" />
<text  x="663.90" y="177.5" >pyop2.global_kernel.GlobalKer..</text>
</g>
<g >
<title>Log_Event_form1_cell_integral_otherwise (27,672 us, 0.18%)</title><rect x="900.3" y="167" width="2.2" height="15.0" fill="rgb(109.012571718701,145.299555630774,145.299555630774)" rx="2" ry="2" />
<text  x="903.33" y="177.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (6,535 us, 0.04%)</title><rect x="103.7" y="135" width="0.6" height="15.0" fill="rgb(149.070923612709,149.070923612709,114.728322123128)" rx="2" ry="2" />
<text  x="106.75" y="145.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (8,403 us, 0.06%)</title><rect x="597.8" y="151" width="0.6" height="15.0" fill="rgb(150.103260074235,150.103260074235,119.731183436676)" rx="2" ry="2" />
<text  x="600.76" y="161.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (665,304 us, 4.45%)</title><rect x="605.4" y="199" width="52.5" height="15.0" fill="rgb(146.95490397237,146.95490397237,155.862239478523)" rx="2" ry="2" />
<text  x="608.44" y="209.5" >pyop..</text>
</g>
<g >
<title>firedrake.ufl_expr.derivative (2,103 us, 0.01%)</title><rect x="358.6" y="103" width="0.2" height="15.0" fill="rgb(106.424247002673,144.628508482174,144.628508482174)" rx="2" ry="2" />
<text  x="361.60" y="113.5" ></text>
</g>
<g >
<title>SNESSolve (10,530,746 us, 70.36%)</title><rect x="359.6" y="103" width="830.3" height="15.0" fill="rgb(107.737154547882,144.968891919821,144.968891919821)" rx="2" ry="2" />
<text  x="362.63" y="113.5" >SNESSolve</text>
</g>
<g >
<title>HybridOperatorAssembly (511,342 us, 3.42%)</title><rect x="361.6" y="151" width="40.3" height="15.0" fill="rgb(155.891105415916,141.831808188686,141.831808188686)" rx="2" ry="2" />
<text  x="364.63" y="161.5" >Hyb..</text>
</g>
<g >
<title>CreateFunctionSpace (14,683 us, 0.10%)</title><rect x="104.3" y="71" width="1.1" height="15.0" fill="rgb(146.321600567872,159.901134791277,146.321600567872)" rx="2" ry="2" />
<text  x="107.26" y="81.5" ></text>
</g>
<g >
<title>firedrake.assemble.allocate_matrix (2,483,811 us, 16.60%)</title><rect x="401.9" y="151" width="195.9" height="15.0" fill="rgb(133.629764747304,95.5512721649654,133.629764747304)" rx="2" ry="2" />
<text  x="404.94" y="161.5" >firedrake.assemble.allo..</text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (14,683 us, 0.10%)</title><rect x="104.3" y="87" width="1.1" height="15.0" fill="rgb(122.287819868599,148.7412866326,148.7412866326)" rx="2" ry="2" />
<text  x="107.26" y="97.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (2,613 us, 0.02%)</title><rect x="359.4" y="119" width="0.2" height="15.0" fill="rgb(146.749268458108,155.083143674324,155.083143674324)" rx="2" ry="2" />
<text  x="362.43" y="129.5" ></text>
</g>
<g >
<title>CreateMesh (2,023 us, 0.01%)</title><rect x="105.4" y="71" width="0.2" height="15.0" fill="rgb(132.181673041269,132.181673041269,153.0029044596)" rx="2" ry="2" />
<text  x="108.42" y="81.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (2,603,688 us, 17.40%)</title><rect x="902.5" y="167" width="205.3" height="15.0" fill="rgb(154.533060577643,131.420131095259,131.420131095259)" rx="2" ry="2" />
<text  x="905.52" y="177.5" >pyop2.global_kernel.Glob..</text>
</g>
</g>
</svg>
