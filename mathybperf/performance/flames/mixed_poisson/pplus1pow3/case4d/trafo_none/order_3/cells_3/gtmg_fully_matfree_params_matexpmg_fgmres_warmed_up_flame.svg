<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="299" onload="init(evt)" viewBox="0 0 1200 299" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:13px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:18px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 13 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (1 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="299.0" fill="url(#background)"  />
<text id="title" x="600.00" y="26" >Firedrake example</text>
<text id="details" x="10.00" y="281" > </text>
<text id="unzoom" x="10.00" y="26" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="26" >Search</text>
<text id="ignorecase" x="1174.00" y="26" >ic</text>
<text id="matched" x="1090.00" y="281" > </text>
<g id="frames">
<g >
<title>firedrake.ufl_expr.action (10,177 us, 0.20%)</title><rect x="400.3" y="87" width="2.3" height="15.0" fill="rgb(137.546654395516,161.32961440073,137.546654395516)" rx="2" ry="2" />
<text  x="403.33" y="97.5" ></text>
</g>
<g >
<title>firedrake.mesh.ExtrudedMeshTopology.__init__ (712 us, 0.01%)</title><rect x="27.2" y="87" width="0.1" height="15.0" fill="rgb(152.866079440128,118.639942374312,118.639942374312)" rx="2" ry="2" />
<text  x="30.18" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (8,224 us, 0.16%)</title><rect x="410.3" y="167" width="1.9" height="15.0" fill="rgb(138.848201146594,161.117734697066,138.848201146594)" rx="2" ry="2" />
<text  x="413.31" y="177.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (1,873 us, 0.04%)</title><rect x="1144.5" y="231" width="0.4" height="15.0" fill="rgb(139.630439319367,153.237521305021,153.237521305021)" rx="2" ry="2" />
<text  x="1147.49" y="241.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (6,221 us, 0.12%)</title><rect x="1143.7" y="183" width="1.4" height="15.0" fill="rgb(141.761750680736,160.643435935694,141.761750680736)" rx="2" ry="2" />
<text  x="1146.65" y="193.5" ></text>
</g>
<g >
<title>firedrake.extrusion_utils.make_extruded_coords (68,660 us, 1.32%)</title><rect x="10.0" y="87" width="15.6" height="15.0" fill="rgb(152.668714827171,152.668714827171,132.163771854754)" rx="2" ry="2" />
<text  x="13.00" y="97.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (10,616 us, 0.20%)</title><rect x="409.8" y="151" width="2.4" height="15.0" fill="rgb(153.560157126389,153.560157126389,136.483838381734)" rx="2" ry="2" />
<text  x="412.77" y="161.5" ></text>
</g>
<g >
<title>MatZeroEntries (3,721 us, 0.07%)</title><rect x="416.0" y="167" width="0.9" height="15.0" fill="rgb(136.376198045548,136.376198045548,153.814748008816)" rx="2" ry="2" />
<text  x="419.02" y="177.5" ></text>
</g>
<g >
<title>Log_Event_form0_cell_integral_otherwise (27,435 us, 0.53%)</title><rect x="1168.5" y="167" width="6.2" height="15.0" fill="rgb(113.15863691319,113.15863691319,149.321026499327)" rx="2" ry="2" />
<text  x="1171.50" y="177.5" ></text>
</g>
<g >
<title>firedrake.mesh._from_cell_list (574 us, 0.01%)</title><rect x="400.2" y="103" width="0.1" height="15.0" fill="rgb(151.600014199074,151.600014199074,126.984684195513)" rx="2" ry="2" />
<text  x="403.20" y="113.5" ></text>
</g>
<g >
<title>firedrake.functionspace.MixedFunctionSpace (1,177 us, 0.02%)</title><rect x="398.4" y="71" width="0.3" height="15.0" fill="rgb(150.543470703398,150.543470703398,121.864511870311)" rx="2" ry="2" />
<text  x="401.39" y="81.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (1,429 us, 0.03%)</title><rect x="410.0" y="183" width="0.3" height="15.0" fill="rgb(155.653147119102,140.007461246446,140.007461246446)" rx="2" ry="2" />
<text  x="412.98" y="193.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (5,299 us, 0.10%)</title><rect x="398.7" y="119" width="1.2" height="15.0" fill="rgb(126.22163423896,149.761164432323,149.761164432323)" rx="2" ry="2" />
<text  x="401.66" y="129.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (641 us, 0.01%)</title><rect x="1189.2" y="199" width="0.1" height="15.0" fill="rgb(156.698364776632,148.020796620844,148.020796620844)" rx="2" ry="2" />
<text  x="1192.20" y="209.5" ></text>
</g>
<g >
<title>Mesh: numbering (770 us, 0.01%)</title><rect x="31.3" y="87" width="0.2" height="15.0" fill="rgb(134.357481888401,161.848782018167,134.357481888401)" rx="2" ry="2" />
<text  x="34.30" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.WithGeometry.split (643 us, 0.01%)</title><rect x="1144.9" y="199" width="0.2" height="15.0" fill="rgb(118.368012913534,147.72504038499,147.72504038499)" rx="2" ry="2" />
<text  x="1147.92" y="209.5" ></text>
</g>
<g >
<title>firedrake.functionspace.VectorFunctionSpace (5,299 us, 0.10%)</title><rect x="398.7" y="71" width="1.2" height="15.0" fill="rgb(154.661553514874,154.661553514874,141.82137472593)" rx="2" ry="2" />
<text  x="401.66" y="81.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.solve (3,445,763 us, 66.33%)</title><rect x="407.4" y="87" width="782.6" height="15.0" fill="rgb(149.292527970162,149.292527970162,115.802250932321)" rx="2" ry="2" />
<text  x="410.36" y="97.5" >firedrake.variational_solver.NonlinearVariationalSolver.solve</text>
</g>
<g >
<title>VecCopy (1,774 us, 0.03%)</title><rect x="1189.6" y="103" width="0.4" height="15.0" fill="rgb(156.52408868332,146.684679905451,146.684679905451)" rx="2" ry="2" />
<text  x="1192.60" y="113.5" ></text>
</g>
<g >
<title>PetscBarrier (910 us, 0.02%)</title><rect x="31.5" y="71" width="0.2" height="15.0" fill="rgb(146.394081617266,159.889335550678,146.394081617266)" rx="2" ry="2" />
<text  x="34.48" y="81.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (2,908 us, 0.06%)</title><rect x="1166.4" y="183" width="0.6" height="15.0" fill="rgb(126.014907096294,126.014907096294,151.809336857347)" rx="2" ry="2" />
<text  x="1169.38" y="193.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.boundary_nodes (601 us, 0.01%)</title><rect x="533.3" y="183" width="0.2" height="15.0" fill="rgb(133.478311228976,151.642525133438,151.642525133438)" rx="2" ry="2" />
<text  x="536.33" y="193.5" ></text>
</g>
<g >
<title>firedrake.mesh._Facets.__init__ (571 us, 0.01%)</title><rect x="27.0" y="167" width="0.2" height="15.0" fill="rgb(126.682267177148,126.682267177148,151.938503324609)" rx="2" ry="2" />
<text  x="30.05" y="177.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (1,429 us, 0.03%)</title><rect x="410.0" y="215" width="0.3" height="15.0" fill="rgb(154.741565164616,154.741565164616,142.20912349006)" rx="2" ry="2" />
<text  x="412.98" y="225.5" ></text>
</g>
<g >
<title>firedrake.utility_meshes.RectangleMesh (2,036 us, 0.04%)</title><rect x="399.9" y="87" width="0.4" height="15.0" fill="rgb(148.101730866327,159.61134613804,148.101730866327)" rx="2" ry="2" />
<text  x="402.86" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (14,607 us, 0.28%)</title><rect x="27.7" y="87" width="3.4" height="15.0" fill="rgb(149.69360836635,159.352203289199,149.69360836635)" rx="2" ry="2" />
<text  x="30.75" y="97.5" ></text>
</g>
<g >
<title>HybridOperatorAssembly (534,023 us, 10.28%)</title><rect x="412.2" y="151" width="121.3" height="15.0" fill="rgb(152.566037093181,116.339617714388,116.339617714388)" rx="2" ry="2" />
<text  x="415.18" y="161.5" >HybridOperato..</text>
</g>
<g >
<title>CreateMesh (1,821 us, 0.04%)</title><rect x="31.1" y="71" width="0.4" height="15.0" fill="rgb(153.54967117271,123.880812324106,123.880812324106)" rx="2" ry="2" />
<text  x="34.07" y="81.5" ></text>
</g>
<g >
<title>firedrake.functionspace.make_scalar_element (1,152 us, 0.02%)</title><rect x="1144.2" y="215" width="0.3" height="15.0" fill="rgb(153.23340120231,153.23340120231,134.900328903502)" rx="2" ry="2" />
<text  x="1147.23" y="225.5" ></text>
</g>
<g >
<title>firedrake.interpolation.make_interpolator (88,492 us, 1.70%)</title><rect x="1145.3" y="151" width="20.1" height="15.0" fill="rgb(138.132754463415,152.849232638663,152.849232638663)" rx="2" ry="2" />
<text  x="1148.28" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (8,224 us, 0.16%)</title><rect x="410.3" y="183" width="1.9" height="15.0" fill="rgb(154.985542494646,134.889159125623,134.889159125623)" rx="2" ry="2" />
<text  x="413.31" y="193.5" ></text>
</g>
<g >
<title>firedrake.mesh.make_mesh_from_coordinates (885 us, 0.02%)</title><rect x="27.3" y="87" width="0.2" height="15.0" fill="rgb(154.305110186286,154.305110186286,140.093995518153)" rx="2" ry="2" />
<text  x="30.34" y="97.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (1,350 us, 0.03%)</title><rect x="1166.7" y="199" width="0.3" height="15.0" fill="rgb(152.160954785339,152.160954785339,129.703088575102)" rx="2" ry="2" />
<text  x="1169.74" y="209.5" ></text>
</g>
<g >
<title>firedrake.mesh._Facets.__init__ (684 us, 0.01%)</title><rect x="399.7" y="167" width="0.2" height="15.0" fill="rgb(152.662343628541,144.322255548136,152.662343628541)" rx="2" ry="2" />
<text  x="402.71" y="177.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (6,968 us, 0.13%)</title><rect x="25.6" y="151" width="1.6" height="15.0" fill="rgb(155.993507365814,142.616889804578,142.616889804578)" rx="2" ry="2" />
<text  x="28.59" y="161.5" ></text>
</g>
<g >
<title>ParLoopExecute (59,810 us, 1.15%)</title><rect x="1168.2" y="135" width="13.6" height="15.0" fill="rgb(141.523832519768,153.728401023644,153.728401023644)" rx="2" ry="2" />
<text  x="1171.17" y="145.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (15,523 us, 0.30%)</title><rect x="27.5" y="71" width="3.6" height="15.0" fill="rgb(153.113981387717,120.540523972495,120.540523972495)" rx="2" ry="2" />
<text  x="30.54" y="81.5" ></text>
</g>
<g >
<title>firedrake.functionspace.MixedFunctionSpace (2,392 us, 0.05%)</title><rect x="409.8" y="167" width="0.5" height="15.0" fill="rgb(119.346311160145,119.346311160145,150.518640869705)" rx="2" ry="2" />
<text  x="412.77" y="177.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (5,299 us, 0.10%)</title><rect x="398.7" y="87" width="1.2" height="15.0" fill="rgb(142.832232852628,142.832232852628,155.064303132767)" rx="2" ry="2" />
<text  x="401.66" y="97.5" ></text>
</g>
<g >
<title>HybridInit (3,344,686 us, 64.38%)</title><rect x="407.4" y="135" width="759.6" height="15.0" fill="rgb(155.236089762396,136.810021511704,136.810021511704)" rx="2" ry="2" />
<text  x="410.36" y="145.5" >HybridInit</text>
</g>
<g >
<title>CreateMesh (801 us, 0.02%)</title><rect x="400.0" y="103" width="0.2" height="15.0" fill="rgb(154.319044953914,129.779344646675,129.779344646675)" rx="2" ry="2" />
<text  x="403.01" y="113.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (2,469 us, 0.05%)</title><rect x="406.8" y="119" width="0.6" height="15.0" fill="rgb(155.913823900403,155.913823900403,147.890069671182)" rx="2" ry="2" />
<text  x="409.80" y="129.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (1,429 us, 0.03%)</title><rect x="410.0" y="199" width="0.3" height="15.0" fill="rgb(156.120445781048,143.590084321371,143.590084321371)" rx="2" ry="2" />
<text  x="412.98" y="209.5" ></text>
</g>
<g >
<title>MatAssemblyEnd (11,055 us, 0.21%)</title><rect x="1052.9" y="167" width="2.5" height="15.0" fill="rgb(146.950393567299,159.798773140207,146.950393567299)" rx="2" ry="2" />
<text  x="1055.89" y="177.5" ></text>
</g>
<g >
<title>firedrake.assemble.allocate_matrix (6,143 us, 0.12%)</title><rect x="406.0" y="87" width="1.4" height="15.0" fill="rgb(123.838808642119,163.561124174539,123.838808642119)" rx="2" ry="2" />
<text  x="408.97" y="97.5" ></text>
</g>
<g >
<title>ParLoopExecute (2,908 us, 0.06%)</title><rect x="1166.4" y="167" width="0.6" height="15.0" fill="rgb(155.094776846775,135.72662249194,135.72662249194)" rx="2" ry="2" />
<text  x="1169.38" y="177.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (2,495 us, 0.05%)</title><rect x="1188.8" y="167" width="0.5" height="15.0" fill="rgb(144.890418972106,154.601219733509,154.601219733509)" rx="2" ry="2" />
<text  x="1191.78" y="177.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (8,224 us, 0.16%)</title><rect x="410.3" y="199" width="1.9" height="15.0" fill="rgb(156.428558079444,145.952278609071,145.952278609071)" rx="2" ry="2" />
<text  x="413.31" y="209.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (1,459 us, 0.03%)</title><rect x="1181.4" y="167" width="0.4" height="15.0" fill="rgb(146.99079123729,146.99079123729,155.869185400766)" rx="2" ry="2" />
<text  x="1184.43" y="177.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.local_to_global_map (3,936 us, 0.08%)</title><rect x="532.6" y="167" width="0.9" height="15.0" fill="rgb(155.12359370505,155.12359370505,144.060492570626)" rx="2" ry="2" />
<text  x="535.58" y="177.5" ></text>
</g>
<g >
<title>ParLoopExecute (509,466 us, 9.81%)</title><rect x="416.9" y="167" width="115.7" height="15.0" fill="rgb(153.095837485409,153.095837485409,134.233673967752)" rx="2" ry="2" />
<text  x="419.86" y="177.5" >ParLoopExecute</text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (5,299 us, 0.10%)</title><rect x="398.7" y="103" width="1.2" height="15.0" fill="rgb(149.037188635887,149.037188635887,114.56483723545)" rx="2" ry="2" />
<text  x="401.66" y="113.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (5,299 us, 0.10%)</title><rect x="398.7" y="135" width="1.2" height="15.0" fill="rgb(152.749404483495,117.745434373465,117.745434373465)" rx="2" ry="2" />
<text  x="401.66" y="145.5" ></text>
</g>
<g >
<title>firedrake.utility_meshes.SquareMesh (2,036 us, 0.04%)</title><rect x="399.9" y="71" width="0.4" height="15.0" fill="rgb(146.909118291229,129.579615621273,146.909118291229)" rx="2" ry="2" />
<text  x="402.86" y="81.5" ></text>
</g>
<g >
<title>all (5,195,251 us, 100%)</title><rect x="10.0" y="39" width="1180.0" height="15.0" fill="rgb(134.768844663328,161.78181598504,134.768844663328)" rx="2" ry="2" />
<text  x="13.00" y="49.5" ></text>
</g>
<g >
<title>firedrake.matrix_free.operators.ImplicitMatrixContext.__init__ (6,143 us, 0.12%)</title><rect x="406.0" y="103" width="1.4" height="15.0" fill="rgb(156.304354482002,145.000051028682,145.000051028682)" rx="2" ry="2" />
<text  x="408.97" y="113.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (6,968 us, 0.13%)</title><rect x="25.6" y="119" width="1.6" height="15.0" fill="rgb(134.367204107744,151.872978842749,151.872978842749)" rx="2" ry="2" />
<text  x="28.59" y="129.5" ></text>
</g>
<g >
<title>SNESFunctionEval (98,189 us, 1.89%)</title><rect x="1167.0" y="119" width="22.3" height="15.0" fill="rgb(155.956885061747,142.33611880673,142.33611880673)" rx="2" ry="2" />
<text  x="1170.04" y="129.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (4,329 us, 0.08%)</title><rect x="1143.9" y="199" width="1.0" height="15.0" fill="rgb(111.122323104245,111.122323104245,148.926901245983)" rx="2" ry="2" />
<text  x="1146.93" y="209.5" ></text>
</g>
<g >
<title>firedrake.mesh.MeshTopology._facets (2,296 us, 0.04%)</title><rect x="399.3" y="151" width="0.6" height="15.0" fill="rgb(137.311028110267,161.367972168096,137.311028110267)" rx="2" ry="2" />
<text  x="402.34" y="161.5" ></text>
</g>
<g >
<title>SNESSolve (3,443,989 us, 66.29%)</title><rect x="407.4" y="103" width="782.2" height="15.0" fill="rgb(154.342606510974,129.959983250797,129.959983250797)" rx="2" ry="2" />
<text  x="410.36" y="113.5" >SNESSolve</text>
</g>
<g >
<title>Log_Event_form1_cell_integral_otherwise (26,978 us, 0.52%)</title><rect x="1175.3" y="167" width="6.1" height="15.0" fill="rgb(137.479856430117,137.479856430117,154.028359309055)" rx="2" ry="2" />
<text  x="1178.30" y="177.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (9,382 us, 0.18%)</title><rect x="402.6" y="103" width="2.2" height="15.0" fill="rgb(150.785521836315,139.512899705557,150.785521836315)" rx="2" ry="2" />
<text  x="405.64" y="113.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (1,873 us, 0.04%)</title><rect x="1144.5" y="247" width="0.4" height="15.0" fill="rgb(152.733103206963,117.620457920047,117.620457920047)" rx="2" ry="2" />
<text  x="1147.49" y="257.5" ></text>
</g>
<g >
<title>PCSetUp (3,344,686 us, 64.38%)</title><rect x="407.4" y="119" width="759.6" height="15.0" fill="rgb(154.04376043814,154.04376043814,138.827454430986)" rx="2" ry="2" />
<text  x="410.36" y="129.5" >PCSetUp</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (509,466 us, 9.81%)</title><rect x="416.9" y="199" width="115.7" height="15.0" fill="rgb(144.310741569442,122.921275271696,144.310741569442)" rx="2" ry="2" />
<text  x="419.86" y="209.5" >pyop2.global_..</text>
</g>
<g >
<title>firedrake (5,195,251 us, 100.00%)</title><rect x="10.0" y="55" width="1180.0" height="15.0" fill="rgb(148.443669002365,148.443669002365,111.68854978069)" rx="2" ry="2" />
<text  x="13.00" y="65.5" >firedrake</text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (33,401 us, 0.64%)</title><rect x="1181.8" y="135" width="7.5" height="15.0" fill="rgb(118.556825104626,147.773991693792,147.773991693792)" rx="2" ry="2" />
<text  x="1184.76" y="145.5" ></text>
</g>
<g >
<title>ParLoopExecute (37,909 us, 0.73%)</title><rect x="17.0" y="103" width="8.6" height="15.0" fill="rgb(151.096892628889,151.096892628889,124.546479663075)" rx="2" ry="2" />
<text  x="19.98" y="113.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (6,968 us, 0.13%)</title><rect x="25.6" y="103" width="1.6" height="15.0" fill="rgb(132.503717816397,92.6657769045172,132.503717816397)" rx="2" ry="2" />
<text  x="28.59" y="113.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.LinearVariationalProblem.__init__ (20,317 us, 0.39%)</title><rect x="400.3" y="71" width="4.6" height="15.0" fill="rgb(143.261963754819,120.233782121723,143.261963754819)" rx="2" ry="2" />
<text  x="403.33" y="81.5" ></text>
</g>
<g >
<title>firedrake.parloops.par_loop (7,328 us, 0.14%)</title><rect x="1165.4" y="151" width="1.6" height="15.0" fill="rgb(141.764496804584,116.396523061747,141.764496804584)" rx="2" ry="2" />
<text  x="1168.38" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (641 us, 0.01%)</title><rect x="1189.2" y="215" width="0.1" height="15.0" fill="rgb(155.522870980417,139.008677516532,139.008677516532)" rx="2" ry="2" />
<text  x="1192.20" y="225.5" ></text>
</g>
<g >
<title>firedrake.functionspace.VectorFunctionSpace (6,968 us, 0.13%)</title><rect x="25.6" y="87" width="1.6" height="15.0" fill="rgb(148.454029511282,148.454029511282,111.73875840083)" rx="2" ry="2" />
<text  x="28.59" y="97.5" ></text>
</g>
<g >
<title>firedrake.__init__ (1,614,519 us, 31.08%)</title><rect x="31.7" y="71" width="366.7" height="15.0" fill="rgb(152.003066111212,152.003066111212,128.937935769719)" rx="2" ry="2" />
<text  x="34.69" y="81.5" >firedrake.__init__</text>
</g>
<g >
<title>firedrake.function.Function.__init__ (948 us, 0.02%)</title><rect x="1145.1" y="151" width="0.2" height="15.0" fill="rgb(127.068053120839,149.980606364662,149.980606364662)" rx="2" ry="2" />
<text  x="1148.06" y="161.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_form1_cell_integral_otherwise (29,248 us, 0.56%)</title><rect x="1175.1" y="151" width="6.7" height="15.0" fill="rgb(153.046132962673,153.046132962673,133.992798203724)" rx="2" ry="2" />
<text  x="1178.11" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (6,968 us, 0.13%)</title><rect x="25.6" y="135" width="1.6" height="15.0" fill="rgb(138.262635293447,161.213059370834,138.262635293447)" rx="2" ry="2" />
<text  x="28.59" y="145.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_slate_loopy_knl_0 (509,466 us, 9.81%)</title><rect x="416.9" y="183" width="115.7" height="15.0" fill="rgb(155.149312004945,136.144725371245,136.144725371245)" rx="2" ry="2" />
<text  x="419.86" y="193.5" >Parloop_Cells..</text>
</g>
<g >
<title>firedrake.ufl_expr.derivative (758 us, 0.01%)</title><rect x="404.8" y="103" width="0.1" height="15.0" fill="rgb(144.45701857788,144.45701857788,155.378777789267)" rx="2" ry="2" />
<text  x="407.77" y="113.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalProblem.__init__ (10,140 us, 0.20%)</title><rect x="402.6" y="87" width="2.3" height="15.0" fill="rgb(144.666096030896,160.170635529854,144.666096030896)" rx="2" ry="2" />
<text  x="405.64" y="97.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (8,437 us, 0.16%)</title><rect x="1143.1" y="167" width="2.0" height="15.0" fill="rgb(155.873505210951,141.696873283954,141.696873283954)" rx="2" ry="2" />
<text  x="1146.15" y="177.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (4,745 us, 0.09%)</title><rect x="1188.3" y="151" width="1.0" height="15.0" fill="rgb(138.959927869856,109.209815166505,138.959927869856)" rx="2" ry="2" />
<text  x="1191.27" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (14,607 us, 0.28%)</title><rect x="27.7" y="103" width="3.4" height="15.0" fill="rgb(119.860481936554,148.111976798366,148.111976798366)" rx="2" ry="2" />
<text  x="30.75" y="113.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (8,437 us, 0.16%)</title><rect x="1143.1" y="151" width="2.0" height="15.0" fill="rgb(154.517212165102,154.517212165102,141.121874338572)" rx="2" ry="2" />
<text  x="1146.15" y="161.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.__init__ (10,661 us, 0.21%)</title><rect x="404.9" y="71" width="2.5" height="15.0" fill="rgb(137.776968001479,161.292121488131,137.776968001479)" rx="2" ry="2" />
<text  x="407.94" y="81.5" ></text>
</g>
<g >
<title>SNESJacobianEval (1,114 us, 0.02%)</title><rect x="1189.3" y="119" width="0.3" height="15.0" fill="rgb(111.378940408225,145.913058624355,145.913058624355)" rx="2" ry="2" />
<text  x="1192.34" y="129.5" ></text>
</g>
<g >
<title>firedrake.function.Function.split (758 us, 0.01%)</title><rect x="404.8" y="119" width="0.1" height="15.0" fill="rgb(134.610484559128,151.936051552366,151.936051552366)" rx="2" ry="2" />
<text  x="407.77" y="129.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_form0_cell_integral_otherwise (30,562 us, 0.59%)</title><rect x="1168.2" y="151" width="6.9" height="15.0" fill="rgb(152.180229097922,113.381756417404,113.381756417404)" rx="2" ry="2" />
<text  x="1171.17" y="161.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_pyop2_kernel_uniform_extrusion (37,909 us, 0.73%)</title><rect x="17.0" y="119" width="8.6" height="15.0" fill="rgb(147.978824254053,147.978824254053,109.435840615797)" rx="2" ry="2" />
<text  x="19.98" y="129.5" ></text>
</g>
<g >
<title>firedrake.assemble.allocate_matrix (2,684,260 us, 51.67%)</title><rect x="533.5" y="151" width="609.6" height="15.0" fill="rgb(127.833610260652,162.910807631987,127.833610260652)" rx="2" ry="2" />
<text  x="536.47" y="161.5" >firedrake.assemble.allocate_matrix</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (37,909 us, 0.73%)</title><rect x="17.0" y="135" width="8.6" height="15.0" fill="rgb(120.836360935091,120.836360935091,150.80703760034)" rx="2" ry="2" />
<text  x="19.98" y="145.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (1,429 us, 0.03%)</title><rect x="410.0" y="231" width="0.3" height="15.0" fill="rgb(156.57790282838,147.097255017577,147.097255017577)" rx="2" ry="2" />
<text  x="412.98" y="241.5" ></text>
</g>
<g >
<title>CreateExtMesh (77,225 us, 1.49%)</title><rect x="10.0" y="71" width="17.5" height="15.0" fill="rgb(131.773651962711,151.200576434777,151.200576434777)" rx="2" ry="2" />
<text  x="13.00" y="81.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (14,607 us, 0.28%)</title><rect x="27.7" y="119" width="3.4" height="15.0" fill="rgb(136.562052104814,103.065258518587,136.562052104814)" rx="2" ry="2" />
<text  x="30.75" y="129.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (1,683 us, 0.03%)</title><rect x="1174.7" y="167" width="0.4" height="15.0" fill="rgb(153.02996471138,153.02996471138,133.914444370533)" rx="2" ry="2" />
<text  x="1177.73" y="177.5" ></text>
</g>
<g >
<title>MatZeroInitial (386,316 us, 7.44%)</title><rect x="1055.4" y="167" width="87.7" height="15.0" fill="rgb(148.379804214319,148.379804214319,111.37905119247)" rx="2" ry="2" />
<text  x="1058.40" y="177.5" >MatZeroIn..</text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (1,873 us, 0.04%)</title><rect x="1144.5" y="215" width="0.4" height="15.0" fill="rgb(154.974405818894,154.974405818894,143.337505122334)" rx="2" ry="2" />
<text  x="1147.49" y="225.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.action (3,674 us, 0.07%)</title><rect x="406.0" y="119" width="0.8" height="15.0" fill="rgb(156.794286981926,148.756200194766,148.756200194766)" rx="2" ry="2" />
<text  x="408.97" y="129.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (641 us, 0.01%)</title><rect x="1189.2" y="183" width="0.1" height="15.0" fill="rgb(114.819825126002,114.819825126002,149.642546798581)" rx="2" ry="2" />
<text  x="1192.20" y="193.5" ></text>
</g>
<g >
<title>CreateSparsity (2,285,808 us, 44.00%)</title><rect x="533.7" y="167" width="519.2" height="15.0" fill="rgb(131.417165235357,151.108153949907,151.108153949907)" rx="2" ry="2" />
<text  x="536.72" y="177.5" >CreateSparsity</text>
</g>
<g >
<title>perfsolve (3,445,763 us, 66.33%)</title><rect x="407.4" y="71" width="782.6" height="15.0" fill="rgb(154.974960880972,134.808033420783,134.808033420783)" rx="2" ry="2" />
<text  x="410.36" y="81.5" >perfsolve</text>
</g>
</g>
</svg>
