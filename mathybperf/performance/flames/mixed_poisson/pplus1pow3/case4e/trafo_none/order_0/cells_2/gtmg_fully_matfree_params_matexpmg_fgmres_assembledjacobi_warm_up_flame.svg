<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="283" onload="init(evt)" viewBox="0 0 1200 283" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:13px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:18px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 13 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (1 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="283.0" fill="url(#background)"  />
<text id="title" x="600.00" y="26" >Firedrake example</text>
<text id="details" x="10.00" y="265" > </text>
<text id="unzoom" x="10.00" y="26" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="26" >Search</text>
<text id="ignorecase" x="1174.00" y="26" >ic</text>
<text id="matched" x="1090.00" y="265" > </text>
<g id="frames">
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (31,513 us, 0.18%)</title><rect x="142.5" y="87" width="2.1" height="15.0" fill="rgb(153.398092214407,122.718706977121,122.718706977121)" rx="2" ry="2" />
<text  x="145.46" y="97.5" ></text>
</g>
<g >
<title>FunctionSpaceData: CreateElement (9,207 us, 0.05%)</title><rect x="143.8" y="135" width="0.6" height="15.0" fill="rgb(146.993311930567,146.993311930567,155.869673276884)" rx="2" ry="2" />
<text  x="146.78" y="145.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (7,873 us, 0.04%)</title><rect x="141.8" y="119" width="0.5" height="15.0" fill="rgb(139.20164553357,161.060197238721,139.20164553357)" rx="2" ry="2" />
<text  x="144.78" y="129.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (1,547,712 us, 8.77%)</title><rect x="353.0" y="199" width="103.5" height="15.0" fill="rgb(135.947398439889,152.282658854786,152.282658854786)" rx="2" ry="2" />
<text  x="355.99" y="209.5" >Parloop_Cel..</text>
</g>
<g >
<title>all (17,644,926 us, 100%)</title><rect x="10.0" y="39" width="1180.0" height="15.0" fill="rgb(154.540036219059,131.473611012782,131.473611012782)" rx="2" ry="2" />
<text  x="13.00" y="49.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (1,922,809 us, 10.90%)</title><rect x="13.2" y="135" width="128.6" height="15.0" fill="rgb(125.823328395098,149.657899954285,149.657899954285)" rx="2" ry="2" />
<text  x="16.19" y="145.5" >pyop2.global_k..</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (1,036,795 us, 5.88%)</title><rect x="473.7" y="183" width="69.3" height="15.0" fill="rgb(139.874478363176,153.300790686749,153.300790686749)" rx="2" ry="2" />
<text  x="476.66" y="193.5" >pyop2.g..</text>
</g>
<g >
<title>HybridBreak (1,555,155 us, 8.81%)</title><rect x="352.5" y="151" width="104.0" height="15.0" fill="rgb(147.177121521767,147.177121521767,155.905249326794)" rx="2" ry="2" />
<text  x="355.49" y="161.5" >HybridBreak</text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (7,873 us, 0.04%)</title><rect x="141.8" y="151" width="0.5" height="15.0" fill="rgb(142.938539858476,154.095177000346,154.095177000346)" rx="2" ry="2" />
<text  x="144.78" y="161.5" ></text>
</g>
<g >
<title>HybridRHS (183,285 us, 1.04%)</title><rect x="456.5" y="151" width="12.2" height="15.0" fill="rgb(149.384847628612,159.40246666511,149.384847628612)" rx="2" ry="2" />
<text  x="459.49" y="161.5" ></text>
</g>
<g >
<title>HybridInit (1,113,890 us, 6.31%)</title><rect x="468.7" y="119" width="74.5" height="15.0" fill="rgb(136.903771952278,161.434269682187,136.903771952278)" rx="2" ry="2" />
<text  x="471.75" y="129.5" >HybridI..</text>
</g>
<g >
<title>ParLoopExecute (8,154,210 us, 46.21%)</title><rect x="543.7" y="119" width="545.3" height="15.0" fill="rgb(133.710361571396,133.710361571396,153.29877965898)" rx="2" ry="2" />
<text  x="546.70" y="129.5" >ParLoopExecute</text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (5,709 us, 0.03%)</title><rect x="470.6" y="183" width="0.4" height="15.0" fill="rgb(124.904335140301,124.904335140301,151.59438744651)" rx="2" ry="2" />
<text  x="473.58" y="193.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (33,819 us, 0.19%)</title><rect x="142.3" y="71" width="2.3" height="15.0" fill="rgb(135.983497676903,152.292017916234,152.292017916234)" rx="2" ry="2" />
<text  x="145.31" y="81.5" ></text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (1,510,143 us, 8.56%)</title><rect x="1089.0" y="119" width="101.0" height="15.0" fill="rgb(151.278314155546,151.278314155546,125.425676292263)" rx="2" ry="2" />
<text  x="1092.01" y="129.5" >firedrake.t..</text>
</g>
<g >
<title>firedrake.functionspace.VectorFunctionSpace (7,873 us, 0.04%)</title><rect x="141.8" y="87" width="0.5" height="15.0" fill="rgb(153.686850270688,124.932518741938,124.932518741938)" rx="2" ry="2" />
<text  x="144.78" y="97.5" ></text>
</g>
<g >
<title>firedrake (17,644,926 us, 100.00%)</title><rect x="10.0" y="55" width="1180.0" height="15.0" fill="rgb(153.335094562358,122.235724978081,122.235724978081)" rx="2" ry="2" />
<text  x="13.00" y="65.5" >firedrake</text>
</g>
<g >
<title>CreateFunctionSpace (7,885 us, 0.04%)</title><rect x="470.4" y="135" width="0.6" height="15.0" fill="rgb(149.200267266705,135.450684870932,149.200267266705)" rx="2" ry="2" />
<text  x="473.43" y="145.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (31,513 us, 0.18%)</title><rect x="142.5" y="119" width="2.1" height="15.0" fill="rgb(154.405803981828,130.444497194015,130.444497194015)" rx="2" ry="2" />
<text  x="145.46" y="129.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (3,615 us, 0.02%)</title><rect x="543.0" y="135" width="0.2" height="15.0" fill="rgb(147.966401011197,147.966401011197,156.058013098941)" rx="2" ry="2" />
<text  x="546.00" y="145.5" ></text>
</g>
<g >
<title>PCApply (1,738,440 us, 9.85%)</title><rect x="352.5" y="119" width="116.2" height="15.0" fill="rgb(125.214837368709,163.337119498117,125.214837368709)" rx="2" ry="2" />
<text  x="355.49" y="129.5" >PCApply</text>
</g>
<g >
<title>firedrake.ufl_expr.action (5,869 us, 0.03%)</title><rect x="351.8" y="119" width="0.4" height="15.0" fill="rgb(116.385407143608,147.211031481676,147.211031481676)" rx="2" ry="2" />
<text  x="354.82" y="129.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (4,143 us, 0.02%)</title><rect x="352.2" y="119" width="0.3" height="15.0" fill="rgb(154.637877529253,154.637877529253,141.70663725715)" rx="2" ry="2" />
<text  x="355.21" y="129.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (3,407 us, 0.02%)</title><rect x="471.9" y="199" width="0.3" height="15.0" fill="rgb(125.016086411716,163.36947430507,125.016086411716)" rx="2" ry="2" />
<text  x="474.94" y="209.5" ></text>
</g>
<g >
<title>firedrake.functionspace.MixedFunctionSpace (2,176 us, 0.01%)</title><rect x="470.4" y="151" width="0.2" height="15.0" fill="rgb(136.091017596827,161.566578530749,136.091017596827)" rx="2" ry="2" />
<text  x="473.43" y="161.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (1,547,712 us, 8.77%)</title><rect x="353.0" y="215" width="103.5" height="15.0" fill="rgb(137.236084789256,137.236084789256,153.981177701146)" rx="2" ry="2" />
<text  x="355.99" y="225.5" >pyop2.globa..</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (3,544,733 us, 20.09%)</title><rect x="852.0" y="151" width="237.0" height="15.0" fill="rgb(129.459313029838,150.600562637365,150.600562637365)" rx="2" ry="2" />
<text  x="854.96" y="161.5" >pyop2.global_kernel.GlobalKe..</text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (18,124 us, 0.10%)</title><rect x="471.0" y="135" width="1.2" height="15.0" fill="rgb(134.94588528623,152.02300729643,152.02300729643)" rx="2" ry="2" />
<text  x="473.96" y="145.5" ></text>
</g>
<g >
<title>firedrake.utility_meshes.SquareMesh (1,983 us, 0.01%)</title><rect x="349.9" y="71" width="0.1" height="15.0" fill="rgb(152.856020604676,118.562824635853,118.562824635853)" rx="2" ry="2" />
<text  x="352.89" y="81.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (3,407 us, 0.02%)</title><rect x="471.9" y="215" width="0.3" height="15.0" fill="rgb(155.023897014106,155.023897014106,143.577347068359)" rx="2" ry="2" />
<text  x="474.94" y="225.5" ></text>
</g>
<g >
<title>firedrake.parloops.par_loop (1,043,589 us, 5.91%)</title><rect x="473.2" y="135" width="69.8" height="15.0" fill="rgb(149.631340296044,149.631340296044,117.444187588522)" rx="2" ry="2" />
<text  x="476.21" y="145.5" >firedra..</text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalProblem.__init__ (17,596 us, 0.10%)</title><rect x="350.5" y="87" width="1.2" height="15.0" fill="rgb(109.994602478972,145.554156198252,145.554156198252)" rx="2" ry="2" />
<text  x="353.50" y="97.5" ></text>
</g>
<g >
<title>FunctionSpaceData: CreateElement (5,709 us, 0.03%)</title><rect x="470.6" y="199" width="0.4" height="15.0" fill="rgb(140.566255252524,113.326029084593,140.566255252524)" rx="2" ry="2" />
<text  x="473.58" y="209.5" ></text>
</g>
<g >
<title>firedrake.interpolation.make_interpolator (15,527 us, 0.09%)</title><rect x="472.2" y="135" width="1.0" height="15.0" fill="rgb(116.06582381735,147.128176545239,147.128176545239)" rx="2" ry="2" />
<text  x="475.17" y="145.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (5,709 us, 0.03%)</title><rect x="470.6" y="167" width="0.4" height="15.0" fill="rgb(149.403461196739,149.403461196739,116.339850414966)" rx="2" ry="2" />
<text  x="473.58" y="177.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (3,407 us, 0.02%)</title><rect x="471.9" y="231" width="0.3" height="15.0" fill="rgb(126.677961114623,163.098936562736,126.677961114623)" rx="2" ry="2" />
<text  x="474.94" y="241.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.__init__ (12,185 us, 0.07%)</title><rect x="351.7" y="71" width="0.8" height="15.0" fill="rgb(143.874175509983,160.299552823956,143.874175509983)" rx="2" ry="2" />
<text  x="354.68" y="81.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (4,595,170 us, 26.04%)</title><rect x="544.7" y="151" width="307.3" height="15.0" fill="rgb(125.841767768461,149.662680532564,149.662680532564)" rx="2" ry="2" />
<text  x="547.66" y="161.5" >pyop2.global_kernel.GlobalKernel.compile</text>
</g>
<g >
<title>firedrake.parloops.par_loop (1,555,155 us, 8.81%)</title><rect x="352.5" y="167" width="104.0" height="15.0" fill="rgb(150.162412402842,150.162412402842,120.017844721466)" rx="2" ry="2" />
<text  x="355.49" y="177.5" >firedrake.p..</text>
</g>
<g >
<title>firedrake.ufl_expr.derivative (2,109 us, 0.01%)</title><rect x="351.5" y="103" width="0.2" height="15.0" fill="rgb(156.44681339497,146.092236028106,146.092236028106)" rx="2" ry="2" />
<text  x="354.54" y="113.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (8,252 us, 0.05%)</title><rect x="1189.4" y="135" width="0.6" height="15.0" fill="rgb(133.122072195823,94.2503100017968,133.122072195823)" rx="2" ry="2" />
<text  x="1192.45" y="145.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (1,036,795 us, 5.88%)</title><rect x="473.7" y="167" width="69.3" height="15.0" fill="rgb(141.018443381479,141.018443381479,154.713247106093)" rx="2" ry="2" />
<text  x="476.66" y="177.5" >Parloop..</text>
</g>
<g >
<title>firedrake.extrusion_utils.make_extruded_coords (1,966,875 us, 11.15%)</title><rect x="10.2" y="87" width="131.6" height="15.0" fill="rgb(152.15497171789,113.188116503826,113.188116503826)" rx="2" ry="2" />
<text  x="13.25" y="97.5" >firedrake.extru..</text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (18,124 us, 0.10%)</title><rect x="471.0" y="151" width="1.2" height="15.0" fill="rgb(149.09680369016,135.185559456035,149.09680369016)" rx="2" ry="2" />
<text  x="473.96" y="161.5" ></text>
</g>
<g >
<title>firedrake.slate.slac.optimise.optimise (12,615 us, 0.07%)</title><rect x="467.9" y="167" width="0.8" height="15.0" fill="rgb(124.766287821841,149.383852398255,149.383852398255)" rx="2" ry="2" />
<text  x="470.91" y="177.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (13,759 us, 0.08%)</title><rect x="471.3" y="167" width="0.9" height="15.0" fill="rgb(143.77652890838,160.315448782357,143.77652890838)" rx="2" ry="2" />
<text  x="474.25" y="177.5" ></text>
</g>
<g >
<title>CreateExtMesh (1,978,431 us, 11.21%)</title><rect x="10.0" y="71" width="132.3" height="15.0" fill="rgb(156.073899019596,143.233225816901,143.233225816901)" rx="2" ry="2" />
<text  x="13.00" y="81.5" >CreateExtMesh</text>
</g>
<g >
<title>firedrake.functionspace.make_scalar_element (2,160 us, 0.01%)</title><rect x="471.8" y="199" width="0.1" height="15.0" fill="rgb(153.757005749189,125.470377410446,125.470377410446)" rx="2" ry="2" />
<text  x="474.80" y="209.5" ></text>
</g>
<g >
<title>SNESFunctionEval (9,671,210 us, 54.81%)</title><rect x="543.2" y="103" width="646.8" height="15.0" fill="rgb(153.072389948841,120.221656274447,120.221656274447)" rx="2" ry="2" />
<text  x="546.24" y="113.5" >SNESFunctionEval</text>
</g>
<g >
<title>PCSetUp (1,113,890 us, 6.31%)</title><rect x="468.7" y="103" width="74.5" height="15.0" fill="rgb(146.409267989468,154.994995404677,154.994995404677)" rx="2" ry="2" />
<text  x="471.75" y="113.5" >PCSetUp</text>
</g>
<g >
<title>Parloop_Cells_wrap_pyop2_kernel_uniform_extrusion (1,922,809 us, 10.90%)</title><rect x="13.2" y="119" width="128.6" height="15.0" fill="rgb(127.775075513728,150.163908466522,150.163908466522)" rx="2" ry="2" />
<text  x="16.19" y="129.5" >Parloop_Cells_..</text>
</g>
<g >
<title>firedrake.assemble.allocate_matrix (10,012 us, 0.06%)</title><rect x="351.8" y="87" width="0.7" height="15.0" fill="rgb(118.844888740097,147.848674858544,147.848674858544)" rx="2" ry="2" />
<text  x="354.82" y="97.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.LinearVariationalProblem.__init__ (24,732 us, 0.14%)</title><rect x="350.0" y="71" width="1.7" height="15.0" fill="rgb(142.817029800322,160.471646311576,142.817029800322)" rx="2" ry="2" />
<text  x="353.02" y="81.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (4,891 us, 0.03%)</title><rect x="1189.7" y="151" width="0.3" height="15.0" fill="rgb(130.399101023654,150.844211376503,150.844211376503)" rx="2" ry="2" />
<text  x="1192.67" y="161.5" ></text>
</g>
<g >
<title>SCForwardElim (1,738,440 us, 9.85%)</title><rect x="352.5" y="135" width="116.2" height="15.0" fill="rgb(136.218602639797,136.218602639797,153.784245672219)" rx="2" ry="2" />
<text  x="355.49" y="145.5" >SCForwardElim</text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (2,176 us, 0.01%)</title><rect x="470.4" y="183" width="0.2" height="15.0" fill="rgb(119.242120405076,147.95166084576,147.95166084576)" rx="2" ry="2" />
<text  x="473.43" y="193.5" ></text>
</g>
<g >
<title>ParLoopExecute (1,036,795 us, 5.88%)</title><rect x="473.7" y="151" width="69.3" height="15.0" fill="rgb(116.61237103159,116.61237103159,149.989491167405)" rx="2" ry="2" />
<text  x="476.66" y="161.5" >ParLoop..</text>
</g>
<g >
<title>ParLoopExecute (1,547,712 us, 8.77%)</title><rect x="353.0" y="183" width="103.5" height="15.0" fill="rgb(112.965967417537,146.324510071213,146.324510071213)" rx="2" ry="2" />
<text  x="355.99" y="193.5" >ParLoopExec..</text>
</g>
<g >
<title>KSPSolve (1,738,440 us, 9.85%)</title><rect x="352.5" y="103" width="116.2" height="15.0" fill="rgb(153.281323117559,121.823477234617,121.823477234617)" rx="2" ry="2" />
<text  x="355.49" y="113.5" >KSPSolve</text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (2,087 us, 0.01%)</title><rect x="1189.9" y="167" width="0.1" height="15.0" fill="rgb(141.867223786998,116.659760954183,141.867223786998)" rx="2" ry="2" />
<text  x="1192.86" y="177.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (2,176 us, 0.01%)</title><rect x="470.4" y="167" width="0.2" height="15.0" fill="rgb(148.191682968052,148.191682968052,110.467386691327)" rx="2" ry="2" />
<text  x="473.43" y="177.5" ></text>
</g>
<g >
<title>firedrake.matrix_free.operators.ImplicitMatrixContext.__init__ (10,012 us, 0.06%)</title><rect x="351.8" y="103" width="0.7" height="15.0" fill="rgb(153.841227770561,153.841227770561,137.845949965028)" rx="2" ry="2" />
<text  x="354.82" y="113.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (7,873 us, 0.04%)</title><rect x="141.8" y="135" width="0.5" height="15.0" fill="rgb(155.021940511302,155.021940511302,143.567865554772)" rx="2" ry="2" />
<text  x="144.78" y="145.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.solve (12,523,540 us, 70.98%)</title><rect x="352.5" y="71" width="837.5" height="15.0" fill="rgb(153.677683110202,153.677683110202,137.053387380209)" rx="2" ry="2" />
<text  x="355.49" y="81.5" >firedrake.variational_solver.NonlinearVariationalSolver.solve</text>
</g>
<g >
<title>Parloop_Cells_wrap_form0_cell_integral_otherwise (4,607,275 us, 26.11%)</title><rect x="543.8" y="135" width="308.2" height="15.0" fill="rgb(142.767635856471,118.967066882208,142.767635856471)" rx="2" ry="2" />
<text  x="546.85" y="145.5" >Parloop_Cells_wrap_form0_cell_integral..</text>
</g>
<g >
<title>firedrake.ufl_expr.action (7,136 us, 0.04%)</title><rect x="350.0" y="87" width="0.5" height="15.0" fill="rgb(153.845326094013,126.147500054102,126.147500054102)" rx="2" ry="2" />
<text  x="353.02" y="97.5" ></text>
</g>
<g >
<title>ParLoopExecute (1,922,809 us, 10.90%)</title><rect x="13.2" y="103" width="128.6" height="15.0" fill="rgb(150.581492905308,150.581492905308,122.04877331034)" rx="2" ry="2" />
<text  x="16.19" y="113.5" >ParLoopExecute</text>
</g>
<g >
<title>firedrake.mesh.MeshTopology._facets (2,570 us, 0.01%)</title><rect x="144.4" y="135" width="0.2" height="15.0" fill="rgb(152.379349713554,114.908347803916,114.908347803916)" rx="2" ry="2" />
<text  x="147.40" y="145.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (15,487 us, 0.09%)</title><rect x="350.5" y="103" width="1.0" height="15.0" fill="rgb(144.798617232223,160.149062311034,144.798617232223)" rx="2" ry="2" />
<text  x="353.50" y="113.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_form1_cell_integral_otherwise (3,544,733 us, 20.09%)</title><rect x="852.0" y="135" width="237.0" height="15.0" fill="rgb(128.739264270086,150.413883329282,150.413883329282)" rx="2" ry="2" />
<text  x="854.96" y="145.5" >Parloop_Cells_wrap_form1_cel..</text>
</g>
<g >
<title>SNESSolve (12,523,540 us, 70.98%)</title><rect x="352.5" y="87" width="837.5" height="15.0" fill="rgb(141.827365882198,153.807094858348,153.807094858348)" rx="2" ry="2" />
<text  x="355.49" y="97.5" >SNESSolve</text>
</g>
<g >
<title>CreateFunctionSpace (7,873 us, 0.04%)</title><rect x="141.8" y="103" width="0.5" height="15.0" fill="rgb(154.61495638781,154.61495638781,141.595557879385)" rx="2" ry="2" />
<text  x="144.78" y="113.5" ></text>
</g>
<g >
<title>firedrake.__init__ (3,070,236 us, 17.40%)</title><rect x="144.6" y="71" width="205.3" height="15.0" fill="rgb(154.543176631843,131.4976875108,131.4976875108)" rx="2" ry="2" />
<text  x="147.57" y="81.5" >firedrake.__init__</text>
</g>
<g >
<title>CreateFunctionSpace (10,246 us, 0.06%)</title><rect x="471.5" y="183" width="0.7" height="15.0" fill="rgb(155.650698291528,139.988686901714,139.988686901714)" rx="2" ry="2" />
<text  x="474.49" y="193.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (31,513 us, 0.18%)</title><rect x="142.5" y="103" width="2.1" height="15.0" fill="rgb(127.772299317124,150.163188711847,150.163188711847)" rx="2" ry="2" />
<text  x="145.46" y="113.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (5,709 us, 0.03%)</title><rect x="470.6" y="151" width="0.4" height="15.0" fill="rgb(136.158241015967,136.158241015967,153.772562777284)" rx="2" ry="2" />
<text  x="473.58" y="161.5" ></text>
</g>
<g >
<title>Log_Event_form0_cell_integral_otherwise (12,105 us, 0.07%)</title><rect x="543.8" y="151" width="0.9" height="15.0" fill="rgb(136.477472115562,161.503667330025,136.477472115562)" rx="2" ry="2" />
<text  x="546.85" y="161.5" ></text>
</g>
</g>
</svg>
