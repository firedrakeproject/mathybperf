<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="283" onload="init(evt)" viewBox="0 0 1200 283" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:13px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:18px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 13 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (1 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="283.0" fill="url(#background)"  />
<text id="title" x="600.00" y="26" >Firedrake example</text>
<text id="details" x="10.00" y="265" > </text>
<text id="unzoom" x="10.00" y="26" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="26" >Search</text>
<text id="ignorecase" x="1174.00" y="26" >ic</text>
<text id="matched" x="1090.00" y="265" > </text>
<g id="frames">
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (4,337 us, 0.03%)</title><rect x="1189.6" y="151" width="0.4" height="15.0" fill="rgb(148.438076747711,159.556592157349,148.438076747711)" rx="2" ry="2" />
<text  x="1192.63" y="161.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (20,429 us, 0.15%)</title><rect x="118.5" y="71" width="1.8" height="15.0" fill="rgb(147.187398275557,159.760190978398,147.187398275557)" rx="2" ry="2" />
<text  x="121.54" y="81.5" ></text>
</g>
<g >
<title>HybridBreak (1,239,411 us, 9.04%)</title><rect x="305.9" y="151" width="106.7" height="15.0" fill="rgb(109.631739852335,109.631739852335,148.638401261742)" rx="2" ry="2" />
<text  x="308.91" y="161.5" >HybridBreak</text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (1,263,790 us, 9.22%)</title><rect x="1081.2" y="119" width="108.8" height="15.0" fill="rgb(150.556568910671,150.556568910671,121.927987797867)" rx="2" ry="2" />
<text  x="1084.19" y="129.5" >firedrake.ts..</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (1,232,593 us, 8.99%)</title><rect x="306.5" y="215" width="106.1" height="15.0" fill="rgb(128.410930355174,150.328759721712,150.328759721712)" rx="2" ry="2" />
<text  x="309.50" y="225.5" >pyop2.globa..</text>
</g>
<g >
<title>CreateExtMesh (1,260,631 us, 9.20%)</title><rect x="10.0" y="71" width="108.5" height="15.0" fill="rgb(112.025486126632,146.080681588386,146.080681588386)" rx="2" ry="2" />
<text  x="13.00" y="81.5" >CreateExtMesh</text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (7,232 us, 0.05%)</title><rect x="1189.4" y="135" width="0.6" height="15.0" fill="rgb(136.008978936617,101.648008525082,136.008978936617)" rx="2" ry="2" />
<text  x="1192.38" y="145.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.action (6,042 us, 0.04%)</title><rect x="303.5" y="87" width="0.5" height="15.0" fill="rgb(156.26272319818,144.680877852715,144.680877852715)" rx="2" ry="2" />
<text  x="306.47" y="97.5" ></text>
</g>
<g >
<title>PCSetUp (1,001,385 us, 7.31%)</title><rect x="422.9" y="103" width="86.2" height="15.0" fill="rgb(156.05322759453,143.074744891394,143.074744891394)" rx="2" ry="2" />
<text  x="425.89" y="113.5" >PCSetUp</text>
</g>
<g >
<title>SCForwardElim (1,358,622 us, 9.91%)</title><rect x="305.9" y="135" width="117.0" height="15.0" fill="rgb(150.382989468345,138.481410512633,150.382989468345)" rx="2" ry="2" />
<text  x="308.91" y="145.5" >SCForwardElim</text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (1,833 us, 0.01%)</title><rect x="1189.8" y="167" width="0.2" height="15.0" fill="rgb(108.929720743732,108.929720743732,148.502526595561)" rx="2" ry="2" />
<text  x="1192.84" y="177.5" ></text>
</g>
<g >
<title>CreateMesh (1,603 us, 0.01%)</title><rect x="120.3" y="71" width="0.1" height="15.0" fill="rgb(144.862373548367,124.334832217689,144.862373548367)" rx="2" ry="2" />
<text  x="123.30" y="81.5" ></text>
</g>
<g >
<title>firedrake.interpolation.make_interpolator (14,231 us, 0.10%)</title><rect x="426.7" y="135" width="1.3" height="15.0" fill="rgb(127.527527995406,150.09972948029,150.09972948029)" rx="2" ry="2" />
<text  x="429.75" y="145.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_form1_cell_integral_otherwise (2,988,325 us, 21.80%)</title><rect x="823.9" y="135" width="257.3" height="15.0" fill="rgb(152.388985855269,143.621776254127,152.388985855269)" rx="2" ry="2" />
<text  x="826.90" y="145.5" >Parloop_Cells_wrap_form1_cell_i..</text>
</g>
<g >
<title>firedrake.functionspace.MixedFunctionSpace (1,944 us, 0.01%)</title><rect x="424.9" y="151" width="0.2" height="15.0" fill="rgb(142.835467801224,154.068454615132,154.068454615132)" rx="2" ry="2" />
<text  x="427.92" y="161.5" ></text>
</g>
<g >
<title>firedrake.parloops.par_loop (939,735 us, 6.86%)</title><rect x="428.0" y="135" width="80.9" height="15.0" fill="rgb(131.382090166322,131.382090166322,152.848146483804)" rx="2" ry="2" />
<text  x="430.97" y="145.5" >firedrak..</text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (20,429 us, 0.15%)</title><rect x="118.5" y="119" width="1.8" height="15.0" fill="rgb(110.952082386434,145.802391729816,145.802391729816)" rx="2" ry="2" />
<text  x="121.54" y="129.5" ></text>
</g>
<g >
<title>firedrake.mesh.MeshTopology._facets (2,274 us, 0.02%)</title><rect x="120.1" y="135" width="0.2" height="15.0" fill="rgb(145.210380804954,145.210380804954,155.524589833217)" rx="2" ry="2" />
<text  x="123.10" y="145.5" ></text>
</g>
<g >
<title>firedrake.utility_meshes.SquareMesh (1,833 us, 0.01%)</title><rect x="303.3" y="71" width="0.2" height="15.0" fill="rgb(155.126944517004,135.973241297029,135.973241297029)" rx="2" ry="2" />
<text  x="306.31" y="81.5" ></text>
</g>
<g >
<title>all (13,705,406 us, 100%)</title><rect x="10.0" y="39" width="1180.0" height="15.0" fill="rgb(132.316887624037,151.341415309935,151.341415309935)" rx="2" ry="2" />
<text  x="13.00" y="49.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (2,789 us, 0.02%)</title><rect x="426.5" y="215" width="0.2" height="15.0" fill="rgb(118.876277242144,147.856812618334,147.856812618334)" rx="2" ry="2" />
<text  x="429.51" y="225.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.LinearVariationalProblem.__init__ (18,703 us, 0.14%)</title><rect x="303.5" y="71" width="1.6" height="15.0" fill="rgb(136.007392470821,136.007392470821,153.743366284675)" rx="2" ry="2" />
<text  x="306.47" y="81.5" ></text>
</g>
<g >
<title>firedrake.matrix_free.operators.ImplicitMatrixContext.__init__ (7,686 us, 0.06%)</title><rect x="305.2" y="103" width="0.7" height="15.0" fill="rgb(130.90784876433,150.9761089389,150.9761089389)" rx="2" ry="2" />
<text  x="308.25" y="113.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (13,409 us, 0.10%)</title><rect x="425.6" y="135" width="1.1" height="15.0" fill="rgb(141.769992031216,160.6420943205,141.769992031216)" rx="2" ry="2" />
<text  x="428.59" y="145.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (6,471 us, 0.05%)</title><rect x="118.0" y="103" width="0.5" height="15.0" fill="rgb(156.091948988948,143.371608915269,143.371608915269)" rx="2" ry="2" />
<text  x="120.98" y="113.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (9,422 us, 0.07%)</title><rect x="425.9" y="167" width="0.8" height="15.0" fill="rgb(149.044320563201,149.044320563201,114.599399652434)" rx="2" ry="2" />
<text  x="428.93" y="177.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (20,429 us, 0.15%)</title><rect x="118.5" y="103" width="1.8" height="15.0" fill="rgb(152.323569917757,114.480702702804,114.480702702804)" rx="2" ry="2" />
<text  x="121.54" y="113.5" ></text>
</g>
<g >
<title>PCApply (1,358,622 us, 9.91%)</title><rect x="305.9" y="119" width="117.0" height="15.0" fill="rgb(153.437329434627,153.437329434627,135.888596490885)" rx="2" ry="2" />
<text  x="308.91" y="129.5" >PCApply</text>
</g>
<g >
<title>ParLoopExecute (6,640,475 us, 48.45%)</title><rect x="509.5" y="119" width="571.7" height="15.0" fill="rgb(110.954388428741,110.954388428741,148.894397760402)" rx="2" ry="2" />
<text  x="512.46" y="129.5" >ParLoopExecute</text>
</g>
<g >
<title>firedrake.__init__ (2,124,044 us, 15.50%)</title><rect x="120.4" y="71" width="182.9" height="15.0" fill="rgb(149.4544580783,149.4544580783,116.586989148686)" rx="2" ry="2" />
<text  x="123.43" y="81.5" >firedrake.__init__</text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (10,917 us, 0.08%)</title><rect x="304.1" y="103" width="1.0" height="15.0" fill="rgb(154.828127677151,133.682312191489,133.682312191489)" rx="2" ry="2" />
<text  x="307.14" y="113.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (3,649,171 us, 26.63%)</title><rect x="509.7" y="151" width="314.2" height="15.0" fill="rgb(148.058188197392,159.618434479494,148.058188197392)" rx="2" ry="2" />
<text  x="512.72" y="161.5" >pyop2.global_kernel.GlobalKernel.compile</text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (5,882 us, 0.04%)</title><rect x="425.1" y="167" width="0.5" height="15.0" fill="rgb(139.339296181039,110.181946463913,139.339296181039)" rx="2" ry="2" />
<text  x="428.08" y="177.5" ></text>
</g>
<g >
<title>SNESSolve (10,268,466 us, 74.92%)</title><rect x="305.9" y="87" width="884.1" height="15.0" fill="rgb(137.538167726509,137.538167726509,154.039645366421)" rx="2" ry="2" />
<text  x="308.91" y="97.5" >SNESSolve</text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.__init__ (9,697 us, 0.07%)</title><rect x="305.1" y="71" width="0.8" height="15.0" fill="rgb(124.896851556882,149.417702255488,149.417702255488)" rx="2" ry="2" />
<text  x="308.08" y="81.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (6,561 us, 0.05%)</title><rect x="426.2" y="183" width="0.5" height="15.0" fill="rgb(112.717150833049,112.717150833049,149.23557758059)" rx="2" ry="2" />
<text  x="429.18" y="193.5" ></text>
</g>
<g >
<title>firedrake.extrusion_utils.make_extruded_coords (1,251,523 us, 9.13%)</title><rect x="10.2" y="87" width="107.8" height="15.0" fill="rgb(138.019505793855,138.019505793855,154.132807573004)" rx="2" ry="2" />
<text  x="13.23" y="97.5" >firedrake.ex..</text>
</g>
<g >
<title>Parloop_Cells_wrap_form0_cell_integral_otherwise (3,652,150 us, 26.65%)</title><rect x="509.5" y="135" width="314.4" height="15.0" fill="rgb(143.954083959875,143.954083959875,155.281435605137)" rx="2" ry="2" />
<text  x="512.46" y="145.5" >Parloop_Cells_wrap_form0_cell_integral..</text>
</g>
<g >
<title>FunctionSpaceData: CreateElement (7,897 us, 0.06%)</title><rect x="119.4" y="135" width="0.7" height="15.0" fill="rgb(143.264674416134,143.264674416134,155.148001499897)" rx="2" ry="2" />
<text  x="122.42" y="145.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (933,078 us, 6.81%)</title><rect x="428.5" y="183" width="80.4" height="15.0" fill="rgb(142.668549139885,118.713157170955,142.668549139885)" rx="2" ry="2" />
<text  x="431.54" y="193.5" >pyop2.gl..</text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (6,471 us, 0.05%)</title><rect x="118.0" y="119" width="0.5" height="15.0" fill="rgb(143.118126304092,143.118126304092,155.119637349179)" rx="2" ry="2" />
<text  x="120.98" y="129.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalProblem.__init__ (12,661 us, 0.09%)</title><rect x="304.0" y="87" width="1.1" height="15.0" fill="rgb(121.327617406943,148.492345253652,148.492345253652)" rx="2" ry="2" />
<text  x="306.99" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (5,882 us, 0.04%)</title><rect x="425.1" y="151" width="0.5" height="15.0" fill="rgb(140.82165705381,160.796474433101,140.82165705381)" rx="2" ry="2" />
<text  x="428.08" y="161.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (2,988,325 us, 21.80%)</title><rect x="823.9" y="151" width="257.3" height="15.0" fill="rgb(117.146562452756,117.146562452756,150.092883055372)" rx="2" ry="2" />
<text  x="826.90" y="161.5" >pyop2.global_kernel.GlobalKerne..</text>
</g>
<g >
<title>firedrake (13,705,406 us, 100.00%)</title><rect x="10.0" y="55" width="1180.0" height="15.0" fill="rgb(116.830196336351,116.830196336351,150.03165090381)" rx="2" ry="2" />
<text  x="13.00" y="65.5" >firedrake</text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (3,028 us, 0.02%)</title><rect x="305.7" y="119" width="0.2" height="15.0" fill="rgb(147.793287952177,159.661557775227,147.793287952177)" rx="2" ry="2" />
<text  x="308.65" y="129.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (6,471 us, 0.05%)</title><rect x="118.0" y="151" width="0.5" height="15.0" fill="rgb(149.848806625952,149.848806625952,118.498062879613)" rx="2" ry="2" />
<text  x="120.98" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (20,429 us, 0.15%)</title><rect x="118.5" y="87" width="1.8" height="15.0" fill="rgb(150.724771109032,150.724771109032,122.743121528386)" rx="2" ry="2" />
<text  x="121.54" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (5,882 us, 0.04%)</title><rect x="425.1" y="183" width="0.5" height="15.0" fill="rgb(155.830691546773,155.830691546773,147.487197495899)" rx="2" ry="2" />
<text  x="428.08" y="193.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (933,078 us, 6.81%)</title><rect x="428.5" y="167" width="80.4" height="15.0" fill="rgb(146.225482080209,154.94734720598,154.94734720598)" rx="2" ry="2" />
<text  x="431.54" y="177.5" >Parloop_..</text>
</g>
<g >
<title>Parloop_Cells_wrap_pyop2_kernel_uniform_extrusion (1,218,596 us, 8.89%)</title><rect x="13.1" y="119" width="104.9" height="15.0" fill="rgb(127.748452348817,127.748452348817,152.144861744932)" rx="2" ry="2" />
<text  x="16.06" y="129.5" >Parloop_Cel..</text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (2,587 us, 0.02%)</title><rect x="508.9" y="135" width="0.2" height="15.0" fill="rgb(143.999205132509,154.370164293614,154.370164293614)" rx="2" ry="2" />
<text  x="511.88" y="145.5" ></text>
</g>
<g >
<title>Log_Event_form0_cell_integral_otherwise (2,979 us, 0.02%)</title><rect x="509.5" y="151" width="0.2" height="15.0" fill="rgb(126.66635929036,126.66635929036,151.935424378779)" rx="2" ry="2" />
<text  x="512.46" y="161.5" ></text>
</g>
<g >
<title>ParLoopExecute (1,218,596 us, 8.89%)</title><rect x="13.1" y="103" width="104.9" height="15.0" fill="rgb(139.092035994628,139.092035994628,154.340394063476)" rx="2" ry="2" />
<text  x="16.06" y="113.5" >ParLoopExec..</text>
</g>
<g >
<title>HybridInit (1,001,385 us, 7.31%)</title><rect x="422.9" y="119" width="86.2" height="15.0" fill="rgb(154.518986842441,154.518986842441,141.130474697986)" rx="2" ry="2" />
<text  x="425.89" y="129.5" >HybridInit</text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (2,789 us, 0.02%)</title><rect x="426.5" y="199" width="0.2" height="15.0" fill="rgb(113.03574153127,113.03574153127,149.297240296375)" rx="2" ry="2" />
<text  x="429.51" y="209.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (1,944 us, 0.01%)</title><rect x="424.9" y="199" width="0.2" height="15.0" fill="rgb(151.601233882008,141.603161822645,151.601233882008)" rx="2" ry="2" />
<text  x="427.92" y="209.5" ></text>
</g>
<g >
<title>SNESFunctionEval (7,908,459 us, 57.70%)</title><rect x="509.1" y="103" width="680.9" height="15.0" fill="rgb(151.14407392669,151.14407392669,124.775127490885)" rx="2" ry="2" />
<text  x="512.10" y="113.5" >SNESFunctionEval</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (1,218,596 us, 8.89%)</title><rect x="13.1" y="135" width="104.9" height="15.0" fill="rgb(140.655462335624,160.823529387224,140.655462335624)" rx="2" ry="2" />
<text  x="16.06" y="145.5" >pyop2.globa..</text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.solve (10,268,466 us, 74.92%)</title><rect x="305.9" y="71" width="884.1" height="15.0" fill="rgb(139.517199769524,153.20816290321,153.20816290321)" rx="2" ry="2" />
<text  x="308.91" y="81.5" >firedrake.variational_solver.NonlinearVariationalSolver.solve</text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (1,944 us, 0.01%)</title><rect x="424.9" y="215" width="0.2" height="15.0" fill="rgb(144.729398939465,144.729398939465,155.431496568929)" rx="2" ry="2" />
<text  x="427.92" y="225.5" ></text>
</g>
<g >
<title>HybridRHS (119,211 us, 0.87%)</title><rect x="412.6" y="151" width="10.3" height="15.0" fill="rgb(143.881664007805,154.33969066869,154.33969066869)" rx="2" ry="2" />
<text  x="415.62" y="161.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (13,409 us, 0.10%)</title><rect x="425.6" y="151" width="1.1" height="15.0" fill="rgb(130.290694885953,162.510817111589,130.290694885953)" rx="2" ry="2" />
<text  x="428.59" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (6,471 us, 0.05%)</title><rect x="118.0" y="135" width="0.5" height="15.0" fill="rgb(139.716026446613,153.259710560233,153.259710560233)" rx="2" ry="2" />
<text  x="120.98" y="145.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (7,826 us, 0.06%)</title><rect x="424.9" y="135" width="0.7" height="15.0" fill="rgb(148.715046639864,148.715046639864,113.003687562417)" rx="2" ry="2" />
<text  x="427.92" y="145.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (1,944 us, 0.01%)</title><rect x="424.9" y="167" width="0.2" height="15.0" fill="rgb(136.757507080465,136.757507080465,153.888549757509)" rx="2" ry="2" />
<text  x="427.92" y="177.5" ></text>
</g>
<g >
<title>ParLoopExecute (1,232,593 us, 8.99%)</title><rect x="306.5" y="183" width="106.1" height="15.0" fill="rgb(140.149008127241,153.371965070026,153.371965070026)" rx="2" ry="2" />
<text  x="309.50" y="193.5" >ParLoopExec..</text>
</g>
<g >
<title>firedrake.functionspace.make_scalar_element (1,733 us, 0.01%)</title><rect x="426.4" y="199" width="0.1" height="15.0" fill="rgb(134.749758516534,134.749758516534,153.499953261265)" rx="2" ry="2" />
<text  x="429.36" y="209.5" ></text>
</g>
<g >
<title>FunctionSpaceData: CreateElement (5,882 us, 0.04%)</title><rect x="425.1" y="199" width="0.5" height="15.0" fill="rgb(153.802932787388,125.822484703311,125.822484703311)" rx="2" ry="2" />
<text  x="428.08" y="209.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (1,232,593 us, 8.99%)</title><rect x="306.5" y="199" width="106.1" height="15.0" fill="rgb(156.199177025194,144.19369052649,144.19369052649)" rx="2" ry="2" />
<text  x="309.50" y="209.5" >Parloop_Cel..</text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (2,789 us, 0.02%)</title><rect x="426.5" y="231" width="0.2" height="15.0" fill="rgb(155.19456179004,136.491640390309,136.491640390309)" rx="2" ry="2" />
<text  x="429.51" y="241.5" ></text>
</g>
<g >
<title>firedrake.parloops.par_loop (1,239,411 us, 9.04%)</title><rect x="305.9" y="167" width="106.7" height="15.0" fill="rgb(152.943951262838,119.236959681761,119.236959681761)" rx="2" ry="2" />
<text  x="308.91" y="177.5" >firedrake.p..</text>
</g>
<g >
<title>firedrake.functionspace.VectorFunctionSpace (6,471 us, 0.05%)</title><rect x="118.0" y="87" width="0.5" height="15.0" fill="rgb(142.294231363317,142.294231363317,154.960173812255)" rx="2" ry="2" />
<text  x="120.98" y="97.5" ></text>
</g>
<g >
<title>ParLoopExecute (933,078 us, 6.81%)</title><rect x="428.5" y="151" width="80.4" height="15.0" fill="rgb(129.141337426594,150.518124518006,150.518124518006)" rx="2" ry="2" />
<text  x="431.54" y="161.5" >ParLoopE..</text>
</g>
<g >
<title>firedrake.utility_meshes.RectangleMesh (1,833 us, 0.01%)</title><rect x="303.3" y="87" width="0.2" height="15.0" fill="rgb(110.262197400031,145.623532659267,145.623532659267)" rx="2" ry="2" />
<text  x="306.31" y="97.5" ></text>
</g>
<g >
<title>firedrake.assemble.allocate_matrix (7,686 us, 0.06%)</title><rect x="305.2" y="87" width="0.7" height="15.0" fill="rgb(128.233855082362,162.84565149822,128.233855082362)" rx="2" ry="2" />
<text  x="308.25" y="97.5" ></text>
</g>
<g >
<title>firedrake.slate.slac.optimise.optimise (8,193 us, 0.06%)</title><rect x="422.2" y="167" width="0.7" height="15.0" fill="rgb(135.575153738481,135.575153738481,153.65970717519)" rx="2" ry="2" />
<text  x="425.18" y="177.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (1,944 us, 0.01%)</title><rect x="424.9" y="183" width="0.2" height="15.0" fill="rgb(152.280529423944,152.280529423944,130.282565669881)" rx="2" ry="2" />
<text  x="427.92" y="193.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.action (4,658 us, 0.03%)</title><rect x="305.2" y="119" width="0.5" height="15.0" fill="rgb(145.699406228606,145.699406228606,155.619239915214)" rx="2" ry="2" />
<text  x="308.25" y="129.5" ></text>
</g>
<g >
<title>KSPSolve (1,358,622 us, 9.91%)</title><rect x="305.9" y="103" width="117.0" height="15.0" fill="rgb(151.488765597894,141.314961844604,151.488765597894)" rx="2" ry="2" />
<text  x="308.91" y="113.5" >KSPSolve</text>
</g>
</g>
</svg>
