<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="283" onload="init(evt)" viewBox="0 0 1200 283" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:13px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:18px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 13 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (1 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="283.0" fill="url(#background)"  />
<text id="title" x="600.00" y="26" >Firedrake example</text>
<text id="details" x="10.00" y="265" > </text>
<text id="unzoom" x="10.00" y="26" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="26" >Search</text>
<text id="ignorecase" x="1174.00" y="26" >ic</text>
<text id="matched" x="1090.00" y="265" > </text>
<g id="frames">
<g >
<title>HybridBreak (1,356,694 us, 8.78%)</title><rect x="329.3" y="151" width="103.6" height="15.0" fill="rgb(155.245296334864,136.880605233959,136.880605233959)" rx="2" ry="2" />
<text  x="332.33" y="161.5" >HybridBreak</text>
</g>
<g >
<title>SCForwardElim (1,486,475 us, 9.62%)</title><rect x="329.3" y="135" width="113.5" height="15.0" fill="rgb(146.3605778865,154.982372044648,154.982372044648)" rx="2" ry="2" />
<text  x="332.33" y="145.5" >SCForwardElim</text>
</g>
<g >
<title>Log_Event_form0_cell_integral_otherwise (2,847 us, 0.02%)</title><rect x="534.9" y="151" width="0.2" height="15.0" fill="rgb(132.993296582606,132.993296582606,153.159992886956)" rx="2" ry="2" />
<text  x="537.88" y="161.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (13,666 us, 0.09%)</title><rect x="446.7" y="167" width="1.0" height="15.0" fill="rgb(156.24239396843,144.525020424633,144.525020424633)" rx="2" ry="2" />
<text  x="449.71" y="177.5" ></text>
</g>
<g >
<title>firedrake.parloops.par_loop (1,356,694 us, 8.78%)</title><rect x="329.3" y="167" width="103.6" height="15.0" fill="rgb(153.224684463141,121.389247550751,121.389247550751)" rx="2" ry="2" />
<text  x="332.33" y="177.5" >firedrake.p..</text>
</g>
<g >
<title>firedrake.__init__ (2,605,797 us, 16.86%)</title><rect x="127.8" y="71" width="198.9" height="15.0" fill="rgb(152.202095689305,152.202095689305,129.902463725095)" rx="2" ry="2" />
<text  x="130.76" y="81.5" >firedrake.__init__</text>
</g>
<g >
<title>HybridRHS (129,781 us, 0.84%)</title><rect x="432.9" y="151" width="9.9" height="15.0" fill="rgb(153.704864930188,125.070631131442,125.070631131442)" rx="2" ry="2" />
<text  x="435.91" y="161.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_pyop2_kernel_uniform_extrusion (1,461,120 us, 9.45%)</title><rect x="13.5" y="119" width="111.6" height="15.0" fill="rgb(134.286605947897,97.2344277414851,134.286605947897)" rx="2" ry="2" />
<text  x="16.51" y="129.5" >Parloop_Cell..</text>
</g>
<g >
<title>Parloop_Cells_wrap_form0_cell_integral_otherwise (3,862,952 us, 24.99%)</title><rect x="534.9" y="135" width="294.9" height="15.0" fill="rgb(151.792731037598,151.792731037598,127.918619643742)" rx="2" ry="2" />
<text  x="537.88" y="145.5" >Parloop_Cells_wrap_form0_cell_integr..</text>
</g>
<g >
<title>CreateFunctionSpace (7,383 us, 0.05%)</title><rect x="125.1" y="103" width="0.5" height="15.0" fill="rgb(152.203480044063,152.203480044063,129.909172521228)" rx="2" ry="2" />
<text  x="128.06" y="113.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (3,564 us, 0.02%)</title><rect x="447.5" y="231" width="0.2" height="15.0" fill="rgb(147.089226997928,147.089226997928,155.88823748347)" rx="2" ry="2" />
<text  x="450.48" y="241.5" ></text>
</g>
<g >
<title>firedrake.matrix_free.operators.ImplicitMatrixContext.__init__ (8,625 us, 0.06%)</title><rect x="328.7" y="103" width="0.6" height="15.0" fill="rgb(137.652730533332,152.724781990123,152.724781990123)" rx="2" ry="2" />
<text  x="331.67" y="113.5" ></text>
</g>
<g >
<title>CreateExtMesh (1,514,492 us, 9.80%)</title><rect x="10.0" y="71" width="115.6" height="15.0" fill="rgb(155.222070384853,136.702539617208,136.702539617208)" rx="2" ry="2" />
<text  x="13.00" y="81.5" >CreateExtMesh</text>
</g>
<g >
<title>ParLoopExecute (7,117,217 us, 46.05%)</title><rect x="534.9" y="119" width="543.4" height="15.0" fill="rgb(133.89797962988,151.751328052191,151.751328052191)" rx="2" ry="2" />
<text  x="537.88" y="129.5" >ParLoopExecute</text>
</g>
<g >
<title>FunctionSpaceData: CreateElement (8,636 us, 0.06%)</title><rect x="126.7" y="135" width="0.7" height="15.0" fill="rgb(153.6329524705,124.519302273834,124.519302273834)" rx="2" ry="2" />
<text  x="129.73" y="145.5" ></text>
</g>
<g >
<title>firedrake.functionspace.VectorFunctionSpace (7,383 us, 0.05%)</title><rect x="125.1" y="87" width="0.5" height="15.0" fill="rgb(106.922932485708,144.757797311109,144.757797311109)" rx="2" ry="2" />
<text  x="128.06" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspace.MixedFunctionSpace (5,829 us, 0.04%)</title><rect x="445.0" y="151" width="0.4" height="15.0" fill="rgb(153.392613895423,122.676706531576,122.676706531576)" rx="2" ry="2" />
<text  x="447.97" y="161.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (1,105,092 us, 7.15%)</title><rect x="449.8" y="183" width="84.4" height="15.0" fill="rgb(152.94514059731,152.94514059731,133.503373663888)" rx="2" ry="2" />
<text  x="452.80" y="193.5" >pyop2.gl..</text>
</g>
<g >
<title>PCApply (1,486,475 us, 9.62%)</title><rect x="329.3" y="119" width="113.5" height="15.0" fill="rgb(140.360966636902,153.426917276234,153.426917276234)" rx="2" ry="2" />
<text  x="332.33" y="129.5" >PCApply</text>
</g>
<g >
<title>ParLoopExecute (1,105,092 us, 7.15%)</title><rect x="449.8" y="151" width="84.4" height="15.0" fill="rgb(155.780490692024,155.780490692024,147.243916430579)" rx="2" ry="2" />
<text  x="452.80" y="161.5" >ParLoopE..</text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (23,966 us, 0.16%)</title><rect x="125.8" y="87" width="1.8" height="15.0" fill="rgb(156.798892911059,148.791512318118,148.791512318118)" rx="2" ry="2" />
<text  x="128.78" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (11,111 us, 0.07%)</title><rect x="445.4" y="151" width="0.9" height="15.0" fill="rgb(135.50863664867,135.50863664867,153.646832899743)" rx="2" ry="2" />
<text  x="448.41" y="161.5" ></text>
</g>
<g >
<title>firedrake.parloops.par_loop (1,114,888 us, 7.21%)</title><rect x="449.1" y="135" width="85.1" height="15.0" fill="rgb(154.81343211175,154.81343211175,142.557401772329)" rx="2" ry="2" />
<text  x="452.06" y="145.5" >firedrake..</text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (2,915 us, 0.02%)</title><rect x="534.2" y="135" width="0.2" height="15.0" fill="rgb(144.412658244015,160.211892843998,144.412658244015)" rx="2" ry="2" />
<text  x="537.17" y="145.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (7,383 us, 0.05%)</title><rect x="125.1" y="151" width="0.5" height="15.0" fill="rgb(155.686373433556,140.262196323932,140.262196323932)" rx="2" ry="2" />
<text  x="128.06" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (23,966 us, 0.16%)</title><rect x="125.8" y="119" width="1.8" height="15.0" fill="rgb(155.57627234089,155.57627234089,146.254242882776)" rx="2" ry="2" />
<text  x="128.78" y="129.5" ></text>
</g>
<g >
<title>firedrake.function.Function.__init__ (1,828 us, 0.01%)</title><rect x="447.7" y="135" width="0.2" height="15.0" fill="rgb(111.81786527887,111.81786527887,149.061522312039)" rx="2" ry="2" />
<text  x="450.75" y="145.5" ></text>
</g>
<g >
<title>firedrake.utility_meshes.RectangleMesh (2,169 us, 0.01%)</title><rect x="326.7" y="87" width="0.2" height="15.0" fill="rgb(116.036492277187,147.120572071863,147.120572071863)" rx="2" ry="2" />
<text  x="329.70" y="97.5" ></text>
</g>
<g >
<title>firedrake.slate.slac.optimise.optimise (9,087 us, 0.06%)</title><rect x="442.1" y="167" width="0.7" height="15.0" fill="rgb(121.073892632665,148.426564756617,148.426564756617)" rx="2" ry="2" />
<text  x="445.12" y="177.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (23,966 us, 0.16%)</title><rect x="125.8" y="103" width="1.8" height="15.0" fill="rgb(128.058613801555,128.058613801555,152.204892993849)" rx="2" ry="2" />
<text  x="128.78" y="113.5" ></text>
</g>
<g >
<title>firedrake.extrusion_utils.make_extruded_coords (1,504,108 us, 9.73%)</title><rect x="10.2" y="87" width="114.9" height="15.0" fill="rgb(132.73875040792,151.450787142794,151.450787142794)" rx="2" ry="2" />
<text  x="13.23" y="97.5" >firedrake.ex..</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (3,860,105 us, 24.97%)</title><rect x="535.1" y="151" width="294.7" height="15.0" fill="rgb(156.250290981936,144.585564194844,144.585564194844)" rx="2" ry="2" />
<text  x="538.10" y="161.5" >pyop2.global_kernel.GlobalKernel.com..</text>
</g>
<g >
<title>PCSetUp (1,199,530 us, 7.76%)</title><rect x="442.8" y="103" width="91.6" height="15.0" fill="rgb(113.214950797491,146.389061317868,146.389061317868)" rx="2" ry="2" />
<text  x="445.82" y="113.5" >PCSetUp</text>
</g>
<g >
<title>Parloop_Cells_wrap_form1_cell_integral_otherwise (3,254,265 us, 21.05%)</title><rect x="829.8" y="135" width="248.5" height="15.0" fill="rgb(137.681719480263,161.307627061352,137.681719480263)" rx="2" ry="2" />
<text  x="832.80" y="145.5" >Parloop_Cells_wrap_form1_cell_..</text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (7,675 us, 0.05%)</title><rect x="1189.4" y="135" width="0.6" height="15.0" fill="rgb(156.020592075518,142.824539245641,142.824539245641)" rx="2" ry="2" />
<text  x="1192.41" y="145.5" ></text>
</g>
<g >
<title>firedrake.mesh.MeshTopology._facets (2,858 us, 0.02%)</title><rect x="127.4" y="135" width="0.2" height="15.0" fill="rgb(113.309535625992,146.413583310442,146.413583310442)" rx="2" ry="2" />
<text  x="130.39" y="145.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (1,347,745 us, 8.72%)</title><rect x="330.0" y="215" width="102.9" height="15.0" fill="rgb(135.961817027946,152.286397007245,152.286397007245)" rx="2" ry="2" />
<text  x="333.02" y="225.5" >pyop2.globa..</text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (3,564 us, 0.02%)</title><rect x="447.5" y="199" width="0.2" height="15.0" fill="rgb(154.293533492739,129.583756777669,129.583756777669)" rx="2" ry="2" />
<text  x="450.48" y="209.5" ></text>
</g>
<g >
<title>firedrake.assemble.allocate_matrix (8,625 us, 0.06%)</title><rect x="328.7" y="87" width="0.6" height="15.0" fill="rgb(108.378971437695,145.135288891254,145.135288891254)" rx="2" ry="2" />
<text  x="331.67" y="97.5" ></text>
</g>
<g >
<title>SNESSolve (11,273,335 us, 72.94%)</title><rect x="329.3" y="87" width="860.7" height="15.0" fill="rgb(138.284240341781,138.284240341781,154.184046517764)" rx="2" ry="2" />
<text  x="332.33" y="97.5" >SNESSolve</text>
</g>
<g >
<title>firedrake.ufl_expr.action (5,413 us, 0.04%)</title><rect x="328.7" y="119" width="0.4" height="15.0" fill="rgb(140.271425138399,153.403702813659,153.403702813659)" rx="2" ry="2" />
<text  x="331.67" y="129.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (1,347,745 us, 8.72%)</title><rect x="330.0" y="199" width="102.9" height="15.0" fill="rgb(146.661790835955,155.060464290803,155.060464290803)" rx="2" ry="2" />
<text  x="333.02" y="209.5" >Parloop_Cel..</text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (19,482 us, 0.13%)</title><rect x="446.3" y="135" width="1.4" height="15.0" fill="rgb(152.895564673576,152.895564673576,133.263121110408)" rx="2" ry="2" />
<text  x="449.26" y="145.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (7,383 us, 0.05%)</title><rect x="125.1" y="135" width="0.5" height="15.0" fill="rgb(153.136368678409,120.712159867801,120.712159867801)" rx="2" ry="2" />
<text  x="128.06" y="145.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (3,564 us, 0.02%)</title><rect x="447.5" y="215" width="0.2" height="15.0" fill="rgb(126.55101710738,149.846559990802,149.846559990802)" rx="2" ry="2" />
<text  x="450.48" y="225.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (19,482 us, 0.13%)</title><rect x="446.3" y="151" width="1.4" height="15.0" fill="rgb(146.084005839594,159.939813002857,146.084005839594)" rx="2" ry="2" />
<text  x="449.26" y="161.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (2,048 us, 0.01%)</title><rect x="1189.8" y="167" width="0.2" height="15.0" fill="rgb(143.031461885603,154.119267896267,154.119267896267)" rx="2" ry="2" />
<text  x="1192.84" y="177.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (16,940 us, 0.11%)</title><rect x="445.0" y="135" width="1.3" height="15.0" fill="rgb(148.110324396682,148.110324396682,110.073110537769)" rx="2" ry="2" />
<text  x="447.97" y="145.5" ></text>
</g>
<g >
<title>firedrake.functionspace.make_scalar_element (2,422 us, 0.02%)</title><rect x="447.3" y="199" width="0.2" height="15.0" fill="rgb(152.98902049559,119.582490466187,119.582490466187)" rx="2" ry="2" />
<text  x="450.29" y="209.5" ></text>
</g>
<g >
<title>SNESFunctionEval (8,587,330 us, 55.56%)</title><rect x="534.4" y="103" width="655.6" height="15.0" fill="rgb(143.361083992637,160.383079350036,143.361083992637)" rx="2" ry="2" />
<text  x="537.40" y="113.5" >SNESFunctionEval</text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (3,896 us, 0.03%)</title><rect x="445.1" y="183" width="0.3" height="15.0" fill="rgb(154.773969809032,154.773969809032,142.366161382231)" rx="2" ry="2" />
<text  x="448.12" y="193.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (3,896 us, 0.03%)</title><rect x="445.1" y="167" width="0.3" height="15.0" fill="rgb(127.138058527495,149.998755914536,149.998755914536)" rx="2" ry="2" />
<text  x="448.12" y="177.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (11,111 us, 0.07%)</title><rect x="445.4" y="183" width="0.9" height="15.0" fill="rgb(120.62721665454,120.62721665454,150.766558062169)" rx="2" ry="2" />
<text  x="448.41" y="193.5" ></text>
</g>
<g >
<title>HybridInit (1,199,530 us, 7.76%)</title><rect x="442.8" y="119" width="91.6" height="15.0" fill="rgb(155.848329433499,141.503858990155,141.503858990155)" rx="2" ry="2" />
<text  x="445.82" y="129.5" >HybridInit</text>
</g>
<g >
<title>firedrake.interpolation.make_interpolator (15,294 us, 0.10%)</title><rect x="447.9" y="135" width="1.2" height="15.0" fill="rgb(113.75965449955,146.53028079618,146.53028079618)" rx="2" ry="2" />
<text  x="450.89" y="145.5" ></text>
</g>
<g >
<title>ParLoopExecute (1,347,745 us, 8.72%)</title><rect x="330.0" y="183" width="102.9" height="15.0" fill="rgb(147.850828896113,147.850828896113,108.815555419626)" rx="2" ry="2" />
<text  x="333.02" y="193.5" >ParLoopExec..</text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (4,724 us, 0.03%)</title><rect x="1189.6" y="151" width="0.4" height="15.0" fill="rgb(140.369744716235,140.369744716235,154.587692525723)" rx="2" ry="2" />
<text  x="1192.64" y="161.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.solve (11,273,335 us, 72.94%)</title><rect x="329.3" y="71" width="860.7" height="15.0" fill="rgb(115.189199293671,115.189199293671,149.714038572969)" rx="2" ry="2" />
<text  x="332.33" y="81.5" >firedrake.variational_solver.NonlinearVariationalSolver.solve</text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (11,111 us, 0.07%)</title><rect x="445.4" y="167" width="0.9" height="15.0" fill="rgb(133.689256386858,133.689256386858,153.294694784553)" rx="2" ry="2" />
<text  x="448.41" y="177.5" ></text>
</g>
<g >
<title>KSPSolve (1,486,475 us, 9.62%)</title><rect x="329.3" y="103" width="113.5" height="15.0" fill="rgb(134.755204300884,134.755204300884,153.501007284042)" rx="2" ry="2" />
<text  x="332.33" y="113.5" >KSPSolve</text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (3,212 us, 0.02%)</title><rect x="329.1" y="119" width="0.2" height="15.0" fill="rgb(141.735977108334,141.735977108334,154.852124601613)" rx="2" ry="2" />
<text  x="332.09" y="129.5" ></text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (1,463,725 us, 9.47%)</title><rect x="1078.3" y="119" width="111.7" height="15.0" fill="rgb(131.253552796665,131.253552796665,152.823268283226)" rx="2" ry="2" />
<text  x="1081.25" y="129.5" >firedrake.ts..</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (3,254,265 us, 21.05%)</title><rect x="829.8" y="151" width="248.5" height="15.0" fill="rgb(154.651221327848,132.32603018017,132.32603018017)" rx="2" ry="2" />
<text  x="832.80" y="161.5" >pyop2.global_kernel.GlobalKern..</text>
</g>
<g >
<title>FunctionSpaceData: CreateElement (11,111 us, 0.07%)</title><rect x="445.4" y="199" width="0.9" height="15.0" fill="rgb(153.407115979702,122.787889177712,122.787889177712)" rx="2" ry="2" />
<text  x="448.41" y="209.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.LinearVariationalProblem.__init__ (21,854 us, 0.14%)</title><rect x="326.9" y="71" width="1.6" height="15.0" fill="rgb(122.696248531884,122.696248531884,151.167015844881)" rx="2" ry="2" />
<text  x="329.86" y="81.5" ></text>
</g>
<g >
<title>firedrake.utility_meshes.SquareMesh (2,169 us, 0.01%)</title><rect x="326.7" y="71" width="0.2" height="15.0" fill="rgb(134.683001430588,98.2501911658823,134.683001430588)" rx="2" ry="2" />
<text  x="329.70" y="81.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (8,686 us, 0.06%)</title><rect x="447.1" y="183" width="0.6" height="15.0" fill="rgb(152.044055740942,112.337760680559,112.337760680559)" rx="2" ry="2" />
<text  x="450.09" y="193.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (25,980 us, 0.17%)</title><rect x="125.6" y="71" width="2.0" height="15.0" fill="rgb(141.381818123817,160.705285421704,141.381818123817)" rx="2" ry="2" />
<text  x="128.62" y="81.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (13,700 us, 0.09%)</title><rect x="327.5" y="103" width="1.0" height="15.0" fill="rgb(156.586292303055,147.161574323425,147.161574323425)" rx="2" ry="2" />
<text  x="330.49" y="113.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.action (6,208 us, 0.04%)</title><rect x="326.9" y="87" width="0.4" height="15.0" fill="rgb(146.593045189902,128.769678299123,146.593045189902)" rx="2" ry="2" />
<text  x="329.86" y="97.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (1,105,092 us, 7.15%)</title><rect x="449.8" y="167" width="84.4" height="15.0" fill="rgb(154.040940154979,127.647207854835,127.647207854835)" rx="2" ry="2" />
<text  x="452.80" y="177.5" >Parloop_..</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (1,461,120 us, 9.45%)</title><rect x="13.5" y="135" width="111.6" height="15.0" fill="rgb(153.177551984719,153.177551984719,134.62967500287)" rx="2" ry="2" />
<text  x="16.51" y="145.5" >pyop2.global..</text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.__init__ (10,484 us, 0.07%)</title><rect x="328.5" y="71" width="0.8" height="15.0" fill="rgb(156.168247869397,143.956566998708,143.956566998708)" rx="2" ry="2" />
<text  x="331.53" y="81.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalProblem.__init__ (15,646 us, 0.10%)</title><rect x="327.3" y="87" width="1.2" height="15.0" fill="rgb(134.349426071698,134.349426071698,153.422469562264)" rx="2" ry="2" />
<text  x="330.34" y="97.5" ></text>
</g>
<g >
<title>firedrake (15,456,058 us, 100.00%)</title><rect x="10.0" y="55" width="1180.0" height="15.0" fill="rgb(154.15761395418,128.541706982047,128.541706982047)" rx="2" ry="2" />
<text  x="13.00" y="65.5" >firedrake</text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (3,896 us, 0.03%)</title><rect x="445.1" y="199" width="0.3" height="15.0" fill="rgb(150.24056035521,150.24056035521,120.396561721401)" rx="2" ry="2" />
<text  x="448.12" y="209.5" ></text>
</g>
<g >
<title>ParLoopExecute (1,461,120 us, 9.45%)</title><rect x="13.5" y="103" width="111.6" height="15.0" fill="rgb(154.776098920672,154.776098920672,142.376479384797)" rx="2" ry="2" />
<text  x="16.51" y="113.5" >ParLoopExecute</text>
</g>
<g >
<title>all (15,456,058 us, 100%)</title><rect x="10.0" y="39" width="1180.0" height="15.0" fill="rgb(156.125651298802,143.629993290818,143.629993290818)" rx="2" ry="2" />
<text  x="13.00" y="49.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (7,383 us, 0.05%)</title><rect x="125.1" y="119" width="0.5" height="15.0" fill="rgb(156.317655738196,145.10202732617,145.10202732617)" rx="2" ry="2" />
<text  x="128.06" y="129.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (3,896 us, 0.03%)</title><rect x="445.1" y="215" width="0.3" height="15.0" fill="rgb(155.349967127368,155.349967127368,145.157533001859)" rx="2" ry="2" />
<text  x="448.12" y="225.5" ></text>
</g>
<g >
<title>CreateMesh (1,947 us, 0.01%)</title><rect x="127.6" y="71" width="0.2" height="15.0" fill="rgb(147.772098542278,159.665007214048,147.772098542278)" rx="2" ry="2" />
<text  x="130.61" y="81.5" ></text>
</g>
</g>
</svg>
