<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="283" onload="init(evt)" viewBox="0 0 1200 283" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:13px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:18px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 13 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (1 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="283.0" fill="url(#background)"  />
<text id="title" x="600.00" y="26" >Firedrake example</text>
<text id="details" x="10.00" y="265" > </text>
<text id="unzoom" x="10.00" y="26" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="26" >Search</text>
<text id="ignorecase" x="1174.00" y="26" >ic</text>
<text id="matched" x="1090.00" y="265" > </text>
<g id="frames">
<g >
<title>firedrake.utility_meshes.SquareMesh (2,020 us, 0.01%)</title><rect x="305.6" y="71" width="0.2" height="15.0" fill="rgb(139.904399901683,160.945795364842,139.904399901683)" rx="2" ry="2" />
<text  x="308.59" y="81.5" ></text>
</g>
<g >
<title>PCSetUp (1,068,633 us, 7.19%)</title><rect x="440.3" y="103" width="84.9" height="15.0" fill="rgb(152.8145093879,118.244571973896,118.244571973896)" rx="2" ry="2" />
<text  x="443.29" y="113.5" >PCSetUp</text>
</g>
<g >
<title>firedrake.ufl_expr.action (5,315 us, 0.04%)</title><rect x="305.8" y="87" width="0.4" height="15.0" fill="rgb(124.514358461031,163.451150948204,124.514358461031)" rx="2" ry="2" />
<text  x="308.75" y="97.5" ></text>
</g>
<g >
<title>firedrake.function.Function.__init__ (2,296 us, 0.02%)</title><rect x="440.1" y="183" width="0.2" height="15.0" fill="rgb(116.230318556294,116.230318556294,149.915545527025)" rx="2" ry="2" />
<text  x="443.11" y="193.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.action (4,208 us, 0.03%)</title><rect x="307.2" y="119" width="0.3" height="15.0" fill="rgb(148.176820876522,148.176820876522,110.3953627093)" rx="2" ry="2" />
<text  x="310.19" y="129.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (22,113 us, 0.15%)</title><rect x="113.1" y="103" width="1.8" height="15.0" fill="rgb(156.49320993588,146.447942841749,146.447942841749)" rx="2" ry="2" />
<text  x="116.15" y="113.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (7,206 us, 0.05%)</title><rect x="1189.4" y="135" width="0.6" height="15.0" fill="rgb(115.226792560858,115.226792560858,149.721314689198)" rx="2" ry="2" />
<text  x="1192.43" y="145.5" ></text>
</g>
<g >
<title>firedrake.parloops.par_loop (1,000,082 us, 6.73%)</title><rect x="445.5" y="135" width="79.5" height="15.0" fill="rgb(137.968784979269,106.670011509376,137.968784979269)" rx="2" ry="2" />
<text  x="448.51" y="145.5" >firedrak..</text>
</g>
<g >
<title>ParLoopExecute (993,242 us, 6.69%)</title><rect x="446.1" y="151" width="78.9" height="15.0" fill="rgb(151.380051511277,141.036381997648,151.380051511277)" rx="2" ry="2" />
<text  x="449.06" y="161.5" >ParLoopE..</text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (6,821 us, 0.05%)</title><rect x="112.6" y="151" width="0.5" height="15.0" fill="rgb(155.216287996301,136.658207971643,136.658207971643)" rx="2" ry="2" />
<text  x="115.61" y="161.5" ></text>
</g>
<g >
<title>PCApply (1,668,260 us, 11.23%)</title><rect x="307.8" y="119" width="132.5" height="15.0" fill="rgb(153.42820065919,153.42820065919,135.84435704069)" rx="2" ry="2" />
<text  x="310.76" y="129.5" >PCApply</text>
</g>
<g >
<title>KSPSolve (1,668,260 us, 11.23%)</title><rect x="307.8" y="103" width="132.5" height="15.0" fill="rgb(121.144975808943,121.144975808943,150.866769511408)" rx="2" ry="2" />
<text  x="310.76" y="113.5" >KSPSolve</text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (5,847 us, 0.04%)</title><rect x="442.4" y="183" width="0.5" height="15.0" fill="rgb(156.144328946703,143.773188591388,143.773188591388)" rx="2" ry="2" />
<text  x="445.41" y="193.5" ></text>
</g>
<g >
<title>HybridInit (1,068,633 us, 7.19%)</title><rect x="440.3" y="119" width="84.9" height="15.0" fill="rgb(148.772608539514,148.772608539514,113.282641383797)" rx="2" ry="2" />
<text  x="443.29" y="129.5" >HybridInit</text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.__init__ (7,106 us, 0.05%)</title><rect x="307.2" y="71" width="0.6" height="15.0" fill="rgb(144.082653324211,144.082653324211,155.306319998234)" rx="2" ry="2" />
<text  x="310.19" y="81.5" ></text>
</g>
<g >
<title>all (14,853,546 us, 100%)</title><rect x="10.0" y="39" width="1180.0" height="15.0" fill="rgb(145.886988467238,159.971885598357,145.886988467238)" rx="2" ry="2" />
<text  x="13.00" y="49.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (5,446 us, 0.04%)</title><rect x="443.9" y="231" width="0.4" height="15.0" fill="rgb(114.18734455313,114.18734455313,149.520131203832)" rx="2" ry="2" />
<text  x="446.86" y="241.5" ></text>
</g>
<g >
<title>FunctionSpaceData: CreateElement (7,208 us, 0.05%)</title><rect x="114.1" y="135" width="0.6" height="15.0" fill="rgb(115.815333276631,147.063234553201,147.063234553201)" rx="2" ry="2" />
<text  x="117.14" y="145.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (2,350 us, 0.02%)</title><rect x="442.2" y="215" width="0.2" height="15.0" fill="rgb(154.003356165779,127.359063937641,127.359063937641)" rx="2" ry="2" />
<text  x="445.23" y="225.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_form0_cell_integral_otherwise (4,034,997 us, 27.17%)</title><rect x="525.5" y="135" width="320.6" height="15.0" fill="rgb(155.158426742191,155.158426742191,144.229298827542)" rx="2" ry="2" />
<text  x="528.51" y="145.5" >Parloop_Cells_wrap_form0_cell_integral_..</text>
</g>
<g >
<title>firedrake.assemble.allocate_matrix (7,106 us, 0.05%)</title><rect x="307.2" y="87" width="0.6" height="15.0" fill="rgb(117.017984079984,117.017984079984,150.067996918707)" rx="2" ry="2" />
<text  x="310.19" y="97.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_pyop2_kernel_uniform_extrusion (1,251,599 us, 8.43%)</title><rect x="13.2" y="119" width="99.4" height="15.0" fill="rgb(153.898791429591,126.557400960197,126.557400960197)" rx="2" ry="2" />
<text  x="16.18" y="129.5" >Parloop_Ce..</text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (5,446 us, 0.04%)</title><rect x="443.9" y="199" width="0.4" height="15.0" fill="rgb(154.94301415206,154.94301415206,143.185376275369)" rx="2" ry="2" />
<text  x="446.86" y="209.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (1,434,450 us, 9.66%)</title><rect x="308.4" y="199" width="113.9" height="15.0" fill="rgb(145.807259409246,145.807259409246,155.64011472437)" rx="2" ry="2" />
<text  x="311.36" y="209.5" >Parloop_Cell..</text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (17,803 us, 0.12%)</title><rect x="442.9" y="135" width="1.4" height="15.0" fill="rgb(143.096927833192,119.810877572554,143.096927833192)" rx="2" ry="2" />
<text  x="445.88" y="145.5" ></text>
</g>
<g >
<title>firedrake.utility_meshes.RectangleMesh (2,020 us, 0.01%)</title><rect x="305.6" y="87" width="0.2" height="15.0" fill="rgb(154.27233668765,129.42124793865,129.42124793865)" rx="2" ry="2" />
<text  x="308.59" y="97.5" ></text>
</g>
<g >
<title>ParLoopExecute (1,434,450 us, 9.66%)</title><rect x="308.4" y="183" width="113.9" height="15.0" fill="rgb(120.665992095619,120.665992095619,150.774062986249)" rx="2" ry="2" />
<text  x="311.36" y="193.5" >ParLoopExecute</text>
</g>
<g >
<title>firedrake.variational_solver.LinearVariationalProblem.__init__ (18,180 us, 0.12%)</title><rect x="305.8" y="71" width="1.4" height="15.0" fill="rgb(151.925964476341,151.925964476341,128.564289385344)" rx="2" ry="2" />
<text  x="308.75" y="81.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (17,803 us, 0.12%)</title><rect x="442.9" y="151" width="1.4" height="15.0" fill="rgb(155.577001252168,139.423676266621,139.423676266621)" rx="2" ry="2" />
<text  x="445.88" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (22,113 us, 0.15%)</title><rect x="113.1" y="119" width="1.8" height="15.0" fill="rgb(143.717438868923,143.717438868923,155.235633329469)" rx="2" ry="2" />
<text  x="116.15" y="129.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (993,242 us, 6.69%)</title><rect x="446.1" y="167" width="78.9" height="15.0" fill="rgb(128.815812092232,162.750914310567,128.815812092232)" rx="2" ry="2" />
<text  x="449.06" y="177.5" >Parloop_..</text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (10,972 us, 0.07%)</title><rect x="306.3" y="103" width="0.9" height="15.0" fill="rgb(156.593805279327,147.219173808171,147.219173808171)" rx="2" ry="2" />
<text  x="309.32" y="113.5" ></text>
</g>
<g >
<title>FunctionSpaceData: CreateElement (5,847 us, 0.04%)</title><rect x="442.4" y="199" width="0.5" height="15.0" fill="rgb(150.298269493417,138.264315576882,150.298269493417)" rx="2" ry="2" />
<text  x="445.41" y="209.5" ></text>
</g>
<g >
<title>firedrake.slate.slac.optimise.optimise (16,664 us, 0.11%)</title><rect x="439.0" y="167" width="1.3" height="15.0" fill="rgb(125.306512640225,163.322195616708,125.306512640225)" rx="2" ry="2" />
<text  x="441.97" y="177.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (9,812 us, 0.07%)</title><rect x="443.5" y="183" width="0.8" height="15.0" fill="rgb(120.709055912728,120.709055912728,150.782397918593)" rx="2" ry="2" />
<text  x="446.51" y="193.5" ></text>
</g>
<g >
<title>firedrake (14,853,546 us, 100.00%)</title><rect x="10.0" y="55" width="1180.0" height="15.0" fill="rgb(154.62274095274,154.62274095274,141.633283078661)" rx="2" ry="2" />
<text  x="13.00" y="65.5" >firedrake</text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.solve (11,105,432 us, 74.77%)</title><rect x="307.8" y="71" width="882.2" height="15.0" fill="rgb(135.305785543725,135.305785543725,153.60757139556)" rx="2" ry="2" />
<text  x="310.76" y="81.5" >firedrake.variational_solver.NonlinearVariationalSolver.solve</text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (6,821 us, 0.05%)</title><rect x="112.6" y="135" width="0.5" height="15.0" fill="rgb(156.036954265182,142.949982699727,142.949982699727)" rx="2" ry="2" />
<text  x="115.61" y="145.5" ></text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (1,180,168 us, 7.95%)</title><rect x="1096.2" y="119" width="93.8" height="15.0" fill="rgb(154.842504506853,133.792534552537,133.792534552537)" rx="2" ry="2" />
<text  x="1099.24" y="129.5" >firedrake...</text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (2,350 us, 0.02%)</title><rect x="442.2" y="199" width="0.2" height="15.0" fill="rgb(117.001079879583,147.370650339151,147.370650339151)" rx="2" ry="2" />
<text  x="445.23" y="209.5" ></text>
</g>
<g >
<title>CreateExtMesh (1,298,394 us, 8.74%)</title><rect x="10.0" y="71" width="103.1" height="15.0" fill="rgb(139.156202533303,139.156202533303,154.352813393543)" rx="2" ry="2" />
<text  x="13.00" y="81.5" >CreateExtMesh</text>
</g>
<g >
<title>firedrake.interpolation.make_interpolator (15,354 us, 0.10%)</title><rect x="444.3" y="135" width="1.2" height="15.0" fill="rgb(156.225209945429,144.393276248292,144.393276248292)" rx="2" ry="2" />
<text  x="447.29" y="145.5" ></text>
</g>
<g >
<title>firedrake.matrix_free.operators.ImplicitMatrixContext.__init__ (7,106 us, 0.05%)</title><rect x="307.2" y="103" width="0.6" height="15.0" fill="rgb(105.3768934584,144.356972378104,144.356972378104)" rx="2" ry="2" />
<text  x="310.19" y="113.5" ></text>
</g>
<g >
<title>SNESSolve (11,105,432 us, 74.77%)</title><rect x="307.8" y="87" width="882.2" height="15.0" fill="rgb(124.390003142797,124.390003142797,151.494839317961)" rx="2" ry="2" />
<text  x="310.76" y="97.5" >SNESSolve</text>
</g>
<g >
<title>ParLoopExecute (7,184,231 us, 48.37%)</title><rect x="525.5" y="119" width="570.7" height="15.0" fill="rgb(130.768759071916,162.432992709223,130.768759071916)" rx="2" ry="2" />
<text  x="528.51" y="129.5" >ParLoopExecute</text>
</g>
<g >
<title>SCForwardElim (1,668,260 us, 11.23%)</title><rect x="307.8" y="135" width="132.5" height="15.0" fill="rgb(121.213947456852,148.462875266591,148.462875266591)" rx="2" ry="2" />
<text  x="310.76" y="145.5" >SCForwardElim</text>
</g>
<g >
<title>CreateFunctionSpace (2,350 us, 0.02%)</title><rect x="442.2" y="167" width="0.2" height="15.0" fill="rgb(156.498338653979,146.487263013835,146.487263013835)" rx="2" ry="2" />
<text  x="445.23" y="177.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (22,113 us, 0.15%)</title><rect x="113.1" y="87" width="1.8" height="15.0" fill="rgb(138.314875634688,161.204555129237,138.314875634688)" rx="2" ry="2" />
<text  x="116.15" y="97.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (22,113 us, 0.15%)</title><rect x="113.1" y="71" width="1.8" height="15.0" fill="rgb(156.170488298957,143.973743625334,143.973743625334)" rx="2" ry="2" />
<text  x="116.15" y="81.5" ></text>
</g>
<g >
<title>HybridBreak (1,441,986 us, 9.71%)</title><rect x="307.8" y="151" width="114.5" height="15.0" fill="rgb(152.478739987057,115.670339900769,115.670339900769)" rx="2" ry="2" />
<text  x="310.76" y="161.5" >HybridBreak</text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (2,898 us, 0.02%)</title><rect x="307.5" y="119" width="0.3" height="15.0" fill="rgb(137.661920473597,105.883671213592,137.661920473597)" rx="2" ry="2" />
<text  x="310.53" y="129.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (4,135 us, 0.03%)</title><rect x="1189.7" y="151" width="0.3" height="15.0" fill="rgb(137.182708990184,137.182708990184,153.970846901326)" rx="2" ry="2" />
<text  x="1192.67" y="161.5" ></text>
</g>
<g >
<title>firedrake.mesh.MeshTopology._facets (2,402 us, 0.02%)</title><rect x="114.7" y="135" width="0.2" height="15.0" fill="rgb(153.710750863908,125.115756623294,125.115756623294)" rx="2" ry="2" />
<text  x="117.71" y="145.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (1,739 us, 0.01%)</title><rect x="1189.9" y="167" width="0.1" height="15.0" fill="rgb(139.827753714234,111.433618892725,139.827753714234)" rx="2" ry="2" />
<text  x="1192.86" y="177.5" ></text>
</g>
<g >
<title>CreateMesh (1,721 us, 0.01%)</title><rect x="114.9" y="71" width="0.1" height="15.0" fill="rgb(149.199269646233,159.432677034334,149.199269646233)" rx="2" ry="2" />
<text  x="117.90" y="81.5" ></text>
</g>
<g >
<title>firedrake.extrusion_utils.make_extruded_coords (1,288,483 us, 8.67%)</title><rect x="10.2" y="87" width="102.4" height="15.0" fill="rgb(145.379362011473,160.054522463249,145.379362011473)" rx="2" ry="2" />
<text  x="13.25" y="97.5" >firedrake.e..</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (4,032,012 us, 27.15%)</title><rect x="525.7" y="151" width="320.4" height="15.0" fill="rgb(126.174764384679,126.174764384679,151.84027697768)" rx="2" ry="2" />
<text  x="528.75" y="161.5" >pyop2.global_kernel.GlobalKernel.compile</text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (5,446 us, 0.04%)</title><rect x="443.9" y="215" width="0.4" height="15.0" fill="rgb(135.725032190205,152.225008345609,152.225008345609)" rx="2" ry="2" />
<text  x="446.86" y="225.5" ></text>
</g>
<g >
<title>firedrake.functionspace.make_scalar_element (1,980 us, 0.01%)</title><rect x="443.7" y="199" width="0.2" height="15.0" fill="rgb(126.657470483881,126.657470483881,151.933703964622)" rx="2" ry="2" />
<text  x="446.70" y="209.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (2,811 us, 0.02%)</title><rect x="525.0" y="135" width="0.2" height="15.0" fill="rgb(147.767295513157,147.767295513157,156.019476550934)" rx="2" ry="2" />
<text  x="527.96" y="145.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (3,149,234 us, 21.20%)</title><rect x="846.1" y="151" width="250.1" height="15.0" fill="rgb(154.957657840096,134.675376774072,134.675376774072)" rx="2" ry="2" />
<text  x="849.06" y="161.5" >pyop2.global_kernel.GlobalKern..</text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (2,350 us, 0.02%)</title><rect x="442.2" y="183" width="0.2" height="15.0" fill="rgb(121.22887502899,148.466745377886,148.466745377886)" rx="2" ry="2" />
<text  x="445.23" y="193.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalProblem.__init__ (12,865 us, 0.09%)</title><rect x="306.2" y="87" width="1.0" height="15.0" fill="rgb(144.697466058499,144.697466058499,155.425316011322)" rx="2" ry="2" />
<text  x="309.17" y="97.5" ></text>
</g>
<g >
<title>HybridRHS (226,274 us, 1.52%)</title><rect x="422.3" y="151" width="18.0" height="15.0" fill="rgb(139.605507794413,153.231057576329,153.231057576329)" rx="2" ry="2" />
<text  x="425.31" y="161.5" ></text>
</g>
<g >
<title>SNESFunctionEval (8,368,539 us, 56.34%)</title><rect x="525.2" y="103" width="664.8" height="15.0" fill="rgb(130.733534449908,162.438726950015,130.733534449908)" rx="2" ry="2" />
<text  x="528.18" y="113.5" >SNESFunctionEval</text>
</g>
<g >
<title>CreateFunctionSpace (8,197 us, 0.06%)</title><rect x="442.2" y="135" width="0.7" height="15.0" fill="rgb(110.382013478739,145.65459608708,145.65459608708)" rx="2" ry="2" />
<text  x="445.23" y="145.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (6,821 us, 0.05%)</title><rect x="112.6" y="103" width="0.5" height="15.0" fill="rgb(145.708204389623,145.708204389623,155.620942785088)" rx="2" ry="2" />
<text  x="115.61" y="113.5" ></text>
</g>
<g >
<title>firedrake.__init__ (2,398,580 us, 16.15%)</title><rect x="115.0" y="71" width="190.6" height="15.0" fill="rgb(138.010872484684,161.254044014121,138.010872484684)" rx="2" ry="2" />
<text  x="118.04" y="81.5" >firedrake.__init__</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (1,434,450 us, 9.66%)</title><rect x="308.4" y="215" width="113.9" height="15.0" fill="rgb(147.809933139166,131.887953669112,147.809933139166)" rx="2" ry="2" />
<text  x="311.36" y="225.5" >pyop2.global..</text>
</g>
<g >
<title>ParLoopExecute (1,251,599 us, 8.43%)</title><rect x="13.2" y="103" width="99.4" height="15.0" fill="rgb(134.383770605892,161.844502459506,134.383770605892)" rx="2" ry="2" />
<text  x="16.18" y="113.5" >ParLoopExe..</text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (5,847 us, 0.04%)</title><rect x="442.4" y="167" width="0.5" height="15.0" fill="rgb(149.091286996677,135.171422928984,149.091286996677)" rx="2" ry="2" />
<text  x="445.41" y="177.5" ></text>
</g>
<g >
<title>firedrake.functionspace.VectorFunctionSpace (6,821 us, 0.05%)</title><rect x="112.6" y="87" width="0.5" height="15.0" fill="rgb(144.454910143506,123.290707242733,144.454910143506)" rx="2" ry="2" />
<text  x="115.61" y="97.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (13,126 us, 0.09%)</title><rect x="443.2" y="167" width="1.1" height="15.0" fill="rgb(153.813530758237,125.903735813153,125.903735813153)" rx="2" ry="2" />
<text  x="446.25" y="177.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (6,821 us, 0.05%)</title><rect x="112.6" y="119" width="0.5" height="15.0" fill="rgb(123.54156912773,149.066332736819,149.066332736819)" rx="2" ry="2" />
<text  x="115.61" y="129.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (1,251,599 us, 8.43%)</title><rect x="13.2" y="135" width="99.4" height="15.0" fill="rgb(144.08280024145,160.265590658369,144.08280024145)" rx="2" ry="2" />
<text  x="16.18" y="145.5" >pyop2.glob..</text>
</g>
<g >
<title>Log_Event_form0_cell_integral_otherwise (2,985 us, 0.02%)</title><rect x="525.5" y="151" width="0.2" height="15.0" fill="rgb(151.013280708767,151.013280708767,124.141283434792)" rx="2" ry="2" />
<text  x="528.51" y="161.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (993,242 us, 6.69%)</title><rect x="446.1" y="183" width="78.9" height="15.0" fill="rgb(136.28601448036,152.370448198612,152.370448198612)" rx="2" ry="2" />
<text  x="449.06" y="193.5" >pyop2.gl..</text>
</g>
<g >
<title>Parloop_Cells_wrap_form1_cell_integral_otherwise (3,149,234 us, 21.20%)</title><rect x="846.1" y="135" width="250.1" height="15.0" fill="rgb(153.065900165994,120.171901272618,120.171901272618)" rx="2" ry="2" />
<text  x="849.06" y="145.5" >Parloop_Cells_wrap_form1_cell_..</text>
</g>
<g >
<title>firedrake.parloops.par_loop (1,441,986 us, 9.71%)</title><rect x="307.8" y="167" width="114.5" height="15.0" fill="rgb(150.504092382068,159.220264030826,150.504092382068)" rx="2" ry="2" />
<text  x="310.76" y="177.5" >firedrake.pa..</text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (5,847 us, 0.04%)</title><rect x="442.4" y="151" width="0.5" height="15.0" fill="rgb(136.55489488631,161.491063623159,136.55489488631)" rx="2" ry="2" />
<text  x="445.41" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspace.MixedFunctionSpace (2,350 us, 0.02%)</title><rect x="442.2" y="151" width="0.2" height="15.0" fill="rgb(117.050036772111,147.383342866843,147.383342866843)" rx="2" ry="2" />
<text  x="445.23" y="161.5" ></text>
</g>
</g>
</svg>
