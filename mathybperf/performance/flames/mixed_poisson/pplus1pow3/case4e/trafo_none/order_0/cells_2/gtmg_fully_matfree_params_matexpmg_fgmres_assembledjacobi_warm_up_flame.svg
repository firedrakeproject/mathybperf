<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="283" onload="init(evt)" viewBox="0 0 1200 283" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:13px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:18px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 13 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (1 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="283.0" fill="url(#background)"  />
<text id="title" x="600.00" y="26" >Firedrake example</text>
<text id="details" x="10.00" y="265" > </text>
<text id="unzoom" x="10.00" y="26" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="26" >Search</text>
<text id="ignorecase" x="1174.00" y="26" >ic</text>
<text id="matched" x="1090.00" y="265" > </text>
<g id="frames">
<g >
<title>firedrake.ufl_expr.action (6,066 us, 0.04%)</title><rect x="331.8" y="87" width="0.5" height="15.0" fill="rgb(147.715612733905,159.674202578201,147.715612733905)" rx="2" ry="2" />
<text  x="334.82" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (2,142 us, 0.01%)</title><rect x="465.3" y="199" width="0.2" height="15.0" fill="rgb(112.815991974741,112.815991974741,149.254708124143)" rx="2" ry="2" />
<text  x="468.32" y="209.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (2,142 us, 0.01%)</title><rect x="465.3" y="215" width="0.2" height="15.0" fill="rgb(150.593635511706,150.593635511706,122.107618249038)" rx="2" ry="2" />
<text  x="468.32" y="225.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (9,714 us, 0.06%)</title><rect x="126.2" y="103" width="0.8" height="15.0" fill="rgb(152.323549691412,114.480547634156,114.480547634156)" rx="2" ry="2" />
<text  x="129.25" y="113.5" ></text>
</g>
<g >
<title>KSPSolve (1,791,749 us, 10.95%)</title><rect x="334.2" y="103" width="129.2" height="15.0" fill="rgb(141.903294709606,153.826780109898,153.826780109898)" rx="2" ry="2" />
<text  x="337.22" y="113.5" >KSPSolve</text>
</g>
<g >
<title>CreateMesh (2,195 us, 0.01%)</title><rect x="130.4" y="71" width="0.2" height="15.0" fill="rgb(154.389735804669,154.389735804669,140.504104284163)" rx="2" ry="2" />
<text  x="133.45" y="81.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (6,711 us, 0.04%)</title><rect x="465.5" y="151" width="0.5" height="15.0" fill="rgb(152.231538527632,113.775128711847,113.775128711847)" rx="2" ry="2" />
<text  x="468.48" y="161.5" ></text>
</g>
<g >
<title>firedrake.extrusion_utils.make_extruded_coords (1,608,204 us, 9.83%)</title><rect x="10.3" y="87" width="115.9" height="15.0" fill="rgb(121.161948401268,121.161948401268,150.870054529278)" rx="2" ry="2" />
<text  x="13.29" y="97.5" >firedrake.ext..</text>
</g>
<g >
<title>CreateFunctionSpace (9,224 us, 0.06%)</title><rect x="466.9" y="183" width="0.6" height="15.0" fill="rgb(137.183249959945,161.388773262335,137.183249959945)" rx="2" ry="2" />
<text  x="469.88" y="193.5" ></text>
</g>
<g >
<title>HybridRHS (179,416 us, 1.10%)</title><rect x="450.5" y="151" width="12.9" height="15.0" fill="rgb(114.482240437604,146.717617891231,146.717617891231)" rx="2" ry="2" />
<text  x="453.48" y="161.5" ></text>
</g>
<g >
<title>Log_Event_form0_cell_integral_otherwise (4,614 us, 0.03%)</title><rect x="548.0" y="151" width="0.4" height="15.0" fill="rgb(110.449274689988,110.449274689988,148.796633810965)" rx="2" ry="2" />
<text  x="551.04" y="161.5" ></text>
</g>
<g >
<title>firedrake.mesh.MeshTopology._facets (2,819 us, 0.02%)</title><rect x="130.2" y="135" width="0.2" height="15.0" fill="rgb(156.442714715186,146.060812816426,146.060812816426)" rx="2" ry="2" />
<text  x="133.24" y="145.5" ></text>
</g>
<g >
<title>SNESSolve (11,868,809 us, 72.52%)</title><rect x="334.2" y="87" width="855.8" height="15.0" fill="rgb(153.557037501865,123.937287514296,123.937287514296)" rx="2" ry="2" />
<text  x="337.22" y="97.5" >SNESSolve</text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (1,402,031 us, 8.57%)</title><rect x="1088.9" y="119" width="101.1" height="15.0" fill="rgb(156.358081698677,145.411959689854,145.411959689854)" rx="2" ry="2" />
<text  x="1091.91" y="129.5" >firedrake.t..</text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (3,731 us, 0.02%)</title><rect x="467.3" y="231" width="0.2" height="15.0" fill="rgb(155.976620361786,142.487422773695,142.487422773695)" rx="2" ry="2" />
<text  x="470.28" y="241.5" ></text>
</g>
<g >
<title>all (16,365,479 us, 100%)</title><rect x="10.0" y="39" width="1180.0" height="15.0" fill="rgb(129.292276170322,150.557256784898,150.557256784898)" rx="2" ry="2" />
<text  x="13.00" y="49.5" ></text>
</g>
<g >
<title>firedrake.utility_meshes.SquareMesh (2,206 us, 0.01%)</title><rect x="331.7" y="71" width="0.1" height="15.0" fill="rgb(154.929794712937,154.929794712937,143.121312839619)" rx="2" ry="2" />
<text  x="334.66" y="81.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (21,937 us, 0.13%)</title><rect x="466.0" y="135" width="1.5" height="15.0" fill="rgb(126.327322018923,126.327322018923,151.869804261727)" rx="2" ry="2" />
<text  x="468.96" y="145.5" ></text>
</g>
<g >
<title>PCSetUp (1,169,033 us, 7.14%)</title><rect x="463.4" y="103" width="84.3" height="15.0" fill="rgb(152.295589565132,152.295589565132,130.355549431024)" rx="2" ry="2" />
<text  x="466.41" y="113.5" >PCSetUp</text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (3,731 us, 0.02%)</title><rect x="467.3" y="199" width="0.2" height="15.0" fill="rgb(144.055065495221,144.055065495221,155.30098041843)" rx="2" ry="2" />
<text  x="470.28" y="209.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (1,603,643 us, 9.80%)</title><rect x="334.8" y="199" width="115.7" height="15.0" fill="rgb(124.59616377904,149.339746164936,149.339746164936)" rx="2" ry="2" />
<text  x="337.85" y="209.5" >Parloop_Cells..</text>
</g>
<g >
<title>ParLoopExecute (1,085,048 us, 6.63%)</title><rect x="469.3" y="151" width="78.2" height="15.0" fill="rgb(146.374969654382,159.892446800449,146.374969654382)" rx="2" ry="2" />
<text  x="472.25" y="161.5" >ParLoopE..</text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (2,073 us, 0.01%)</title><rect x="1189.9" y="167" width="0.1" height="15.0" fill="rgb(156.082901399073,143.302244059558,143.302244059558)" rx="2" ry="2" />
<text  x="1192.85" y="177.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (5,183 us, 0.03%)</title><rect x="1189.6" y="151" width="0.4" height="15.0" fill="rgb(137.606076981122,152.712686624735,152.712686624735)" rx="2" ry="2" />
<text  x="1192.63" y="161.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_form0_cell_integral_otherwise (4,058,198 us, 24.80%)</title><rect x="548.0" y="135" width="292.6" height="15.0" fill="rgb(119.721833954342,119.721833954342,150.59132270084)" rx="2" ry="2" />
<text  x="551.04" y="145.5" >Parloop_Cells_wrap_form0_cell_integr..</text>
</g>
<g >
<title>firedrake.function.Function.__init__ (2,021 us, 0.01%)</title><rect x="463.3" y="183" width="0.1" height="15.0" fill="rgb(121.036821409246,121.036821409246,150.84583640179)" rx="2" ry="2" />
<text  x="466.27" y="193.5" ></text>
</g>
<g >
<title>SCForwardElim (1,791,749 us, 10.95%)</title><rect x="334.2" y="135" width="129.2" height="15.0" fill="rgb(123.794999827692,163.568255842004,123.794999827692)" rx="2" ry="2" />
<text  x="337.22" y="145.5" >SCForwardElim</text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (45,708 us, 0.28%)</title><rect x="127.2" y="119" width="3.2" height="15.0" fill="rgb(151.392946147793,151.392946147793,125.981200562383)" rx="2" ry="2" />
<text  x="130.15" y="129.5" ></text>
</g>
<g >
<title>firedrake.functionspace.MixedFunctionSpace (2,771 us, 0.02%)</title><rect x="331.5" y="71" width="0.2" height="15.0" fill="rgb(149.874367963422,149.874367963422,118.621937053507)" rx="2" ry="2" />
<text  x="334.46" y="81.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (1,554,934 us, 9.50%)</title><rect x="14.1" y="135" width="112.1" height="15.0" fill="rgb(153.157614902604,120.875047586634,120.875047586634)" rx="2" ry="2" />
<text  x="17.13" y="145.5" >pyop2.global..</text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.solve (11,868,809 us, 72.52%)</title><rect x="334.2" y="71" width="855.8" height="15.0" fill="rgb(155.785660512223,155.785660512223,147.26897017462)" rx="2" ry="2" />
<text  x="337.22" y="81.5" >firedrake.variational_solver.NonlinearVariationalSolver.solve</text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (2,142 us, 0.01%)</title><rect x="465.3" y="183" width="0.2" height="15.0" fill="rgb(147.79451491242,147.79451491242,108.542649190957)" rx="2" ry="2" />
<text  x="468.32" y="193.5" ></text>
</g>
<g >
<title>FunctionSpaceData: CreateElement (18,266 us, 0.11%)</title><rect x="128.9" y="135" width="1.3" height="15.0" fill="rgb(147.966737787715,147.966737787715,109.377267740466)" rx="2" ry="2" />
<text  x="131.93" y="145.5" ></text>
</g>
<g >
<title>firedrake.functionspace.MixedFunctionSpace (2,142 us, 0.01%)</title><rect x="465.3" y="151" width="0.2" height="15.0" fill="rgb(155.245334724655,155.245334724655,144.650468281019)" rx="2" ry="2" />
<text  x="468.32" y="161.5" ></text>
</g>
<g >
<title>ParLoopExecute (1,554,934 us, 9.50%)</title><rect x="14.1" y="103" width="112.1" height="15.0" fill="rgb(155.198231051794,136.51977139709,136.51977139709)" rx="2" ry="2" />
<text  x="17.13" y="113.5" >ParLoopExecute</text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (9,714 us, 0.06%)</title><rect x="126.2" y="119" width="0.8" height="15.0" fill="rgb(125.386457120738,125.386457120738,151.687701378207)" rx="2" ry="2" />
<text  x="129.25" y="129.5" ></text>
</g>
<g >
<title>firedrake.parloops.par_loop (1,612,333 us, 9.85%)</title><rect x="334.2" y="167" width="116.3" height="15.0" fill="rgb(121.85481680055,121.85481680055,151.004158090429)" rx="2" ry="2" />
<text  x="337.22" y="177.5" >firedrake.par..</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (1,085,048 us, 6.63%)</title><rect x="469.3" y="183" width="78.2" height="15.0" fill="rgb(143.60390238802,121.109999869301,143.60390238802)" rx="2" ry="2" />
<text  x="472.25" y="193.5" >pyop2.gl..</text>
</g>
<g >
<title>CreateFunctionSpace (2,142 us, 0.01%)</title><rect x="465.3" y="167" width="0.2" height="15.0" fill="rgb(131.515478267024,131.515478267024,152.873963535553)" rx="2" ry="2" />
<text  x="468.32" y="177.5" ></text>
</g>
<g >
<title>ParLoopExecute (7,501,331 us, 45.84%)</title><rect x="548.0" y="119" width="540.9" height="15.0" fill="rgb(154.447341535024,154.447341535024,140.783270515888)" rx="2" ry="2" />
<text  x="551.04" y="129.5" >ParLoopExecute</text>
</g>
<g >
<title>CreateFunctionSpace (8,853 us, 0.05%)</title><rect x="465.3" y="135" width="0.7" height="15.0" fill="rgb(156.296782088609,144.941996012671,144.941996012671)" rx="2" ry="2" />
<text  x="468.32" y="145.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.action (6,056 us, 0.04%)</title><rect x="333.5" y="119" width="0.5" height="15.0" fill="rgb(133.799320653813,161.939645474961,133.799320653813)" rx="2" ry="2" />
<text  x="336.54" y="129.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (9,714 us, 0.06%)</title><rect x="126.2" y="151" width="0.8" height="15.0" fill="rgb(152.701516132388,152.701516132388,132.322732026188)" rx="2" ry="2" />
<text  x="129.25" y="161.5" ></text>
</g>
<g >
<title>PCApply (1,791,749 us, 10.95%)</title><rect x="334.2" y="119" width="129.2" height="15.0" fill="rgb(113.525187229358,113.525187229358,149.391971721811)" rx="2" ry="2" />
<text  x="337.22" y="129.5" >PCApply</text>
</g>
<g >
<title>HybridInit (1,169,033 us, 7.14%)</title><rect x="463.4" y="119" width="84.3" height="15.0" fill="rgb(139.482861548972,153.199260401585,153.199260401585)" rx="2" ry="2" />
<text  x="466.41" y="129.5" >HybridInit</text>
</g>
<g >
<title>firedrake.parloops.par_loop (1,092,654 us, 6.68%)</title><rect x="468.7" y="135" width="78.8" height="15.0" fill="rgb(128.271677858003,162.839494302186,128.271677858003)" rx="2" ry="2" />
<text  x="471.71" y="145.5" >firedrak..</text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (9,714 us, 0.06%)</title><rect x="126.2" y="135" width="0.8" height="15.0" fill="rgb(109.883962781758,145.525471832308,145.525471832308)" rx="2" ry="2" />
<text  x="129.25" y="145.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (1,085,048 us, 6.63%)</title><rect x="469.3" y="167" width="78.2" height="15.0" fill="rgb(153.37781181141,122.563223887477,122.563223887477)" rx="2" ry="2" />
<text  x="472.25" y="177.5" >Parloop_..</text>
</g>
<g >
<title>firedrake.slate.slac.optimise.optimise (14,410 us, 0.09%)</title><rect x="462.4" y="167" width="1.0" height="15.0" fill="rgb(108.17782464453,145.083139722656,145.083139722656)" rx="2" ry="2" />
<text  x="465.37" y="177.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (45,708 us, 0.28%)</title><rect x="127.2" y="103" width="3.2" height="15.0" fill="rgb(117.836679201661,117.836679201661,150.226454039031)" rx="2" ry="2" />
<text  x="130.15" y="113.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (3,731 us, 0.02%)</title><rect x="467.3" y="215" width="0.2" height="15.0" fill="rgb(133.518627291314,151.652977445896,151.652977445896)" rx="2" ry="2" />
<text  x="470.28" y="225.5" ></text>
</g>
<g >
<title>firedrake.utility_meshes.RectangleMesh (2,206 us, 0.01%)</title><rect x="331.7" y="87" width="0.1" height="15.0" fill="rgb(121.059410504493,121.059410504493,150.850208484741)" rx="2" ry="2" />
<text  x="334.66" y="97.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (2,990 us, 0.02%)</title><rect x="547.5" y="135" width="0.2" height="15.0" fill="rgb(152.278819134374,152.278819134374,130.274277343503)" rx="2" ry="2" />
<text  x="550.49" y="145.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (3,443,133 us, 21.04%)</title><rect x="840.6" y="151" width="248.3" height="15.0" fill="rgb(115.695949156305,147.032283114597,147.032283114597)" rx="2" ry="2" />
<text  x="843.65" y="161.5" >pyop2.global_kernel.GlobalKern..</text>
</g>
<g >
<title>firedrake.matrix_free.operators.ImplicitMatrixContext.__init__ (9,482 us, 0.06%)</title><rect x="333.5" y="103" width="0.7" height="15.0" fill="rgb(155.595392471547,139.564675615197,139.564675615197)" rx="2" ry="2" />
<text  x="336.54" y="113.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (4,053,584 us, 24.77%)</title><rect x="548.4" y="151" width="292.2" height="15.0" fill="rgb(115.077747456195,146.872008599754,146.872008599754)" rx="2" ry="2" />
<text  x="551.37" y="161.5" >pyop2.global_kernel.GlobalKernel.com..</text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalProblem.__init__ (15,717 us, 0.10%)</title><rect x="332.3" y="87" width="1.1" height="15.0" fill="rgb(123.237229458638,123.237229458638,151.271721830704)" rx="2" ry="2" />
<text  x="335.26" y="97.5" ></text>
</g>
<g >
<title>ParLoopExecute (1,603,643 us, 9.80%)</title><rect x="334.8" y="183" width="115.7" height="15.0" fill="rgb(130.195276177703,150.791367897923,150.791367897923)" rx="2" ry="2" />
<text  x="337.85" y="193.5" >ParLoopExecute</text>
</g>
<g >
<title>firedrake.variational_solver.LinearVariationalProblem.__init__ (21,783 us, 0.13%)</title><rect x="331.8" y="71" width="1.6" height="15.0" fill="rgb(140.693632415432,140.693632415432,154.650380467503)" rx="2" ry="2" />
<text  x="334.82" y="81.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (6,711 us, 0.04%)</title><rect x="465.5" y="167" width="0.5" height="15.0" fill="rgb(133.820433531117,96.0398609234877,133.820433531117)" rx="2" ry="2" />
<text  x="468.48" y="177.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (3,426 us, 0.02%)</title><rect x="334.0" y="119" width="0.2" height="15.0" fill="rgb(154.569683114433,131.700903877318,131.700903877318)" rx="2" ry="2" />
<text  x="336.98" y="129.5" ></text>
</g>
<g >
<title>CreateExtMesh (1,621,987 us, 9.91%)</title><rect x="10.0" y="71" width="117.0" height="15.0" fill="rgb(127.579921008173,127.579921008173,152.112242775775)" rx="2" ry="2" />
<text  x="13.00" y="81.5" >CreateExtMesh</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (1,603,643 us, 9.80%)</title><rect x="334.8" y="215" width="115.7" height="15.0" fill="rgb(147.745072372989,147.745072372989,108.303043038331)" rx="2" ry="2" />
<text  x="337.85" y="225.5" >pyop2.global_..</text>
</g>
<g >
<title>firedrake.interpolation.make_interpolator (16,106 us, 0.10%)</title><rect x="467.5" y="135" width="1.2" height="15.0" fill="rgb(125.046288656256,125.046288656256,151.621862320566)" rx="2" ry="2" />
<text  x="470.54" y="145.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (9,028 us, 0.06%)</title><rect x="1189.3" y="135" width="0.7" height="15.0" fill="rgb(155.304486178793,137.33439403741,137.33439403741)" rx="2" ry="2" />
<text  x="1192.35" y="145.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (45,708 us, 0.28%)</title><rect x="127.2" y="87" width="3.2" height="15.0" fill="rgb(130.661378459305,130.661378459305,152.708653895349)" rx="2" ry="2" />
<text  x="130.15" y="97.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (19,425 us, 0.12%)</title><rect x="466.1" y="151" width="1.4" height="15.0" fill="rgb(135.4899966548,135.4899966548,153.643225158994)" rx="2" ry="2" />
<text  x="469.14" y="161.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.__init__ (11,516 us, 0.07%)</title><rect x="333.4" y="71" width="0.8" height="15.0" fill="rgb(149.475871388832,149.475871388832,116.690761345878)" rx="2" ry="2" />
<text  x="336.39" y="81.5" ></text>
</g>
<g >
<title>firedrake.functionspace.make_scalar_element (2,478 us, 0.02%)</title><rect x="467.1" y="199" width="0.2" height="15.0" fill="rgb(145.78796944819,159.988004973551,145.78796944819)" rx="2" ry="2" />
<text  x="470.10" y="209.5" ></text>
</g>
<g >
<title>firedrake (16,365,479 us, 100.00%)</title><rect x="10.0" y="55" width="1180.0" height="15.0" fill="rgb(144.551065129969,144.551065129969,155.396980347736)" rx="2" ry="2" />
<text  x="13.00" y="65.5" >firedrake</text>
</g>
<g >
<title>HybridBreak (1,612,333 us, 9.85%)</title><rect x="334.2" y="151" width="116.3" height="15.0" fill="rgb(150.234303368919,150.234303368919,120.366239403221)" rx="2" ry="2" />
<text  x="337.22" y="161.5" >HybridBreak</text>
</g>
<g >
<title>SNESFunctionEval (8,908,027 us, 54.43%)</title><rect x="547.7" y="103" width="642.3" height="15.0" fill="rgb(113.616343170642,146.493126007203,146.493126007203)" rx="2" ry="2" />
<text  x="550.70" y="113.5" >SNESFunctionEval</text>
</g>
<g >
<title>FunctionSpaceData: CreateElement (6,711 us, 0.04%)</title><rect x="465.5" y="199" width="0.5" height="15.0" fill="rgb(147.526559784294,131.161809447253,147.526559784294)" rx="2" ry="2" />
<text  x="468.48" y="209.5" ></text>
</g>
<g >
<title>firedrake.assemble.allocate_matrix (9,482 us, 0.06%)</title><rect x="333.5" y="87" width="0.7" height="15.0" fill="rgb(135.998200375429,152.295829726963,152.295829726963)" rx="2" ry="2" />
<text  x="336.54" y="97.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (13,760 us, 0.08%)</title><rect x="466.6" y="167" width="0.9" height="15.0" fill="rgb(142.527391059594,118.351439590209,142.527391059594)" rx="2" ry="2" />
<text  x="469.55" y="177.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (6,711 us, 0.04%)</title><rect x="465.5" y="183" width="0.5" height="15.0" fill="rgb(131.05041719288,131.05041719288,152.783951714751)" rx="2" ry="2" />
<text  x="468.48" y="193.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (13,571 us, 0.08%)</title><rect x="332.3" y="103" width="0.9" height="15.0" fill="rgb(130.637654976624,130.637654976624,152.70406225354)" rx="2" ry="2" />
<text  x="335.26" y="113.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_pyop2_kernel_uniform_extrusion (1,554,934 us, 9.50%)</title><rect x="14.1" y="119" width="112.1" height="15.0" fill="rgb(138.209477259694,138.209477259694,154.169576243812)" rx="2" ry="2" />
<text  x="17.13" y="129.5" >Parloop_Cell..</text>
</g>
<g >
<title>firedrake.__init__ (2,785,697 us, 17.02%)</title><rect x="130.6" y="71" width="200.9" height="15.0" fill="rgb(142.148885087657,153.890451689393,153.890451689393)" rx="2" ry="2" />
<text  x="133.61" y="81.5" >firedrake.__init__</text>
</g>
<g >
<title>CreateFunctionSpace (48,515 us, 0.30%)</title><rect x="127.0" y="71" width="3.4" height="15.0" fill="rgb(110.754645159417,110.754645159417,148.85573777279)" rx="2" ry="2" />
<text  x="129.95" y="81.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_form1_cell_integral_otherwise (3,443,133 us, 21.04%)</title><rect x="840.6" y="135" width="248.3" height="15.0" fill="rgb(139.438340467637,161.021665505268,139.438340467637)" rx="2" ry="2" />
<text  x="843.65" y="145.5" >Parloop_Cells_wrap_form1_cell_..</text>
</g>
<g >
<title>firedrake.functionspace.VectorFunctionSpace (9,714 us, 0.06%)</title><rect x="126.2" y="87" width="0.8" height="15.0" fill="rgb(153.429405814483,122.958777911039,122.958777911039)" rx="2" ry="2" />
<text  x="129.25" y="97.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.derivative (2,146 us, 0.01%)</title><rect x="333.2" y="103" width="0.2" height="15.0" fill="rgb(154.414183555806,154.414183555806,140.622581847366)" rx="2" ry="2" />
<text  x="336.24" y="113.5" ></text>
</g>
</g>
</svg>
