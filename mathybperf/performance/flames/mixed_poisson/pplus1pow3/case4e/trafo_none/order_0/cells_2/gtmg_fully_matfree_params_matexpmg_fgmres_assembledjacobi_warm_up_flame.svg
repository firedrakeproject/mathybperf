<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="283" onload="init(evt)" viewBox="0 0 1200 283" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:13px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:18px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 13 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (1 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="283.0" fill="url(#background)"  />
<text id="title" x="600.00" y="26" >Firedrake example</text>
<text id="details" x="10.00" y="265" > </text>
<text id="unzoom" x="10.00" y="26" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="26" >Search</text>
<text id="ignorecase" x="1174.00" y="26" >ic</text>
<text id="matched" x="1090.00" y="265" > </text>
<g id="frames">
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (6,127 us, 0.03%)</title><rect x="1189.6" y="151" width="0.4" height="15.0" fill="rgb(156.703802905621,148.062488943092,148.062488943092)" rx="2" ry="2" />
<text  x="1192.62" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (30,990 us, 0.16%)</title><rect x="120.4" y="119" width="1.9" height="15.0" fill="rgb(109.969928560354,145.547759256388,145.547759256388)" rx="2" ry="2" />
<text  x="123.37" y="129.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalProblem.__init__ (18,133 us, 0.10%)</title><rect x="294.7" y="87" width="1.2" height="15.0" fill="rgb(148.355066874335,148.355066874335,111.259170237163)" rx="2" ry="2" />
<text  x="297.73" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspace.VectorFunctionSpace (10,280 us, 0.05%)</title><rect x="119.6" y="87" width="0.6" height="15.0" fill="rgb(125.246436494672,163.331975454356,125.246436494672)" rx="2" ry="2" />
<text  x="122.58" y="97.5" ></text>
</g>
<g >
<title>firedrake (19,056,571 us, 100.00%)</title><rect x="10.0" y="55" width="1180.0" height="15.0" fill="rgb(123.699933378792,123.699933378792,151.361277428153)" rx="2" ry="2" />
<text  x="13.00" y="65.5" >firedrake</text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (10,280 us, 0.05%)</title><rect x="119.6" y="135" width="0.6" height="15.0" fill="rgb(119.596762617126,119.596762617126,150.56711534525)" rx="2" ry="2" />
<text  x="122.58" y="145.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (6,332 us, 0.03%)</title><rect x="390.3" y="151" width="0.4" height="15.0" fill="rgb(135.078517290652,161.731404161987,135.078517290652)" rx="2" ry="2" />
<text  x="393.26" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (3,023 us, 0.02%)</title><rect x="391.6" y="215" width="0.2" height="15.0" fill="rgb(116.472269571487,116.472269571487,149.962374755772)" rx="2" ry="2" />
<text  x="394.61" y="225.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (10,280 us, 0.05%)</title><rect x="119.6" y="103" width="0.6" height="15.0" fill="rgb(152.883073233033,118.770228119921,118.770228119921)" rx="2" ry="2" />
<text  x="122.58" y="113.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.__init__ (13,198 us, 0.07%)</title><rect x="295.9" y="71" width="0.8" height="15.0" fill="rgb(155.09036077613,155.09036077613,143.899440684324)" rx="2" ry="2" />
<text  x="298.85" y="81.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (18,556 us, 0.10%)</title><rect x="390.7" y="151" width="1.1" height="15.0" fill="rgb(135.009607200538,99.0871184513798,135.009607200538)" rx="2" ry="2" />
<text  x="393.65" y="161.5" ></text>
</g>
<g >
<title>PCApply (1,476,625 us, 7.75%)</title><rect x="296.7" y="119" width="91.4" height="15.0" fill="rgb(156.179343015138,144.041629782722,144.041629782722)" rx="2" ry="2" />
<text  x="299.67" y="129.5" >PCApply</text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (2,382 us, 0.01%)</title><rect x="1189.9" y="167" width="0.1" height="15.0" fill="rgb(153.44305698121,153.44305698121,135.916353062787)" rx="2" ry="2" />
<text  x="1192.85" y="177.5" ></text>
</g>
<g >
<title>SCForwardElim (1,476,625 us, 7.75%)</title><rect x="296.7" y="135" width="91.4" height="15.0" fill="rgb(128.019454820261,162.880553866469,128.019454820261)" rx="2" ry="2" />
<text  x="299.67" y="145.5" >SCForward..</text>
</g>
<g >
<title>firedrake.parloops.par_loop (1,379,321 us, 7.24%)</title><rect x="392.9" y="135" width="85.4" height="15.0" fill="rgb(135.7350220667,161.624531291467,135.7350220667)" rx="2" ry="2" />
<text  x="395.85" y="145.5" >firedrake..</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (3,976,835 us, 20.87%)</title><rect x="832.2" y="151" width="246.3" height="15.0" fill="rgb(114.220673831769,146.649804326755,146.649804326755)" rx="2" ry="2" />
<text  x="835.23" y="161.5" >pyop2.global_kernel.GlobalKern..</text>
</g>
<g >
<title>firedrake.functionspace.MixedFunctionSpace (2,350 us, 0.01%)</title><rect x="293.5" y="71" width="0.2" height="15.0" fill="rgb(132.50856617053,92.6782008119834,132.50856617053)" rx="2" ry="2" />
<text  x="296.53" y="81.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (1,327,588 us, 6.97%)</title><rect x="297.5" y="215" width="82.2" height="15.0" fill="rgb(145.132423849628,125.026836114672,145.132423849628)" rx="2" ry="2" />
<text  x="300.51" y="225.5" >pyop2.gl..</text>
</g>
<g >
<title>KSPSolve (1,476,625 us, 7.75%)</title><rect x="296.7" y="103" width="91.4" height="15.0" fill="rgb(145.931614171797,154.871159229725,154.871159229725)" rx="2" ry="2" />
<text  x="299.67" y="113.5" >KSPSolve</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (1,371,766 us, 7.20%)</title><rect x="393.3" y="183" width="85.0" height="15.0" fill="rgb(142.660692957195,142.660692957195,155.031101862683)" rx="2" ry="2" />
<text  x="396.32" y="193.5" >pyop2.glo..</text>
</g>
<g >
<title>Parloop_Cells_wrap_form0_cell_integral_otherwise (5,707,097 us, 29.95%)</title><rect x="478.8" y="135" width="353.4" height="15.0" fill="rgb(114.871551227112,146.81855031814,146.81855031814)" rx="2" ry="2" />
<text  x="481.84" y="145.5" >Parloop_Cells_wrap_form0_cell_integral_other..</text>
</g>
<g >
<title>firedrake.matrix_free.operators.ImplicitMatrixContext.__init__ (10,914 us, 0.06%)</title><rect x="296.0" y="103" width="0.7" height="15.0" fill="rgb(150.171551277769,150.171551277769,120.062133115341)" rx="2" ry="2" />
<text  x="298.99" y="113.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (11,937 us, 0.06%)</title><rect x="1189.3" y="135" width="0.7" height="15.0" fill="rgb(135.2525326083,99.7096148087698,135.2525326083)" rx="2" ry="2" />
<text  x="1192.26" y="145.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (1,715,783 us, 9.00%)</title><rect x="13.3" y="135" width="106.3" height="15.0" fill="rgb(138.721389949082,161.138378380382,138.721389949082)" rx="2" ry="2" />
<text  x="16.34" y="145.5" >pyop2.globa..</text>
</g>
<g >
<title>firedrake.extrusion_utils.make_extruded_coords (1,765,482 us, 9.26%)</title><rect x="10.3" y="87" width="109.3" height="15.0" fill="rgb(130.313895602121,162.507040250817,130.313895602121)" rx="2" ry="2" />
<text  x="13.26" y="97.5" >firedrake.ex..</text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (4,451 us, 0.02%)</title><rect x="296.4" y="119" width="0.3" height="15.0" fill="rgb(133.367242015502,162.009983857942,133.367242015502)" rx="2" ry="2" />
<text  x="299.39" y="129.5" ></text>
</g>
<g >
<title>PCSetUp (1,459,263 us, 7.66%)</title><rect x="388.1" y="103" width="90.4" height="15.0" fill="rgb(153.837735544223,126.089305839045,126.089305839045)" rx="2" ry="2" />
<text  x="391.10" y="113.5" >PCSetUp</text>
</g>
<g >
<title>Parloop_Cells_wrap_form1_cell_integral_otherwise (3,976,835 us, 20.87%)</title><rect x="832.2" y="135" width="246.3" height="15.0" fill="rgb(153.933897041888,126.82654398781,126.82654398781)" rx="2" ry="2" />
<text  x="835.23" y="145.5" >Parloop_Cells_wrap_form1_cell_..</text>
</g>
<g >
<title>Log_Event_form0_cell_integral_otherwise (4,033 us, 0.02%)</title><rect x="478.8" y="151" width="0.3" height="15.0" fill="rgb(122.637844670004,122.637844670004,151.155711871614)" rx="2" ry="2" />
<text  x="481.84" y="161.5" ></text>
</g>
<g >
<title>ParLoopExecute (9,683,932 us, 50.82%)</title><rect x="478.8" y="119" width="599.7" height="15.0" fill="rgb(152.356865217339,114.735966666267,114.735966666267)" rx="2" ry="2" />
<text  x="481.84" y="129.5" >ParLoopExecute</text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (3,023 us, 0.02%)</title><rect x="391.6" y="231" width="0.2" height="15.0" fill="rgb(154.81069729983,133.548679298696,133.548679298696)" rx="2" ry="2" />
<text  x="394.61" y="241.5" ></text>
</g>
<g >
<title>HybridInit (1,459,263 us, 7.66%)</title><rect x="388.1" y="119" width="90.4" height="15.0" fill="rgb(128.252148608932,150.287594083797,150.287594083797)" rx="2" ry="2" />
<text  x="391.10" y="129.5" >HybridInit</text>
</g>
<g >
<title>CreateExtMesh (1,779,960 us, 9.34%)</title><rect x="10.0" y="71" width="110.2" height="15.0" fill="rgb(140.106781174247,160.912849576285,140.106781174247)" rx="2" ry="2" />
<text  x="13.00" y="81.5" >CreateExtMesh</text>
</g>
<g >
<title>CreateFunctionSpace (33,440 us, 0.18%)</title><rect x="120.2" y="71" width="2.1" height="15.0" fill="rgb(149.166283385619,135.363601175649,149.166283385619)" rx="2" ry="2" />
<text  x="123.22" y="81.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (6,275 us, 0.03%)</title><rect x="391.4" y="199" width="0.4" height="15.0" fill="rgb(127.223199550196,150.020829513014,150.020829513014)" rx="2" ry="2" />
<text  x="394.41" y="209.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.action (14,650 us, 0.08%)</title><rect x="293.8" y="87" width="0.9" height="15.0" fill="rgb(122.271167113147,122.271167113147,151.084742021899)" rx="2" ry="2" />
<text  x="296.82" y="97.5" ></text>
</g>
<g >
<title>all (19,056,571 us, 100%)</title><rect x="10.0" y="39" width="1180.0" height="15.0" fill="rgb(136.176529528096,136.176529528096,153.776102489309)" rx="2" ry="2" />
<text  x="13.00" y="49.5" ></text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (1,801,092 us, 9.45%)</title><rect x="1078.5" y="119" width="111.5" height="15.0" fill="rgb(155.547574371939,139.198070184862,139.198070184862)" rx="2" ry="2" />
<text  x="1081.47" y="129.5" >firedrake.ts..</text>
</g>
<g >
<title>firedrake.functionspace.MixedFunctionSpace (2,261 us, 0.01%)</title><rect x="390.1" y="151" width="0.2" height="15.0" fill="rgb(149.155671224196,159.439774451875,149.155671224196)" rx="2" ry="2" />
<text  x="393.12" y="161.5" ></text>
</g>
<g >
<title>SNESSolve (14,426,983 us, 75.71%)</title><rect x="296.7" y="87" width="893.3" height="15.0" fill="rgb(145.067068481591,160.105360944857,145.067068481591)" rx="2" ry="2" />
<text  x="299.67" y="97.5" >SNESSolve</text>
</g>
<g >
<title>firedrake.utility_meshes.RectangleMesh (2,429 us, 0.01%)</title><rect x="293.7" y="87" width="0.1" height="15.0" fill="rgb(149.885315013155,149.885315013155,118.674988140676)" rx="2" ry="2" />
<text  x="296.67" y="97.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (8,593 us, 0.05%)</title><rect x="390.1" y="135" width="0.6" height="15.0" fill="rgb(120.855870321105,120.855870321105,150.810813610536)" rx="2" ry="2" />
<text  x="393.12" y="145.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (2,261 us, 0.01%)</title><rect x="390.1" y="183" width="0.2" height="15.0" fill="rgb(153.422054977123,122.902421491274,122.902421491274)" rx="2" ry="2" />
<text  x="393.12" y="193.5" ></text>
</g>
<g >
<title>SNESFunctionEval (11,491,095 us, 60.30%)</title><rect x="478.5" y="103" width="711.5" height="15.0" fill="rgb(148.05374936602,159.61915707995,148.05374936602)" rx="2" ry="2" />
<text  x="481.46" y="113.5" >SNESFunctionEval</text>
</g>
<g >
<title>firedrake.parloops.par_loop (1,341,180 us, 7.04%)</title><rect x="296.7" y="167" width="83.0" height="15.0" fill="rgb(152.10063694454,112.771549908143,112.771549908143)" rx="2" ry="2" />
<text  x="299.67" y="177.5" >firedrak..</text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (30,990 us, 0.16%)</title><rect x="120.4" y="103" width="1.9" height="15.0" fill="rgb(152.305221841923,114.34003412141,114.34003412141)" rx="2" ry="2" />
<text  x="123.37" y="113.5" ></text>
</g>
<g >
<title>FunctionSpaceData: CreateElement (11,226 us, 0.06%)</title><rect x="121.4" y="135" width="0.7" height="15.0" fill="rgb(137.754385278223,161.295797745406,137.754385278223)" rx="2" ry="2" />
<text  x="124.38" y="145.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.LinearVariationalProblem.__init__ (32,783 us, 0.17%)</title><rect x="293.8" y="71" width="2.1" height="15.0" fill="rgb(155.701266725816,140.376378231253,140.376378231253)" rx="2" ry="2" />
<text  x="296.82" y="81.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (10,280 us, 0.05%)</title><rect x="119.6" y="119" width="0.6" height="15.0" fill="rgb(120.768151943619,120.768151943619,150.793835860055)" rx="2" ry="2" />
<text  x="122.58" y="129.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (14,146 us, 0.07%)</title><rect x="390.9" y="167" width="0.9" height="15.0" fill="rgb(154.858146357279,133.912455405808,133.912455405808)" rx="2" ry="2" />
<text  x="393.92" y="177.5" ></text>
</g>
<g >
<title>HybridBreak (1,341,180 us, 7.04%)</title><rect x="296.7" y="151" width="83.0" height="15.0" fill="rgb(148.841695916272,148.841695916272,113.617449440393)" rx="2" ry="2" />
<text  x="299.67" y="161.5" >HybridBr..</text>
</g>
<g >
<title>firedrake.mesh.MeshTopology._facets (3,382 us, 0.02%)</title><rect x="122.1" y="135" width="0.2" height="15.0" fill="rgb(150.348558424889,150.348558424889,120.919936982155)" rx="2" ry="2" />
<text  x="125.08" y="145.5" ></text>
</g>
<g >
<title>HybridRHS (135,445 us, 0.71%)</title><rect x="379.7" y="151" width="8.4" height="15.0" fill="rgb(120.9786422987,120.9786422987,150.834575928781)" rx="2" ry="2" />
<text  x="382.72" y="161.5" ></text>
</g>
<g >
<title>firedrake.slate.slac.optimise.optimise (7,818 us, 0.04%)</title><rect x="387.6" y="167" width="0.5" height="15.0" fill="rgb(154.32965272546,129.860670895196,129.860670895196)" rx="2" ry="2" />
<text  x="390.62" y="177.5" ></text>
</g>
<g >
<title>firedrake.__init__ (2,761,942 us, 14.49%)</title><rect x="122.5" y="71" width="171.0" height="15.0" fill="rgb(129.693841727612,129.693841727612,152.521388721473)" rx="2" ry="2" />
<text  x="125.50" y="81.5" >firedrake.__init__</text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.solve (14,426,983 us, 75.71%)</title><rect x="296.7" y="71" width="893.3" height="15.0" fill="rgb(130.131974328835,162.536655341818,130.131974328835)" rx="2" ry="2" />
<text  x="299.67" y="81.5" >firedrake.variational_solver.NonlinearVariationalSolver.solve</text>
</g>
<g >
<title>ParLoopExecute (1,715,783 us, 9.00%)</title><rect x="13.3" y="103" width="106.3" height="15.0" fill="rgb(156.446674573632,146.091171731175,146.091171731175)" rx="2" ry="2" />
<text  x="16.34" y="113.5" >ParLoopExec..</text>
</g>
<g >
<title>Parloop_Cells_wrap_pyop2_kernel_uniform_extrusion (1,715,783 us, 9.00%)</title><rect x="13.3" y="119" width="106.3" height="15.0" fill="rgb(125.698050499143,125.698050499143,151.748009774028)" rx="2" ry="2" />
<text  x="16.34" y="129.5" >Parloop_Cel..</text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (3,231 us, 0.02%)</title><rect x="478.3" y="135" width="0.2" height="15.0" fill="rgb(155.661514057461,155.661514057461,146.66733735539)" rx="2" ry="2" />
<text  x="481.26" y="145.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (10,280 us, 0.05%)</title><rect x="119.6" y="151" width="0.6" height="15.0" fill="rgb(106.678598125187,144.694451365789,144.694451365789)" rx="2" ry="2" />
<text  x="122.58" y="161.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (5,703,064 us, 29.93%)</title><rect x="479.1" y="151" width="353.1" height="15.0" fill="rgb(148.259365118208,159.585684748199,148.259365118208)" rx="2" ry="2" />
<text  x="482.09" y="161.5" >pyop2.global_kernel.GlobalKernel.compile</text>
</g>
<g >
<title>ParLoopExecute (1,371,766 us, 7.20%)</title><rect x="393.3" y="151" width="85.0" height="15.0" fill="rgb(114.126508317985,146.625391045404,146.625391045404)" rx="2" ry="2" />
<text  x="396.32" y="161.5" >ParLoopEx..</text>
</g>
<g >
<title>firedrake.ufl_expr.action (6,463 us, 0.03%)</title><rect x="296.0" y="119" width="0.4" height="15.0" fill="rgb(149.643460984264,136.586368772177,149.643460984264)" rx="2" ry="2" />
<text  x="298.99" y="129.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (6,332 us, 0.03%)</title><rect x="390.3" y="167" width="0.4" height="15.0" fill="rgb(149.049580295183,135.064549506405,149.049580295183)" rx="2" ry="2" />
<text  x="393.26" y="177.5" ></text>
</g>
<g >
<title>firedrake.interpolation.make_interpolator (16,978 us, 0.09%)</title><rect x="391.8" y="135" width="1.1" height="15.0" fill="rgb(148.623643078629,148.623643078629,112.560731842589)" rx="2" ry="2" />
<text  x="394.80" y="145.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (1,327,588 us, 6.97%)</title><rect x="297.5" y="199" width="82.2" height="15.0" fill="rgb(125.802470927864,125.802470927864,151.768220179587)" rx="2" ry="2" />
<text  x="300.51" y="209.5" >Parloop_..</text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (18,556 us, 0.10%)</title><rect x="390.7" y="135" width="1.1" height="15.0" fill="rgb(151.786830599,151.786830599,127.890025210536)" rx="2" ry="2" />
<text  x="393.65" y="145.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (10,680 us, 0.06%)</title><rect x="391.1" y="183" width="0.7" height="15.0" fill="rgb(153.040561080942,119.977634953891,119.977634953891)" rx="2" ry="2" />
<text  x="394.14" y="193.5" ></text>
</g>
<g >
<title>FunctionSpaceData: CreateElement (6,332 us, 0.03%)</title><rect x="390.3" y="199" width="0.4" height="15.0" fill="rgb(155.20712588809,155.20712588809,144.465302380742)" rx="2" ry="2" />
<text  x="393.26" y="209.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (15,833 us, 0.08%)</title><rect x="294.9" y="103" width="1.0" height="15.0" fill="rgb(133.574527447745,95.4097265848456,133.574527447745)" rx="2" ry="2" />
<text  x="297.87" y="113.5" ></text>
</g>
<g >
<title>CreateMesh (3,486 us, 0.02%)</title><rect x="122.3" y="71" width="0.2" height="15.0" fill="rgb(119.730517400305,148.078282288968,148.078282288968)" rx="2" ry="2" />
<text  x="125.29" y="81.5" ></text>
</g>
<g >
<title>ParLoopExecute (1,327,588 us, 6.97%)</title><rect x="297.5" y="183" width="82.2" height="15.0" fill="rgb(114.503715550662,146.723185513135,146.723185513135)" rx="2" ry="2" />
<text  x="300.51" y="193.5" >ParLoopE..</text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (30,990 us, 0.16%)</title><rect x="120.4" y="87" width="1.9" height="15.0" fill="rgb(152.280773843611,114.152599467683,114.152599467683)" rx="2" ry="2" />
<text  x="123.37" y="97.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (1,371,766 us, 7.20%)</title><rect x="393.3" y="167" width="85.0" height="15.0" fill="rgb(148.801220952203,148.801220952203,113.421301537601)" rx="2" ry="2" />
<text  x="396.32" y="177.5" >Parloop_C..</text>
</g>
<g >
<title>CreateFunctionSpace (2,261 us, 0.01%)</title><rect x="390.1" y="167" width="0.2" height="15.0" fill="rgb(154.491726360922,154.491726360922,140.998366210622)" rx="2" ry="2" />
<text  x="393.12" y="177.5" ></text>
</g>
<g >
<title>firedrake.assemble.allocate_matrix (10,914 us, 0.06%)</title><rect x="296.0" y="87" width="0.7" height="15.0" fill="rgb(150.208180807256,150.208180807256,120.239645450549)" rx="2" ry="2" />
<text  x="298.99" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (6,332 us, 0.03%)</title><rect x="390.3" y="183" width="0.4" height="15.0" fill="rgb(134.264174065523,151.846267350321,151.846267350321)" rx="2" ry="2" />
<text  x="393.26" y="193.5" ></text>
</g>
<g >
<title>firedrake.utility_meshes.SquareMesh (2,429 us, 0.01%)</title><rect x="293.7" y="71" width="0.1" height="15.0" fill="rgb(124.605331206762,163.436341431457,124.605331206762)" rx="2" ry="2" />
<text  x="296.67" y="81.5" ></text>
</g>
</g>
</svg>
