<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="283" onload="init(evt)" viewBox="0 0 1200 283" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:13px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:18px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 13 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (1 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="283.0" fill="url(#background)"  />
<text id="title" x="600.00" y="26" >Firedrake example</text>
<text id="details" x="10.00" y="265" > </text>
<text id="unzoom" x="10.00" y="26" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="26" >Search</text>
<text id="ignorecase" x="1174.00" y="26" >ic</text>
<text id="matched" x="1090.00" y="265" > </text>
<g id="frames">
<g >
<title>firedrake.formmanipulation.split_form (25,324 us, 0.63%)</title><rect x="1182.6" y="135" width="7.4" height="15.0" fill="rgb(153.511519749107,123.588318076483,123.588318076483)" rx="2" ry="2" />
<text  x="1185.62" y="145.5" ></text>
</g>
<g >
<title>firedrake.parloops.par_loop (104,725 us, 2.59%)</title><rect x="1035.0" y="135" width="30.5" height="15.0" fill="rgb(149.817003209811,149.817003209811,118.343938632159)" rx="2" ry="2" />
<text  x="1037.95" y="145.5" >f..</text>
</g>
<g >
<title>CreateFunctionSpace (1,587 us, 0.04%)</title><rect x="1013.3" y="167" width="0.5" height="15.0" fill="rgb(138.430049740545,161.18580585619,138.430049740545)" rx="2" ry="2" />
<text  x="1016.32" y="177.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.action (10,433 us, 0.26%)</title><rect x="896.6" y="87" width="3.0" height="15.0" fill="rgb(152.920566343692,119.05767530164,119.05767530164)" rx="2" ry="2" />
<text  x="899.56" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (1,587 us, 0.04%)</title><rect x="1013.3" y="199" width="0.5" height="15.0" fill="rgb(150.502411472125,150.502411472125,121.665532518761)" rx="2" ry="2" />
<text  x="1016.32" y="209.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (4,498 us, 0.11%)</title><rect x="1013.8" y="183" width="1.3" height="15.0" fill="rgb(124.405132958394,163.468931843982,124.405132958394)" rx="2" ry="2" />
<text  x="1016.78" y="193.5" ></text>
</g>
<g >
<title>firedrake.mesh._Facets.__init__ (765 us, 0.02%)</title><rect x="71.7" y="151" width="0.2" height="15.0" fill="rgb(155.941776899075,142.220289559575,142.220289559575)" rx="2" ry="2" />
<text  x="74.65" y="161.5" ></text>
</g>
<g >
<title>SCForwardElim (294,926 us, 7.28%)</title><rect x="917.7" y="135" width="85.9" height="15.0" fill="rgb(127.969037116869,150.214194808077,150.214194808077)" rx="2" ry="2" />
<text  x="920.69" y="145.5" >SCForward..</text>
</g>
<g >
<title>FunctionSpaceData: CreateElement (837 us, 0.02%)</title><rect x="60.3" y="167" width="0.3" height="15.0" fill="rgb(144.125802217737,154.402985760154,154.402985760154)" rx="2" ry="2" />
<text  x="63.34" y="177.5" ></text>
</g>
<g >
<title>HybridRHS (182,334 us, 4.50%)</title><rect x="950.5" y="151" width="53.1" height="15.0" fill="rgb(155.849266082475,141.51103996564,141.51103996564)" rx="2" ry="2" />
<text  x="953.49" y="161.5" >Hybr..</text>
</g>
<g >
<title>HybridInit (217,481 us, 5.37%)</title><rect x="1003.6" y="119" width="63.4" height="15.0" fill="rgb(140.418524556273,160.86210065363,140.418524556273)" rx="2" ry="2" />
<text  x="1006.61" y="129.5" >Hybrid..</text>
</g>
<g >
<title>CreateExtMesh (177,547 us, 4.38%)</title><rect x="10.0" y="71" width="51.7" height="15.0" fill="rgb(124.419085279454,163.466660535903,124.419085279454)" rx="2" ry="2" />
<text  x="13.00" y="81.5" >Crea..</text>
</g>
<g >
<title>firedrake.mesh.make_mesh_from_coordinates (1,938 us, 0.05%)</title><rect x="61.2" y="87" width="0.5" height="15.0" fill="rgb(131.391780325772,151.101572677052,151.101572677052)" rx="2" ry="2" />
<text  x="64.16" y="97.5" ></text>
</g>
<g >
<title>CreateMesh (646 us, 0.02%)</title><rect x="896.4" y="103" width="0.2" height="15.0" fill="rgb(107.478770292455,144.901903409155,144.901903409155)" rx="2" ry="2" />
<text  x="899.37" y="113.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (123,994 us, 3.06%)</title><rect x="22.4" y="135" width="36.1" height="15.0" fill="rgb(154.383707595449,130.275091565108,130.275091565108)" rx="2" ry="2" />
<text  x="25.38" y="145.5" >py..</text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalProblem.__init__ (39,145 us, 0.97%)</title><rect x="899.6" y="87" width="11.4" height="15.0" fill="rgb(152.178654739755,152.178654739755,129.788865277274)" rx="2" ry="2" />
<text  x="902.60" y="97.5" ></text>
</g>
<g >
<title>firedrake.interpolation.make_interpolator (32,589 us, 0.80%)</title><rect x="1025.5" y="135" width="9.5" height="15.0" fill="rgb(148.2411084458,148.2411084458,110.706910160414)" rx="2" ry="2" />
<text  x="1028.46" y="145.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (20,452 us, 0.50%)</title><rect x="1184.0" y="151" width="6.0" height="15.0" fill="rgb(153.094659888658,153.094659888658,134.227967152729)" rx="2" ry="2" />
<text  x="1187.04" y="161.5" ></text>
</g>
<g >
<title>Log_Event_form0_cell_integral_otherwise (4,852 us, 0.12%)</title><rect x="1069.0" y="151" width="1.4" height="15.0" fill="rgb(127.72664672699,162.928220300257,127.72664672699)" rx="2" ry="2" />
<text  x="1071.97" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (829 us, 0.02%)</title><rect x="895.8" y="119" width="0.2" height="15.0" fill="rgb(153.597774751046,124.249606424686,124.249606424686)" rx="2" ry="2" />
<text  x="898.79" y="129.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (34,186 us, 0.84%)</title><rect x="899.6" y="103" width="10.0" height="15.0" fill="rgb(146.297307848913,159.905089419944,146.297307848913)" rx="2" ry="2" />
<text  x="902.60" y="113.5" ></text>
</g>
<g >
<title>CreateMesh (1,730 us, 0.04%)</title><rect x="71.9" y="71" width="0.5" height="15.0" fill="rgb(153.849117857349,153.849117857349,137.884186539461)" rx="2" ry="2" />
<text  x="74.88" y="81.5" ></text>
</g>
<g >
<title>firedrake.mesh.MeshTopology._facets (2,491 us, 0.06%)</title><rect x="71.1" y="135" width="0.8" height="15.0" fill="rgb(141.345768227222,160.711154009522,141.345768227222)" rx="2" ry="2" />
<text  x="74.15" y="145.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (7,930 us, 0.20%)</title><rect x="58.5" y="119" width="2.3" height="15.0" fill="rgb(129.753305136147,129.753305136147,152.532897768287)" rx="2" ry="2" />
<text  x="61.51" y="129.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (34,844 us, 0.86%)</title><rect x="61.7" y="71" width="10.2" height="15.0" fill="rgb(139.817923990383,160.959872838775,139.817923990383)" rx="2" ry="2" />
<text  x="64.72" y="81.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.solve (934,730 us, 23.08%)</title><rect x="917.7" y="71" width="272.3" height="15.0" fill="rgb(153.934420761968,126.830559175091,126.830559175091)" rx="2" ry="2" />
<text  x="920.69" y="81.5" >firedrake.variational_solver.Nonl..</text>
</g>
<g >
<title>firedrake.functionspace.MixedFunctionSpace (2,727 us, 0.07%)</title><rect x="1013.0" y="151" width="0.8" height="15.0" fill="rgb(112.763860891909,112.763860891909,149.244618237144)" rx="2" ry="2" />
<text  x="1015.99" y="161.5" ></text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (117,516 us, 2.90%)</title><rect x="1155.8" y="119" width="34.2" height="15.0" fill="rgb(153.793670716496,125.751475493133,125.751475493133)" rx="2" ry="2" />
<text  x="1158.76" y="129.5" >fi..</text>
</g>
<g >
<title>firedrake.assemble.allocate_matrix (14,850 us, 0.37%)</title><rect x="913.4" y="87" width="4.3" height="15.0" fill="rgb(152.151738366734,152.151738366734,129.658424392635)" rx="2" ry="2" />
<text  x="916.36" y="97.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.LinearVariationalProblem.__init__ (49,578 us, 1.22%)</title><rect x="896.6" y="71" width="14.4" height="15.0" fill="rgb(114.754850103216,114.754850103216,149.629970987719)" rx="2" ry="2" />
<text  x="899.56" y="81.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (1,587 us, 0.04%)</title><rect x="1013.3" y="183" width="0.5" height="15.0" fill="rgb(155.857720664964,155.857720664964,147.618184760979)" rx="2" ry="2" />
<text  x="1016.32" y="193.5" ></text>
</g>
<g >
<title>HybridBreak (112,592 us, 2.78%)</title><rect x="917.7" y="151" width="32.8" height="15.0" fill="rgb(125.554641212592,149.588240314376,149.588240314376)" rx="2" ry="2" />
<text  x="920.69" y="161.5" >Hy..</text>
</g>
<g >
<title>firedrake.mesh._Facets.__init__ (800 us, 0.02%)</title><rect x="60.6" y="167" width="0.2" height="15.0" fill="rgb(152.418379497752,115.207576149436,115.207576149436)" rx="2" ry="2" />
<text  x="63.58" y="177.5" ></text>
</g>
<g >
<title>PCSetUp (217,481 us, 5.37%)</title><rect x="1003.6" y="103" width="63.4" height="15.0" fill="rgb(128.39082999777,128.39082999777,152.269192902794)" rx="2" ry="2" />
<text  x="1006.61" y="113.5" >PCSetUp</text>
</g>
<g >
<title>firedrake.matrix_free.operators.ImplicitMatrixContext.__init__ (14,850 us, 0.37%)</title><rect x="913.4" y="103" width="4.3" height="15.0" fill="rgb(154.352331756123,130.034543463612,130.034543463612)" rx="2" ry="2" />
<text  x="916.36" y="113.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (4,498 us, 0.11%)</title><rect x="1013.8" y="167" width="1.3" height="15.0" fill="rgb(152.628301819947,116.816980619595,116.816980619595)" rx="2" ry="2" />
<text  x="1016.78" y="177.5" ></text>
</g>
<g >
<title>ParLoopExecute (99,582 us, 2.46%)</title><rect x="921.5" y="183" width="29.0" height="15.0" fill="rgb(156.081178354519,143.289034051315,143.289034051315)" rx="2" ry="2" />
<text  x="924.48" y="193.5" >P..</text>
</g>
<g >
<title>firedrake.extrusion_utils.make_extruded_coords (165,657 us, 4.09%)</title><rect x="10.2" y="87" width="48.3" height="15.0" fill="rgb(139.802340166372,153.282088191282,153.282088191282)" rx="2" ry="2" />
<text  x="13.25" y="97.5" >fire..</text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (5,513 us, 0.14%)</title><rect x="1022.5" y="215" width="1.6" height="15.0" fill="rgb(140.434162453811,160.85955494938,140.434162453811)" rx="2" ry="2" />
<text  x="1025.48" y="225.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (8,037 us, 0.20%)</title><rect x="1012.8" y="135" width="2.3" height="15.0" fill="rgb(148.340810636427,159.572426175465,148.340810636427)" rx="2" ry="2" />
<text  x="1015.75" y="145.5" ></text>
</g>
<g >
<title>firedrake.functionspace.make_scalar_element (3,777 us, 0.09%)</title><rect x="1020.7" y="199" width="1.1" height="15.0" fill="rgb(129.766834030249,162.596096785773,129.766834030249)" rx="2" ry="2" />
<text  x="1023.74" y="209.5" ></text>
</g>
<g >
<title>firedrake.functionspace.MixedFunctionSpace (2,225 us, 0.05%)</title><rect x="895.4" y="71" width="0.6" height="15.0" fill="rgb(155.970572255541,142.441053959147,142.441053959147)" rx="2" ry="2" />
<text  x="898.38" y="81.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (14,121 us, 0.35%)</title><rect x="1185.9" y="183" width="4.1" height="15.0" fill="rgb(137.130112307597,137.130112307597,153.960666898245)" rx="2" ry="2" />
<text  x="1188.89" y="193.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (98,899 us, 2.44%)</title><rect x="921.7" y="215" width="28.8" height="15.0" fill="rgb(140.1203457555,153.364534084759,153.364534084759)" rx="2" ry="2" />
<text  x="924.68" y="225.5" >p..</text>
</g>
<g >
<title>firedrake.functionspaceimpl.WithGeometry.split (2,234 us, 0.06%)</title><rect x="1024.1" y="183" width="0.6" height="15.0" fill="rgb(150.280490377905,150.280490377905,120.590068754463)" rx="2" ry="2" />
<text  x="1027.08" y="193.5" ></text>
</g>
<g >
<title>firedrake.utility_meshes.RectangleMesh (1,825 us, 0.05%)</title><rect x="896.0" y="87" width="0.6" height="15.0" fill="rgb(154.466287435285,130.908203670517,130.908203670517)" rx="2" ry="2" />
<text  x="899.03" y="97.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (157,949 us, 3.90%)</title><rect x="1109.7" y="151" width="46.1" height="15.0" fill="rgb(139.616800349921,110.893050896674,139.616800349921)" rx="2" ry="2" />
<text  x="1112.75" y="161.5" >pyo..</text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (97,999 us, 2.42%)</title><rect x="1036.9" y="167" width="28.6" height="15.0" fill="rgb(154.754647510208,133.118964244928,133.118964244928)" rx="2" ry="2" />
<text  x="1039.91" y="177.5" >P..</text>
</g>
<g >
<title>PCApply (294,926 us, 7.28%)</title><rect x="917.7" y="119" width="85.9" height="15.0" fill="rgb(128.398128037388,128.398128037388,152.270605426591)" rx="2" ry="2" />
<text  x="920.69" y="129.5" >PCApply</text>
</g>
<g >
<title>firedrake (4,050,421 us, 100.00%)</title><rect x="10.0" y="55" width="1180.0" height="15.0" fill="rgb(115.481869376373,146.97678094943,146.97678094943)" rx="2" ry="2" />
<text  x="13.00" y="65.5" >firedrake</text>
</g>
<g >
<title>firedrake.function.Function.__init__ (1,136 us, 0.03%)</title><rect x="1003.3" y="183" width="0.3" height="15.0" fill="rgb(120.669605044019,120.669605044019,150.774762266584)" rx="2" ry="2" />
<text  x="1006.28" y="193.5" ></text>
</g>
<g >
<title>firedrake.mesh.ExtrudedMeshTopology.__init__ (1,178 us, 0.03%)</title><rect x="60.8" y="87" width="0.4" height="15.0" fill="rgb(111.044943282689,145.826466776993,145.826466776993)" rx="2" ry="2" />
<text  x="63.82" y="97.5" ></text>
</g>
<g >
<title>firedrake.utility_meshes.SquareMesh (1,825 us, 0.05%)</title><rect x="896.0" y="71" width="0.6" height="15.0" fill="rgb(147.678794549797,159.68019623608,147.678794549797)" rx="2" ry="2" />
<text  x="899.03" y="81.5" ></text>
</g>
<g >
<title>SNESFunctionEval (422,323 us, 10.43%)</title><rect x="1067.0" y="103" width="123.0" height="15.0" fill="rgb(139.279488314301,110.028688805397,139.279488314301)" rx="2" ry="2" />
<text  x="1069.97" y="113.5" >SNESFunctionEval</text>
</g>
<g >
<title>firedrake.functionspace.make_scalar_element (1,107 us, 0.03%)</title><rect x="62.6" y="87" width="0.3" height="15.0" fill="rgb(129.356264099243,129.356264099243,152.456051115982)" rx="2" ry="2" />
<text  x="65.58" y="97.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (7,930 us, 0.20%)</title><rect x="58.5" y="103" width="2.3" height="15.0" fill="rgb(130.703864472149,150.923224122409,150.923224122409)" rx="2" ry="2" />
<text  x="61.51" y="113.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (15,004 us, 0.37%)</title><rect x="1185.6" y="167" width="4.4" height="15.0" fill="rgb(124.0641899562,163.524434193177,124.0641899562)" rx="2" ry="2" />
<text  x="1188.63" y="177.5" ></text>
</g>
<g >
<title>firedrake.function.Function.split (4,186 us, 0.10%)</title><rect x="909.8" y="119" width="1.2" height="15.0" fill="rgb(122.539222029625,148.806464970644,148.806464970644)" rx="2" ry="2" />
<text  x="912.78" y="129.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (1,016 us, 0.03%)</title><rect x="1189.7" y="231" width="0.3" height="15.0" fill="rgb(138.043170992631,152.826007294386,152.826007294386)" rx="2" ry="2" />
<text  x="1192.70" y="241.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.__init__ (22,945 us, 0.57%)</title><rect x="911.0" y="71" width="6.7" height="15.0" fill="rgb(131.080388004302,162.382262417904,131.080388004302)" rx="2" ry="2" />
<text  x="914.00" y="81.5" ></text>
</g>
<g >
<title>firedrake.slate.slac.optimise.optimise (8,509 us, 0.21%)</title><rect x="1001.1" y="167" width="2.5" height="15.0" fill="rgb(153.496234928458,153.496234928458,136.174061576371)" rx="2" ry="2" />
<text  x="1004.13" y="177.5" ></text>
</g>
<g >
<title>firedrake.functionspace.VectorFunctionSpace (7,930 us, 0.20%)</title><rect x="58.5" y="87" width="2.3" height="15.0" fill="rgb(115.343123002448,146.940809667301,146.940809667301)" rx="2" ry="2" />
<text  x="61.51" y="97.5" ></text>
</g>
<g >
<title>ParLoopExecute (97,999 us, 2.42%)</title><rect x="1036.9" y="151" width="28.6" height="15.0" fill="rgb(155.77408209546,155.77408209546,147.212859385692)" rx="2" ry="2" />
<text  x="1039.91" y="161.5" >P..</text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (29,643 us, 0.73%)</title><rect x="63.2" y="103" width="8.7" height="15.0" fill="rgb(148.28466408137,148.28466408137,110.917987471256)" rx="2" ry="2" />
<text  x="66.24" y="113.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (829 us, 0.02%)</title><rect x="895.8" y="103" width="0.2" height="15.0" fill="rgb(130.767141524885,150.939629284229,150.939629284229)" rx="2" ry="2" />
<text  x="898.79" y="113.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (30,452 us, 0.75%)</title><rect x="1015.9" y="151" width="8.8" height="15.0" fill="rgb(132.324411790209,151.343366019684,151.343366019684)" rx="2" ry="2" />
<text  x="1018.86" y="161.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_form1_cell_integral_otherwise (158,931 us, 3.92%)</title><rect x="1109.5" y="135" width="46.3" height="15.0" fill="rgb(127.07127693525,149.981442168398,149.981442168398)" rx="2" ry="2" />
<text  x="1112.46" y="145.5" >Parl..</text>
</g>
<g >
<title>firedrake.parloops.par_loop (111,511 us, 2.75%)</title><rect x="918.0" y="167" width="32.5" height="15.0" fill="rgb(154.200134388576,128.86769697908,128.86769697908)" rx="2" ry="2" />
<text  x="921.00" y="177.5" >fi..</text>
</g>
<g >
<title>FunctionSpaceData: CreateElement (9,078 us, 0.22%)</title><rect x="68.5" y="135" width="2.6" height="15.0" fill="rgb(145.087973653822,154.652437613954,154.652437613954)" rx="2" ry="2" />
<text  x="71.51" y="145.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.derivative (4,959 us, 0.12%)</title><rect x="909.6" y="103" width="1.4" height="15.0" fill="rgb(155.815623235767,141.253111474211,141.253111474211)" rx="2" ry="2" />
<text  x="912.56" y="113.5" ></text>
</g>
<g >
<title>firedrake.function.Function.split (808 us, 0.02%)</title><rect x="1025.2" y="135" width="0.3" height="15.0" fill="rgb(155.265326443425,137.034169399591,137.034169399591)" rx="2" ry="2" />
<text  x="1028.22" y="145.5" ></text>
</g>
<g >
<title>KSPSolve (294,926 us, 7.28%)</title><rect x="917.7" y="103" width="85.9" height="15.0" fill="rgb(110.640595486523,145.721635866876,145.721635866876)" rx="2" ry="2" />
<text  x="920.69" y="113.5" >KSPSolve</text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (829 us, 0.02%)</title><rect x="895.8" y="87" width="0.2" height="15.0" fill="rgb(144.820731166441,154.583152524633,154.583152524633)" rx="2" ry="2" />
<text  x="898.79" y="97.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.action (8,947 us, 0.22%)</title><rect x="913.4" y="119" width="2.6" height="15.0" fill="rgb(134.914953578239,98.8445685442362,134.914953578239)" rx="2" ry="2" />
<text  x="916.36" y="129.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (30,810 us, 0.76%)</title><rect x="62.9" y="87" width="9.0" height="15.0" fill="rgb(126.952813357713,149.950729389037,149.950729389037)" rx="2" ry="2" />
<text  x="65.90" y="97.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_pyop2_kernel_uniform_extrusion (123,994 us, 3.06%)</title><rect x="22.4" y="119" width="36.1" height="15.0" fill="rgb(108.902151795757,145.270928243345,145.270928243345)" rx="2" ry="2" />
<text  x="25.38" y="129.5" >Pa..</text>
</g>
<g >
<title>PetscBarrier (750 us, 0.02%)</title><rect x="72.4" y="71" width="0.2" height="15.0" fill="rgb(156.213874711652,144.30637278933,144.30637278933)" rx="2" ry="2" />
<text  x="75.38" y="81.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (5,903 us, 0.15%)</title><rect x="916.0" y="119" width="1.7" height="15.0" fill="rgb(145.895687303961,145.895687303961,155.657229800767)" rx="2" ry="2" />
<text  x="918.97" y="129.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (31,856 us, 0.79%)</title><rect x="1015.5" y="135" width="9.2" height="15.0" fill="rgb(134.941224725533,152.021799002916,152.021799002916)" rx="2" ry="2" />
<text  x="1018.45" y="145.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (4,498 us, 0.11%)</title><rect x="1013.8" y="151" width="1.3" height="15.0" fill="rgb(123.799649644071,123.799649644071,151.380577350465)" rx="2" ry="2" />
<text  x="1016.78" y="161.5" ></text>
</g>
<g >
<title>firedrake.matrix_free.operators.ImplicitMatrixContext.__init__ (1,236 us, 0.03%)</title><rect x="1015.1" y="151" width="0.4" height="15.0" fill="rgb(154.828255647432,154.828255647432,142.629238906785)" rx="2" ry="2" />
<text  x="1018.09" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (1,587 us, 0.04%)</title><rect x="1013.3" y="215" width="0.5" height="15.0" fill="rgb(143.743017489143,160.320904129674,143.743017489143)" rx="2" ry="2" />
<text  x="1016.32" y="225.5" ></text>
</g>
<g >
<title>Mesh: numbering (702 us, 0.02%)</title><rect x="72.2" y="87" width="0.2" height="15.0" fill="rgb(118.144544952835,147.667104247031,147.667104247031)" rx="2" ry="2" />
<text  x="75.17" y="97.5" ></text>
</g>
<g >
<title>firedrake.function.Function.__init__ (1,679 us, 0.04%)</title><rect x="1024.7" y="135" width="0.5" height="15.0" fill="rgb(138.489976219921,108.005564063549,138.489976219921)" rx="2" ry="2" />
<text  x="1027.73" y="145.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (5,513 us, 0.14%)</title><rect x="1022.5" y="231" width="1.6" height="15.0" fill="rgb(154.473273507732,130.96176355928,130.96176355928)" rx="2" ry="2" />
<text  x="1025.48" y="241.5" ></text>
</g>
<g >
<title>ParLoopExecute (299,232 us, 7.39%)</title><rect x="1068.6" y="119" width="87.2" height="15.0" fill="rgb(153.439044383299,123.032673605292,123.032673605292)" rx="2" ry="2" />
<text  x="1071.59" y="129.5" >ParLoopEx..</text>
</g>
<g >
<title>FunctionSpaceData: CreateElement (4,498 us, 0.11%)</title><rect x="1013.8" y="199" width="1.3" height="15.0" fill="rgb(155.709098222985,140.43641970955,140.43641970955)" rx="2" ry="2" />
<text  x="1016.78" y="209.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (12,823 us, 0.32%)</title><rect x="1186.3" y="215" width="3.7" height="15.0" fill="rgb(141.524146827429,160.682115632744,141.524146827429)" rx="2" ry="2" />
<text  x="1189.26" y="225.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_form0_cell_integral_otherwise (139,008 us, 3.43%)</title><rect x="1069.0" y="135" width="40.5" height="15.0" fill="rgb(153.696671083887,125.007811643134,125.007811643134)" rx="2" ry="2" />
<text  x="1071.97" y="145.5" >Par..</text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (98,899 us, 2.44%)</title><rect x="921.7" y="199" width="28.8" height="15.0" fill="rgb(153.74022663377,153.74022663377,137.3564829175)" rx="2" ry="2" />
<text  x="924.68" y="209.5" >P..</text>
</g>
<g >
<title>all (4,050,421 us, 100%)</title><rect x="10.0" y="39" width="1180.0" height="15.0" fill="rgb(143.527281037734,160.356024017113,143.527281037734)" rx="2" ry="2" />
<text  x="13.00" y="49.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (134,156 us, 3.31%)</title><rect x="1070.4" y="151" width="39.1" height="15.0" fill="rgb(127.641639958739,127.641639958739,152.124188379111)" rx="2" ry="2" />
<text  x="1073.38" y="161.5" >pyo..</text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (7,930 us, 0.20%)</title><rect x="58.5" y="135" width="2.3" height="15.0" fill="rgb(147.932734592902,147.932734592902,156.051497017981)" rx="2" ry="2" />
<text  x="61.51" y="145.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (97,331 us, 2.40%)</title><rect x="1037.1" y="183" width="28.4" height="15.0" fill="rgb(155.384976699201,137.951488027211,137.951488027211)" rx="2" ry="2" />
<text  x="1040.11" y="193.5" >p..</text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (22,170 us, 0.55%)</title><rect x="1018.3" y="167" width="6.4" height="15.0" fill="rgb(134.395696886563,134.395696886563,153.431425203851)" rx="2" ry="2" />
<text  x="1021.28" y="177.5" ></text>
</g>
<g >
<title>ParLoopExecute (124,701 us, 3.08%)</title><rect x="22.2" y="103" width="36.3" height="15.0" fill="rgb(137.25310469933,161.377401560574,137.25310469933)" rx="2" ry="2" />
<text  x="25.18" y="113.5" >Pa..</text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (7,930 us, 0.20%)</title><rect x="58.5" y="151" width="2.3" height="15.0" fill="rgb(115.746187569897,115.746187569897,149.821842755464)" rx="2" ry="2" />
<text  x="61.51" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (7,699 us, 0.19%)</title><rect x="1021.8" y="199" width="2.3" height="15.0" fill="rgb(153.077156703756,153.077156703756,134.143144025892)" rx="2" ry="2" />
<text  x="1024.84" y="209.5" ></text>
</g>
<g >
<title>SNESSolve (934,730 us, 23.08%)</title><rect x="917.7" y="87" width="272.3" height="15.0" fill="rgb(149.078894259555,149.078894259555,114.766949103998)" rx="2" ry="2" />
<text  x="920.69" y="97.5" >SNESSolve</text>
</g>
<g >
<title>firedrake.__init__ (2,824,247 us, 69.73%)</title><rect x="72.6" y="71" width="822.8" height="15.0" fill="rgb(142.850490578031,119.179382106205,142.850490578031)" rx="2" ry="2" />
<text  x="75.60" y="81.5" >firedrake.__init__</text>
</g>
<g >
<title>CreateFunctionSpace (15,786 us, 0.39%)</title><rect x="1019.5" y="183" width="4.6" height="15.0" fill="rgb(142.832153678484,160.469184284898,142.832153678484)" rx="2" ry="2" />
<text  x="1022.48" y="193.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (5,160 us, 0.13%)</title><rect x="1065.5" y="135" width="1.5" height="15.0" fill="rgb(124.492795373758,124.492795373758,151.514734588469)" rx="2" ry="2" />
<text  x="1068.46" y="145.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (12,823 us, 0.32%)</title><rect x="1186.3" y="199" width="3.7" height="15.0" fill="rgb(154.657702875902,132.375722048581,132.375722048581)" rx="2" ry="2" />
<text  x="1189.26" y="209.5" ></text>
</g>
<g >
<title>firedrake.assemble.allocate_matrix (1,236 us, 0.03%)</title><rect x="1015.1" y="135" width="0.4" height="15.0" fill="rgb(150.209968607633,150.209968607633,120.248309406221)" rx="2" ry="2" />
<text  x="1018.09" y="145.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (29,643 us, 0.73%)</title><rect x="63.2" y="119" width="8.7" height="15.0" fill="rgb(118.948677545246,147.875583067286,147.875583067286)" rx="2" ry="2" />
<text  x="66.24" y="129.5" ></text>
</g>
</g>
</svg>
