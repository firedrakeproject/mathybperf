<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="283" onload="init(evt)" viewBox="0 0 1200 283" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:13px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:18px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 13 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (1 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="283.0" fill="url(#background)"  />
<text id="title" x="600.00" y="26" >Firedrake example</text>
<text id="details" x="10.00" y="265" > </text>
<text id="unzoom" x="10.00" y="26" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="26" >Search</text>
<text id="ignorecase" x="1174.00" y="26" >ic</text>
<text id="matched" x="1090.00" y="265" > </text>
<g id="frames">
<g >
<title>firedrake.function.Function.__init__ (1,079 us, 0.03%)</title><rect x="1047.9" y="183" width="0.4" height="15.0" fill="rgb(127.677598587112,127.677598587112,152.131148113635)" rx="2" ry="2" />
<text  x="1050.91" y="193.5" ></text>
</g>
<g >
<title>firedrake.extrusion_utils.make_extruded_coords (154,910 us, 4.20%)</title><rect x="10.2" y="87" width="49.6" height="15.0" fill="rgb(150.856069820743,150.856069820743,123.379415285139)" rx="2" ry="2" />
<text  x="13.22" y="97.5" >fire..</text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (82,519 us, 2.24%)</title><rect x="984.1" y="199" width="26.4" height="15.0" fill="rgb(127.930139474776,127.930139474776,152.180026995118)" rx="2" ry="2" />
<text  x="987.08" y="209.5" >P..</text>
</g>
<g >
<title>PCApply (207,111 us, 5.62%)</title><rect x="982.0" y="119" width="66.3" height="15.0" fill="rgb(110.665790307984,110.665790307984,148.83854005961)" rx="2" ry="2" />
<text  x="984.96" y="129.5" >PCApply</text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (654 us, 0.02%)</title><rect x="971.6" y="87" width="0.2" height="15.0" fill="rgb(155.915626518728,142.01980331025,142.01980331025)" rx="2" ry="2" />
<text  x="974.63" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspace.make_scalar_element (629 us, 0.02%)</title><rect x="1055.6" y="151" width="0.2" height="15.0" fill="rgb(155.959863068008,142.35895018806,142.35895018806)" rx="2" ry="2" />
<text  x="1058.63" y="161.5" ></text>
</g>
<g >
<title>firedrake.parloops.par_loop (89,123 us, 2.42%)</title><rect x="982.0" y="167" width="28.5" height="15.0" fill="rgb(146.219509235918,159.917754310432,146.219509235918)" rx="2" ry="2" />
<text  x="984.96" y="177.5" >f..</text>
</g>
<g >
<title>CreateFunctionSpace (9,344 us, 0.25%)</title><rect x="1054.3" y="135" width="3.0" height="15.0" fill="rgb(152.48100152647,115.687678369604,115.687678369604)" rx="2" ry="2" />
<text  x="1057.34" y="145.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (3,504 us, 0.10%)</title><rect x="1188.9" y="151" width="1.1" height="15.0" fill="rgb(141.497869934441,160.686393266486,141.497869934441)" rx="2" ry="2" />
<text  x="1191.88" y="161.5" ></text>
</g>
<g >
<title>firedrake.parloops.par_loop (89,676 us, 2.43%)</title><rect x="1068.9" y="135" width="28.7" height="15.0" fill="rgb(134.867781452903,98.7236899730632,134.867781452903)" rx="2" ry="2" />
<text  x="1071.87" y="145.5" >f..</text>
</g>
<g >
<title>firedrake.functionspace.make_scalar_element (1,661 us, 0.05%)</title><rect x="1060.2" y="199" width="0.5" height="15.0" fill="rgb(140.371906870767,140.371906870767,154.588111007245)" rx="2" ry="2" />
<text  x="1063.18" y="209.5" ></text>
</g>
<g >
<title>Log_Event_form0_cell_integral_otherwise (2,642 us, 0.07%)</title><rect x="1100.1" y="151" width="0.8" height="15.0" fill="rgb(152.856580991861,118.567120937601,118.567120937601)" rx="2" ry="2" />
<text  x="1103.09" y="161.5" ></text>
</g>
<g >
<title>PCSetUp (156,630 us, 4.25%)</title><rect x="1048.3" y="103" width="50.1" height="15.0" fill="rgb(133.725325374292,133.725325374292,153.301675878895)" rx="2" ry="2" />
<text  x="1051.25" y="113.5" >PCSe..</text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (3,427 us, 0.09%)</title><rect x="1060.7" y="199" width="1.1" height="15.0" fill="rgb(116.4187066338,147.219664682837,147.219664682837)" rx="2" ry="2" />
<text  x="1063.71" y="209.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (2,525 us, 0.07%)</title><rect x="1061.0" y="215" width="0.8" height="15.0" fill="rgb(126.254295369851,163.167905404908,126.254295369851)" rx="2" ry="2" />
<text  x="1064.00" y="225.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (577 us, 0.02%)</title><rect x="1055.4" y="167" width="0.2" height="15.0" fill="rgb(153.586639325379,124.164234827909,124.164234827909)" rx="2" ry="2" />
<text  x="1058.45" y="177.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (4,663 us, 0.13%)</title><rect x="1055.8" y="151" width="1.5" height="15.0" fill="rgb(118.382789554255,118.382789554255,150.332152816953)" rx="2" ry="2" />
<text  x="1058.84" y="161.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (81,575 us, 2.21%)</title><rect x="1147.3" y="151" width="26.1" height="15.0" fill="rgb(137.743351354077,106.092337844822,137.743351354077)" rx="2" ry="2" />
<text  x="1150.34" y="161.5" >p..</text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.solve (649,991 us, 17.63%)</title><rect x="982.0" y="71" width="208.0" height="15.0" fill="rgb(150.087833204007,159.288027152836,150.087833204007)" rx="2" ry="2" />
<text  x="984.96" y="81.5" >firedrake.variational_sol..</text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (4,663 us, 0.13%)</title><rect x="1055.8" y="183" width="1.5" height="15.0" fill="rgb(127.399556698354,127.399556698354,152.07733355452)" rx="2" ry="2" />
<text  x="1058.84" y="193.5" ></text>
</g>
<g >
<title>CreateExtMesh (164,762 us, 4.47%)</title><rect x="10.0" y="71" width="52.7" height="15.0" fill="rgb(144.897859041113,160.132906667726,144.897859041113)" rx="2" ry="2" />
<text  x="13.00" y="81.5" >Crea..</text>
</g>
<g >
<title>firedrake.functionspace.VectorFunctionSpace (7,001 us, 0.19%)</title><rect x="59.8" y="87" width="2.2" height="15.0" fill="rgb(134.731004232583,98.3731983459945,134.731004232583)" rx="2" ry="2" />
<text  x="62.80" y="97.5" ></text>
</g>
<g >
<title>firedrake.assemble.allocate_matrix (617 us, 0.02%)</title><rect x="1057.3" y="135" width="0.2" height="15.0" fill="rgb(154.463119648685,154.463119648685,140.859733682088)" rx="2" ry="2" />
<text  x="1060.33" y="145.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (7,001 us, 0.19%)</title><rect x="1059.6" y="183" width="2.2" height="15.0" fill="rgb(126.375621919814,126.375621919814,151.879152629641)" rx="2" ry="2" />
<text  x="1062.57" y="193.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (4,307 us, 0.12%)</title><rect x="980.6" y="119" width="1.4" height="15.0" fill="rgb(149.356724160208,159.407044904152,149.356724160208)" rx="2" ry="2" />
<text  x="983.58" y="129.5" ></text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (51,724 us, 1.40%)</title><rect x="1173.4" y="119" width="16.6" height="15.0" fill="rgb(155.890139379379,155.890139379379,147.775290838527)" rx="2" ry="2" />
<text  x="1176.45" y="129.5" ></text>
</g>
<g >
<title>firedrake.mesh._Facets.__init__ (651 us, 0.02%)</title><rect x="61.8" y="167" width="0.2" height="15.0" fill="rgb(155.549143227857,139.210098080235,139.210098080235)" rx="2" ry="2" />
<text  x="64.83" y="177.5" ></text>
</g>
<g >
<title>firedrake.function.Function.__init__ (1,355 us, 0.04%)</title><rect x="1062.1" y="135" width="0.4" height="15.0" fill="rgb(111.001577997618,111.001577997618,148.903531225346)" rx="2" ry="2" />
<text  x="1065.09" y="145.5" ></text>
</g>
<g >
<title>firedrake.__init__ (2,813,210 us, 76.31%)</title><rect x="71.0" y="71" width="900.4" height="15.0" fill="rgb(127.472261678166,127.472261678166,152.091405486097)" rx="2" ry="2" />
<text  x="74.00" y="81.5" >firedrake.__init__</text>
</g>
<g >
<title>SNESSolve (649,991 us, 17.63%)</title><rect x="982.0" y="87" width="208.0" height="15.0" fill="rgb(137.580433630904,161.324115455434,137.580433630904)" rx="2" ry="2" />
<text  x="984.96" y="97.5" >SNESSolve</text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (1,248 us, 0.03%)</title><rect x="1189.6" y="167" width="0.4" height="15.0" fill="rgb(155.972206594638,142.453583892223,142.453583892223)" rx="2" ry="2" />
<text  x="1192.60" y="177.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.action (4,622 us, 0.13%)</title><rect x="979.1" y="119" width="1.5" height="15.0" fill="rgb(148.742505780679,159.50703394268,148.742505780679)" rx="2" ry="2" />
<text  x="982.11" y="129.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (1,248 us, 0.03%)</title><rect x="1189.6" y="183" width="0.4" height="15.0" fill="rgb(153.499145067343,153.499145067343,136.188164557122)" rx="2" ry="2" />
<text  x="1192.60" y="193.5" ></text>
</g>
<g >
<title>FunctionSpaceData: CreateElement (4,663 us, 0.13%)</title><rect x="1055.8" y="199" width="1.5" height="15.0" fill="rgb(131.487259180941,151.126326454318,151.126326454318)" rx="2" ry="2" />
<text  x="1058.84" y="209.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (7,001 us, 0.19%)</title><rect x="59.8" y="151" width="2.2" height="15.0" fill="rgb(147.813852389138,147.813852389138,108.636361578132)" rx="2" ry="2" />
<text  x="62.80" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (590 us, 0.02%)</title><rect x="1189.8" y="231" width="0.2" height="15.0" fill="rgb(146.428102559267,154.999878441291,154.999878441291)" rx="2" ry="2" />
<text  x="1192.81" y="241.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (2,525 us, 0.07%)</title><rect x="1061.0" y="231" width="0.8" height="15.0" fill="rgb(134.422388104373,161.838215889986,134.422388104373)" rx="2" ry="2" />
<text  x="1064.00" y="241.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (13,571 us, 0.37%)</title><rect x="1057.7" y="151" width="4.4" height="15.0" fill="rgb(113.526149276,146.469742404889,146.469742404889)" rx="2" ry="2" />
<text  x="1060.75" y="161.5" ></text>
</g>
<g >
<title>firedrake.mesh.MeshTopology._facets (2,602 us, 0.07%)</title><rect x="69.3" y="135" width="0.8" height="15.0" fill="rgb(153.463038394067,153.463038394067,136.013186063558)" rx="2" ry="2" />
<text  x="72.29" y="145.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (23,094 us, 0.63%)</title><rect x="62.7" y="71" width="7.4" height="15.0" fill="rgb(148.010459389158,148.010459389158,109.589149347456)" rx="2" ry="2" />
<text  x="65.73" y="81.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (83,220 us, 2.26%)</title><rect x="1070.9" y="183" width="26.7" height="15.0" fill="rgb(120.785955972729,120.785955972729,150.797281801173)" rx="2" ry="2" />
<text  x="1073.94" y="193.5" >p..</text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (2,534 us, 0.07%)</title><rect x="1097.6" y="135" width="0.8" height="15.0" fill="rgb(148.370860981525,148.370860981525,111.335710910467)" rx="2" ry="2" />
<text  x="1100.57" y="145.5" ></text>
</g>
<g >
<title>firedrake.slate.slac.optimise.optimise (8,418 us, 0.23%)</title><rect x="1045.6" y="167" width="2.7" height="15.0" fill="rgb(154.959548736211,134.689873644284,134.689873644284)" rx="2" ry="2" />
<text  x="1048.56" y="177.5" ></text>
</g>
<g >
<title>SNESFunctionEval (286,250 us, 7.76%)</title><rect x="1098.4" y="103" width="91.6" height="15.0" fill="rgb(151.902217407203,151.902217407203,128.449207434909)" rx="2" ry="2" />
<text  x="1101.38" y="113.5" >SNESFunct..</text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (7,001 us, 0.19%)</title><rect x="59.8" y="135" width="2.2" height="15.0" fill="rgb(152.525503395132,116.02885936268,116.02885936268)" rx="2" ry="2" />
<text  x="62.80" y="145.5" ></text>
</g>
<g >
<title>firedrake.functionspace.MixedFunctionSpace (4,052 us, 0.11%)</title><rect x="1054.3" y="151" width="1.3" height="15.0" fill="rgb(123.178199754704,123.178199754704,151.260296726717)" rx="2" ry="2" />
<text  x="1057.34" y="161.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_form0_cell_integral_otherwise (146,813 us, 3.98%)</title><rect x="1100.1" y="135" width="47.0" height="15.0" fill="rgb(153.402084838685,122.749317096587,122.749317096587)" rx="2" ry="2" />
<text  x="1103.09" y="145.5" >Parl..</text>
</g>
<g >
<title>firedrake.mesh._Facets.__init__ (829 us, 0.02%)</title><rect x="69.9" y="151" width="0.2" height="15.0" fill="rgb(148.656475109834,159.521038935608,148.656475109834)" rx="2" ry="2" />
<text  x="72.86" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspace.MixedFunctionSpace (1,382 us, 0.04%)</title><rect x="971.4" y="71" width="0.4" height="15.0" fill="rgb(152.864697201823,152.864697201823,133.113532593451)" rx="2" ry="2" />
<text  x="974.40" y="81.5" ></text>
</g>
<g >
<title>firedrake.matrix_free.operators.ImplicitMatrixContext.__init__ (8,929 us, 0.24%)</title><rect x="979.1" y="103" width="2.9" height="15.0" fill="rgb(151.561180184134,151.561180184134,126.79648858465)" rx="2" ry="2" />
<text  x="982.11" y="113.5" ></text>
</g>
<g >
<title>FunctionSpaceData: CreateElement (7,690 us, 0.21%)</title><rect x="66.8" y="135" width="2.5" height="15.0" fill="rgb(138.010853540919,106.777812198604,138.010853540919)" rx="2" ry="2" />
<text  x="69.83" y="145.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.derivative (1,071 us, 0.03%)</title><rect x="978.2" y="103" width="0.3" height="15.0" fill="rgb(138.716348170425,153.000534710851,153.000534710851)" rx="2" ry="2" />
<text  x="981.16" y="113.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (82,519 us, 2.24%)</title><rect x="984.1" y="215" width="26.4" height="15.0" fill="rgb(152.203327716349,113.558845825341,113.558845825341)" rx="2" ry="2" />
<text  x="987.08" y="225.5" >p..</text>
</g>
<g >
<title>firedrake.matrix_free.operators.ImplicitMatrixContext.__init__ (617 us, 0.02%)</title><rect x="1057.3" y="151" width="0.2" height="15.0" fill="rgb(150.15855318851,159.276514597219,150.15855318851)" rx="2" ry="2" />
<text  x="1060.33" y="161.5" ></text>
</g>
<g >
<title>firedrake.utility_meshes.SquareMesh (1,954 us, 0.05%)</title><rect x="971.8" y="71" width="0.7" height="15.0" fill="rgb(106.017212863307,144.522981112709,144.522981112709)" rx="2" ry="2" />
<text  x="974.84" y="81.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.WithGeometry.split (888 us, 0.02%)</title><rect x="1061.8" y="183" width="0.3" height="15.0" fill="rgb(123.757094064889,149.122209572379,149.122209572379)" rx="2" ry="2" />
<text  x="1064.81" y="193.5" ></text>
</g>
<g >
<title>ParLoopExecute (83,220 us, 2.26%)</title><rect x="1070.9" y="151" width="26.7" height="15.0" fill="rgb(151.149899475342,151.149899475342,124.803358995891)" rx="2" ry="2" />
<text  x="1073.94" y="161.5" >P..</text>
</g>
<g >
<title>firedrake.ufl_expr.action (5,431 us, 0.15%)</title><rect x="972.5" y="87" width="1.7" height="15.0" fill="rgb(142.572054103793,142.572054103793,155.013945955573)" rx="2" ry="2" />
<text  x="975.46" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (4,663 us, 0.13%)</title><rect x="1055.8" y="167" width="1.5" height="15.0" fill="rgb(120.814642245668,120.814642245668,150.802833983033)" rx="2" ry="2" />
<text  x="1058.84" y="177.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (7,001 us, 0.19%)</title><rect x="59.8" y="103" width="2.2" height="15.0" fill="rgb(117.853545067306,117.853545067306,150.229718400124)" rx="2" ry="2" />
<text  x="62.80" y="113.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (590 us, 0.02%)</title><rect x="1189.8" y="215" width="0.2" height="15.0" fill="rgb(135.238105625962,135.238105625962,153.594472056638)" rx="2" ry="2" />
<text  x="1192.81" y="225.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.LinearVariationalProblem.__init__ (18,875 us, 0.51%)</title><rect x="972.5" y="71" width="6.0" height="15.0" fill="rgb(120.604627475563,120.604627475563,150.762185963012)" rx="2" ry="2" />
<text  x="975.46" y="81.5" ></text>
</g>
<g >
<title>CreateMesh (683 us, 0.02%)</title><rect x="972.0" y="103" width="0.3" height="15.0" fill="rgb(153.481362589068,123.357113182856,123.357113182856)" rx="2" ry="2" />
<text  x="975.04" y="113.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (83,220 us, 2.26%)</title><rect x="1070.9" y="167" width="26.7" height="15.0" fill="rgb(107.210044402274,144.832233733923,144.832233733923)" rx="2" ry="2" />
<text  x="1073.94" y="177.5" >P..</text>
</g>
<g >
<title>CreateFunctionSpace (2,703 us, 0.07%)</title><rect x="1054.6" y="167" width="0.8" height="15.0" fill="rgb(155.186360824879,155.186360824879,144.364671689797)" rx="2" ry="2" />
<text  x="1057.58" y="177.5" ></text>
</g>
<g >
<title>KSPSolve (207,111 us, 5.62%)</title><rect x="982.0" y="103" width="66.3" height="15.0" fill="rgb(138.125210811538,107.070852704567,138.125210811538)" rx="2" ry="2" />
<text  x="984.96" y="113.5" >KSPSolve</text>
</g>
<g >
<title>firedrake.function.Function.split (1,071 us, 0.03%)</title><rect x="978.2" y="119" width="0.3" height="15.0" fill="rgb(155.406207517872,138.114257637021,138.114257637021)" rx="2" ry="2" />
<text  x="981.16" y="129.5" ></text>
</g>
<g >
<title>firedrake.mesh.make_mesh_from_coordinates (1,176 us, 0.03%)</title><rect x="62.4" y="87" width="0.3" height="15.0" fill="rgb(146.189308260111,154.937968808177,154.937968808177)" rx="2" ry="2" />
<text  x="65.36" y="97.5" ></text>
</g>
<g >
<title>CreateMesh (1,843 us, 0.05%)</title><rect x="70.1" y="71" width="0.6" height="15.0" fill="rgb(141.384988167067,160.704769368152,141.384988167067)" rx="2" ry="2" />
<text  x="73.13" y="81.5" ></text>
</g>
<g >
<title>HybridBreak (89,123 us, 2.42%)</title><rect x="982.0" y="151" width="28.5" height="15.0" fill="rgb(144.551979504559,144.551979504559,155.397157323463)" rx="2" ry="2" />
<text  x="984.96" y="161.5" >H..</text>
</g>
<g >
<title>ParLoopExecute (114,900 us, 3.12%)</title><rect x="23.0" y="103" width="36.8" height="15.0" fill="rgb(114.763753417631,146.790602737904,146.790602737904)" rx="2" ry="2" />
<text  x="26.03" y="113.5" >Pa..</text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (1,967 us, 0.05%)</title><rect x="1054.8" y="215" width="0.6" height="15.0" fill="rgb(151.993016735248,151.993016735248,128.889234947738)" rx="2" ry="2" />
<text  x="1057.82" y="225.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (14,262 us, 0.39%)</title><rect x="1057.5" y="135" width="4.6" height="15.0" fill="rgb(128.651074604254,150.391019341844,150.391019341844)" rx="2" ry="2" />
<text  x="1060.53" y="145.5" ></text>
</g>
<g >
<title>firedrake.interpolation.make_interpolator (19,826 us, 0.54%)</title><rect x="1062.5" y="135" width="6.4" height="15.0" fill="rgb(139.283057915262,153.147459459512,153.147459459512)" rx="2" ry="2" />
<text  x="1065.52" y="145.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (7,001 us, 0.19%)</title><rect x="59.8" y="119" width="2.2" height="15.0" fill="rgb(131.745903553667,151.193382402803,151.193382402803)" rx="2" ry="2" />
<text  x="62.80" y="129.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (21,411 us, 0.58%)</title><rect x="63.3" y="87" width="6.8" height="15.0" fill="rgb(115.524641514119,115.524641514119,149.7789628737)" rx="2" ry="2" />
<text  x="66.27" y="97.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_pyop2_kernel_uniform_extrusion (114,900 us, 3.12%)</title><rect x="23.0" y="119" width="36.8" height="15.0" fill="rgb(146.687872113211,146.687872113211,155.810555892879)" rx="2" ry="2" />
<text  x="26.03" y="129.5" >Pa..</text>
</g>
<g >
<title>all (3,686,792 us, 100%)</title><rect x="10.0" y="39" width="1180.0" height="15.0" fill="rgb(143.580620112575,160.347340911906,143.580620112575)" rx="2" ry="2" />
<text  x="13.00" y="49.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_form1_cell_integral_otherwise (82,380 us, 2.23%)</title><rect x="1147.1" y="135" width="26.3" height="15.0" fill="rgb(155.57533246974,139.410882268008,139.410882268008)" rx="2" ry="2" />
<text  x="1150.08" y="145.5" >P..</text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (1,967 us, 0.05%)</title><rect x="1054.8" y="183" width="0.6" height="15.0" fill="rgb(153.385875838474,153.385875838474,135.639244447988)" rx="2" ry="2" />
<text  x="1057.82" y="193.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (6,200 us, 0.17%)</title><rect x="1188.0" y="135" width="2.0" height="15.0" fill="rgb(154.79087641846,133.396719208197,133.396719208197)" rx="2" ry="2" />
<text  x="1191.02" y="145.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalProblem.__init__ (13,444 us, 0.36%)</title><rect x="974.2" y="87" width="4.3" height="15.0" fill="rgb(152.602850209102,116.621851603119,116.621851603119)" rx="2" ry="2" />
<text  x="977.20" y="97.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (114,900 us, 3.12%)</title><rect x="23.0" y="135" width="36.8" height="15.0" fill="rgb(148.172791511381,148.172791511381,110.375835785922)" rx="2" ry="2" />
<text  x="26.03" y="145.5" >py..</text>
</g>
<g >
<title>HybridRHS (117,988 us, 3.20%)</title><rect x="1010.5" y="151" width="37.8" height="15.0" fill="rgb(147.816960071985,147.816960071985,108.651421887313)" rx="2" ry="2" />
<text  x="1013.49" y="161.5" >Hy..</text>
</g>
<g >
<title>HybridInit (156,630 us, 4.25%)</title><rect x="1048.3" y="119" width="50.1" height="15.0" fill="rgb(138.043009100947,161.248812471939,138.043009100947)" rx="2" ry="2" />
<text  x="1051.25" y="129.5" >Hybr..</text>
</g>
<g >
<title>firedrake.utility_meshes.RectangleMesh (1,954 us, 0.05%)</title><rect x="971.8" y="87" width="0.7" height="15.0" fill="rgb(148.197346814104,148.197346814104,110.494834560658)" rx="2" ry="2" />
<text  x="974.84" y="97.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (9,747 us, 0.26%)</title><rect x="1059.0" y="167" width="3.1" height="15.0" fill="rgb(148.458245419693,148.458245419693,111.759189341589)" rx="2" ry="2" />
<text  x="1061.97" y="177.5" ></text>
</g>
<g >
<title>PetscBarrier (876 us, 0.02%)</title><rect x="70.7" y="71" width="0.3" height="15.0" fill="rgb(120.505082784436,120.505082784436,150.742919248601)" rx="2" ry="2" />
<text  x="73.72" y="81.5" ></text>
</g>
<g >
<title>firedrake.functionspace.make_scalar_element (908 us, 0.02%)</title><rect x="63.0" y="87" width="0.3" height="15.0" fill="rgb(153.904433132391,126.600654014995,126.600654014995)" rx="2" ry="2" />
<text  x="65.98" y="97.5" ></text>
</g>
<g >
<title>firedrake (3,686,792 us, 100.00%)</title><rect x="10.0" y="55" width="1180.0" height="15.0" fill="rgb(143.198613265526,160.409528073054,143.198613265526)" rx="2" ry="2" />
<text  x="13.00" y="65.5" >firedrake</text>
</g>
<g >
<title>firedrake.assemble.allocate_matrix (8,929 us, 0.24%)</title><rect x="979.1" y="87" width="2.9" height="15.0" fill="rgb(110.806454131648,145.764636256353,145.764636256353)" rx="2" ry="2" />
<text  x="982.11" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (1,967 us, 0.05%)</title><rect x="1054.8" y="199" width="0.6" height="15.0" fill="rgb(136.923625691635,152.535754808942,152.535754808942)" rx="2" ry="2" />
<text  x="1057.82" y="209.5" ></text>
</g>
<g >
<title>ParLoopExecute (82,519 us, 2.24%)</title><rect x="984.1" y="183" width="26.4" height="15.0" fill="rgb(154.601565027646,154.601565027646,141.530661287822)" rx="2" ry="2" />
<text  x="987.08" y="193.5" >P..</text>
</g>
<g >
<title>ParLoopExecute (230,005 us, 6.24%)</title><rect x="1099.8" y="119" width="73.6" height="15.0" fill="rgb(119.090375805115,119.090375805115,150.469104994538)" rx="2" ry="2" />
<text  x="1102.83" y="129.5" >ParLoop..</text>
</g>
<g >
<title>firedrake.mesh._from_cell_list (626 us, 0.02%)</title><rect x="972.3" y="103" width="0.2" height="15.0" fill="rgb(126.290887083697,149.779118873551,149.779118873551)" rx="2" ry="2" />
<text  x="975.26" y="113.5" ></text>
</g>
<g >
<title>firedrake.mesh.ExtrudedMeshTopology.__init__ (989 us, 0.03%)</title><rect x="62.0" y="87" width="0.4" height="15.0" fill="rgb(156.53467213621,146.765819710946,146.765819710946)" rx="2" ry="2" />
<text  x="65.04" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (590 us, 0.02%)</title><rect x="1189.8" y="199" width="0.2" height="15.0" fill="rgb(152.9089057664,118.968277542398,118.968277542398)" rx="2" ry="2" />
<text  x="1192.81" y="209.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (144,171 us, 3.91%)</title><rect x="1100.9" y="151" width="46.2" height="15.0" fill="rgb(154.15823331526,128.546455416993,128.546455416993)" rx="2" ry="2" />
<text  x="1103.93" y="161.5" >pyop..</text>
</g>
<g >
<title>FunctionSpaceData: CreateElement (996 us, 0.03%)</title><rect x="61.5" y="167" width="0.3" height="15.0" fill="rgb(154.662501084015,132.412508310784,132.412508310784)" rx="2" ry="2" />
<text  x="64.51" y="177.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (20,522 us, 0.56%)</title><rect x="63.6" y="103" width="6.5" height="15.0" fill="rgb(109.614571916988,109.614571916988,148.635078435546)" rx="2" ry="2" />
<text  x="66.56" y="113.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (12,373 us, 0.34%)</title><rect x="974.2" y="103" width="4.0" height="15.0" fill="rgb(150.02059652204,159.298972659203,150.02059652204)" rx="2" ry="2" />
<text  x="977.20" y="113.5" ></text>
</g>
<g >
<title>SCForwardElim (207,111 us, 5.62%)</title><rect x="982.0" y="135" width="66.3" height="15.0" fill="rgb(155.761702410377,140.839718479555,140.839718479555)" rx="2" ry="2" />
<text  x="984.96" y="145.5" >SCForw..</text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (20,522 us, 0.56%)</title><rect x="63.6" y="119" width="6.5" height="15.0" fill="rgb(140.852641389805,140.852641389805,154.681156398027)" rx="2" ry="2" />
<text  x="66.56" y="129.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.__init__ (10,805 us, 0.29%)</title><rect x="978.5" y="71" width="3.5" height="15.0" fill="rgb(150.545257242529,150.545257242529,121.873169713795)" rx="2" ry="2" />
<text  x="981.50" y="81.5" ></text>
</g>
<g >
<title>Mesh: numbering (757 us, 0.02%)</title><rect x="70.5" y="87" width="0.2" height="15.0" fill="rgb(130.673690725376,162.448468951683,130.673690725376)" rx="2" ry="2" />
<text  x="73.47" y="97.5" ></text>
</g>
</g>
</svg>
