<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="283" onload="init(evt)" viewBox="0 0 1200 283" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:13px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:18px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 13 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (1 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="283.0" fill="url(#background)"  />
<text id="title" x="600.00" y="26" >Firedrake example</text>
<text id="details" x="10.00" y="265" > </text>
<text id="unzoom" x="10.00" y="26" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="26" >Search</text>
<text id="ignorecase" x="1174.00" y="26" >ic</text>
<text id="matched" x="1090.00" y="265" > </text>
<g id="frames">
<g >
<title>firedrake.functionspace.make_scalar_element (1,485 us, 0.05%)</title><rect x="1069.9" y="199" width="0.6" height="15.0" fill="rgb(155.321624784292,155.321624784292,145.020181646954)" rx="2" ry="2" />
<text  x="1072.91" y="209.5" ></text>
</g>
<g >
<title>firedrake (3,228,959 us, 100.00%)</title><rect x="10.0" y="55" width="1180.0" height="15.0" fill="rgb(146.706461667218,155.072045617427,155.072045617427)" rx="2" ry="2" />
<text  x="13.00" y="65.5" >firedrake</text>
</g>
<g >
<title>Log_Event_form0_cell_integral_otherwise (2,468 us, 0.08%)</title><rect x="1113.2" y="151" width="0.9" height="15.0" fill="rgb(146.189946896902,159.922566784225,146.189946896902)" rx="2" ry="2" />
<text  x="1116.19" y="161.5" ></text>
</g>
<g >
<title>firedrake.mesh._Facets.__init__ (590 us, 0.02%)</title><rect x="59.8" y="167" width="0.2" height="15.0" fill="rgb(112.11007848913,146.102612941626,146.102612941626)" rx="2" ry="2" />
<text  x="62.75" y="177.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (12,471 us, 0.39%)</title><rect x="1067.4" y="151" width="4.5" height="15.0" fill="rgb(132.110188002655,162.214620557707,132.110188002655)" rx="2" ry="2" />
<text  x="1070.38" y="161.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (78,224 us, 2.42%)</title><rect x="1081.1" y="183" width="28.5" height="15.0" fill="rgb(156.364637674547,145.462222171526,145.462222171526)" rx="2" ry="2" />
<text  x="1084.06" y="193.5" >p..</text>
</g>
<g >
<title>FunctionSpaceData: CreateElement (6,740 us, 0.21%)</title><rect x="65.0" y="135" width="2.5" height="15.0" fill="rgb(139.774233747763,139.774233747763,154.472432338277)" rx="2" ry="2" />
<text  x="68.02" y="145.5" ></text>
</g>
<g >
<title>firedrake.matrix_free.operators.ImplicitMatrixContext.__init__ (535 us, 0.02%)</title><rect x="1067.0" y="151" width="0.2" height="15.0" fill="rgb(150.053058940534,159.293688079448,150.053058940534)" rx="2" ry="2" />
<text  x="1069.96" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (653 us, 0.02%)</title><rect x="1189.8" y="199" width="0.2" height="15.0" fill="rgb(127.083860013202,149.984704447867,149.984704447867)" rx="2" ry="2" />
<text  x="1192.76" y="209.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (3,524 us, 0.11%)</title><rect x="1188.7" y="151" width="1.3" height="15.0" fill="rgb(152.411649713984,115.155981140543,115.155981140543)" rx="2" ry="2" />
<text  x="1191.71" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (19,757 us, 0.61%)</title><rect x="61.2" y="87" width="7.2" height="15.0" fill="rgb(123.391992865325,149.027553705825,149.027553705825)" rx="2" ry="2" />
<text  x="64.17" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.WithGeometry.split (825 us, 0.03%)</title><rect x="1071.6" y="183" width="0.3" height="15.0" fill="rgb(153.610219721314,124.345017863408,124.345017863408)" rx="2" ry="2" />
<text  x="1074.64" y="193.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (13,082 us, 0.41%)</title><rect x="1067.2" y="135" width="4.7" height="15.0" fill="rgb(113.452825821934,146.450732620501,146.450732620501)" rx="2" ry="2" />
<text  x="1070.16" y="145.5" ></text>
</g>
<g >
<title>all (3,228,959 us, 100%)</title><rect x="10.0" y="39" width="1180.0" height="15.0" fill="rgb(140.590103486285,160.834169199907,140.590103486285)" rx="2" ry="2" />
<text  x="13.00" y="49.5" ></text>
</g>
<g >
<title>FunctionSpaceData: CreateElement (4,554 us, 0.14%)</title><rect x="1065.3" y="199" width="1.7" height="15.0" fill="rgb(148.198489325849,148.198489325849,110.500371348343)" rx="2" ry="2" />
<text  x="1068.30" y="209.5" ></text>
</g>
<g >
<title>HybridInit (143,954 us, 4.46%)</title><rect x="1057.9" y="119" width="52.6" height="15.0" fill="rgb(130.854475456217,162.419038879221,130.854475456217)" rx="2" ry="2" />
<text  x="1060.89" y="129.5" >Hybr..</text>
</g>
<g >
<title>CreateExtMesh (138,533 us, 4.29%)</title><rect x="10.0" y="71" width="50.6" height="15.0" fill="rgb(109.666148273604,109.666148273604,148.645060956181)" rx="2" ry="2" />
<text  x="13.00" y="81.5" >Crea..</text>
</g>
<g >
<title>CreateFunctionSpace (21,246 us, 0.66%)</title><rect x="60.6" y="71" width="7.8" height="15.0" fill="rgb(153.481540382531,123.358476266072,123.358476266072)" rx="2" ry="2" />
<text  x="63.63" y="81.5" ></text>
</g>
<g >
<title>firedrake.mesh._from_cell_list (628 us, 0.02%)</title><rect x="979.0" y="103" width="0.3" height="15.0" fill="rgb(135.603331475822,135.603331475822,153.665160930804)" rx="2" ry="2" />
<text  x="982.02" y="113.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (508 us, 0.02%)</title><rect x="1064.9" y="167" width="0.2" height="15.0" fill="rgb(142.09390015733,117.240619153157,142.09390015733)" rx="2" ry="2" />
<text  x="1067.89" y="177.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.derivative (1,037 us, 0.03%)</title><rect x="985.5" y="103" width="0.3" height="15.0" fill="rgb(135.21355499329,161.709421280162,135.21355499329)" rx="2" ry="2" />
<text  x="988.47" y="113.5" ></text>
</g>
<g >
<title>firedrake.extrusion_utils.make_extruded_coords (129,666 us, 4.02%)</title><rect x="10.2" y="87" width="47.4" height="15.0" fill="rgb(128.312569467126,162.832837528607,128.312569467126)" rx="2" ry="2" />
<text  x="13.21" y="97.5" >fire..</text>
</g>
<g >
<title>firedrake.mesh.make_mesh_from_coordinates (977 us, 0.03%)</title><rect x="60.3" y="87" width="0.3" height="15.0" fill="rgb(137.604848371503,161.320140962779,137.604848371503)" rx="2" ry="2" />
<text  x="63.27" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (18,952 us, 0.59%)</title><rect x="61.5" y="119" width="6.9" height="15.0" fill="rgb(150.298632822345,150.298632822345,120.677989831363)" rx="2" ry="2" />
<text  x="64.46" y="129.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (6,482 us, 0.20%)</title><rect x="57.6" y="135" width="2.4" height="15.0" fill="rgb(118.254253884379,147.695547303358,147.695547303358)" rx="2" ry="2" />
<text  x="60.60" y="145.5" ></text>
</g>
<g >
<title>SCForwardElim (188,038 us, 5.82%)</title><rect x="989.2" y="135" width="68.7" height="15.0" fill="rgb(153.992636457804,153.992636457804,138.579699757052)" rx="2" ry="2" />
<text  x="992.17" y="145.5" >SCForw..</text>
</g>
<g >
<title>firedrake.mesh._Facets.__init__ (796 us, 0.02%)</title><rect x="68.1" y="151" width="0.3" height="15.0" fill="rgb(124.766498919776,163.410104827013,124.766498919776)" rx="2" ry="2" />
<text  x="71.10" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspace.MixedFunctionSpace (1,299 us, 0.04%)</title><rect x="978.1" y="71" width="0.5" height="15.0" fill="rgb(154.631534709423,132.175099438906,132.175099438906)" rx="2" ry="2" />
<text  x="981.08" y="81.5" ></text>
</g>
<g >
<title>PCSetUp (143,954 us, 4.46%)</title><rect x="1057.9" y="103" width="52.6" height="15.0" fill="rgb(129.508439470344,129.508439470344,152.485504413615)" rx="2" ry="2" />
<text  x="1060.89" y="113.5" >PCSe..</text>
</g>
<g >
<title>PetscBarrier (831 us, 0.03%)</title><rect x="69.1" y="71" width="0.3" height="15.0" fill="rgb(146.899472655097,159.807062591031,146.899472655097)" rx="2" ry="2" />
<text  x="72.06" y="81.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (623 us, 0.02%)</title><rect x="978.3" y="87" width="0.3" height="15.0" fill="rgb(155.289259718946,137.217657845256,137.217657845256)" rx="2" ry="2" />
<text  x="981.32" y="97.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (11,817 us, 0.37%)</title><rect x="981.1" y="103" width="4.4" height="15.0" fill="rgb(152.515048458171,115.948704845979,115.948704845979)" rx="2" ry="2" />
<text  x="984.15" y="113.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (6,482 us, 0.20%)</title><rect x="57.6" y="103" width="2.4" height="15.0" fill="rgb(125.119022030962,125.119022030962,151.635939747928)" rx="2" ry="2" />
<text  x="60.60" y="113.5" ></text>
</g>
<g >
<title>firedrake.functionspace.MixedFunctionSpace (3,401 us, 0.11%)</title><rect x="1063.8" y="151" width="1.3" height="15.0" fill="rgb(108.711655037888,108.711655037888,148.460320329914)" rx="2" ry="2" />
<text  x="1066.83" y="161.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (8,572 us, 0.27%)</title><rect x="1063.8" y="135" width="3.2" height="15.0" fill="rgb(127.445966856713,127.445966856713,152.086316165815)" rx="2" ry="2" />
<text  x="1066.83" y="145.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (1,287 us, 0.04%)</title><rect x="1189.5" y="167" width="0.5" height="15.0" fill="rgb(135.366930242159,161.684453216393,135.366930242159)" rx="2" ry="2" />
<text  x="1192.53" y="177.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (2,356 us, 0.07%)</title><rect x="1070.8" y="215" width="0.8" height="15.0" fill="rgb(132.978398313695,162.073283995445,132.978398313695)" rx="2" ry="2" />
<text  x="1073.78" y="225.5" ></text>
</g>
<g >
<title>ParLoopExecute (73,586 us, 2.28%)</title><rect x="991.5" y="183" width="26.9" height="15.0" fill="rgb(127.248382167575,163.006077321558,127.248382167575)" rx="2" ry="2" />
<text  x="994.54" y="193.5" >P..</text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (6,482 us, 0.20%)</title><rect x="57.6" y="151" width="2.4" height="15.0" fill="rgb(116.672084532263,147.285355249105,147.285355249105)" rx="2" ry="2" />
<text  x="60.60" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (1,621 us, 0.05%)</title><rect x="1064.3" y="199" width="0.6" height="15.0" fill="rgb(139.658497761071,153.244795715833,153.244795715833)" rx="2" ry="2" />
<text  x="1067.30" y="209.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (9,046 us, 0.28%)</title><rect x="1068.6" y="167" width="3.3" height="15.0" fill="rgb(154.987832810314,134.906718212409,134.906718212409)" rx="2" ry="2" />
<text  x="1071.63" y="177.5" ></text>
</g>
<g >
<title>SNESFunctionEval (217,562 us, 6.74%)</title><rect x="1110.5" y="103" width="79.5" height="15.0" fill="rgb(156.011781817664,142.756993935422,142.756993935422)" rx="2" ry="2" />
<text  x="1113.49" y="113.5" >SNESFunc..</text>
</g>
<g >
<title>firedrake.utility_meshes.SquareMesh (1,923 us, 0.06%)</title><rect x="978.6" y="71" width="0.7" height="15.0" fill="rgb(155.554213700924,155.554213700924,146.147343319862)" rx="2" ry="2" />
<text  x="981.55" y="81.5" ></text>
</g>
<g >
<title>firedrake.interpolation.make_interpolator (17,141 us, 0.53%)</title><rect x="1072.4" y="135" width="6.3" height="15.0" fill="rgb(135.291573148156,161.6967206503,135.291573148156)" rx="2" ry="2" />
<text  x="1075.41" y="145.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (653 us, 0.02%)</title><rect x="1189.8" y="231" width="0.2" height="15.0" fill="rgb(153.357572372319,153.357572372319,135.502081496625)" rx="2" ry="2" />
<text  x="1192.76" y="241.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (73,081 us, 2.26%)</title><rect x="991.7" y="215" width="26.7" height="15.0" fill="rgb(127.947886134635,127.947886134635,152.18346183251)" rx="2" ry="2" />
<text  x="994.73" y="225.5" >p..</text>
</g>
<g >
<title>firedrake.variational_solver.LinearVariationalProblem.__init__ (18,037 us, 0.56%)</title><rect x="979.3" y="71" width="6.5" height="15.0" fill="rgb(114.164998966736,114.164998966736,149.515806251626)" rx="2" ry="2" />
<text  x="982.25" y="81.5" ></text>
</g>
<g >
<title>firedrake.assemble.allocate_matrix (535 us, 0.02%)</title><rect x="1067.0" y="135" width="0.2" height="15.0" fill="rgb(149.9863097934,149.9863097934,119.164424383401)" rx="2" ry="2" />
<text  x="1069.96" y="145.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (79,655 us, 2.47%)</title><rect x="1114.1" y="151" width="29.1" height="15.0" fill="rgb(148.545024679328,148.545024679328,112.179734984436)" rx="2" ry="2" />
<text  x="1117.09" y="161.5" >p..</text>
</g>
<g >
<title>HybridRHS (107,960 us, 3.34%)</title><rect x="1018.4" y="151" width="39.5" height="15.0" fill="rgb(152.902526809532,118.919372206413,118.919372206413)" rx="2" ry="2" />
<text  x="1021.43" y="161.5" >Hyb..</text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalProblem.__init__ (12,854 us, 0.40%)</title><rect x="981.1" y="87" width="4.7" height="15.0" fill="rgb(128.019894080054,128.019894080054,152.197398854204)" rx="2" ry="2" />
<text  x="984.15" y="97.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.solve (549,554 us, 17.02%)</title><rect x="989.2" y="71" width="200.8" height="15.0" fill="rgb(108.56902385733,145.184561740789,145.184561740789)" rx="2" ry="2" />
<text  x="992.17" y="81.5" >firedrake.variational_so..</text>
</g>
<g >
<title>Parloop_Cells_wrap_form1_cell_integral_otherwise (72,043 us, 2.23%)</title><rect x="1143.2" y="135" width="26.3" height="15.0" fill="rgb(153.569859947802,124.035592933152,124.035592933152)" rx="2" ry="2" />
<text  x="1146.20" y="145.5" >P..</text>
</g>
<g >
<title>firedrake.slate.slac.optimise.optimise (8,559 us, 0.27%)</title><rect x="1054.8" y="167" width="3.1" height="15.0" fill="rgb(137.136902098126,161.396318263096,137.136902098126)" rx="2" ry="2" />
<text  x="1057.76" y="177.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (4,554 us, 0.14%)</title><rect x="1065.3" y="183" width="1.7" height="15.0" fill="rgb(132.554635513189,132.554635513189,153.075090744488)" rx="2" ry="2" />
<text  x="1068.30" y="193.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (71,331 us, 2.21%)</title><rect x="1143.5" y="151" width="26.0" height="15.0" fill="rgb(147.857663815566,147.857663815566,108.84867849082)" rx="2" ry="2" />
<text  x="1146.46" y="161.5" >p..</text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (78,224 us, 2.42%)</title><rect x="1081.1" y="167" width="28.5" height="15.0" fill="rgb(147.488765595567,159.711131182117,147.488765595567)" rx="2" ry="2" />
<text  x="1084.06" y="177.5" >P..</text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (6,132 us, 0.19%)</title><rect x="1187.8" y="135" width="2.2" height="15.0" fill="rgb(154.966217935496,134.741004172137,134.741004172137)" rx="2" ry="2" />
<text  x="1190.76" y="145.5" ></text>
</g>
<g >
<title>firedrake.utility_meshes.RectangleMesh (1,923 us, 0.06%)</title><rect x="978.6" y="87" width="0.7" height="15.0" fill="rgb(126.660029878813,149.874822561174,149.874822561174)" rx="2" ry="2" />
<text  x="981.55" y="97.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (6,507 us, 0.20%)</title><rect x="1069.3" y="183" width="2.3" height="15.0" fill="rgb(123.220049461631,148.982975786349,148.982975786349)" rx="2" ry="2" />
<text  x="1072.26" y="193.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.action (4,511 us, 0.14%)</title><rect x="986.5" y="119" width="1.6" height="15.0" fill="rgb(131.899530234275,162.248913682792,131.899530234275)" rx="2" ry="2" />
<text  x="989.46" y="129.5" ></text>
</g>
<g >
<title>firedrake.matrix_free.operators.ImplicitMatrixContext.__init__ (7,401 us, 0.23%)</title><rect x="986.5" y="103" width="2.7" height="15.0" fill="rgb(142.063939645466,142.063939645466,154.915601221703)" rx="2" ry="2" />
<text  x="989.46" y="113.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (6,482 us, 0.20%)</title><rect x="57.6" y="119" width="2.4" height="15.0" fill="rgb(126.542979583972,126.542979583972,151.911544435608)" rx="2" ry="2" />
<text  x="60.60" y="129.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (96,934 us, 3.00%)</title><rect x="22.2" y="135" width="35.4" height="15.0" fill="rgb(147.629267173018,159.688258832299,147.629267173018)" rx="2" ry="2" />
<text  x="25.17" y="145.5" >py..</text>
</g>
<g >
<title>FunctionSpaceData: CreateElement (927 us, 0.03%)</title><rect x="59.4" y="167" width="0.4" height="15.0" fill="rgb(153.35098414626,122.357545121328,122.357545121328)" rx="2" ry="2" />
<text  x="62.41" y="177.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (2,356 us, 0.07%)</title><rect x="1070.8" y="231" width="0.8" height="15.0" fill="rgb(155.16929392783,136.297920113366,136.297920113366)" rx="2" ry="2" />
<text  x="1073.78" y="241.5" ></text>
</g>
<g >
<title>ParLoopExecute (96,934 us, 3.00%)</title><rect x="22.2" y="103" width="35.4" height="15.0" fill="rgb(144.740601558536,160.158506723029,144.740601558536)" rx="2" ry="2" />
<text  x="25.17" y="113.5" >Pa..</text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (2,890 us, 0.09%)</title><rect x="988.1" y="119" width="1.1" height="15.0" fill="rgb(151.94148249533,142.475048894284,151.94148249533)" rx="2" ry="2" />
<text  x="991.11" y="129.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (1,621 us, 0.05%)</title><rect x="1064.3" y="215" width="0.6" height="15.0" fill="rgb(154.087611585409,128.005022154799,128.005022154799)" rx="2" ry="2" />
<text  x="1067.30" y="225.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (1,287 us, 0.04%)</title><rect x="1189.5" y="183" width="0.5" height="15.0" fill="rgb(152.446469049144,152.446469049144,131.086734622774)" rx="2" ry="2" />
<text  x="1192.53" y="193.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (4,554 us, 0.14%)</title><rect x="1065.3" y="151" width="1.7" height="15.0" fill="rgb(149.441280236237,149.441280236237,116.523127298686)" rx="2" ry="2" />
<text  x="1068.30" y="161.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_form0_cell_integral_otherwise (82,123 us, 2.54%)</title><rect x="1113.2" y="135" width="30.0" height="15.0" fill="rgb(131.974536786039,162.236703313901,131.974536786039)" rx="2" ry="2" />
<text  x="1116.19" y="145.5" >P..</text>
</g>
<g >
<title>KSPSolve (188,038 us, 5.82%)</title><rect x="989.2" y="103" width="68.7" height="15.0" fill="rgb(126.863785355229,149.927648055059,149.927648055059)" rx="2" ry="2" />
<text  x="992.17" y="113.5" >KSPSolve</text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (4,554 us, 0.14%)</title><rect x="1065.3" y="167" width="1.7" height="15.0" fill="rgb(120.439051015431,120.439051015431,150.730138906212)" rx="2" ry="2" />
<text  x="1068.30" y="177.5" ></text>
</g>
<g >
<title>firedrake.functionspace.make_scalar_element (786 us, 0.02%)</title><rect x="60.9" y="87" width="0.3" height="15.0" fill="rgb(115.145456368623,146.889562762236,146.889562762236)" rx="2" ry="2" />
<text  x="63.88" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (653 us, 0.02%)</title><rect x="1189.8" y="215" width="0.2" height="15.0" fill="rgb(129.870745715468,162.57918093004,129.870745715468)" rx="2" ry="2" />
<text  x="1192.76" y="225.5" ></text>
</g>
<g >
<title>ParLoopExecute (155,059 us, 4.80%)</title><rect x="1112.9" y="119" width="56.6" height="15.0" fill="rgb(149.020360213921,159.461801825641,149.020360213921)" rx="2" ry="2" />
<text  x="1115.86" y="129.5" >ParLo..</text>
</g>
<g >
<title>firedrake.parloops.par_loop (84,764 us, 2.63%)</title><rect x="1078.7" y="135" width="30.9" height="15.0" fill="rgb(154.691863961179,132.637623702371,132.637623702371)" rx="2" ry="2" />
<text  x="1081.67" y="145.5" >fi..</text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.__init__ (9,097 us, 0.28%)</title><rect x="985.8" y="71" width="3.4" height="15.0" fill="rgb(139.821001635138,139.821001635138,154.481484187446)" rx="2" ry="2" />
<text  x="988.84" y="81.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (1,621 us, 0.05%)</title><rect x="1064.3" y="183" width="0.6" height="15.0" fill="rgb(119.765635758594,148.087387048524,148.087387048524)" rx="2" ry="2" />
<text  x="1067.30" y="193.5" ></text>
</g>
<g >
<title>firedrake.mesh.MeshTopology._facets (2,491 us, 0.08%)</title><rect x="67.5" y="135" width="0.9" height="15.0" fill="rgb(138.404239884789,161.190007460616,138.404239884789)" rx="2" ry="2" />
<text  x="70.48" y="145.5" ></text>
</g>
<g >
<title>firedrake.parloops.par_loop (79,562 us, 2.46%)</title><rect x="989.4" y="167" width="29.0" height="15.0" fill="rgb(150.293312716655,159.254576999614,150.293312716655)" rx="2" ry="2" />
<text  x="992.36" y="177.5" >f..</text>
</g>
<g >
<title>PCApply (188,038 us, 5.82%)</title><rect x="989.2" y="119" width="68.7" height="15.0" fill="rgb(152.553074446285,152.553074446285,131.60336077815)" rx="2" ry="2" />
<text  x="992.17" y="129.5" >PCApply</text>
</g>
<g >
<title>firedrake.functionspace.VectorFunctionSpace (6,482 us, 0.20%)</title><rect x="57.6" y="87" width="2.4" height="15.0" fill="rgb(148.372755169659,133.330185122251,148.372755169659)" rx="2" ry="2" />
<text  x="60.60" y="97.5" ></text>
</g>
<g >
<title>CreateMesh (669 us, 0.02%)</title><rect x="978.8" y="103" width="0.2" height="15.0" fill="rgb(147.729771809682,147.729771809682,108.228894154613)" rx="2" ry="2" />
<text  x="981.78" y="113.5" ></text>
</g>
<g >
<title>SNESSolve (549,554 us, 17.02%)</title><rect x="989.2" y="87" width="200.8" height="15.0" fill="rgb(132.402980206961,162.166956710495,132.402980206961)" rx="2" ry="2" />
<text  x="992.17" y="97.5" >SNESSolve</text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (3,240 us, 0.10%)</title><rect x="1070.5" y="199" width="1.1" height="15.0" fill="rgb(154.599931536482,131.932808446361,131.932808446361)" rx="2" ry="2" />
<text  x="1073.46" y="209.5" ></text>
</g>
<g >
<title>ParLoopExecute (78,224 us, 2.42%)</title><rect x="1081.1" y="151" width="28.5" height="15.0" fill="rgb(144.823480617263,144.823480617263,155.449705925922)" rx="2" ry="2" />
<text  x="1084.06" y="161.5" >P..</text>
</g>
<g >
<title>firedrake.assemble.allocate_matrix (7,401 us, 0.23%)</title><rect x="986.5" y="87" width="2.7" height="15.0" fill="rgb(139.608116813469,160.994027495482,139.608116813469)" rx="2" ry="2" />
<text  x="989.46" y="97.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (73,081 us, 2.26%)</title><rect x="991.7" y="199" width="26.7" height="15.0" fill="rgb(150.051922750848,150.051922750848,119.482394869494)" rx="2" ry="2" />
<text  x="994.73" y="209.5" >P..</text>
</g>
<g >
<title>firedrake.__init__ (2,486,603 us, 77.01%)</title><rect x="69.4" y="71" width="908.7" height="15.0" fill="rgb(151.838208850808,151.838208850808,128.139012123146)" rx="2" ry="2" />
<text  x="72.36" y="81.5" >firedrake.__init__</text>
</g>
<g >
<title>firedrake.function.Function.split (1,037 us, 0.03%)</title><rect x="985.5" y="119" width="0.3" height="15.0" fill="rgb(143.174169750332,143.174169750332,155.130484467806)" rx="2" ry="2" />
<text  x="988.47" y="129.5" ></text>
</g>
<g >
<title>CreateMesh (1,836 us, 0.06%)</title><rect x="68.4" y="71" width="0.7" height="15.0" fill="rgb(140.080331380619,140.080331380619,154.53167704141)" rx="2" ry="2" />
<text  x="71.39" y="81.5" ></text>
</g>
<g >
<title>HybridBreak (80,078 us, 2.48%)</title><rect x="989.2" y="151" width="29.2" height="15.0" fill="rgb(143.295311598888,160.393786483902,143.295311598888)" rx="2" ry="2" />
<text  x="992.17" y="161.5" >H..</text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (18,952 us, 0.59%)</title><rect x="61.5" y="103" width="6.9" height="15.0" fill="rgb(151.172065337236,151.172065337236,124.91077817276)" rx="2" ry="2" />
<text  x="64.46" y="113.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_pyop2_kernel_uniform_extrusion (96,934 us, 3.00%)</title><rect x="22.2" y="119" width="35.4" height="15.0" fill="rgb(126.256251713113,163.167586930423,126.256251713113)" rx="2" ry="2" />
<text  x="25.17" y="129.5" >Pa..</text>
</g>
<g >
<title>firedrake.function.Function.__init__ (1,166 us, 0.04%)</title><rect x="1057.5" y="183" width="0.4" height="15.0" fill="rgb(154.561522574218,131.638339735672,131.638339735672)" rx="2" ry="2" />
<text  x="1060.46" y="193.5" ></text>
</g>
<g >
<title>firedrake.function.Function.__init__ (1,275 us, 0.04%)</title><rect x="1071.9" y="135" width="0.5" height="15.0" fill="rgb(149.132260603592,149.132260603592,115.025570617408)" rx="2" ry="2" />
<text  x="1074.94" y="145.5" ></text>
</g>
<g >
<title>Mesh: numbering (782 us, 0.02%)</title><rect x="68.8" y="87" width="0.3" height="15.0" fill="rgb(107.88267893975,145.006620465861,145.006620465861)" rx="2" ry="2" />
<text  x="71.78" y="97.5" ></text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (56,015 us, 1.73%)</title><rect x="1169.5" y="119" width="20.5" height="15.0" fill="rgb(123.536565182018,149.06503541756,149.06503541756)" rx="2" ry="2" />
<text  x="1172.53" y="129.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.action (5,183 us, 0.16%)</title><rect x="979.3" y="87" width="1.8" height="15.0" fill="rgb(136.421597919517,161.512763129381,136.421597919517)" rx="2" ry="2" />
<text  x="982.25" y="97.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (2,191 us, 0.07%)</title><rect x="1064.1" y="167" width="0.8" height="15.0" fill="rgb(148.039092107741,148.039092107741,109.727907906743)" rx="2" ry="2" />
<text  x="1067.09" y="177.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (2,316 us, 0.07%)</title><rect x="1109.6" y="135" width="0.9" height="15.0" fill="rgb(143.231627035058,120.156044277336,143.231627035058)" rx="2" ry="2" />
<text  x="1112.65" y="145.5" ></text>
</g>
<g >
<title>firedrake.functionspace.make_scalar_element (617 us, 0.02%)</title><rect x="1065.1" y="151" width="0.2" height="15.0" fill="rgb(152.18583298349,113.424719540087,113.424719540087)" rx="2" ry="2" />
<text  x="1068.07" y="161.5" ></text>
</g>
<g >
<title>firedrake.mesh.ExtrudedMeshTopology.__init__ (825 us, 0.03%)</title><rect x="60.0" y="87" width="0.3" height="15.0" fill="rgb(108.553511113404,108.553511113404,148.429711828401)" rx="2" ry="2" />
<text  x="62.97" y="97.5" ></text>
</g>
</g>
</svg>
