<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="283" onload="init(evt)" viewBox="0 0 1200 283" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:13px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:18px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 13 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (1 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="283.0" fill="url(#background)"  />
<text id="title" x="600.00" y="26" >Firedrake example</text>
<text id="details" x="10.00" y="265" > </text>
<text id="unzoom" x="10.00" y="26" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="26" >Search</text>
<text id="ignorecase" x="1174.00" y="26" >ic</text>
<text id="matched" x="1090.00" y="265" > </text>
<g id="frames">
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (855 us, 0.02%)</title><rect x="1034.4" y="199" width="0.2" height="15.0" fill="rgb(124.321293950305,149.268483616746,149.268483616746)" rx="2" ry="2" />
<text  x="1037.37" y="209.5" ></text>
</g>
<g >
<title>firedrake.mesh.make_mesh_from_coordinates (1,431 us, 0.03%)</title><rect x="73.2" y="87" width="0.4" height="15.0" fill="rgb(153.059345816661,120.121651261068,120.121651261068)" rx="2" ry="2" />
<text  x="76.22" y="97.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (174,363 us, 3.89%)</title><rect x="24.1" y="135" width="46.0" height="15.0" fill="rgb(156.120515140037,143.590616073618,143.590616073618)" rx="2" ry="2" />
<text  x="27.15" y="145.5" >pyo..</text>
</g>
<g >
<title>firedrake.parloops.par_loop (137,279 us, 3.06%)</title><rect x="1056.1" y="135" width="36.1" height="15.0" fill="rgb(111.472595746979,111.472595746979,148.994695951028)" rx="2" ry="2" />
<text  x="1059.09" y="145.5" >fi..</text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.solve (899,225 us, 20.06%)</title><rect x="953.2" y="71" width="236.8" height="15.0" fill="rgb(144.713811944655,160.162867822963,144.713811944655)" rx="2" ry="2" />
<text  x="956.25" y="81.5" >firedrake.variational_solver..</text>
</g>
<g >
<title>CreateFunctionSpace (10,459 us, 0.23%)</title><rect x="70.1" y="103" width="2.7" height="15.0" fill="rgb(141.936549270022,116.837407504432,141.936549270022)" rx="2" ry="2" />
<text  x="73.06" y="113.5" ></text>
</g>
<g >
<title>firedrake.utility_meshes.SquareMesh (3,053 us, 0.07%)</title><rect x="941.8" y="71" width="0.9" height="15.0" fill="rgb(153.640829522215,153.640829522215,136.874789223041)" rx="2" ry="2" />
<text  x="944.85" y="81.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (2,083 us, 0.05%)</title><rect x="1189.5" y="183" width="0.5" height="15.0" fill="rgb(143.627456087705,160.339716450839,143.627456087705)" rx="2" ry="2" />
<text  x="1192.45" y="193.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (33,991 us, 0.76%)</title><rect x="74.3" y="87" width="8.9" height="15.0" fill="rgb(152.12916690753,152.12916690753,129.549039628798)" rx="2" ry="2" />
<text  x="77.26" y="97.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.LinearVariationalProblem.__init__ (25,613 us, 0.57%)</title><rect x="942.7" y="71" width="6.7" height="15.0" fill="rgb(132.32389692709,132.32389692709,153.030431663308)" rx="2" ry="2" />
<text  x="945.65" y="81.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (6,564 us, 0.15%)</title><rect x="1042.9" y="199" width="1.8" height="15.0" fill="rgb(126.205667646052,149.757024945273,149.757024945273)" rx="2" ry="2" />
<text  x="1045.94" y="209.5" ></text>
</g>
<g >
<title>firedrake.functionspace.VectorFunctionSpace (10,459 us, 0.23%)</title><rect x="70.1" y="87" width="2.7" height="15.0" fill="rgb(137.991679254855,137.991679254855,154.127421791262)" rx="2" ry="2" />
<text  x="73.06" y="97.5" ></text>
</g>
<g >
<title>SNESFunctionEval (366,200 us, 8.17%)</title><rect x="1093.6" y="103" width="96.4" height="15.0" fill="rgb(154.196284552581,128.838181569788,128.838181569788)" rx="2" ry="2" />
<text  x="1096.59" y="113.5" >SNESFuncti..</text>
</g>
<g >
<title>CreateFunctionSpace (16,882 us, 0.38%)</title><rect x="1033.1" y="135" width="4.4" height="15.0" fill="rgb(138.143293816552,161.232487053119,138.143293816552)" rx="2" ry="2" />
<text  x="1036.10" y="145.5" ></text>
</g>
<g >
<title>ParLoopExecute (175,974 us, 3.93%)</title><rect x="23.7" y="103" width="46.4" height="15.0" fill="rgb(155.533734265883,139.0919627051,139.0919627051)" rx="2" ry="2" />
<text  x="26.72" y="113.5" >ParL..</text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (916 us, 0.02%)</title><rect x="1189.8" y="215" width="0.2" height="15.0" fill="rgb(126.936304921874,149.94644942419,149.94644942419)" rx="2" ry="2" />
<text  x="1192.76" y="225.5" ></text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (60,586 us, 1.35%)</title><rect x="1174.0" y="119" width="16.0" height="15.0" fill="rgb(107.872008567869,145.003854073151,145.003854073151)" rx="2" ry="2" />
<text  x="1177.05" y="129.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (9,720 us, 0.22%)</title><rect x="70.3" y="151" width="2.5" height="15.0" fill="rgb(140.429477382122,140.429477382122,154.599253686862)" rx="2" ry="2" />
<text  x="73.25" y="161.5" ></text>
</g>
<g >
<title>FunctionSpaceData: CreateElement (13,296 us, 0.30%)</title><rect x="78.7" y="135" width="3.5" height="15.0" fill="rgb(130.888192710614,162.413550023854,130.888192710614)" rx="2" ry="2" />
<text  x="81.69" y="145.5" ></text>
</g>
<g >
<title>firedrake.assemble.allocate_matrix (901 us, 0.02%)</title><rect x="1037.5" y="135" width="0.3" height="15.0" fill="rgb(149.325428837175,149.325428837175,115.961693595542)" rx="2" ry="2" />
<text  x="1040.55" y="145.5" ></text>
</g>
<g >
<title>Log_Event_form0_cell_integral_otherwise (7,122 us, 0.16%)</title><rect x="1095.6" y="151" width="1.9" height="15.0" fill="rgb(142.165897769769,153.894862384755,153.894862384755)" rx="2" ry="2" />
<text  x="1098.65" y="161.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (5,083 us, 0.11%)</title><rect x="1188.7" y="151" width="1.3" height="15.0" fill="rgb(132.223143136798,162.196232512614,132.223143136798)" rx="2" ry="2" />
<text  x="1191.66" y="161.5" ></text>
</g>
<g >
<title>PetscBarrier (1,252 us, 0.03%)</title><rect x="83.9" y="71" width="0.3" height="15.0" fill="rgb(144.743288295028,160.158069347321,144.743288295028)" rx="2" ry="2" />
<text  x="86.89" y="81.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (13,545 us, 0.30%)</title><rect x="1041.1" y="183" width="3.6" height="15.0" fill="rgb(126.575238686805,149.852839659542,149.852839659542)" rx="2" ry="2" />
<text  x="1044.10" y="193.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (9,720 us, 0.22%)</title><rect x="70.3" y="119" width="2.5" height="15.0" fill="rgb(111.383377938978,111.383377938978,148.977427988189)" rx="2" ry="2" />
<text  x="73.25" y="129.5" ></text>
</g>
<g >
<title>ParLoopExecute (126,099 us, 2.81%)</title><rect x="1059.0" y="151" width="33.2" height="15.0" fill="rgb(135.555103239795,135.555103239795,153.655826433509)" rx="2" ry="2" />
<text  x="1062.03" y="161.5" >Pa..</text>
</g>
<g >
<title>Parloop_Cells_wrap_form0_cell_integral_otherwise (126,357 us, 2.82%)</title><rect x="1095.6" y="135" width="33.3" height="15.0" fill="rgb(145.629478780139,154.792827831888,154.792827831888)" rx="2" ry="2" />
<text  x="1098.65" y="145.5" >Pa..</text>
</g>
<g >
<title>Parloop_Cells_wrap_pyop2_kernel_uniform_extrusion (175,217 us, 3.91%)</title><rect x="23.9" y="119" width="46.2" height="15.0" fill="rgb(143.405069834363,160.375918864174,143.405069834363)" rx="2" ry="2" />
<text  x="26.92" y="129.5" >Parl..</text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (2,183 us, 0.05%)</title><rect x="1033.8" y="215" width="0.6" height="15.0" fill="rgb(145.693848976108,126.465488001276,145.693848976108)" rx="2" ry="2" />
<text  x="1036.79" y="225.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (3,117 us, 0.07%)</title><rect x="1033.5" y="167" width="0.9" height="15.0" fill="rgb(137.347731254654,137.347731254654,154.002786694449)" rx="2" ry="2" />
<text  x="1036.54" y="177.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (26,618 us, 0.59%)</title><rect x="1038.1" y="151" width="7.0" height="15.0" fill="rgb(148.032894490137,148.032894490137,109.697873298356)" rx="2" ry="2" />
<text  x="1041.11" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (916 us, 0.02%)</title><rect x="1189.8" y="199" width="0.2" height="15.0" fill="rgb(148.330545414465,159.57409725811,148.330545414465)" rx="2" ry="2" />
<text  x="1192.76" y="209.5" ></text>
</g>
<g >
<title>firedrake.parloops.par_loop (114,743 us, 2.56%)</title><rect x="953.4" y="167" width="30.3" height="15.0" fill="rgb(133.036238498025,151.527913684673,151.527913684673)" rx="2" ry="2" />
<text  x="956.45" y="177.5" >f..</text>
</g>
<g >
<title>firedrake.function.Function.__init__ (2,466 us, 0.06%)</title><rect x="1045.1" y="135" width="0.7" height="15.0" fill="rgb(125.672165270342,163.262670769944,125.672165270342)" rx="2" ry="2" />
<text  x="1048.12" y="145.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (170,623 us, 3.81%)</title><rect x="1129.1" y="151" width="44.9" height="15.0" fill="rgb(124.964062986366,163.377943234778,124.964062986366)" rx="2" ry="2" />
<text  x="1132.13" y="161.5" >pyo..</text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (855 us, 0.02%)</title><rect x="1034.4" y="167" width="0.2" height="15.0" fill="rgb(118.79847965795,147.836642874283,147.836642874283)" rx="2" ry="2" />
<text  x="1037.37" y="177.5" ></text>
</g>
<g >
<title>firedrake.functionspace.make_scalar_element (1,312 us, 0.03%)</title><rect x="1034.6" y="151" width="0.3" height="15.0" fill="rgb(135.711188187406,135.711188187406,153.686036423369)" rx="2" ry="2" />
<text  x="1037.59" y="161.5" ></text>
</g>
<g >
<title>all (4,481,838 us, 100%)</title><rect x="10.0" y="39" width="1180.0" height="15.0" fill="rgb(132.389645581426,132.389645581426,153.043157209308)" rx="2" ry="2" />
<text  x="13.00" y="49.5" ></text>
</g>
<g >
<title>firedrake.mesh.MeshTopology._facets (3,899 us, 0.09%)</title><rect x="82.2" y="135" width="1.0" height="15.0" fill="rgb(155.900480917547,141.903687034525,141.903687034525)" rx="2" ry="2" />
<text  x="85.19" y="145.5" ></text>
</g>
<g >
<title>firedrake.matrix_free.operators.ImplicitMatrixContext.__init__ (901 us, 0.02%)</title><rect x="1037.5" y="151" width="0.3" height="15.0" fill="rgb(135.178339692952,135.178339692952,153.5829044567)" rx="2" ry="2" />
<text  x="1040.55" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (916 us, 0.02%)</title><rect x="1189.8" y="231" width="0.2" height="15.0" fill="rgb(140.904273074172,160.783025313507,140.904273074172)" rx="2" ry="2" />
<text  x="1192.76" y="241.5" ></text>
</g>
<g >
<title>firedrake.functionspace.MixedFunctionSpace (5,656 us, 0.13%)</title><rect x="1033.1" y="151" width="1.5" height="15.0" fill="rgb(127.233875288079,127.233875288079,152.045266184789)" rx="2" ry="2" />
<text  x="1036.10" y="161.5" ></text>
</g>
<g >
<title>FunctionSpaceData: CreateElement (1,767 us, 0.04%)</title><rect x="72.1" y="167" width="0.5" height="15.0" fill="rgb(141.605483197514,115.98905069363,141.605483197514)" rx="2" ry="2" />
<text  x="75.12" y="177.5" ></text>
</g>
<g >
<title>firedrake.mesh.ExtrudedMeshTopology.__init__ (1,565 us, 0.03%)</title><rect x="72.8" y="87" width="0.4" height="15.0" fill="rgb(115.657119919814,115.657119919814,149.804603855448)" rx="2" ry="2" />
<text  x="75.81" y="97.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (27,868 us, 0.62%)</title><rect x="1037.8" y="135" width="7.3" height="15.0" fill="rgb(119.854581458556,148.110447044811,148.110447044811)" rx="2" ry="2" />
<text  x="1040.78" y="145.5" ></text>
</g>
<g >
<title>HybridInit (262,310 us, 5.85%)</title><rect x="1024.5" y="119" width="69.1" height="15.0" fill="rgb(141.229232946385,141.229232946385,154.754045086397)" rx="2" ry="2" />
<text  x="1027.52" y="129.5" >HybridI..</text>
</g>
<g >
<title>firedrake.ufl_expr.derivative (1,429 us, 0.03%)</title><rect x="949.0" y="103" width="0.4" height="15.0" fill="rgb(150.909024502884,150.909024502884,123.636041821668)" rx="2" ry="2" />
<text  x="952.02" y="113.5" ></text>
</g>
<g >
<title>firedrake.utility_meshes.RectangleMesh (3,053 us, 0.07%)</title><rect x="941.8" y="87" width="0.9" height="15.0" fill="rgb(154.60424379661,131.96586910734,131.96586910734)" rx="2" ry="2" />
<text  x="944.85" y="97.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (126,099 us, 2.81%)</title><rect x="1059.0" y="183" width="33.2" height="15.0" fill="rgb(156.609498260442,147.339486663392,147.339486663392)" rx="2" ry="2" />
<text  x="1062.03" y="193.5" >py..</text>
</g>
<g >
<title>HybridRHS (155,218 us, 3.46%)</title><rect x="983.7" y="151" width="40.8" height="15.0" fill="rgb(152.135750068467,113.040750524915,113.040750524915)" rx="2" ry="2" />
<text  x="986.66" y="161.5" >Hyb..</text>
</g>
<g >
<title>ParLoopExecute (299,267 us, 6.68%)</title><rect x="1095.3" y="119" width="78.7" height="15.0" fill="rgb(122.179585311305,122.179585311305,151.067016511865)" rx="2" ry="2" />
<text  x="1098.26" y="129.5" >ParLoopE..</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (105,356 us, 2.35%)</title><rect x="955.9" y="215" width="27.8" height="15.0" fill="rgb(143.583471574593,160.346876720415,143.583471574593)" rx="2" ry="2" />
<text  x="958.92" y="225.5" >p..</text>
</g>
<g >
<title>firedrake.functionspace.make_scalar_element (1,260 us, 0.03%)</title><rect x="73.9" y="87" width="0.4" height="15.0" fill="rgb(143.235907362224,143.235907362224,155.142433683011)" rx="2" ry="2" />
<text  x="76.93" y="97.5" ></text>
</g>
<g >
<title>firedrake.mesh._from_cell_list (1,019 us, 0.02%)</title><rect x="942.4" y="103" width="0.3" height="15.0" fill="rgb(145.727299883684,154.818188858733,154.818188858733)" rx="2" ry="2" />
<text  x="945.38" y="113.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (4,817 us, 0.11%)</title><rect x="1043.4" y="231" width="1.3" height="15.0" fill="rgb(111.162666458724,111.162666458724,148.934709637172)" rx="2" ry="2" />
<text  x="1046.40" y="241.5" ></text>
</g>
<g >
<title>firedrake.function.Function.__init__ (1,526 us, 0.03%)</title><rect x="1024.1" y="183" width="0.4" height="15.0" fill="rgb(109.504570289237,109.504570289237,148.613787797917)" rx="2" ry="2" />
<text  x="1027.12" y="193.5" ></text>
</g>
<g >
<title>firedrake.interpolation.make_interpolator (38,399 us, 0.86%)</title><rect x="1046.0" y="135" width="10.1" height="15.0" fill="rgb(132.89824922472,93.6767636383459,132.89824922472)" rx="2" ry="2" />
<text  x="1048.98" y="145.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (9,329 us, 0.21%)</title><rect x="1187.5" y="135" width="2.5" height="15.0" fill="rgb(153.936051699108,126.843063026498,126.843063026498)" rx="2" ry="2" />
<text  x="1190.54" y="145.5" ></text>
</g>
<g >
<title>firedrake.__init__ (3,255,616 us, 72.64%)</title><rect x="84.2" y="71" width="857.2" height="15.0" fill="rgb(155.887505249138,141.804206910058,141.804206910058)" rx="2" ry="2" />
<text  x="87.21" y="81.5" >firedrake.__init__</text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (9,914 us, 0.22%)</title><rect x="1034.9" y="183" width="2.6" height="15.0" fill="rgb(139.106256458877,161.075725692741,139.106256458877)" rx="2" ry="2" />
<text  x="1037.94" y="193.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (17,041 us, 0.38%)</title><rect x="944.5" y="103" width="4.5" height="15.0" fill="rgb(112.35865565458,146.16705887341,146.16705887341)" rx="2" ry="2" />
<text  x="947.53" y="113.5" ></text>
</g>
<g >
<title>HybridBreak (115,497 us, 2.58%)</title><rect x="953.2" y="151" width="30.5" height="15.0" fill="rgb(127.510004749797,150.095186416614,150.095186416614)" rx="2" ry="2" />
<text  x="956.25" y="161.5" >H..</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (119,235 us, 2.66%)</title><rect x="1097.5" y="151" width="31.4" height="15.0" fill="rgb(140.924206741088,140.924206741088,154.69500775634)" rx="2" ry="2" />
<text  x="1100.52" y="161.5" >py..</text>
</g>
<g >
<title>firedrake.functionspace.make_scalar_element (3,054 us, 0.07%)</title><rect x="1042.1" y="199" width="0.8" height="15.0" fill="rgb(146.983577531966,155.143890471251,155.143890471251)" rx="2" ry="2" />
<text  x="1045.14" y="209.5" ></text>
</g>
<g >
<title>ParLoopExecute (105,356 us, 2.35%)</title><rect x="955.9" y="183" width="27.8" height="15.0" fill="rgb(154.076551915146,127.920231349453,127.920231349453)" rx="2" ry="2" />
<text  x="958.92" y="193.5" >P..</text>
</g>
<g >
<title>PCApply (270,715 us, 6.04%)</title><rect x="953.2" y="119" width="71.3" height="15.0" fill="rgb(110.726180833442,145.743824660522,145.743824660522)" rx="2" ry="2" />
<text  x="956.25" y="129.5" >PCApply</text>
</g>
<g >
<title>SNESSolve (899,225 us, 20.06%)</title><rect x="953.2" y="87" width="236.8" height="15.0" fill="rgb(147.939739464272,132.220582377197,147.939739464272)" rx="2" ry="2" />
<text  x="956.25" y="97.5" >SNESSolve</text>
</g>
<g >
<title>CreateMesh (1,033 us, 0.02%)</title><rect x="942.1" y="103" width="0.3" height="15.0" fill="rgb(153.594113495419,124.221536798213,124.221536798213)" rx="2" ry="2" />
<text  x="945.11" y="113.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_form1_cell_integral_otherwise (171,426 us, 3.82%)</title><rect x="1128.9" y="135" width="45.1" height="15.0" fill="rgb(110.632875366061,145.719634354164,145.719634354164)" rx="2" ry="2" />
<text  x="1131.91" y="145.5" >Par..</text>
</g>
<g >
<title>firedrake.slate.slac.optimise.optimise (11,075 us, 0.25%)</title><rect x="1021.6" y="167" width="2.9" height="15.0" fill="rgb(153.168613189769,153.168613189769,134.586356227341)" rx="2" ry="2" />
<text  x="1024.61" y="177.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalProblem.__init__ (18,470 us, 0.41%)</title><rect x="944.5" y="87" width="4.9" height="15.0" fill="rgb(109.055640479426,145.310721605777,145.310721605777)" rx="2" ry="2" />
<text  x="947.53" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (9,720 us, 0.22%)</title><rect x="70.3" y="135" width="2.5" height="15.0" fill="rgb(149.582992924493,159.370210454152,149.582992924493)" rx="2" ry="2" />
<text  x="73.25" y="145.5" ></text>
</g>
<g >
<title>Mesh: numbering (1,082 us, 0.02%)</title><rect x="83.6" y="87" width="0.3" height="15.0" fill="rgb(146.970273688814,146.970273688814,155.865214262351)" rx="2" ry="2" />
<text  x="86.60" y="97.5" ></text>
</g>
<g >
<title>firedrake.mesh._Facets.__init__ (839 us, 0.02%)</title><rect x="72.6" y="167" width="0.2" height="15.0" fill="rgb(142.956268657447,160.448979520881,142.956268657447)" rx="2" ry="2" />
<text  x="75.59" y="177.5" ></text>
</g>
<g >
<title>firedrake.functionspace.MixedFunctionSpace (1,814 us, 0.04%)</title><rect x="941.4" y="71" width="0.4" height="15.0" fill="rgb(113.546576711008,113.546576711008,149.396111621485)" rx="2" ry="2" />
<text  x="944.37" y="81.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (5,051 us, 0.11%)</title><rect x="951.9" y="119" width="1.3" height="15.0" fill="rgb(144.58836146775,160.183289993622,144.58836146775)" rx="2" ry="2" />
<text  x="954.92" y="129.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (126,099 us, 2.81%)</title><rect x="1059.0" y="167" width="33.2" height="15.0" fill="rgb(135.975620727136,161.585364067676,135.975620727136)" rx="2" ry="2" />
<text  x="1062.03" y="177.5" >Pa..</text>
</g>
<g >
<title>firedrake.functionspaceimpl.WithGeometry.split (1,718 us, 0.04%)</title><rect x="1044.7" y="183" width="0.4" height="15.0" fill="rgb(154.24449302737,129.207779876507,129.207779876507)" rx="2" ry="2" />
<text  x="1047.67" y="193.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (36,520 us, 0.81%)</title><rect x="73.6" y="71" width="9.6" height="15.0" fill="rgb(145.56540909106,145.56540909106,155.593304985366)" rx="2" ry="2" />
<text  x="76.60" y="81.5" ></text>
</g>
<g >
<title>firedrake.function.Function.split (789 us, 0.02%)</title><rect x="1045.8" y="135" width="0.2" height="15.0" fill="rgb(156.524484025444,146.687710861734,146.687710861734)" rx="2" ry="2" />
<text  x="1048.77" y="145.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (9,914 us, 0.22%)</title><rect x="1034.9" y="167" width="2.6" height="15.0" fill="rgb(138.381350641077,161.193733616569,138.381350641077)" rx="2" ry="2" />
<text  x="1037.94" y="177.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (2,183 us, 0.05%)</title><rect x="1033.8" y="199" width="0.6" height="15.0" fill="rgb(144.569337342013,154.517976347929,154.517976347929)" rx="2" ry="2" />
<text  x="1036.79" y="209.5" ></text>
</g>
<g >
<title>SCForwardElim (270,715 us, 6.04%)</title><rect x="953.2" y="135" width="71.3" height="15.0" fill="rgb(136.566284624319,161.489209479762,136.566284624319)" rx="2" ry="2" />
<text  x="956.25" y="145.5" >SCForwa..</text>
</g>
<g >
<title>Log_Event_form1_cell_integral_otherwise (803 us, 0.02%)</title><rect x="1128.9" y="151" width="0.2" height="15.0" fill="rgb(105.622194691817,144.420568994175,144.420568994175)" rx="2" ry="2" />
<text  x="1131.91" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (855 us, 0.02%)</title><rect x="1034.4" y="183" width="0.2" height="15.0" fill="rgb(134.462595840124,97.6854018403166,134.462595840124)" rx="2" ry="2" />
<text  x="1037.37" y="193.5" ></text>
</g>
<g >
<title>CreateExtMesh (241,558 us, 5.39%)</title><rect x="10.0" y="71" width="63.6" height="15.0" fill="rgb(143.891425119352,143.891425119352,155.269308087617)" rx="2" ry="2" />
<text  x="13.00" y="81.5" >Create..</text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (32,632 us, 0.73%)</title><rect x="74.6" y="119" width="8.6" height="15.0" fill="rgb(145.937412735455,159.963676996554,145.937412735455)" rx="2" ry="2" />
<text  x="77.62" y="129.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (9,914 us, 0.22%)</title><rect x="1034.9" y="151" width="2.6" height="15.0" fill="rgb(153.598397716296,124.254382491603,124.254382491603)" rx="2" ry="2" />
<text  x="1037.94" y="161.5" ></text>
</g>
<g >
<title>KSPSolve (270,715 us, 6.04%)</title><rect x="953.2" y="103" width="71.3" height="15.0" fill="rgb(140.174358515505,112.32179369598,140.174358515505)" rx="2" ry="2" />
<text  x="956.25" y="113.5" >KSPSolve</text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (105,356 us, 2.35%)</title><rect x="955.9" y="199" width="27.8" height="15.0" fill="rgb(148.324112037045,148.324112037045,111.109158333373)" rx="2" ry="2" />
<text  x="958.92" y="209.5" >P..</text>
</g>
<g >
<title>CreateMesh (1,033 us, 0.02%)</title><rect x="942.1" y="119" width="0.3" height="15.0" fill="rgb(152.946509544315,119.256573173079,119.256573173079)" rx="2" ry="2" />
<text  x="945.11" y="129.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (891 us, 0.02%)</title><rect x="941.6" y="87" width="0.2" height="15.0" fill="rgb(151.721709598866,151.721709598866,127.574438825274)" rx="2" ry="2" />
<text  x="944.61" y="97.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.action (7,312 us, 0.16%)</title><rect x="950.0" y="119" width="1.9" height="15.0" fill="rgb(106.003008194782,144.519298420869,144.519298420869)" rx="2" ry="2" />
<text  x="952.99" y="129.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (18,956 us, 0.42%)</title><rect x="1040.1" y="167" width="5.0" height="15.0" fill="rgb(149.579818819063,149.579818819063,117.194506584688)" rx="2" ry="2" />
<text  x="1043.13" y="177.5" ></text>
</g>
<g >
<title>firedrake.assemble.allocate_matrix (12,363 us, 0.28%)</title><rect x="950.0" y="87" width="3.2" height="15.0" fill="rgb(146.480117378545,155.013363764808,155.013363764808)" rx="2" ry="2" />
<text  x="952.99" y="97.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.__init__ (14,637 us, 0.33%)</title><rect x="949.4" y="71" width="3.8" height="15.0" fill="rgb(141.455969099131,153.710806803478,153.710806803478)" rx="2" ry="2" />
<text  x="952.39" y="81.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (4,817 us, 0.11%)</title><rect x="1043.4" y="215" width="1.3" height="15.0" fill="rgb(137.474010691332,161.341440120016,137.474010691332)" rx="2" ry="2" />
<text  x="1046.40" y="225.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.action (7,143 us, 0.16%)</title><rect x="942.7" y="87" width="1.8" height="15.0" fill="rgb(125.732152128794,125.732152128794,151.754610089444)" rx="2" ry="2" />
<text  x="945.65" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (32,632 us, 0.73%)</title><rect x="74.6" y="103" width="8.6" height="15.0" fill="rgb(155.86219022773,155.86219022773,147.639844949769)" rx="2" ry="2" />
<text  x="77.62" y="113.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (2,083 us, 0.05%)</title><rect x="1189.5" y="167" width="0.5" height="15.0" fill="rgb(147.397983795972,159.725909614609,147.397983795972)" rx="2" ry="2" />
<text  x="1192.45" y="177.5" ></text>
</g>
<g >
<title>firedrake.function.Function.split (1,429 us, 0.03%)</title><rect x="949.0" y="119" width="0.4" height="15.0" fill="rgb(153.500811739479,153.500811739479,136.196241506705)" rx="2" ry="2" />
<text  x="952.02" y="129.5" ></text>
</g>
<g >
<title>firedrake.extrusion_utils.make_extruded_coords (227,141 us, 5.07%)</title><rect x="10.3" y="87" width="59.8" height="15.0" fill="rgb(153.881083496415,126.421640139181,126.421640139181)" rx="2" ry="2" />
<text  x="13.25" y="97.5" >fired..</text>
</g>
<g >
<title>PCSetUp (262,310 us, 5.85%)</title><rect x="1024.5" y="103" width="69.1" height="15.0" fill="rgb(151.732161695625,151.732161695625,127.625091294185)" rx="2" ry="2" />
<text  x="1027.52" y="113.5" >PCSetUp</text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (5,144 us, 0.11%)</title><rect x="1092.2" y="135" width="1.4" height="15.0" fill="rgb(118.315870880208,147.711522080054,147.711522080054)" rx="2" ry="2" />
<text  x="1095.23" y="145.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (2,183 us, 0.05%)</title><rect x="1033.8" y="183" width="0.6" height="15.0" fill="rgb(153.356290337549,122.398225921209,122.398225921209)" rx="2" ry="2" />
<text  x="1036.79" y="193.5" ></text>
</g>
<g >
<title>firedrake.mesh._Facets.__init__ (1,203 us, 0.03%)</title><rect x="82.9" y="151" width="0.3" height="15.0" fill="rgb(155.728014566238,140.581445007823,140.581445007823)" rx="2" ry="2" />
<text  x="85.90" y="161.5" ></text>
</g>
<g >
<title>CreateMesh (2,550 us, 0.06%)</title><rect x="83.2" y="71" width="0.7" height="15.0" fill="rgb(127.17375948155,163.018225200678,127.17375948155)" rx="2" ry="2" />
<text  x="86.21" y="81.5" ></text>
</g>
<g >
<title>firedrake.matrix_free.operators.ImplicitMatrixContext.__init__ (12,363 us, 0.28%)</title><rect x="950.0" y="103" width="3.2" height="15.0" fill="rgb(148.106564156073,148.106564156073,110.054887833276)" rx="2" ry="2" />
<text  x="952.99" y="113.5" ></text>
</g>
<g >
<title>firedrake (4,481,838 us, 100.00%)</title><rect x="10.0" y="55" width="1180.0" height="15.0" fill="rgb(132.390453424215,151.360487924796,151.360487924796)" rx="2" ry="2" />
<text  x="13.00" y="65.5" >firedrake</text>
</g>
<g >
<title>FunctionSpaceData: CreateElement (9,914 us, 0.22%)</title><rect x="1034.9" y="199" width="2.6" height="15.0" fill="rgb(105.017447314772,144.263782637163,144.263782637163)" rx="2" ry="2" />
<text  x="1037.94" y="209.5" ></text>
</g>
</g>
</svg>
