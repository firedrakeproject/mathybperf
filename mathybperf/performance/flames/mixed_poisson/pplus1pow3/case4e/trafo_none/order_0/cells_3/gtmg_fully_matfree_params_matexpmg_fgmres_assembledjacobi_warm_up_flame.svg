<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="283" onload="init(evt)" viewBox="0 0 1200 283" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:13px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:18px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 13 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (1 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="283.0" fill="url(#background)"  />
<text id="title" x="600.00" y="26" >Firedrake example</text>
<text id="details" x="10.00" y="265" > </text>
<text id="unzoom" x="10.00" y="26" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="26" >Search</text>
<text id="ignorecase" x="1174.00" y="26" >ic</text>
<text id="matched" x="1090.00" y="265" > </text>
<g id="frames">
<g >
<title>Parloop_Cells_wrap_form00_cell_integral_otherwise (7,090,300 us, 4.51%)</title><rect x="1034.1" y="199" width="53.2" height="15.0" fill="rgb(155.795664198341,141.100092187277,141.100092187277)" rx="2" ry="2" />
<text  x="1037.06" y="209.5" >Parl..</text>
</g>
<g >
<title>Parloop_Cells_wrap_pyop2_kernel_uniform_extrusion (2,201,692 us, 1.40%)</title><rect x="17.5" y="119" width="16.6" height="15.0" fill="rgb(110.203157872655,145.608226115133,145.608226115133)" rx="2" ry="2" />
<text  x="20.55" y="129.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (1,059,358 us, 0.67%)</title><rect x="1091.7" y="199" width="7.9" height="15.0" fill="rgb(112.73545274606,112.73545274606,149.239119886334)" rx="2" ry="2" />
<text  x="1094.65" y="209.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_expression_kernel (1,851,675 us, 1.18%)</title><rect x="1020.2" y="199" width="13.9" height="15.0" fill="rgb(155.639718413922,139.904507840068,139.904507840068)" rx="2" ry="2" />
<text  x="1023.15" y="209.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_slate_loopy_knl_74 (9,399,315 us, 5.98%)</title><rect x="71.7" y="183" width="70.6" height="15.0" fill="rgb(146.511426163247,159.870232950169,146.511426163247)" rx="2" ry="2" />
<text  x="74.71" y="193.5" >Parloop..</text>
</g>
<g >
<title>firedrake.slate.slac.optimise.optimise (27,972 us, 0.02%)</title><rect x="869.1" y="183" width="0.2" height="15.0" fill="rgb(123.279505993516,148.998390442763,148.998390442763)" rx="2" ry="2" />
<text  x="872.09" y="193.5" ></text>
</g>
<g >
<title>SNESSolve (151,759,529 us, 96.55%)</title><rect x="50.7" y="103" width="1139.3" height="15.0" fill="rgb(151.952456302844,151.952456302844,128.692672852244)" rx="2" ry="2" />
<text  x="53.67" y="113.5" >SNESSolve</text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (2,269,679 us, 1.44%)</title><rect x="1173.0" y="135" width="17.0" height="15.0" fill="rgb(150.271932961925,150.271932961925,120.5485982001)" rx="2" ry="2" />
<text  x="1175.96" y="145.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.solve (151,759,529 us, 96.55%)</title><rect x="50.7" y="87" width="1139.3" height="15.0" fill="rgb(143.349838627576,160.38490999086,143.349838627576)" rx="2" ry="2" />
<text  x="53.67" y="97.5" >firedrake.variational_solver.NonlinearVariationalSolver.solve</text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (20,065,293 us, 12.77%)</title><rect x="869.3" y="183" width="150.6" height="15.0" fill="rgb(147.162552008859,130.229039522701,147.162552008859)" rx="2" ry="2" />
<text  x="872.30" y="193.5" >firedrake.tsfc_in..</text>
</g>
<g >
<title>Parloop_Cells_wrap_slate_loopy_knl_0 (45,535,685 us, 28.97%)</title><rect x="527.2" y="199" width="341.9" height="15.0" fill="rgb(141.458736724769,115.613012857222,141.458736724769)" rx="2" ry="2" />
<text  x="530.23" y="209.5" >Parloop_Cells_wrap_slate_loopy_knl_0</text>
</g>
<g >
<title>PCSetUp (9,468,270 us, 6.02%)</title><rect x="1019.9" y="167" width="71.1" height="15.0" fill="rgb(121.861139242733,121.861139242733,151.005381788916)" rx="2" ry="2" />
<text  x="1022.93" y="177.5" >PCSetUp</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (23,336,320 us, 14.85%)</title><rect x="174.0" y="215" width="175.2" height="15.0" fill="rgb(135.894080947592,101.353582428206,135.894080947592)" rx="2" ry="2" />
<text  x="176.97" y="225.5" >pyop2.global_kernel...</text>
</g>
<g >
<title>SNESFunctionEval (12,040,914 us, 7.66%)</title><rect x="1099.6" y="119" width="90.4" height="15.0" fill="rgb(139.173565185719,153.119072455557,153.119072455557)" rx="2" ry="2" />
<text  x="1102.60" y="129.5" >SNESFunct..</text>
</g>
<g >
<title>ParLoopExecute (8,941,975 us, 5.69%)</title><rect x="1020.2" y="183" width="67.1" height="15.0" fill="rgb(137.728807182181,161.299961621505,137.728807182181)" rx="2" ry="2" />
<text  x="1023.15" y="193.5" >ParLoo..</text>
</g>
<g >
<title>CreateFunctionSpace (18,026 us, 0.01%)</title><rect x="34.1" y="71" width="0.1" height="15.0" fill="rgb(155.928012722672,142.114764207152,142.114764207152)" rx="2" ry="2" />
<text  x="37.07" y="81.5" ></text>
</g>
<g >
<title>ParLoopExecute (1,059,358 us, 0.67%)</title><rect x="1091.7" y="167" width="7.9" height="15.0" fill="rgb(150.404550371491,150.404550371491,121.191282569536)" rx="2" ry="2" />
<text  x="1094.65" y="177.5" ></text>
</g>
<g >
<title>firedrake (157,177,217 us, 100.00%)</title><rect x="10.0" y="55" width="1180.0" height="15.0" fill="rgb(134.863996287169,134.863996287169,153.522063797517)" rx="2" ry="2" />
<text  x="13.00" y="65.5" >firedrake</text>
</g>
<g >
<title>CreateExtMesh (2,277,897 us, 1.45%)</title><rect x="17.0" y="71" width="17.1" height="15.0" fill="rgb(147.548913782271,147.548913782271,155.977209119149)" rx="2" ry="2" />
<text  x="19.97" y="81.5" ></text>
</g>
<g >
<title>ParLoopExecute (9,399,315 us, 5.98%)</title><rect x="71.7" y="167" width="70.6" height="15.0" fill="rgb(154.362652771613,130.113671249035,130.113671249035)" rx="2" ry="2" />
<text  x="74.71" y="177.5" >ParLoop..</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (45,495,404 us, 28.95%)</title><rect x="527.5" y="215" width="341.6" height="15.0" fill="rgb(116.700428130765,147.292703589458,147.292703589458)" rx="2" ry="2" />
<text  x="530.53" y="225.5" >pyop2.global_kernel.GlobalKernel.compile</text>
</g>
<g >
<title>firedrake.interpolation.make_interpolator (32,978 us, 0.02%)</title><rect x="1091.4" y="151" width="0.3" height="15.0" fill="rgb(142.324100867137,153.935878002591,153.935878002591)" rx="2" ry="2" />
<text  x="1094.40" y="161.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (1,488,980 us, 0.95%)</title><rect x="438.2" y="215" width="11.2" height="15.0" fill="rgb(155.941332592305,142.216883207674,142.216883207674)" rx="2" ry="2" />
<text  x="441.19" y="225.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (5,874,477 us, 3.74%)</title><rect x="1099.6" y="167" width="44.1" height="15.0" fill="rgb(120.780276292381,120.780276292381,150.796182508203)" rx="2" ry="2" />
<text  x="1102.60" y="177.5" >pyo..</text>
</g>
<g >
<title>ParLoopExecute (1,359,153 us, 0.86%)</title><rect x="61.5" y="199" width="10.2" height="15.0" fill="rgb(150.698819865733,150.698819865733,122.617357810859)" rx="2" ry="2" />
<text  x="64.51" y="209.5" ></text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (9,531,063 us, 6.06%)</title><rect x="349.2" y="183" width="71.5" height="15.0" fill="rgb(136.209597587487,161.547274811339,136.209597587487)" rx="2" ry="2" />
<text  x="352.16" y="193.5" >firedra..</text>
</g>
<g >
<title>HybridBreak (1,488,980 us, 0.95%)</title><rect x="438.2" y="167" width="11.2" height="15.0" fill="rgb(148.377046134011,133.341180718402,148.377046134011)" rx="2" ry="2" />
<text  x="441.19" y="177.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_form0_cell_integral_otherwise (5,874,477 us, 3.74%)</title><rect x="1099.6" y="151" width="44.1" height="15.0" fill="rgb(129.865871178609,150.705966601861,150.705966601861)" rx="2" ry="2" />
<text  x="1102.60" y="161.5" >Par..</text>
</g>
<g >
<title>KSPSolve (138,574,902 us, 88.16%)</title><rect x="50.7" y="119" width="1040.3" height="15.0" fill="rgb(138.946355098697,109.175034940411,138.946355098697)" rx="2" ry="2" />
<text  x="53.67" y="129.5" >KSPSolve</text>
</g>
<g >
<title>firedrake.parloops.par_loop (1,488,980 us, 0.95%)</title><rect x="438.2" y="183" width="11.2" height="15.0" fill="rgb(108.969519301791,145.288393893057,145.288393893057)" rx="2" ry="2" />
<text  x="441.19" y="193.5" ></text>
</g>
<g >
<title>firedrake.interpolation.make_interpolator (36,049 us, 0.02%)</title><rect x="1087.3" y="183" width="0.3" height="15.0" fill="rgb(126.055550083114,163.200259288795,126.055550083114)" rx="2" ry="2" />
<text  x="1090.29" y="193.5" ></text>
</g>
<g >
<title>ParLoopExecute (1,488,980 us, 0.95%)</title><rect x="438.2" y="199" width="11.2" height="15.0" fill="rgb(155.623003166425,139.776357609258,139.776357609258)" rx="2" ry="2" />
<text  x="441.19" y="209.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (1,059,358 us, 0.67%)</title><rect x="1091.7" y="183" width="7.9" height="15.0" fill="rgb(153.574182558284,124.068732946845,124.068732946845)" rx="2" ry="2" />
<text  x="1094.65" y="193.5" ></text>
</g>
<g >
<title>ParLoopExecute (45,535,685 us, 28.97%)</title><rect x="527.2" y="183" width="341.9" height="15.0" fill="rgb(129.830497927772,162.585732895479,129.830497927772)" rx="2" ry="2" />
<text  x="530.23" y="193.5" >ParLoopExecute</text>
</g>
<g >
<title>firedrake.parloops.par_loop (1,059,358 us, 0.67%)</title><rect x="1091.7" y="151" width="7.9" height="15.0" fill="rgb(154.375887323848,130.215136149502,130.215136149502)" rx="2" ry="2" />
<text  x="1094.65" y="161.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (2,201,692 us, 1.40%)</title><rect x="17.5" y="135" width="16.6" height="15.0" fill="rgb(155.956158295486,142.330546932056,142.330546932056)" rx="2" ry="2" />
<text  x="20.55" y="145.5" ></text>
</g>
<g >
<title>RecoverFirstElim (37,088,626 us, 23.60%)</title><rect x="142.3" y="167" width="278.4" height="15.0" fill="rgb(153.27953879903,121.809797459229,121.809797459229)" rx="2" ry="2" />
<text  x="145.28" y="177.5" >RecoverFirstElim</text>
</g>
<g >
<title>HybridInit (1,143,713 us, 0.73%)</title><rect x="1091.0" y="135" width="8.6" height="15.0" fill="rgb(154.794510926957,133.424583773339,133.424583773339)" rx="2" ry="2" />
<text  x="1094.02" y="145.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (1,851,675 us, 1.18%)</title><rect x="1020.2" y="215" width="13.9" height="15.0" fill="rgb(127.593287554581,162.949929932975,127.593287554581)" rx="2" ry="2" />
<text  x="1023.15" y="225.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (18,026 us, 0.01%)</title><rect x="34.1" y="119" width="0.1" height="15.0" fill="rgb(149.920881527729,149.920881527729,118.847348942073)" rx="2" ry="2" />
<text  x="37.07" y="129.5" ></text>
</g>
<g >
<title>ParLoopExecute (9,771,235 us, 6.22%)</title><rect x="1099.6" y="135" width="73.4" height="15.0" fill="rgb(147.847421716675,147.847421716675,108.799043703888)" rx="2" ry="2" />
<text  x="1102.60" y="145.5" >ParLoop..</text>
</g>
<g >
<title>firedrake.variational_solver.LinearVariationalProblem.__init__ (35,786 us, 0.02%)</title><rect x="50.4" y="71" width="0.3" height="15.0" fill="rgb(156.333729244779,145.225257543309,145.225257543309)" rx="2" ry="2" />
<text  x="53.40" y="81.5" ></text>
</g>
<g >
<title>firedrake.parloops.par_loop (1,359,153 us, 0.86%)</title><rect x="61.5" y="183" width="10.2" height="15.0" fill="rgb(125.001636577513,149.444868742318,149.444868742318)" rx="2" ry="2" />
<text  x="64.51" y="193.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (18,026 us, 0.01%)</title><rect x="34.1" y="103" width="0.1" height="15.0" fill="rgb(133.183225721156,94.4070159104616,133.183225721156)" rx="2" ry="2" />
<text  x="37.07" y="113.5" ></text>
</g>
<g >
<title>SCSolve (9,468,270 us, 6.02%)</title><rect x="1019.9" y="151" width="71.1" height="15.0" fill="rgb(120.333402905621,120.333402905621,150.709690884959)" rx="2" ry="2" />
<text  x="1022.93" y="161.5" >SCSolve</text>
</g>
<g >
<title>Log_Event_slate_loopy_knl_0 (40,281 us, 0.03%)</title><rect x="527.2" y="215" width="0.3" height="15.0" fill="rgb(140.591976286248,153.486808666805,153.486808666805)" rx="2" ry="2" />
<text  x="530.23" y="225.5" ></text>
</g>
<g >
<title>HybridRHS (76,000,550 us, 48.35%)</title><rect x="449.4" y="167" width="570.5" height="15.0" fill="rgb(119.129621333795,119.129621333795,150.476700903315)" rx="2" ry="2" />
<text  x="452.36" y="177.5" >HybridRHS</text>
</g>
<g >
<title>firedrake.extrusion_utils.make_extruded_coords (2,261,801 us, 1.44%)</title><rect x="17.1" y="87" width="17.0" height="15.0" fill="rgb(152.255697744049,113.960349371042,113.960349371042)" rx="2" ry="2" />
<text  x="20.09" y="97.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_form1_cell_integral_otherwise (3,896,758 us, 2.48%)</title><rect x="1143.7" y="151" width="29.3" height="15.0" fill="rgb(154.248747136716,129.240394714823,129.240394714823)" rx="2" ry="2" />
<text  x="1146.71" y="161.5" >P..</text>
</g>
<g >
<title>SCForwardElim (77,489,530 us, 49.30%)</title><rect x="438.2" y="151" width="581.7" height="15.0" fill="rgb(136.824661610661,136.824661610661,153.901547408515)" rx="2" ry="2" />
<text  x="441.19" y="161.5" >SCForwardElim</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (3,896,758 us, 2.48%)</title><rect x="1143.7" y="167" width="29.3" height="15.0" fill="rgb(124.477242763295,163.457193038533,124.477242763295)" rx="2" ry="2" />
<text  x="1146.71" y="177.5" >p..</text>
</g>
<g >
<title>PCApply (138,574,902 us, 88.16%)</title><rect x="50.7" y="135" width="1040.3" height="15.0" fill="rgb(142.90938221972,160.45661219679,142.90938221972)" rx="2" ry="2" />
<text  x="53.67" y="145.5" >PCApply</text>
</g>
<g >
<title>Log_Event_slate_loopy_knl_48 (20,983 us, 0.01%)</title><rect x="173.8" y="215" width="0.2" height="15.0" fill="rgb(124.135195584969,149.220235892399,149.220235892399)" rx="2" ry="2" />
<text  x="176.81" y="225.5" ></text>
</g>
<g >
<title>firedrake.__init__ (2,157,083 us, 1.37%)</title><rect x="34.2" y="71" width="16.2" height="15.0" fill="rgb(153.362827997283,153.362827997283,135.527551063757)" rx="2" ry="2" />
<text  x="37.21" y="81.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (1,359,153 us, 0.86%)</title><rect x="61.5" y="231" width="10.2" height="15.0" fill="rgb(152.186831197138,113.432372511392,113.432372511392)" rx="2" ry="2" />
<text  x="64.51" y="241.5" ></text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (460,933 us, 0.29%)</title><rect x="1087.6" y="183" width="3.4" height="15.0" fill="rgb(148.716212109379,148.716212109379,113.00933560699)" rx="2" ry="2" />
<text  x="1090.56" y="193.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (9,399,315 us, 5.98%)</title><rect x="71.7" y="199" width="70.6" height="15.0" fill="rgb(132.488764611187,92.6274593161658,132.488764611187)" rx="2" ry="2" />
<text  x="74.71" y="209.5" >pyop2.g..</text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (2,326,624 us, 1.48%)</title><rect x="420.7" y="167" width="17.5" height="15.0" fill="rgb(154.188258820656,154.188258820656,139.52771582318)" rx="2" ry="2" />
<text  x="423.72" y="177.5" ></text>
</g>
<g >
<title>ParLoopExecute (2,201,692 us, 1.40%)</title><rect x="17.5" y="103" width="16.6" height="15.0" fill="rgb(154.20218310004,128.883403766974,128.883403766974)" rx="2" ry="2" />
<text  x="20.55" y="113.5" ></text>
</g>
<g >
<title>HybridProject (1,359,153 us, 0.86%)</title><rect x="61.5" y="167" width="10.2" height="15.0" fill="rgb(150.046626557284,150.046626557284,119.456728700684)" rx="2" ry="2" />
<text  x="64.51" y="177.5" ></text>
</g>
<g >
<title>perfsolve (151,759,529 us, 96.55%)</title><rect x="50.7" y="71" width="1139.3" height="15.0" fill="rgb(110.984068327456,145.810684381192,145.810684381192)" rx="2" ry="2" />
<text  x="53.67" y="81.5" >perfsolve</text>
</g>
<g >
<title>firedrake.ufl_expr.action (18,575 us, 0.01%)</title><rect x="50.4" y="87" width="0.1" height="15.0" fill="rgb(138.005425830283,152.816221511555,152.816221511555)" rx="2" ry="2" />
<text  x="53.40" y="97.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (1,488,980 us, 0.95%)</title><rect x="438.2" y="231" width="11.2" height="15.0" fill="rgb(155.867455625899,141.650493131889,141.650493131889)" rx="2" ry="2" />
<text  x="441.19" y="241.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (1,359,153 us, 0.86%)</title><rect x="61.5" y="215" width="10.2" height="15.0" fill="rgb(152.761998743028,117.841990363213,117.841990363213)" rx="2" ry="2" />
<text  x="64.51" y="225.5" ></text>
</g>
<g >
<title>SCBackSub (51,617,102 us, 32.84%)</title><rect x="50.7" y="151" width="387.5" height="15.0" fill="rgb(134.091856399379,96.7353820234088,134.091856399379)" rx="2" ry="2" />
<text  x="53.67" y="161.5" >SCBackSub</text>
</g>
<g >
<title>all (157,177,217 us, 100%)</title><rect x="10.0" y="39" width="1180.0" height="15.0" fill="rgb(134.253226916628,151.843429200607,151.843429200607)" rx="2" ry="2" />
<text  x="13.00" y="49.5" ></text>
</g>
<g >
<title>ParLoopExecute (23,357,303 us, 14.86%)</title><rect x="173.8" y="183" width="175.4" height="15.0" fill="rgb(149.016189984392,149.016189984392,114.463074539744)" rx="2" ry="2" />
<text  x="176.81" y="193.5" >ParLoopExecute</text>
</g>
<g >
<title>Parloop_Cells_wrap_slate_loopy_knl_48 (23,357,303 us, 14.86%)</title><rect x="173.8" y="199" width="175.4" height="15.0" fill="rgb(108.431166649135,145.148820983109,145.148820983109)" rx="2" ry="2" />
<text  x="176.81" y="209.5" >Parloop_Cells_wrap_s..</text>
</g>
<g >
<title>PCSetUp (1,143,713 us, 0.73%)</title><rect x="1091.0" y="119" width="8.6" height="15.0" fill="rgb(151.281441358547,151.281441358547,125.440831199111)" rx="2" ry="2" />
<text  x="1094.02" y="129.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalProblem.__init__ (17,211 us, 0.01%)</title><rect x="50.5" y="87" width="0.2" height="15.0" fill="rgb(151.433712781382,151.433712781382,126.178761940541)" rx="2" ry="2" />
<text  x="53.54" y="97.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (7,090,300 us, 4.51%)</title><rect x="1034.1" y="215" width="53.2" height="15.0" fill="rgb(116.163482001505,116.163482001505,149.902609419646)" rx="2" ry="2" />
<text  x="1037.06" y="225.5" >pyop..</text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (18,026 us, 0.01%)</title><rect x="34.1" y="87" width="0.1" height="15.0" fill="rgb(156.523791694946,146.682402994585,146.682402994585)" rx="2" ry="2" />
<text  x="37.07" y="97.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (17,211 us, 0.01%)</title><rect x="50.5" y="103" width="0.2" height="15.0" fill="rgb(147.990579288576,147.990579288576,109.492807321558)" rx="2" ry="2" />
<text  x="53.54" y="113.5" ></text>
</g>
</g>
</svg>
