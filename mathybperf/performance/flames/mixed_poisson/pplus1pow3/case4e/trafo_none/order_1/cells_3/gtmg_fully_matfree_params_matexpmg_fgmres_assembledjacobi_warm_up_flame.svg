<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="331" onload="init(evt)" viewBox="0 0 1200 331" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:13px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:18px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 13 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (1 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="331.0" fill="url(#background)"  />
<text id="title" x="600.00" y="26" >Firedrake example</text>
<text id="details" x="10.00" y="313" > </text>
<text id="unzoom" x="10.00" y="26" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="26" >Search</text>
<text id="ignorecase" x="1174.00" y="26" >ic</text>
<text id="matched" x="1090.00" y="313" > </text>
<g id="frames">
<g >
<title>firedrake.ufl_expr.action (11,642 us, 0.01%)</title><rect x="65.8" y="87" width="0.2" height="15.0" fill="rgb(126.514795075004,163.125498476162,126.514795075004)" rx="2" ry="2" />
<text  x="68.84" y="97.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (16,053 us, 0.02%)</title><rect x="66.0" y="103" width="0.2" height="15.0" fill="rgb(152.492084146518,152.492084146518,131.307792402358)" rx="2" ry="2" />
<text  x="69.00" y="113.5" ></text>
</g>
<g >
<title>ParLoopExecute (729,391 us, 0.84%)</title><rect x="1063.8" y="167" width="9.9" height="15.0" fill="rgb(154.41834299772,154.41834299772,140.642739142796)" rx="2" ry="2" />
<text  x="1066.76" y="177.5" ></text>
</g>
<g >
<title>firedrake.interpolation.make_interpolator (33,221 us, 0.04%)</title><rect x="1063.3" y="151" width="0.5" height="15.0" fill="rgb(153.89408622739,126.521327743323,126.521327743323)" rx="2" ry="2" />
<text  x="1066.31" y="161.5" ></text>
</g>
<g >
<title>firedrake.assemble.allocate_matrix (131,780 us, 0.15%)</title><rect x="976.6" y="247" width="1.8" height="15.0" fill="rgb(141.830715787316,141.830715787316,154.870461120126)" rx="2" ry="2" />
<text  x="979.60" y="257.5" ></text>
</g>
<g >
<title>PCSetUp (803,347 us, 0.93%)</title><rect x="1062.8" y="119" width="10.9" height="15.0" fill="rgb(133.540795042023,133.540795042023,153.265960330714)" rx="2" ry="2" />
<text  x="1065.75" y="129.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_slate_loopy_knl_48 (468,566 us, 0.54%)</title><rect x="970.2" y="263" width="6.4" height="15.0" fill="rgb(116.131878504796,116.131878504796,149.896492613831)" rx="2" ry="2" />
<text  x="973.20" y="273.5" ></text>
</g>
<g >
<title>SCSolve (6,770,569 us, 7.84%)</title><rect x="970.2" y="151" width="92.6" height="15.0" fill="rgb(133.661041861538,161.962155976029,133.661041861538)" rx="2" ry="2" />
<text  x="973.20" y="161.5" >SCSolve</text>
</g>
<g >
<title>firedrake.variational_solver.LinearVariationalProblem.__init__ (27,695 us, 0.03%)</title><rect x="65.8" y="71" width="0.4" height="15.0" fill="rgb(148.607133897294,133.930780611816,148.607133897294)" rx="2" ry="2" />
<text  x="68.84" y="81.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_expression_kernel (1,292,303 us, 1.50%)</title><rect x="978.5" y="199" width="17.7" height="15.0" fill="rgb(154.759187804405,154.759187804405,142.294525513655)" rx="2" ry="2" />
<text  x="981.55" y="209.5" ></text>
</g>
<g >
<title>HybridRHS (65,163,971 us, 75.49%)</title><rect x="79.4" y="167" width="890.8" height="15.0" fill="rgb(126.254854886695,126.254854886695,151.855778365167)" rx="2" ry="2" />
<text  x="82.42" y="177.5" >HybridRHS</text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (10,620 us, 0.01%)</title><rect x="1063.2" y="151" width="0.1" height="15.0" fill="rgb(120.513973617469,120.513973617469,150.744640054994)" rx="2" ry="2" />
<text  x="1066.16" y="161.5" ></text>
</g>
<g >
<title>firedrake.assemble.allocate_matrix (10,639 us, 0.01%)</title><rect x="66.2" y="87" width="0.2" height="15.0" fill="rgb(117.748067325356,147.564313751018,147.564313751018)" rx="2" ry="2" />
<text  x="69.22" y="97.5" ></text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (319,264 us, 0.37%)</title><rect x="1058.4" y="183" width="4.4" height="15.0" fill="rgb(128.33628540402,150.309407326968,150.309407326968)" rx="2" ry="2" />
<text  x="1061.39" y="193.5" ></text>
</g>
<g >
<title>PCSetUp (6,170,223 us, 7.15%)</title><rect x="978.4" y="167" width="84.4" height="15.0" fill="rgb(133.104642907549,151.545648161216,151.545648161216)" rx="2" ry="2" />
<text  x="981.40" y="177.5" >PCSetUp</text>
</g>
<g >
<title>CreateExtMesh (1,242,026 us, 1.44%)</title><rect x="10.0" y="71" width="17.0" height="15.0" fill="rgb(138.539567931183,138.539567931183,154.233464760874)" rx="2" ry="2" />
<text  x="13.00" y="81.5" ></text>
</g>
<g >
<title>firedrake.__init__ (2,818,387 us, 3.26%)</title><rect x="27.2" y="71" width="38.5" height="15.0" fill="rgb(145.978019076245,145.978019076245,155.673164982499)" rx="2" ry="2" />
<text  x="30.20" y="81.5" >fir..</text>
</g>
<g >
<title>CreateSparsity (109,942 us, 0.13%)</title><rect x="976.6" y="263" width="1.5" height="15.0" fill="rgb(115.692553417741,147.031402737933,147.031402737933)" rx="2" ry="2" />
<text  x="979.60" y="273.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (3,855,919 us, 4.47%)</title><rect x="1073.9" y="167" width="52.7" height="15.0" fill="rgb(134.680913578802,151.954310927838,151.954310927838)" rx="2" ry="2" />
<text  x="1076.87" y="177.5" >pyop..</text>
</g>
<g >
<title>KSPSolve (600,346 us, 0.70%)</title><rect x="970.2" y="167" width="8.2" height="15.0" fill="rgb(145.622649683088,160.014917493451,145.622649683088)" rx="2" ry="2" />
<text  x="973.20" y="177.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (15,891 us, 0.02%)</title><rect x="27.0" y="119" width="0.2" height="15.0" fill="rgb(152.603467848617,116.626586839394,116.626586839394)" rx="2" ry="2" />
<text  x="29.98" y="129.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (1,192,092 us, 1.38%)</title><rect x="10.7" y="135" width="16.3" height="15.0" fill="rgb(105.642558312193,144.425848451309,144.425848451309)" rx="2" ry="2" />
<text  x="13.68" y="145.5" ></text>
</g>
<g >
<title>Log_Event_mtf_solve_1 (17,729 us, 0.02%)</title><rect x="172.8" y="231" width="0.3" height="15.0" fill="rgb(153.571513251673,153.571513251673,136.538871911951)" rx="2" ry="2" />
<text  x="175.82" y="241.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (10,620 us, 0.01%)</title><rect x="1063.2" y="167" width="0.1" height="15.0" fill="rgb(108.754719024715,108.754719024715,148.468655295106)" rx="2" ry="2" />
<text  x="1066.16" y="177.5" ></text>
</g>
<g >
<title>firedrake.extrusion_utils.make_extruded_coords (1,231,158 us, 1.43%)</title><rect x="10.1" y="87" width="16.9" height="15.0" fill="rgb(155.505414818973,155.505414818973,145.910856430408)" rx="2" ry="2" />
<text  x="13.15" y="97.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (4,479,635 us, 5.19%)</title><rect x="996.2" y="215" width="61.2" height="15.0" fill="rgb(137.659772442736,105.878166884511,137.659772442736)" rx="2" ry="2" />
<text  x="999.21" y="225.5" >pyop2..</text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (13,292,420 us, 15.40%)</title><rect x="788.5" y="183" width="181.7" height="15.0" fill="rgb(152.738447751027,117.661432757871,117.661432757871)" rx="2" ry="2" />
<text  x="791.49" y="193.5" >firedrake.tsfc_interf..</text>
</g>
<g >
<title>ParLoopExecute (7,115,435 us, 8.24%)</title><rect x="1073.7" y="135" width="97.3" height="15.0" fill="rgb(150.859482967979,150.859482967979,123.395955921744)" rx="2" ry="2" />
<text  x="1076.73" y="145.5" >ParLoopExe..</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (954,410 us, 1.11%)</title><rect x="66.4" y="231" width="13.0" height="15.0" fill="rgb(110.288961250967,110.288961250967,148.765605403413)" rx="2" ry="2" />
<text  x="69.37" y="241.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (12,441 us, 0.01%)</title><rect x="1063.0" y="151" width="0.2" height="15.0" fill="rgb(123.510253357248,123.510253357248,151.324565165919)" rx="2" ry="2" />
<text  x="1065.99" y="161.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_pyop2_kernel_uniform_extrusion (1,192,092 us, 1.38%)</title><rect x="10.7" y="119" width="16.3" height="15.0" fill="rgb(136.078558122442,152.316663216929,152.316663216929)" rx="2" ry="2" />
<text  x="13.68" y="129.5" ></text>
</g>
<g >
<title>firedrake.parloops.par_loop (954,410 us, 1.11%)</title><rect x="66.4" y="183" width="13.0" height="15.0" fill="rgb(141.849040483611,160.629225967784,141.849040483611)" rx="2" ry="2" />
<text  x="69.37" y="193.5" ></text>
</g>
<g >
<title>perfsolve (82,197,713 us, 95.22%)</title><rect x="66.4" y="71" width="1123.6" height="15.0" fill="rgb(149.807716450683,149.807716450683,118.298933568694)" rx="2" ry="2" />
<text  x="69.37" y="81.5" >perfsolve</text>
</g>
<g >
<title>all (86,321,287 us, 100%)</title><rect x="10.0" y="39" width="1180.0" height="15.0" fill="rgb(149.133758838902,149.133758838902,115.032831296217)" rx="2" ry="2" />
<text  x="13.00" y="49.5" ></text>
</g>
<g >
<title>PCApply (600,346 us, 0.70%)</title><rect x="970.2" y="183" width="8.2" height="15.0" fill="rgb(154.544927672974,131.511112159467,131.511112159467)" rx="2" ry="2" />
<text  x="973.20" y="193.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (954,410 us, 1.11%)</title><rect x="66.4" y="215" width="13.0" height="15.0" fill="rgb(141.63579185126,160.663940861423,141.63579185126)" rx="2" ry="2" />
<text  x="69.37" y="225.5" ></text>
</g>
<g >
<title>ParLoopExecute (954,410 us, 1.11%)</title><rect x="66.4" y="199" width="13.0" height="15.0" fill="rgb(109.022929027995,145.30224085911,145.30224085911)" rx="2" ry="2" />
<text  x="69.37" y="209.5" ></text>
</g>
<g >
<title>ParLoopExecute (468,566 us, 0.54%)</title><rect x="970.2" y="247" width="6.4" height="15.0" fill="rgb(144.717729388294,144.717729388294,155.429237946122)" rx="2" ry="2" />
<text  x="973.20" y="257.5" ></text>
</g>
<g >
<title>Log_Event_form1_cell_integral_otherwise (15,815 us, 0.02%)</title><rect x="1126.6" y="167" width="0.2" height="15.0" fill="rgb(106.096290960493,144.543482841609,144.543482841609)" rx="2" ry="2" />
<text  x="1129.58" y="177.5" ></text>
</g>
<g >
<title>ParLoopExecute (1,192,092 us, 1.38%)</title><rect x="10.7" y="103" width="16.3" height="15.0" fill="rgb(149.271432375975,149.271432375975,115.700018437417)" rx="2" ry="2" />
<text  x="13.68" y="113.5" ></text>
</g>
<g >
<title>Log_Event_form0_cell_integral_otherwise (9,955 us, 0.01%)</title><rect x="1073.7" y="167" width="0.2" height="15.0" fill="rgb(153.292534464268,121.909430892723,121.909430892723)" rx="2" ry="2" />
<text  x="1076.73" y="177.5" ></text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (1,389,981 us, 1.61%)</title><rect x="1171.0" y="135" width="19.0" height="15.0" fill="rgb(136.618445974939,103.209767810782,136.618445974939)" rx="2" ry="2" />
<text  x="1174.00" y="145.5" ></text>
</g>
<g >
<title>SNESSolve (82,197,713 us, 95.22%)</title><rect x="66.4" y="103" width="1123.6" height="15.0" fill="rgb(138.129659630042,161.234706571854,138.129659630042)" rx="2" ry="2" />
<text  x="69.37" y="113.5" >SNESSolve</text>
</g>
<g >
<title>firedrake.assemble.allocate_matrix (11,583 us, 0.01%)</title><rect x="1057.4" y="183" width="0.2" height="15.0" fill="rgb(153.899374133247,126.561868354895,126.561868354895)" rx="2" ry="2" />
<text  x="1060.45" y="193.5" ></text>
</g>
<g >
<title>firedrake.parloops.par_loop (729,391 us, 0.84%)</title><rect x="1063.8" y="151" width="9.9" height="15.0" fill="rgb(138.55913182466,152.959774917504,152.959774917504)" rx="2" ry="2" />
<text  x="1066.76" y="161.5" ></text>
</g>
<g >
<title>CreateSparsity (26,834 us, 0.03%)</title><rect x="1058.0" y="199" width="0.4" height="15.0" fill="rgb(111.995788042024,146.072982084969,146.072982084969)" rx="2" ry="2" />
<text  x="1061.02" y="209.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_form0_cell_integral_otherwise (3,865,874 us, 4.48%)</title><rect x="1073.7" y="151" width="52.9" height="15.0" fill="rgb(114.689744918627,114.689744918627,149.61736998425)" rx="2" ry="2" />
<text  x="1076.73" y="161.5" >Parl..</text>
</g>
<g >
<title>HybridInit (803,347 us, 0.93%)</title><rect x="1062.8" y="135" width="10.9" height="15.0" fill="rgb(152.365347655572,114.800998692717,114.800998692717)" rx="2" ry="2" />
<text  x="1065.75" y="145.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (15,891 us, 0.02%)</title><rect x="27.0" y="103" width="0.2" height="15.0" fill="rgb(146.251784132206,154.954166256498,154.954166256498)" rx="2" ry="2" />
<text  x="29.98" y="113.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalProblem.__init__ (16,053 us, 0.02%)</title><rect x="66.0" y="87" width="0.2" height="15.0" fill="rgb(120.706039287973,148.331195370956,148.331195370956)" rx="2" ry="2" />
<text  x="69.00" y="97.5" ></text>
</g>
<g >
<title>PCApply (72,888,950 us, 84.44%)</title><rect x="66.4" y="135" width="996.4" height="15.0" fill="rgb(131.430838333957,151.111698827322,151.111698827322)" rx="2" ry="2" />
<text  x="69.37" y="145.5" >PCApply</text>
</g>
<g >
<title>Parloop_Cells_wrap_form00_cell_integral_otherwise (4,479,635 us, 5.19%)</title><rect x="996.2" y="199" width="61.2" height="15.0" fill="rgb(111.928986839446,111.928986839446,149.083029710861)" rx="2" ry="2" />
<text  x="999.21" y="209.5" >Parlo..</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (44,990,898 us, 52.12%)</title><rect x="173.3" y="215" width="615.0" height="15.0" fill="rgb(117.191993935584,117.191993935584,150.101676245597)" rx="2" ry="2" />
<text  x="176.30" y="225.5" >pyop2.global_kernel.GlobalKernel.compile</text>
</g>
<g >
<title>ParLoopExecute (45,073,653 us, 52.22%)</title><rect x="172.2" y="183" width="616.1" height="15.0" fill="rgb(123.284191797952,148.99960528095,148.99960528095)" rx="2" ry="2" />
<text  x="175.17" y="193.5" >ParLoopExecute</text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (729,391 us, 0.84%)</title><rect x="1063.8" y="183" width="9.9" height="15.0" fill="rgb(146.531035512308,128.610778500289,146.531035512308)" rx="2" ry="2" />
<text  x="1066.76" y="193.5" ></text>
</g>
<g >
<title>ParLoopExecute (5,771,938 us, 6.69%)</title><rect x="978.5" y="183" width="78.9" height="15.0" fill="rgb(120.342692175524,120.342692175524,150.711488808166)" rx="2" ry="2" />
<text  x="981.55" y="193.5" >ParLoopE..</text>
</g>
<g >
<title>PCSetUp (600,346 us, 0.70%)</title><rect x="970.2" y="231" width="8.2" height="15.0" fill="rgb(126.373203931349,149.800460278498,149.800460278498)" rx="2" ry="2" />
<text  x="973.20" y="241.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (15,891 us, 0.02%)</title><rect x="27.0" y="87" width="0.2" height="15.0" fill="rgb(135.081043109713,135.081043109713,153.564072859945)" rx="2" ry="2" />
<text  x="29.98" y="97.5" ></text>
</g>
<g >
<title>firedrake (86,321,287 us, 100.00%)</title><rect x="10.0" y="55" width="1180.0" height="15.0" fill="rgb(128.748417938846,128.748417938846,152.338403472035)" rx="2" ry="2" />
<text  x="13.00" y="65.5" >firedrake</text>
</g>
<g >
<title>firedrake.functionspace.VectorFunctionSpace (8,936 us, 0.01%)</title><rect x="65.7" y="71" width="0.1" height="15.0" fill="rgb(134.577010563134,161.813044792048,134.577010563134)" rx="2" ry="2" />
<text  x="68.72" y="81.5" ></text>
</g>
<g >
<title>PCSetUp (600,346 us, 0.70%)</title><rect x="970.2" y="199" width="8.2" height="15.0" fill="rgb(153.328968682147,122.188759896458,122.188759896458)" rx="2" ry="2" />
<text  x="973.20" y="209.5" ></text>
</g>
<g >
<title>SNESFunctionEval (8,505,416 us, 9.85%)</title><rect x="1073.7" y="119" width="116.3" height="15.0" fill="rgb(149.801469108349,149.801469108349,118.268657986613)" rx="2" ry="2" />
<text  x="1076.73" y="129.5" >SNESFunctionE..</text>
</g>
<g >
<title>SCForwardElim (66,118,381 us, 76.60%)</title><rect x="66.4" y="151" width="903.8" height="15.0" fill="rgb(153.26476571457,153.26476571457,135.052326155223)" rx="2" ry="2" />
<text  x="69.37" y="161.5" >SCForwardElim</text>
</g>
<g >
<title>KSPSolve (72,888,950 us, 84.44%)</title><rect x="66.4" y="119" width="996.4" height="15.0" fill="rgb(155.862665489525,141.613768753024,141.613768753024)" rx="2" ry="2" />
<text  x="69.37" y="129.5" >KSPSolve</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (729,391 us, 0.84%)</title><rect x="1063.8" y="199" width="9.9" height="15.0" fill="rgb(128.116770961257,162.864711703981,128.116770961257)" rx="2" ry="2" />
<text  x="1066.76" y="209.5" ></text>
</g>
<g >
<title>firedrake.slate.slac.optimise.optimise (12,541 us, 0.01%)</title><rect x="788.3" y="183" width="0.2" height="15.0" fill="rgb(129.738941638035,150.673058943194,150.673058943194)" rx="2" ry="2" />
<text  x="791.32" y="193.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.solve (82,197,713 us, 95.22%)</title><rect x="66.4" y="87" width="1123.6" height="15.0" fill="rgb(150.640536792587,150.640536792587,122.334909071767)" rx="2" ry="2" />
<text  x="69.37" y="97.5" >firedrake.variational_solver.NonlinearVariationalSolver.solve</text>
</g>
<g >
<title>MatZeroInitial (21,838 us, 0.03%)</title><rect x="978.1" y="263" width="0.3" height="15.0" fill="rgb(124.821938380328,149.398280320826,149.398280320826)" rx="2" ry="2" />
<text  x="981.11" y="273.5" ></text>
</g>
<g >
<title>firedrake.interpolation.make_interpolator (57,038 us, 0.07%)</title><rect x="1057.6" y="183" width="0.8" height="15.0" fill="rgb(120.187254366727,148.196695576559,148.196695576559)" rx="2" ry="2" />
<text  x="1060.61" y="193.5" ></text>
</g>
<g >
<title>Log_Event_mtf_solve_26 (17,506 us, 0.02%)</title><rect x="173.1" y="231" width="0.2" height="15.0" fill="rgb(152.420398530428,115.22305539995,115.22305539995)" rx="2" ry="2" />
<text  x="176.06" y="241.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_slate_loopy_knl_0 (45,073,653 us, 52.22%)</title><rect x="172.2" y="199" width="616.1" height="15.0" fill="rgb(136.32522086688,136.32522086688,153.804881458106)" rx="2" ry="2" />
<text  x="175.17" y="209.5" >Parloop_Cells_wrap_slate_loopy_knl_0</text>
</g>
<g >
<title>Log_Event_slate_loopy_knl_0 (82,755 us, 0.10%)</title><rect x="172.2" y="215" width="1.1" height="15.0" fill="rgb(131.346811891157,162.338891087486,131.346811891157)" rx="2" ry="2" />
<text  x="175.17" y="225.5" ></text>
</g>
<g >
<title>firedrake.matrix_free.operators.ImplicitMatrixContext.__init__ (10,639 us, 0.01%)</title><rect x="66.2" y="103" width="0.2" height="15.0" fill="rgb(150.549053879407,150.549053879407,121.891568800201)" rx="2" ry="2" />
<text  x="69.22" y="113.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_form1_cell_integral_otherwise (3,249,561 us, 3.76%)</title><rect x="1126.6" y="151" width="44.4" height="15.0" fill="rgb(144.254751527897,154.436417062788,154.436417062788)" rx="2" ry="2" />
<text  x="1129.58" y="161.5" >Par..</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (468,566 us, 0.54%)</title><rect x="970.2" y="279" width="6.4" height="15.0" fill="rgb(143.574936454491,121.035774664634,143.574936454491)" rx="2" ry="2" />
<text  x="973.20" y="289.5" ></text>
</g>
<g >
<title>HybridBreak (954,410 us, 1.11%)</title><rect x="66.4" y="167" width="13.0" height="15.0" fill="rgb(145.555606168214,145.555606168214,155.591407645461)" rx="2" ry="2" />
<text  x="69.37" y="177.5" ></text>
</g>
<g >
<title>KSPSetUp (600,346 us, 0.70%)</title><rect x="970.2" y="215" width="8.2" height="15.0" fill="rgb(140.443728074961,153.44837394536,153.44837394536)" rx="2" ry="2" />
<text  x="973.20" y="225.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (15,891 us, 0.02%)</title><rect x="27.0" y="71" width="0.2" height="15.0" fill="rgb(144.56169450239,160.187631127518,144.56169450239)" rx="2" ry="2" />
<text  x="29.98" y="81.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (3,233,746 us, 3.75%)</title><rect x="1126.8" y="167" width="44.2" height="15.0" fill="rgb(119.456847728801,148.007330892652,148.007330892652)" rx="2" ry="2" />
<text  x="1129.79" y="177.5" >pyo..</text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.__init__ (10,639 us, 0.01%)</title><rect x="66.2" y="71" width="0.2" height="15.0" fill="rgb(147.699665291384,147.699665291384,108.082993335169)" rx="2" ry="2" />
<text  x="69.22" y="81.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (1,292,303 us, 1.50%)</title><rect x="978.5" y="215" width="17.7" height="15.0" fill="rgb(154.178565119315,128.702332581417,128.702332581417)" rx="2" ry="2" />
<text  x="981.55" y="225.5" ></text>
</g>
</g>
</svg>
