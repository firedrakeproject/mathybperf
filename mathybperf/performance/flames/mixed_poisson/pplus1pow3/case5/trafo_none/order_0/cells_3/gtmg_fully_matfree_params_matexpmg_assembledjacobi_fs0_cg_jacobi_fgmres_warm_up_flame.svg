<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="283" onload="init(evt)" viewBox="0 0 1200 283" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:13px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:18px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 13 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (1 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="283.0" fill="url(#background)"  />
<text id="title" x="600.00" y="26" >Firedrake example</text>
<text id="details" x="10.00" y="265" > </text>
<text id="unzoom" x="10.00" y="26" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="26" >Search</text>
<text id="ignorecase" x="1174.00" y="26" >ic</text>
<text id="matched" x="1090.00" y="265" > </text>
<g id="frames">
<g >
<title>PCSetUp (858,314 us, 1.16%)</title><rect x="1066.6" y="119" width="13.6" height="15.0" fill="rgb(109.912515750961,109.912515750961,148.692744984057)" rx="2" ry="2" />
<text  x="1069.55" y="129.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (12,312 us, 0.02%)</title><rect x="26.7" y="71" width="0.2" height="15.0" fill="rgb(135.747171562046,135.747171562046,153.693000947493)" rx="2" ry="2" />
<text  x="29.68" y="81.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_form1_cell_integral_otherwise (2,825,113 us, 3.81%)</title><rect x="1126.7" y="151" width="45.0" height="15.0" fill="rgb(150.74547207243,139.410272185602,150.74547207243)" rx="2" ry="2" />
<text  x="1129.71" y="161.5" >Par..</text>
</g>
<g >
<title>Parloop_Cells_wrap_pyop2_kernel_uniform_extrusion (963,008 us, 1.30%)</title><rect x="11.3" y="119" width="15.4" height="15.0" fill="rgb(148.058323574579,159.618412441348,148.058323574579)" rx="2" ry="2" />
<text  x="14.34" y="129.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.solve (71,279,219 us, 96.21%)</title><rect x="54.7" y="87" width="1135.3" height="15.0" fill="rgb(155.580477558451,155.580477558451,146.27462201403)" rx="2" ry="2" />
<text  x="57.74" y="97.5" >firedrake.variational_solver.NonlinearVariationalSolver.solve</text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (8,699 us, 0.01%)</title><rect x="1067.0" y="167" width="0.1" height="15.0" fill="rgb(153.651403117904,153.651403117904,136.926030494456)" rx="2" ry="2" />
<text  x="1069.98" y="177.5" ></text>
</g>
<g >
<title>perfsolve (71,279,219 us, 96.21%)</title><rect x="54.7" y="71" width="1135.3" height="15.0" fill="rgb(155.308257273758,137.363305765478,137.363305765478)" rx="2" ry="2" />
<text  x="57.74" y="81.5" >perfsolve</text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.__init__ (8,451 us, 0.01%)</title><rect x="54.6" y="71" width="0.1" height="15.0" fill="rgb(155.667930881366,155.667930881366,146.698434271233)" rx="2" ry="2" />
<text  x="57.61" y="81.5" ></text>
</g>
<g >
<title>firedrake.slate.slac.optimise.optimise (32,140 us, 0.04%)</title><rect x="822.9" y="183" width="0.5" height="15.0" fill="rgb(139.996785855888,160.930755790902,139.996785855888)" rx="2" ry="2" />
<text  x="825.89" y="193.5" ></text>
</g>
<g >
<title>HybridRHS (62,557,239 us, 84.44%)</title><rect x="70.2" y="167" width="996.4" height="15.0" fill="rgb(152.215528673997,113.652386500646,113.652386500646)" rx="2" ry="2" />
<text  x="73.21" y="177.5" >HybridRHS</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (796,568 us, 1.08%)</title><rect x="1067.5" y="199" width="12.7" height="15.0" fill="rgb(105.37420678866,144.356275834097,144.356275834097)" rx="2" ry="2" />
<text  x="1070.53" y="209.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (2,825,113 us, 3.81%)</title><rect x="1126.7" y="167" width="45.0" height="15.0" fill="rgb(133.862579549467,133.862579549467,153.328241203123)" rx="2" ry="2" />
<text  x="1129.71" y="177.5" >pyo..</text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (8,699 us, 0.01%)</title><rect x="1067.0" y="151" width="0.1" height="15.0" fill="rgb(126.010318597579,163.207622553883,126.010318597579)" rx="2" ry="2" />
<text  x="1069.98" y="161.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (971,044 us, 1.31%)</title><rect x="54.7" y="215" width="15.5" height="15.0" fill="rgb(140.262754993593,140.262754993593,154.56698483747)" rx="2" ry="2" />
<text  x="57.74" y="225.5" ></text>
</g>
<g >
<title>firedrake.parloops.par_loop (796,568 us, 1.08%)</title><rect x="1067.5" y="151" width="12.7" height="15.0" fill="rgb(138.393863193261,161.191696689469,138.393863193261)" rx="2" ry="2" />
<text  x="1070.53" y="161.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.action (11,091 us, 0.01%)</title><rect x="54.3" y="87" width="0.1" height="15.0" fill="rgb(133.711527881873,95.7607901972986,133.711527881873)" rx="2" ry="2" />
<text  x="57.25" y="97.5" ></text>
</g>
<g >
<title>PCApply (63,528,283 us, 85.75%)</title><rect x="54.7" y="135" width="1011.9" height="15.0" fill="rgb(155.338234321154,155.338234321154,145.100674017898)" rx="2" ry="2" />
<text  x="57.74" y="145.5" >PCApply</text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (12,312 us, 0.02%)</title><rect x="26.7" y="119" width="0.2" height="15.0" fill="rgb(147.593877762153,159.694019899184,147.593877762153)" rx="2" ry="2" />
<text  x="29.68" y="129.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (12,312 us, 0.02%)</title><rect x="26.7" y="103" width="0.2" height="15.0" fill="rgb(151.89197990587,151.89197990587,128.399594928445)" rx="2" ry="2" />
<text  x="29.68" y="113.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (963,008 us, 1.30%)</title><rect x="11.3" y="135" width="15.4" height="15.0" fill="rgb(138.422772636044,152.924422535271,152.924422535271)" rx="2" ry="2" />
<text  x="14.34" y="145.5" ></text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (1,148,646 us, 1.55%)</title><rect x="1171.7" y="135" width="18.3" height="15.0" fill="rgb(149.016318023712,149.016318023712,114.46369503799)" rx="2" ry="2" />
<text  x="1174.71" y="145.5" ></text>
</g>
<g >
<title>firedrake.extrusion_utils.make_extruded_coords (1,037,232 us, 1.40%)</title><rect x="10.2" y="87" width="16.5" height="15.0" fill="rgb(155.612232935893,155.612232935893,146.42851345856)" rx="2" ry="2" />
<text  x="13.16" y="97.5" ></text>
</g>
<g >
<title>ParLoopExecute (39,105,958 us, 52.78%)</title><rect x="200.1" y="183" width="622.8" height="15.0" fill="rgb(111.200709871011,111.200709871011,148.94207287826)" rx="2" ry="2" />
<text  x="203.05" y="193.5" >ParLoopExecute</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (39,105,958 us, 52.78%)</title><rect x="200.1" y="215" width="622.8" height="15.0" fill="rgb(138.513267698469,138.513267698469,154.228374393252)" rx="2" ry="2" />
<text  x="203.05" y="225.5" >pyop2.global_kernel.GlobalKernel.compile</text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (8,699 us, 0.01%)</title><rect x="1067.0" y="183" width="0.1" height="15.0" fill="rgb(119.336421942003,119.336421942003,150.516726827484)" rx="2" ry="2" />
<text  x="1069.98" y="193.5" ></text>
</g>
<g >
<title>ParLoopExecute (971,044 us, 1.31%)</title><rect x="54.7" y="199" width="15.5" height="15.0" fill="rgb(112.718071177653,146.260240675688,146.260240675688)" rx="2" ry="2" />
<text  x="57.74" y="209.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (12,312 us, 0.02%)</title><rect x="26.7" y="87" width="0.2" height="15.0" fill="rgb(120.638609274518,148.313713515616,148.313713515616)" rx="2" ry="2" />
<text  x="29.68" y="97.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.LinearVariationalProblem.__init__ (22,317 us, 0.03%)</title><rect x="54.3" y="71" width="0.3" height="15.0" fill="rgb(139.896522822438,111.609839732498,139.896522822438)" rx="2" ry="2" />
<text  x="57.25" y="81.5" ></text>
</g>
<g >
<title>ParLoopExecute (5,743,976 us, 7.75%)</title><rect x="1080.2" y="135" width="91.5" height="15.0" fill="rgb(152.446502708786,115.423187434028,115.423187434028)" rx="2" ry="2" />
<text  x="1083.22" y="145.5" >ParLoopEx..</text>
</g>
<g >
<title>firedrake.parloops.par_loop (971,044 us, 1.31%)</title><rect x="54.7" y="183" width="15.5" height="15.0" fill="rgb(152.362810527731,114.781547379269,114.781547379269)" rx="2" ry="2" />
<text  x="57.74" y="193.5" ></text>
</g>
<g >
<title>SCForwardElim (63,528,283 us, 85.75%)</title><rect x="54.7" y="151" width="1011.9" height="15.0" fill="rgb(153.543480851344,123.833353193638,123.833353193638)" rx="2" ry="2" />
<text  x="57.74" y="161.5" >SCForwardElim</text>
</g>
<g >
<title>firedrake.interpolation.make_interpolator (26,327 us, 0.04%)</title><rect x="1067.1" y="151" width="0.4" height="15.0" fill="rgb(131.282326861841,162.349388650398,131.282326861841)" rx="2" ry="2" />
<text  x="1070.12" y="161.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (7,712 us, 0.01%)</title><rect x="1066.9" y="151" width="0.1" height="15.0" fill="rgb(154.128147201464,128.315795211228,128.315795211228)" rx="2" ry="2" />
<text  x="1069.85" y="161.5" ></text>
</g>
<g >
<title>ParLoopExecute (963,008 us, 1.30%)</title><rect x="11.3" y="103" width="15.4" height="15.0" fill="rgb(137.049745313726,152.568452488744,152.568452488744)" rx="2" ry="2" />
<text  x="14.34" y="113.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (796,568 us, 1.08%)</title><rect x="1067.5" y="183" width="12.7" height="15.0" fill="rgb(154.285148957055,154.285148957055,139.997260330345)" rx="2" ry="2" />
<text  x="1070.53" y="193.5" ></text>
</g>
<g >
<title>HybridInit (858,314 us, 1.16%)</title><rect x="1066.6" y="135" width="13.6" height="15.0" fill="rgb(154.221937804136,129.034856498375,129.034856498375)" rx="2" ry="2" />
<text  x="1069.55" y="145.5" ></text>
</g>
<g >
<title>SNESFunctionEval (6,892,622 us, 9.30%)</title><rect x="1080.2" y="119" width="109.8" height="15.0" fill="rgb(148.357523230927,148.357523230927,111.27107411911)" rx="2" ry="2" />
<text  x="1083.22" y="129.5" >SNESFunction..</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (971,044 us, 1.31%)</title><rect x="54.7" y="231" width="15.5" height="15.0" fill="rgb(149.151617352011,159.440434384556,149.151617352011)" rx="2" ry="2" />
<text  x="57.74" y="241.5" ></text>
</g>
<g >
<title>ParLoopExecute (796,568 us, 1.08%)</title><rect x="1067.5" y="167" width="12.7" height="15.0" fill="rgb(134.631623112957,161.80415437696,134.631623112957)" rx="2" ry="2" />
<text  x="1070.53" y="177.5" ></text>
</g>
<g >
<title>firedrake (74,088,447 us, 100.00%)</title><rect x="10.0" y="55" width="1180.0" height="15.0" fill="rgb(151.691916699939,151.691916699939,127.430057853548)" rx="2" ry="2" />
<text  x="13.00" y="65.5" >firedrake</text>
</g>
<g >
<title>all (74,088,447 us, 100%)</title><rect x="10.0" y="39" width="1180.0" height="15.0" fill="rgb(143.260278940143,143.260278940143,155.147150762608)" rx="2" ry="2" />
<text  x="13.00" y="49.5" ></text>
</g>
<g >
<title>CreateExtMesh (1,046,972 us, 1.41%)</title><rect x="10.0" y="71" width="16.7" height="15.0" fill="rgb(155.40253148378,138.086074708982,138.086074708982)" rx="2" ry="2" />
<text  x="13.00" y="81.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (2,910,859 us, 3.93%)</title><rect x="1080.3" y="167" width="46.4" height="15.0" fill="rgb(109.216864463616,109.216864463616,148.55810279941)" rx="2" ry="2" />
<text  x="1083.35" y="177.5" >pyop..</text>
</g>
<g >
<title>Parloop_Cells_wrap_form0_cell_integral_otherwise (2,918,863 us, 3.94%)</title><rect x="1080.2" y="151" width="46.5" height="15.0" fill="rgb(156.641714207929,147.586475594125,147.586475594125)" rx="2" ry="2" />
<text  x="1083.22" y="161.5" >Parl..</text>
</g>
<g >
<title>SNESSolve (71,279,219 us, 96.21%)</title><rect x="54.7" y="103" width="1135.3" height="15.0" fill="rgb(147.244458578914,159.750902091805,147.244458578914)" rx="2" ry="2" />
<text  x="57.74" y="113.5" >SNESSolve</text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalProblem.__init__ (11,226 us, 0.02%)</title><rect x="54.4" y="87" width="0.2" height="15.0" fill="rgb(151.869761741425,151.869761741425,128.291922285368)" rx="2" ry="2" />
<text  x="57.43" y="97.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_slate_loopy_knl_0 (39,105,958 us, 52.78%)</title><rect x="200.1" y="199" width="622.8" height="15.0" fill="rgb(109.272266322094,109.272266322094,148.56882573976)" rx="2" ry="2" />
<text  x="203.05" y="209.5" >Parloop_Cells_wrap_slate_loopy_knl_0</text>
</g>
<g >
<title>HybridBreak (971,044 us, 1.31%)</title><rect x="54.7" y="167" width="15.5" height="15.0" fill="rgb(152.835010889364,152.835010889364,132.969668156148)" rx="2" ry="2" />
<text  x="57.74" y="177.5" ></text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (15,266,558 us, 20.61%)</title><rect x="823.4" y="183" width="243.2" height="15.0" fill="rgb(111.849362942045,111.849362942045,149.067618633944)" rx="2" ry="2" />
<text  x="826.40" y="193.5" >firedrake.tsfc_interface.comp..</text>
</g>
<g >
<title>firedrake.__init__ (1,719,176 us, 2.32%)</title><rect x="26.9" y="71" width="27.4" height="15.0" fill="rgb(147.630449965247,147.630449965247,107.747565216197)" rx="2" ry="2" />
<text  x="29.87" y="81.5" >f..</text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (7,712 us, 0.01%)</title><rect x="1066.9" y="167" width="0.1" height="15.0" fill="rgb(105.779446629576,144.461338015075,144.461338015075)" rx="2" ry="2" />
<text  x="1069.85" y="177.5" ></text>
</g>
<g >
<title>KSPSolve (63,528,283 us, 85.75%)</title><rect x="54.7" y="119" width="1011.9" height="15.0" fill="rgb(152.770390841606,117.906329785646,117.906329785646)" rx="2" ry="2" />
<text  x="57.74" y="129.5" >KSPSolve</text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (11,226 us, 0.02%)</title><rect x="54.4" y="103" width="0.2" height="15.0" fill="rgb(117.502843934773,117.502843934773,150.161840761569)" rx="2" ry="2" />
<text  x="57.43" y="113.5" ></text>
</g>
</g>
</svg>
