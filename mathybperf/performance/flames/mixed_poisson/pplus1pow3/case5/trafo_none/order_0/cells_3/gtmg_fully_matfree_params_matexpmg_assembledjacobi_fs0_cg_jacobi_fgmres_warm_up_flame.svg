<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="283" onload="init(evt)" viewBox="0 0 1200 283" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:13px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:18px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 13 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (1 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="283.0" fill="url(#background)"  />
<text id="title" x="600.00" y="26" >Firedrake example</text>
<text id="details" x="10.00" y="265" > </text>
<text id="unzoom" x="10.00" y="26" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="26" >Search</text>
<text id="ignorecase" x="1174.00" y="26" >ic</text>
<text id="matched" x="1090.00" y="265" > </text>
<g id="frames">
<g >
<title>ParLoopExecute (722,466 us, 0.98%)</title><rect x="1025.2" y="167" width="11.6" height="15.0" fill="rgb(154.860925248621,133.93376023943,133.93376023943)" rx="2" ry="2" />
<text  x="1028.20" y="177.5" ></text>
</g>
<g >
<title>PCSetUp (780,655 us, 1.06%)</title><rect x="1024.3" y="119" width="12.5" height="15.0" fill="rgb(150.928869844299,150.928869844299,123.732215399293)" rx="2" ry="2" />
<text  x="1027.27" y="129.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.action (9,303 us, 0.01%)</title><rect x="66.4" y="119" width="0.2" height="15.0" fill="rgb(127.09154277334,127.09154277334,152.01771795613)" rx="2" ry="2" />
<text  x="69.43" y="129.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_pyop2_kernel_uniform_extrusion (1,536,456 us, 2.08%)</title><rect x="10.8" y="119" width="24.6" height="15.0" fill="rgb(154.69017839353,154.69017839353,141.960095291723)" rx="2" ry="2" />
<text  x="13.85" y="129.5" >P..</text>
</g>
<g >
<title>firedrake.slate.slac.optimise.optimise (25,225 us, 0.03%)</title><rect x="789.7" y="183" width="0.4" height="15.0" fill="rgb(136.54994348654,103.034230184258,136.54994348654)" rx="2" ry="2" />
<text  x="792.65" y="193.5" ></text>
</g>
<g >
<title>CreateExtMesh (1,599,692 us, 2.17%)</title><rect x="10.0" y="71" width="25.6" height="15.0" fill="rgb(150.297868102321,150.297868102321,120.674283880477)" rx="2" ry="2" />
<text  x="13.00" y="81.5" >C..</text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.solve (70,245,543 us, 95.21%)</title><rect x="66.6" y="87" width="1123.4" height="15.0" fill="rgb(143.594685183466,160.345051249203,143.594685183466)" rx="2" ry="2" />
<text  x="69.58" y="97.5" >firedrake.variational_solver.NonlinearVariationalSolver.solve</text>
</g>
<g >
<title>firedrake.parloops.par_loop (920,169 us, 1.25%)</title><rect x="66.6" y="183" width="14.7" height="15.0" fill="rgb(154.357211220617,130.071952691399,130.071952691399)" rx="2" ry="2" />
<text  x="69.58" y="193.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (7,556 us, 0.01%)</title><rect x="1024.7" y="151" width="0.1" height="15.0" fill="rgb(155.144997084176,136.111644312013,136.111644312013)" rx="2" ry="2" />
<text  x="1027.72" y="161.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (20,835 us, 0.03%)</title><rect x="66.1" y="103" width="0.3" height="15.0" fill="rgb(104.483188698328,144.125271144011,144.125271144011)" rx="2" ry="2" />
<text  x="69.10" y="113.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (10,280 us, 0.01%)</title><rect x="35.4" y="135" width="0.2" height="15.0" fill="rgb(114.090221069931,146.615983240352,146.615983240352)" rx="2" ry="2" />
<text  x="38.42" y="145.5" ></text>
</g>
<g >
<title>firedrake.interpolation.make_interpolator (22,651 us, 0.03%)</title><rect x="1024.8" y="151" width="0.4" height="15.0" fill="rgb(148.989309913995,148.989309913995,114.332809583207)" rx="2" ry="2" />
<text  x="1027.84" y="161.5" ></text>
</g>
<g >
<title>HybridRHS (58,962,642 us, 79.91%)</title><rect x="81.3" y="167" width="943.0" height="15.0" fill="rgb(145.088372443891,160.101892857971,145.088372443891)" rx="2" ry="2" />
<text  x="84.30" y="177.5" >HybridRHS</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (1,536,456 us, 2.08%)</title><rect x="10.8" y="135" width="24.6" height="15.0" fill="rgb(136.215702659774,102.17773806567,136.215702659774)" rx="2" ry="2" />
<text  x="13.85" y="145.5" >p..</text>
</g>
<g >
<title>CreateFunctionSpace (10,280 us, 0.01%)</title><rect x="35.4" y="103" width="0.2" height="15.0" fill="rgb(150.085987133106,137.720342028584,150.085987133106)" rx="2" ry="2" />
<text  x="38.42" y="113.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (10,280 us, 0.01%)</title><rect x="35.4" y="151" width="0.2" height="15.0" fill="rgb(150.913564129573,150.913564129573,123.65804155101)" rx="2" ry="2" />
<text  x="38.42" y="161.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_slate_loopy_knl_0 (36,520,473 us, 49.50%)</title><rect x="205.6" y="199" width="584.1" height="15.0" fill="rgb(147.126614656916,159.770085986084,147.126614656916)" rx="2" ry="2" />
<text  x="208.59" y="209.5" >Parloop_Cells_wrap_slate_loopy_knl_0</text>
</g>
<g >
<title>firedrake.ufl_expr.action (20,819 us, 0.03%)</title><rect x="65.8" y="87" width="0.3" height="15.0" fill="rgb(148.40617708138,148.40617708138,111.50685816361)" rx="2" ry="2" />
<text  x="68.76" y="97.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (912,308 us, 1.24%)</title><rect x="66.7" y="231" width="14.6" height="15.0" fill="rgb(110.694500167933,110.694500167933,148.844096806697)" rx="2" ry="2" />
<text  x="69.70" y="241.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (4,517,500 us, 6.12%)</title><rect x="1036.9" y="167" width="72.2" height="15.0" fill="rgb(134.513959627597,134.513959627597,153.454314766632)" rx="2" ry="2" />
<text  x="1039.90" y="177.5" >pyop2.g..</text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalProblem.__init__ (20,835 us, 0.03%)</title><rect x="66.1" y="87" width="0.3" height="15.0" fill="rgb(123.619100355524,163.596890639798,123.619100355524)" rx="2" ry="2" />
<text  x="69.10" y="97.5" ></text>
</g>
<g >
<title>Log_Event_form0_cell_integral_otherwise (8,724 us, 0.01%)</title><rect x="1036.8" y="167" width="0.1" height="15.0" fill="rgb(131.645222703889,151.167279960268,151.167279960268)" rx="2" ry="2" />
<text  x="1039.76" y="177.5" ></text>
</g>
<g >
<title>SNESSolve (70,245,543 us, 95.21%)</title><rect x="66.6" y="103" width="1123.4" height="15.0" fill="rgb(144.336503695207,144.336503695207,155.355452328105)" rx="2" ry="2" />
<text  x="69.58" y="113.5" >SNESSolve</text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (2,347,266 us, 3.18%)</title><rect x="1152.5" y="135" width="37.5" height="15.0" fill="rgb(148.741378556182,148.741378556182,113.131296079959)" rx="2" ry="2" />
<text  x="1155.46" y="145.5" >fi..</text>
</g>
<g >
<title>firedrake.__init__ (1,858,439 us, 2.52%)</title><rect x="35.9" y="71" width="29.7" height="15.0" fill="rgb(147.975243992657,147.975243992657,109.418490118261)" rx="2" ry="2" />
<text  x="38.91" y="81.5" >f..</text>
</g>
<g >
<title>CreateFunctionSpace (20,320 us, 0.03%)</title><rect x="35.6" y="71" width="0.3" height="15.0" fill="rgb(121.540927007743,148.547647742748,148.547647742748)" rx="2" ry="2" />
<text  x="38.58" y="81.5" ></text>
</g>
<g >
<title>ParLoopExecute (36,520,473 us, 49.50%)</title><rect x="205.6" y="183" width="584.1" height="15.0" fill="rgb(114.793818907886,114.793818907886,149.63751333701)" rx="2" ry="2" />
<text  x="208.59" y="193.5" >ParLoopExecute</text>
</g>
<g >
<title>SNESFunctionEval (9,582,077 us, 12.99%)</title><rect x="1036.8" y="119" width="153.2" height="15.0" fill="rgb(154.651256053536,132.326296410442,132.326296410442)" rx="2" ry="2" />
<text  x="1039.76" y="129.5" >SNESFunctionEval</text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.__init__ (9,303 us, 0.01%)</title><rect x="66.4" y="71" width="0.2" height="15.0" fill="rgb(116.74072955793,147.303152107611,147.303152107611)" rx="2" ry="2" />
<text  x="69.43" y="81.5" ></text>
</g>
<g >
<title>ParLoopExecute (1,536,456 us, 2.08%)</title><rect x="10.8" y="103" width="24.6" height="15.0" fill="rgb(152.55822702105,116.279740494714,116.279740494714)" rx="2" ry="2" />
<text  x="13.85" y="113.5" >P..</text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (8,392 us, 0.01%)</title><rect x="65.6" y="103" width="0.2" height="15.0" fill="rgb(109.951390161208,109.951390161208,148.70026906346)" rx="2" ry="2" />
<text  x="68.63" y="113.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (722,466 us, 0.98%)</title><rect x="1025.2" y="199" width="11.6" height="15.0" fill="rgb(145.512033172625,160.032924832363,145.512033172625)" rx="2" ry="2" />
<text  x="1028.20" y="209.5" ></text>
</g>
<g >
<title>KSPSolve (59,882,811 us, 81.16%)</title><rect x="66.6" y="119" width="957.7" height="15.0" fill="rgb(149.142142896048,149.142142896048,115.073461727001)" rx="2" ry="2" />
<text  x="69.58" y="129.5" >KSPSolve</text>
</g>
<g >
<title>CreateFunctionSpace (9,713 us, 0.01%)</title><rect x="1024.6" y="151" width="0.1" height="15.0" fill="rgb(107.159506474338,144.819131308162,144.819131308162)" rx="2" ry="2" />
<text  x="1027.56" y="161.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (8,392 us, 0.01%)</title><rect x="65.6" y="87" width="0.2" height="15.0" fill="rgb(149.16323502303,159.438543135786,149.16323502303)" rx="2" ry="2" />
<text  x="68.63" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (10,280 us, 0.01%)</title><rect x="35.4" y="119" width="0.2" height="15.0" fill="rgb(156.335677267399,145.240192383395,145.240192383395)" rx="2" ry="2" />
<text  x="38.42" y="129.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (912,308 us, 1.24%)</title><rect x="66.7" y="215" width="14.6" height="15.0" fill="rgb(124.047759408931,149.197567254167,149.197567254167)" rx="2" ry="2" />
<text  x="69.70" y="225.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (2,708,587 us, 3.67%)</title><rect x="1109.1" y="167" width="43.4" height="15.0" fill="rgb(132.874941015063,132.874941015063,153.137085357754)" rx="2" ry="2" />
<text  x="1112.14" y="177.5" >pyo..</text>
</g>
<g >
<title>Parloop_Cells_wrap_form1_cell_integral_otherwise (2,708,587 us, 3.67%)</title><rect x="1109.1" y="151" width="43.4" height="15.0" fill="rgb(115.816910020759,115.816910020759,149.83553097176)" rx="2" ry="2" />
<text  x="1112.14" y="161.5" >Par..</text>
</g>
<g >
<title>all (73,783,343 us, 100%)</title><rect x="10.0" y="39" width="1180.0" height="15.0" fill="rgb(152.915878566259,119.021735674649,119.021735674649)" rx="2" ry="2" />
<text  x="13.00" y="49.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (722,466 us, 0.98%)</title><rect x="1025.2" y="183" width="11.6" height="15.0" fill="rgb(152.673532896414,152.673532896414,132.187120959546)" rx="2" ry="2" />
<text  x="1028.20" y="193.5" ></text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (14,644,968 us, 19.85%)</title><rect x="790.1" y="183" width="234.2" height="15.0" fill="rgb(124.294046780565,149.261419535702,149.261419535702)" rx="2" ry="2" />
<text  x="793.06" y="193.5" >firedrake.tsfc_interface.com..</text>
</g>
<g >
<title>firedrake.functionspace.VectorFunctionSpace (8,392 us, 0.01%)</title><rect x="65.6" y="71" width="0.2" height="15.0" fill="rgb(123.443256661225,123.443256661225,151.311598063463)" rx="2" ry="2" />
<text  x="68.63" y="81.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (8,392 us, 0.01%)</title><rect x="65.6" y="135" width="0.2" height="15.0" fill="rgb(136.585282129084,103.124785455778,136.585282129084)" rx="2" ry="2" />
<text  x="68.63" y="145.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (8,392 us, 0.01%)</title><rect x="65.6" y="119" width="0.2" height="15.0" fill="rgb(129.616159077972,162.620625266377,129.616159077972)" rx="2" ry="2" />
<text  x="68.63" y="129.5" ></text>
</g>
<g >
<title>firedrake.extrusion_utils.make_extruded_coords (1,589,412 us, 2.15%)</title><rect x="10.0" y="87" width="25.4" height="15.0" fill="rgb(108.527447310313,145.173782636007,145.173782636007)" rx="2" ry="2" />
<text  x="13.00" y="97.5" >f..</text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (20,320 us, 0.03%)</title><rect x="35.6" y="87" width="0.3" height="15.0" fill="rgb(130.220189641995,130.220189641995,152.623262511354)" rx="2" ry="2" />
<text  x="38.58" y="97.5" ></text>
</g>
<g >
<title>firedrake (73,783,343 us, 100.00%)</title><rect x="10.0" y="55" width="1180.0" height="15.0" fill="rgb(115.261366409243,115.261366409243,149.728006401789)" rx="2" ry="2" />
<text  x="13.00" y="65.5" >firedrake</text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (20,320 us, 0.03%)</title><rect x="35.6" y="119" width="0.3" height="15.0" fill="rgb(148.612051823011,159.528270633463,148.612051823011)" rx="2" ry="2" />
<text  x="38.58" y="129.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (10,755 us, 0.01%)</title><rect x="1189.8" y="151" width="0.2" height="15.0" fill="rgb(147.096077828325,159.775057097715,147.096077828325)" rx="2" ry="2" />
<text  x="1192.83" y="161.5" ></text>
</g>
<g >
<title>firedrake.parloops.par_loop (722,466 us, 0.98%)</title><rect x="1025.2" y="151" width="11.6" height="15.0" fill="rgb(156.1538584685,143.846248258502,143.846248258502)" rx="2" ry="2" />
<text  x="1028.20" y="161.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (7,556 us, 0.01%)</title><rect x="1024.7" y="167" width="0.1" height="15.0" fill="rgb(141.590573592576,141.590573592576,154.82398198566)" rx="2" ry="2" />
<text  x="1027.72" y="177.5" ></text>
</g>
<g >
<title>HybridBreak (920,169 us, 1.25%)</title><rect x="66.6" y="167" width="14.7" height="15.0" fill="rgb(140.101829335,160.913655689651,140.101829335)" rx="2" ry="2" />
<text  x="69.58" y="177.5" ></text>
</g>
<g >
<title>firedrake.assemble.allocate_matrix (9,303 us, 0.01%)</title><rect x="66.4" y="87" width="0.2" height="15.0" fill="rgb(136.42916218529,136.42916218529,153.824999132637)" rx="2" ry="2" />
<text  x="69.43" y="97.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (7,556 us, 0.01%)</title><rect x="1024.7" y="183" width="0.1" height="15.0" fill="rgb(134.699282382388,151.959073210249,151.959073210249)" rx="2" ry="2" />
<text  x="1027.72" y="193.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (36,520,473 us, 49.50%)</title><rect x="205.6" y="215" width="584.1" height="15.0" fill="rgb(112.975864391906,112.975864391906,149.285651172627)" rx="2" ry="2" />
<text  x="208.59" y="225.5" >pyop2.global_kernel.GlobalKernel.compile</text>
</g>
<g >
<title>HybridInit (780,655 us, 1.06%)</title><rect x="1024.3" y="135" width="12.5" height="15.0" fill="rgb(148.880102615588,148.880102615588,113.803574214006)" rx="2" ry="2" />
<text  x="1027.27" y="145.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.LinearVariationalProblem.__init__ (41,654 us, 0.06%)</title><rect x="65.8" y="71" width="0.6" height="15.0" fill="rgb(107.163602317096,144.820193193321,144.820193193321)" rx="2" ry="2" />
<text  x="68.76" y="81.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (20,320 us, 0.03%)</title><rect x="35.6" y="103" width="0.3" height="15.0" fill="rgb(131.894487554925,131.894487554925,152.947320171921)" rx="2" ry="2" />
<text  x="38.58" y="113.5" ></text>
</g>
<g >
<title>PCApply (59,882,811 us, 81.16%)</title><rect x="66.6" y="135" width="957.7" height="15.0" fill="rgb(121.831505715755,148.622982963344,148.622982963344)" rx="2" ry="2" />
<text  x="69.58" y="145.5" >PCApply</text>
</g>
<g >
<title>perfsolve (70,245,543 us, 95.21%)</title><rect x="66.6" y="71" width="1123.4" height="15.0" fill="rgb(131.530076292815,162.309057347681,131.530076292815)" rx="2" ry="2" />
<text  x="69.58" y="81.5" >perfsolve</text>
</g>
<g >
<title>ParLoopExecute (7,234,811 us, 9.81%)</title><rect x="1036.8" y="135" width="115.7" height="15.0" fill="rgb(153.284612951165,153.284612951165,135.148508917184)" rx="2" ry="2" />
<text  x="1039.76" y="145.5" >ParLoopExecute</text>
</g>
<g >
<title>firedrake.matrix_free.operators.ImplicitMatrixContext.__init__ (9,303 us, 0.01%)</title><rect x="66.4" y="103" width="0.2" height="15.0" fill="rgb(150.88855511351,150.88855511351,123.536844011627)" rx="2" ry="2" />
<text  x="69.43" y="113.5" ></text>
</g>
<g >
<title>SCForwardElim (59,882,811 us, 81.16%)</title><rect x="66.6" y="151" width="957.7" height="15.0" fill="rgb(140.499552321044,153.462846898048,153.462846898048)" rx="2" ry="2" />
<text  x="69.58" y="161.5" >SCForwardElim</text>
</g>
<g >
<title>firedrake.functionspace.VectorFunctionSpace (10,280 us, 0.01%)</title><rect x="35.4" y="87" width="0.2" height="15.0" fill="rgb(150.812321399846,139.581573587105,150.812321399846)" rx="2" ry="2" />
<text  x="38.42" y="97.5" ></text>
</g>
<g >
<title>ParLoopExecute (912,308 us, 1.24%)</title><rect x="66.7" y="199" width="14.6" height="15.0" fill="rgb(151.393698582499,151.393698582499,125.984846976725)" rx="2" ry="2" />
<text  x="69.70" y="209.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_form0_cell_integral_otherwise (4,526,224 us, 6.13%)</title><rect x="1036.8" y="151" width="72.3" height="15.0" fill="rgb(144.4297883525,123.226332653282,144.4297883525)" rx="2" ry="2" />
<text  x="1039.76" y="161.5" >Parloop..</text>
</g>
</g>
</svg>
