<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="299" onload="init(evt)" viewBox="0 0 1200 299" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:13px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:18px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 13 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (1 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="299.0" fill="url(#background)"  />
<text id="title" x="600.00" y="26" >Firedrake example</text>
<text id="details" x="10.00" y="281" > </text>
<text id="unzoom" x="10.00" y="26" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="26" >Search</text>
<text id="ignorecase" x="1174.00" y="26" >ic</text>
<text id="matched" x="1090.00" y="281" > </text>
<g id="frames">
<g >
<title>firedrake.interpolation.make_interpolator (37,029 us, 0.29%)</title><rect x="376.7" y="151" width="3.5" height="15.0" fill="rgb(120.492829844131,148.275918848478,148.275918848478)" rx="2" ry="2" />
<text  x="379.75" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (13,643 us, 0.11%)</title><rect x="96.7" y="87" width="1.3" height="15.0" fill="rgb(109.582274038396,145.447256232177,145.447256232177)" rx="2" ry="2" />
<text  x="99.69" y="97.5" ></text>
</g>
<g >
<title>ParLoopExecute (758,519 us, 5.98%)</title><rect x="380.7" y="167" width="70.6" height="15.0" fill="rgb(155.872991334538,141.692933564792,141.692933564792)" rx="2" ry="2" />
<text  x="383.70" y="177.5" >ParLoop..</text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.__init__ (8,087 us, 0.06%)</title><rect x="264.7" y="71" width="0.8" height="15.0" fill="rgb(150.657622875329,139.185158618031,150.657622875329)" rx="2" ry="2" />
<text  x="267.72" y="81.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (1,930 us, 0.02%)</title><rect x="374.8" y="231" width="0.1" height="15.0" fill="rgb(126.625155656406,163.10753280012,126.625155656406)" rx="2" ry="2" />
<text  x="377.76" y="241.5" ></text>
</g>
<g >
<title>ParLoopExecute (6,658,287 us, 52.52%)</title><rect x="451.6" y="135" width="619.8" height="15.0" fill="rgb(154.252829106308,129.271689815025,129.271689815025)" rx="2" ry="2" />
<text  x="454.60" y="145.5" >ParLoopExecute</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (3,106,834 us, 24.51%)</title><rect x="782.2" y="167" width="289.2" height="15.0" fill="rgb(143.735936000645,160.322056930128,143.735936000645)" rx="2" ry="2" />
<text  x="785.17" y="177.5" >pyop2.global_kernel.GlobalKernel.co..</text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (758,519 us, 5.98%)</title><rect x="380.7" y="183" width="70.6" height="15.0" fill="rgb(127.795135325555,162.917070993514,127.795135325555)" rx="2" ry="2" />
<text  x="383.70" y="193.5" >Parloop..</text>
</g>
<g >
<title>PCSetUp (840,202 us, 6.63%)</title><rect x="373.1" y="119" width="78.2" height="15.0" fill="rgb(151.005843334656,151.005843334656,124.105240775639)" rx="2" ry="2" />
<text  x="376.10" y="129.5" >PCSetUp</text>
</g>
<g >
<title>firedrake.utility_meshes.RectangleMesh (2,130 us, 0.02%)</title><rect x="262.6" y="87" width="0.1" height="15.0" fill="rgb(122.58570968792,122.58570968792,151.14562122992)" rx="2" ry="2" />
<text  x="265.55" y="97.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (6,127 us, 0.05%)</title><rect x="96.1" y="103" width="0.6" height="15.0" fill="rgb(128.152451561526,128.152451561526,152.223055140941)" rx="2" ry="2" />
<text  x="99.12" y="113.5" ></text>
</g>
<g >
<title>firedrake.utility_meshes.SquareMesh (2,130 us, 0.02%)</title><rect x="262.6" y="71" width="0.1" height="15.0" fill="rgb(114.518358489722,146.726981830669,146.726981830669)" rx="2" ry="2" />
<text  x="265.55" y="81.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (3,525,943 us, 27.81%)</title><rect x="452.5" y="167" width="328.2" height="15.0" fill="rgb(130.840477910065,162.421317549524,130.840477910065)" rx="2" ry="2" />
<text  x="455.52" y="177.5" >pyop2.global_kernel.GlobalKernel.compile</text>
</g>
<g >
<title>CreateFunctionSpace (5,275 us, 0.04%)</title><rect x="376.1" y="199" width="0.5" height="15.0" fill="rgb(127.862107525573,162.906168542349,127.862107525573)" rx="2" ry="2" />
<text  x="379.13" y="209.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalProblem.__init__ (10,967 us, 0.09%)</title><rect x="263.7" y="87" width="1.0" height="15.0" fill="rgb(109.377689769138,145.394215866073,145.394215866073)" rx="2" ry="2" />
<text  x="266.70" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (7,808 us, 0.06%)</title><rect x="374.9" y="167" width="0.8" height="15.0" fill="rgb(135.099740747579,152.062895749372,152.062895749372)" rx="2" ry="2" />
<text  x="377.94" y="177.5" ></text>
</g>
<g >
<title>HybridInit (840,202 us, 6.63%)</title><rect x="373.1" y="135" width="78.2" height="15.0" fill="rgb(153.073624221795,120.231119033762,120.231119033762)" rx="2" ry="2" />
<text  x="376.10" y="145.5" >HybridInit</text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (6,127 us, 0.05%)</title><rect x="96.1" y="135" width="0.6" height="15.0" fill="rgb(126.665295910479,149.876187828643,149.876187828643)" rx="2" ry="2" />
<text  x="99.12" y="145.5" ></text>
</g>
<g >
<title>firedrake.functionspace.VectorFunctionSpace (5,500 us, 0.04%)</title><rect x="262.0" y="71" width="0.6" height="15.0" fill="rgb(141.273523407546,141.273523407546,154.762617433719)" rx="2" ry="2" />
<text  x="265.04" y="81.5" ></text>
</g>
<g >
<title>ParLoopExecute (891,245 us, 7.03%)</title><rect x="13.2" y="103" width="82.9" height="15.0" fill="rgb(109.375557703745,145.393663108378,145.393663108378)" rx="2" ry="2" />
<text  x="16.16" y="113.5" >ParLoopE..</text>
</g>
<g >
<title>Parloop_Cells_wrap_form1_cell_integral_otherwise (3,122,514 us, 24.63%)</title><rect x="780.7" y="151" width="290.7" height="15.0" fill="rgb(130.227501376289,162.521104427116,130.227501376289)" rx="2" ry="2" />
<text  x="783.71" y="161.5" >Parloop_Cells_wrap_form1_cell_integ..</text>
</g>
<g >
<title>firedrake.assemble.allocate_matrix (6,170 us, 0.05%)</title><rect x="264.9" y="87" width="0.6" height="15.0" fill="rgb(132.272140668928,162.188256170175,132.272140668928)" rx="2" ry="2" />
<text  x="267.90" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspace.MixedFunctionSpace (1,930 us, 0.02%)</title><rect x="374.8" y="167" width="0.1" height="15.0" fill="rgb(155.135564889898,155.135564889898,144.118506774119)" rx="2" ry="2" />
<text  x="377.76" y="177.5" ></text>
</g>
<g >
<title>Log_Event_form1_cell_integral_otherwise (15,680 us, 0.12%)</title><rect x="780.7" y="167" width="1.5" height="15.0" fill="rgb(151.230789010217,151.230789010217,125.195362126435)" rx="2" ry="2" />
<text  x="783.71" y="177.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (13,643 us, 0.11%)</title><rect x="96.7" y="119" width="1.3" height="15.0" fill="rgb(156.683377256904,147.90589230293,147.90589230293)" rx="2" ry="2" />
<text  x="99.69" y="129.5" ></text>
</g>
<g >
<title>firedrake.parloops.par_loop (1,074,757 us, 8.48%)</title><rect x="265.6" y="183" width="100.1" height="15.0" fill="rgb(142.234966841241,160.566400746775,142.234966841241)" rx="2" ry="2" />
<text  x="268.63" y="193.5" >firedrake.p..</text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (6,127 us, 0.05%)</title><rect x="96.1" y="119" width="0.6" height="15.0" fill="rgb(134.30550379639,161.85724356803,134.30550379639)" rx="2" ry="2" />
<text  x="99.12" y="129.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (5,500 us, 0.04%)</title><rect x="262.0" y="135" width="0.6" height="15.0" fill="rgb(152.894423000128,118.857243000984,118.857243000984)" rx="2" ry="2" />
<text  x="265.04" y="145.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (1,930 us, 0.02%)</title><rect x="374.8" y="199" width="0.1" height="15.0" fill="rgb(110.463762082047,110.463762082047,148.799437822332)" rx="2" ry="2" />
<text  x="377.76" y="209.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_pyop2_kernel_uniform_extrusion (891,245 us, 7.03%)</title><rect x="13.2" y="119" width="82.9" height="15.0" fill="rgb(108.712327720683,145.221714594251,145.221714594251)" rx="2" ry="2" />
<text  x="16.16" y="129.5" >Parloop_..</text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (7,808 us, 0.06%)</title><rect x="374.9" y="199" width="0.8" height="15.0" fill="rgb(152.656618007793,152.656618007793,132.105148806998)" rx="2" ry="2" />
<text  x="377.94" y="209.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (2,576 us, 0.02%)</title><rect x="265.2" y="119" width="0.3" height="15.0" fill="rgb(126.567775487969,149.85090475614,149.85090475614)" rx="2" ry="2" />
<text  x="268.23" y="129.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.solve (9,932,632 us, 78.35%)</title><rect x="265.5" y="87" width="924.5" height="15.0" fill="rgb(143.299437324838,120.329808144898,143.299437324838)" rx="2" ry="2" />
<text  x="268.47" y="97.5" >firedrake.variational_solver.NonlinearVariationalSolver.solve</text>
</g>
<g >
<title>SCForwardElim (1,156,252 us, 9.12%)</title><rect x="265.5" y="151" width="107.6" height="15.0" fill="rgb(149.699712861647,149.699712861647,117.77553156029)" rx="2" ry="2" />
<text  x="268.47" y="161.5" >SCForwardElim</text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (7,808 us, 0.06%)</title><rect x="374.9" y="183" width="0.8" height="15.0" fill="rgb(129.853839312784,162.581933135128,129.853839312784)" rx="2" ry="2" />
<text  x="377.94" y="193.5" ></text>
</g>
<g >
<title>all (12,677,284 us, 100%)</title><rect x="10.0" y="39" width="1180.0" height="15.0" fill="rgb(152.284837736401,114.183755979075,114.183755979075)" rx="2" ry="2" />
<text  x="13.00" y="49.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (9,629 us, 0.08%)</title><rect x="263.8" y="103" width="0.9" height="15.0" fill="rgb(130.419807578941,150.849579742688,150.849579742688)" rx="2" ry="2" />
<text  x="266.82" y="113.5" ></text>
</g>
<g >
<title>PCApply (1,156,252 us, 9.12%)</title><rect x="265.5" y="135" width="107.6" height="15.0" fill="rgb(152.119541668241,112.91648612318,112.91648612318)" rx="2" ry="2" />
<text  x="268.47" y="145.5" >PCApply</text>
</g>
<g >
<title>Log_Event_form0_cell_integral_otherwise (9,830 us, 0.08%)</title><rect x="451.6" y="167" width="0.9" height="15.0" fill="rgb(114.108538107159,146.620732101856,146.620732101856)" rx="2" ry="2" />
<text  x="454.60" y="177.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (6,127 us, 0.05%)</title><rect x="96.1" y="151" width="0.6" height="15.0" fill="rgb(135.648781890275,135.648781890275,153.673957785214)" rx="2" ry="2" />
<text  x="99.12" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (2,334 us, 0.02%)</title><rect x="376.4" y="247" width="0.2" height="15.0" fill="rgb(151.316849984303,151.316849984303,125.612426847007)" rx="2" ry="2" />
<text  x="379.41" y="257.5" ></text>
</g>
<g >
<title>SNESFunctionEval (7,936,178 us, 62.60%)</title><rect x="451.3" y="119" width="738.7" height="15.0" fill="rgb(129.467173520786,162.644878729174,129.467173520786)" rx="2" ry="2" />
<text  x="454.30" y="129.5" >SNESFunctionEval</text>
</g>
<g >
<title>HybridRHS (79,767 us, 0.63%)</title><rect x="365.7" y="167" width="7.4" height="15.0" fill="rgb(126.765170270782,163.084739723361,126.765170270782)" rx="2" ry="2" />
<text  x="368.67" y="177.5" ></text>
</g>
<g >
<title>firedrake.mesh.MeshTopology._facets (2,390 us, 0.02%)</title><rect x="262.3" y="151" width="0.3" height="15.0" fill="rgb(155.848216225308,141.502991060696,141.502991060696)" rx="2" ry="2" />
<text  x="265.33" y="161.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.action (10,205 us, 0.08%)</title><rect x="262.7" y="87" width="1.0" height="15.0" fill="rgb(151.061720399946,159.129487376753,151.061720399946)" rx="2" ry="2" />
<text  x="265.75" y="97.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (5,500 us, 0.04%)</title><rect x="262.0" y="87" width="0.6" height="15.0" fill="rgb(150.336388995417,159.247564582141,150.336388995417)" rx="2" ry="2" />
<text  x="265.04" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (13,643 us, 0.11%)</title><rect x="96.7" y="103" width="1.3" height="15.0" fill="rgb(142.509433481066,153.983927198795,153.983927198795)" rx="2" ry="2" />
<text  x="99.69" y="113.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (1,930 us, 0.02%)</title><rect x="374.8" y="215" width="0.1" height="15.0" fill="rgb(137.238266332595,104.798057477276,137.238266332595)" rx="2" ry="2" />
<text  x="377.76" y="225.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (1,414 us, 0.01%)</title><rect x="1189.9" y="183" width="0.1" height="15.0" fill="rgb(142.212133155997,142.212133155997,154.944283836645)" rx="2" ry="2" />
<text  x="1192.87" y="193.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_form0_cell_integral_otherwise (3,535,773 us, 27.89%)</title><rect x="451.6" y="151" width="329.1" height="15.0" fill="rgb(155.007669516165,135.05879962393,135.05879962393)" rx="2" ry="2" />
<text  x="454.60" y="161.5" >Parloop_Cells_wrap_form0_cell_integral_o..</text>
</g>
<g >
<title>SNESSolve (9,932,632 us, 78.35%)</title><rect x="265.5" y="103" width="924.5" height="15.0" fill="rgb(134.366498442544,161.847314207028,134.366498442544)" rx="2" ry="2" />
<text  x="268.47" y="113.5" >SNESSolve</text>
</g>
<g >
<title>firedrake.extrusion_utils.make_extruded_coords (922,813 us, 7.28%)</title><rect x="10.2" y="87" width="85.9" height="15.0" fill="rgb(156.599344533441,147.261641423045,147.261641423045)" rx="2" ry="2" />
<text  x="13.22" y="97.5" >firedrake..</text>
</g>
<g >
<title>firedrake.ufl_expr.action (3,594 us, 0.03%)</title><rect x="264.9" y="119" width="0.3" height="15.0" fill="rgb(155.111478622796,135.854669441435,135.854669441435)" rx="2" ry="2" />
<text  x="267.90" y="129.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (1,930 us, 0.02%)</title><rect x="374.8" y="183" width="0.1" height="15.0" fill="rgb(152.397083154396,152.397083154396,130.847402978997)" rx="2" ry="2" />
<text  x="377.76" y="193.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (9,738 us, 0.08%)</title><rect x="374.8" y="151" width="0.9" height="15.0" fill="rgb(147.660553109837,147.660553109837,107.893449686132)" rx="2" ry="2" />
<text  x="377.76" y="161.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.LinearVariationalProblem.__init__ (21,172 us, 0.17%)</title><rect x="262.7" y="71" width="2.0" height="15.0" fill="rgb(151.480585375439,141.294000024562,151.480585375439)" rx="2" ry="2" />
<text  x="265.75" y="81.5" ></text>
</g>
<g >
<title>firedrake.parloops.par_loop (763,937 us, 6.03%)</title><rect x="380.2" y="151" width="71.1" height="15.0" fill="rgb(147.181194453848,159.761200902862,147.181194453848)" rx="2" ry="2" />
<text  x="383.19" y="161.5" >firedra..</text>
</g>
<g >
<title>firedrake.slate.slac.optimise.optimise (9,929 us, 0.08%)</title><rect x="372.2" y="183" width="0.9" height="15.0" fill="rgb(130.01710492137,162.5553550128,130.01710492137)" rx="2" ry="2" />
<text  x="375.17" y="193.5" ></text>
</g>
<g >
<title>firedrake.functionspace.VectorFunctionSpace (6,127 us, 0.05%)</title><rect x="96.1" y="87" width="0.6" height="15.0" fill="rgb(138.533037137069,161.169040466059,138.533037137069)" rx="2" ry="2" />
<text  x="99.12" y="97.5" ></text>
</g>
<g >
<title>KSPSolve (1,156,252 us, 9.12%)</title><rect x="265.5" y="119" width="107.6" height="15.0" fill="rgb(148.191976745897,148.191976745897,110.468810383962)" rx="2" ry="2" />
<text  x="268.47" y="129.5" >KSPSolve</text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (10,318 us, 0.08%)</title><rect x="375.7" y="167" width="0.9" height="15.0" fill="rgb(152.416022469313,152.416022469313,130.939185812826)" rx="2" ry="2" />
<text  x="378.66" y="177.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (1,068,115 us, 8.43%)</title><rect x="266.3" y="231" width="99.4" height="15.0" fill="rgb(128.7977601509,162.753852998691,128.7977601509)" rx="2" ry="2" />
<text  x="269.25" y="241.5" >pyop2.glob..</text>
</g>
<g >
<title>CreateMesh (2,058 us, 0.02%)</title><rect x="98.0" y="71" width="0.2" height="15.0" fill="rgb(152.683265261717,117.238367006494,117.238367006494)" rx="2" ry="2" />
<text  x="100.96" y="81.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (1,068,115 us, 8.43%)</title><rect x="266.3" y="215" width="99.4" height="15.0" fill="rgb(155.85823816827,141.579825956734,141.579825956734)" rx="2" ry="2" />
<text  x="269.25" y="225.5" >Parloop_Ce..</text>
</g>
<g >
<title>HybridBreak (1,076,485 us, 8.49%)</title><rect x="265.5" y="167" width="100.2" height="15.0" fill="rgb(106.942411648664,144.762847464469,144.762847464469)" rx="2" ry="2" />
<text  x="268.47" y="177.5" >HybridBreak</text>
</g>
<g >
<title>firedrake.__init__ (1,760,712 us, 13.89%)</title><rect x="98.2" y="71" width="163.8" height="15.0" fill="rgb(143.861938712819,160.301544860704,143.861938712819)" rx="2" ry="2" />
<text  x="101.15" y="81.5" >firedrake.__init__</text>
</g>
<g >
<title>CreateFunctionSpace (13,643 us, 0.11%)</title><rect x="96.7" y="71" width="1.3" height="15.0" fill="rgb(149.61136151581,149.61136151581,117.347367345846)" rx="2" ry="2" />
<text  x="99.69" y="81.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (3,230 us, 0.03%)</title><rect x="1189.7" y="167" width="0.3" height="15.0" fill="rgb(127.101713715553,163.029953581189,127.101713715553)" rx="2" ry="2" />
<text  x="1192.70" y="177.5" ></text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (1,274,644 us, 10.05%)</title><rect x="1071.4" y="135" width="118.6" height="15.0" fill="rgb(112.296729564151,112.296729564151,149.154205722094)" rx="2" ry="2" />
<text  x="1074.36" y="145.5" >firedrake.tsf..</text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (2,334 us, 0.02%)</title><rect x="376.4" y="231" width="0.2" height="15.0" fill="rgb(154.197972910094,154.197972910094,139.574791795072)" rx="2" ry="2" />
<text  x="379.41" y="241.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (5,500 us, 0.04%)</title><rect x="262.0" y="119" width="0.6" height="15.0" fill="rgb(154.071041853421,154.071041853421,138.959664366577)" rx="2" ry="2" />
<text  x="265.04" y="129.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (891,245 us, 7.03%)</title><rect x="13.2" y="135" width="82.9" height="15.0" fill="rgb(144.144178540666,160.255598842217,144.144178540666)" rx="2" ry="2" />
<text  x="16.16" y="145.5" >pyop2.gl..</text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (7,635 us, 0.06%)</title><rect x="375.9" y="183" width="0.7" height="15.0" fill="rgb(144.497305980703,144.497305980703,155.386575351104)" rx="2" ry="2" />
<text  x="378.91" y="193.5" ></text>
</g>
<g >
<title>firedrake.functionspace.make_scalar_element (1,458 us, 0.01%)</title><rect x="376.3" y="215" width="0.1" height="15.0" fill="rgb(154.065762946772,127.837515925254,127.837515925254)" rx="2" ry="2" />
<text  x="379.27" y="225.5" ></text>
</g>
<g >
<title>perfsolve (9,932,632 us, 78.35%)</title><rect x="265.5" y="71" width="924.5" height="15.0" fill="rgb(109.913308511904,109.913308511904,148.692898421659)" rx="2" ry="2" />
<text  x="268.47" y="81.5" >perfsolve</text>
</g>
<g >
<title>firedrake.matrix_free.operators.ImplicitMatrixContext.__init__ (6,170 us, 0.05%)</title><rect x="264.9" y="103" width="0.6" height="15.0" fill="rgb(147.775679001785,147.775679001785,108.451367470189)" rx="2" ry="2" />
<text  x="267.90" y="113.5" ></text>
</g>
<g >
<title>firedrake (12,677,284 us, 100.00%)</title><rect x="10.0" y="55" width="1180.0" height="15.0" fill="rgb(151.774201257855,151.774201257855,127.828821480376)" rx="2" ry="2" />
<text  x="13.00" y="65.5" >firedrake</text>
</g>
<g >
<title>ParLoopExecute (1,068,115 us, 8.43%)</title><rect x="266.3" y="199" width="99.4" height="15.0" fill="rgb(114.292291189801,146.668371789948,146.668371789948)" rx="2" ry="2" />
<text  x="269.25" y="209.5" >ParLoopExe..</text>
</g>
<g >
<title>CreateExtMesh (931,350 us, 7.35%)</title><rect x="10.0" y="71" width="86.7" height="15.0" fill="rgb(112.623566440995,112.623566440995,149.217464472451)" rx="2" ry="2" />
<text  x="13.00" y="81.5" >CreateExt..</text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (10,318 us, 0.08%)</title><rect x="375.7" y="151" width="0.9" height="15.0" fill="rgb(150.038976870104,150.038976870104,119.419657139737)" rx="2" ry="2" />
<text  x="378.66" y="161.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (5,418 us, 0.04%)</title><rect x="1189.5" y="151" width="0.5" height="15.0" fill="rgb(122.881572467587,122.881572467587,151.202884993727)" rx="2" ry="2" />
<text  x="1192.50" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (5,500 us, 0.04%)</title><rect x="262.0" y="103" width="0.6" height="15.0" fill="rgb(147.674634420147,147.674634420147,107.961689882252)" rx="2" ry="2" />
<text  x="265.04" y="113.5" ></text>
</g>
<g >
<title>firedrake.function.Function.__init__ (1,337 us, 0.01%)</title><rect x="376.6" y="151" width="0.1" height="15.0" fill="rgb(151.114111512268,151.114111512268,124.629925020989)" rx="2" ry="2" />
<text  x="379.62" y="161.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (758,519 us, 5.98%)</title><rect x="380.7" y="199" width="70.6" height="15.0" fill="rgb(154.310014991041,129.710114931311,129.710114931311)" rx="2" ry="2" />
<text  x="383.70" y="209.5" >pyop2.g..</text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (2,334 us, 0.02%)</title><rect x="376.4" y="215" width="0.2" height="15.0" fill="rgb(137.670282798437,105.905099670994,137.670282798437)" rx="2" ry="2" />
<text  x="379.41" y="225.5" ></text>
</g>
</g>
</svg>
