<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="299" onload="init(evt)" viewBox="0 0 1200 299" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:13px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:18px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 13 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (1 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="299.0" fill="url(#background)"  />
<text id="title" x="600.00" y="26" >Firedrake example</text>
<text id="details" x="10.00" y="281" > </text>
<text id="unzoom" x="10.00" y="26" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="26" >Search</text>
<text id="ignorecase" x="1174.00" y="26" >ic</text>
<text id="matched" x="1090.00" y="281" > </text>
<g id="frames">
<g >
<title>firedrake.functionspace.make_scalar_element (1,458 us, 0.01%)</title><rect x="376.3" y="215" width="0.1" height="15.0" fill="rgb(153.669763117851,153.669763117851,137.015005878817)" rx="2" ry="2" />
<text  x="379.27" y="225.5" ></text>
</g>
<g >
<title>HybridBreak (1,076,485 us, 8.49%)</title><rect x="265.5" y="167" width="100.2" height="15.0" fill="rgb(117.821119906574,117.821119906574,150.223442562563)" rx="2" ry="2" />
<text  x="268.47" y="177.5" >HybridBreak</text>
</g>
<g >
<title>firedrake.matrix_free.operators.ImplicitMatrixContext.__init__ (6,170 us, 0.05%)</title><rect x="264.9" y="103" width="0.6" height="15.0" fill="rgb(131.366008172128,131.366008172128,152.845033839767)" rx="2" ry="2" />
<text  x="267.90" y="113.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.__init__ (8,087 us, 0.06%)</title><rect x="264.7" y="71" width="0.8" height="15.0" fill="rgb(109.323139836326,109.323139836326,148.578672226386)" rx="2" ry="2" />
<text  x="267.72" y="81.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (3,106,834 us, 24.51%)</title><rect x="782.2" y="167" width="289.2" height="15.0" fill="rgb(126.825313125832,149.917673773364,149.917673773364)" rx="2" ry="2" />
<text  x="785.17" y="177.5" >pyop2.global_kernel.GlobalKernel.co..</text>
</g>
<g >
<title>Parloop_Cells_wrap_form0_cell_integral_otherwise (3,535,773 us, 27.89%)</title><rect x="451.6" y="151" width="329.1" height="15.0" fill="rgb(154.662083749629,132.409308747153,132.409308747153)" rx="2" ry="2" />
<text  x="454.60" y="161.5" >Parloop_Cells_wrap_form0_cell_integral_o..</text>
</g>
<g >
<title>firedrake.functionspace.VectorFunctionSpace (6,127 us, 0.05%)</title><rect x="96.1" y="87" width="0.6" height="15.0" fill="rgb(131.643644603788,162.290569483104,131.643644603788)" rx="2" ry="2" />
<text  x="99.12" y="97.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_pyop2_kernel_uniform_extrusion (891,245 us, 7.03%)</title><rect x="13.2" y="119" width="82.9" height="15.0" fill="rgb(148.052626572267,148.052626572267,109.793498004062)" rx="2" ry="2" />
<text  x="16.16" y="129.5" >Parloop_..</text>
</g>
<g >
<title>firedrake.__init__ (1,760,712 us, 13.89%)</title><rect x="98.2" y="71" width="163.8" height="15.0" fill="rgb(123.722083115891,149.113132659675,149.113132659675)" rx="2" ry="2" />
<text  x="101.15" y="81.5" >firedrake.__init__</text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (13,643 us, 0.11%)</title><rect x="96.7" y="87" width="1.3" height="15.0" fill="rgb(148.207011859957,148.207011859957,110.541672859794)" rx="2" ry="2" />
<text  x="99.69" y="97.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.solve (9,932,632 us, 78.35%)</title><rect x="265.5" y="87" width="924.5" height="15.0" fill="rgb(122.989451898457,148.923191232933,148.923191232933)" rx="2" ry="2" />
<text  x="268.47" y="97.5" >firedrake.variational_solver.NonlinearVariationalSolver.solve</text>
</g>
<g >
<title>firedrake.mesh.MeshTopology._facets (2,390 us, 0.02%)</title><rect x="262.3" y="151" width="0.3" height="15.0" fill="rgb(105.845492958874,144.478461137486,144.478461137486)" rx="2" ry="2" />
<text  x="265.33" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (5,500 us, 0.04%)</title><rect x="262.0" y="103" width="0.6" height="15.0" fill="rgb(155.308003630407,137.36136116645,137.36136116645)" rx="2" ry="2" />
<text  x="265.04" y="113.5" ></text>
</g>
<g >
<title>firedrake.utility_meshes.RectangleMesh (2,130 us, 0.02%)</title><rect x="262.6" y="87" width="0.1" height="15.0" fill="rgb(148.959237019368,148.959237019368,114.187071709246)" rx="2" ry="2" />
<text  x="265.55" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (7,808 us, 0.06%)</title><rect x="374.9" y="199" width="0.8" height="15.0" fill="rgb(140.095716195499,140.095716195499,154.534654747516)" rx="2" ry="2" />
<text  x="377.94" y="209.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (13,643 us, 0.11%)</title><rect x="96.7" y="71" width="1.3" height="15.0" fill="rgb(135.292385993711,135.292385993711,153.604977934267)" rx="2" ry="2" />
<text  x="99.69" y="81.5" ></text>
</g>
<g >
<title>HybridRHS (79,767 us, 0.63%)</title><rect x="365.7" y="167" width="7.4" height="15.0" fill="rgb(150.749668554792,159.180286514336,150.749668554792)" rx="2" ry="2" />
<text  x="368.67" y="177.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (9,629 us, 0.08%)</title><rect x="263.8" y="103" width="0.9" height="15.0" fill="rgb(149.687831053052,149.687831053052,117.717950487867)" rx="2" ry="2" />
<text  x="266.82" y="113.5" ></text>
</g>
<g >
<title>HybridInit (840,202 us, 6.63%)</title><rect x="373.1" y="135" width="78.2" height="15.0" fill="rgb(107.099970542556,144.803696066589,144.803696066589)" rx="2" ry="2" />
<text  x="376.10" y="145.5" >HybridInit</text>
</g>
<g >
<title>CreateFunctionSpace (1,930 us, 0.02%)</title><rect x="374.8" y="183" width="0.1" height="15.0" fill="rgb(147.778797349006,159.663916710627,147.778797349006)" rx="2" ry="2" />
<text  x="377.76" y="193.5" ></text>
</g>
<g >
<title>firedrake.parloops.par_loop (763,937 us, 6.03%)</title><rect x="380.2" y="151" width="71.1" height="15.0" fill="rgb(155.804895473736,141.170865298645,141.170865298645)" rx="2" ry="2" />
<text  x="383.19" y="161.5" >firedra..</text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (1,068,115 us, 8.43%)</title><rect x="266.3" y="215" width="99.4" height="15.0" fill="rgb(140.170262632355,140.170262632355,154.549083090133)" rx="2" ry="2" />
<text  x="269.25" y="225.5" >Parloop_Ce..</text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (1,274,644 us, 10.05%)</title><rect x="1071.4" y="135" width="118.6" height="15.0" fill="rgb(139.073570548339,139.073570548339,154.33682010613)" rx="2" ry="2" />
<text  x="1074.36" y="145.5" >firedrake.tsf..</text>
</g>
<g >
<title>CreateExtMesh (931,350 us, 7.35%)</title><rect x="10.0" y="71" width="86.7" height="15.0" fill="rgb(155.967568408119,142.418024462245,142.418024462245)" rx="2" ry="2" />
<text  x="13.00" y="81.5" >CreateExt..</text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (13,643 us, 0.11%)</title><rect x="96.7" y="119" width="1.3" height="15.0" fill="rgb(154.944016504373,134.570793200196,134.570793200196)" rx="2" ry="2" />
<text  x="99.69" y="129.5" ></text>
</g>
<g >
<title>all (12,677,284 us, 100%)</title><rect x="10.0" y="39" width="1180.0" height="15.0" fill="rgb(155.324925563213,155.324925563213,145.036177729416)" rx="2" ry="2" />
<text  x="13.00" y="49.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.action (3,594 us, 0.03%)</title><rect x="264.9" y="119" width="0.3" height="15.0" fill="rgb(137.279829118359,152.628103845501,152.628103845501)" rx="2" ry="2" />
<text  x="267.90" y="129.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (3,230 us, 0.03%)</title><rect x="1189.7" y="167" width="0.3" height="15.0" fill="rgb(147.65772304011,147.65772304011,107.879734732841)" rx="2" ry="2" />
<text  x="1192.70" y="177.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (9,738 us, 0.08%)</title><rect x="374.8" y="151" width="0.9" height="15.0" fill="rgb(142.275424855762,142.275424855762,154.956533843051)" rx="2" ry="2" />
<text  x="377.76" y="161.5" ></text>
</g>
<g >
<title>firedrake.slate.slac.optimise.optimise (9,929 us, 0.08%)</title><rect x="372.2" y="183" width="0.9" height="15.0" fill="rgb(152.713730305981,117.471932345853,117.471932345853)" rx="2" ry="2" />
<text  x="375.17" y="193.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (10,318 us, 0.08%)</title><rect x="375.7" y="151" width="0.9" height="15.0" fill="rgb(140.364631392168,160.870873959414,140.364631392168)" rx="2" ry="2" />
<text  x="378.66" y="161.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (758,519 us, 5.98%)</title><rect x="380.7" y="183" width="70.6" height="15.0" fill="rgb(129.543375441501,150.622356595945,150.622356595945)" rx="2" ry="2" />
<text  x="383.70" y="193.5" >Parloop..</text>
</g>
<g >
<title>CreateFunctionSpace (5,275 us, 0.04%)</title><rect x="376.1" y="199" width="0.5" height="15.0" fill="rgb(146.669281817382,159.844535518101,146.669281817382)" rx="2" ry="2" />
<text  x="379.13" y="209.5" ></text>
</g>
<g >
<title>CreateMesh (2,058 us, 0.02%)</title><rect x="98.0" y="71" width="0.2" height="15.0" fill="rgb(138.773936020838,161.129824368701,138.773936020838)" rx="2" ry="2" />
<text  x="100.96" y="81.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (3,525,943 us, 27.81%)</title><rect x="452.5" y="167" width="328.2" height="15.0" fill="rgb(149.253409661967,149.253409661967,115.61267759261)" rx="2" ry="2" />
<text  x="455.52" y="177.5" >pyop2.global_kernel.GlobalKernel.compile</text>
</g>
<g >
<title>Parloop_Cells_wrap_form1_cell_integral_otherwise (3,122,514 us, 24.63%)</title><rect x="780.7" y="151" width="290.7" height="15.0" fill="rgb(139.121389879622,139.121389879622,154.346075460572)" rx="2" ry="2" />
<text  x="783.71" y="161.5" >Parloop_Cells_wrap_form1_cell_integ..</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (758,519 us, 5.98%)</title><rect x="380.7" y="199" width="70.6" height="15.0" fill="rgb(135.70673660259,135.70673660259,153.685174826308)" rx="2" ry="2" />
<text  x="383.70" y="209.5" >pyop2.g..</text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (5,418 us, 0.04%)</title><rect x="1189.5" y="151" width="0.5" height="15.0" fill="rgb(152.025334999616,112.194234997059,112.194234997059)" rx="2" ry="2" />
<text  x="1192.50" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (6,127 us, 0.05%)</title><rect x="96.1" y="135" width="0.6" height="15.0" fill="rgb(134.858136756966,134.858136756966,153.520929694897)" rx="2" ry="2" />
<text  x="99.12" y="145.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.LinearVariationalProblem.__init__ (21,172 us, 0.17%)</title><rect x="262.7" y="71" width="2.0" height="15.0" fill="rgb(115.799542964876,147.059140768672,147.059140768672)" rx="2" ry="2" />
<text  x="265.75" y="81.5" ></text>
</g>
<g >
<title>firedrake.functionspace.VectorFunctionSpace (5,500 us, 0.04%)</title><rect x="262.0" y="71" width="0.6" height="15.0" fill="rgb(154.560024533644,154.560024533644,141.329349663045)" rx="2" ry="2" />
<text  x="265.04" y="81.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (7,808 us, 0.06%)</title><rect x="374.9" y="183" width="0.8" height="15.0" fill="rgb(153.804173502337,125.831996851249,125.831996851249)" rx="2" ry="2" />
<text  x="377.94" y="193.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (2,334 us, 0.02%)</title><rect x="376.4" y="215" width="0.2" height="15.0" fill="rgb(139.66248060761,160.985177575505,139.66248060761)" rx="2" ry="2" />
<text  x="379.41" y="225.5" ></text>
</g>
<g >
<title>ParLoopExecute (1,068,115 us, 8.43%)</title><rect x="266.3" y="199" width="99.4" height="15.0" fill="rgb(152.822892714936,118.308844147839,118.308844147839)" rx="2" ry="2" />
<text  x="269.25" y="209.5" >ParLoopExe..</text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (2,334 us, 0.02%)</title><rect x="376.4" y="247" width="0.2" height="15.0" fill="rgb(154.827816931538,133.679929808456,133.679929808456)" rx="2" ry="2" />
<text  x="379.41" y="257.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (891,245 us, 7.03%)</title><rect x="13.2" y="135" width="82.9" height="15.0" fill="rgb(155.114286070756,135.876193209127,135.876193209127)" rx="2" ry="2" />
<text  x="16.16" y="145.5" >pyop2.gl..</text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (7,635 us, 0.06%)</title><rect x="375.9" y="183" width="0.7" height="15.0" fill="rgb(125.529788468482,163.285848388852,125.529788468482)" rx="2" ry="2" />
<text  x="378.91" y="193.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (1,068,115 us, 8.43%)</title><rect x="266.3" y="231" width="99.4" height="15.0" fill="rgb(151.922535856216,142.426498131553,151.922535856216)" rx="2" ry="2" />
<text  x="269.25" y="241.5" >pyop2.glob..</text>
</g>
<g >
<title>firedrake.ufl_expr.action (10,205 us, 0.08%)</title><rect x="262.7" y="87" width="1.0" height="15.0" fill="rgb(156.482849498566,146.368512822339,146.368512822339)" rx="2" ry="2" />
<text  x="265.75" y="97.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalProblem.__init__ (10,967 us, 0.09%)</title><rect x="263.7" y="87" width="1.0" height="15.0" fill="rgb(153.619194204848,124.413822237171,124.413822237171)" rx="2" ry="2" />
<text  x="266.70" y="97.5" ></text>
</g>
<g >
<title>Log_Event_form0_cell_integral_otherwise (9,830 us, 0.08%)</title><rect x="451.6" y="167" width="0.9" height="15.0" fill="rgb(150.871701653219,150.871701653219,123.455169550213)" rx="2" ry="2" />
<text  x="454.60" y="177.5" ></text>
</g>
<g >
<title>PCSetUp (840,202 us, 6.63%)</title><rect x="373.1" y="119" width="78.2" height="15.0" fill="rgb(126.618951067534,126.618951067534,151.926248593716)" rx="2" ry="2" />
<text  x="376.10" y="129.5" >PCSetUp</text>
</g>
<g >
<title>ParLoopExecute (6,658,287 us, 52.52%)</title><rect x="451.6" y="135" width="619.8" height="15.0" fill="rgb(125.369078693167,149.540131513043,149.540131513043)" rx="2" ry="2" />
<text  x="454.60" y="145.5" >ParLoopExecute</text>
</g>
<g >
<title>firedrake.assemble.allocate_matrix (6,170 us, 0.05%)</title><rect x="264.9" y="87" width="0.6" height="15.0" fill="rgb(151.284844176249,151.284844176249,125.457321777206)" rx="2" ry="2" />
<text  x="267.90" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (13,643 us, 0.11%)</title><rect x="96.7" y="103" width="1.3" height="15.0" fill="rgb(124.242976400679,163.495329423145,124.242976400679)" rx="2" ry="2" />
<text  x="99.69" y="113.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (6,127 us, 0.05%)</title><rect x="96.1" y="119" width="0.6" height="15.0" fill="rgb(148.882165995292,148.882165995292,113.813573669491)" rx="2" ry="2" />
<text  x="99.12" y="129.5" ></text>
</g>
<g >
<title>perfsolve (9,932,632 us, 78.35%)</title><rect x="265.5" y="71" width="924.5" height="15.0" fill="rgb(155.396666826518,138.041112336636,138.041112336636)" rx="2" ry="2" />
<text  x="268.47" y="81.5" >perfsolve</text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (2,334 us, 0.02%)</title><rect x="376.4" y="231" width="0.2" height="15.0" fill="rgb(149.312715452939,159.414209112312,149.312715452939)" rx="2" ry="2" />
<text  x="379.41" y="241.5" ></text>
</g>
<g >
<title>SNESSolve (9,932,632 us, 78.35%)</title><rect x="265.5" y="103" width="924.5" height="15.0" fill="rgb(139.770544083394,160.967585846889,139.770544083394)" rx="2" ry="2" />
<text  x="268.47" y="113.5" >SNESSolve</text>
</g>
<g >
<title>PCApply (1,156,252 us, 9.12%)</title><rect x="265.5" y="135" width="107.6" height="15.0" fill="rgb(127.810918665024,150.173201135377,150.173201135377)" rx="2" ry="2" />
<text  x="268.47" y="145.5" >PCApply</text>
</g>
<g >
<title>SNESFunctionEval (7,936,178 us, 62.60%)</title><rect x="451.3" y="119" width="738.7" height="15.0" fill="rgb(136.640542351433,103.266389775546,136.640542351433)" rx="2" ry="2" />
<text  x="454.30" y="129.5" >SNESFunctionEval</text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (1,930 us, 0.02%)</title><rect x="374.8" y="199" width="0.1" height="15.0" fill="rgb(153.928610323877,126.786012483057,126.786012483057)" rx="2" ry="2" />
<text  x="377.76" y="209.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (6,127 us, 0.05%)</title><rect x="96.1" y="151" width="0.6" height="15.0" fill="rgb(135.509381060566,100.367788967701,135.509381060566)" rx="2" ry="2" />
<text  x="99.12" y="161.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (1,414 us, 0.01%)</title><rect x="1189.9" y="183" width="0.1" height="15.0" fill="rgb(154.774282060301,154.774282060301,142.367674599919)" rx="2" ry="2" />
<text  x="1192.87" y="193.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (2,576 us, 0.02%)</title><rect x="265.2" y="119" width="0.3" height="15.0" fill="rgb(156.618894439005,147.41152403237,147.41152403237)" rx="2" ry="2" />
<text  x="268.23" y="129.5" ></text>
</g>
<g >
<title>Log_Event_form1_cell_integral_otherwise (15,680 us, 0.12%)</title><rect x="780.7" y="167" width="1.5" height="15.0" fill="rgb(112.263499367804,112.263499367804,149.147774071188)" rx="2" ry="2" />
<text  x="783.71" y="177.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (5,500 us, 0.04%)</title><rect x="262.0" y="87" width="0.6" height="15.0" fill="rgb(114.855727093606,146.814447765009,146.814447765009)" rx="2" ry="2" />
<text  x="265.04" y="97.5" ></text>
</g>
<g >
<title>firedrake (12,677,284 us, 100.00%)</title><rect x="10.0" y="55" width="1180.0" height="15.0" fill="rgb(156.091780356099,143.370316063429,143.370316063429)" rx="2" ry="2" />
<text  x="13.00" y="65.5" >firedrake</text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (7,808 us, 0.06%)</title><rect x="374.9" y="167" width="0.8" height="15.0" fill="rgb(154.512877097507,154.512877097507,141.100865934073)" rx="2" ry="2" />
<text  x="377.94" y="177.5" ></text>
</g>
<g >
<title>firedrake.functionspace.MixedFunctionSpace (1,930 us, 0.02%)</title><rect x="374.8" y="167" width="0.1" height="15.0" fill="rgb(112.900332398135,146.307493584702,146.307493584702)" rx="2" ry="2" />
<text  x="377.76" y="177.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (5,500 us, 0.04%)</title><rect x="262.0" y="135" width="0.6" height="15.0" fill="rgb(112.03624326239,146.083470475435,146.083470475435)" rx="2" ry="2" />
<text  x="265.04" y="145.5" ></text>
</g>
<g >
<title>firedrake.function.Function.__init__ (1,337 us, 0.01%)</title><rect x="376.6" y="151" width="0.1" height="15.0" fill="rgb(133.771525248248,161.944170308425,133.771525248248)" rx="2" ry="2" />
<text  x="379.62" y="161.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (10,318 us, 0.08%)</title><rect x="375.7" y="167" width="0.9" height="15.0" fill="rgb(150.468336677914,159.226084726851,150.468336677914)" rx="2" ry="2" />
<text  x="378.66" y="177.5" ></text>
</g>
<g >
<title>KSPSolve (1,156,252 us, 9.12%)</title><rect x="265.5" y="119" width="107.6" height="15.0" fill="rgb(126.148933440448,163.185057346904,126.148933440448)" rx="2" ry="2" />
<text  x="268.47" y="129.5" >KSPSolve</text>
</g>
<g >
<title>firedrake.interpolation.make_interpolator (37,029 us, 0.29%)</title><rect x="376.7" y="151" width="3.5" height="15.0" fill="rgb(137.307223459186,152.635206082011,152.635206082011)" rx="2" ry="2" />
<text  x="379.75" y="161.5" ></text>
</g>
<g >
<title>ParLoopExecute (891,245 us, 7.03%)</title><rect x="13.2" y="103" width="82.9" height="15.0" fill="rgb(146.187058894069,159.923036924221,146.187058894069)" rx="2" ry="2" />
<text  x="16.16" y="113.5" >ParLoopE..</text>
</g>
<g >
<title>ParLoopExecute (758,519 us, 5.98%)</title><rect x="380.7" y="167" width="70.6" height="15.0" fill="rgb(148.490049859912,148.490049859912,111.913318551881)" rx="2" ry="2" />
<text  x="383.70" y="177.5" >ParLoop..</text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (5,500 us, 0.04%)</title><rect x="262.0" y="119" width="0.6" height="15.0" fill="rgb(154.650116553298,154.650116553298,141.765949450599)" rx="2" ry="2" />
<text  x="265.04" y="129.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (6,127 us, 0.05%)</title><rect x="96.1" y="103" width="0.6" height="15.0" fill="rgb(146.22795580613,159.916379287374,146.22795580613)" rx="2" ry="2" />
<text  x="99.12" y="113.5" ></text>
</g>
<g >
<title>firedrake.utility_meshes.SquareMesh (2,130 us, 0.02%)</title><rect x="262.6" y="71" width="0.1" height="15.0" fill="rgb(142.758901247426,154.04860402711,154.04860402711)" rx="2" ry="2" />
<text  x="265.55" y="81.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (1,930 us, 0.02%)</title><rect x="374.8" y="231" width="0.1" height="15.0" fill="rgb(153.247612047304,121.565025695996,121.565025695996)" rx="2" ry="2" />
<text  x="377.76" y="241.5" ></text>
</g>
<g >
<title>firedrake.parloops.par_loop (1,074,757 us, 8.48%)</title><rect x="265.6" y="183" width="100.1" height="15.0" fill="rgb(129.30426649911,162.671398476889,129.30426649911)" rx="2" ry="2" />
<text  x="268.63" y="193.5" >firedrake.p..</text>
</g>
<g >
<title>SCForwardElim (1,156,252 us, 9.12%)</title><rect x="265.5" y="151" width="107.6" height="15.0" fill="rgb(153.092701283133,153.092701283133,134.218475449029)" rx="2" ry="2" />
<text  x="268.47" y="161.5" >SCForwardElim</text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (1,930 us, 0.02%)</title><rect x="374.8" y="215" width="0.1" height="15.0" fill="rgb(155.678494245474,155.678494245474,146.749625958835)" rx="2" ry="2" />
<text  x="377.76" y="225.5" ></text>
</g>
<g >
<title>firedrake.extrusion_utils.make_extruded_coords (922,813 us, 7.28%)</title><rect x="10.2" y="87" width="85.9" height="15.0" fill="rgb(107.732246293324,144.96761940938,144.96761940938)" rx="2" ry="2" />
<text  x="13.22" y="97.5" >firedrake..</text>
</g>
</g>
</svg>
