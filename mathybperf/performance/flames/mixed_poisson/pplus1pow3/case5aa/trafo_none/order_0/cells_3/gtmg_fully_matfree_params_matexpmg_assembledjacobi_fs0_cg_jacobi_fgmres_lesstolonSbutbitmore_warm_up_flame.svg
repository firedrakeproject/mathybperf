<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="299" onload="init(evt)" viewBox="0 0 1200 299" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:13px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:18px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 13 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (1 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="299.0" fill="url(#background)"  />
<text id="title" x="600.00" y="26" >Firedrake example</text>
<text id="details" x="10.00" y="281" > </text>
<text id="unzoom" x="10.00" y="26" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="26" >Search</text>
<text id="ignorecase" x="1174.00" y="26" >ic</text>
<text id="matched" x="1090.00" y="281" > </text>
<g id="frames">
<g >
<title>firedrake.extrusion_utils.make_extruded_coords (902,038 us, 9.17%)</title><rect x="10.3" y="87" width="108.2" height="15.0" fill="rgb(132.419314685898,132.419314685898,153.048899616625)" rx="2" ry="2" />
<text  x="13.27" y="97.5" >firedrake.ex..</text>
</g>
<g >
<title>CreateFunctionSpace (5,278 us, 0.05%)</title><rect x="315.0" y="87" width="0.6" height="15.0" fill="rgb(114.395938292942,146.695243261133,146.695243261133)" rx="2" ry="2" />
<text  x="317.96" y="97.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (1,553 us, 0.02%)</title><rect x="320.8" y="183" width="0.2" height="15.0" fill="rgb(117.696352432903,147.550906186308,147.550906186308)" rx="2" ry="2" />
<text  x="323.81" y="193.5" ></text>
</g>
<g >
<title>CreateMesh (1,832 us, 0.02%)</title><rect x="120.5" y="71" width="0.3" height="15.0" fill="rgb(125.248192365632,125.248192365632,151.660940457864)" rx="2" ry="2" />
<text  x="123.54" y="81.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (657,120 us, 6.68%)</title><rect x="460.6" y="183" width="78.9" height="15.0" fill="rgb(154.879285829069,134.07452468953,134.07452468953)" rx="2" ry="2" />
<text  x="463.65" y="193.5" >Parloop_..</text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (5,354 us, 0.05%)</title><rect x="1189.4" y="151" width="0.6" height="15.0" fill="rgb(122.021125090212,148.672143541907,148.672143541907)" rx="2" ry="2" />
<text  x="1192.36" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (4,763 us, 0.05%)</title><rect x="321.0" y="167" width="0.6" height="15.0" fill="rgb(142.033293778841,117.085315308281,142.033293778841)" rx="2" ry="2" />
<text  x="323.99" y="177.5" ></text>
</g>
<g >
<title>firedrake.utility_meshes.RectangleMesh (2,021 us, 0.02%)</title><rect x="315.6" y="87" width="0.2" height="15.0" fill="rgb(140.174871141032,112.323107298894,140.174871141032)" rx="2" ry="2" />
<text  x="318.59" y="97.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (9,955 us, 0.10%)</title><rect x="317.1" y="103" width="1.2" height="15.0" fill="rgb(142.178954167961,160.575519088937,142.178954167961)" rx="2" ry="2" />
<text  x="320.06" y="113.5" ></text>
</g>
<g >
<title>firedrake.assemble.allocate_matrix (7,450 us, 0.08%)</title><rect x="455.3" y="151" width="0.9" height="15.0" fill="rgb(108.917618270664,108.917618270664,148.500184181419)" rx="2" ry="2" />
<text  x="458.34" y="161.5" ></text>
</g>
<g >
<title>Log_Event_form0_cell_integral_otherwise (7,739 us, 0.08%)</title><rect x="539.9" y="167" width="0.9" height="15.0" fill="rgb(147.946666819566,159.636589122396,147.946666819566)" rx="2" ry="2" />
<text  x="542.90" y="177.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (6,316 us, 0.06%)</title><rect x="320.8" y="151" width="0.8" height="15.0" fill="rgb(115.526697870577,115.526697870577,149.779360878176)" rx="2" ry="2" />
<text  x="323.81" y="161.5" ></text>
</g>
<g >
<title>HybridInit (1,835,138 us, 18.66%)</title><rect x="319.3" y="135" width="220.2" height="15.0" fill="rgb(113.208384247137,113.208384247137,149.330655015575)" rx="2" ry="2" />
<text  x="322.29" y="145.5" >HybridInit</text>
</g>
<g >
<title>firedrake.functionspace.VectorFunctionSpace (6,043 us, 0.06%)</title><rect x="118.5" y="87" width="0.7" height="15.0" fill="rgb(113.304215572125,146.412204037218,146.412204037218)" rx="2" ry="2" />
<text  x="121.51" y="97.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (6,057 us, 0.06%)</title><rect x="456.6" y="183" width="0.8" height="15.0" fill="rgb(152.438108309191,115.358830370462,115.358830370462)" rx="2" ry="2" />
<text  x="459.64" y="193.5" ></text>
</g>
<g >
<title>firedrake.utility_meshes.SquareMesh (2,021 us, 0.02%)</title><rect x="315.6" y="71" width="0.2" height="15.0" fill="rgb(112.775281591185,146.275073005122,146.275073005122)" rx="2" ry="2" />
<text  x="318.59" y="81.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (657,120 us, 6.68%)</title><rect x="460.6" y="199" width="78.9" height="15.0" fill="rgb(156.692206101305,147.973580110005,147.973580110005)" rx="2" ry="2" />
<text  x="463.65" y="209.5" >pyop2.gl..</text>
</g>
<g >
<title>CreateExtMesh (910,303 us, 9.26%)</title><rect x="10.0" y="71" width="109.2" height="15.0" fill="rgb(141.908987574993,141.908987574993,154.885610498386)" rx="2" ry="2" />
<text  x="13.00" y="81.5" >CreateExtMesh</text>
</g>
<g >
<title>firedrake.functionspace.MixedFunctionSpace (1,553 us, 0.02%)</title><rect x="320.8" y="167" width="0.2" height="15.0" fill="rgb(153.635079918397,124.535612707711,124.535612707711)" rx="2" ry="2" />
<text  x="323.81" y="177.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (2,019,800 us, 20.54%)</title><rect x="839.0" y="167" width="242.3" height="15.0" fill="rgb(139.217463406208,109.869749978408,139.217463406208)" rx="2" ry="2" />
<text  x="841.96" y="177.5" >pyop2.global_kernel.GlobalKer..</text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (905,582 us, 9.21%)</title><rect x="1081.3" y="135" width="108.7" height="15.0" fill="rgb(150.517323486404,138.825641433909,150.517323486404)" rx="2" ry="2" />
<text  x="1084.33" y="145.5" >firedrake.ts..</text>
</g>
<g >
<title>firedrake.functionspace.make_scalar_element (1,099 us, 0.01%)</title><rect x="457.0" y="215" width="0.2" height="15.0" fill="rgb(134.417045666501,151.885900728352,151.885900728352)" rx="2" ry="2" />
<text  x="460.03" y="225.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (5,278 us, 0.05%)</title><rect x="315.0" y="103" width="0.6" height="15.0" fill="rgb(140.871965821714,153.55939854637,153.55939854637)" rx="2" ry="2" />
<text  x="317.96" y="113.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (6,043 us, 0.06%)</title><rect x="118.5" y="103" width="0.7" height="15.0" fill="rgb(143.153365650886,119.955499480395,143.153365650886)" rx="2" ry="2" />
<text  x="121.51" y="113.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.LinearVariationalProblem.__init__ (21,281 us, 0.22%)</title><rect x="315.8" y="71" width="2.6" height="15.0" fill="rgb(137.885792525305,161.274405867974,137.885792525305)" rx="2" ry="2" />
<text  x="318.84" y="81.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_slate_loopy_knl_0 (686,584 us, 6.98%)</title><rect x="343.4" y="183" width="82.4" height="15.0" fill="rgb(141.426111319712,153.703065897703,153.703065897703)" rx="2" ry="2" />
<text  x="346.44" y="193.5" >Parloop_..</text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (5,278 us, 0.05%)</title><rect x="315.0" y="135" width="0.6" height="15.0" fill="rgb(133.363436288884,162.010603394833,133.363436288884)" rx="2" ry="2" />
<text  x="317.96" y="145.5" ></text>
</g>
<g >
<title>firedrake.functionspace.MixedFunctionSpace (1,080 us, 0.01%)</title><rect x="314.8" y="71" width="0.2" height="15.0" fill="rgb(127.603219401013,162.948313120765,127.603219401013)" rx="2" ry="2" />
<text  x="317.83" y="81.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.solve (7,255,987 us, 73.79%)</title><rect x="319.3" y="87" width="870.7" height="15.0" fill="rgb(152.358276439316,114.746786034753,114.746786034753)" rx="2" ry="2" />
<text  x="322.29" y="97.5" >firedrake.variational_solver.NonlinearVariationalSolver.solve</text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (1,553 us, 0.02%)</title><rect x="320.8" y="231" width="0.2" height="15.0" fill="rgb(144.877136788329,160.136280057714,144.877136788329)" rx="2" ry="2" />
<text  x="323.81" y="241.5" ></text>
</g>
<g >
<title>HybridOperatorAssembly (1,114,790 us, 11.34%)</title><rect x="321.6" y="151" width="133.7" height="15.0" fill="rgb(155.760322520361,155.760322520361,147.146178367904)" rx="2" ry="2" />
<text  x="324.57" y="161.5" >HybridOperatorA..</text>
</g>
<g >
<title>SNESSolve (7,255,987 us, 73.79%)</title><rect x="319.3" y="103" width="870.7" height="15.0" fill="rgb(149.75955970337,136.883871739886,149.75955970337)" rx="2" ry="2" />
<text  x="322.29" y="113.5" >SNESSolve</text>
</g>
<g >
<title>firedrake.ufl_expr.derivative (1,123 us, 0.01%)</title><rect x="318.3" y="103" width="0.1" height="15.0" fill="rgb(118.382797043455,118.382797043455,150.332154266475)" rx="2" ry="2" />
<text  x="321.26" y="113.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (6,043 us, 0.06%)</title><rect x="118.5" y="151" width="0.7" height="15.0" fill="rgb(152.711485378871,152.711485378871,132.371044528377)" rx="2" ry="2" />
<text  x="121.51" y="161.5" ></text>
</g>
<g >
<title>firedrake.__init__ (1,617,242 us, 16.45%)</title><rect x="120.8" y="71" width="194.0" height="15.0" fill="rgb(152.820600350183,152.820600350183,132.89983246627)" rx="2" ry="2" />
<text  x="123.76" y="81.5" >firedrake.__init__</text>
</g>
<g >
<title>firedrake.parloops.par_loop (662,378 us, 6.74%)</title><rect x="460.0" y="151" width="79.5" height="15.0" fill="rgb(152.575675435153,116.413511669503,116.413511669503)" rx="2" ry="2" />
<text  x="463.02" y="161.5" >firedrak..</text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (1,679 us, 0.02%)</title><rect x="457.2" y="231" width="0.2" height="15.0" fill="rgb(125.424567398831,125.424567398831,151.695077561064)" rx="2" ry="2" />
<text  x="460.17" y="241.5" ></text>
</g>
<g >
<title>perfsolve (7,255,987 us, 73.79%)</title><rect x="319.3" y="71" width="870.7" height="15.0" fill="rgb(155.321705476507,155.321705476507,145.020572693839)" rx="2" ry="2" />
<text  x="322.29" y="81.5" >perfsolve</text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (10,905 us, 0.11%)</title><rect x="119.2" y="87" width="1.3" height="15.0" fill="rgb(146.846708195327,155.108405828418,155.108405828418)" rx="2" ry="2" />
<text  x="122.24" y="97.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (2,367 us, 0.02%)</title><rect x="319.0" y="119" width="0.3" height="15.0" fill="rgb(136.358636930583,136.358636930583,153.811349083339)" rx="2" ry="2" />
<text  x="322.00" y="129.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (10,905 us, 0.11%)</title><rect x="119.2" y="119" width="1.3" height="15.0" fill="rgb(112.120158399627,146.105226251755,146.105226251755)" rx="2" ry="2" />
<text  x="122.24" y="129.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (3,132 us, 0.03%)</title><rect x="1189.6" y="167" width="0.4" height="15.0" fill="rgb(132.134573366182,162.210650847366,132.134573366182)" rx="2" ry="2" />
<text  x="1192.62" y="177.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (6,043 us, 0.06%)</title><rect x="118.5" y="119" width="0.7" height="15.0" fill="rgb(154.765920633707,154.765920633707,142.327153840272)" rx="2" ry="2" />
<text  x="121.51" y="129.5" ></text>
</g>
<g >
<title>Log_Event_form1_cell_integral_otherwise (1,402 us, 0.01%)</title><rect x="838.8" y="167" width="0.2" height="15.0" fill="rgb(108.63765883984,145.202355995514,145.202355995514)" rx="2" ry="2" />
<text  x="841.79" y="177.5" ></text>
</g>
<g >
<title>SNESFunctionEval (5,420,849 us, 55.13%)</title><rect x="539.5" y="119" width="650.5" height="15.0" fill="rgb(104.063921744811,144.01657230421,144.01657230421)" rx="2" ry="2" />
<text  x="542.50" y="129.5" >SNESFunctionEval</text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.__init__ (7,468 us, 0.08%)</title><rect x="318.4" y="71" width="0.9" height="15.0" fill="rgb(150.076219070221,150.076219070221,119.600138571073)" rx="2" ry="2" />
<text  x="321.39" y="81.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (4,763 us, 0.05%)</title><rect x="321.0" y="199" width="0.6" height="15.0" fill="rgb(123.814824134143,149.13717662737,149.13717662737)" rx="2" ry="2" />
<text  x="323.99" y="209.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.action (3,661 us, 0.04%)</title><rect x="318.6" y="119" width="0.4" height="15.0" fill="rgb(152.071587317728,112.548836102579,112.548836102579)" rx="2" ry="2" />
<text  x="321.56" y="129.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (2,482,983 us, 25.25%)</title><rect x="540.8" y="167" width="298.0" height="15.0" fill="rgb(154.287537457372,154.287537457372,140.00883537034)" rx="2" ry="2" />
<text  x="543.83" y="177.5" >pyop2.global_kernel.GlobalKernel.com..</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (871,027 us, 8.86%)</title><rect x="14.0" y="135" width="104.5" height="15.0" fill="rgb(146.908792871936,129.578781734336,146.908792871936)" rx="2" ry="2" />
<text  x="16.99" y="145.5" >pyop2.globa..</text>
</g>
<g >
<title>Parloop_Cells_wrap_form1_cell_integral_otherwise (2,021,202 us, 20.55%)</title><rect x="838.8" y="151" width="242.5" height="15.0" fill="rgb(139.839718663671,111.464279075658,139.839718663671)" rx="2" ry="2" />
<text  x="841.79" y="161.5" >Parloop_Cells_wrap_form1_cell..</text>
</g>
<g >
<title>firedrake.slate.slac.optimise.optimise (7,947 us, 0.08%)</title><rect x="425.8" y="167" width="1.0" height="15.0" fill="rgb(134.562627144889,97.941732058778,134.562627144889)" rx="2" ry="2" />
<text  x="428.83" y="177.5" ></text>
</g>
<g >
<title>CreateSparsity (5,985 us, 0.06%)</title><rect x="455.3" y="167" width="0.8" height="15.0" fill="rgb(140.541782283094,160.842035442287,140.541782283094)" rx="2" ry="2" />
<text  x="458.34" y="177.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (1,679 us, 0.02%)</title><rect x="457.2" y="247" width="0.2" height="15.0" fill="rgb(153.394492339788,122.691107938372,122.691107938372)" rx="2" ry="2" />
<text  x="460.17" y="257.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (8,200 us, 0.08%)</title><rect x="456.4" y="167" width="1.0" height="15.0" fill="rgb(154.217617620039,154.217617620039,139.669993081727)" rx="2" ry="2" />
<text  x="459.38" y="177.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_pyop2_kernel_uniform_extrusion (871,027 us, 8.86%)</title><rect x="14.0" y="119" width="104.5" height="15.0" fill="rgb(145.238243932117,125.298000076051,145.238243932117)" rx="2" ry="2" />
<text  x="16.99" y="129.5" >Parloop_Cel..</text>
</g>
<g >
<title>MatZeroInitial (1,465 us, 0.01%)</title><rect x="456.1" y="167" width="0.1" height="15.0" fill="rgb(152.007885484187,112.06045537877,112.06045537877)" rx="2" ry="2" />
<text  x="459.06" y="177.5" ></text>
</g>
<g >
<title>ParLoopExecute (686,584 us, 6.98%)</title><rect x="343.4" y="167" width="82.4" height="15.0" fill="rgb(133.050468938826,151.531603058214,151.531603058214)" rx="2" ry="2" />
<text  x="346.44" y="177.5" >ParLoopE..</text>
</g>
<g >
<title>firedrake (9,833,397 us, 100.00%)</title><rect x="10.0" y="55" width="1180.0" height="15.0" fill="rgb(153.488534255867,123.412095961646,123.412095961646)" rx="2" ry="2" />
<text  x="13.00" y="65.5" >firedrake</text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (5,278 us, 0.05%)</title><rect x="315.0" y="119" width="0.6" height="15.0" fill="rgb(138.23156870811,107.343394814532,138.23156870811)" rx="2" ry="2" />
<text  x="317.96" y="129.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (1,553 us, 0.02%)</title><rect x="320.8" y="199" width="0.2" height="15.0" fill="rgb(121.356448089273,148.499819874997,148.499819874997)" rx="2" ry="2" />
<text  x="323.81" y="209.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (1,679 us, 0.02%)</title><rect x="457.2" y="215" width="0.2" height="15.0" fill="rgb(154.724700758571,154.724700758571,142.127395983843)" rx="2" ry="2" />
<text  x="460.17" y="225.5" ></text>
</g>
<g >
<title>ParLoopExecute (4,511,924 us, 45.88%)</title><rect x="539.9" y="135" width="541.4" height="15.0" fill="rgb(150.794738555713,150.794738555713,123.082194539227)" rx="2" ry="2" />
<text  x="542.90" y="145.5" >ParLoopExecute</text>
</g>
<g >
<title>firedrake.function.Function.__init__ (1,077 us, 0.01%)</title><rect x="457.4" y="151" width="0.1" height="15.0" fill="rgb(133.701711242296,95.7356350583824,133.701711242296)" rx="2" ry="2" />
<text  x="460.37" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (1,553 us, 0.02%)</title><rect x="320.8" y="215" width="0.2" height="15.0" fill="rgb(123.309722374028,123.309722374028,151.285752717554)" rx="2" ry="2" />
<text  x="323.81" y="225.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (10,905 us, 0.11%)</title><rect x="119.2" y="103" width="1.3" height="15.0" fill="rgb(155.102839210184,155.102839210184,143.959913095506)" rx="2" ry="2" />
<text  x="122.24" y="113.5" ></text>
</g>
<g >
<title>firedrake.assemble.allocate_matrix (6,028 us, 0.06%)</title><rect x="318.6" y="87" width="0.7" height="15.0" fill="rgb(110.729960659555,110.729960659555,148.850960127656)" rx="2" ry="2" />
<text  x="321.56" y="97.5" ></text>
</g>
<g >
<title>firedrake.interpolation.make_interpolator (21,003 us, 0.21%)</title><rect x="457.5" y="151" width="2.5" height="15.0" fill="rgb(154.529566147397,131.393340463375,131.393340463375)" rx="2" ry="2" />
<text  x="460.50" y="161.5" ></text>
</g>
<g >
<title>firedrake.matrix_free.operators.ImplicitMatrixContext.__init__ (6,028 us, 0.06%)</title><rect x="318.6" y="103" width="0.7" height="15.0" fill="rgb(152.90220948115,118.916939355484,118.916939355484)" rx="2" ry="2" />
<text  x="321.56" y="113.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalProblem.__init__ (11,078 us, 0.11%)</title><rect x="317.1" y="87" width="1.3" height="15.0" fill="rgb(120.534342276137,148.28668133085,148.28668133085)" rx="2" ry="2" />
<text  x="320.06" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (6,043 us, 0.06%)</title><rect x="118.5" y="135" width="0.7" height="15.0" fill="rgb(138.109438508823,107.030436178858,138.109438508823)" rx="2" ry="2" />
<text  x="121.51" y="145.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (686,584 us, 6.98%)</title><rect x="343.4" y="199" width="82.4" height="15.0" fill="rgb(151.912663465671,151.912663465671,128.499830641326)" rx="2" ry="2" />
<text  x="346.44" y="209.5" >pyop2.gl..</text>
</g>
<g >
<title>ParLoopExecute (657,120 us, 6.68%)</title><rect x="460.6" y="167" width="78.9" height="15.0" fill="rgb(155.704039541457,155.704039541457,146.873422393212)" rx="2" ry="2" />
<text  x="463.65" y="177.5" >ParLoopE..</text>
</g>
<g >
<title>all (9,833,397 us, 100%)</title><rect x="10.0" y="39" width="1180.0" height="15.0" fill="rgb(137.363899397904,137.363899397904,154.005916012498)" rx="2" ry="2" />
<text  x="13.00" y="49.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (3,071 us, 0.03%)</title><rect x="426.4" y="183" width="0.4" height="15.0" fill="rgb(146.285014543274,159.907090655746,146.285014543274)" rx="2" ry="2" />
<text  x="429.41" y="193.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_form0_cell_integral_otherwise (2,490,722 us, 25.33%)</title><rect x="539.9" y="151" width="298.9" height="15.0" fill="rgb(131.690135092569,151.178923912888,151.178923912888)" rx="2" ry="2" />
<text  x="542.90" y="161.5" >Parloop_Cells_wrap_form0_cell_integr..</text>
</g>
<g >
<title>firedrake.mesh.MeshTopology._facets (2,283 us, 0.02%)</title><rect x="315.3" y="151" width="0.3" height="15.0" fill="rgb(136.468459578531,136.468459578531,153.832605079716)" rx="2" ry="2" />
<text  x="318.32" y="161.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (10,905 us, 0.11%)</title><rect x="119.2" y="71" width="1.3" height="15.0" fill="rgb(110.30176725787,110.30176725787,148.768083985394)" rx="2" ry="2" />
<text  x="122.24" y="81.5" ></text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (238,009 us, 2.42%)</title><rect x="426.8" y="167" width="28.5" height="15.0" fill="rgb(143.926527789223,154.351322019428,154.351322019428)" rx="2" ry="2" />
<text  x="429.78" y="177.5" >f..</text>
</g>
<g >
<title>firedrake.ufl_expr.action (10,203 us, 0.10%)</title><rect x="315.8" y="87" width="1.3" height="15.0" fill="rgb(154.632122967914,154.632122967914,141.678749767583)" rx="2" ry="2" />
<text  x="318.84" y="97.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (4,036 us, 0.04%)</title><rect x="456.9" y="199" width="0.5" height="15.0" fill="rgb(155.612071899761,155.612071899761,146.427733052687)" rx="2" ry="2" />
<text  x="459.88" y="209.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (9,450 us, 0.10%)</title><rect x="456.2" y="151" width="1.2" height="15.0" fill="rgb(153.744628425112,153.744628425112,137.377814675543)" rx="2" ry="2" />
<text  x="459.23" y="161.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (1,303 us, 0.01%)</title><rect x="1189.8" y="183" width="0.2" height="15.0" fill="rgb(133.838565681602,151.735924435971,151.735924435971)" rx="2" ry="2" />
<text  x="1192.84" y="193.5" ></text>
</g>
<g >
<title>firedrake.functionspace.VectorFunctionSpace (5,278 us, 0.05%)</title><rect x="315.0" y="71" width="0.6" height="15.0" fill="rgb(138.534951356815,161.168728848891,138.534951356815)" rx="2" ry="2" />
<text  x="317.96" y="81.5" ></text>
</g>
<g >
<title>PCSetUp (1,835,138 us, 18.66%)</title><rect x="319.3" y="119" width="220.2" height="15.0" fill="rgb(145.370893494588,154.725787202301,154.725787202301)" rx="2" ry="2" />
<text  x="322.29" y="129.5" >PCSetUp</text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (4,763 us, 0.05%)</title><rect x="321.0" y="183" width="0.6" height="15.0" fill="rgb(134.639988050217,161.802792642988,134.639988050217)" rx="2" ry="2" />
<text  x="323.99" y="193.5" ></text>
</g>
<g >
<title>ParLoopExecute (871,027 us, 8.86%)</title><rect x="14.0" y="103" width="104.5" height="15.0" fill="rgb(117.787078617507,117.787078617507,150.216853925969)" rx="2" ry="2" />
<text  x="16.99" y="113.5" >ParLoopExec..</text>
</g>
</g>
</svg>
