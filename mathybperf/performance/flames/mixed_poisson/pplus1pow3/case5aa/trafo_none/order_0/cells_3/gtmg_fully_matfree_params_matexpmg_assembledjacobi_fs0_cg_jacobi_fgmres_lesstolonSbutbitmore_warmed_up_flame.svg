<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="299" onload="init(evt)" viewBox="0 0 1200 299" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:13px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:18px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 13 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (1 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="299.0" fill="url(#background)"  />
<text id="title" x="600.00" y="26" >Firedrake example</text>
<text id="details" x="10.00" y="281" > </text>
<text id="unzoom" x="10.00" y="26" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="26" >Search</text>
<text id="ignorecase" x="1174.00" y="26" >ic</text>
<text id="matched" x="1090.00" y="281" > </text>
<g id="frames">
<g >
<title>firedrake.utility_meshes.RectangleMesh (2,065 us, 0.08%)</title><rect x="803.9" y="87" width="1.0" height="15.0" fill="rgb(135.572644006981,152.185500298106,152.185500298106)" rx="2" ry="2" />
<text  x="806.92" y="97.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (3,195 us, 0.12%)</title><rect x="1188.6" y="167" width="1.4" height="15.0" fill="rgb(152.283988545757,152.283988545757,130.299329106359)" rx="2" ry="2" />
<text  x="1191.56" y="177.5" ></text>
</g>
<g >
<title>firedrake.__init__ (1,661,742 us, 63.42%)</title><rect x="52.7" y="71" width="748.4" height="15.0" fill="rgb(142.995749591461,160.442552392088,142.995749591461)" rx="2" ry="2" />
<text  x="55.71" y="81.5" >firedrake.__init__</text>
</g>
<g >
<title>ParLoopExecute (681,477 us, 26.01%)</title><rect x="839.5" y="167" width="306.9" height="15.0" fill="rgb(148.566224208391,159.53573094282,148.566224208391)" rx="2" ry="2" />
<text  x="842.47" y="177.5" >ParLoopExecute</text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (5,329 us, 0.20%)</title><rect x="801.5" y="119" width="2.4" height="15.0" fill="rgb(114.794114266729,114.794114266729,149.637570503238)" rx="2" ry="2" />
<text  x="804.52" y="129.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.action (10,162 us, 0.39%)</title><rect x="804.9" y="87" width="4.5" height="15.0" fill="rgb(142.049544761882,142.049544761882,154.912815115203)" rx="2" ry="2" />
<text  x="807.85" y="97.5" ></text>
</g>
<g >
<title>CreateMesh (463 us, 0.02%)</title><rect x="804.4" y="119" width="0.2" height="15.0" fill="rgb(156.024092260922,142.851374000398,142.851374000398)" rx="2" ry="2" />
<text  x="807.38" y="129.5" ></text>
</g>
<g >
<title>firedrake.functionspace.make_scalar_element (1,052 us, 0.04%)</title><rect x="1152.3" y="215" width="0.5" height="15.0" fill="rgb(138.263302839681,107.424713526683,138.263302839681)" rx="2" ry="2" />
<text  x="1155.31" y="225.5" ></text>
</g>
<g >
<title>ParLoopExecute (1,330 us, 0.05%)</title><rect x="1169.3" y="167" width="0.6" height="15.0" fill="rgb(154.765847259795,133.204828991759,133.204828991759)" rx="2" ry="2" />
<text  x="1172.27" y="177.5" ></text>
</g>
<g >
<title>firedrake.function.Function.__init__ (800 us, 0.03%)</title><rect x="1154.0" y="151" width="0.4" height="15.0" fill="rgb(128.891436463456,162.738603366414,128.891436463456)" rx="2" ry="2" />
<text  x="1157.00" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (393 us, 0.01%)</title><rect x="823.6" y="183" width="0.1" height="15.0" fill="rgb(139.265662545129,139.265662545129,154.373999202283)" rx="2" ry="2" />
<text  x="826.55" y="193.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (8,894 us, 0.34%)</title><rect x="809.4" y="103" width="4.0" height="15.0" fill="rgb(151.922356033208,151.922356033208,128.546802314779)" rx="2" ry="2" />
<text  x="812.43" y="113.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (2,854 us, 0.11%)</title><rect x="816.2" y="119" width="1.3" height="15.0" fill="rgb(126.698837806286,149.884883875704,149.884883875704)" rx="2" ry="2" />
<text  x="819.19" y="129.5" ></text>
</g>
<g >
<title>ParLoopExecute (38,890 us, 1.48%)</title><rect x="24.2" y="103" width="17.5" height="15.0" fill="rgb(147.182980110154,159.760910214626,147.182980110154)" rx="2" ry="2" />
<text  x="27.17" y="113.5" ></text>
</g>
<g >
<title>firedrake.mesh.MeshTopology._facets (2,304 us, 0.09%)</title><rect x="802.9" y="151" width="1.0" height="15.0" fill="rgb(121.388300037777,121.388300037777,150.913864523441)" rx="2" ry="2" />
<text  x="805.88" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspace.VectorFunctionSpace (7,965 us, 0.30%)</title><rect x="41.7" y="87" width="3.6" height="15.0" fill="rgb(143.019034575709,143.019034575709,155.100458304976)" rx="2" ry="2" />
<text  x="44.69" y="97.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (1,330 us, 0.05%)</title><rect x="1169.3" y="199" width="0.6" height="15.0" fill="rgb(152.572718998468,152.572718998468,131.698561300269)" rx="2" ry="2" />
<text  x="1172.27" y="209.5" ></text>
</g>
<g >
<title>firedrake.assemble.allocate_matrix (7,860 us, 0.30%)</title><rect x="1146.5" y="151" width="3.6" height="15.0" fill="rgb(150.849057494912,150.849057494912,123.345432475343)" rx="2" ry="2" />
<text  x="1149.55" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (3,643 us, 0.14%)</title><rect x="823.9" y="167" width="1.6" height="15.0" fill="rgb(137.427566092378,152.66640602395,152.66640602395)" rx="2" ry="2" />
<text  x="826.87" y="177.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (11,173 us, 0.43%)</title><rect x="46.4" y="87" width="5.1" height="15.0" fill="rgb(115.282959638087,115.282959638087,149.732185736404)" rx="2" ry="2" />
<text  x="49.43" y="97.5" ></text>
</g>
<g >
<title>Log_Event_form1_cell_integral_otherwise (1,351 us, 0.05%)</title><rect x="1175.4" y="167" width="0.6" height="15.0" fill="rgb(137.281723896879,161.372742621438,137.281723896879)" rx="2" ry="2" />
<text  x="1178.43" y="177.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (6,184 us, 0.24%)</title><rect x="1151.2" y="183" width="2.8" height="15.0" fill="rgb(120.444287600533,120.444287600533,150.731152438813)" rx="2" ry="2" />
<text  x="1154.21" y="193.5" ></text>
</g>
<g >
<title>firedrake.mesh._from_cell_list (581 us, 0.02%)</title><rect x="804.6" y="103" width="0.3" height="15.0" fill="rgb(147.939734672298,147.939734672298,109.246406488827)" rx="2" ry="2" />
<text  x="807.59" y="113.5" ></text>
</g>
<g >
<title>firedrake.functionspace.make_scalar_element (319 us, 0.01%)</title><rect x="823.7" y="167" width="0.2" height="15.0" fill="rgb(138.433223560213,161.185289187872,138.433223560213)" rx="2" ry="2" />
<text  x="826.73" y="177.5" ></text>
</g>
<g >
<title>Mesh: numbering (772 us, 0.03%)</title><rect x="51.9" y="87" width="0.4" height="15.0" fill="rgb(141.125166092284,114.758238111478,141.125166092284)" rx="2" ry="2" />
<text  x="54.94" y="97.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalProblem.__init__ (9,660 us, 0.37%)</title><rect x="809.4" y="87" width="4.4" height="15.0" fill="rgb(116.157387027094,147.151915155172,147.151915155172)" rx="2" ry="2" />
<text  x="812.43" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (320 us, 0.01%)</title><rect x="801.4" y="87" width="0.1" height="15.0" fill="rgb(154.961565239168,154.961565239168,143.275277697504)" rx="2" ry="2" />
<text  x="804.38" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (320 us, 0.01%)</title><rect x="801.4" y="119" width="0.1" height="15.0" fill="rgb(153.858284365027,126.246846798539,126.246846798539)" rx="2" ry="2" />
<text  x="804.38" y="129.5" ></text>
</g>
<g >
<title>firedrake.assemble.allocate_matrix (6,756 us, 0.26%)</title><rect x="814.4" y="87" width="3.1" height="15.0" fill="rgb(133.250712942802,162.028953706986,133.250712942802)" rx="2" ry="2" />
<text  x="817.43" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspace.make_scalar_element (418 us, 0.02%)</title><rect x="46.2" y="87" width="0.2" height="15.0" fill="rgb(148.686507759134,159.516149899676,148.686507759134)" rx="2" ry="2" />
<text  x="49.24" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspace.MixedFunctionSpace (2,778 us, 0.11%)</title><rect x="822.5" y="167" width="1.2" height="15.0" fill="rgb(118.304229512521,118.304229512521,150.316947647585)" rx="2" ry="2" />
<text  x="825.48" y="177.5" ></text>
</g>
<g >
<title>perfsolve (827,162 us, 31.57%)</title><rect x="817.5" y="71" width="372.5" height="15.0" fill="rgb(111.4966206897,111.4966206897,148.999345939942)" rx="2" ry="2" />
<text  x="820.47" y="81.5" >perfsolve</text>
</g>
<g >
<title>CreateFunctionSpace (5,329 us, 0.20%)</title><rect x="801.5" y="87" width="2.4" height="15.0" fill="rgb(112.025192167891,112.025192167891,149.101650097011)" rx="2" ry="2" />
<text  x="804.52" y="97.5" ></text>
</g>
<g >
<title>HybridOperatorAssembly (712,821 us, 27.21%)</title><rect x="825.5" y="151" width="321.0" height="15.0" fill="rgb(112.385435561738,146.174001812303,146.174001812303)" rx="2" ry="2" />
<text  x="828.51" y="161.5" >HybridOperatorAssembly</text>
</g>
<g >
<title>CreateFunctionSpace (6,740 us, 0.26%)</title><rect x="822.5" y="151" width="3.0" height="15.0" fill="rgb(138.687131328349,138.687131328349,154.26202541839)" rx="2" ry="2" />
<text  x="825.48" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (10,806 us, 0.41%)</title><rect x="46.6" y="103" width="4.9" height="15.0" fill="rgb(119.871361225428,148.114797354741,148.114797354741)" rx="2" ry="2" />
<text  x="49.59" y="113.5" ></text>
</g>
<g >
<title>ParLoopExecute (11,748 us, 0.45%)</title><rect x="1171.2" y="135" width="5.3" height="15.0" fill="rgb(131.820892328197,162.261715202387,131.820892328197)" rx="2" ry="2" />
<text  x="1174.22" y="145.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (7,965 us, 0.30%)</title><rect x="41.7" y="103" width="3.6" height="15.0" fill="rgb(138.663185826781,161.147853470059,138.663185826781)" rx="2" ry="2" />
<text  x="44.69" y="113.5" ></text>
</g>
<g >
<title>PCSetUp (782,464 us, 29.86%)</title><rect x="817.5" y="119" width="352.4" height="15.0" fill="rgb(141.890553383944,153.823476803245,153.823476803245)" rx="2" ry="2" />
<text  x="820.47" y="129.5" >PCSetUp</text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (406 us, 0.02%)</title><rect x="1189.8" y="215" width="0.2" height="15.0" fill="rgb(140.016562102226,111.917440386955,140.016562102226)" rx="2" ry="2" />
<text  x="1192.82" y="225.5" ></text>
</g>
<g >
<title>SNESFunctionEval (44,698 us, 1.71%)</title><rect x="1169.9" y="119" width="20.1" height="15.0" fill="rgb(111.461328600362,145.93441852602,145.93441852602)" rx="2" ry="2" />
<text  x="1172.87" y="129.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (8,309 us, 0.32%)</title><rect x="1150.3" y="167" width="3.7" height="15.0" fill="rgb(147.649778699459,147.649778699459,107.841235235838)" rx="2" ry="2" />
<text  x="1153.26" y="177.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (3,643 us, 0.14%)</title><rect x="823.9" y="183" width="1.6" height="15.0" fill="rgb(129.735665166956,162.601170786775,129.735665166956)" rx="2" ry="2" />
<text  x="826.87" y="193.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (7,637 us, 0.29%)</title><rect x="41.8" y="151" width="3.5" height="15.0" fill="rgb(156.233095793527,144.453734417043,144.453734417043)" rx="2" ry="2" />
<text  x="44.84" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspace.VectorFunctionSpace (5,329 us, 0.20%)</title><rect x="801.5" y="71" width="2.4" height="15.0" fill="rgb(142.829689865124,154.066956631699,154.066956631699)" rx="2" ry="2" />
<text  x="804.52" y="81.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (681,477 us, 26.01%)</title><rect x="839.5" y="199" width="306.9" height="15.0" fill="rgb(128.747722400676,128.747722400676,152.338268851744)" rx="2" ry="2" />
<text  x="842.47" y="209.5" >pyop2.global_kernel.GlobalKernel.compile</text>
</g>
<g >
<title>CreateFunctionSpace (4,329 us, 0.17%)</title><rect x="1151.8" y="199" width="1.9" height="15.0" fill="rgb(126.82857904494,163.074417364777,126.82857904494)" rx="2" ry="2" />
<text  x="1154.75" y="209.5" ></text>
</g>
<g >
<title>firedrake.utility_meshes.SquareMesh (2,065 us, 0.08%)</title><rect x="803.9" y="71" width="1.0" height="15.0" fill="rgb(150.31408142407,150.31408142407,120.752856132032)" rx="2" ry="2" />
<text  x="806.92" y="81.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (7,637 us, 0.29%)</title><rect x="41.8" y="135" width="3.5" height="15.0" fill="rgb(146.058825200732,146.058825200732,155.688804877561)" rx="2" ry="2" />
<text  x="44.84" y="145.5" ></text>
</g>
<g >
<title>HybridInit (782,464 us, 29.86%)</title><rect x="817.5" y="135" width="352.4" height="15.0" fill="rgb(125.280281769407,149.517110088365,149.517110088365)" rx="2" ry="2" />
<text  x="820.47" y="145.5" >HybridInit</text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (320 us, 0.01%)</title><rect x="801.4" y="103" width="0.1" height="15.0" fill="rgb(143.495821089401,160.361145404051,143.495821089401)" rx="2" ry="2" />
<text  x="804.38" y="113.5" ></text>
</g>
<g >
<title>firedrake.mesh.make_mesh_from_coordinates (868 us, 0.03%)</title><rect x="45.6" y="87" width="0.4" height="15.0" fill="rgb(146.603571855212,155.045370480981,155.045370480981)" rx="2" ry="2" />
<text  x="48.61" y="97.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.action (3,902 us, 0.15%)</title><rect x="814.4" y="119" width="1.8" height="15.0" fill="rgb(119.0072079096,147.890757606193,147.890757606193)" rx="2" ry="2" />
<text  x="817.43" y="129.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (2,039 us, 0.08%)</title><rect x="1152.8" y="215" width="0.9" height="15.0" fill="rgb(141.647846667104,160.661978449541,141.647846667104)" rx="2" ry="2" />
<text  x="1155.78" y="225.5" ></text>
</g>
<g >
<title>PetscBarrier (936 us, 0.04%)</title><rect x="52.3" y="71" width="0.4" height="15.0" fill="rgb(132.988056554967,162.07171172361,132.988056554967)" rx="2" ry="2" />
<text  x="55.29" y="81.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (5,329 us, 0.20%)</title><rect x="801.5" y="135" width="2.4" height="15.0" fill="rgb(146.877615932164,155.116418945376,155.116418945376)" rx="2" ry="2" />
<text  x="804.52" y="145.5" ></text>
</g>
<g >
<title>CreateSparsity (5,840 us, 0.22%)</title><rect x="1146.8" y="167" width="2.6" height="15.0" fill="rgb(135.262090319691,99.7341064442083,135.262090319691)" rx="2" ry="2" />
<text  x="1149.77" y="177.5" ></text>
</g>
<g >
<title>firedrake.mesh.ExtrudedMeshTopology.__init__ (734 us, 0.03%)</title><rect x="45.3" y="87" width="0.3" height="15.0" fill="rgb(153.221912494713,121.367995792796,121.367995792796)" rx="2" ry="2" />
<text  x="48.28" y="97.5" ></text>
</g>
<g >
<title>all (2,620,064 us, 100%)</title><rect x="10.0" y="39" width="1180.0" height="15.0" fill="rgb(131.222268824302,162.35916554023,131.222268824302)" rx="2" ry="2" />
<text  x="13.00" y="49.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (1,295 us, 0.05%)</title><rect x="823.0" y="231" width="0.6" height="15.0" fill="rgb(128.3952174114,162.819383212098,128.3952174114)" rx="2" ry="2" />
<text  x="825.97" y="241.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (8,683 us, 0.33%)</title><rect x="1150.1" y="151" width="3.9" height="15.0" fill="rgb(144.879916208921,160.135827593897,144.879916208921)" rx="2" ry="2" />
<text  x="1153.09" y="161.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (986 us, 0.04%)</title><rect x="1189.6" y="199" width="0.4" height="15.0" fill="rgb(127.862502572038,150.186574740899,150.186574740899)" rx="2" ry="2" />
<text  x="1192.56" y="209.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.derivative (766 us, 0.03%)</title><rect x="813.4" y="103" width="0.4" height="15.0" fill="rgb(136.10165672087,136.10165672087,153.761610978233)" rx="2" ry="2" />
<text  x="816.43" y="113.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (3,643 us, 0.14%)</title><rect x="823.9" y="199" width="1.6" height="15.0" fill="rgb(152.390262491792,114.992012437073,114.992012437073)" rx="2" ry="2" />
<text  x="826.87" y="209.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (1,295 us, 0.05%)</title><rect x="823.0" y="199" width="0.6" height="15.0" fill="rgb(140.337293111735,140.337293111735,154.581411570013)" rx="2" ry="2" />
<text  x="825.97" y="209.5" ></text>
</g>
<g >
<title>firedrake.mesh._Facets.__init__ (676 us, 0.03%)</title><rect x="803.6" y="167" width="0.3" height="15.0" fill="rgb(155.298349440248,155.298349440248,144.907385748895)" rx="2" ry="2" />
<text  x="806.62" y="177.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (5,329 us, 0.20%)</title><rect x="801.5" y="103" width="2.4" height="15.0" fill="rgb(155.541570490886,155.541570490886,146.08607237891)" rx="2" ry="2" />
<text  x="804.52" y="113.5" ></text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (29,956 us, 1.14%)</title><rect x="1176.5" y="135" width="13.5" height="15.0" fill="rgb(137.776510638952,161.292195942496,137.776510638952)" rx="2" ry="2" />
<text  x="1179.51" y="145.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (1,295 us, 0.05%)</title><rect x="823.0" y="215" width="0.6" height="15.0" fill="rgb(107.929066460283,145.018646860073,145.018646860073)" rx="2" ry="2" />
<text  x="825.97" y="225.5" ></text>
</g>
<g >
<title>firedrake.extrusion_utils.make_extruded_coords (69,807 us, 2.66%)</title><rect x="10.2" y="87" width="31.5" height="15.0" fill="rgb(156.157090531354,143.871027407045,143.871027407045)" rx="2" ry="2" />
<text  x="13.25" y="97.5" >fi..</text>
</g>
<g >
<title>MatZeroInitial (1,536 us, 0.06%)</title><rect x="1149.4" y="167" width="0.7" height="15.0" fill="rgb(151.03933848501,151.03933848501,124.267563427355)" rx="2" ry="2" />
<text  x="1152.40" y="177.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (406 us, 0.02%)</title><rect x="1189.8" y="231" width="0.2" height="15.0" fill="rgb(152.247923825986,113.900749332559,113.900749332559)" rx="2" ry="2" />
<text  x="1192.82" y="241.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (406 us, 0.02%)</title><rect x="1189.8" y="247" width="0.2" height="15.0" fill="rgb(154.455455428576,130.825158285749,130.825158285749)" rx="2" ry="2" />
<text  x="1192.82" y="257.5" ></text>
</g>
<g >
<title>SNESSolve (827,162 us, 31.57%)</title><rect x="817.5" y="103" width="372.5" height="15.0" fill="rgb(126.072740277053,163.197460885131,126.072740277053)" rx="2" ry="2" />
<text  x="820.47" y="113.5" >SNESSolve</text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.__init__ (8,197 us, 0.31%)</title><rect x="813.8" y="71" width="3.7" height="15.0" fill="rgb(148.346328948741,148.346328948741,111.216824905437)" rx="2" ry="2" />
<text  x="816.78" y="81.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (12,123 us, 0.46%)</title><rect x="46.0" y="71" width="5.5" height="15.0" fill="rgb(114.838170010877,146.809895928746,146.809895928746)" rx="2" ry="2" />
<text  x="49.00" y="81.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (1,330 us, 0.05%)</title><rect x="1169.3" y="183" width="0.6" height="15.0" fill="rgb(153.246207632453,153.246207632453,134.962390834195)" rx="2" ry="2" />
<text  x="1172.27" y="193.5" ></text>
</g>
<g >
<title>Log_Event_form0_cell_integral_otherwise (7,195 us, 0.27%)</title><rect x="1171.5" y="167" width="3.3" height="15.0" fill="rgb(112.282349158753,146.147275707825,146.147275707825)" rx="2" ry="2" />
<text  x="1174.55" y="177.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (1,313 us, 0.05%)</title><rect x="1189.4" y="183" width="0.6" height="15.0" fill="rgb(121.340917485301,121.340917485301,150.904693706832)" rx="2" ry="2" />
<text  x="1192.41" y="193.5" ></text>
</g>
<g >
<title>firedrake (2,620,064 us, 100.00%)</title><rect x="10.0" y="55" width="1180.0" height="15.0" fill="rgb(153.646982766186,124.626867874095,124.626867874095)" rx="2" ry="2" />
<text  x="13.00" y="65.5" >firedrake</text>
</g>
<g >
<title>firedrake.mesh._Facets.__init__ (647 us, 0.02%)</title><rect x="45.0" y="167" width="0.3" height="15.0" fill="rgb(150.018805289095,159.299264255264,150.018805289095)" rx="2" ry="2" />
<text  x="47.98" y="177.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.WithGeometry.split (658 us, 0.03%)</title><rect x="1153.7" y="199" width="0.3" height="15.0" fill="rgb(153.121171112528,153.121171112528,134.356444622252)" rx="2" ry="2" />
<text  x="1156.70" y="209.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.solve (827,162 us, 31.57%)</title><rect x="817.5" y="87" width="372.5" height="15.0" fill="rgb(154.330951512492,154.330951512492,140.219226560536)" rx="2" ry="2" />
<text  x="820.47" y="97.5" >firedrake.variational_solver.NonlinearVariatio..</text>
</g>
<g >
<title>firedrake.matrix_free.operators.ImplicitMatrixContext.__init__ (6,756 us, 0.26%)</title><rect x="814.4" y="103" width="3.1" height="15.0" fill="rgb(140.143032540248,160.906948191122,140.143032540248)" rx="2" ry="2" />
<text  x="817.43" y="113.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (37,913 us, 1.45%)</title><rect x="24.6" y="135" width="17.1" height="15.0" fill="rgb(110.081587428733,110.081587428733,148.725468534594)" rx="2" ry="2" />
<text  x="27.61" y="145.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_form1_cell_integral_otherwise (2,399 us, 0.09%)</title><rect x="1175.4" y="151" width="1.1" height="15.0" fill="rgb(155.785440408758,155.785440408758,147.267903519367)" rx="2" ry="2" />
<text  x="1178.43" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.boundary_nodes (363 us, 0.01%)</title><rect x="1146.4" y="183" width="0.1" height="15.0" fill="rgb(142.988010871117,154.108002818438,154.108002818438)" rx="2" ry="2" />
<text  x="1149.38" y="193.5" ></text>
</g>
<g >
<title>firedrake.interpolation.make_interpolator (28,921 us, 1.10%)</title><rect x="1154.4" y="151" width="13.0" height="15.0" fill="rgb(156.475497893083,146.312150513635,146.312150513635)" rx="2" ry="2" />
<text  x="1157.36" y="161.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (5,587 us, 0.21%)</title><rect x="1187.5" y="151" width="2.5" height="15.0" fill="rgb(146.760101170775,129.19775925011,146.760101170775)" rx="2" ry="2" />
<text  x="1190.48" y="161.5" ></text>
</g>
<g >
<title>firedrake.function.Function.split (766 us, 0.03%)</title><rect x="813.4" y="119" width="0.4" height="15.0" fill="rgb(119.504100032357,119.504100032357,150.549180651424)" rx="2" ry="2" />
<text  x="816.43" y="129.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (7,637 us, 0.29%)</title><rect x="41.8" y="119" width="3.5" height="15.0" fill="rgb(153.942830566825,126.895034345659,126.895034345659)" rx="2" ry="2" />
<text  x="44.84" y="129.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_form0_cell_integral_otherwise (8,937 us, 0.34%)</title><rect x="1171.4" y="151" width="4.0" height="15.0" fill="rgb(135.36476297077,99.9972051125987,135.36476297077)" rx="2" ry="2" />
<text  x="1174.40" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (1,508 us, 0.06%)</title><rect x="1153.0" y="231" width="0.7" height="15.0" fill="rgb(137.512640221931,152.68846227976,152.68846227976)" rx="2" ry="2" />
<text  x="1156.02" y="241.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (10,806 us, 0.41%)</title><rect x="46.6" y="119" width="4.9" height="15.0" fill="rgb(154.045136559503,154.045136559503,138.834123326822)" rx="2" ry="2" />
<text  x="49.59" y="129.5" ></text>
</g>
<g >
<title>firedrake.functionspace.MixedFunctionSpace (905 us, 0.03%)</title><rect x="801.1" y="71" width="0.4" height="15.0" fill="rgb(154.135299785701,128.370631690378,128.370631690378)" rx="2" ry="2" />
<text  x="804.11" y="81.5" ></text>
</g>
<g >
<title>CreateMesh (471 us, 0.02%)</title><rect x="51.7" y="87" width="0.2" height="15.0" fill="rgb(110.777789123926,145.757204587685,145.757204587685)" rx="2" ry="2" />
<text  x="54.73" y="97.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (1,835 us, 0.07%)</title><rect x="822.7" y="183" width="0.9" height="15.0" fill="rgb(154.896569861976,134.207035608485,134.207035608485)" rx="2" ry="2" />
<text  x="825.73" y="193.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.local_to_global_map (363 us, 0.01%)</title><rect x="1146.4" y="167" width="0.1" height="15.0" fill="rgb(156.314202684671,145.075553915814,145.075553915814)" rx="2" ry="2" />
<text  x="1149.38" y="177.5" ></text>
</g>
<g >
<title>CreateMesh (1,854 us, 0.07%)</title><rect x="51.5" y="71" width="0.8" height="15.0" fill="rgb(154.016845001953,154.016845001953,138.697018086387)" rx="2" ry="2" />
<text  x="54.46" y="81.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_slate_loopy_knl_0 (681,477 us, 26.01%)</title><rect x="839.5" y="183" width="306.9" height="15.0" fill="rgb(151.620074569924,151.620074569924,127.081899838864)" rx="2" ry="2" />
<text  x="842.47" y="193.5" >Parloop_Cells_wrap_slate_loopy_knl_0</text>
</g>
<g >
<title>CreateExtMesh (79,929 us, 3.05%)</title><rect x="10.0" y="71" width="36.0" height="15.0" fill="rgb(148.790035834823,148.790035834823,113.36709673799)" rx="2" ry="2" />
<text  x="13.00" y="81.5" >Cr..</text>
</g>
<g >
<title>firedrake.parloops.par_loop (5,519 us, 0.21%)</title><rect x="1167.4" y="151" width="2.5" height="15.0" fill="rgb(130.050640664658,130.050640664658,152.590446580256)" rx="2" ry="2" />
<text  x="1170.38" y="161.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.LinearVariationalProblem.__init__ (19,822 us, 0.76%)</title><rect x="804.9" y="71" width="8.9" height="15.0" fill="rgb(141.642682909395,153.759214087621,153.759214087621)" rx="2" ry="2" />
<text  x="807.85" y="81.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_pyop2_kernel_uniform_extrusion (38,461 us, 1.47%)</title><rect x="24.4" y="119" width="17.3" height="15.0" fill="rgb(142.088755925048,142.088755925048,154.92040437259)" rx="2" ry="2" />
<text  x="27.37" y="129.5" ></text>
</g>
<g >
<title>CreateMesh (811 us, 0.03%)</title><rect x="804.2" y="103" width="0.4" height="15.0" fill="rgb(126.447417463902,149.819700823975,149.819700823975)" rx="2" ry="2" />
<text  x="807.22" y="113.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (1,508 us, 0.06%)</title><rect x="1153.0" y="247" width="0.7" height="15.0" fill="rgb(154.821755542095,133.633459156058,133.633459156058)" rx="2" ry="2" />
<text  x="1156.02" y="257.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (1,420 us, 0.05%)</title><rect x="1174.8" y="167" width="0.6" height="15.0" fill="rgb(118.192357200113,147.679500014844,147.679500014844)" rx="2" ry="2" />
<text  x="1177.79" y="177.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (1,048 us, 0.04%)</title><rect x="1176.0" y="167" width="0.5" height="15.0" fill="rgb(154.663844872969,154.663844872969,141.832478999772)" rx="2" ry="2" />
<text  x="1179.04" y="177.5" ></text>
</g>
</g>
</svg>
