<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="299" onload="init(evt)" viewBox="0 0 1200 299" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:13px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:18px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 13 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (1 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="299.0" fill="url(#background)"  />
<text id="title" x="600.00" y="26" >Firedrake example</text>
<text id="details" x="10.00" y="281" > </text>
<text id="unzoom" x="10.00" y="26" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="26" >Search</text>
<text id="ignorecase" x="1174.00" y="26" >ic</text>
<text id="matched" x="1090.00" y="281" > </text>
<g id="frames">
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (6,984 us, 0.06%)</title><rect x="261.0" y="199" width="0.7" height="15.0" fill="rgb(148.873349523722,148.873349523722,113.770847691883)" rx="2" ry="2" />
<text  x="264.05" y="209.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (1,511 us, 0.01%)</title><rect x="260.9" y="199" width="0.1" height="15.0" fill="rgb(152.753666042374,144.556269233584,152.753666042374)" rx="2" ry="2" />
<text  x="263.90" y="209.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_slate_loopy_knl_0 (625,751 us, 5.12%)</title><rect x="281.2" y="183" width="60.4" height="15.0" fill="rgb(149.204800189801,135.462300486364,149.204800189801)" rx="2" ry="2" />
<text  x="284.24" y="193.5" >Parlo..</text>
</g>
<g >
<title>firedrake.matrix_free.operators.ImplicitMatrixContext.__init__ (6,035 us, 0.05%)</title><rect x="259.0" y="103" width="0.6" height="15.0" fill="rgb(118.897565471476,147.862331788901,147.862331788901)" rx="2" ry="2" />
<text  x="262.02" y="113.5" ></text>
</g>
<g >
<title>firedrake.utility_meshes.RectangleMesh (2,043 us, 0.02%)</title><rect x="256.5" y="87" width="0.2" height="15.0" fill="rgb(142.561268791056,142.561268791056,155.011858475688)" rx="2" ry="2" />
<text  x="259.52" y="97.5" ></text>
</g>
<g >
<title>CreateMesh (1,821 us, 0.01%)</title><rect x="99.4" y="71" width="0.1" height="15.0" fill="rgb(148.241591775886,148.241591775886,110.709252452369)" rx="2" ry="2" />
<text  x="102.35" y="81.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (6,006 us, 0.05%)</title><rect x="97.4" y="119" width="0.6" height="15.0" fill="rgb(148.471772905193,148.471772905193,111.824745617475)" rx="2" ry="2" />
<text  x="100.42" y="129.5" ></text>
</g>
<g >
<title>firedrake.extrusion_utils.make_extruded_coords (903,520 us, 7.39%)</title><rect x="10.2" y="87" width="87.2" height="15.0" fill="rgb(123.956151265101,149.173816994656,149.173816994656)" rx="2" ry="2" />
<text  x="13.21" y="97.5" >firedrake..</text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalProblem.__init__ (11,384 us, 0.09%)</title><rect x="257.7" y="87" width="1.1" height="15.0" fill="rgb(111.402229632249,111.402229632249,148.981076703016)" rx="2" ry="2" />
<text  x="260.74" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (1,511 us, 0.01%)</title><rect x="260.9" y="215" width="0.1" height="15.0" fill="rgb(134.947244606156,161.752774133882,134.947244606156)" rx="2" ry="2" />
<text  x="263.90" y="225.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (8,183 us, 0.07%)</title><rect x="375.9" y="167" width="0.8" height="15.0" fill="rgb(137.09529166563,137.09529166563,153.953927419154)" rx="2" ry="2" />
<text  x="378.94" y="177.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (6,006 us, 0.05%)</title><rect x="97.4" y="135" width="0.6" height="15.0" fill="rgb(138.644146269907,161.150952932806,138.644146269907)" rx="2" ry="2" />
<text  x="100.42" y="145.5" ></text>
</g>
<g >
<title>all (12,226,068 us, 100%)</title><rect x="10.0" y="39" width="1180.0" height="15.0" fill="rgb(132.430879810167,132.430879810167,153.051138027774)" rx="2" ry="2" />
<text  x="13.00" y="49.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (14,063 us, 0.12%)</title><rect x="98.0" y="87" width="1.4" height="15.0" fill="rgb(138.672517401821,152.98917117825,152.98917117825)" rx="2" ry="2" />
<text  x="101.00" y="97.5" ></text>
</g>
<g >
<title>PCSetUp (1,922,731 us, 15.73%)</title><rect x="259.6" y="119" width="185.6" height="15.0" fill="rgb(120.2770207425,120.2770207425,150.698778208226)" rx="2" ry="2" />
<text  x="262.60" y="129.5" >PCSetUp</text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (1,257,774 us, 10.29%)</title><rect x="1068.6" y="135" width="121.4" height="15.0" fill="rgb(152.507722330588,152.507722330588,131.383577448233)" rx="2" ry="2" />
<text  x="1071.61" y="145.5" >firedrake.tsf..</text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (3,358 us, 0.03%)</title><rect x="1189.7" y="167" width="0.3" height="15.0" fill="rgb(139.991650790377,111.853605150341,139.991650790377)" rx="2" ry="2" />
<text  x="1192.68" y="177.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (6,045 us, 0.05%)</title><rect x="376.1" y="183" width="0.6" height="15.0" fill="rgb(145.959259469925,145.959259469925,155.669534090953)" rx="2" ry="2" />
<text  x="379.15" y="193.5" ></text>
</g>
<g >
<title>firedrake.utility_meshes.SquareMesh (2,043 us, 0.02%)</title><rect x="256.5" y="71" width="0.2" height="15.0" fill="rgb(156.443655030834,146.068021903061,146.068021903061)" rx="2" ry="2" />
<text  x="259.52" y="81.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (6,006 us, 0.05%)</title><rect x="97.4" y="151" width="0.6" height="15.0" fill="rgb(155.640009543738,139.906739835325,139.906739835325)" rx="2" ry="2" />
<text  x="100.42" y="161.5" ></text>
</g>
<g >
<title>firedrake.__init__ (1,621,223 us, 13.26%)</title><rect x="99.5" y="71" width="156.5" height="15.0" fill="rgb(143.970504054409,160.283871433003,143.970504054409)" rx="2" ry="2" />
<text  x="102.53" y="81.5" >firedrake.__init__</text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (1,774 us, 0.01%)</title><rect x="376.6" y="215" width="0.1" height="15.0" fill="rgb(155.384836426187,137.950412600766,137.950412600766)" rx="2" ry="2" />
<text  x="379.56" y="225.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (5,306 us, 0.04%)</title><rect x="256.0" y="87" width="0.5" height="15.0" fill="rgb(141.090595920295,114.669652045755,141.090595920295)" rx="2" ry="2" />
<text  x="259.00" y="97.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (6,006 us, 0.05%)</title><rect x="97.4" y="103" width="0.6" height="15.0" fill="rgb(139.111058139092,109.597086481423,139.111058139092)" rx="2" ry="2" />
<text  x="100.42" y="113.5" ></text>
</g>
<g >
<title>firedrake (12,226,068 us, 100.00%)</title><rect x="10.0" y="55" width="1180.0" height="15.0" fill="rgb(153.233670061975,153.233670061975,134.901631838802)" rx="2" ry="2" />
<text  x="13.00" y="65.5" >firedrake</text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (9,911 us, 0.08%)</title><rect x="257.9" y="103" width="0.9" height="15.0" fill="rgb(152.645083926116,116.945643433554,116.945643433554)" rx="2" ry="2" />
<text  x="260.88" y="113.5" ></text>
</g>
<g >
<title>firedrake.functionspace.VectorFunctionSpace (6,006 us, 0.05%)</title><rect x="97.4" y="87" width="0.6" height="15.0" fill="rgb(109.336331600654,145.383493377947,145.383493377947)" rx="2" ry="2" />
<text  x="100.42" y="97.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_pyop2_kernel_uniform_extrusion (872,579 us, 7.14%)</title><rect x="13.2" y="119" width="84.2" height="15.0" fill="rgb(109.812582020957,145.506965709137,145.506965709137)" rx="2" ry="2" />
<text  x="16.20" y="129.5" >Parloop_..</text>
</g>
<g >
<title>CreateFunctionSpace (8,495 us, 0.07%)</title><rect x="260.9" y="151" width="0.8" height="15.0" fill="rgb(140.309659856743,140.309659856743,154.576063198079)" rx="2" ry="2" />
<text  x="263.90" y="161.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_form1_cell_integral_otherwise (2,900,317 us, 23.72%)</title><rect x="788.7" y="151" width="279.9" height="15.0" fill="rgb(125.329754320819,149.529936305398,149.529936305398)" rx="2" ry="2" />
<text  x="791.68" y="161.5" >Parloop_Cells_wrap_form1_cell_inte..</text>
</g>
<g >
<title>HybridOperatorAssembly (1,067,825 us, 8.73%)</title><rect x="261.7" y="151" width="103.1" height="15.0" fill="rgb(144.458780122208,160.204384631269,144.458780122208)" rx="2" ry="2" />
<text  x="264.72" y="161.5" >HybridOpera..</text>
</g>
<g >
<title>firedrake.functionspace.MixedFunctionSpace (1,511 us, 0.01%)</title><rect x="260.9" y="167" width="0.1" height="15.0" fill="rgb(152.730570890498,117.601043493821,117.601043493821)" rx="2" ry="2" />
<text  x="263.90" y="177.5" ></text>
</g>
<g >
<title>Log_Event_form0_cell_integral_otherwise (9,930 us, 0.08%)</title><rect x="445.5" y="167" width="1.0" height="15.0" fill="rgb(152.621912361906,116.767994774612,116.767994774612)" rx="2" ry="2" />
<text  x="448.49" y="177.5" ></text>
</g>
<g >
<title>CreateExtMesh (911,749 us, 7.46%)</title><rect x="10.0" y="71" width="88.0" height="15.0" fill="rgb(146.876891663559,146.876891663559,155.847140321979)" rx="2" ry="2" />
<text  x="13.00" y="81.5" >CreateExt..</text>
</g>
<g >
<title>perfsolve (9,639,968 us, 78.85%)</title><rect x="259.6" y="71" width="930.4" height="15.0" fill="rgb(124.258274209266,124.258274209266,151.469343395342)" rx="2" ry="2" />
<text  x="262.60" y="81.5" >perfsolve</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (625,751 us, 5.12%)</title><rect x="281.2" y="199" width="60.4" height="15.0" fill="rgb(156.473552699599,146.297237363591,146.297237363591)" rx="2" ry="2" />
<text  x="284.24" y="209.5" >pyop2..</text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (231,798 us, 1.90%)</title><rect x="342.4" y="167" width="22.4" height="15.0" fill="rgb(155.72214882155,140.536474298553,140.536474298553)" rx="2" ry="2" />
<text  x="345.41" y="177.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (671,436 us, 5.49%)</title><rect x="380.4" y="199" width="64.8" height="15.0" fill="rgb(121.531604707342,148.545230850052,148.545230850052)" rx="2" ry="2" />
<text  x="383.37" y="209.5" >pyop2...</text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (5,665 us, 0.05%)</title><rect x="1189.5" y="151" width="0.5" height="15.0" fill="rgb(143.95950924999,122.021242453099,143.95950924999)" rx="2" ry="2" />
<text  x="1192.45" y="161.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (2,403 us, 0.02%)</title><rect x="259.4" y="119" width="0.2" height="15.0" fill="rgb(150.671453084283,150.671453084283,122.484734177678)" rx="2" ry="2" />
<text  x="262.37" y="129.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (4,102 us, 0.03%)</title><rect x="376.3" y="199" width="0.4" height="15.0" fill="rgb(123.772118131802,149.126104700837,149.126104700837)" rx="2" ry="2" />
<text  x="379.34" y="209.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.__init__ (7,895 us, 0.06%)</title><rect x="258.8" y="71" width="0.8" height="15.0" fill="rgb(154.120109349478,128.254171679334,128.254171679334)" rx="2" ry="2" />
<text  x="261.84" y="81.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (2,884,221 us, 23.59%)</title><rect x="790.2" y="167" width="278.4" height="15.0" fill="rgb(142.510886525456,118.309146721481,142.510886525456)" rx="2" ry="2" />
<text  x="793.23" y="177.5" >pyop2.global_kernel.GlobalKernel.c..</text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (5,306 us, 0.04%)</title><rect x="256.0" y="103" width="0.5" height="15.0" fill="rgb(152.53109268387,116.071710576334,116.071710576334)" rx="2" ry="2" />
<text  x="259.00" y="113.5" ></text>
</g>
<g >
<title>SNESSolve (9,639,968 us, 78.85%)</title><rect x="259.6" y="103" width="930.4" height="15.0" fill="rgb(133.102749145796,94.2007946861026,133.102749145796)" rx="2" ry="2" />
<text  x="262.60" y="113.5" >SNESSolve</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (872,579 us, 7.14%)</title><rect x="13.2" y="135" width="84.2" height="15.0" fill="rgb(142.360193462602,160.546015017716,142.360193462602)" rx="2" ry="2" />
<text  x="16.20" y="145.5" >pyop2.gl..</text>
</g>
<g >
<title>MatZeroInitial (20,388 us, 0.17%)</title><rect x="374.0" y="167" width="1.9" height="15.0" fill="rgb(149.675878235131,136.669437977523,149.675878235131)" rx="2" ry="2" />
<text  x="376.97" y="177.5" ></text>
</g>
<g >
<title>firedrake.functionspace.VectorFunctionSpace (5,306 us, 0.04%)</title><rect x="256.0" y="71" width="0.5" height="15.0" fill="rgb(144.965416420478,160.121908954806,144.965416420478)" rx="2" ry="2" />
<text  x="259.00" y="81.5" ></text>
</g>
<g >
<title>ParLoopExecute (872,579 us, 7.14%)</title><rect x="13.2" y="103" width="84.2" height="15.0" fill="rgb(145.700925420651,160.002174931522,145.700925420651)" rx="2" ry="2" />
<text  x="16.20" y="113.5" >ParLoopE..</text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.solve (9,639,968 us, 78.85%)</title><rect x="259.6" y="87" width="930.4" height="15.0" fill="rgb(148.179722350589,148.179722350589,110.409423699008)" rx="2" ry="2" />
<text  x="262.60" y="97.5" >firedrake.variational_solver.NonlinearVariationalSolver.solve</text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (3,336 us, 0.03%)</title><rect x="342.1" y="183" width="0.3" height="15.0" fill="rgb(137.404675548925,161.352727236222,137.404675548925)" rx="2" ry="2" />
<text  x="345.09" y="193.5" ></text>
</g>
<g >
<title>ParLoopExecute (6,456,098 us, 52.81%)</title><rect x="445.5" y="135" width="623.1" height="15.0" fill="rgb(108.956448354508,145.285005128946,145.285005128946)" rx="2" ry="2" />
<text  x="448.49" y="145.5" >ParLoopExecute</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (3,545,851 us, 29.00%)</title><rect x="446.5" y="167" width="342.2" height="15.0" fill="rgb(141.818201112244,160.634246330565,141.818201112244)" rx="2" ry="2" />
<text  x="449.45" y="177.5" >pyop2.global_kernel.GlobalKernel.compile</text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (8,183 us, 0.07%)</title><rect x="375.9" y="151" width="0.8" height="15.0" fill="rgb(153.644195065203,124.605495499886,124.605495499886)" rx="2" ry="2" />
<text  x="378.94" y="161.5" ></text>
</g>
<g >
<title>HybridInit (1,922,731 us, 15.73%)</title><rect x="259.6" y="135" width="185.6" height="15.0" fill="rgb(156.472756214435,146.291130977338,146.291130977338)" rx="2" ry="2" />
<text  x="262.60" y="145.5" >HybridInit</text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (1,511 us, 0.01%)</title><rect x="260.9" y="231" width="0.1" height="15.0" fill="rgb(154.535599499338,131.439596161591,131.439596161591)" rx="2" ry="2" />
<text  x="263.90" y="241.5" ></text>
</g>
<g >
<title>SNESFunctionEval (7,717,237 us, 63.12%)</title><rect x="445.2" y="119" width="744.8" height="15.0" fill="rgb(136.440605601368,102.754051853506,136.440605601368)" rx="2" ry="2" />
<text  x="448.17" y="129.5" >SNESFunctionEval</text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (5,306 us, 0.04%)</title><rect x="256.0" y="135" width="0.5" height="15.0" fill="rgb(147.163390085726,159.76409928837,147.163390085726)" rx="2" ry="2" />
<text  x="259.00" y="145.5" ></text>
</g>
<g >
<title>firedrake.parloops.par_loop (676,472 us, 5.53%)</title><rect x="379.9" y="151" width="65.3" height="15.0" fill="rgb(112.234813728434,112.234813728434,149.142222011955)" rx="2" ry="2" />
<text  x="382.88" y="161.5" >firedr..</text>
</g>
<g >
<title>firedrake.interpolation.make_interpolator (32,630 us, 0.27%)</title><rect x="376.7" y="151" width="3.2" height="15.0" fill="rgb(140.064779577259,140.064779577259,154.528667014953)" rx="2" ry="2" />
<text  x="379.73" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (1,774 us, 0.01%)</title><rect x="376.6" y="247" width="0.1" height="15.0" fill="rgb(152.378472437703,114.90162202239,114.90162202239)" rx="2" ry="2" />
<text  x="379.56" y="257.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (5,306 us, 0.04%)</title><rect x="256.0" y="119" width="0.5" height="15.0" fill="rgb(153.92969862619,126.79435613412,126.79435613412)" rx="2" ry="2" />
<text  x="259.00" y="129.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.action (3,632 us, 0.03%)</title><rect x="259.0" y="119" width="0.4" height="15.0" fill="rgb(122.134629020923,122.134629020923,151.058315294372)" rx="2" ry="2" />
<text  x="262.02" y="129.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.action (10,616 us, 0.09%)</title><rect x="256.7" y="87" width="1.0" height="15.0" fill="rgb(112.686647054163,146.252093680709,146.252093680709)" rx="2" ry="2" />
<text  x="259.71" y="97.5" ></text>
</g>
<g >
<title>ParLoopExecute (625,751 us, 5.12%)</title><rect x="281.2" y="167" width="60.4" height="15.0" fill="rgb(140.53260700623,113.239805453465,140.53260700623)" rx="2" ry="2" />
<text  x="284.24" y="177.5" >ParLo..</text>
</g>
<g >
<title>firedrake.slate.slac.optimise.optimise (8,108 us, 0.07%)</title><rect x="341.6" y="167" width="0.8" height="15.0" fill="rgb(155.004440403301,135.034043091971,135.034043091971)" rx="2" ry="2" />
<text  x="344.63" y="177.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (14,063 us, 0.12%)</title><rect x="98.0" y="71" width="1.4" height="15.0" fill="rgb(116.975507106572,147.364020360963,147.364020360963)" rx="2" ry="2" />
<text  x="101.00" y="81.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (6,984 us, 0.06%)</title><rect x="261.0" y="167" width="0.7" height="15.0" fill="rgb(146.029345837815,146.029345837815,155.683099194416)" rx="2" ry="2" />
<text  x="264.05" y="177.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (1,774 us, 0.01%)</title><rect x="376.6" y="231" width="0.1" height="15.0" fill="rgb(147.269857144871,147.269857144871,155.923198157072)" rx="2" ry="2" />
<text  x="379.56" y="241.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (1,511 us, 0.01%)</title><rect x="260.9" y="183" width="0.1" height="15.0" fill="rgb(133.678458066862,151.694415054372,151.694415054372)" rx="2" ry="2" />
<text  x="263.90" y="193.5" ></text>
</g>
<g >
<title>ParLoopExecute (671,436 us, 5.49%)</title><rect x="380.4" y="167" width="64.8" height="15.0" fill="rgb(118.647754738846,118.647754738846,150.383436401067)" rx="2" ry="2" />
<text  x="383.37" y="177.5" >ParLoo..</text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (14,063 us, 0.12%)</title><rect x="98.0" y="119" width="1.4" height="15.0" fill="rgb(153.827173213356,126.008327969062,126.008327969062)" rx="2" ry="2" />
<text  x="101.00" y="129.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (671,436 us, 5.49%)</title><rect x="380.4" y="183" width="64.8" height="15.0" fill="rgb(149.243446414444,149.243446414444,115.564394162307)" rx="2" ry="2" />
<text  x="383.37" y="193.5" >Parloo..</text>
</g>
<g >
<title>CreateSparsity (93,599 us, 0.77%)</title><rect x="364.9" y="167" width="9.1" height="15.0" fill="rgb(143.557886489158,120.992084128467,143.557886489158)" rx="2" ry="2" />
<text  x="367.94" y="177.5" ></text>
</g>
<g >
<title>firedrake.assemble.allocate_matrix (6,035 us, 0.05%)</title><rect x="259.0" y="87" width="0.6" height="15.0" fill="rgb(146.750044010946,146.750044010946,155.822589163409)" rx="2" ry="2" />
<text  x="262.02" y="97.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.LinearVariationalProblem.__init__ (22,000 us, 0.18%)</title><rect x="256.7" y="71" width="2.1" height="15.0" fill="rgb(152.143756196476,152.143756196476,129.619741567536)" rx="2" ry="2" />
<text  x="259.71" y="81.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (6,984 us, 0.06%)</title><rect x="261.0" y="183" width="0.7" height="15.0" fill="rgb(116.398227603204,147.214355304534,147.214355304534)" rx="2" ry="2" />
<text  x="264.05" y="193.5" ></text>
</g>
<g >
<title>firedrake.mesh.MeshTopology._facets (2,316 us, 0.02%)</title><rect x="256.3" y="151" width="0.2" height="15.0" fill="rgb(139.084686903585,153.096029937966,153.096029937966)" rx="2" ry="2" />
<text  x="259.29" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (14,063 us, 0.12%)</title><rect x="98.0" y="103" width="1.4" height="15.0" fill="rgb(156.794151947894,148.755164933857,148.755164933857)" rx="2" ry="2" />
<text  x="101.00" y="113.5" ></text>
</g>
<g >
<title>Log_Event_form1_cell_integral_otherwise (16,096 us, 0.13%)</title><rect x="788.7" y="167" width="1.5" height="15.0" fill="rgb(153.613669826592,124.371468670538,124.371468670538)" rx="2" ry="2" />
<text  x="791.68" y="177.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_form0_cell_integral_otherwise (3,555,781 us, 29.08%)</title><rect x="445.5" y="151" width="343.2" height="15.0" fill="rgb(152.392113497962,115.006203484372,115.006203484372)" rx="2" ry="2" />
<text  x="448.49" y="161.5" >Parloop_Cells_wrap_form0_cell_integral_oth..</text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (1,467 us, 0.01%)</title><rect x="1189.9" y="183" width="0.1" height="15.0" fill="rgb(136.355611128978,161.52350516505,136.355611128978)" rx="2" ry="2" />
<text  x="1192.86" y="193.5" ></text>
</g>
<g >
<title>firedrake.assemble.allocate_matrix (115,595 us, 0.95%)</title><rect x="364.8" y="151" width="11.1" height="15.0" fill="rgb(118.956908078219,147.877716909168,147.877716909168)" rx="2" ry="2" />
<text  x="367.78" y="161.5" ></text>
</g>
</g>
</svg>
