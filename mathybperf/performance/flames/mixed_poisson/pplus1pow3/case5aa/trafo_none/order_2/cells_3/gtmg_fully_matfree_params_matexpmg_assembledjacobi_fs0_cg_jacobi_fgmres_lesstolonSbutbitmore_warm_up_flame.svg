<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="299" onload="init(evt)" viewBox="0 0 1200 299" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:13px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:18px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 13 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (1 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="299.0" fill="url(#background)"  />
<text id="title" x="600.00" y="26" >Firedrake example</text>
<text id="details" x="10.00" y="281" > </text>
<text id="unzoom" x="10.00" y="26" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="26" >Search</text>
<text id="ignorecase" x="1174.00" y="26" >ic</text>
<text id="matched" x="1090.00" y="281" > </text>
<g id="frames">
<g >
<title>CreateFunctionSpace (5,922 us, 0.05%)</title><rect x="94.8" y="103" width="0.5" height="15.0" fill="rgb(104.467138232515,144.121109912134,144.121109912134)" rx="2" ry="2" />
<text  x="97.76" y="113.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (14,227 us, 0.11%)</title><rect x="95.3" y="71" width="1.3" height="15.0" fill="rgb(155.004881015044,155.004881015044,143.485192611365)" rx="2" ry="2" />
<text  x="98.31" y="81.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (7,852 us, 0.06%)</title><rect x="257.0" y="167" width="0.8" height="15.0" fill="rgb(133.935146016351,161.917534369431,133.935146016351)" rx="2" ry="2" />
<text  x="260.02" y="177.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (9,821 us, 0.08%)</title><rect x="253.8" y="103" width="0.9" height="15.0" fill="rgb(156.103972166208,143.463786607592,143.463786607592)" rx="2" ry="2" />
<text  x="256.77" y="113.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (5,922 us, 0.05%)</title><rect x="94.8" y="151" width="0.5" height="15.0" fill="rgb(154.565718379693,154.565718379693,141.356942916973)" rx="2" ry="2" />
<text  x="97.76" y="161.5" ></text>
</g>
<g >
<title>ParLoopExecute (872,478 us, 6.92%)</title><rect x="13.2" y="103" width="81.6" height="15.0" fill="rgb(120.599920243726,120.599920243726,150.761274885882)" rx="2" ry="2" />
<text  x="16.15" y="113.5" >ParLoopE..</text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (3,040 us, 0.02%)</title><rect x="341.5" y="183" width="0.3" height="15.0" fill="rgb(152.978398117995,119.50105223796,119.50105223796)" rx="2" ry="2" />
<text  x="344.50" y="193.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalProblem.__init__ (11,155 us, 0.09%)</title><rect x="253.6" y="87" width="1.1" height="15.0" fill="rgb(139.370851355259,139.370851355259,154.394358326824)" rx="2" ry="2" />
<text  x="256.65" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (1,785 us, 0.01%)</title><rect x="425.2" y="247" width="0.2" height="15.0" fill="rgb(150.04496993051,150.04496993051,119.448700432474)" rx="2" ry="2" />
<text  x="428.19" y="257.5" ></text>
</g>
<g >
<title>firedrake.matrix_free.operators.ImplicitMatrixContext.__init__ (6,137 us, 0.05%)</title><rect x="255.0" y="103" width="0.6" height="15.0" fill="rgb(109.460906640553,145.415790610514,145.415790610514)" rx="2" ry="2" />
<text  x="257.98" y="113.5" ></text>
</g>
<g >
<title>all (12,615,554 us, 100%)</title><rect x="10.0" y="39" width="1180.0" height="15.0" fill="rgb(139.863401627378,139.863401627378,154.489690637557)" rx="2" ry="2" />
<text  x="13.00" y="49.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.action (3,666 us, 0.03%)</title><rect x="255.0" y="119" width="0.3" height="15.0" fill="rgb(152.158022007528,113.211502057716,113.211502057716)" rx="2" ry="2" />
<text  x="257.98" y="129.5" ></text>
</g>
<g >
<title>firedrake.parloops.par_loop (681,039 us, 5.40%)</title><rect x="429.3" y="151" width="63.7" height="15.0" fill="rgb(154.576532647676,131.753416965517,131.753416965517)" rx="2" ry="2" />
<text  x="432.34" y="161.5" >firedr..</text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (5,922 us, 0.05%)</title><rect x="94.8" y="135" width="0.5" height="15.0" fill="rgb(110.604676560009,110.604676560009,148.82671159226)" rx="2" ry="2" />
<text  x="97.76" y="145.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (5,289 us, 0.04%)</title><rect x="252.0" y="119" width="0.5" height="15.0" fill="rgb(127.703707058298,162.931954664928,127.703707058298)" rx="2" ry="2" />
<text  x="255.00" y="129.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (5,289 us, 0.04%)</title><rect x="252.0" y="103" width="0.5" height="15.0" fill="rgb(152.750825369299,117.756327831295,117.756327831295)" rx="2" ry="2" />
<text  x="255.00" y="113.5" ></text>
</g>
<g >
<title>firedrake.mesh.MeshTopology._facets (2,287 us, 0.02%)</title><rect x="252.3" y="151" width="0.2" height="15.0" fill="rgb(137.714004746275,106.017137162329,137.714004746275)" rx="2" ry="2" />
<text  x="255.29" y="161.5" ></text>
</g>
<g >
<title>SNESJacobianEval (1,406 us, 0.01%)</title><rect x="1189.9" y="119" width="0.1" height="15.0" fill="rgb(150.80293492265,139.55752073929,150.80293492265)" rx="2" ry="2" />
<text  x="1192.87" y="129.5" ></text>
</g>
<g >
<title>ParLoopExecute (676,007 us, 5.36%)</title><rect x="429.8" y="167" width="63.2" height="15.0" fill="rgb(141.974613242286,116.934946433359,141.974613242286)" rx="2" ry="2" />
<text  x="432.81" y="177.5" >ParLoo..</text>
</g>
<g >
<title>firedrake.extrusion_utils.make_extruded_coords (903,954 us, 7.17%)</title><rect x="10.2" y="87" width="84.6" height="15.0" fill="rgb(143.007615274636,143.007615274636,155.098248117671)" rx="2" ry="2" />
<text  x="13.21" y="97.5" >firedrake..</text>
</g>
<g >
<title>CreateExtMesh (912,091 us, 7.23%)</title><rect x="10.0" y="71" width="85.3" height="15.0" fill="rgb(140.574721666244,140.574721666244,154.627365483789)" rx="2" ry="2" />
<text  x="13.00" y="81.5" >CreateExt..</text>
</g>
<g >
<title>Parloop_Cells_wrap_slate_loopy_knl_0 (631,680 us, 5.01%)</title><rect x="281.8" y="183" width="59.1" height="15.0" fill="rgb(129.718821434082,162.603912789801,129.718821434082)" rx="2" ry="2" />
<text  x="284.78" y="193.5" >Parlo..</text>
</g>
<g >
<title>CreateMesh (1,798 us, 0.01%)</title><rect x="96.6" y="71" width="0.2" height="15.0" fill="rgb(153.922480340537,126.739015944118,126.739015944118)" rx="2" ry="2" />
<text  x="99.64" y="81.5" ></text>
</g>
<g >
<title>SNESSolve (9,990,263 us, 79.19%)</title><rect x="255.6" y="103" width="934.4" height="15.0" fill="rgb(152.717103514383,152.717103514383,132.398270877396)" rx="2" ry="2" />
<text  x="258.56" y="113.5" >SNESSolve</text>
</g>
<g >
<title>firedrake.assemble.allocate_matrix (649,759 us, 5.15%)</title><rect x="363.8" y="151" width="60.8" height="15.0" fill="rgb(120.528999825592,148.28529625108,148.28529625108)" rx="2" ry="2" />
<text  x="366.80" y="161.5" >fired..</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (3,061,666 us, 24.27%)</title><rect x="494.8" y="167" width="286.4" height="15.0" fill="rgb(114.225975696692,146.651178884327,146.651178884327)" rx="2" ry="2" />
<text  x="497.81" y="177.5" >pyop2.global_kernel.GlobalKernel.co..</text>
</g>
<g >
<title>CreateFunctionSpace (1,582 us, 0.01%)</title><rect x="256.9" y="183" width="0.1" height="15.0" fill="rgb(116.490650094599,116.490650094599,149.965932276374)" rx="2" ry="2" />
<text  x="259.87" y="193.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.action (10,252 us, 0.08%)</title><rect x="252.7" y="87" width="0.9" height="15.0" fill="rgb(150.470887092477,150.470887092477,121.512760525082)" rx="2" ry="2" />
<text  x="255.69" y="97.5" ></text>
</g>
<g >
<title>CreateSparsity (540,915 us, 4.29%)</title><rect x="363.8" y="167" width="50.6" height="15.0" fill="rgb(150.508456093918,150.508456093918,121.694825685913)" rx="2" ry="2" />
<text  x="366.80" y="177.5" >Crea..</text>
</g>
<g >
<title>SNESFunctionEval (7,449,883 us, 59.05%)</title><rect x="493.0" y="119" width="696.9" height="15.0" fill="rgb(148.088193250453,148.088193250453,109.965859598349)" rx="2" ry="2" />
<text  x="496.04" y="129.5" >SNESFunctionEval</text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (14,227 us, 0.11%)</title><rect x="95.3" y="103" width="1.3" height="15.0" fill="rgb(110.732210806682,145.745387986918,145.745387986918)" rx="2" ry="2" />
<text  x="98.31" y="113.5" ></text>
</g>
<g >
<title>MatAssemblyEnd (4,220 us, 0.03%)</title><rect x="414.4" y="167" width="0.4" height="15.0" fill="rgb(114.54203770406,114.54203770406,149.588781491108)" rx="2" ry="2" />
<text  x="417.40" y="177.5" ></text>
</g>
<g >
<title>firedrake.functionspace.MixedFunctionSpace (1,582 us, 0.01%)</title><rect x="256.9" y="167" width="0.1" height="15.0" fill="rgb(130.166068769825,130.166068769825,152.612787503837)" rx="2" ry="2" />
<text  x="259.87" y="177.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (14,227 us, 0.11%)</title><rect x="95.3" y="119" width="1.3" height="15.0" fill="rgb(121.255065211542,121.255065211542,150.888077137718)" rx="2" ry="2" />
<text  x="98.31" y="129.5" ></text>
</g>
<g >
<title>ParLoopExecute (6,201,519 us, 49.16%)</title><rect x="493.5" y="135" width="580.0" height="15.0" fill="rgb(140.46013531396,113.054096742022,140.46013531396)" rx="2" ry="2" />
<text  x="496.45" y="145.5" >ParLoopExecute</text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (14,227 us, 0.11%)</title><rect x="95.3" y="87" width="1.3" height="15.0" fill="rgb(144.858388938,124.324621653626,144.858388938)" rx="2" ry="2" />
<text  x="98.31" y="97.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (631,680 us, 5.01%)</title><rect x="281.8" y="199" width="59.1" height="15.0" fill="rgb(128.623242064521,128.623242064521,152.314175883456)" rx="2" ry="2" />
<text  x="284.78" y="209.5" >pyop2..</text>
</g>
<g >
<title>firedrake.slate.slac.optimise.optimise (7,992 us, 0.06%)</title><rect x="341.0" y="167" width="0.8" height="15.0" fill="rgb(149.700053909882,149.700053909882,117.777184332505)" rx="2" ry="2" />
<text  x="344.04" y="177.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (1,582 us, 0.01%)</title><rect x="256.9" y="231" width="0.1" height="15.0" fill="rgb(144.482787638488,154.495537535904,154.495537535904)" rx="2" ry="2" />
<text  x="259.87" y="241.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (2,471 us, 0.02%)</title><rect x="255.3" y="119" width="0.3" height="15.0" fill="rgb(155.487145601578,155.487145601578,145.822320992263)" rx="2" ry="2" />
<text  x="258.33" y="129.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (1,490 us, 0.01%)</title><rect x="1189.7" y="183" width="0.2" height="15.0" fill="rgb(149.710826016888,149.710826016888,117.829387620304)" rx="2" ry="2" />
<text  x="1192.73" y="193.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (3,415 us, 0.03%)</title><rect x="1189.5" y="167" width="0.4" height="15.0" fill="rgb(156.764960022282,148.531360170825,148.531360170825)" rx="2" ry="2" />
<text  x="1192.55" y="177.5" ></text>
</g>
<g >
<title>PCSetUp (2,538,974 us, 20.13%)</title><rect x="255.6" y="119" width="237.4" height="15.0" fill="rgb(128.711954299878,128.711954299878,152.331345993525)" rx="2" ry="2" />
<text  x="258.56" y="129.5" >PCSetUp</text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (1,582 us, 0.01%)</title><rect x="256.9" y="215" width="0.1" height="15.0" fill="rgb(138.782821160995,138.782821160995,154.28054603116)" rx="2" ry="2" />
<text  x="259.87" y="225.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_pyop2_kernel_uniform_extrusion (872,478 us, 6.92%)</title><rect x="13.2" y="119" width="81.6" height="15.0" fill="rgb(136.442434344798,161.509371153172,136.442434344798)" rx="2" ry="2" />
<text  x="16.15" y="129.5" >Parloop_..</text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (1,582 us, 0.01%)</title><rect x="256.9" y="199" width="0.1" height="15.0" fill="rgb(110.969161968156,145.806819769522,145.806819769522)" rx="2" ry="2" />
<text  x="259.87" y="209.5" ></text>
</g>
<g >
<title>firedrake.assemble.allocate_matrix (6,137 us, 0.05%)</title><rect x="255.0" y="87" width="0.6" height="15.0" fill="rgb(118.849029288011,118.849029288011,150.422392765422)" rx="2" ry="2" />
<text  x="257.98" y="97.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (872,478 us, 6.92%)</title><rect x="13.2" y="135" width="81.6" height="15.0" fill="rgb(154.504395950876,131.200368956719,131.200368956719)" rx="2" ry="2" />
<text  x="16.15" y="145.5" >pyop2.gl..</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (676,007 us, 5.36%)</title><rect x="429.8" y="199" width="63.2" height="15.0" fill="rgb(129.011730260784,129.011730260784,152.389367147249)" rx="2" ry="2" />
<text  x="432.81" y="209.5" >pyop2...</text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (5,922 us, 0.05%)</title><rect x="94.8" y="119" width="0.5" height="15.0" fill="rgb(128.066598216952,128.066598216952,152.206438364571)" rx="2" ry="2" />
<text  x="97.76" y="129.5" ></text>
</g>
<g >
<title>firedrake.interpolation.make_interpolator (42,532 us, 0.34%)</title><rect x="425.4" y="151" width="3.9" height="15.0" fill="rgb(127.171415450565,150.007404005702,150.007404005702)" rx="2" ry="2" />
<text  x="428.36" y="161.5" ></text>
</g>
<g >
<title>firedrake.utility_meshes.RectangleMesh (2,042 us, 0.02%)</title><rect x="252.5" y="87" width="0.2" height="15.0" fill="rgb(154.71264482516,154.71264482516,142.068971075774)" rx="2" ry="2" />
<text  x="255.50" y="97.5" ></text>
</g>
<g >
<title>firedrake.__init__ (1,659,190 us, 13.15%)</title><rect x="96.8" y="71" width="155.2" height="15.0" fill="rgb(128.695179399159,162.770552190835,128.695179399159)" rx="2" ry="2" />
<text  x="99.81" y="81.5" >firedrake.__init__</text>
</g>
<g >
<title>CreateFunctionSpace (5,289 us, 0.04%)</title><rect x="252.0" y="87" width="0.5" height="15.0" fill="rgb(142.782352523737,160.477291449624,142.782352523737)" rx="2" ry="2" />
<text  x="255.00" y="97.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (8,386 us, 0.07%)</title><rect x="424.6" y="167" width="0.8" height="15.0" fill="rgb(143.731569047397,160.322767829493,143.731569047397)" rx="2" ry="2" />
<text  x="427.58" y="177.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_form1_cell_integral_otherwise (3,125,329 us, 24.77%)</title><rect x="781.2" y="151" width="292.3" height="15.0" fill="rgb(135.945853304784,161.590209927128,135.945853304784)" rx="2" ry="2" />
<text  x="784.18" y="161.5" >Parloop_Cells_wrap_form1_cell_integr..</text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (1,243,976 us, 9.86%)</title><rect x="1073.5" y="135" width="116.4" height="15.0" fill="rgb(130.780006666831,130.780006666831,152.73161419358)" rx="2" ry="2" />
<text  x="1076.51" y="145.5" >firedrake.tsf..</text>
</g>
<g >
<title>HybridInit (2,538,974 us, 20.13%)</title><rect x="255.6" y="135" width="237.4" height="15.0" fill="rgb(127.090210115284,163.031826260303,127.090210115284)" rx="2" ry="2" />
<text  x="258.56" y="145.5" >HybridInit</text>
</g>
<g >
<title>HybridOperatorAssembly (1,133,804 us, 8.99%)</title><rect x="257.8" y="151" width="106.0" height="15.0" fill="rgb(110.243458734054,145.618674486607,145.618674486607)" rx="2" ry="2" />
<text  x="260.75" y="161.5" >HybridOpera..</text>
</g>
<g >
<title>Log_Event_form1_cell_integral_otherwise (17,579 us, 0.14%)</title><rect x="781.2" y="167" width="1.6" height="15.0" fill="rgb(146.19248208015,127.743235330384,146.19248208015)" rx="2" ry="2" />
<text  x="784.18" y="177.5" ></text>
</g>
<g >
<title>perfsolve (9,990,263 us, 79.19%)</title><rect x="255.6" y="71" width="934.4" height="15.0" fill="rgb(137.965249006214,161.261471092012,137.965249006214)" rx="2" ry="2" />
<text  x="258.56" y="81.5" >perfsolve</text>
</g>
<g >
<title>ParLoopExecute (631,680 us, 5.01%)</title><rect x="281.8" y="167" width="59.1" height="15.0" fill="rgb(117.294095526538,147.446617358732,147.446617358732)" rx="2" ry="2" />
<text  x="284.78" y="177.5" >ParLo..</text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (1,785 us, 0.01%)</title><rect x="425.2" y="231" width="0.2" height="15.0" fill="rgb(135.062671772345,161.733983664967,135.062671772345)" rx="2" ry="2" />
<text  x="428.19" y="241.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (9,434 us, 0.07%)</title><rect x="256.9" y="151" width="0.9" height="15.0" fill="rgb(153.376179886073,122.550712459894,122.550712459894)" rx="2" ry="2" />
<text  x="259.87" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (7,852 us, 0.06%)</title><rect x="257.0" y="199" width="0.8" height="15.0" fill="rgb(138.637399596003,161.152051228558,138.637399596003)" rx="2" ry="2" />
<text  x="260.02" y="209.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.local_to_global_map (1,878 us, 0.01%)</title><rect x="340.9" y="167" width="0.1" height="15.0" fill="rgb(154.254621936065,129.285434843164,129.285434843164)" rx="2" ry="2" />
<text  x="343.87" y="177.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.__init__ (9,247 us, 0.07%)</title><rect x="254.7" y="71" width="0.9" height="15.0" fill="rgb(127.405058544427,162.980571864861,127.405058544427)" rx="2" ry="2" />
<text  x="257.69" y="81.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.LinearVariationalProblem.__init__ (21,407 us, 0.17%)</title><rect x="252.7" y="71" width="2.0" height="15.0" fill="rgb(142.760249841571,160.480889560675,142.760249841571)" rx="2" ry="2" />
<text  x="255.69" y="81.5" ></text>
</g>
<g >
<title>firedrake.functionspace.VectorFunctionSpace (5,922 us, 0.05%)</title><rect x="94.8" y="87" width="0.5" height="15.0" fill="rgb(136.151815245967,161.556681239029,136.151815245967)" rx="2" ry="2" />
<text  x="97.76" y="97.5" ></text>
</g>
<g >
<title>Log_Event_form0_cell_integral_otherwise (14,524 us, 0.12%)</title><rect x="493.5" y="167" width="1.3" height="15.0" fill="rgb(126.342617172032,163.153527437111,126.342617172032)" rx="2" ry="2" />
<text  x="496.45" y="177.5" ></text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (235,350 us, 1.87%)</title><rect x="341.8" y="167" width="22.0" height="15.0" fill="rgb(126.144556669159,163.185769844556,126.144556669159)" rx="2" ry="2" />
<text  x="344.79" y="177.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (5,289 us, 0.04%)</title><rect x="252.0" y="135" width="0.5" height="15.0" fill="rgb(152.931944662637,119.144909080219,119.144909080219)" rx="2" ry="2" />
<text  x="255.00" y="145.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_form0_cell_integral_otherwise (3,076,190 us, 24.38%)</title><rect x="493.5" y="151" width="287.7" height="15.0" fill="rgb(156.41323449186,145.834797770929,145.834797770929)" rx="2" ry="2" />
<text  x="496.45" y="161.5" >Parloop_Cells_wrap_form0_cell_integ..</text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (8,386 us, 0.07%)</title><rect x="424.6" y="151" width="0.8" height="15.0" fill="rgb(149.534709159733,159.378070601904,149.534709159733)" rx="2" ry="2" />
<text  x="427.58" y="161.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (4,181 us, 0.03%)</title><rect x="425.0" y="199" width="0.4" height="15.0" fill="rgb(156.436398555106,146.012388922482,146.012388922482)" rx="2" ry="2" />
<text  x="427.97" y="209.5" ></text>
</g>
<g >
<title>firedrake (12,615,554 us, 100.00%)</title><rect x="10.0" y="55" width="1180.0" height="15.0" fill="rgb(145.531161036801,126.048600156803,145.531161036801)" rx="2" ry="2" />
<text  x="13.00" y="65.5" >firedrake</text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.solve (9,990,263 us, 79.19%)</title><rect x="255.6" y="87" width="934.4" height="15.0" fill="rgb(131.946061111026,151.245275102858,151.245275102858)" rx="2" ry="2" />
<text  x="258.56" y="97.5" >firedrake.variational_solver.NonlinearVariationalSolver.solve</text>
</g>
<g >
<title>firedrake.functionspace.VectorFunctionSpace (5,289 us, 0.04%)</title><rect x="252.0" y="71" width="0.5" height="15.0" fill="rgb(131.829779057084,131.829779057084,152.934795946532)" rx="2" ry="2" />
<text  x="255.00" y="81.5" ></text>
</g>
<g >
<title>firedrake.utility_meshes.SquareMesh (2,042 us, 0.02%)</title><rect x="252.5" y="71" width="0.2" height="15.0" fill="rgb(155.784355574348,141.01339273667,141.01339273667)" rx="2" ry="2" />
<text  x="255.50" y="81.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (6,204 us, 0.05%)</title><rect x="424.8" y="183" width="0.6" height="15.0" fill="rgb(151.295701431677,140.820234918673,151.295701431677)" rx="2" ry="2" />
<text  x="427.78" y="193.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (1,785 us, 0.01%)</title><rect x="425.2" y="215" width="0.2" height="15.0" fill="rgb(130.918789991834,130.918789991834,152.75847548229)" rx="2" ry="2" />
<text  x="428.19" y="225.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (676,007 us, 5.36%)</title><rect x="429.8" y="183" width="63.2" height="15.0" fill="rgb(107.712199618746,144.962422123379,144.962422123379)" rx="2" ry="2" />
<text  x="432.81" y="193.5" >Parloo..</text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (7,852 us, 0.06%)</title><rect x="257.0" y="183" width="0.8" height="15.0" fill="rgb(132.977991945023,132.977991945023,153.157030699037)" rx="2" ry="2" />
<text  x="260.02" y="193.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (3,107,750 us, 24.63%)</title><rect x="782.8" y="167" width="290.7" height="15.0" fill="rgb(156.073130131189,143.227331005786,143.227331005786)" rx="2" ry="2" />
<text  x="785.83" y="177.5" >pyop2.global_kernel.GlobalKernel.co..</text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (5,728 us, 0.05%)</title><rect x="1189.3" y="151" width="0.6" height="15.0" fill="rgb(142.83895230858,142.83895230858,155.065603672628)" rx="2" ry="2" />
<text  x="1192.33" y="161.5" ></text>
</g>
<g >
<title>MatZeroInitial (104,624 us, 0.83%)</title><rect x="414.8" y="167" width="9.8" height="15.0" fill="rgb(156.22088585807,144.360124911874,144.360124911874)" rx="2" ry="2" />
<text  x="417.79" y="177.5" ></text>
</g>
</g>
</svg>
