<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="299" onload="init(evt)" viewBox="0 0 1200 299" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:13px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:18px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 13 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (1 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="299.0" fill="url(#background)"  />
<text id="title" x="600.00" y="26" >Firedrake example</text>
<text id="details" x="10.00" y="281" > </text>
<text id="unzoom" x="10.00" y="26" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="26" >Search</text>
<text id="ignorecase" x="1174.00" y="26" >ic</text>
<text id="matched" x="1090.00" y="281" > </text>
<g id="frames">
<g >
<title>firedrake.assemble.allocate_matrix (6,137 us, 0.11%)</title><rect x="390.6" y="87" width="1.3" height="15.0" fill="rgb(133.39804924406,151.621716470682,151.621716470682)" rx="2" ry="2" />
<text  x="393.59" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (8,209 us, 0.15%)</title><rect x="394.8" y="167" width="1.7" height="15.0" fill="rgb(120.398620552689,120.398620552689,150.722313655359)" rx="2" ry="2" />
<text  x="397.76" y="177.5" ></text>
</g>
<g >
<title>firedrake.interpolation.make_interpolator (87,585 us, 1.59%)</title><rect x="1147.8" y="151" width="18.8" height="15.0" fill="rgb(133.690769810549,161.957316542469,133.690769810549)" rx="2" ry="2" />
<text  x="1150.81" y="161.5" ></text>
</g>
<g >
<title>firedrake.utility_meshes.RectangleMesh (2,050 us, 0.04%)</title><rect x="384.7" y="87" width="0.5" height="15.0" fill="rgb(112.440482850537,112.440482850537,149.182028938814)" rx="2" ry="2" />
<text  x="387.73" y="97.5" ></text>
</g>
<g >
<title>CreateExtMesh (77,276 us, 1.40%)</title><rect x="10.0" y="71" width="16.6" height="15.0" fill="rgb(133.373767939711,133.373767939711,153.23363250446)" rx="2" ry="2" />
<text  x="13.00" y="81.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (1,804 us, 0.03%)</title><rect x="1147.1" y="215" width="0.4" height="15.0" fill="rgb(155.220384669772,155.220384669772,144.529556476589)" rx="2" ry="2" />
<text  x="1150.10" y="225.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (14,564 us, 0.26%)</title><rect x="26.8" y="119" width="3.1" height="15.0" fill="rgb(151.065529415905,159.128867304388,151.065529415905)" rx="2" ry="2" />
<text  x="29.75" y="129.5" ></text>
</g>
<g >
<title>Mesh: numbering (773 us, 0.01%)</title><rect x="30.1" y="87" width="0.2" height="15.0" fill="rgb(137.519179953024,105.517898629623,137.519179953024)" rx="2" ry="2" />
<text  x="33.10" y="97.5" ></text>
</g>
<g >
<title>firedrake.extrusion_utils.make_extruded_coords (68,425 us, 1.24%)</title><rect x="10.0" y="87" width="14.7" height="15.0" fill="rgb(131.106006881281,151.027483265517,151.027483265517)" rx="2" ry="2" />
<text  x="13.00" y="97.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (1,680 us, 0.03%)</title><rect x="1174.2" y="167" width="0.4" height="15.0" fill="rgb(151.623322204892,151.623322204892,127.097638377553)" rx="2" ry="2" />
<text  x="1177.20" y="177.5" ></text>
</g>
<g >
<title>ParLoopExecute (60,925 us, 1.11%)</title><rect x="1169.2" y="135" width="13.0" height="15.0" fill="rgb(153.94450096639,126.907840742322,126.907840742322)" rx="2" ry="2" />
<text  x="1172.17" y="145.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (8,071 us, 0.15%)</title><rect x="1145.9" y="167" width="1.7" height="15.0" fill="rgb(126.095526253332,163.193751540155,126.095526253332)" rx="2" ry="2" />
<text  x="1148.90" y="177.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (14,564 us, 0.26%)</title><rect x="26.8" y="87" width="3.1" height="15.0" fill="rgb(151.447292324547,151.447292324547,126.244570495882)" rx="2" ry="2" />
<text  x="29.75" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (1,804 us, 0.03%)</title><rect x="1147.1" y="247" width="0.4" height="15.0" fill="rgb(142.738900082265,142.738900082265,155.0462387256)" rx="2" ry="2" />
<text  x="1150.10" y="257.5" ></text>
</g>
<g >
<title>firedrake.function.Function.__init__ (840 us, 0.02%)</title><rect x="1147.6" y="151" width="0.2" height="15.0" fill="rgb(150.888195840848,159.157735560792,150.888195840848)" rx="2" ry="2" />
<text  x="1150.63" y="161.5" ></text>
</g>
<g >
<title>SNESJacobianEval (1,079 us, 0.02%)</title><rect x="1189.4" y="119" width="0.3" height="15.0" fill="rgb(135.937122821558,101.463877230241,135.937122821558)" rx="2" ry="2" />
<text  x="1192.42" y="129.5" ></text>
</g>
<g >
<title>firedrake.mesh._Facets.__init__ (674 us, 0.01%)</title><rect x="384.6" y="167" width="0.1" height="15.0" fill="rgb(149.015198671543,149.015198671543,114.458270485171)" rx="2" ry="2" />
<text  x="387.58" y="177.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_slate_loopy_knl_0 (724,463 us, 13.15%)</title><rect x="407.1" y="183" width="155.2" height="15.0" fill="rgb(127.130328715204,149.996751889127,149.996751889127)" rx="2" ry="2" />
<text  x="410.11" y="193.5" >Parloop_Cells_wrap..</text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (8,209 us, 0.15%)</title><rect x="394.8" y="183" width="1.7" height="15.0" fill="rgb(136.199080805916,102.135144565159,136.199080805916)" rx="2" ry="2" />
<text  x="397.76" y="193.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (7,220 us, 0.13%)</title><rect x="24.7" y="103" width="1.5" height="15.0" fill="rgb(114.879305441153,146.820560669928,146.820560669928)" rx="2" ry="2" />
<text  x="27.66" y="113.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (7,220 us, 0.13%)</title><rect x="24.7" y="151" width="1.5" height="15.0" fill="rgb(139.292261573867,110.061420283034,139.292261573867)" rx="2" ry="2" />
<text  x="27.66" y="161.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_form0_cell_integral_otherwise (25,168 us, 0.46%)</title><rect x="1169.2" y="151" width="5.4" height="15.0" fill="rgb(142.659529163853,142.659529163853,155.030876612359)" rx="2" ry="2" />
<text  x="1172.17" y="161.5" ></text>
</g>
<g >
<title>ParLoopExecute (37,766 us, 0.69%)</title><rect x="16.6" y="103" width="8.1" height="15.0" fill="rgb(150.588032107343,150.588032107343,122.080463289431)" rx="2" ry="2" />
<text  x="19.57" y="113.5" ></text>
</g>
<g >
<title>PetscBarrier (906 us, 0.02%)</title><rect x="30.3" y="71" width="0.2" height="15.0" fill="rgb(124.647236910457,149.352987347156,149.352987347156)" rx="2" ry="2" />
<text  x="33.26" y="81.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (5,280 us, 0.10%)</title><rect x="383.6" y="87" width="1.1" height="15.0" fill="rgb(113.096422645338,113.096422645338,149.30898502813)" rx="2" ry="2" />
<text  x="386.60" y="97.5" ></text>
</g>
<g >
<title>MatZeroEntries (3,761 us, 0.07%)</title><rect x="406.3" y="167" width="0.8" height="15.0" fill="rgb(146.137503200075,159.93110413022,146.137503200075)" rx="2" ry="2" />
<text  x="409.31" y="177.5" ></text>
</g>
<g >
<title>MatZeroInitial (380,282 us, 6.90%)</title><rect x="1064.4" y="167" width="81.5" height="15.0" fill="rgb(143.013957027248,160.439588390913,143.013957027248)" rx="2" ry="2" />
<text  x="1067.42" y="177.5" >MatZeroI..</text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (640 us, 0.01%)</title><rect x="1189.3" y="183" width="0.1" height="15.0" fill="rgb(127.800696107972,162.916165749865,127.800696107972)" rx="2" ry="2" />
<text  x="1192.29" y="193.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (640 us, 0.01%)</title><rect x="1189.3" y="199" width="0.1" height="15.0" fill="rgb(156.382640084022,145.600240644167,145.600240644167)" rx="2" ry="2" />
<text  x="1192.29" y="209.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (1,343 us, 0.02%)</title><rect x="1167.8" y="199" width="0.3" height="15.0" fill="rgb(117.057089629726,117.057089629726,150.075565734786)" rx="2" ry="2" />
<text  x="1170.84" y="209.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (724,463 us, 13.15%)</title><rect x="407.1" y="199" width="155.2" height="15.0" fill="rgb(152.378502590366,114.901853192809,114.901853192809)" rx="2" ry="2" />
<text  x="410.11" y="209.5" >pyop2.global_kerne..</text>
</g>
<g >
<title>CreateFunctionSpace (4,055 us, 0.07%)</title><rect x="1146.6" y="199" width="0.9" height="15.0" fill="rgb(149.981400950176,159.305353333692,149.981400950176)" rx="2" ry="2" />
<text  x="1149.62" y="209.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.__init__ (10,875 us, 0.20%)</title><rect x="389.6" y="71" width="2.3" height="15.0" fill="rgb(129.321720018519,129.321720018519,152.449365164875)" rx="2" ry="2" />
<text  x="392.58" y="81.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (9,461 us, 0.17%)</title><rect x="387.4" y="103" width="2.0" height="15.0" fill="rgb(146.192660581581,146.192660581581,155.714708499661)" rx="2" ry="2" />
<text  x="390.39" y="113.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (5,280 us, 0.10%)</title><rect x="383.6" y="119" width="1.1" height="15.0" fill="rgb(131.575766414412,162.30161942091,131.575766414412)" rx="2" ry="2" />
<text  x="386.60" y="129.5" ></text>
</g>
<g >
<title>SNESFunctionEval (99,391 us, 1.80%)</title><rect x="1168.1" y="119" width="21.3" height="15.0" fill="rgb(133.141950915434,162.046659153301,133.141950915434)" rx="2" ry="2" />
<text  x="1171.13" y="129.5" ></text>
</g>
<g >
<title>firedrake.__init__ (1,647,009 us, 29.91%)</title><rect x="30.5" y="71" width="352.8" height="15.0" fill="rgb(135.094484551147,135.094484551147,153.566674429254)" rx="2" ry="2" />
<text  x="33.46" y="81.5" >firedrake.__init__</text>
</g>
<g >
<title>firedrake.ufl_expr.derivative (759 us, 0.01%)</title><rect x="389.4" y="103" width="0.2" height="15.0" fill="rgb(140.555671129628,113.298907269671,140.555671129628)" rx="2" ry="2" />
<text  x="392.41" y="113.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (14,564 us, 0.26%)</title><rect x="26.8" y="103" width="3.1" height="15.0" fill="rgb(144.984203426125,154.625534221588,154.625534221588)" rx="2" ry="2" />
<text  x="29.75" y="113.5" ></text>
</g>
<g >
<title>firedrake.mesh.MeshTopology._facets (2,275 us, 0.04%)</title><rect x="384.2" y="151" width="0.5" height="15.0" fill="rgb(127.032082791745,149.971280723786,149.971280723786)" rx="2" ry="2" />
<text  x="387.24" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.local_to_global_map (4,742 us, 0.09%)</title><rect x="562.3" y="167" width="1.1" height="15.0" fill="rgb(136.548456165848,136.548456165848,153.848088290164)" rx="2" ry="2" />
<text  x="565.34" y="177.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.solve (3,724,910 us, 67.64%)</title><rect x="391.9" y="87" width="798.1" height="15.0" fill="rgb(132.598813578241,92.9094597942436,132.598813578241)" rx="2" ry="2" />
<text  x="394.91" y="97.5" >firedrake.variational_solver.NonlinearVariationalSolver.solve</text>
</g>
<g >
<title>CreateMesh (806 us, 0.01%)</title><rect x="385.0" y="103" width="0.2" height="15.0" fill="rgb(139.034336165223,153.082976042836,153.082976042836)" rx="2" ry="2" />
<text  x="387.99" y="113.5" ></text>
</g>
<g >
<title>firedrake.utility_meshes.SquareMesh (2,050 us, 0.04%)</title><rect x="384.7" y="71" width="0.5" height="15.0" fill="rgb(154.688024169184,154.688024169184,141.94965558912)" rx="2" ry="2" />
<text  x="387.73" y="81.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (4,702 us, 0.09%)</title><rect x="1188.4" y="151" width="1.0" height="15.0" fill="rgb(138.997339103806,153.073384212098,153.073384212098)" rx="2" ry="2" />
<text  x="1191.41" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspace.MixedFunctionSpace (2,446 us, 0.04%)</title><rect x="394.2" y="167" width="0.6" height="15.0" fill="rgb(156.333958759598,145.227017156915,145.227017156915)" rx="2" ry="2" />
<text  x="397.24" y="177.5" ></text>
</g>
<g >
<title>all (5,507,365 us, 100%)</title><rect x="10.0" y="39" width="1180.0" height="15.0" fill="rgb(129.537881550162,150.620932253746,150.620932253746)" rx="2" ry="2" />
<text  x="13.00" y="49.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (2,957 us, 0.05%)</title><rect x="1167.5" y="183" width="0.6" height="15.0" fill="rgb(136.52838115886,102.978976719578,136.52838115886)" rx="2" ry="2" />
<text  x="1170.49" y="193.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalProblem.__init__ (10,220 us, 0.19%)</title><rect x="387.4" y="87" width="2.2" height="15.0" fill="rgb(151.969748353337,151.969748353337,128.776472789249)" rx="2" ry="2" />
<text  x="390.39" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (5,280 us, 0.10%)</title><rect x="383.6" y="135" width="1.1" height="15.0" fill="rgb(149.675326772682,149.675326772682,117.657352821456)" rx="2" ry="2" />
<text  x="386.60" y="145.5" ></text>
</g>
<g >
<title>firedrake.function.Function.split (759 us, 0.01%)</title><rect x="389.4" y="119" width="0.2" height="15.0" fill="rgb(114.125688696015,114.125688696015,149.508197812132)" rx="2" ry="2" />
<text  x="392.41" y="129.5" ></text>
</g>
<g >
<title>Log_Event_form0_cell_integral_otherwise (22,164 us, 0.40%)</title><rect x="1169.4" y="167" width="4.8" height="15.0" fill="rgb(152.043941110614,112.336881848039,112.336881848039)" rx="2" ry="2" />
<text  x="1172.45" y="177.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (15,484 us, 0.28%)</title><rect x="26.6" y="71" width="3.3" height="15.0" fill="rgb(148.074337463837,148.074337463837,109.898712324747)" rx="2" ry="2" />
<text  x="29.56" y="81.5" ></text>
</g>
<g >
<title>firedrake.mesh.make_mesh_from_coordinates (865 us, 0.02%)</title><rect x="26.4" y="87" width="0.2" height="15.0" fill="rgb(154.802427626328,154.802427626328,142.504072342973)" rx="2" ry="2" />
<text  x="29.37" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspace.MixedFunctionSpace (1,173 us, 0.02%)</title><rect x="383.3" y="71" width="0.3" height="15.0" fill="rgb(132.645707694119,162.127442933515,132.645707694119)" rx="2" ry="2" />
<text  x="386.34" y="81.5" ></text>
</g>
<g >
<title>SNESSolve (3,723,293 us, 67.61%)</title><rect x="391.9" y="103" width="797.8" height="15.0" fill="rgb(153.616037784167,153.616037784167,136.754644646349)" rx="2" ry="2" />
<text  x="394.91" y="113.5" >SNESSolve</text>
</g>
<g >
<title>HybridOperatorAssembly (778,640 us, 14.14%)</title><rect x="396.5" y="151" width="166.9" height="15.0" fill="rgb(111.974427675801,146.067444212245,146.067444212245)" rx="2" ry="2" />
<text  x="399.52" y="161.5" >HybridOperatorAssem..</text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (1,475 us, 0.03%)</title><rect x="394.4" y="215" width="0.4" height="15.0" fill="rgb(135.898411784143,161.597932965372,135.898411784143)" rx="2" ry="2" />
<text  x="397.45" y="225.5" ></text>
</g>
<g >
<title>ParLoopExecute (724,463 us, 13.15%)</title><rect x="407.1" y="167" width="155.2" height="15.0" fill="rgb(105.899147633117,144.492371608586,144.492371608586)" rx="2" ry="2" />
<text  x="410.11" y="177.5" >ParLoopExecute</text>
</g>
<g >
<title>VecCopy (1,617 us, 0.03%)</title><rect x="1189.7" y="103" width="0.3" height="15.0" fill="rgb(120.643862429169,148.315075444599,148.315075444599)" rx="2" ry="2" />
<text  x="1192.65" y="113.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (37,766 us, 0.69%)</title><rect x="16.6" y="135" width="8.1" height="15.0" fill="rgb(145.455655052454,154.747762421007,154.747762421007)" rx="2" ry="2" />
<text  x="19.57" y="145.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.WithGeometry.split (648 us, 0.01%)</title><rect x="1147.5" y="199" width="0.1" height="15.0" fill="rgb(134.224998595539,134.224998595539,153.398386824943)" rx="2" ry="2" />
<text  x="1150.49" y="209.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_pyop2_kernel_uniform_extrusion (37,766 us, 0.69%)</title><rect x="16.6" y="119" width="8.1" height="15.0" fill="rgb(154.616337878638,132.058590402888,132.058590402888)" rx="2" ry="2" />
<text  x="19.57" y="129.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (1,494 us, 0.03%)</title><rect x="1181.9" y="167" width="0.3" height="15.0" fill="rgb(115.588755342754,147.004492125899,147.004492125899)" rx="2" ry="2" />
<text  x="1184.90" y="177.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (7,220 us, 0.13%)</title><rect x="24.7" y="119" width="1.5" height="15.0" fill="rgb(153.334229246713,122.229090891465,122.229090891465)" rx="2" ry="2" />
<text  x="27.66" y="129.5" ></text>
</g>
<g >
<title>CreateSparsity (2,325,011 us, 42.22%)</title><rect x="563.6" y="167" width="498.2" height="15.0" fill="rgb(124.341006037967,163.479371110098,124.341006037967)" rx="2" ry="2" />
<text  x="566.63" y="177.5" >CreateSparsity</text>
</g>
<g >
<title>firedrake.assemble.allocate_matrix (2,718,891 us, 49.37%)</title><rect x="563.4" y="151" width="582.5" height="15.0" fill="rgb(155.178614628027,155.178614628027,144.327132428133)" rx="2" ry="2" />
<text  x="566.35" y="161.5" >firedrake.assemble.allocate_matrix</text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (1,475 us, 0.03%)</title><rect x="394.4" y="199" width="0.4" height="15.0" fill="rgb(155.06435743638,155.06435743638,143.773424499378)" rx="2" ry="2" />
<text  x="397.45" y="209.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.LinearVariationalProblem.__init__ (20,585 us, 0.37%)</title><rect x="385.2" y="71" width="4.4" height="15.0" fill="rgb(121.449413919964,121.449413919964,150.925693016767)" rx="2" ry="2" />
<text  x="388.17" y="81.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (1,475 us, 0.03%)</title><rect x="394.4" y="183" width="0.4" height="15.0" fill="rgb(143.663397349995,154.283103016665,154.283103016665)" rx="2" ry="2" />
<text  x="397.45" y="193.5" ></text>
</g>
<g >
<title>HybridInit (3,622,823 us, 65.78%)</title><rect x="391.9" y="135" width="776.2" height="15.0" fill="rgb(139.948443538627,139.948443538627,154.506150362315)" rx="2" ry="2" />
<text  x="394.91" y="145.5" >HybridInit</text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (8,071 us, 0.15%)</title><rect x="1145.9" y="151" width="1.7" height="15.0" fill="rgb(152.524151663848,152.524151663848,131.463196524802)" rx="2" ry="2" />
<text  x="1148.90" y="161.5" ></text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (33,619 us, 0.61%)</title><rect x="1182.2" y="135" width="7.2" height="15.0" fill="rgb(107.225882779498,144.83633997987,144.83633997987)" rx="2" ry="2" />
<text  x="1185.22" y="145.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (5,280 us, 0.10%)</title><rect x="383.6" y="103" width="1.1" height="15.0" fill="rgb(144.68233690018,144.68233690018,155.422387787132)" rx="2" ry="2" />
<text  x="386.60" y="113.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (7,220 us, 0.13%)</title><rect x="24.7" y="135" width="1.5" height="15.0" fill="rgb(145.881664050558,159.972752363863,145.881664050558)" rx="2" ry="2" />
<text  x="27.66" y="145.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (1,475 us, 0.03%)</title><rect x="394.4" y="231" width="0.4" height="15.0" fill="rgb(150.357418041252,150.357418041252,120.96287204607)" rx="2" ry="2" />
<text  x="397.45" y="241.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (640 us, 0.01%)</title><rect x="1189.3" y="215" width="0.1" height="15.0" fill="rgb(149.427387767627,159.3955415262,149.427387767627)" rx="2" ry="2" />
<text  x="1192.29" y="225.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (5,889 us, 0.11%)</title><rect x="1146.4" y="183" width="1.2" height="15.0" fill="rgb(154.154254485328,128.515951054179,128.515951054179)" rx="2" ry="2" />
<text  x="1149.37" y="193.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (10,655 us, 0.19%)</title><rect x="394.2" y="151" width="2.3" height="15.0" fill="rgb(154.64739679893,132.296708791796,132.296708791796)" rx="2" ry="2" />
<text  x="397.24" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspace.VectorFunctionSpace (7,220 us, 0.13%)</title><rect x="24.7" y="87" width="1.5" height="15.0" fill="rgb(129.424553423947,129.424553423947,152.469268404635)" rx="2" ry="2" />
<text  x="27.66" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspace.VectorFunctionSpace (5,280 us, 0.10%)</title><rect x="383.6" y="71" width="1.1" height="15.0" fill="rgb(145.875403068445,154.856585980708,154.856585980708)" rx="2" ry="2" />
<text  x="386.60" y="81.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_form1_cell_integral_otherwise (35,757 us, 0.65%)</title><rect x="1174.6" y="151" width="7.6" height="15.0" fill="rgb(156.494549076333,146.458209585221,146.458209585221)" rx="2" ry="2" />
<text  x="1177.56" y="161.5" ></text>
</g>
<g >
<title>PCSetUp (3,622,823 us, 65.78%)</title><rect x="391.9" y="119" width="776.2" height="15.0" fill="rgb(118.859568513657,147.852480725763,147.852480725763)" rx="2" ry="2" />
<text  x="394.91" y="129.5" >PCSetUp</text>
</g>
<g >
<title>MatAssemblyEnd (12,323 us, 0.22%)</title><rect x="1061.8" y="167" width="2.6" height="15.0" fill="rgb(152.002903370197,152.002903370197,128.937147101725)" rx="2" ry="2" />
<text  x="1064.78" y="177.5" ></text>
</g>
<g >
<title>Log_Event_form1_cell_integral_otherwise (33,441 us, 0.61%)</title><rect x="1174.7" y="167" width="7.2" height="15.0" fill="rgb(154.93766438733,154.93766438733,143.159450492447)" rx="2" ry="2" />
<text  x="1177.73" y="177.5" ></text>
</g>
<g >
<title>firedrake (5,507,365 us, 100.00%)</title><rect x="10.0" y="55" width="1180.0" height="15.0" fill="rgb(147.895145980545,147.895145980545,109.030322828795)" rx="2" ry="2" />
<text  x="13.00" y="65.5" >firedrake</text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (1,804 us, 0.03%)</title><rect x="1147.1" y="231" width="0.4" height="15.0" fill="rgb(118.662569126194,147.801406810495,147.801406810495)" rx="2" ry="2" />
<text  x="1150.10" y="241.5" ></text>
</g>
<g >
<title>firedrake.mesh.ExtrudedMeshTopology.__init__ (766 us, 0.01%)</title><rect x="26.2" y="87" width="0.2" height="15.0" fill="rgb(139.590510830253,160.996893585773,139.590510830253)" rx="2" ry="2" />
<text  x="29.21" y="97.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (2,477 us, 0.04%)</title><rect x="391.4" y="119" width="0.5" height="15.0" fill="rgb(153.236174408774,121.477337133934,121.477337133934)" rx="2" ry="2" />
<text  x="394.38" y="129.5" ></text>
</g>
<g >
<title>perfsolve (3,724,910 us, 67.64%)</title><rect x="391.9" y="71" width="798.1" height="15.0" fill="rgb(151.257363345998,151.257363345998,125.32414544599)" rx="2" ry="2" />
<text  x="394.91" y="81.5" >perfsolve</text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (2,440 us, 0.04%)</title><rect x="1188.9" y="167" width="0.5" height="15.0" fill="rgb(132.70099351984,93.1712958945888,132.70099351984)" rx="2" ry="2" />
<text  x="1191.90" y="177.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.action (3,660 us, 0.07%)</title><rect x="390.6" y="119" width="0.8" height="15.0" fill="rgb(138.665462002873,138.665462002873,154.257831355395)" rx="2" ry="2" />
<text  x="393.59" y="129.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (8,209 us, 0.15%)</title><rect x="394.8" y="199" width="1.7" height="15.0" fill="rgb(153.632369532959,124.514833086015,124.514833086015)" rx="2" ry="2" />
<text  x="397.76" y="209.5" ></text>
</g>
<g >
<title>firedrake.matrix_free.operators.ImplicitMatrixContext.__init__ (6,137 us, 0.11%)</title><rect x="390.6" y="103" width="1.3" height="15.0" fill="rgb(130.589306790939,162.462205871243,130.589306790939)" rx="2" ry="2" />
<text  x="393.59" y="113.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.action (10,365 us, 0.19%)</title><rect x="385.2" y="87" width="2.2" height="15.0" fill="rgb(131.700241647426,162.281356010884,131.700241647426)" rx="2" ry="2" />
<text  x="388.17" y="97.5" ></text>
</g>
<g >
<title>firedrake.parloops.par_loop (7,254 us, 0.13%)</title><rect x="1166.6" y="151" width="1.5" height="15.0" fill="rgb(132.480739325203,132.480739325203,153.060788256491)" rx="2" ry="2" />
<text  x="1169.57" y="161.5" ></text>
</g>
<g >
<title>CreateMesh (1,817 us, 0.03%)</title><rect x="29.9" y="71" width="0.4" height="15.0" fill="rgb(139.40241768055,153.178404583846,153.178404583846)" rx="2" ry="2" />
<text  x="32.87" y="81.5" ></text>
</g>
<g >
<title>firedrake.functionspace.make_scalar_element (1,011 us, 0.02%)</title><rect x="1146.9" y="215" width="0.2" height="15.0" fill="rgb(148.527458054707,148.527458054707,112.094604418963)" rx="2" ry="2" />
<text  x="1149.88" y="225.5" ></text>
</g>
<g >
<title>ParLoopExecute (2,957 us, 0.05%)</title><rect x="1167.5" y="167" width="0.6" height="15.0" fill="rgb(135.919106550863,152.275323920594,152.275323920594)" rx="2" ry="2" />
<text  x="1170.49" y="177.5" ></text>
</g>
</g>
</svg>
