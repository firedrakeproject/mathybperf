<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="283" onload="init(evt)" viewBox="0 0 1200 283" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:13px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:18px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 13 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (1 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="283.0" fill="url(#background)"  />
<text id="title" x="600.00" y="26" >Firedrake example</text>
<text id="details" x="10.00" y="265" > </text>
<text id="unzoom" x="10.00" y="26" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="26" >Search</text>
<text id="ignorecase" x="1174.00" y="26" >ic</text>
<text id="matched" x="1090.00" y="265" > </text>
<g id="frames">
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (1,540,337 us, 8.95%)</title><rect x="403.9" y="215" width="105.6" height="15.0" fill="rgb(109.219929190205,145.353314975238,145.353314975238)" rx="2" ry="2" />
<text  x="406.89" y="225.5" >pyop2.globa..</text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (15,929 us, 0.09%)</title><rect x="536.1" y="151" width="1.1" height="15.0" fill="rgb(113.612860557169,113.612860557169,149.408940753)" rx="2" ry="2" />
<text  x="539.10" y="161.5" ></text>
</g>
<g >
<title>DMPlexInterp (13,617 us, 0.08%)</title><rect x="399.0" y="119" width="0.9" height="15.0" fill="rgb(142.823265396289,119.109617577991,142.823265396289)" rx="2" ry="2" />
<text  x="401.97" y="129.5" ></text>
</g>
<g >
<title>firedrake.interpolation.make_interpolator (21,297 us, 0.12%)</title><rect x="537.2" y="135" width="1.5" height="15.0" fill="rgb(115.10117153956,115.10117153956,149.697000943141)" rx="2" ry="2" />
<text  x="540.19" y="145.5" ></text>
</g>
<g >
<title>Mesh: reorder (7,195 us, 0.04%)</title><rect x="129.5" y="87" width="0.5" height="15.0" fill="rgb(106.672799908834,144.692948124513,144.692948124513)" rx="2" ry="2" />
<text  x="132.48" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (45,593 us, 0.26%)</title><rect x="125.1" y="103" width="3.2" height="15.0" fill="rgb(149.25363363077,159.423827083363,149.25363363077)" rx="2" ry="2" />
<text  x="128.13" y="113.5" ></text>
</g>
<g >
<title>firedrake.parloops.par_loop (1,552,189 us, 9.02%)</title><rect x="403.1" y="167" width="106.4" height="15.0" fill="rgb(149.771146531306,149.771146531306,118.121710113253)" rx="2" ry="2" />
<text  x="406.08" y="177.5" >firedrake.p..</text>
</g>
<g >
<title>CreateMesh (7,131 us, 0.04%)</title><rect x="397.1" y="119" width="0.5" height="15.0" fill="rgb(156.433014981096,145.986448188402,145.986448188402)" rx="2" ry="2" />
<text  x="400.14" y="129.5" ></text>
</g>
<g >
<title>ParLoopExecute (1,500,454 us, 8.72%)</title><rect x="539.3" y="151" width="102.8" height="15.0" fill="rgb(134.893403466691,98.7893463833959,134.893403466691)" rx="2" ry="2" />
<text  x="542.28" y="161.5" >ParLoopExec..</text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (2,869 us, 0.02%)</title><rect x="642.1" y="135" width="0.2" height="15.0" fill="rgb(128.2237228267,162.847300935188,128.2237228267)" rx="2" ry="2" />
<text  x="645.12" y="145.5" ></text>
</g>
<g >
<title>HybridRHS (315,351 us, 1.83%)</title><rect x="509.5" y="151" width="21.6" height="15.0" fill="rgb(153.470739531537,123.275669741782,123.275669741782)" rx="2" ry="2" />
<text  x="512.46" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (9,007 us, 0.05%)</title><rect x="124.5" y="135" width="0.6" height="15.0" fill="rgb(142.452656277667,160.530962931543,142.452656277667)" rx="2" ry="2" />
<text  x="127.52" y="145.5" ></text>
</g>
<g >
<title>CreateMesh (4,442 us, 0.03%)</title><rect x="128.6" y="87" width="0.3" height="15.0" fill="rgb(151.163477881793,151.163477881793,124.869162042536)" rx="2" ry="2" />
<text  x="131.60" y="97.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (1,500,454 us, 8.72%)</title><rect x="539.3" y="183" width="102.8" height="15.0" fill="rgb(154.796455094477,133.439489057659,133.439489057659)" rx="2" ry="2" />
<text  x="542.28" y="193.5" >pyop2.globa..</text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.__init__ (30,984 us, 0.18%)</title><rect x="401.0" y="71" width="2.1" height="15.0" fill="rgb(117.235877559984,117.235877559984,150.11016985032)" rx="2" ry="2" />
<text  x="403.95" y="81.5" ></text>
</g>
<g >
<title>firedrake.utility_meshes.RectangleMesh (53,396 us, 0.31%)</title><rect x="396.2" y="87" width="3.7" height="15.0" fill="rgb(133.131496963751,94.2744609696126,133.131496963751)" rx="2" ry="2" />
<text  x="399.24" y="97.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (6,821 us, 0.04%)</title><rect x="1189.5" y="135" width="0.5" height="15.0" fill="rgb(156.142014396376,143.75544370555,143.75544370555)" rx="2" ry="2" />
<text  x="1192.53" y="145.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (45,593 us, 0.26%)</title><rect x="125.1" y="71" width="3.2" height="15.0" fill="rgb(143.850512579872,160.303404928858,143.850512579872)" rx="2" ry="2" />
<text  x="128.13" y="81.5" ></text>
</g>
<g >
<title>Log_Event_form0_cell_integral_otherwise (4,549 us, 0.03%)</title><rect x="642.8" y="151" width="0.3" height="15.0" fill="rgb(154.575658303095,131.746713657058,131.746713657058)" rx="2" ry="2" />
<text  x="645.80" y="161.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (7,260 us, 0.04%)</title><rect x="536.7" y="183" width="0.5" height="15.0" fill="rgb(152.482677738433,152.482677738433,131.262207501637)" rx="2" ry="2" />
<text  x="539.70" y="193.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.action (4,637 us, 0.03%)</title><rect x="399.9" y="87" width="0.3" height="15.0" fill="rgb(143.836686172624,154.328029748458,154.328029748458)" rx="2" ry="2" />
<text  x="402.90" y="97.5" ></text>
</g>
<g >
<title>firedrake.function.Function.__init__ (2,809 us, 0.02%)</title><rect x="530.9" y="183" width="0.2" height="15.0" fill="rgb(128.988933755459,162.722731714228,128.988933755459)" rx="2" ry="2" />
<text  x="533.89" y="193.5" ></text>
</g>
<g >
<title>PCApply (1,867,540 us, 10.85%)</title><rect x="403.1" y="119" width="128.0" height="15.0" fill="rgb(152.411476694931,152.411476694931,130.917156290821)" rx="2" ry="2" />
<text  x="406.08" y="129.5" >PCApply</text>
</g>
<g >
<title>Parloop_Cells_wrap_pyop2_kernel_uniform_extrusion (1,615,122 us, 9.38%)</title><rect x="13.8" y="119" width="110.7" height="15.0" fill="rgb(143.014420794009,160.439512893999,143.014420794009)" rx="2" ry="2" />
<text  x="16.82" y="129.5" >Parloop_Cell..</text>
</g>
<g >
<title>firedrake.mesh._from_cell_list (33,159 us, 0.19%)</title><rect x="397.6" y="103" width="2.3" height="15.0" fill="rgb(113.57136683238,146.481465475061,146.481465475061)" rx="2" ry="2" />
<text  x="400.63" y="113.5" ></text>
</g>
<g >
<title>CreateExtMesh (1,679,817 us, 9.76%)</title><rect x="10.0" y="71" width="115.1" height="15.0" fill="rgb(144.156682839295,160.253563258719,144.156682839295)" rx="2" ry="2" />
<text  x="13.00" y="81.5" >CreateExtMesh</text>
</g>
<g >
<title>KSPSolve (1,867,540 us, 10.85%)</title><rect x="403.1" y="103" width="128.0" height="15.0" fill="rgb(148.007083039618,148.007083039618,109.572787038148)" rx="2" ry="2" />
<text  x="406.08" y="113.5" >KSPSolve</text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (2,170 us, 0.01%)</title><rect x="1189.9" y="167" width="0.1" height="15.0" fill="rgb(125.01310681898,125.01310681898,151.61544002948)" rx="2" ry="2" />
<text  x="1192.85" y="177.5" ></text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (992,955 us, 5.77%)</title><rect x="1121.9" y="119" width="68.1" height="15.0" fill="rgb(119.38079600239,147.987613778397,147.987613778397)" rx="2" ry="2" />
<text  x="1124.94" y="129.5" >firedr..</text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (2,782 us, 0.02%)</title><rect x="535.1" y="183" width="0.2" height="15.0" fill="rgb(141.714183048455,116.267594061666,141.714183048455)" rx="2" ry="2" />
<text  x="538.10" y="193.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (3,686,443 us, 21.41%)</title><rect x="869.3" y="151" width="252.6" height="15.0" fill="rgb(143.572320455619,143.572320455619,155.207545894636)" rx="2" ry="2" />
<text  x="872.27" y="161.5" >pyop2.global_kernel.GlobalKern..</text>
</g>
<g >
<title>PCSetUp (1,622,966 us, 9.43%)</title><rect x="531.1" y="103" width="111.2" height="15.0" fill="rgb(124.271196796069,149.255495465648,149.255495465648)" rx="2" ry="2" />
<text  x="534.08" y="113.5" >PCSetUp</text>
</g>
<g >
<title>DMPlexStratify (5,713 us, 0.03%)</title><rect x="398.6" y="135" width="0.4" height="15.0" fill="rgb(155.054587685837,135.418505591421,135.418505591421)" rx="2" ry="2" />
<text  x="401.58" y="145.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (15,929 us, 0.09%)</title><rect x="536.1" y="135" width="1.1" height="15.0" fill="rgb(152.236344025874,113.811970865037,113.811970865037)" rx="2" ry="2" />
<text  x="539.10" y="145.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (3,361 us, 0.02%)</title><rect x="530.7" y="183" width="0.2" height="15.0" fill="rgb(118.900611902162,147.863121604264,147.863121604264)" rx="2" ry="2" />
<text  x="533.66" y="193.5" ></text>
</g>
<g >
<title>ParLoopExecute (1,615,122 us, 9.38%)</title><rect x="13.8" y="103" width="110.7" height="15.0" fill="rgb(150.784621325364,150.784621325364,123.033164884458)" rx="2" ry="2" />
<text  x="16.82" y="113.5" >ParLoopExecute</text>
</g>
<g >
<title>DMPlexBuCoFrCeLi (2,285 us, 0.01%)</title><rect x="398.4" y="119" width="0.2" height="15.0" fill="rgb(151.663647721989,151.663647721989,127.29306203733)" rx="2" ry="2" />
<text  x="401.42" y="129.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (2,782 us, 0.02%)</title><rect x="535.1" y="199" width="0.2" height="15.0" fill="rgb(149.013528448208,149.013528448208,114.450176325932)" rx="2" ry="2" />
<text  x="538.10" y="209.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (2,614 us, 0.02%)</title><rect x="402.9" y="119" width="0.2" height="15.0" fill="rgb(143.029645820458,160.437034401321,143.029645820458)" rx="2" ry="2" />
<text  x="405.90" y="129.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (10,932 us, 0.06%)</title><rect x="536.4" y="167" width="0.8" height="15.0" fill="rgb(149.038138080768,149.038138080768,114.569438391416)" rx="2" ry="2" />
<text  x="539.44" y="177.5" ></text>
</g>
<g >
<title>SNESFunctionEval (7,990,687 us, 46.41%)</title><rect x="642.3" y="103" width="547.7" height="15.0" fill="rgb(149.553628397956,149.553628397956,117.067583774712)" rx="2" ry="2" />
<text  x="645.32" y="113.5" >SNESFunctionEval</text>
</g>
<g >
<title>ParLoopExecute (6,992,933 us, 40.62%)</title><rect x="642.6" y="119" width="479.3" height="15.0" fill="rgb(124.673197758334,163.425293388178,124.673197758334)" rx="2" ry="2" />
<text  x="645.65" y="129.5" >ParLoopExecute</text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (3,053 us, 0.02%)</title><rect x="537.0" y="215" width="0.2" height="15.0" fill="rgb(152.165967861447,152.165967861447,129.727382713167)" rx="2" ry="2" />
<text  x="539.98" y="225.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (11,783 us, 0.07%)</title><rect x="535.3" y="183" width="0.8" height="15.0" fill="rgb(155.038215646046,135.292986619689,135.292986619689)" rx="2" ry="2" />
<text  x="538.29" y="193.5" ></text>
</g>
<g >
<title>all (17,216,197 us, 100%)</title><rect x="10.0" y="39" width="1180.0" height="15.0" fill="rgb(129.018788666569,129.018788666569,152.390733290304)" rx="2" ry="2" />
<text  x="13.00" y="49.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.solve (11,481,193 us, 66.69%)</title><rect x="403.1" y="71" width="786.9" height="15.0" fill="rgb(125.310158586253,125.310158586253,151.67293391992)" rx="2" ry="2" />
<text  x="406.08" y="81.5" >firedrake.variational_solver.NonlinearVariationalSolver.solve</text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (11,783 us, 0.07%)</title><rect x="535.3" y="167" width="0.8" height="15.0" fill="rgb(142.412236362725,118.056355679483,142.412236362725)" rx="2" ry="2" />
<text  x="538.29" y="177.5" ></text>
</g>
<g >
<title>DMPlexBuFrCeLi (5,713 us, 0.03%)</title><rect x="398.6" y="119" width="0.4" height="15.0" fill="rgb(130.602222439265,150.896872484254,150.896872484254)" rx="2" ry="2" />
<text  x="401.58" y="129.5" ></text>
</g>
<g >
<title>CreateMesh (7,131 us, 0.04%)</title><rect x="397.1" y="103" width="0.5" height="15.0" fill="rgb(155.327959761496,137.514358171472,137.514358171472)" rx="2" ry="2" />
<text  x="400.14" y="113.5" ></text>
</g>
<g >
<title>FunctionSpaceData: CreateElement (11,783 us, 0.07%)</title><rect x="535.3" y="199" width="0.8" height="15.0" fill="rgb(156.77638134684,148.618923659109,148.618923659109)" rx="2" ry="2" />
<text  x="538.29" y="209.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (3,294,237 us, 19.13%)</title><rect x="643.1" y="151" width="225.8" height="15.0" fill="rgb(152.547160847998,152.547160847998,131.574702571067)" rx="2" ry="2" />
<text  x="646.11" y="161.5" >pyop2.global_kernel.GlobalK..</text>
</g>
<g >
<title>SNESSolve (11,481,193 us, 66.69%)</title><rect x="403.1" y="87" width="786.9" height="15.0" fill="rgb(142.284625210677,153.925643573139,153.925643573139)" rx="2" ry="2" />
<text  x="406.08" y="97.5" >SNESSolve</text>
</g>
<g >
<title>firedrake.assemble.allocate_matrix (12,915 us, 0.08%)</title><rect x="402.2" y="87" width="0.9" height="15.0" fill="rgb(152.012962538142,152.012962538142,128.98589537715)" rx="2" ry="2" />
<text  x="405.19" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (9,007 us, 0.05%)</title><rect x="124.5" y="151" width="0.6" height="15.0" fill="rgb(134.191638260982,134.191638260982,153.391929985996)" rx="2" ry="2" />
<text  x="127.52" y="161.5" ></text>
</g>
<g >
<title>PetscBarrier (32,248 us, 0.19%)</title><rect x="130.0" y="71" width="2.2" height="15.0" fill="rgb(155.113496556687,155.113496556687,144.011560236254)" rx="2" ry="2" />
<text  x="132.97" y="81.5" ></text>
</g>
<g >
<title>firedrake.mesh.MeshTopology._facets (20,863 us, 0.12%)</title><rect x="126.8" y="135" width="1.5" height="15.0" fill="rgb(143.79692780434,121.604627498622,143.79692780434)" rx="2" ry="2" />
<text  x="129.83" y="145.5" ></text>
</g>
<g >
<title>CreateMesh (25,001 us, 0.15%)</title><rect x="128.3" y="71" width="1.7" height="15.0" fill="rgb(152.271916331417,152.271916331417,130.240825298405)" rx="2" ry="2" />
<text  x="131.26" y="81.5" ></text>
</g>
<g >
<title>FunctionSpaceData: CreateElement (7,703 us, 0.04%)</title><rect x="126.3" y="135" width="0.5" height="15.0" fill="rgb(142.626486379469,118.605371347389,142.626486379469)" rx="2" ry="2" />
<text  x="129.30" y="145.5" ></text>
</g>
<g >
<title>firedrake (17,216,197 us, 100.00%)</title><rect x="10.0" y="55" width="1180.0" height="15.0" fill="rgb(144.138153620637,122.479018652882,144.138153620637)" rx="2" ry="2" />
<text  x="13.00" y="65.5" >firedrake</text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (2,782 us, 0.02%)</title><rect x="535.1" y="215" width="0.2" height="15.0" fill="rgb(152.843562530451,152.843562530451,133.011110724495)" rx="2" ry="2" />
<text  x="538.10" y="225.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (9,007 us, 0.05%)</title><rect x="124.5" y="103" width="0.6" height="15.0" fill="rgb(155.692829250551,140.31169092089,140.31169092089)" rx="2" ry="2" />
<text  x="127.52" y="113.5" ></text>
</g>
<g >
<title>Log_Event_form1_cell_integral_otherwise (2,693 us, 0.02%)</title><rect x="869.1" y="151" width="0.2" height="15.0" fill="rgb(138.279477532306,152.88727195282,152.88727195282)" rx="2" ry="2" />
<text  x="872.09" y="161.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_form1_cell_integral_otherwise (3,691,873 us, 21.44%)</title><rect x="868.9" y="135" width="253.0" height="15.0" fill="rgb(153.683566320307,124.907341789021,124.907341789021)" rx="2" ry="2" />
<text  x="871.90" y="145.5" >Parloop_Cells_wrap_form1_cell_..</text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (9,007 us, 0.05%)</title><rect x="124.5" y="119" width="0.6" height="15.0" fill="rgb(123.765848601256,163.573001390493,123.765848601256)" rx="2" ry="2" />
<text  x="127.52" y="129.5" ></text>
</g>
<g >
<title>ParLoopExecute (1,540,337 us, 8.95%)</title><rect x="403.9" y="183" width="105.6" height="15.0" fill="rgb(144.800465773887,144.800465773887,155.445251440107)" rx="2" ry="2" />
<text  x="406.89" y="193.5" >ParLoopExec..</text>
</g>
<g >
<title>SCForwardElim (1,867,540 us, 10.85%)</title><rect x="403.1" y="135" width="128.0" height="15.0" fill="rgb(134.227026617153,161.870018922789,134.227026617153)" rx="2" ry="2" />
<text  x="406.08" y="145.5" >SCForwardElim</text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (4,243 us, 0.02%)</title><rect x="1189.7" y="151" width="0.3" height="15.0" fill="rgb(134.063547939509,161.896631730778,134.063547939509)" rx="2" ry="2" />
<text  x="1192.71" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (11,783 us, 0.07%)</title><rect x="535.3" y="151" width="0.8" height="15.0" fill="rgb(154.497277804246,131.145796499218,131.145796499218)" rx="2" ry="2" />
<text  x="538.29" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspace.MixedFunctionSpace (2,782 us, 0.02%)</title><rect x="535.1" y="151" width="0.2" height="15.0" fill="rgb(128.219987758775,162.847908969502,128.219987758775)" rx="2" ry="2" />
<text  x="538.10" y="161.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (1,615,122 us, 9.38%)</title><rect x="13.8" y="135" width="110.7" height="15.0" fill="rgb(152.19470096833,113.492707423861,113.492707423861)" rx="2" ry="2" />
<text  x="16.82" y="145.5" >pyop2.global..</text>
</g>
<g >
<title>firedrake.functionspace.VectorFunctionSpace (9,007 us, 0.05%)</title><rect x="124.5" y="87" width="0.6" height="15.0" fill="rgb(137.048278986731,137.048278986731,153.94482819098)" rx="2" ry="2" />
<text  x="127.52" y="97.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_form0_cell_integral_otherwise (3,301,060 us, 19.17%)</title><rect x="642.6" y="135" width="226.3" height="15.0" fill="rgb(137.669331309159,161.30964374037,137.669331309159)" rx="2" ry="2" />
<text  x="645.65" y="145.5" >Parloop_Cells_wrap_form0_ce..</text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalProblem.__init__ (10,706 us, 0.06%)</title><rect x="400.2" y="87" width="0.8" height="15.0" fill="rgb(153.43345045873,122.989786850262,122.989786850262)" rx="2" ry="2" />
<text  x="403.22" y="97.5" ></text>
</g>
<g >
<title>HybridInit (1,622,966 us, 9.43%)</title><rect x="531.1" y="119" width="111.2" height="15.0" fill="rgb(151.430272709603,141.165073818358,151.430272709603)" rx="2" ry="2" />
<text  x="534.08" y="129.5" >HybridInit</text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (1,500,454 us, 8.72%)</title><rect x="539.3" y="167" width="102.8" height="15.0" fill="rgb(140.289008524487,140.289008524487,154.57206616603)" rx="2" ry="2" />
<text  x="542.28" y="177.5" >Parloop_Cel..</text>
</g>
<g >
<title>CreateFunctionSpace (2,782 us, 0.02%)</title><rect x="535.1" y="167" width="0.2" height="15.0" fill="rgb(153.010059349684,119.743788347577,119.743788347577)" rx="2" ry="2" />
<text  x="538.10" y="177.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.LinearVariationalProblem.__init__ (15,343 us, 0.09%)</title><rect x="399.9" y="71" width="1.1" height="15.0" fill="rgb(124.838717229587,124.838717229587,151.581687205727)" rx="2" ry="2" />
<text  x="402.90" y="81.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (10,706 us, 0.06%)</title><rect x="400.2" y="103" width="0.8" height="15.0" fill="rgb(133.707585500919,161.954579104502,133.707585500919)" rx="2" ry="2" />
<text  x="403.22" y="113.5" ></text>
</g>
<g >
<title>firedrake.slate.slac.optimise.optimise (52,521 us, 0.31%)</title><rect x="527.5" y="167" width="3.6" height="15.0" fill="rgb(148.860549811454,148.860549811454,113.708818317045)" rx="2" ry="2" />
<text  x="530.48" y="177.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (45,593 us, 0.26%)</title><rect x="125.1" y="119" width="3.2" height="15.0" fill="rgb(133.960739502356,96.3993949747876,133.960739502356)" rx="2" ry="2" />
<text  x="128.13" y="129.5" ></text>
</g>
<g >
<title>firedrake.extrusion_utils.make_extruded_coords (1,668,110 us, 9.69%)</title><rect x="10.2" y="87" width="114.3" height="15.0" fill="rgb(139.071547479131,139.071547479131,154.336428544348)" rx="2" ry="2" />
<text  x="13.19" y="97.5" >firedrake.ex..</text>
</g>
<g >
<title>DMPlexStratify (3,528 us, 0.02%)</title><rect x="131.8" y="87" width="0.2" height="15.0" fill="rgb(145.197219658214,125.192875374173,145.197219658214)" rx="2" ry="2" />
<text  x="134.80" y="97.5" ></text>
</g>
<g >
<title>Mesh: numbering (8,377 us, 0.05%)</title><rect x="128.9" y="87" width="0.6" height="15.0" fill="rgb(153.360295479135,122.4289320067,122.4289320067)" rx="2" ry="2" />
<text  x="131.91" y="97.5" ></text>
</g>
<g >
<title>firedrake.utility_meshes.SquareMesh (53,396 us, 0.31%)</title><rect x="396.2" y="71" width="3.7" height="15.0" fill="rgb(129.253503578471,162.679662208156,129.253503578471)" rx="2" ry="2" />
<text  x="399.24" y="81.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (1,540,337 us, 8.95%)</title><rect x="403.9" y="199" width="105.6" height="15.0" fill="rgb(153.652340503556,124.667943860593,124.667943860593)" rx="2" ry="2" />
<text  x="406.89" y="209.5" >Parloop_Cel..</text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (45,593 us, 0.26%)</title><rect x="125.1" y="87" width="3.2" height="15.0" fill="rgb(140.862564222201,153.556961094645,153.556961094645)" rx="2" ry="2" />
<text  x="128.13" y="97.5" ></text>
</g>
<g >
<title>firedrake.parloops.par_loop (1,509,600 us, 8.77%)</title><rect x="538.7" y="135" width="103.4" height="15.0" fill="rgb(142.287877805824,153.926486838547,153.926486838547)" rx="2" ry="2" />
<text  x="541.65" y="145.5" >firedrake.p..</text>
</g>
<g >
<title>CreateFunctionSpace (17,054 us, 0.10%)</title><rect x="534.9" y="135" width="1.2" height="15.0" fill="rgb(137.346444367674,105.075263692166,137.346444367674)" rx="2" ry="2" />
<text  x="537.93" y="145.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (3,053 us, 0.02%)</title><rect x="537.0" y="199" width="0.2" height="15.0" fill="rgb(114.999073845271,146.851611737663,146.851611737663)" rx="2" ry="2" />
<text  x="539.98" y="209.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.action (4,005 us, 0.02%)</title><rect x="402.6" y="119" width="0.3" height="15.0" fill="rgb(141.561280700054,115.875781793888,141.561280700054)" rx="2" ry="2" />
<text  x="405.62" y="129.5" ></text>
</g>
<g >
<title>firedrake.__init__ (3,852,622 us, 22.38%)</title><rect x="132.2" y="71" width="264.0" height="15.0" fill="rgb(154.690790689228,132.629395284084,132.629395284084)" rx="2" ry="2" />
<text  x="135.18" y="81.5" >firedrake.__init__</text>
</g>
<g >
<title>HybridBreak (1,552,189 us, 9.02%)</title><rect x="403.1" y="151" width="106.4" height="15.0" fill="rgb(123.818872337817,163.564369619425,123.818872337817)" rx="2" ry="2" />
<text  x="406.08" y="161.5" >HybridBreak</text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (3,053 us, 0.02%)</title><rect x="537.0" y="231" width="0.2" height="15.0" fill="rgb(150.070337415381,137.680239626914,150.070337415381)" rx="2" ry="2" />
<text  x="539.98" y="241.5" ></text>
</g>
<g >
<title>firedrake.matrix_free.operators.ImplicitMatrixContext.__init__ (6,619 us, 0.04%)</title><rect x="402.6" y="103" width="0.5" height="15.0" fill="rgb(139.731100505201,111.185945044578,139.731100505201)" rx="2" ry="2" />
<text  x="405.62" y="113.5" ></text>
</g>
<g >
<title>DMPlexSymmetrize (2,081 us, 0.01%)</title><rect x="132.0" y="87" width="0.2" height="15.0" fill="rgb(125.460124644104,163.297189011425,125.460124644104)" rx="2" ry="2" />
<text  x="135.04" y="97.5" ></text>
</g>
</g>
</svg>
