<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="267" onload="init(evt)" viewBox="0 0 1200 267" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:13px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:18px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 13 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (1 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="267.0" fill="url(#background)"  />
<text id="title" x="600.00" y="26" >Firedrake example</text>
<text id="details" x="10.00" y="249" > </text>
<text id="unzoom" x="10.00" y="26" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="26" >Search</text>
<text id="ignorecase" x="1174.00" y="26" >ic</text>
<text id="matched" x="1090.00" y="249" > </text>
<g id="frames">
<g >
<title>DMPlexBuFrCeLi (5,668 us, 0.01%)</title><rect x="114.7" y="119" width="0.1" height="15.0" fill="rgb(125.729179972248,125.729179972248,151.754034833338)" rx="2" ry="2" />
<text  x="117.66" y="129.5" ></text>
</g>
<g >
<title>firedrake.extrusion_utils.make_extruded_coords (1,574,590 us, 2.99%)</title><rect x="10.0" y="87" width="35.3" height="15.0" fill="rgb(149.053363390345,149.053363390345,114.643222583981)" rx="2" ry="2" />
<text  x="13.00" y="97.5" >fi..</text>
</g>
<g >
<title>firedrake.parloops.par_loop (1,090,298 us, 2.07%)</title><rect x="116.1" y="167" width="24.4" height="15.0" fill="rgb(134.189812057112,134.189812057112,153.391576527183)" rx="2" ry="2" />
<text  x="119.10" y="177.5" >f..</text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (1,298,332 us, 2.47%)</title><rect x="1160.9" y="119" width="29.1" height="15.0" fill="rgb(116.230561571583,116.230561571583,149.915592562242)" rx="2" ry="2" />
<text  x="1163.89" y="129.5" >f..</text>
</g>
<g >
<title>HybridRHS (38,357,058 us, 72.87%)</title><rect x="140.5" y="151" width="860.0" height="15.0" fill="rgb(148.776502683087,148.776502683087,113.30151300265)" rx="2" ry="2" />
<text  x="143.55" y="161.5" >HybridRHS</text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (7,517 us, 0.01%)</title><rect x="1189.8" y="135" width="0.2" height="15.0" fill="rgb(130.500793094737,162.476615077601,130.500793094737)" rx="2" ry="2" />
<text  x="1192.83" y="145.5" ></text>
</g>
<g >
<title>firedrake.parloops.par_loop (900,190 us, 1.71%)</title><rect x="1002.2" y="135" width="20.2" height="15.0" fill="rgb(107.274598004739,144.848969853081,144.848969853081)" rx="2" ry="2" />
<text  x="1005.20" y="145.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (2,433,392 us, 4.62%)</title><rect x="1106.3" y="151" width="54.6" height="15.0" fill="rgb(145.108493228491,145.108493228491,155.504869657127)" rx="2" ry="2" />
<text  x="1109.34" y="161.5" >pyop2..</text>
</g>
<g >
<title>Parloop_Cells_wrap_form1_cell_integral_otherwise (2,433,392 us, 4.62%)</title><rect x="1106.3" y="135" width="54.6" height="15.0" fill="rgb(135.37901568521,135.37901568521,153.621744971331)" rx="2" ry="2" />
<text  x="1109.34" y="145.5" >Parlo..</text>
</g>
<g >
<title>all (52,635,065 us, 100%)</title><rect x="10.0" y="39" width="1180.0" height="15.0" fill="rgb(149.221650338311,159.429033665856,149.221650338311)" rx="2" ry="2" />
<text  x="13.00" y="49.5" ></text>
</g>
<g >
<title>DMPlexInterp (13,158 us, 0.02%)</title><rect x="114.8" y="119" width="0.3" height="15.0" fill="rgb(107.937522436856,145.020839150296,145.020839150296)" rx="2" ry="2" />
<text  x="117.79" y="129.5" ></text>
</g>
<g >
<title>PCSetUp (978,100 us, 1.86%)</title><rect x="1000.5" y="103" width="21.9" height="15.0" fill="rgb(148.216695379366,159.592630984754,148.216695379366)" rx="2" ry="2" />
<text  x="1003.46" y="113.5" ></text>
</g>
<g >
<title>HybridInit (978,100 us, 1.86%)</title><rect x="1000.5" y="119" width="21.9" height="15.0" fill="rgb(141.066457955861,160.756623123465,141.066457955861)" rx="2" ry="2" />
<text  x="1003.46" y="129.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (51,398 us, 0.10%)</title><rect x="45.5" y="87" width="1.2" height="15.0" fill="rgb(143.318790881788,143.318790881788,155.15847565454)" rx="2" ry="2" />
<text  x="48.52" y="97.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (8,420 us, 0.02%)</title><rect x="1001.7" y="183" width="0.2" height="15.0" fill="rgb(154.633418847043,132.189544493997,132.189544493997)" rx="2" ry="2" />
<text  x="1004.73" y="193.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (9,917 us, 0.02%)</title><rect x="45.3" y="119" width="0.2" height="15.0" fill="rgb(143.941694088232,121.975591101096,143.941694088232)" rx="2" ry="2" />
<text  x="48.30" y="129.5" ></text>
</g>
<g >
<title>firedrake.assemble.allocate_matrix (7,645 us, 0.01%)</title><rect x="115.9" y="87" width="0.2" height="15.0" fill="rgb(149.597406229698,149.597406229698,117.279737882384)" rx="2" ry="2" />
<text  x="118.93" y="97.5" ></text>
</g>
<g >
<title>ParLoopExecute (1,513,099 us, 2.87%)</title><rect x="11.4" y="103" width="33.9" height="15.0" fill="rgb(152.690339542058,117.292603155777,117.292603155777)" rx="2" ry="2" />
<text  x="14.38" y="113.5" >Pa..</text>
</g>
<g >
<title>HybridBreak (1,090,298 us, 2.07%)</title><rect x="116.1" y="151" width="24.4" height="15.0" fill="rgb(119.968356104857,148.139944175333,148.139944175333)" rx="2" ry="2" />
<text  x="119.10" y="161.5" >H..</text>
</g>
<g >
<title>DMPlexStratify (5,668 us, 0.01%)</title><rect x="114.7" y="135" width="0.1" height="15.0" fill="rgb(117.907786075624,117.907786075624,150.240216659798)" rx="2" ry="2" />
<text  x="117.66" y="145.5" ></text>
</g>
<g >
<title>SNESSolve (47,902,148 us, 91.01%)</title><rect x="116.1" y="87" width="1073.9" height="15.0" fill="rgb(146.219979615542,146.219979615542,155.719996054621)" rx="2" ry="2" />
<text  x="119.10" y="97.5" >SNESSolve</text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalProblem.__init__ (12,052 us, 0.02%)</title><rect x="115.2" y="87" width="0.3" height="15.0" fill="rgb(122.423135827705,148.776368547924,148.776368547924)" rx="2" ry="2" />
<text  x="118.22" y="97.5" ></text>
</g>
<g >
<title>firedrake.interpolation.make_interpolator (12,834 us, 0.02%)</title><rect x="1001.9" y="135" width="0.3" height="15.0" fill="rgb(150.729194281091,150.729194281091,122.764556900672)" rx="2" ry="2" />
<text  x="1004.92" y="145.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (9,917 us, 0.02%)</title><rect x="45.3" y="151" width="0.2" height="15.0" fill="rgb(145.305989235283,160.066466868675,145.305989235283)" rx="2" ry="2" />
<text  x="48.30" y="161.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (8,420 us, 0.02%)</title><rect x="1001.7" y="151" width="0.2" height="15.0" fill="rgb(111.930397780959,146.056029054323,146.056029054323)" rx="2" ry="2" />
<text  x="1004.73" y="161.5" ></text>
</g>
<g >
<title>firedrake (52,635,065 us, 100.00%)</title><rect x="10.0" y="55" width="1180.0" height="15.0" fill="rgb(141.328638236305,141.328638236305,154.77328481993)" rx="2" ry="2" />
<text  x="13.00" y="65.5" >firedrake</text>
</g>
<g >
<title>CreateMesh (6,327 us, 0.01%)</title><rect x="114.2" y="103" width="0.1" height="15.0" fill="rgb(138.757514899266,153.011207566476,153.011207566476)" rx="2" ry="2" />
<text  x="117.20" y="113.5" ></text>
</g>
<g >
<title>SNESFunctionEval (7,476,692 us, 14.20%)</title><rect x="1022.4" y="103" width="167.6" height="15.0" fill="rgb(115.342198054988,146.940569866108,146.940569866108)" rx="2" ry="2" />
<text  x="1025.38" y="113.5" >SNESFunctionEval</text>
</g>
<g >
<title>ParLoopExecute (892,871 us, 1.70%)</title><rect x="1002.4" y="151" width="20.0" height="15.0" fill="rgb(145.145201801337,160.092641567224,145.145201801337)" rx="2" ry="2" />
<text  x="1005.37" y="161.5" ></text>
</g>
<g >
<title>firedrake.matrix_free.operators.ImplicitMatrixContext.__init__ (7,645 us, 0.01%)</title><rect x="115.9" y="103" width="0.2" height="15.0" fill="rgb(145.496190224247,145.496190224247,155.579907785338)" rx="2" ry="2" />
<text  x="118.93" y="113.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (1,081,229 us, 2.05%)</title><rect x="116.3" y="215" width="24.2" height="15.0" fill="rgb(155.372191368631,137.853467159507,137.853467159507)" rx="2" ry="2" />
<text  x="119.31" y="225.5" >p..</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (892,871 us, 1.70%)</title><rect x="1002.4" y="183" width="20.0" height="15.0" fill="rgb(120.055428434541,120.055428434541,150.655889374427)" rx="2" ry="2" />
<text  x="1005.37" y="193.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (12,052 us, 0.02%)</title><rect x="115.2" y="103" width="0.3" height="15.0" fill="rgb(149.075500852474,149.075500852474,114.75050413122)" rx="2" ry="2" />
<text  x="118.22" y="113.5" ></text>
</g>
<g >
<title>firedrake.functionspace.VectorFunctionSpace (9,917 us, 0.02%)</title><rect x="45.3" y="87" width="0.2" height="15.0" fill="rgb(132.061827419506,162.222493210778,132.061827419506)" rx="2" ry="2" />
<text  x="48.30" y="97.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (8,420 us, 0.02%)</title><rect x="1001.7" y="135" width="0.2" height="15.0" fill="rgb(129.416835590609,162.653073275947,129.416835590609)" rx="2" ry="2" />
<text  x="1004.73" y="145.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (51,398 us, 0.10%)</title><rect x="45.5" y="103" width="1.2" height="15.0" fill="rgb(149.097680823574,149.097680823574,114.857991683474)" rx="2" ry="2" />
<text  x="48.52" y="113.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (6,791 us, 0.01%)</title><rect x="1001.6" y="151" width="0.1" height="15.0" fill="rgb(153.073486580652,120.230063785,120.230063785)" rx="2" ry="2" />
<text  x="1004.57" y="161.5" ></text>
</g>
<g >
<title>PCApply (39,447,356 us, 74.95%)</title><rect x="116.1" y="119" width="884.4" height="15.0" fill="rgb(149.026373354928,149.026373354928,114.512424720034)" rx="2" ry="2" />
<text  x="119.10" y="129.5" >PCApply</text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (6,791 us, 0.01%)</title><rect x="1001.6" y="183" width="0.1" height="15.0" fill="rgb(142.133910709818,160.582851744913,142.133910709818)" rx="2" ry="2" />
<text  x="1004.57" y="193.5" ></text>
</g>
<g >
<title>firedrake.utility_meshes.RectangleMesh (51,849 us, 0.10%)</title><rect x="113.9" y="87" width="1.2" height="15.0" fill="rgb(142.257759031655,142.257759031655,154.953114651288)" rx="2" ry="2" />
<text  x="116.92" y="97.5" ></text>
</g>
<g >
<title>PetscBarrier (32,572 us, 0.06%)</title><rect x="47.3" y="71" width="0.7" height="15.0" fill="rgb(124.52089271476,163.450087232481,124.52089271476)" rx="2" ry="2" />
<text  x="50.26" y="81.5" ></text>
</g>
<g >
<title>ParLoopExecute (1,081,229 us, 2.05%)</title><rect x="116.3" y="183" width="24.2" height="15.0" fill="rgb(124.031321269372,149.193305514282,149.193305514282)" rx="2" ry="2" />
<text  x="119.31" y="193.5" >P..</text>
</g>
<g >
<title>firedrake.utility_meshes.SquareMesh (51,849 us, 0.10%)</title><rect x="113.9" y="71" width="1.2" height="15.0" fill="rgb(150.171767415349,137.940154001831,150.171767415349)" rx="2" ry="2" />
<text  x="116.92" y="81.5" ></text>
</g>
<g >
<title>firedrake.mesh.MeshTopology._facets (20,429 us, 0.04%)</title><rect x="46.2" y="135" width="0.5" height="15.0" fill="rgb(131.534800443267,162.308288299933,131.534800443267)" rx="2" ry="2" />
<text  x="49.22" y="145.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.solve (47,902,148 us, 91.01%)</title><rect x="116.1" y="71" width="1073.9" height="15.0" fill="rgb(122.207394429602,122.207394429602,151.072398921858)" rx="2" ry="2" />
<text  x="119.10" y="81.5" >firedrake.variational_solver.NonlinearVariationalSolver.solve</text>
</g>
<g >
<title>CreateFunctionSpace (9,917 us, 0.02%)</title><rect x="45.3" y="103" width="0.2" height="15.0" fill="rgb(152.426522764257,115.270007859305,115.270007859305)" rx="2" ry="2" />
<text  x="48.30" y="113.5" ></text>
</g>
<g >
<title>ParLoopExecute (6,178,360 us, 11.74%)</title><rect x="1022.4" y="119" width="138.5" height="15.0" fill="rgb(132.367521066072,162.172729128779,132.367521066072)" rx="2" ry="2" />
<text  x="1025.38" y="129.5" >ParLoopExecute</text>
</g>
<g >
<title>CreateMesh (6,327 us, 0.01%)</title><rect x="114.2" y="119" width="0.1" height="15.0" fill="rgb(122.257748872221,122.257748872221,151.08214494301)" rx="2" ry="2" />
<text  x="117.20" y="129.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.__init__ (27,634 us, 0.05%)</title><rect x="115.5" y="71" width="0.6" height="15.0" fill="rgb(155.230626739089,136.768138333013,136.768138333013)" rx="2" ry="2" />
<text  x="118.49" y="81.5" ></text>
</g>
<g >
<title>CreateExtMesh (1,584,507 us, 3.01%)</title><rect x="10.0" y="71" width="35.5" height="15.0" fill="rgb(112.044068576632,112.044068576632,149.105303595477)" rx="2" ry="2" />
<text  x="13.00" y="81.5" >Cr..</text>
</g>
<g >
<title>Mesh: numbering (8,899 us, 0.02%)</title><rect x="46.9" y="87" width="0.2" height="15.0" fill="rgb(151.370197619415,151.370197619415,125.870957694086)" rx="2" ry="2" />
<text  x="49.90" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (51,398 us, 0.10%)</title><rect x="45.5" y="119" width="1.2" height="15.0" fill="rgb(148.282121371805,148.282121371805,110.905665109516)" rx="2" ry="2" />
<text  x="48.52" y="129.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.action (5,822 us, 0.01%)</title><rect x="115.1" y="87" width="0.1" height="15.0" fill="rgb(117.701594299554,117.701594299554,150.200308574107)" rx="2" ry="2" />
<text  x="118.08" y="97.5" ></text>
</g>
<g >
<title>firedrake.slate.slac.optimise.optimise (40,152 us, 0.08%)</title><rect x="396.4" y="167" width="0.9" height="15.0" fill="rgb(124.534246464305,163.447913366276,124.534246464305)" rx="2" ry="2" />
<text  x="399.36" y="177.5" ></text>
</g>
<g >
<title>Mesh: reorder (7,050 us, 0.01%)</title><rect x="47.1" y="87" width="0.2" height="15.0" fill="rgb(152.243002862739,152.243002862739,130.100706180968)" rx="2" ry="2" />
<text  x="50.10" y="97.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.LinearVariationalProblem.__init__ (17,874 us, 0.03%)</title><rect x="115.1" y="71" width="0.4" height="15.0" fill="rgb(126.006109463634,149.70528763872,149.70528763872)" rx="2" ry="2" />
<text  x="118.08" y="81.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (3,738,832 us, 7.10%)</title><rect x="1022.5" y="151" width="83.8" height="15.0" fill="rgb(137.009122904835,104.21087744364,137.009122904835)" rx="2" ry="2" />
<text  x="1025.52" y="161.5" >pyop2.gl..</text>
</g>
<g >
<title>KSPSolve (39,447,356 us, 74.95%)</title><rect x="116.1" y="103" width="884.4" height="15.0" fill="rgb(146.253748066396,159.912180547331,146.253748066396)" rx="2" ry="2" />
<text  x="119.10" y="113.5" >KSPSolve</text>
</g>
<g >
<title>SCForwardElim (39,447,356 us, 74.95%)</title><rect x="116.1" y="135" width="884.4" height="15.0" fill="rgb(142.622658624548,142.622658624548,155.023740378945)" rx="2" ry="2" />
<text  x="119.10" y="145.5" >SCForwardElim</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (1,513,099 us, 2.87%)</title><rect x="11.4" y="135" width="33.9" height="15.0" fill="rgb(153.519196531849,123.647173410843,123.647173410843)" rx="2" ry="2" />
<text  x="14.38" y="145.5" >py..</text>
</g>
<g >
<title>firedrake.mesh._from_cell_list (32,938 us, 0.06%)</title><rect x="114.3" y="103" width="0.8" height="15.0" fill="rgb(137.253070075367,137.253070075367,153.984465175878)" rx="2" ry="2" />
<text  x="117.35" y="113.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (8,420 us, 0.02%)</title><rect x="1001.7" y="167" width="0.2" height="15.0" fill="rgb(147.928990434522,147.928990434522,109.194338259606)" rx="2" ry="2" />
<text  x="1004.73" y="177.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (892,871 us, 1.70%)</title><rect x="1002.4" y="167" width="20.0" height="15.0" fill="rgb(143.295479788187,154.187716982123,154.187716982123)" rx="2" ry="2" />
<text  x="1005.37" y="177.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_pyop2_kernel_uniform_extrusion (1,513,099 us, 2.87%)</title><rect x="11.4" y="119" width="33.9" height="15.0" fill="rgb(126.484904542229,126.484904542229,151.900304104948)" rx="2" ry="2" />
<text  x="14.38" y="129.5" >Pa..</text>
</g>
<g >
<title>CreateMesh (26,089 us, 0.05%)</title><rect x="46.7" y="71" width="0.6" height="15.0" fill="rgb(132.248628454832,162.192083739911,132.248628454832)" rx="2" ry="2" />
<text  x="49.67" y="81.5" ></text>
</g>
<g >
<title>FunctionSpaceData: CreateElement (9,544 us, 0.02%)</title><rect x="46.0" y="135" width="0.2" height="15.0" fill="rgb(156.724465406257,148.22090144797,148.22090144797)" rx="2" ry="2" />
<text  x="49.00" y="145.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (9,917 us, 0.02%)</title><rect x="45.3" y="135" width="0.2" height="15.0" fill="rgb(148.218300170611,148.218300170611,110.596377749883)" rx="2" ry="2" />
<text  x="48.30" y="145.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_form0_cell_integral_otherwise (3,744,968 us, 7.11%)</title><rect x="1022.4" y="135" width="83.9" height="15.0" fill="rgb(142.975462414265,160.445854955817,142.975462414265)" rx="2" ry="2" />
<text  x="1025.38" y="145.5" >Parloop_..</text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (6,791 us, 0.01%)</title><rect x="1001.6" y="167" width="0.1" height="15.0" fill="rgb(152.571354144365,116.380381773463,116.380381773463)" rx="2" ry="2" />
<text  x="1004.57" y="177.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (51,398 us, 0.10%)</title><rect x="45.5" y="71" width="1.2" height="15.0" fill="rgb(114.362951167505,146.686691043427,146.686691043427)" rx="2" ry="2" />
<text  x="48.52" y="81.5" ></text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (26,906,133 us, 51.12%)</title><rect x="397.3" y="167" width="603.2" height="15.0" fill="rgb(152.202851517388,113.555194966642,113.555194966642)" rx="2" ry="2" />
<text  x="400.26" y="177.5" >firedrake.tsfc_interface.compile_form</text>
</g>
<g >
<title>firedrake.functionspace.MixedFunctionSpace (5,906 us, 0.01%)</title><rect x="1001.4" y="151" width="0.2" height="15.0" fill="rgb(115.979482168094,115.979482168094,149.866996548663)" rx="2" ry="2" />
<text  x="1004.44" y="161.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (1,081,229 us, 2.05%)</title><rect x="116.3" y="199" width="24.2" height="15.0" fill="rgb(129.076295012453,129.076295012453,152.401863550797)" rx="2" ry="2" />
<text  x="119.31" y="209.5" >P..</text>
</g>
<g >
<title>firedrake.__init__ (2,940,994 us, 5.59%)</title><rect x="48.0" y="71" width="65.9" height="15.0" fill="rgb(130.276131834677,150.812330475657,150.812330475657)" rx="2" ry="2" />
<text  x="50.99" y="81.5" >firedr..</text>
</g>
<g >
<title>CreateFunctionSpace (12,697 us, 0.02%)</title><rect x="1001.4" y="135" width="0.3" height="15.0" fill="rgb(129.543091683688,150.622283029104,150.622283029104)" rx="2" ry="2" />
<text  x="1004.44" y="145.5" ></text>
</g>
</g>
</svg>
