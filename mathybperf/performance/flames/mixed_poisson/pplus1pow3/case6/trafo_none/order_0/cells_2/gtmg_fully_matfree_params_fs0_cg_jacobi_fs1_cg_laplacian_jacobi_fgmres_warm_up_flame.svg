<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="283" onload="init(evt)" viewBox="0 0 1200 283" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:13px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:18px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 13 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (1 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="283.0" fill="url(#background)"  />
<text id="title" x="600.00" y="26" >Firedrake example</text>
<text id="details" x="10.00" y="265" > </text>
<text id="unzoom" x="10.00" y="26" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="26" >Search</text>
<text id="ignorecase" x="1174.00" y="26" >ic</text>
<text id="matched" x="1090.00" y="265" > </text>
<g id="frames">
<g >
<title>SNESFunctionEval (6,074,901 us, 51.69%)</title><rect x="580.1" y="103" width="609.9" height="15.0" fill="rgb(156.569547253491,147.033195610098,147.033195610098)" rx="2" ry="2" />
<text  x="583.11" y="113.5" >SNESFunctionEval</text>
</g>
<g >
<title>HybridInit (827,864 us, 7.04%)</title><rect x="497.0" y="119" width="83.1" height="15.0" fill="rgb(141.40277703318,141.40277703318,154.787634264486)" rx="2" ry="2" />
<text  x="500.00" y="129.5" >HybridInit</text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (26,802 us, 0.23%)</title><rect x="133.7" y="119" width="2.7" height="15.0" fill="rgb(148.445130952885,148.445130952885,111.695634617826)" rx="2" ry="2" />
<text  x="136.72" y="129.5" ></text>
</g>
<g >
<title>Log_Event_form0_cell_integral_otherwise (2,434 us, 0.02%)</title><rect x="580.6" y="151" width="0.2" height="15.0" fill="rgb(134.231029354876,151.83767427719,151.83767427719)" rx="2" ry="2" />
<text  x="583.58" y="161.5" ></text>
</g>
<g >
<title>PCSetUp (827,864 us, 7.04%)</title><rect x="497.0" y="103" width="83.1" height="15.0" fill="rgb(155.435900588634,138.341904512857,138.341904512857)" rx="2" ry="2" />
<text  x="500.00" y="113.5" >PCSetUp</text>
</g>
<g >
<title>Mesh: numbering (1,973 us, 0.02%)</title><rect x="136.6" y="87" width="0.2" height="15.0" fill="rgb(155.545928277231,139.185450125437,139.185450125437)" rx="2" ry="2" />
<text  x="139.61" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (2,053 us, 0.02%)</title><rect x="501.9" y="199" width="0.2" height="15.0" fill="rgb(145.705007538498,160.00151040071,145.705007538498)" rx="2" ry="2" />
<text  x="504.93" y="209.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (26,802 us, 0.23%)</title><rect x="133.7" y="87" width="2.7" height="15.0" fill="rgb(145.273060403402,145.273060403402,155.5367213684)" rx="2" ry="2" />
<text  x="136.72" y="97.5" ></text>
</g>
<g >
<title>firedrake.__init__ (2,464,803 us, 20.97%)</title><rect x="136.8" y="71" width="247.5" height="15.0" fill="rgb(140.393961333146,140.393961333146,154.592379612867)" rx="2" ry="2" />
<text  x="139.81" y="81.5" >firedrake.__init__</text>
</g>
<g >
<title>firedrake.utility_meshes.RectangleMesh (10,200 us, 0.09%)</title><rect x="384.4" y="87" width="1.1" height="15.0" fill="rgb(144.988767804961,160.118107566634,144.988767804961)" rx="2" ry="2" />
<text  x="387.44" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (1,533 us, 0.01%)</title><rect x="500.2" y="199" width="0.2" height="15.0" fill="rgb(146.569163394683,159.860833865982,146.569163394683)" rx="2" ry="2" />
<text  x="503.20" y="209.5" ></text>
</g>
<g >
<title>firedrake.mesh.MeshTopology._facets (3,639 us, 0.03%)</title><rect x="136.0" y="135" width="0.4" height="15.0" fill="rgb(128.901788264166,162.736918189554,128.901788264166)" rx="2" ry="2" />
<text  x="139.05" y="145.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (947,599 us, 8.06%)</title><rect x="389.4" y="199" width="95.2" height="15.0" fill="rgb(152.276452725298,114.119470893952,114.119470893952)" rx="2" ry="2" />
<text  x="392.42" y="209.5" >Parloop_Ce..</text>
</g>
<g >
<title>ParLoopExecute (947,599 us, 8.06%)</title><rect x="389.4" y="183" width="95.2" height="15.0" fill="rgb(149.228909332442,135.524080164383,149.228909332442)" rx="2" ry="2" />
<text  x="392.42" y="193.5" >ParLoopExe..</text>
</g>
<g >
<title>firedrake.variational_solver.LinearVariationalProblem.__init__ (15,809 us, 0.13%)</title><rect x="385.5" y="71" width="1.6" height="15.0" fill="rgb(124.146892587746,124.146892587746,151.447785662144)" rx="2" ry="2" />
<text  x="388.47" y="81.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_form0_cell_integral_otherwise (2,718,859 us, 23.13%)</title><rect x="580.6" y="135" width="272.9" height="15.0" fill="rgb(128.818902116754,162.750411283319,128.818902116754)" rx="2" ry="2" />
<text  x="583.58" y="145.5" >Parloop_Cells_wrap_form0_cell_int..</text>
</g>
<g >
<title>firedrake.ufl_expr.action (4,592 us, 0.04%)</title><rect x="388.0" y="119" width="0.5" height="15.0" fill="rgb(134.237053317232,97.1074491254079,134.237053317232)" rx="2" ry="2" />
<text  x="391.04" y="129.5" ></text>
</g>
<g >
<title>HybridBreak (953,723 us, 8.11%)</title><rect x="388.8" y="151" width="95.8" height="15.0" fill="rgb(149.884380357669,159.321147383635,149.884380357669)" rx="2" ry="2" />
<text  x="391.81" y="161.5" >HybridBreak</text>
</g>
<g >
<title>all (11,753,656 us, 100%)</title><rect x="10.0" y="39" width="1180.0" height="15.0" fill="rgb(154.487574713337,131.071406135582,131.071406135582)" rx="2" ry="2" />
<text  x="13.00" y="49.5" ></text>
</g>
<g >
<title>CreateExtMesh (1,230,824 us, 10.47%)</title><rect x="10.0" y="71" width="123.6" height="15.0" fill="rgb(124.21109498474,163.500519421089,124.21109498474)" rx="2" ry="2" />
<text  x="13.00" y="81.5" >CreateExtMesh</text>
</g>
<g >
<title>SNESSolve (7,980,477 us, 67.90%)</title><rect x="388.8" y="87" width="801.2" height="15.0" fill="rgb(140.66532775565,153.505825714428,153.505825714428)" rx="2" ry="2" />
<text  x="391.81" y="97.5" >SNESSolve</text>
</g>
<g >
<title>Parloop_Cells_wrap_form1_cell_integral_otherwise (2,352,015 us, 20.01%)</title><rect x="853.5" y="135" width="236.2" height="15.0" fill="rgb(131.296888378562,162.347018170932,131.296888378562)" rx="2" ry="2" />
<text  x="856.53" y="145.5" >Parloop_Cells_wrap_form1_cel..</text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (758,250 us, 6.45%)</title><rect x="503.8" y="167" width="76.1" height="15.0" fill="rgb(155.712040069934,140.458973869498,140.458973869498)" rx="2" ry="2" />
<text  x="506.78" y="177.5" >Parloop..</text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (1,533 us, 0.01%)</title><rect x="500.2" y="215" width="0.2" height="15.0" fill="rgb(129.923292000112,129.923292000112,152.565798451635)" rx="2" ry="2" />
<text  x="503.20" y="225.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (9,341 us, 0.08%)</title><rect x="386.1" y="103" width="1.0" height="15.0" fill="rgb(104.19294757468,144.050023445287,144.050023445287)" rx="2" ry="2" />
<text  x="389.12" y="113.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (10,497 us, 0.09%)</title><rect x="501.1" y="151" width="1.0" height="15.0" fill="rgb(124.108964783927,124.108964783927,151.440444796889)" rx="2" ry="2" />
<text  x="504.08" y="161.5" ></text>
</g>
<g >
<title>KSPSolve (1,077,712 us, 9.17%)</title><rect x="388.8" y="103" width="108.2" height="15.0" fill="rgb(109.165696115005,145.339254548335,145.339254548335)" rx="2" ry="2" />
<text  x="391.81" y="113.5" >KSPSolve</text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (2,116 us, 0.02%)</title><rect x="579.9" y="135" width="0.2" height="15.0" fill="rgb(140.768430872332,160.805139160318,140.768430872332)" rx="2" ry="2" />
<text  x="582.90" y="145.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (758,250 us, 6.45%)</title><rect x="503.8" y="183" width="76.1" height="15.0" fill="rgb(124.234478143639,124.234478143639,151.46473770522)" rx="2" ry="2" />
<text  x="506.78" y="193.5" >pyop2.g..</text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (6,988 us, 0.06%)</title><rect x="132.9" y="151" width="0.7" height="15.0" fill="rgb(149.035200236881,149.035200236881,114.555201147964)" rx="2" ry="2" />
<text  x="135.87" y="161.5" ></text>
</g>
<g >
<title>firedrake.interpolation.make_interpolator (11,248 us, 0.10%)</title><rect x="502.1" y="135" width="1.2" height="15.0" fill="rgb(106.621455272212,144.679636552055,144.679636552055)" rx="2" ry="2" />
<text  x="505.13" y="145.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (5,147 us, 0.04%)</title><rect x="500.4" y="183" width="0.5" height="15.0" fill="rgb(155.35828716557,137.74686826937,137.74686826937)" rx="2" ry="2" />
<text  x="503.35" y="193.5" ></text>
</g>
<g >
<title>firedrake.assemble.allocate_matrix (10,470 us, 0.09%)</title><rect x="387.8" y="87" width="1.0" height="15.0" fill="rgb(131.390905508863,131.390905508863,152.849852679135)" rx="2" ry="2" />
<text  x="390.75" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspace.MixedFunctionSpace (1,533 us, 0.01%)</title><rect x="500.2" y="151" width="0.2" height="15.0" fill="rgb(147.680090054403,147.680090054403,107.988128725182)" rx="2" ry="2" />
<text  x="503.20" y="161.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (3,788 us, 0.03%)</title><rect x="1189.6" y="151" width="0.4" height="15.0" fill="rgb(125.676837670192,149.619920877457,149.619920877457)" rx="2" ry="2" />
<text  x="1192.62" y="161.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (2,352,015 us, 20.01%)</title><rect x="853.5" y="151" width="236.2" height="15.0" fill="rgb(148.343369428882,148.343369428882,111.202482616892)" rx="2" ry="2" />
<text  x="856.53" y="161.5" >pyop2.global_kernel.GlobalKe..</text>
</g>
<g >
<title>firedrake.parloops.par_loop (763,380 us, 6.49%)</title><rect x="503.3" y="135" width="76.6" height="15.0" fill="rgb(141.359887285849,153.685896703739,153.685896703739)" rx="2" ry="2" />
<text  x="506.26" y="145.5" >firedra..</text>
</g>
<g >
<title>ParLoopExecute (758,250 us, 6.45%)</title><rect x="503.8" y="151" width="76.1" height="15.0" fill="rgb(155.381972272857,155.381972272857,145.312634860769)" rx="2" ry="2" />
<text  x="506.78" y="161.5" >ParLoop..</text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (1,533 us, 0.01%)</title><rect x="500.2" y="183" width="0.2" height="15.0" fill="rgb(150.374678686474,150.374678686474,121.046519788295)" rx="2" ry="2" />
<text  x="503.20" y="193.5" ></text>
</g>
<g >
<title>firedrake.functionspace.VectorFunctionSpace (6,988 us, 0.06%)</title><rect x="132.9" y="87" width="0.7" height="15.0" fill="rgb(143.98429994509,160.281625590334,143.98429994509)" rx="2" ry="2" />
<text  x="135.87" y="97.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (1,533 us, 0.01%)</title><rect x="500.2" y="167" width="0.2" height="15.0" fill="rgb(126.857386472283,126.857386472283,151.972397381732)" rx="2" ry="2" />
<text  x="503.20" y="177.5" ></text>
</g>
<g >
<title>HybridRHS (123,989 us, 1.05%)</title><rect x="484.6" y="151" width="12.4" height="15.0" fill="rgb(119.114267436573,119.114267436573,150.473729181272)" rx="2" ry="2" />
<text  x="487.55" y="161.5" ></text>
</g>
<g >
<title>ParLoopExecute (5,070,874 us, 43.14%)</title><rect x="580.6" y="119" width="509.1" height="15.0" fill="rgb(123.533066108193,149.064128250272,149.064128250272)" rx="2" ry="2" />
<text  x="583.58" y="129.5" >ParLoopExecute</text>
</g>
<g >
<title>CreateFunctionSpace (1,493 us, 0.01%)</title><rect x="496.9" y="183" width="0.1" height="15.0" fill="rgb(149.544598660087,159.376460683242,149.544598660087)" rx="2" ry="2" />
<text  x="499.85" y="193.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.solve (7,980,477 us, 67.90%)</title><rect x="388.8" y="71" width="801.2" height="15.0" fill="rgb(153.874001545838,126.367345184762,126.367345184762)" rx="2" ry="2" />
<text  x="391.81" y="81.5" >firedrake.variational_solver.NonlinearVariationalSolver.solve</text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (7,388 us, 0.06%)</title><rect x="501.4" y="167" width="0.7" height="15.0" fill="rgb(114.51437116243,146.725948079149,146.725948079149)" rx="2" ry="2" />
<text  x="504.39" y="177.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (2,053 us, 0.02%)</title><rect x="501.9" y="231" width="0.2" height="15.0" fill="rgb(154.422364129957,130.571458329673,130.571458329673)" rx="2" ry="2" />
<text  x="504.93" y="241.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (6,988 us, 0.06%)</title><rect x="132.9" y="135" width="0.7" height="15.0" fill="rgb(137.117450379217,152.586005653871,152.586005653871)" rx="2" ry="2" />
<text  x="135.87" y="145.5" ></text>
</g>
<g >
<title>firedrake.slate.slac.optimise.optimise (14,921 us, 0.13%)</title><rect x="495.5" y="167" width="1.5" height="15.0" fill="rgb(144.119078460121,154.401242563735,154.401242563735)" rx="2" ry="2" />
<text  x="498.50" y="177.5" ></text>
</g>
<g >
<title>FunctionSpaceData: CreateElement (10,928 us, 0.09%)</title><rect x="135.0" y="135" width="1.0" height="15.0" fill="rgb(142.036307695569,142.036307695569,154.910253102368)" rx="2" ry="2" />
<text  x="137.95" y="145.5" ></text>
</g>
<g >
<title>CreateMesh (1,567 us, 0.01%)</title><rect x="384.9" y="103" width="0.1" height="15.0" fill="rgb(150.661446901345,150.661446901345,122.436242675749)" rx="2" ry="2" />
<text  x="387.88" y="113.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (5,147 us, 0.04%)</title><rect x="500.4" y="167" width="0.5" height="15.0" fill="rgb(131.400789636183,162.330104012714,131.400789636183)" rx="2" ry="2" />
<text  x="503.35" y="177.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (6,588 us, 0.06%)</title><rect x="1189.3" y="135" width="0.7" height="15.0" fill="rgb(128.125977760927,150.254883123203,150.254883123203)" rx="2" ry="2" />
<text  x="1192.34" y="145.5" ></text>
</g>
<g >
<title>FunctionSpaceData: CreateElement (5,147 us, 0.04%)</title><rect x="500.4" y="199" width="0.5" height="15.0" fill="rgb(156.597528133097,147.247715687074,147.247715687074)" rx="2" ry="2" />
<text  x="503.35" y="209.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (6,680 us, 0.06%)</title><rect x="500.2" y="135" width="0.7" height="15.0" fill="rgb(153.701474213791,153.701474213791,137.168682728372)" rx="2" ry="2" />
<text  x="503.20" y="145.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (28,344 us, 0.24%)</title><rect x="133.6" y="71" width="2.8" height="15.0" fill="rgb(129.529926515143,162.634663125442,129.529926515143)" rx="2" ry="2" />
<text  x="136.57" y="81.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (26,802 us, 0.23%)</title><rect x="133.7" y="103" width="2.7" height="15.0" fill="rgb(156.270147173317,144.737794995428,144.737794995428)" rx="2" ry="2" />
<text  x="136.72" y="113.5" ></text>
</g>
<g >
<title>SCForwardElim (1,077,712 us, 9.17%)</title><rect x="388.8" y="135" width="108.2" height="15.0" fill="rgb(155.295125925952,137.262632098963,137.262632098963)" rx="2" ry="2" />
<text  x="391.81" y="145.5" >SCForwardElim</text>
</g>
<g >
<title>firedrake.matrix_free.operators.ImplicitMatrixContext.__init__ (7,612 us, 0.06%)</title><rect x="388.0" y="103" width="0.8" height="15.0" fill="rgb(147.08808224591,130.038210755144,147.08808224591)" rx="2" ry="2" />
<text  x="391.04" y="113.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalProblem.__init__ (10,859 us, 0.09%)</title><rect x="386.0" y="87" width="1.1" height="15.0" fill="rgb(130.689272221445,162.445932429067,130.689272221445)" rx="2" ry="2" />
<text  x="388.96" y="97.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (2,716,425 us, 23.11%)</title><rect x="580.8" y="151" width="272.7" height="15.0" fill="rgb(154.296553539546,154.296553539546,140.052528691645)" rx="2" ry="2" />
<text  x="583.82" y="161.5" >pyop2.global_kernel.GlobalKernel...</text>
</g>
<g >
<title>firedrake (11,753,656 us, 100.00%)</title><rect x="10.0" y="55" width="1180.0" height="15.0" fill="rgb(141.492616204202,115.699829023268,141.492616204202)" rx="2" ry="2" />
<text  x="13.00" y="65.5" >firedrake</text>
</g>
<g >
<title>Parloop_Cells_wrap_pyop2_kernel_uniform_extrusion (1,170,544 us, 9.96%)</title><rect x="15.4" y="119" width="117.5" height="15.0" fill="rgb(149.111153733297,149.111153733297,114.923283476748)" rx="2" ry="2" />
<text  x="18.35" y="129.5" >Parloop_Cells..</text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (2,053 us, 0.02%)</title><rect x="501.9" y="215" width="0.2" height="15.0" fill="rgb(156.683864821703,147.909630299719,147.909630299719)" rx="2" ry="2" />
<text  x="504.93" y="225.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (3,020 us, 0.03%)</title><rect x="388.5" y="119" width="0.3" height="15.0" fill="rgb(133.873647693964,161.927545724238,133.873647693964)" rx="2" ry="2" />
<text  x="391.50" y="129.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (1,170,544 us, 9.96%)</title><rect x="15.4" y="135" width="117.5" height="15.0" fill="rgb(148.803834920152,159.497050129278,148.803834920152)" rx="2" ry="2" />
<text  x="18.35" y="145.5" >pyop2.global_..</text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (12,590 us, 0.11%)</title><rect x="500.9" y="135" width="1.2" height="15.0" fill="rgb(118.92743395228,118.92743395228,150.437567861732)" rx="2" ry="2" />
<text  x="503.87" y="145.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (6,988 us, 0.06%)</title><rect x="132.9" y="103" width="0.7" height="15.0" fill="rgb(152.662637030552,117.080217234229,117.080217234229)" rx="2" ry="2" />
<text  x="135.87" y="113.5" ></text>
</g>
<g >
<title>firedrake.parloops.par_loop (953,723 us, 8.11%)</title><rect x="388.8" y="167" width="95.8" height="15.0" fill="rgb(138.46303025671,138.46303025671,154.218651017428)" rx="2" ry="2" />
<text  x="391.81" y="177.5" >firedrake...</text>
</g>
<g >
<title>CreateMesh (3,953 us, 0.03%)</title><rect x="136.4" y="71" width="0.4" height="15.0" fill="rgb(135.030652034908,161.739196180364,135.030652034908)" rx="2" ry="2" />
<text  x="139.41" y="81.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.action (4,950 us, 0.04%)</title><rect x="385.5" y="87" width="0.5" height="15.0" fill="rgb(154.107896475785,154.107896475785,139.138267536495)" rx="2" ry="2" />
<text  x="388.47" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (5,147 us, 0.04%)</title><rect x="500.4" y="151" width="0.5" height="15.0" fill="rgb(133.706450066607,161.954763942645,133.706450066607)" rx="2" ry="2" />
<text  x="503.35" y="161.5" ></text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (999,430 us, 8.50%)</title><rect x="1089.7" y="119" width="100.3" height="15.0" fill="rgb(112.592295725208,146.227632225054,146.227632225054)" rx="2" ry="2" />
<text  x="1092.66" y="129.5" >firedrake.t..</text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (6,988 us, 0.06%)</title><rect x="132.9" y="119" width="0.7" height="15.0" fill="rgb(139.985309960843,160.932623959863,139.985309960843)" rx="2" ry="2" />
<text  x="135.87" y="129.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (947,599 us, 8.06%)</title><rect x="389.4" y="215" width="95.2" height="15.0" fill="rgb(153.948414334423,126.937843230575,126.937843230575)" rx="2" ry="2" />
<text  x="392.42" y="225.5" >pyop2.glob..</text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (1,384 us, 0.01%)</title><rect x="1189.9" y="167" width="0.1" height="15.0" fill="rgb(153.740069377399,153.740069377399,137.355720828934)" rx="2" ry="2" />
<text  x="1192.86" y="177.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.__init__ (17,455 us, 0.15%)</title><rect x="387.1" y="71" width="1.7" height="15.0" fill="rgb(140.723620622947,160.812433852078,140.723620622947)" rx="2" ry="2" />
<text  x="390.05" y="81.5" ></text>
</g>
<g >
<title>PCApply (1,077,712 us, 9.17%)</title><rect x="388.8" y="119" width="108.2" height="15.0" fill="rgb(156.529807930034,146.728527463591,146.728527463591)" rx="2" ry="2" />
<text  x="391.81" y="129.5" >PCApply</text>
</g>
<g >
<title>ParLoopExecute (1,170,544 us, 9.96%)</title><rect x="15.4" y="103" width="117.5" height="15.0" fill="rgb(118.60680562855,147.786949607402,147.786949607402)" rx="2" ry="2" />
<text  x="18.35" y="113.5" >ParLoopExecute</text>
</g>
<g >
<title>firedrake.functionspace.MixedFunctionSpace (1,791 us, 0.02%)</title><rect x="384.3" y="71" width="0.1" height="15.0" fill="rgb(151.818424021676,151.818424021676,128.043131797355)" rx="2" ry="2" />
<text  x="387.26" y="81.5" ></text>
</g>
<g >
<title>firedrake.utility_meshes.SquareMesh (10,200 us, 0.09%)</title><rect x="384.4" y="71" width="1.1" height="15.0" fill="rgb(148.026041711071,148.026041711071,156.069556460207)" rx="2" ry="2" />
<text  x="387.44" y="81.5" ></text>
</g>
<g >
<title>firedrake.mesh._from_cell_list (4,317 us, 0.04%)</title><rect x="385.0" y="103" width="0.5" height="15.0" fill="rgb(154.223975638619,154.223975638619,139.700805017922)" rx="2" ry="2" />
<text  x="388.03" y="113.5" ></text>
</g>
<g >
<title>CreateMesh (1,567 us, 0.01%)</title><rect x="384.9" y="119" width="0.1" height="15.0" fill="rgb(151.550787582958,151.550787582958,126.746124440488)" rx="2" ry="2" />
<text  x="387.88" y="129.5" ></text>
</g>
<g >
<title>firedrake.extrusion_utils.make_extruded_coords (1,221,296 us, 10.39%)</title><rect x="10.3" y="87" width="122.6" height="15.0" fill="rgb(116.931988686999,147.35273780774,147.35273780774)" rx="2" ry="2" />
<text  x="13.26" y="97.5" >firedrake.ext..</text>
</g>
<g >
<title>CreateFunctionSpace (4,978 us, 0.04%)</title><rect x="501.6" y="183" width="0.5" height="15.0" fill="rgb(145.875697229114,159.973723706888,145.875697229114)" rx="2" ry="2" />
<text  x="504.63" y="193.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (1,384 us, 0.01%)</title><rect x="1189.9" y="183" width="0.1" height="15.0" fill="rgb(137.258812210797,104.850706290167,137.258812210797)" rx="2" ry="2" />
<text  x="1192.86" y="193.5" ></text>
</g>
</g>
</svg>
