<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="267" onload="init(evt)" viewBox="0 0 1200 267" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:13px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:18px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 13 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (1 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="267.0" fill="url(#background)"  />
<text id="title" x="600.00" y="26" >Firedrake example</text>
<text id="details" x="10.00" y="249" > </text>
<text id="unzoom" x="10.00" y="26" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="26" >Search</text>
<text id="ignorecase" x="1174.00" y="26" >ic</text>
<text id="matched" x="1090.00" y="249" > </text>
<g id="frames">
<g >
<title>ParLoopExecute (1,388,815 us, 2.04%)</title><rect x="146.2" y="183" width="24.1" height="15.0" fill="rgb(147.569976191451,131.273063990592,147.569976191451)" rx="2" ry="2" />
<text  x="149.18" y="193.5" >P..</text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (14,249 us, 0.02%)</title><rect x="55.8" y="151" width="0.3" height="15.0" fill="rgb(130.19364045772,130.19364045772,152.618123959559)" rx="2" ry="2" />
<text  x="58.83" y="161.5" ></text>
</g>
<g >
<title>firedrake.utility_meshes.SquareMesh (64,583 us, 0.10%)</title><rect x="142.6" y="71" width="1.1" height="15.0" fill="rgb(156.67733866934,147.859596464942,147.859596464942)" rx="2" ry="2" />
<text  x="145.62" y="81.5" ></text>
</g>
<g >
<title>firedrake.parloops.par_loop (1,029,196 us, 1.51%)</title><rect x="995.9" y="135" width="17.9" height="15.0" fill="rgb(132.865386540807,162.091681260799,132.865386540807)" rx="2" ry="2" />
<text  x="998.90" y="145.5" ></text>
</g>
<g >
<title>firedrake.mesh._from_cell_list (45,192 us, 0.07%)</title><rect x="143.0" y="103" width="0.7" height="15.0" fill="rgb(155.901460400524,141.911196404015,141.911196404015)" rx="2" ry="2" />
<text  x="145.96" y="113.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (13,772 us, 0.02%)</title><rect x="995.4" y="135" width="0.2" height="15.0" fill="rgb(148.215860369333,148.215860369333,110.584554097538)" rx="2" ry="2" />
<text  x="998.36" y="145.5" ></text>
</g>
<g >
<title>CreateMesh (8,518 us, 0.01%)</title><rect x="142.8" y="103" width="0.2" height="15.0" fill="rgb(136.214858748614,161.546418343249,136.214858748614)" rx="2" ry="2" />
<text  x="145.81" y="113.5" ></text>
</g>
<g >
<title>DMPlexBuFrCeLi (13,353 us, 0.02%)</title><rect x="143.2" y="119" width="0.3" height="15.0" fill="rgb(124.664483709995,124.664483709995,151.547964589031)" rx="2" ry="2" />
<text  x="146.24" y="129.5" ></text>
</g>
<g >
<title>PCApply (48,860,814 us, 71.88%)</title><rect x="145.9" y="119" width="848.2" height="15.0" fill="rgb(154.429650799965,130.627322799731,130.627322799731)" rx="2" ry="2" />
<text  x="148.87" y="129.5" >PCApply</text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (7,324 us, 0.01%)</title><rect x="995.2" y="167" width="0.2" height="15.0" fill="rgb(147.70847561286,159.675364435116,147.70847561286)" rx="2" ry="2" />
<text  x="998.23" y="177.5" ></text>
</g>
<g >
<title>firedrake.utility_meshes.RectangleMesh (64,583 us, 0.10%)</title><rect x="142.6" y="87" width="1.1" height="15.0" fill="rgb(149.315464918648,149.315464918648,115.913406913446)" rx="2" ry="2" />
<text  x="145.62" y="97.5" ></text>
</g>
<g >
<title>ParLoopExecute (8,303,983 us, 12.22%)</title><rect x="1013.8" y="119" width="144.1" height="15.0" fill="rgb(115.869925644313,115.869925644313,149.84579206019)" rx="2" ry="2" />
<text  x="1016.76" y="129.5" >ParLoopExecute</text>
</g>
<g >
<title>firedrake.assemble.allocate_matrix (34,386 us, 0.05%)</title><rect x="145.3" y="87" width="0.6" height="15.0" fill="rgb(152.156012259368,152.156012259368,129.679136333861)" rx="2" ry="2" />
<text  x="148.27" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (7,324 us, 0.01%)</title><rect x="995.2" y="183" width="0.2" height="15.0" fill="rgb(152.54008665953,116.140664389731,116.140664389731)" rx="2" ry="2" />
<text  x="998.23" y="193.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (7,324 us, 0.01%)</title><rect x="995.2" y="135" width="0.2" height="15.0" fill="rgb(147.646351330149,159.685477690441,147.646351330149)" rx="2" ry="2" />
<text  x="998.23" y="145.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (8,154 us, 0.01%)</title><rect x="1189.9" y="151" width="0.1" height="15.0" fill="rgb(144.302865462639,160.229766087477,144.302865462639)" rx="2" ry="2" />
<text  x="1192.86" y="161.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (25,772 us, 0.04%)</title><rect x="143.9" y="103" width="0.5" height="15.0" fill="rgb(114.85960764122,146.815453832909,146.815453832909)" rx="2" ry="2" />
<text  x="146.91" y="113.5" ></text>
</g>
<g >
<title>SCForwardElim (48,860,814 us, 71.88%)</title><rect x="145.9" y="135" width="848.2" height="15.0" fill="rgb(127.00104963368,149.963235090213,149.963235090213)" rx="2" ry="2" />
<text  x="148.87" y="145.5" >SCForwardElim</text>
</g>
<g >
<title>all (67,975,435 us, 100%)</title><rect x="10.0" y="39" width="1180.0" height="15.0" fill="rgb(150.294969451334,150.294969451334,120.66023657185)" rx="2" ry="2" />
<text  x="13.00" y="49.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.action (12,690 us, 0.02%)</title><rect x="145.6" y="119" width="0.3" height="15.0" fill="rgb(141.350790383887,153.683538247674,153.683538247674)" rx="2" ry="2" />
<text  x="148.65" y="129.5" ></text>
</g>
<g >
<title>CreateMesh (35,520 us, 0.05%)</title><rect x="57.3" y="71" width="0.6" height="15.0" fill="rgb(136.596042341324,136.596042341324,153.857298517676)" rx="2" ry="2" />
<text  x="60.28" y="81.5" ></text>
</g>
<g >
<title>ParLoopExecute (2,555,876 us, 3.76%)</title><rect x="11.5" y="103" width="44.3" height="15.0" fill="rgb(131.617864890992,162.294766180536,131.617864890992)" rx="2" ry="2" />
<text  x="14.46" y="113.5" >Par..</text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (1,029,196 us, 1.51%)</title><rect x="995.9" y="167" width="17.9" height="15.0" fill="rgb(139.125492332337,161.07259427148,139.125492332337)" rx="2" ry="2" />
<text  x="998.90" y="177.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (14,249 us, 0.02%)</title><rect x="55.8" y="135" width="0.3" height="15.0" fill="rgb(153.548464048075,123.871557701908,123.871557701908)" rx="2" ry="2" />
<text  x="58.83" y="145.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalProblem.__init__ (25,772 us, 0.04%)</title><rect x="143.9" y="87" width="0.5" height="15.0" fill="rgb(152.197359331038,113.513088204623,113.513088204623)" rx="2" ry="2" />
<text  x="146.91" y="97.5" ></text>
</g>
<g >
<title>firedrake.slate.slac.optimise.optimise (62,245 us, 0.09%)</title><rect x="396.2" y="167" width="1.1" height="15.0" fill="rgb(122.9712559625,148.918473768055,148.918473768055)" rx="2" ry="2" />
<text  x="399.17" y="177.5" ></text>
</g>
<g >
<title>CreateExtMesh (2,654,281 us, 3.90%)</title><rect x="10.0" y="71" width="46.1" height="15.0" fill="rgb(149.498755874088,159.383923462358,149.498755874088)" rx="2" ry="2" />
<text  x="13.00" y="81.5" >Crea..</text>
</g>
<g >
<title>HybridBreak (1,406,915 us, 2.07%)</title><rect x="145.9" y="151" width="24.4" height="15.0" fill="rgb(148.156734947092,148.156734947092,110.298023205136)" rx="2" ry="2" />
<text  x="148.87" y="161.5" >H..</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (1,029,196 us, 1.51%)</title><rect x="995.9" y="183" width="17.9" height="15.0" fill="rgb(148.401129095901,148.401129095901,111.482394849366)" rx="2" ry="2" />
<text  x="998.90" y="193.5" ></text>
</g>
<g >
<title>ParLoopExecute (1,029,196 us, 1.51%)</title><rect x="995.9" y="151" width="17.9" height="15.0" fill="rgb(121.967477204938,148.65823483091,148.65823483091)" rx="2" ry="2" />
<text  x="998.90" y="161.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (13,772 us, 0.02%)</title><rect x="995.4" y="151" width="0.2" height="15.0" fill="rgb(143.101090904666,160.425403806217,143.101090904666)" rx="2" ry="2" />
<text  x="998.36" y="161.5" ></text>
</g>
<g >
<title>KSPSolve (48,860,814 us, 71.88%)</title><rect x="145.9" y="103" width="848.2" height="15.0" fill="rgb(119.571969659696,148.03717731918,148.03717731918)" rx="2" ry="2" />
<text  x="148.87" y="113.5" >KSPSolve</text>
</g>
<g >
<title>PetscBarrier (37,124 us, 0.05%)</title><rect x="57.9" y="71" width="0.6" height="15.0" fill="rgb(117.114289061196,147.400000867717,147.400000867717)" rx="2" ry="2" />
<text  x="60.90" y="81.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.action (9,247 us, 0.01%)</title><rect x="143.7" y="87" width="0.2" height="15.0" fill="rgb(152.646074645067,116.95323894551,116.95323894551)" rx="2" ry="2" />
<text  x="146.75" y="97.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_form1_cell_integral_otherwise (2,831,335 us, 4.17%)</title><rect x="1108.8" y="135" width="49.1" height="15.0" fill="rgb(155.039881170672,155.039881170672,143.654808750178)" rx="2" ry="2" />
<text  x="1111.76" y="145.5" >Parl..</text>
</g>
<g >
<title>firedrake.interpolation.make_interpolator (17,129 us, 0.03%)</title><rect x="995.6" y="135" width="0.3" height="15.0" fill="rgb(110.951326541267,110.951326541267,148.893805137019)" rx="2" ry="2" />
<text  x="998.60" y="145.5" ></text>
</g>
<g >
<title>SNESFunctionEval (10,152,313 us, 14.94%)</title><rect x="1013.8" y="103" width="176.2" height="15.0" fill="rgb(156.631572239893,147.50872050585,147.50872050585)" rx="2" ry="2" />
<text  x="1016.76" y="113.5" >SNESFunctionEval</text>
</g>
<g >
<title>firedrake.matrix_free.operators.ImplicitMatrixContext.__init__ (20,341 us, 0.03%)</title><rect x="145.5" y="103" width="0.4" height="15.0" fill="rgb(116.992100621659,147.368322383393,147.368322383393)" rx="2" ry="2" />
<text  x="148.51" y="113.5" ></text>
</g>
<g >
<title>Mesh: reorder (7,602 us, 0.01%)</title><rect x="57.8" y="87" width="0.1" height="15.0" fill="rgb(135.859411227057,135.859411227057,153.714724753624)" rx="2" ry="2" />
<text  x="60.77" y="97.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.solve (60,148,590 us, 88.49%)</title><rect x="145.9" y="71" width="1044.1" height="15.0" fill="rgb(135.479583050819,100.291431567725,135.479583050819)" rx="2" ry="2" />
<text  x="148.87" y="81.5" >firedrake.variational_solver.NonlinearVariationalSolver.solve</text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (1,388,815 us, 2.04%)</title><rect x="146.2" y="199" width="24.1" height="15.0" fill="rgb(151.123733538166,151.123733538166,124.676554838802)" rx="2" ry="2" />
<text  x="149.18" y="209.5" >P..</text>
</g>
<g >
<title>CreateMesh (8,518 us, 0.01%)</title><rect x="142.8" y="119" width="0.2" height="15.0" fill="rgb(153.064294929813,120.159594461902,120.159594461902)" rx="2" ry="2" />
<text  x="145.81" y="129.5" ></text>
</g>
<g >
<title>firedrake (67,975,435 us, 100.00%)</title><rect x="10.0" y="55" width="1180.0" height="15.0" fill="rgb(143.45079390591,120.717659383894,143.45079390591)" rx="2" ry="2" />
<text  x="13.00" y="65.5" >firedrake</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (5,463,172 us, 8.04%)</title><rect x="1013.9" y="151" width="94.9" height="15.0" fill="rgb(109.324212988175,109.324212988175,148.578879933195)" rx="2" ry="2" />
<text  x="1016.93" y="161.5" >pyop2.glob..</text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (1,848,330 us, 2.72%)</title><rect x="1157.9" y="119" width="32.1" height="15.0" fill="rgb(140.481728313734,113.109428803944,140.481728313734)" rx="2" ry="2" />
<text  x="1160.91" y="129.5" >fi..</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (1,388,815 us, 2.04%)</title><rect x="146.2" y="215" width="24.1" height="15.0" fill="rgb(152.77821538926,117.966317984327,117.966317984327)" rx="2" ry="2" />
<text  x="149.18" y="225.5" >p..</text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (7,324 us, 0.01%)</title><rect x="995.2" y="151" width="0.2" height="15.0" fill="rgb(154.808733060125,133.533620127623,133.533620127623)" rx="2" ry="2" />
<text  x="998.23" y="161.5" ></text>
</g>
<g >
<title>PCSetUp (1,135,463 us, 1.67%)</title><rect x="994.1" y="103" width="19.7" height="15.0" fill="rgb(155.002043756055,155.002043756055,143.471442817806)" rx="2" ry="2" />
<text  x="997.05" y="113.5" ></text>
</g>
<g >
<title>DMPlexInterp (16,008 us, 0.02%)</title><rect x="143.5" y="119" width="0.2" height="15.0" fill="rgb(153.869260927562,126.331000444641,126.331000444641)" rx="2" ry="2" />
<text  x="146.47" y="129.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.__init__ (87,245 us, 0.13%)</title><rect x="144.4" y="71" width="1.5" height="15.0" fill="rgb(150.146962610134,150.146962610134,119.94297264911)" rx="2" ry="2" />
<text  x="147.35" y="81.5" ></text>
</g>
<g >
<title>SNESSolve (60,148,590 us, 88.49%)</title><rect x="145.9" y="87" width="1044.1" height="15.0" fill="rgb(154.986919937945,154.986919937945,143.398150468501)" rx="2" ry="2" />
<text  x="148.87" y="97.5" >SNESSolve</text>
</g>
<g >
<title>firedrake.functionspace.VectorFunctionSpace (14,249 us, 0.02%)</title><rect x="55.8" y="87" width="0.3" height="15.0" fill="rgb(127.820517786657,150.175689796541,150.175689796541)" rx="2" ry="2" />
<text  x="58.83" y="97.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.LinearVariationalProblem.__init__ (35,019 us, 0.05%)</title><rect x="143.7" y="71" width="0.7" height="15.0" fill="rgb(149.509058088202,149.509058088202,116.851589196673)" rx="2" ry="2" />
<text  x="146.75" y="81.5" ></text>
</g>
<g >
<title>Mesh: numbering (16,930 us, 0.02%)</title><rect x="57.5" y="87" width="0.3" height="15.0" fill="rgb(143.739790801935,160.321429404336,143.739790801935)" rx="2" ry="2" />
<text  x="60.47" y="97.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (8,154 us, 0.01%)</title><rect x="1189.9" y="135" width="0.1" height="15.0" fill="rgb(143.996192124445,154.369383143375,154.369383143375)" rx="2" ry="2" />
<text  x="1192.86" y="145.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_pyop2_kernel_uniform_extrusion (2,555,876 us, 3.76%)</title><rect x="11.5" y="119" width="44.3" height="15.0" fill="rgb(141.975745892604,160.608599505855,141.975745892604)" rx="2" ry="2" />
<text  x="14.46" y="129.5" >Par..</text>
</g>
<g >
<title>Parloop_Cells_wrap_form0_cell_integral_otherwise (5,472,648 us, 8.05%)</title><rect x="1013.8" y="135" width="95.0" height="15.0" fill="rgb(146.526437491474,128.598996071903,146.526437491474)" rx="2" ry="2" />
<text  x="1016.76" y="145.5" >Parloop_Ce..</text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (34,379,577 us, 50.58%)</title><rect x="397.3" y="167" width="596.8" height="15.0" fill="rgb(152.182688423511,152.182688423511,129.808413129323)" rx="2" ry="2" />
<text  x="400.25" y="177.5" >firedrake.tsfc_interface.compile_form</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (2,555,876 us, 3.76%)</title><rect x="11.5" y="135" width="44.3" height="15.0" fill="rgb(133.081104646224,151.539545649021,151.539545649021)" rx="2" ry="2" />
<text  x="14.46" y="145.5" >pyo..</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (2,831,335 us, 4.17%)</title><rect x="1108.8" y="151" width="49.1" height="15.0" fill="rgb(125.298775376796,163.323455171219,125.298775376796)" rx="2" ry="2" />
<text  x="1111.76" y="161.5" >pyop..</text>
</g>
<g >
<title>CreateFunctionSpace (69,539 us, 0.10%)</title><rect x="56.1" y="71" width="1.2" height="15.0" fill="rgb(139.701576749744,160.978813087251,139.701576749744)" rx="2" ry="2" />
<text  x="59.08" y="81.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (14,249 us, 0.02%)</title><rect x="55.8" y="119" width="0.3" height="15.0" fill="rgb(118.057286558948,147.644481700468,147.644481700468)" rx="2" ry="2" />
<text  x="58.83" y="129.5" ></text>
</g>
<g >
<title>HybridInit (1,135,463 us, 1.67%)</title><rect x="994.1" y="119" width="19.7" height="15.0" fill="rgb(148.258372227057,159.585846381642,148.258372227057)" rx="2" ry="2" />
<text  x="997.05" y="129.5" ></text>
</g>
<g >
<title>firedrake.extrusion_utils.make_extruded_coords (2,640,032 us, 3.88%)</title><rect x="10.0" y="87" width="45.8" height="15.0" fill="rgb(130.766572216489,130.766572216489,152.729013977385)" rx="2" ry="2" />
<text  x="13.00" y="97.5" >fir..</text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (13,772 us, 0.02%)</title><rect x="995.4" y="167" width="0.2" height="15.0" fill="rgb(135.29765266302,161.695730961834,135.29765266302)" rx="2" ry="2" />
<text  x="998.36" y="177.5" ></text>
</g>
<g >
<title>firedrake.parloops.par_loop (1,406,915 us, 2.07%)</title><rect x="145.9" y="167" width="24.4" height="15.0" fill="rgb(134.79914308651,151.984963022429,151.984963022429)" rx="2" ry="2" />
<text  x="148.87" y="177.5" >f..</text>
</g>
<g >
<title>CreateFunctionSpace (13,772 us, 0.02%)</title><rect x="995.4" y="183" width="0.2" height="15.0" fill="rgb(148.91445318072,148.91445318072,113.970042337335)" rx="2" ry="2" />
<text  x="998.36" y="193.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (69,539 us, 0.10%)</title><rect x="56.1" y="119" width="1.2" height="15.0" fill="rgb(146.891778829081,146.891778829081,155.850021708854)" rx="2" ry="2" />
<text  x="59.08" y="129.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (69,539 us, 0.10%)</title><rect x="56.1" y="103" width="1.2" height="15.0" fill="rgb(141.24132363245,153.655157978783,153.655157978783)" rx="2" ry="2" />
<text  x="59.08" y="113.5" ></text>
</g>
<g >
<title>firedrake.__init__ (4,843,534 us, 7.13%)</title><rect x="58.5" y="71" width="84.1" height="15.0" fill="rgb(133.325271667272,162.016816240212,133.325271667272)" rx="2" ry="2" />
<text  x="61.54" y="81.5" >firedrak..</text>
</g>
<g >
<title>HybridRHS (47,453,899 us, 69.81%)</title><rect x="170.3" y="151" width="823.8" height="15.0" fill="rgb(149.327194078557,149.327194078557,115.970248226855)" rx="2" ry="2" />
<text  x="173.29" y="161.5" >HybridRHS</text>
</g>
<g >
<title>firedrake.mesh.MeshTopology._facets (28,454 us, 0.04%)</title><rect x="56.8" y="135" width="0.5" height="15.0" fill="rgb(148.479102441736,148.479102441736,111.860265679184)" rx="2" ry="2" />
<text  x="59.79" y="145.5" ></text>
</g>
<g >
<title>FunctionSpaceData: CreateElement (16,733 us, 0.02%)</title><rect x="56.5" y="135" width="0.3" height="15.0" fill="rgb(153.206837868121,153.206837868121,134.771598899355)" rx="2" ry="2" />
<text  x="59.50" y="145.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (69,539 us, 0.10%)</title><rect x="56.1" y="87" width="1.2" height="15.0" fill="rgb(107.136515268096,144.813170625062,144.813170625062)" rx="2" ry="2" />
<text  x="59.08" y="97.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (14,249 us, 0.02%)</title><rect x="55.8" y="103" width="0.3" height="15.0" fill="rgb(156.665851544076,147.771528504581,147.771528504581)" rx="2" ry="2" />
<text  x="58.83" y="113.5" ></text>
</g>
<g >
<title>DMPlexStratify (13,353 us, 0.02%)</title><rect x="143.2" y="135" width="0.3" height="15.0" fill="rgb(147.676910346127,147.676910346127,107.972719369693)" rx="2" ry="2" />
<text  x="146.24" y="145.5" ></text>
</g>
</g>
</svg>
