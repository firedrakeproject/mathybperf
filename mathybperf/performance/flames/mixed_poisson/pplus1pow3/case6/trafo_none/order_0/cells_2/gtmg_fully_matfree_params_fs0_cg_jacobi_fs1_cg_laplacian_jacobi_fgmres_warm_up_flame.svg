<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="283" onload="init(evt)" viewBox="0 0 1200 283" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:13px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:18px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 13 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (1 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="283.0" fill="url(#background)"  />
<text id="title" x="600.00" y="26" >Firedrake example</text>
<text id="details" x="10.00" y="265" > </text>
<text id="unzoom" x="10.00" y="26" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="26" >Search</text>
<text id="ignorecase" x="1174.00" y="26" >ic</text>
<text id="matched" x="1090.00" y="265" > </text>
<g id="frames">
<g >
<title>firedrake.variational_solver.NonlinearVariationalProblem.__init__ (11,422 us, 0.10%)</title><rect x="453.3" y="87" width="1.1" height="15.0" fill="rgb(151.950337953745,151.950337953745,128.68240700661)" rx="2" ry="2" />
<text  x="456.27" y="97.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.action (4,318 us, 0.04%)</title><rect x="454.6" y="119" width="0.4" height="15.0" fill="rgb(106.245919751324,144.582275491084,144.582275491084)" rx="2" ry="2" />
<text  x="457.57" y="129.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (4,472 us, 0.04%)</title><rect x="554.9" y="183" width="0.5" height="15.0" fill="rgb(111.596240713503,111.596240713503,149.018627234872)" rx="2" ry="2" />
<text  x="557.94" y="193.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (5,304 us, 0.04%)</title><rect x="556.0" y="183" width="0.5" height="15.0" fill="rgb(149.589066800667,149.589066800667,117.239323726307)" rx="2" ry="2" />
<text  x="558.95" y="193.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (2,499,620 us, 21.11%)</title><rect x="626.0" y="151" width="249.2" height="15.0" fill="rgb(156.676077862384,147.849930278276,147.849930278276)" rx="2" ry="2" />
<text  x="629.02" y="161.5" >pyop2.global_kernel.GlobalKern..</text>
</g>
<g >
<title>all (11,838,126 us, 100%)</title><rect x="10.0" y="39" width="1180.0" height="15.0" fill="rgb(117.236839156852,117.236839156852,150.110355965842)" rx="2" ry="2" />
<text  x="13.00" y="49.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (7,640 us, 0.06%)</title><rect x="121.2" y="151" width="0.7" height="15.0" fill="rgb(153.661214392459,124.735977008851,124.735977008851)" rx="2" ry="2" />
<text  x="124.19" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (7,640 us, 0.06%)</title><rect x="121.2" y="119" width="0.7" height="15.0" fill="rgb(143.487258922223,160.362539245219,143.487258922223)" rx="2" ry="2" />
<text  x="124.19" y="129.5" ></text>
</g>
<g >
<title>CreateExtMesh (1,124,513 us, 9.50%)</title><rect x="10.0" y="71" width="112.1" height="15.0" fill="rgb(152.272064474087,152.272064474087,130.241543220574)" rx="2" ry="2" />
<text  x="13.00" y="81.5" >CreateExtMesh</text>
</g>
<g >
<title>CreateFunctionSpace (6,044 us, 0.05%)</title><rect x="554.8" y="135" width="0.6" height="15.0" fill="rgb(108.57816763457,145.186932349703,145.186932349703)" rx="2" ry="2" />
<text  x="557.78" y="145.5" ></text>
</g>
<g >
<title>firedrake.__init__ (3,294,973 us, 27.83%)</title><rect x="124.2" y="71" width="328.4" height="15.0" fill="rgb(155.694732783715,140.326284675149,140.326284675149)" rx="2" ry="2" />
<text  x="127.20" y="81.5" >firedrake.__init__</text>
</g>
<g >
<title>ParLoopExecute (840,194 us, 7.10%)</title><rect x="455.9" y="183" width="83.7" height="15.0" fill="rgb(156.610843424317,147.34979958643,147.34979958643)" rx="2" ry="2" />
<text  x="458.85" y="193.5" >ParLoopE..</text>
</g>
<g >
<title>firedrake.parloops.par_loop (846,214 us, 7.15%)</title><rect x="455.3" y="167" width="84.3" height="15.0" fill="rgb(140.269655993008,160.886335070906,140.269655993008)" rx="2" ry="2" />
<text  x="458.25" y="177.5" >firedrak..</text>
</g>
<g >
<title>KSPSolve (968,358 us, 8.18%)</title><rect x="455.3" y="103" width="96.5" height="15.0" fill="rgb(130.087052733197,162.543968159712,130.087052733197)" rx="2" ry="2" />
<text  x="458.25" y="113.5" >KSPSolve</text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (2,543 us, 0.02%)</title><rect x="455.0" y="119" width="0.3" height="15.0" fill="rgb(155.038380530683,155.038380530683,143.647536417923)" rx="2" ry="2" />
<text  x="458.00" y="129.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.solve (7,371,202 us, 62.27%)</title><rect x="455.3" y="71" width="734.7" height="15.0" fill="rgb(155.306814433693,137.352243991646,137.352243991646)" rx="2" ry="2" />
<text  x="458.25" y="81.5" >firedrake.variational_solver.NonlinearVariationalSolver.solve</text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (2,152 us, 0.02%)</title><rect x="556.3" y="215" width="0.2" height="15.0" fill="rgb(107.23386389333,144.83840915753,144.83840915753)" rx="2" ry="2" />
<text  x="559.27" y="225.5" ></text>
</g>
<g >
<title>firedrake.parloops.par_loop (678,193 us, 5.73%)</title><rect x="557.6" y="135" width="67.6" height="15.0" fill="rgb(135.910805385516,161.595915402358,135.910805385516)" rx="2" ry="2" />
<text  x="560.63" y="145.5" >firedr..</text>
</g>
<g >
<title>ParLoopExecute (4,681,777 us, 39.55%)</title><rect x="625.8" y="119" width="466.7" height="15.0" fill="rgb(144.004541497794,144.004541497794,155.291201580218)" rx="2" ry="2" />
<text  x="628.79" y="129.5" >ParLoopExecute</text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (7,640 us, 0.06%)</title><rect x="121.2" y="135" width="0.7" height="15.0" fill="rgb(155.758606240592,140.81598117787,140.81598117787)" rx="2" ry="2" />
<text  x="124.19" y="145.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (17,647 us, 0.15%)</title><rect x="122.2" y="87" width="1.8" height="15.0" fill="rgb(154.63405447653,154.63405447653,141.688110155493)" rx="2" ry="2" />
<text  x="125.24" y="97.5" ></text>
</g>
<g >
<title>PCSetUp (738,900 us, 6.24%)</title><rect x="551.8" y="103" width="73.6" height="15.0" fill="rgb(149.228506237733,149.228506237733,115.491991767476)" rx="2" ry="2" />
<text  x="554.78" y="113.5" >PCSetUp</text>
</g>
<g >
<title>Parloop_Cells_wrap_form0_cell_integral_otherwise (2,501,973 us, 21.13%)</title><rect x="625.8" y="135" width="249.4" height="15.0" fill="rgb(123.177503889842,123.177503889842,151.260162043195)" rx="2" ry="2" />
<text  x="628.79" y="145.5" >Parloop_Cells_wrap_form0_cell_..</text>
</g>
<g >
<title>firedrake (11,838,126 us, 100.00%)</title><rect x="10.0" y="55" width="1180.0" height="15.0" fill="rgb(140.77739036882,160.803680637634,140.77739036882)" rx="2" ry="2" />
<text  x="13.00" y="65.5" >firedrake</text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (2,044 us, 0.02%)</title><rect x="625.2" y="135" width="0.2" height="15.0" fill="rgb(148.005713642345,159.626976848921,148.005713642345)" rx="2" ry="2" />
<text  x="628.23" y="145.5" ></text>
</g>
<g >
<title>firedrake.utility_meshes.SquareMesh (1,858 us, 0.02%)</title><rect x="452.6" y="71" width="0.2" height="15.0" fill="rgb(110.476184880515,110.476184880515,148.801842234938)" rx="2" ry="2" />
<text  x="455.64" y="81.5" ></text>
</g>
<g >
<title>firedrake.functionspace.make_scalar_element (1,481 us, 0.01%)</title><rect x="556.1" y="199" width="0.2" height="15.0" fill="rgb(110.849691431374,110.849691431374,148.874133825427)" rx="2" ry="2" />
<text  x="559.12" y="209.5" ></text>
</g>
<g >
<title>HybridRHS (122,144 us, 1.03%)</title><rect x="539.6" y="151" width="12.2" height="15.0" fill="rgb(141.005885620486,160.7664837362,141.005885620486)" rx="2" ry="2" />
<text  x="542.60" y="161.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (1,420 us, 0.01%)</title><rect x="1189.9" y="167" width="0.1" height="15.0" fill="rgb(155.173096791256,155.173096791256,144.300392142242)" rx="2" ry="2" />
<text  x="1192.86" y="177.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (19,205 us, 0.16%)</title><rect x="122.1" y="71" width="1.9" height="15.0" fill="rgb(151.515660120403,151.515660120403,126.575891352723)" rx="2" ry="2" />
<text  x="125.09" y="81.5" ></text>
</g>
<g >
<title>firedrake.matrix_free.operators.ImplicitMatrixContext.__init__ (6,861 us, 0.06%)</title><rect x="454.6" y="103" width="0.7" height="15.0" fill="rgb(139.600358573423,153.22972259311,153.22972259311)" rx="2" ry="2" />
<text  x="457.57" y="113.5" ></text>
</g>
<g >
<title>PCApply (968,358 us, 8.18%)</title><rect x="455.3" y="119" width="96.5" height="15.0" fill="rgb(138.668626903991,108.463356441476,138.668626903991)" rx="2" ry="2" />
<text  x="458.25" y="129.5" >PCApply</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (840,194 us, 7.10%)</title><rect x="455.9" y="215" width="83.7" height="15.0" fill="rgb(136.068271603716,136.068271603716,153.755149342655)" rx="2" ry="2" />
<text  x="458.85" y="225.5" >pyop2.gl..</text>
</g>
<g >
<title>SCForwardElim (968,358 us, 8.18%)</title><rect x="455.3" y="135" width="96.5" height="15.0" fill="rgb(155.236176234638,136.810684465562,136.810684465562)" rx="2" ry="2" />
<text  x="458.25" y="145.5" >SCForwardE..</text>
</g>
<g >
<title>ParLoopExecute (1,075,621 us, 9.09%)</title><rect x="14.0" y="103" width="107.2" height="15.0" fill="rgb(135.131521426447,161.722775581741,135.131521426447)" rx="2" ry="2" />
<text  x="16.97" y="113.5" >ParLoopExec..</text>
</g>
<g >
<title>SNESSolve (7,371,202 us, 62.27%)</title><rect x="455.3" y="87" width="734.7" height="15.0" fill="rgb(155.816567661533,155.816567661533,147.418750975122)" rx="2" ry="2" />
<text  x="458.25" y="97.5" >SNESSolve</text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (2,152 us, 0.02%)</title><rect x="556.3" y="231" width="0.2" height="15.0" fill="rgb(135.116820819572,135.116820819572,153.570997577982)" rx="2" ry="2" />
<text  x="559.27" y="241.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (672,856 us, 5.68%)</title><rect x="558.2" y="167" width="67.0" height="15.0" fill="rgb(155.213233620579,136.634791091109,136.634791091109)" rx="2" ry="2" />
<text  x="561.16" y="177.5" >Parloo..</text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (4,472 us, 0.04%)</title><rect x="554.9" y="167" width="0.5" height="15.0" fill="rgb(133.91041803499,161.921559854769,133.91041803499)" rx="2" ry="2" />
<text  x="557.94" y="177.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (1,572 us, 0.01%)</title><rect x="554.8" y="183" width="0.1" height="15.0" fill="rgb(156.643371301048,147.599179974704,147.599179974704)" rx="2" ry="2" />
<text  x="557.78" y="193.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (1,075,621 us, 9.09%)</title><rect x="14.0" y="135" width="107.2" height="15.0" fill="rgb(146.340718493278,128.123091139025,146.340718493278)" rx="2" ry="2" />
<text  x="16.97" y="145.5" >pyop2.globa..</text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (2,152 us, 0.02%)</title><rect x="556.3" y="199" width="0.2" height="15.0" fill="rgb(127.141551824348,163.023468307664,127.141551824348)" rx="2" ry="2" />
<text  x="559.27" y="209.5" ></text>
</g>
<g >
<title>firedrake.mesh.MeshTopology._facets (2,469 us, 0.02%)</title><rect x="123.8" y="135" width="0.2" height="15.0" fill="rgb(147.932322984371,147.932322984371,109.210488308875)" rx="2" ry="2" />
<text  x="126.76" y="145.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (17,647 us, 0.15%)</title><rect x="122.2" y="103" width="1.8" height="15.0" fill="rgb(152.345475095487,152.345475095487,130.597302385824)" rx="2" ry="2" />
<text  x="125.24" y="113.5" ></text>
</g>
<g >
<title>firedrake.mesh.make_mesh_from_coordinates (1,404 us, 0.01%)</title><rect x="121.9" y="87" width="0.2" height="15.0" fill="rgb(152.835130111811,152.835130111811,132.970245926471)" rx="2" ry="2" />
<text  x="124.95" y="97.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (1,596 us, 0.01%)</title><rect x="551.6" y="183" width="0.2" height="15.0" fill="rgb(128.49458065056,162.803207801072,128.49458065056)" rx="2" ry="2" />
<text  x="554.62" y="193.5" ></text>
</g>
<g >
<title>firedrake.extrusion_utils.make_extruded_coords (1,113,686 us, 9.41%)</title><rect x="10.2" y="87" width="111.0" height="15.0" fill="rgb(138.217585367563,161.220393079699,138.217585367563)" rx="2" ry="2" />
<text  x="13.18" y="97.5" >firedrake.ex..</text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (11,011 us, 0.09%)</title><rect x="555.4" y="151" width="1.1" height="15.0" fill="rgb(154.462075937199,154.462075937199,140.854675695656)" rx="2" ry="2" />
<text  x="558.39" y="161.5" ></text>
</g>
<g >
<title>SNESFunctionEval (5,663,944 us, 47.84%)</title><rect x="625.4" y="103" width="564.6" height="15.0" fill="rgb(123.526856699371,149.062518403541,149.062518403541)" rx="2" ry="2" />
<text  x="628.43" y="113.5" >SNESFunctionEval</text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (3,289 us, 0.03%)</title><rect x="1189.7" y="151" width="0.3" height="15.0" fill="rgb(136.374255445661,136.374255445661,153.814372021741)" rx="2" ry="2" />
<text  x="1192.67" y="161.5" ></text>
</g>
<g >
<title>HybridInit (738,900 us, 6.24%)</title><rect x="551.8" y="119" width="73.6" height="15.0" fill="rgb(148.859511684394,148.859511684394,113.703787393603)" rx="2" ry="2" />
<text  x="554.78" y="129.5" >HybridI..</text>
</g>
<g >
<title>firedrake.interpolation.make_interpolator (11,452 us, 0.10%)</title><rect x="556.5" y="135" width="1.1" height="15.0" fill="rgb(118.07260185996,118.07260185996,150.272116489024)" rx="2" ry="2" />
<text  x="559.48" y="145.5" ></text>
</g>
<g >
<title>firedrake.utility_meshes.RectangleMesh (1,858 us, 0.02%)</title><rect x="452.6" y="87" width="0.2" height="15.0" fill="rgb(141.506660443918,153.723949003979,153.723949003979)" rx="2" ry="2" />
<text  x="455.64" y="97.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (672,856 us, 5.68%)</title><rect x="558.2" y="183" width="67.0" height="15.0" fill="rgb(140.857469196418,140.857469196418,154.68209081221)" rx="2" ry="2" />
<text  x="561.16" y="193.5" >pyop2...</text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (9,880 us, 0.08%)</title><rect x="453.4" y="103" width="1.0" height="15.0" fill="rgb(123.738887527349,123.738887527349,151.368816940777)" rx="2" ry="2" />
<text  x="456.43" y="113.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (1,572 us, 0.01%)</title><rect x="554.8" y="215" width="0.1" height="15.0" fill="rgb(125.507132439096,163.289536579682,125.507132439096)" rx="2" ry="2" />
<text  x="557.78" y="225.5" ></text>
</g>
<g >
<title>ParLoopExecute (672,856 us, 5.68%)</title><rect x="558.2" y="151" width="67.0" height="15.0" fill="rgb(153.637995563978,153.637995563978,136.861055425429)" rx="2" ry="2" />
<text  x="561.16" y="161.5" >ParLoo..</text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (1,572 us, 0.01%)</title><rect x="554.8" y="199" width="0.1" height="15.0" fill="rgb(140.197799722077,153.384614742761,153.384614742761)" rx="2" ry="2" />
<text  x="557.78" y="209.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (7,640 us, 0.06%)</title><rect x="121.2" y="103" width="0.7" height="15.0" fill="rgb(134.409422331727,97.54914472505,134.409422331727)" rx="2" ry="2" />
<text  x="124.19" y="113.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.__init__ (8,463 us, 0.07%)</title><rect x="454.4" y="71" width="0.9" height="15.0" fill="rgb(123.834602556225,123.834602556225,151.387342430237)" rx="2" ry="2" />
<text  x="457.41" y="81.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (5,563 us, 0.05%)</title><rect x="1189.4" y="135" width="0.6" height="15.0" fill="rgb(141.069801333095,141.069801333095,154.723187354793)" rx="2" ry="2" />
<text  x="1192.45" y="145.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (7,705 us, 0.07%)</title><rect x="555.7" y="167" width="0.8" height="15.0" fill="rgb(132.349202749554,132.349202749554,153.03532956443)" rx="2" ry="2" />
<text  x="558.72" y="177.5" ></text>
</g>
<g >
<title>firedrake.slate.slac.optimise.optimise (15,324 us, 0.13%)</title><rect x="550.3" y="167" width="1.5" height="15.0" fill="rgb(152.483213578529,115.70463743539,115.70463743539)" rx="2" ry="2" />
<text  x="553.25" y="177.5" ></text>
</g>
<g >
<title>firedrake.assemble.allocate_matrix (6,861 us, 0.06%)</title><rect x="454.6" y="87" width="0.7" height="15.0" fill="rgb(153.091300203239,153.091300203239,134.211685600314)" rx="2" ry="2" />
<text  x="457.57" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspace.VectorFunctionSpace (7,640 us, 0.06%)</title><rect x="121.2" y="87" width="0.7" height="15.0" fill="rgb(154.908347747661,134.297332732066,134.297332732066)" rx="2" ry="2" />
<text  x="124.19" y="97.5" ></text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (978,562 us, 8.27%)</title><rect x="1092.5" y="119" width="97.5" height="15.0" fill="rgb(155.498606294544,155.498606294544,145.877861273559)" rx="2" ry="2" />
<text  x="1095.46" y="129.5" >firedrake...</text>
</g>
<g >
<title>CreateMesh (2,004 us, 0.02%)</title><rect x="124.0" y="71" width="0.2" height="15.0" fill="rgb(134.989505203713,99.0356070845143,134.989505203713)" rx="2" ry="2" />
<text  x="127.00" y="81.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (4,472 us, 0.04%)</title><rect x="554.9" y="151" width="0.5" height="15.0" fill="rgb(133.651844156997,133.651844156997,153.287453707806)" rx="2" ry="2" />
<text  x="557.94" y="161.5" ></text>
</g>
<g >
<title>FunctionSpaceData: CreateElement (7,060 us, 0.06%)</title><rect x="123.1" y="135" width="0.7" height="15.0" fill="rgb(124.696056987793,149.365644404243,149.365644404243)" rx="2" ry="2" />
<text  x="126.05" y="145.5" ></text>
</g>
<g >
<title>FunctionSpaceData: CreateElement (4,472 us, 0.04%)</title><rect x="554.9" y="199" width="0.5" height="15.0" fill="rgb(155.464675776596,138.562514287238,138.562514287238)" rx="2" ry="2" />
<text  x="557.94" y="209.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.action (4,486 us, 0.04%)</title><rect x="452.8" y="87" width="0.5" height="15.0" fill="rgb(151.261179070465,151.261179070465,125.342637033794)" rx="2" ry="2" />
<text  x="455.82" y="97.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (840,194 us, 7.10%)</title><rect x="455.9" y="199" width="83.7" height="15.0" fill="rgb(153.282568051883,153.282568051883,135.138599020663)" rx="2" ry="2" />
<text  x="458.85" y="209.5" >Parloop_..</text>
</g>
<g >
<title>Parloop_Cells_wrap_pyop2_kernel_uniform_extrusion (1,075,621 us, 9.09%)</title><rect x="14.0" y="119" width="107.2" height="15.0" fill="rgb(150.123166358445,150.123166358445,119.827652352462)" rx="2" ry="2" />
<text  x="16.97" y="129.5" >Parloop_Cel..</text>
</g>
<g >
<title>HybridBreak (846,214 us, 7.15%)</title><rect x="455.3" y="151" width="84.3" height="15.0" fill="rgb(134.407432668263,134.407432668263,153.43369664547)" rx="2" ry="2" />
<text  x="458.25" y="161.5" >HybridBr..</text>
</g>
<g >
<title>firedrake.functionspace.MixedFunctionSpace (1,572 us, 0.01%)</title><rect x="554.8" y="151" width="0.1" height="15.0" fill="rgb(153.422288337582,122.904210588128,122.904210588128)" rx="2" ry="2" />
<text  x="557.78" y="161.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (1,572 us, 0.01%)</title><rect x="554.8" y="167" width="0.1" height="15.0" fill="rgb(127.082917193604,149.984460013157,149.984460013157)" rx="2" ry="2" />
<text  x="557.78" y="177.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (11,011 us, 0.09%)</title><rect x="555.4" y="135" width="1.1" height="15.0" fill="rgb(151.037937670563,140.159715280817,151.037937670563)" rx="2" ry="2" />
<text  x="558.39" y="145.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.LinearVariationalProblem.__init__ (15,908 us, 0.13%)</title><rect x="452.8" y="71" width="1.6" height="15.0" fill="rgb(130.008940033544,150.743058527215,150.743058527215)" rx="2" ry="2" />
<text  x="455.82" y="81.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (2,179,804 us, 18.41%)</title><rect x="875.2" y="151" width="217.3" height="15.0" fill="rgb(153.588374480934,153.588374480934,136.620584022988)" rx="2" ry="2" />
<text  x="878.18" y="161.5" >pyop2.global_kernel.Global..</text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (17,647 us, 0.15%)</title><rect x="122.2" y="119" width="1.8" height="15.0" fill="rgb(149.075114416783,159.452888350756,149.075114416783)" rx="2" ry="2" />
<text  x="125.24" y="129.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_form1_cell_integral_otherwise (2,179,804 us, 18.41%)</title><rect x="875.2" y="135" width="217.3" height="15.0" fill="rgb(153.101977774393,120.448496270343,120.448496270343)" rx="2" ry="2" />
<text  x="878.18" y="145.5" >Parloop_Cells_wrap_form1_c..</text>
</g>
<g >
<title>Log_Event_form0_cell_integral_otherwise (2,353 us, 0.02%)</title><rect x="625.8" y="151" width="0.2" height="15.0" fill="rgb(112.682589518201,146.251041726941,146.251041726941)" rx="2" ry="2" />
<text  x="628.79" y="161.5" ></text>
</g>
</g>
</svg>
