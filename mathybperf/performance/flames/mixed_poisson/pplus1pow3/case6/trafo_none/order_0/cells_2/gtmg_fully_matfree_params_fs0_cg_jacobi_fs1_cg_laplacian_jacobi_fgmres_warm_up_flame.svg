<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="267" onload="init(evt)" viewBox="0 0 1200 267" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:13px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:18px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 13 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (1 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="267.0" fill="url(#background)"  />
<text id="title" x="600.00" y="26" >Firedrake example</text>
<text id="details" x="10.00" y="249" > </text>
<text id="unzoom" x="10.00" y="26" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="26" >Search</text>
<text id="ignorecase" x="1174.00" y="26" >ic</text>
<text id="matched" x="1090.00" y="249" > </text>
<g id="frames">
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (10,310 us, 0.02%)</title><rect x="46.1" y="151" width="0.3" height="15.0" fill="rgb(137.727969212602,106.052921107293,137.727969212602)" rx="2" ry="2" />
<text  x="49.11" y="161.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_pyop2_kernel_uniform_extrusion (1,516,345 us, 2.95%)</title><rect x="11.3" y="119" width="34.8" height="15.0" fill="rgb(153.407326507788,153.407326507788,135.743197691588)" rx="2" ry="2" />
<text  x="14.26" y="129.5" >Pa..</text>
</g>
<g >
<title>firedrake.assemble.allocate_matrix (7,479 us, 0.01%)</title><rect x="125.2" y="87" width="0.1" height="15.0" fill="rgb(152.594451246302,116.55745955498,116.55745955498)" rx="2" ry="2" />
<text  x="128.17" y="97.5" ></text>
</g>
<g >
<title>firedrake.mesh._from_cell_list (44,327 us, 0.09%)</title><rect x="123.5" y="103" width="1.0" height="15.0" fill="rgb(155.279580240873,137.143448513358,137.143448513358)" rx="2" ry="2" />
<text  x="126.49" y="113.5" ></text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (23,559,739 us, 45.89%)</title><rect x="451.6" y="167" width="541.5" height="15.0" fill="rgb(134.977790245915,134.977790245915,153.544088434693)" rx="2" ry="2" />
<text  x="454.64" y="177.5" >firedrake.tsfc_interface.compile_form</text>
</g>
<g >
<title>SNESSolve (46,324,531 us, 90.23%)</title><rect x="125.3" y="87" width="1064.7" height="15.0" fill="rgb(133.05729330765,94.0843141008538,133.05729330765)" rx="2" ry="2" />
<text  x="128.34" y="97.5" >SNESSolve</text>
</g>
<g >
<title>CreateMesh (28,661 us, 0.06%)</title><rect x="47.4" y="71" width="0.7" height="15.0" fill="rgb(150.407080676757,150.407080676757,121.203544818129)" rx="2" ry="2" />
<text  x="50.40" y="81.5" ></text>
</g>
<g >
<title>PCSetUp (1,141,637 us, 2.22%)</title><rect x="993.1" y="103" width="26.2" height="15.0" fill="rgb(150.123664896723,159.28219408658,150.123664896723)" rx="2" ry="2" />
<text  x="996.11" y="113.5" >P..</text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (1,076,519 us, 2.10%)</title><rect x="1165.3" y="119" width="24.7" height="15.0" fill="rgb(152.087380810047,112.669919543695,112.669919543695)" rx="2" ry="2" />
<text  x="1168.26" y="129.5" >f..</text>
</g>
<g >
<title>firedrake.parloops.par_loop (1,044,857 us, 2.04%)</title><rect x="995.3" y="135" width="24.0" height="15.0" fill="rgb(154.401689553687,130.412953244935,130.412953244935)" rx="2" ry="2" />
<text  x="998.33" y="145.5" >f..</text>
</g>
<g >
<title>firedrake.parloops.par_loop (1,215,607 us, 2.37%)</title><rect x="125.3" y="167" width="28.0" height="15.0" fill="rgb(133.528429515249,161.983744032401,133.528429515249)" rx="2" ry="2" />
<text  x="128.34" y="177.5" >f..</text>
</g>
<g >
<title>firedrake.utility_meshes.RectangleMesh (71,627 us, 0.14%)</title><rect x="122.9" y="87" width="1.6" height="15.0" fill="rgb(115.021878507222,115.021878507222,149.681653904624)" rx="2" ry="2" />
<text  x="125.86" y="97.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (9,492 us, 0.02%)</title><rect x="994.8" y="151" width="0.2" height="15.0" fill="rgb(154.036732984428,154.036732984428,138.793398309149)" rx="2" ry="2" />
<text  x="997.77" y="161.5" ></text>
</g>
<g >
<title>PetscBarrier (33,854 us, 0.07%)</title><rect x="48.1" y="71" width="0.7" height="15.0" fill="rgb(154.3053401741,129.674274668096,129.674274668096)" rx="2" ry="2" />
<text  x="51.06" y="81.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (9,492 us, 0.02%)</title><rect x="994.8" y="167" width="0.2" height="15.0" fill="rgb(156.317120367866,145.097922820306,145.097922820306)" rx="2" ry="2" />
<text  x="997.77" y="177.5" ></text>
</g>
<g >
<title>HybridRHS (36,541,961 us, 71.17%)</title><rect x="153.3" y="151" width="839.8" height="15.0" fill="rgb(145.372609067491,154.726231980461,154.726231980461)" rx="2" ry="2" />
<text  x="156.28" y="161.5" >HybridRHS</text>
</g>
<g >
<title>SCForwardElim (37,757,568 us, 73.54%)</title><rect x="125.3" y="135" width="867.8" height="15.0" fill="rgb(135.410712601288,135.410712601288,153.627879858314)" rx="2" ry="2" />
<text  x="128.34" y="145.5" >SCForwardElim</text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (9,492 us, 0.02%)</title><rect x="994.8" y="135" width="0.2" height="15.0" fill="rgb(129.129970714046,162.699772209341,129.129970714046)" rx="2" ry="2" />
<text  x="997.77" y="145.5" ></text>
</g>
<g >
<title>SNESFunctionEval (7,425,326 us, 14.46%)</title><rect x="1019.3" y="103" width="170.7" height="15.0" fill="rgb(138.415391793114,107.814441469855,138.415391793114)" rx="2" ry="2" />
<text  x="1022.35" y="113.5" >SNESFunctionEval</text>
</g>
<g >
<title>Mesh: numbering (10,915 us, 0.02%)</title><rect x="47.6" y="87" width="0.3" height="15.0" fill="rgb(153.003493596175,119.693450904009,119.693450904009)" rx="2" ry="2" />
<text  x="50.64" y="97.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (6,371 us, 0.01%)</title><rect x="1189.9" y="135" width="0.1" height="15.0" fill="rgb(144.999799884888,144.999799884888,155.483832235785)" rx="2" ry="2" />
<text  x="1192.85" y="145.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (9,492 us, 0.02%)</title><rect x="994.8" y="183" width="0.2" height="15.0" fill="rgb(154.491570929993,131.102043796609,131.102043796609)" rx="2" ry="2" />
<text  x="997.77" y="193.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (10,310 us, 0.02%)</title><rect x="46.1" y="103" width="0.3" height="15.0" fill="rgb(120.577674057453,148.297915496377,148.297915496377)" rx="2" ry="2" />
<text  x="49.11" y="113.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (3,368,377 us, 6.56%)</title><rect x="1019.7" y="151" width="77.4" height="15.0" fill="rgb(105.498725484306,144.388558458894,144.388558458894)" rx="2" ry="2" />
<text  x="1022.66" y="161.5" >pyop2.gl..</text>
</g>
<g >
<title>firedrake.interpolation.make_interpolator (15,021 us, 0.03%)</title><rect x="995.0" y="135" width="0.3" height="15.0" fill="rgb(156.633343120005,147.522297253371,147.522297253371)" rx="2" ry="2" />
<text  x="997.99" y="145.5" ></text>
</g>
<g >
<title>PCApply (37,757,568 us, 73.54%)</title><rect x="125.3" y="119" width="867.8" height="15.0" fill="rgb(138.915642623552,153.052203643143,153.052203643143)" rx="2" ry="2" />
<text  x="128.34" y="129.5" >PCApply</text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.__init__ (25,381 us, 0.05%)</title><rect x="124.8" y="71" width="0.5" height="15.0" fill="rgb(150.501648990774,150.501648990774,121.661837416827)" rx="2" ry="2" />
<text  x="127.75" y="81.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalProblem.__init__ (10,809 us, 0.02%)</title><rect x="124.5" y="87" width="0.3" height="15.0" fill="rgb(155.903279980631,141.925146518171,141.925146518171)" rx="2" ry="2" />
<text  x="127.51" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (10,310 us, 0.02%)</title><rect x="46.1" y="119" width="0.3" height="15.0" fill="rgb(112.09570193749,112.09570193749,149.115297149192)" rx="2" ry="2" />
<text  x="49.11" y="129.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_form0_cell_integral_otherwise (3,374,549 us, 6.57%)</title><rect x="1019.5" y="135" width="77.6" height="15.0" fill="rgb(150.037291004022,159.296254952834,150.037291004022)" rx="2" ry="2" />
<text  x="1022.52" y="145.5" >Parloop_..</text>
</g>
<g >
<title>firedrake.matrix_free.operators.ImplicitMatrixContext.__init__ (7,479 us, 0.01%)</title><rect x="125.2" y="103" width="0.1" height="15.0" fill="rgb(152.650441769353,116.986720231709,116.986720231709)" rx="2" ry="2" />
<text  x="128.17" y="113.5" ></text>
</g>
<g >
<title>DMPlexStratify (6,282 us, 0.01%)</title><rect x="124.0" y="135" width="0.1" height="15.0" fill="rgb(149.685400178485,149.685400178485,117.706170095737)" rx="2" ry="2" />
<text  x="127.01" y="145.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (1,206,998 us, 2.35%)</title><rect x="125.5" y="199" width="27.8" height="15.0" fill="rgb(129.460685554875,129.460685554875,152.476261720298)" rx="2" ry="2" />
<text  x="128.54" y="209.5" >P..</text>
</g>
<g >
<title>ParLoopExecute (1,037,758 us, 2.02%)</title><rect x="995.5" y="151" width="23.8" height="15.0" fill="rgb(150.201836762895,150.201836762895,120.208901235569)" rx="2" ry="2" />
<text  x="998.50" y="161.5" >P..</text>
</g>
<g >
<title>CreateMesh (8,955 us, 0.02%)</title><rect x="123.3" y="103" width="0.2" height="15.0" fill="rgb(142.130486740107,142.130486740107,154.928481304537)" rx="2" ry="2" />
<text  x="126.28" y="113.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.solve (46,324,531 us, 90.23%)</title><rect x="125.3" y="71" width="1064.7" height="15.0" fill="rgb(150.429025994906,150.429025994906,121.309895206084)" rx="2" ry="2" />
<text  x="128.34" y="81.5" >firedrake.variational_solver.NonlinearVariationalSolver.solve</text>
</g>
<g >
<title>CreateFunctionSpace (11,938 us, 0.02%)</title><rect x="994.5" y="135" width="0.3" height="15.0" fill="rgb(107.4810939792,144.902505846459,144.902505846459)" rx="2" ry="2" />
<text  x="997.49" y="145.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_form1_cell_integral_otherwise (2,966,721 us, 5.78%)</title><rect x="1097.1" y="135" width="68.2" height="15.0" fill="rgb(133.661741190312,161.96204213181,133.661741190312)" rx="2" ry="2" />
<text  x="1100.08" y="145.5" >Parloo..</text>
</g>
<g >
<title>ParLoopExecute (6,341,270 us, 12.35%)</title><rect x="1019.5" y="119" width="145.8" height="15.0" fill="rgb(138.076455504117,152.834636612179,152.834636612179)" rx="2" ry="2" />
<text  x="1022.52" y="129.5" >ParLoopExecute</text>
</g>
<g >
<title>all (51,342,980 us, 100%)</title><rect x="10.0" y="39" width="1180.0" height="15.0" fill="rgb(138.031847015765,161.250629555573,138.031847015765)" rx="2" ry="2" />
<text  x="13.00" y="49.5" ></text>
</g>
<g >
<title>HybridInit (1,141,637 us, 2.22%)</title><rect x="993.1" y="119" width="26.2" height="15.0" fill="rgb(119.248222935185,147.953242983196,147.953242983196)" rx="2" ry="2" />
<text  x="996.11" y="129.5" >H..</text>
</g>
<g >
<title>FunctionSpaceData: CreateElement (7,797 us, 0.02%)</title><rect x="46.8" y="135" width="0.1" height="15.0" fill="rgb(106.60245485743,144.674710518593,144.674710518593)" rx="2" ry="2" />
<text  x="49.76" y="145.5" ></text>
</g>
<g >
<title>firedrake.functionspace.MixedFunctionSpace (5,977 us, 0.01%)</title><rect x="994.5" y="151" width="0.1" height="15.0" fill="rgb(117.250799804065,147.435392541795,147.435392541795)" rx="2" ry="2" />
<text  x="997.49" y="161.5" ></text>
</g>
<g >
<title>firedrake.slate.slac.optimise.optimise (39,974 us, 0.08%)</title><rect x="450.7" y="167" width="0.9" height="15.0" fill="rgb(126.401139842712,126.401139842712,151.88409158246)" rx="2" ry="2" />
<text  x="453.72" y="177.5" ></text>
</g>
<g >
<title>firedrake.extrusion_utils.make_extruded_coords (1,571,350 us, 3.06%)</title><rect x="10.0" y="87" width="36.1" height="15.0" fill="rgb(125.037896423497,125.037896423497,151.620238017451)" rx="2" ry="2" />
<text  x="13.00" y="97.5" >fi..</text>
</g>
<g >
<title>FunctionSpaceData: CreateElement (5,961 us, 0.01%)</title><rect x="994.6" y="199" width="0.2" height="15.0" fill="rgb(152.69658707858,117.340500935777,117.340500935777)" rx="2" ry="2" />
<text  x="997.63" y="209.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.LinearVariationalProblem.__init__ (10,809 us, 0.02%)</title><rect x="124.5" y="71" width="0.3" height="15.0" fill="rgb(144.542646567555,154.511056517514,154.511056517514)" rx="2" ry="2" />
<text  x="127.51" y="81.5" ></text>
</g>
<g >
<title>CreateMesh (8,955 us, 0.02%)</title><rect x="123.3" y="119" width="0.2" height="15.0" fill="rgb(148.196065293742,148.196065293742,110.488624115826)" rx="2" ry="2" />
<text  x="126.28" y="129.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (5,961 us, 0.01%)</title><rect x="994.6" y="183" width="0.2" height="15.0" fill="rgb(112.003879222805,112.003879222805,149.097525010866)" rx="2" ry="2" />
<text  x="997.63" y="193.5" ></text>
</g>
<g >
<title>KSPSolve (37,757,568 us, 73.54%)</title><rect x="125.3" y="103" width="867.8" height="15.0" fill="rgb(146.128305441809,154.922153262691,154.922153262691)" rx="2" ry="2" />
<text  x="128.34" y="113.5" >KSPSolve</text>
</g>
<g >
<title>firedrake (51,342,980 us, 100.00%)</title><rect x="10.0" y="55" width="1180.0" height="15.0" fill="rgb(152.824574596616,118.321738574057,118.321738574057)" rx="2" ry="2" />
<text  x="13.00" y="65.5" >firedrake</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (1,516,345 us, 2.95%)</title><rect x="11.3" y="135" width="34.8" height="15.0" fill="rgb(141.866834119643,153.817327364352,153.817327364352)" rx="2" ry="2" />
<text  x="14.26" y="145.5" >py..</text>
</g>
<g >
<title>firedrake.__init__ (3,220,661 us, 6.27%)</title><rect x="48.8" y="71" width="74.1" height="15.0" fill="rgb(136.162324975057,152.338380549089,152.338380549089)" rx="2" ry="2" />
<text  x="51.84" y="81.5" >firedra..</text>
</g>
<g >
<title>Log_Event_form0_cell_integral_otherwise (6,172 us, 0.01%)</title><rect x="1019.5" y="151" width="0.2" height="15.0" fill="rgb(152.454964872005,115.488064018704,115.488064018704)" rx="2" ry="2" />
<text  x="1022.52" y="161.5" ></text>
</g>
<g >
<title>DMPlexBuFrCeLi (6,282 us, 0.01%)</title><rect x="124.0" y="119" width="0.1" height="15.0" fill="rgb(133.514057818291,133.514057818291,153.260785384185)" rx="2" ry="2" />
<text  x="127.01" y="129.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (2,966,721 us, 5.78%)</title><rect x="1097.1" y="151" width="68.2" height="15.0" fill="rgb(147.637922220309,159.686849871112,147.637922220309)" rx="2" ry="2" />
<text  x="1100.08" y="161.5" >pyop2...</text>
</g>
<g >
<title>firedrake.utility_meshes.SquareMesh (71,627 us, 0.14%)</title><rect x="122.9" y="71" width="1.6" height="15.0" fill="rgb(149.303259890908,149.303259890908,115.854259471321)" rx="2" ry="2" />
<text  x="125.86" y="81.5" ></text>
</g>
<g >
<title>firedrake.functionspace.VectorFunctionSpace (10,310 us, 0.02%)</title><rect x="46.1" y="87" width="0.3" height="15.0" fill="rgb(131.923543087811,162.245004613612,131.923543087811)" rx="2" ry="2" />
<text  x="49.11" y="97.5" ></text>
</g>
<g >
<title>ParLoopExecute (1,516,345 us, 2.95%)</title><rect x="11.3" y="103" width="34.8" height="15.0" fill="rgb(110.839544182914,110.839544182914,148.872169841854)" rx="2" ry="2" />
<text  x="14.26" y="113.5" >Pa..</text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (10,310 us, 0.02%)</title><rect x="46.1" y="135" width="0.3" height="15.0" fill="rgb(112.246902595762,112.246902595762,149.144561792728)" rx="2" ry="2" />
<text  x="49.11" y="145.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (45,796 us, 0.09%)</title><rect x="46.4" y="103" width="1.0" height="15.0" fill="rgb(116.921543530081,116.921543530081,150.049331005822)" rx="2" ry="2" />
<text  x="49.35" y="113.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (5,961 us, 0.01%)</title><rect x="994.6" y="151" width="0.2" height="15.0" fill="rgb(110.214345072112,145.611126500177,145.611126500177)" rx="2" ry="2" />
<text  x="997.63" y="161.5" ></text>
</g>
<g >
<title>ParLoopExecute (1,206,998 us, 2.35%)</title><rect x="125.5" y="183" width="27.8" height="15.0" fill="rgb(150.844255919294,150.844255919294,123.322163301192)" rx="2" ry="2" />
<text  x="128.54" y="193.5" >P..</text>
</g>
<g >
<title>CreateFunctionSpace (45,796 us, 0.09%)</title><rect x="46.4" y="71" width="1.0" height="15.0" fill="rgb(135.854296960327,152.258521434159,152.258521434159)" rx="2" ry="2" />
<text  x="49.35" y="81.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (1,037,758 us, 2.02%)</title><rect x="995.5" y="183" width="23.8" height="15.0" fill="rgb(153.535085769717,153.535085769717,136.362338730168)" rx="2" ry="2" />
<text  x="998.50" y="193.5" >p..</text>
</g>
<g >
<title>firedrake.mesh.MeshTopology._facets (20,038 us, 0.04%)</title><rect x="46.9" y="135" width="0.5" height="15.0" fill="rgb(150.990531549008,150.990531549008,124.031037506731)" rx="2" ry="2" />
<text  x="49.94" y="145.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (10,809 us, 0.02%)</title><rect x="124.5" y="103" width="0.3" height="15.0" fill="rgb(152.976625877212,119.487465058622,119.487465058622)" rx="2" ry="2" />
<text  x="127.51" y="113.5" ></text>
</g>
<g >
<title>HybridBreak (1,215,607 us, 2.37%)</title><rect x="125.3" y="151" width="28.0" height="15.0" fill="rgb(130.170392697215,162.530401188826,130.170392697215)" rx="2" ry="2" />
<text  x="128.34" y="161.5" >H..</text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (45,796 us, 0.09%)</title><rect x="46.4" y="87" width="1.0" height="15.0" fill="rgb(147.067052539072,147.067052539072,155.883945652724)" rx="2" ry="2" />
<text  x="49.35" y="97.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (1,037,758 us, 2.02%)</title><rect x="995.5" y="167" width="23.8" height="15.0" fill="rgb(124.229994114667,163.497442818543,124.229994114667)" rx="2" ry="2" />
<text  x="998.50" y="177.5" >P..</text>
</g>
<g >
<title>Mesh: reorder (7,304 us, 0.01%)</title><rect x="47.9" y="87" width="0.2" height="15.0" fill="rgb(155.296793851367,137.275419527145,137.275419527145)" rx="2" ry="2" />
<text  x="50.89" y="97.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (1,206,998 us, 2.35%)</title><rect x="125.5" y="215" width="27.8" height="15.0" fill="rgb(149.529426669438,159.378930542185,149.529426669438)" rx="2" ry="2" />
<text  x="128.54" y="225.5" >p..</text>
</g>
<g >
<title>CreateExtMesh (1,581,660 us, 3.08%)</title><rect x="10.0" y="71" width="36.4" height="15.0" fill="rgb(156.126932422603,143.639815239954,143.639815239954)" rx="2" ry="2" />
<text  x="13.00" y="81.5" >Cr..</text>
</g>
<g >
<title>DMPlexInterp (15,480 us, 0.03%)</title><rect x="124.1" y="119" width="0.4" height="15.0" fill="rgb(156.149121668207,143.809932789589,143.809932789589)" rx="2" ry="2" />
<text  x="127.15" y="129.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (5,961 us, 0.01%)</title><rect x="994.6" y="167" width="0.2" height="15.0" fill="rgb(107.071218681934,144.796241880501,144.796241880501)" rx="2" ry="2" />
<text  x="997.63" y="177.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (45,796 us, 0.09%)</title><rect x="46.4" y="119" width="1.0" height="15.0" fill="rgb(132.707219547916,93.1872500915341,132.707219547916)" rx="2" ry="2" />
<text  x="49.35" y="129.5" ></text>
</g>
</g>
</svg>
