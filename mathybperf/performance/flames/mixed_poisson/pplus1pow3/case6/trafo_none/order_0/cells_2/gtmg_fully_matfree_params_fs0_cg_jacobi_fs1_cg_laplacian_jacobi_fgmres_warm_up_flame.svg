<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="283" onload="init(evt)" viewBox="0 0 1200 283" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:13px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:18px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 13 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (1 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="283.0" fill="url(#background)"  />
<text id="title" x="600.00" y="26" >Firedrake example</text>
<text id="details" x="10.00" y="265" > </text>
<text id="unzoom" x="10.00" y="26" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="26" >Search</text>
<text id="ignorecase" x="1174.00" y="26" >ic</text>
<text id="matched" x="1090.00" y="265" > </text>
<g id="frames">
<g >
<title>ParLoopExecute (751,271 us, 6.28%)</title><rect x="503.0" y="151" width="74.1" height="15.0" fill="rgb(155.490095076321,138.757395585128,138.757395585128)" rx="2" ry="2" />
<text  x="506.00" y="161.5" >ParLoop..</text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (1,564 us, 0.01%)</title><rect x="499.6" y="183" width="0.2" height="15.0" fill="rgb(148.529419304509,148.529419304509,112.104108937235)" rx="2" ry="2" />
<text  x="502.64" y="193.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_form0_cell_integral_otherwise (2,844,811 us, 23.77%)</title><rect x="577.7" y="135" width="280.5" height="15.0" fill="rgb(147.005116494766,159.789864756666,147.005116494766)" rx="2" ry="2" />
<text  x="580.65" y="145.5" >Parloop_Cells_wrap_form0_cell_inte..</text>
</g>
<g >
<title>firedrake.slate.slac.optimise.optimise (15,887 us, 0.13%)</title><rect x="495.0" y="167" width="1.6" height="15.0" fill="rgb(153.34922748406,153.34922748406,135.461640884291)" rx="2" ry="2" />
<text  x="498.05" y="177.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (1,465 us, 0.01%)</title><rect x="1189.9" y="167" width="0.1" height="15.0" fill="rgb(146.384043615988,159.890969643909,146.384043615988)" rx="2" ry="2" />
<text  x="1192.86" y="177.5" ></text>
</g>
<g >
<title>SCForwardElim (1,098,399 us, 9.18%)</title><rect x="388.3" y="135" width="108.3" height="15.0" fill="rgb(152.552354107627,152.552354107627,131.599869906192)" rx="2" ry="2" />
<text  x="391.30" y="145.5" >SCForwardElim</text>
</g>
<g >
<title>Parloop_Cells_wrap_pyop2_kernel_uniform_extrusion (1,140,846 us, 9.53%)</title><rect x="13.4" y="119" width="112.5" height="15.0" fill="rgb(121.49009870891,121.49009870891,150.933567492047)" rx="2" ry="2" />
<text  x="16.41" y="129.5" >Parloop_Cell..</text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (11,078 us, 0.09%)</title><rect x="500.2" y="151" width="1.1" height="15.0" fill="rgb(128.134405862753,128.134405862753,152.219562425049)" rx="2" ry="2" />
<text  x="503.25" y="161.5" ></text>
</g>
<g >
<title>firedrake.interpolation.make_interpolator (11,427 us, 0.10%)</title><rect x="501.3" y="135" width="1.2" height="15.0" fill="rgb(145.324022408127,160.063531235886,145.324022408127)" rx="2" ry="2" />
<text  x="504.34" y="145.5" ></text>
</g>
<g >
<title>firedrake.extrusion_utils.make_extruded_coords (1,172,859 us, 9.80%)</title><rect x="10.3" y="87" width="115.6" height="15.0" fill="rgb(134.717761658568,161.790131823024,134.717761658568)" rx="2" ry="2" />
<text  x="13.26" y="97.5" >firedrake.ext..</text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (18,768 us, 0.16%)</title><rect x="126.7" y="119" width="1.9" height="15.0" fill="rgb(152.274840061386,114.107107137295,114.107107137295)" rx="2" ry="2" />
<text  x="129.73" y="129.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (4,589 us, 0.04%)</title><rect x="499.8" y="151" width="0.4" height="15.0" fill="rgb(154.013974351766,154.013974351766,138.683106473943)" rx="2" ry="2" />
<text  x="502.79" y="161.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (6,675 us, 0.06%)</title><rect x="125.9" y="103" width="0.7" height="15.0" fill="rgb(154.455699404247,130.82702876589,130.82702876589)" rx="2" ry="2" />
<text  x="128.91" y="113.5" ></text>
</g>
<g >
<title>firedrake.matrix_free.operators.ImplicitMatrixContext.__init__ (6,941 us, 0.06%)</title><rect x="387.6" y="103" width="0.7" height="15.0" fill="rgb(108.191733755821,145.086745788546,145.086745788546)" rx="2" ry="2" />
<text  x="390.61" y="113.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (6,675 us, 0.06%)</title><rect x="125.9" y="119" width="0.7" height="15.0" fill="rgb(127.540173041093,162.958576481683,127.540173041093)" rx="2" ry="2" />
<text  x="128.91" y="129.5" ></text>
</g>
<g >
<title>firedrake.utility_meshes.RectangleMesh (2,853 us, 0.02%)</title><rect x="385.6" y="87" width="0.3" height="15.0" fill="rgb(136.749247853496,161.459424768036,136.749247853496)" rx="2" ry="2" />
<text  x="388.63" y="97.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalProblem.__init__ (11,010 us, 0.09%)</title><rect x="386.4" y="87" width="1.0" height="15.0" fill="rgb(124.33438437599,149.271877430812,149.271877430812)" rx="2" ry="2" />
<text  x="389.36" y="97.5" ></text>
</g>
<g >
<title>all (11,966,185 us, 100%)</title><rect x="10.0" y="39" width="1180.0" height="15.0" fill="rgb(124.658526589082,163.427681718056,124.658526589082)" rx="2" ry="2" />
<text  x="13.00" y="49.5" ></text>
</g>
<g >
<title>ParLoopExecute (1,140,846 us, 9.53%)</title><rect x="13.4" y="103" width="112.5" height="15.0" fill="rgb(152.631275408957,152.631275408957,131.982334674178)" rx="2" ry="2" />
<text  x="16.41" y="113.5" >ParLoopExecute</text>
</g>
<g >
<title>Parloop_Cells_wrap_form1_cell_integral_otherwise (2,388,490 us, 19.96%)</title><rect x="858.2" y="135" width="235.5" height="15.0" fill="rgb(136.533945187214,102.993234542235,136.533945187214)" rx="2" ry="2" />
<text  x="861.19" y="145.5" >Parloop_Cells_wrap_form1_cel..</text>
</g>
<g >
<title>firedrake.ufl_expr.action (4,399 us, 0.04%)</title><rect x="387.6" y="119" width="0.4" height="15.0" fill="rgb(150.431712649376,150.431712649376,121.322915146976)" rx="2" ry="2" />
<text  x="390.61" y="129.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (5,609 us, 0.05%)</title><rect x="1189.4" y="135" width="0.6" height="15.0" fill="rgb(108.056607137397,145.051712961547,145.051712961547)" rx="2" ry="2" />
<text  x="1192.45" y="145.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (2,213 us, 0.02%)</title><rect x="501.1" y="199" width="0.2" height="15.0" fill="rgb(126.252470534997,126.252470534997,151.855316877741)" rx="2" ry="2" />
<text  x="504.12" y="209.5" ></text>
</g>
<g >
<title>firedrake.assemble.allocate_matrix (6,941 us, 0.06%)</title><rect x="387.6" y="87" width="0.7" height="15.0" fill="rgb(135.769156705977,161.618974489725,135.769156705977)" rx="2" ry="2" />
<text  x="390.61" y="97.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (751,271 us, 6.28%)</title><rect x="503.0" y="167" width="74.1" height="15.0" fill="rgb(124.505765128843,124.505765128843,151.517244863647)" rx="2" ry="2" />
<text  x="506.00" y="177.5" >Parloop..</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (2,842,601 us, 23.76%)</title><rect x="577.9" y="151" width="280.3" height="15.0" fill="rgb(152.918705629315,119.043409824746,119.043409824746)" rx="2" ry="2" />
<text  x="580.87" y="161.5" >pyop2.global_kernel.GlobalKernel.c..</text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (2,213 us, 0.02%)</title><rect x="501.1" y="215" width="0.2" height="15.0" fill="rgb(141.851404938647,160.628841056499,141.851404938647)" rx="2" ry="2" />
<text  x="504.12" y="225.5" ></text>
</g>
<g >
<title>FunctionSpaceData: CreateElement (6,839 us, 0.06%)</title><rect x="127.6" y="135" width="0.7" height="15.0" fill="rgb(113.432396965438,113.432396965438,149.374012315891)" rx="2" ry="2" />
<text  x="130.58" y="145.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.LinearVariationalProblem.__init__ (15,556 us, 0.13%)</title><rect x="385.9" y="71" width="1.5" height="15.0" fill="rgb(149.458113934744,149.458113934744,116.604705991453)" rx="2" ry="2" />
<text  x="388.92" y="81.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.__init__ (8,613 us, 0.07%)</title><rect x="387.4" y="71" width="0.9" height="15.0" fill="rgb(125.699230151336,149.625726335532,149.625726335532)" rx="2" ry="2" />
<text  x="390.45" y="81.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (966,269 us, 8.07%)</title><rect x="388.8" y="199" width="95.3" height="15.0" fill="rgb(122.471829874144,148.788992930334,148.788992930334)" rx="2" ry="2" />
<text  x="391.85" y="209.5" >Parloop_Ce..</text>
</g>
<g >
<title>CreateMesh (2,834 us, 0.02%)</title><rect x="128.6" y="71" width="0.3" height="15.0" fill="rgb(138.971118854979,109.238492065884,138.971118854979)" rx="2" ry="2" />
<text  x="131.58" y="81.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (18,768 us, 0.16%)</title><rect x="126.7" y="103" width="1.9" height="15.0" fill="rgb(108.414387509691,108.414387509691,148.402784679295)" rx="2" ry="2" />
<text  x="129.73" y="113.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (9,422 us, 0.08%)</title><rect x="386.5" y="103" width="0.9" height="15.0" fill="rgb(143.760859417425,160.317999629721,143.760859417425)" rx="2" ry="2" />
<text  x="389.52" y="113.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (7,770 us, 0.06%)</title><rect x="500.6" y="167" width="0.7" height="15.0" fill="rgb(140.401756375341,112.904500711811,140.401756375341)" rx="2" ry="2" />
<text  x="503.57" y="177.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (5,369 us, 0.04%)</title><rect x="500.8" y="183" width="0.5" height="15.0" fill="rgb(137.415215803959,161.351011380751,137.415215803959)" rx="2" ry="2" />
<text  x="503.81" y="193.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (6,153 us, 0.05%)</title><rect x="499.6" y="135" width="0.6" height="15.0" fill="rgb(115.354696440503,115.354696440503,149.746070278807)" rx="2" ry="2" />
<text  x="502.64" y="145.5" ></text>
</g>
<g >
<title>firedrake.utility_meshes.SquareMesh (2,853 us, 0.02%)</title><rect x="385.6" y="71" width="0.3" height="15.0" fill="rgb(150.23847513841,150.23847513841,120.386456439987)" rx="2" ry="2" />
<text  x="388.63" y="81.5" ></text>
</g>
<g >
<title>PCSetUp (818,053 us, 6.84%)</title><rect x="496.6" y="103" width="80.7" height="15.0" fill="rgb(150.84320471638,139.660712085723,150.84320471638)" rx="2" ry="2" />
<text  x="499.61" y="113.5" >PCSetUp</text>
</g>
<g >
<title>firedrake (11,966,185 us, 100.00%)</title><rect x="10.0" y="55" width="1180.0" height="15.0" fill="rgb(155.925147412068,142.092796825856,142.092796825856)" rx="2" ry="2" />
<text  x="13.00" y="65.5" >firedrake</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (1,140,846 us, 9.53%)</title><rect x="13.4" y="135" width="112.5" height="15.0" fill="rgb(153.696691356929,125.007967069788,125.007967069788)" rx="2" ry="2" />
<text  x="16.41" y="145.5" >pyop2.global..</text>
</g>
<g >
<title>CreateFunctionSpace (1,564 us, 0.01%)</title><rect x="499.6" y="167" width="0.2" height="15.0" fill="rgb(134.013565120003,151.781294660742,151.781294660742)" rx="2" ry="2" />
<text  x="502.64" y="177.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (1,671 us, 0.01%)</title><rect x="496.4" y="183" width="0.2" height="15.0" fill="rgb(135.687540634256,161.632260826982,135.687540634256)" rx="2" ry="2" />
<text  x="499.45" y="193.5" ></text>
</g>
<g >
<title>firedrake.functionspace.MixedFunctionSpace (1,564 us, 0.01%)</title><rect x="499.6" y="151" width="0.2" height="15.0" fill="rgb(147.664069906438,131.514179135248,147.664069906438)" rx="2" ry="2" />
<text  x="502.64" y="161.5" ></text>
</g>
<g >
<title>SNESFunctionEval (6,213,462 us, 51.93%)</title><rect x="577.3" y="103" width="612.7" height="15.0" fill="rgb(135.319144530284,152.119778211555,152.119778211555)" rx="2" ry="2" />
<text  x="580.28" y="113.5" >SNESFunctionEval</text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (976,391 us, 8.16%)</title><rect x="1093.7" y="119" width="96.3" height="15.0" fill="rgb(155.55103363726,155.55103363726,146.131932242106)" rx="2" ry="2" />
<text  x="1096.72" y="129.5" >firedrake...</text>
</g>
<g >
<title>HybridBreak (971,829 us, 8.12%)</title><rect x="388.3" y="151" width="95.8" height="15.0" fill="rgb(153.410488081637,122.813741959219,122.813741959219)" rx="2" ry="2" />
<text  x="391.30" y="161.5" >HybridBreak</text>
</g>
<g >
<title>firedrake.mesh.MeshTopology._facets (3,291 us, 0.03%)</title><rect x="128.3" y="135" width="0.3" height="15.0" fill="rgb(156.506073397852,146.546562716868,146.546562716868)" rx="2" ry="2" />
<text  x="131.25" y="145.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (2,388,490 us, 19.96%)</title><rect x="858.2" y="151" width="235.5" height="15.0" fill="rgb(135.238799530053,152.09894802631,152.09894802631)" rx="2" ry="2" />
<text  x="861.19" y="161.5" >pyop2.global_kernel.GlobalKe..</text>
</g>
<g >
<title>FunctionSpaceData: CreateElement (4,589 us, 0.04%)</title><rect x="499.8" y="199" width="0.4" height="15.0" fill="rgb(148.785588677012,159.500020447928,148.785588677012)" rx="2" ry="2" />
<text  x="502.79" y="209.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (11,078 us, 0.09%)</title><rect x="500.2" y="135" width="1.1" height="15.0" fill="rgb(127.694554003187,150.143032519345,150.143032519345)" rx="2" ry="2" />
<text  x="503.25" y="145.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (751,271 us, 6.28%)</title><rect x="503.0" y="183" width="74.1" height="15.0" fill="rgb(120.314134903344,120.314134903344,150.705961594196)" rx="2" ry="2" />
<text  x="506.00" y="193.5" >pyop2.g..</text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (3,333 us, 0.03%)</title><rect x="1189.7" y="151" width="0.3" height="15.0" fill="rgb(124.179656624105,163.50563729375,124.179656624105)" rx="2" ry="2" />
<text  x="1192.67" y="161.5" ></text>
</g>
<g >
<title>ParLoopExecute (5,233,301 us, 43.73%)</title><rect x="577.7" y="119" width="516.0" height="15.0" fill="rgb(155.30673173696,137.351609983362,137.351609983362)" rx="2" ry="2" />
<text  x="580.65" y="129.5" >ParLoopExecute</text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (1,564 us, 0.01%)</title><rect x="499.6" y="199" width="0.2" height="15.0" fill="rgb(147.999313870859,147.999313870859,109.535136451087)" rx="2" ry="2" />
<text  x="502.64" y="209.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (6,675 us, 0.06%)</title><rect x="125.9" y="151" width="0.7" height="15.0" fill="rgb(152.267404564612,114.050101662027,114.050101662027)" rx="2" ry="2" />
<text  x="128.91" y="161.5" ></text>
</g>
<g >
<title>PCApply (1,098,399 us, 9.18%)</title><rect x="388.3" y="119" width="108.3" height="15.0" fill="rgb(135.191462975132,161.713017655211,135.191462975132)" rx="2" ry="2" />
<text  x="391.30" y="129.5" >PCApply</text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (2,542 us, 0.02%)</title><rect x="388.0" y="119" width="0.3" height="15.0" fill="rgb(136.269702184832,102.316111848632,136.269702184832)" rx="2" ry="2" />
<text  x="391.05" y="129.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (4,589 us, 0.04%)</title><rect x="499.8" y="183" width="0.4" height="15.0" fill="rgb(156.00387174284,142.69635002844,142.69635002844)" rx="2" ry="2" />
<text  x="502.79" y="193.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (6,675 us, 0.06%)</title><rect x="125.9" y="135" width="0.7" height="15.0" fill="rgb(148.843520136303,148.843520136303,113.626289891316)" rx="2" ry="2" />
<text  x="128.91" y="145.5" ></text>
</g>
<g >
<title>HybridInit (818,053 us, 6.84%)</title><rect x="496.6" y="119" width="80.7" height="15.0" fill="rgb(132.76713592038,132.76713592038,153.116219855557)" rx="2" ry="2" />
<text  x="499.61" y="129.5" >HybridInit</text>
</g>
<g >
<title>CreateExtMesh (1,182,136 us, 9.88%)</title><rect x="10.0" y="71" width="116.6" height="15.0" fill="rgb(144.907947088948,160.131264427381,144.907947088948)" rx="2" ry="2" />
<text  x="13.00" y="81.5" >CreateExtMesh</text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (4,589 us, 0.04%)</title><rect x="499.8" y="167" width="0.4" height="15.0" fill="rgb(115.121996019119,115.121996019119,149.701031487571)" rx="2" ry="2" />
<text  x="502.79" y="177.5" ></text>
</g>
<g >
<title>SNESSolve (8,129,914 us, 67.94%)</title><rect x="388.3" y="87" width="801.7" height="15.0" fill="rgb(149.515342801249,149.515342801249,116.882045882974)" rx="2" ry="2" />
<text  x="391.30" y="97.5" >SNESSolve</text>
</g>
<g >
<title>firedrake.functionspace.make_scalar_element (1,470 us, 0.01%)</title><rect x="501.0" y="199" width="0.1" height="15.0" fill="rgb(136.360623012386,102.549096469238,136.360623012386)" rx="2" ry="2" />
<text  x="503.98" y="209.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.action (4,546 us, 0.04%)</title><rect x="385.9" y="87" width="0.5" height="15.0" fill="rgb(148.156521179826,148.156521179826,110.296987256082)" rx="2" ry="2" />
<text  x="388.92" y="97.5" ></text>
</g>
<g >
<title>ParLoopExecute (966,269 us, 8.07%)</title><rect x="388.8" y="183" width="95.3" height="15.0" fill="rgb(112.686157368808,146.251966725247,146.251966725247)" rx="2" ry="2" />
<text  x="391.85" y="193.5" >ParLoopExe..</text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.solve (8,129,914 us, 67.94%)</title><rect x="388.3" y="71" width="801.7" height="15.0" fill="rgb(130.288547791811,150.815549427507,150.815549427507)" rx="2" ry="2" />
<text  x="391.30" y="81.5" >firedrake.variational_solver.NonlinearVariationalSolver.solve</text>
</g>
<g >
<title>HybridRHS (126,570 us, 1.06%)</title><rect x="484.1" y="151" width="12.5" height="15.0" fill="rgb(142.057689506857,153.866808390667,153.866808390667)" rx="2" ry="2" />
<text  x="487.13" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspace.VectorFunctionSpace (6,675 us, 0.06%)</title><rect x="125.9" y="87" width="0.7" height="15.0" fill="rgb(131.274415442377,162.350676555892,131.274415442377)" rx="2" ry="2" />
<text  x="128.91" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (1,564 us, 0.01%)</title><rect x="499.6" y="215" width="0.2" height="15.0" fill="rgb(148.677938975088,148.677938975088,112.823858110044)" rx="2" ry="2" />
<text  x="502.64" y="225.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (20,338 us, 0.17%)</title><rect x="126.6" y="71" width="2.0" height="15.0" fill="rgb(150.07295719988,150.07295719988,119.584331045571)" rx="2" ry="2" />
<text  x="129.57" y="81.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (2,050 us, 0.02%)</title><rect x="577.1" y="135" width="0.2" height="15.0" fill="rgb(153.664313131785,124.75973401035,124.75973401035)" rx="2" ry="2" />
<text  x="580.08" y="145.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (2,213 us, 0.02%)</title><rect x="501.1" y="231" width="0.2" height="15.0" fill="rgb(147.318642903565,159.738825573838,147.318642903565)" rx="2" ry="2" />
<text  x="504.12" y="241.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (966,269 us, 8.07%)</title><rect x="388.8" y="215" width="95.3" height="15.0" fill="rgb(149.087297082206,159.450905126152,149.087297082206)" rx="2" ry="2" />
<text  x="391.85" y="225.5" >pyop2.glob..</text>
</g>
<g >
<title>firedrake.__init__ (2,603,941 us, 21.76%)</title><rect x="128.9" y="71" width="256.7" height="15.0" fill="rgb(117.632291593258,117.632291593258,150.186895147082)" rx="2" ry="2" />
<text  x="131.86" y="81.5" >firedrake.__init__</text>
</g>
<g >
<title>Log_Event_form0_cell_integral_otherwise (2,210 us, 0.02%)</title><rect x="577.7" y="151" width="0.2" height="15.0" fill="rgb(132.269581343763,151.329150718753,151.329150718753)" rx="2" ry="2" />
<text  x="580.65" y="161.5" ></text>
</g>
<g >
<title>KSPSolve (1,098,399 us, 9.18%)</title><rect x="388.3" y="103" width="108.3" height="15.0" fill="rgb(114.361313702095,146.686266515358,146.686266515358)" rx="2" ry="2" />
<text  x="391.30" y="113.5" >KSPSolve</text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (18,768 us, 0.16%)</title><rect x="126.7" y="87" width="1.9" height="15.0" fill="rgb(124.531732001889,149.323041630119,149.323041630119)" rx="2" ry="2" />
<text  x="129.73" y="97.5" ></text>
</g>
<g >
<title>firedrake.parloops.par_loop (756,657 us, 6.32%)</title><rect x="502.5" y="135" width="74.6" height="15.0" fill="rgb(142.064333805487,117.164855376561,142.064333805487)" rx="2" ry="2" />
<text  x="505.47" y="145.5" >firedra..</text>
</g>
<g >
<title>firedrake.parloops.par_loop (971,829 us, 8.12%)</title><rect x="388.3" y="167" width="95.8" height="15.0" fill="rgb(135.776203356483,135.776203356483,153.698620004481)" rx="2" ry="2" />
<text  x="391.30" y="177.5" >firedrake...</text>
</g>
</g>
</svg>
