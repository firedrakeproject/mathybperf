<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="267" onload="init(evt)" viewBox="0 0 1200 267" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:13px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:18px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 13 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (1 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="267.0" fill="url(#background)"  />
<text id="title" x="600.00" y="26" >Firedrake example</text>
<text id="details" x="10.00" y="249" > </text>
<text id="unzoom" x="10.00" y="26" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="26" >Search</text>
<text id="ignorecase" x="1174.00" y="26" >ic</text>
<text id="matched" x="1090.00" y="249" > </text>
<g id="frames">
<g >
<title>Parloop_Cells_wrap_form0_cell_integral_otherwise (2,558,589 us, 5.92%)</title><rect x="1027.5" y="135" width="69.8" height="15.0" fill="rgb(138.154339720084,152.854828816318,152.854828816318)" rx="2" ry="2" />
<text  x="1030.45" y="145.5" >Parloop..</text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (5,866 us, 0.01%)</title><rect x="1004.4" y="151" width="0.1" height="15.0" fill="rgb(153.871349552859,126.347013238585,126.347013238585)" rx="2" ry="2" />
<text  x="1007.37" y="161.5" ></text>
</g>
<g >
<title>firedrake.__init__ (2,789,046 us, 6.45%)</title><rect x="47.1" y="71" width="76.1" height="15.0" fill="rgb(134.378822196789,97.4707318792725,134.378822196789)" rx="2" ry="2" />
<text  x="50.09" y="81.5" >firedra..</text>
</g>
<g >
<title>firedrake.utility_meshes.SquareMesh (46,121 us, 0.11%)</title><rect x="123.2" y="71" width="1.3" height="15.0" fill="rgb(156.263575502661,144.687412187069,144.687412187069)" rx="2" ry="2" />
<text  x="126.24" y="81.5" ></text>
</g>
<g >
<title>SNESFunctionEval (5,958,007 us, 13.79%)</title><rect x="1027.3" y="103" width="162.7" height="15.0" fill="rgb(154.219108230175,129.013163098012,129.013163098012)" rx="2" ry="2" />
<text  x="1030.31" y="113.5" >SNESFunctionEval</text>
</g>
<g >
<title>CreateMesh (22,158 us, 0.05%)</title><rect x="45.6" y="71" width="0.6" height="15.0" fill="rgb(118.056246569648,118.056246569648,150.268950948964)" rx="2" ry="2" />
<text  x="48.62" y="81.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_pyop2_kernel_uniform_extrusion (1,222,463 us, 2.83%)</title><rect x="10.9" y="119" width="33.4" height="15.0" fill="rgb(113.000300241332,146.333411173679,146.333411173679)" rx="2" ry="2" />
<text  x="13.89" y="129.5" >Pa..</text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (981,366 us, 2.27%)</title><rect x="126.1" y="199" width="26.8" height="15.0" fill="rgb(154.054819649442,154.054819649442,138.881049070375)" rx="2" ry="2" />
<text  x="129.10" y="209.5" >P..</text>
</g>
<g >
<title>firedrake.ufl_expr.action (7,537 us, 0.02%)</title><rect x="125.5" y="119" width="0.2" height="15.0" fill="rgb(141.506434121133,160.68499909656,141.506434121133)" rx="2" ry="2" />
<text  x="128.51" y="129.5" ></text>
</g>
<g >
<title>DMPlexInterp (14,341 us, 0.03%)</title><rect x="124.1" y="119" width="0.4" height="15.0" fill="rgb(150.944258702938,150.944258702938,123.806792175775)" rx="2" ry="2" />
<text  x="127.11" y="129.5" ></text>
</g>
<g >
<title>ParLoopExecute (981,366 us, 2.27%)</title><rect x="126.1" y="183" width="26.8" height="15.0" fill="rgb(156.648234721999,147.636466201989,147.636466201989)" rx="2" ry="2" />
<text  x="129.10" y="193.5" >P..</text>
</g>
<g >
<title>HybridRHS (31,138,884 us, 72.06%)</title><rect x="152.9" y="151" width="850.3" height="15.0" fill="rgb(151.081337335589,151.081337335589,124.471096318623)" rx="2" ry="2" />
<text  x="155.90" y="161.5" >HybridRHS</text>
</g>
<g >
<title>FunctionSpaceData: CreateElement (6,487 us, 0.02%)</title><rect x="45.0" y="135" width="0.1" height="15.0" fill="rgb(147.989400124903,147.989400124903,109.487092912994)" rx="2" ry="2" />
<text  x="47.95" y="145.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (1,222,463 us, 2.83%)</title><rect x="10.9" y="135" width="33.4" height="15.0" fill="rgb(153.681985080501,124.895218950509,124.895218950509)" rx="2" ry="2" />
<text  x="13.89" y="145.5" >py..</text>
</g>
<g >
<title>ParLoopExecute (1,222,463 us, 2.83%)</title><rect x="10.9" y="103" width="33.4" height="15.0" fill="rgb(132.756002906954,132.756002906954,153.114065078765)" rx="2" ry="2" />
<text  x="13.89" y="113.5" >Pa..</text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (39,887 us, 0.09%)</title><rect x="44.5" y="119" width="1.1" height="15.0" fill="rgb(126.564761465081,126.564761465081,151.915760283564)" rx="2" ry="2" />
<text  x="47.53" y="129.5" ></text>
</g>
<g >
<title>firedrake.extrusion_utils.make_extruded_coords (1,255,162 us, 2.90%)</title><rect x="10.0" y="87" width="34.3" height="15.0" fill="rgb(155.397638192958,138.048559479347,138.048559479347)" rx="2" ry="2" />
<text  x="13.00" y="97.5" >fi..</text>
</g>
<g >
<title>all (43,214,526 us, 100%)</title><rect x="10.0" y="39" width="1180.0" height="15.0" fill="rgb(137.125399088667,161.398190846031,137.125399088667)" rx="2" ry="2" />
<text  x="13.00" y="49.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (39,887 us, 0.09%)</title><rect x="44.5" y="103" width="1.1" height="15.0" fill="rgb(152.632769552278,116.85123323413,116.85123323413)" rx="2" ry="2" />
<text  x="47.53" y="113.5" ></text>
</g>
<g >
<title>CreateExtMesh (1,264,669 us, 2.93%)</title><rect x="10.0" y="71" width="34.5" height="15.0" fill="rgb(145.112961181074,160.09789004029,145.112961181074)" rx="2" ry="2" />
<text  x="13.00" y="81.5" >Cr..</text>
</g>
<g >
<title>PCSetUp (884,400 us, 2.05%)</title><rect x="1003.2" y="103" width="24.1" height="15.0" fill="rgb(146.712341796177,159.837525754111,146.712341796177)" rx="2" ry="2" />
<text  x="1006.16" y="113.5" >P..</text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (9,507 us, 0.02%)</title><rect x="44.3" y="135" width="0.2" height="15.0" fill="rgb(134.781166523919,151.980302432127,151.980302432127)" rx="2" ry="2" />
<text  x="47.27" y="145.5" ></text>
</g>
<g >
<title>ParLoopExecute (4,851,246 us, 11.23%)</title><rect x="1027.5" y="119" width="132.4" height="15.0" fill="rgb(154.880677776274,134.085196284766,134.085196284766)" rx="2" ry="2" />
<text  x="1030.45" y="129.5" >ParLoopExecute</text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (7,300 us, 0.02%)</title><rect x="1004.5" y="151" width="0.2" height="15.0" fill="rgb(131.401333199558,131.401333199558,152.85187094185)" rx="2" ry="2" />
<text  x="1007.53" y="161.5" ></text>
</g>
<g >
<title>Mesh: numbering (6,289 us, 0.01%)</title><rect x="45.9" y="87" width="0.2" height="15.0" fill="rgb(124.241624841206,124.241624841206,151.466120937008)" rx="2" ry="2" />
<text  x="48.90" y="97.5" ></text>
</g>
<g >
<title>PCApply (32,128,514 us, 74.35%)</title><rect x="125.9" y="119" width="877.3" height="15.0" fill="rgb(145.192932692668,160.084871422124,145.192932692668)" rx="2" ry="2" />
<text  x="128.87" y="129.5" >PCApply</text>
</g>
<g >
<title>HybridBreak (989,630 us, 2.29%)</title><rect x="125.9" y="151" width="27.0" height="15.0" fill="rgb(125.948732906035,163.217648131576,125.948732906035)" rx="2" ry="2" />
<text  x="128.87" y="161.5" >H..</text>
</g>
<g >
<title>ParLoopExecute (809,259 us, 1.87%)</title><rect x="1005.2" y="151" width="22.1" height="15.0" fill="rgb(155.756881423122,155.756881423122,147.129502281283)" rx="2" ry="2" />
<text  x="1008.22" y="161.5" ></text>
</g>
<g >
<title>firedrake.assemble.allocate_matrix (13,445 us, 0.03%)</title><rect x="125.5" y="87" width="0.4" height="15.0" fill="rgb(156.540093623704,146.807384448399,146.807384448399)" rx="2" ry="2" />
<text  x="128.51" y="97.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.solve (38,970,921 us, 90.18%)</title><rect x="125.9" y="71" width="1064.1" height="15.0" fill="rgb(133.928376804145,96.3164655606214,133.928376804145)" rx="2" ry="2" />
<text  x="128.87" y="81.5" >firedrake.variational_solver.NonlinearVariationalSolver.solve</text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (9,507 us, 0.02%)</title><rect x="44.3" y="151" width="0.2" height="15.0" fill="rgb(149.222987802253,149.222987802253,115.465248580149)" rx="2" ry="2" />
<text  x="47.27" y="161.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (981,366 us, 2.27%)</title><rect x="126.1" y="215" width="26.8" height="15.0" fill="rgb(154.582938018984,154.582938018984,141.440391938155)" rx="2" ry="2" />
<text  x="129.10" y="225.5" >p..</text>
</g>
<g >
<title>CreateFunctionSpace (10,632 us, 0.02%)</title><rect x="1004.2" y="135" width="0.3" height="15.0" fill="rgb(153.121338805332,120.596930840878,120.596930840878)" rx="2" ry="2" />
<text  x="1007.24" y="145.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (39,887 us, 0.09%)</title><rect x="44.5" y="87" width="1.1" height="15.0" fill="rgb(146.178929925062,154.93527812872,154.93527812872)" rx="2" ry="2" />
<text  x="47.53" y="97.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.LinearVariationalProblem.__init__ (14,609 us, 0.03%)</title><rect x="124.5" y="71" width="0.4" height="15.0" fill="rgb(121.381292263503,121.381292263503,150.912508180033)" rx="2" ry="2" />
<text  x="127.50" y="81.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (7,300 us, 0.02%)</title><rect x="1004.5" y="167" width="0.2" height="15.0" fill="rgb(143.004295859815,154.112224852545,154.112224852545)" rx="2" ry="2" />
<text  x="1007.53" y="177.5" ></text>
</g>
<g >
<title>firedrake (43,214,526 us, 100.00%)</title><rect x="10.0" y="55" width="1180.0" height="15.0" fill="rgb(156.744609657628,148.375340708478,148.375340708478)" rx="2" ry="2" />
<text  x="13.00" y="65.5" >firedrake</text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (1,101,705 us, 2.55%)</title><rect x="1159.9" y="119" width="30.1" height="15.0" fill="rgb(126.658124996779,163.102165698199,126.658124996779)" rx="2" ry="2" />
<text  x="1162.92" y="129.5" >f..</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (809,259 us, 1.87%)</title><rect x="1005.2" y="183" width="22.1" height="15.0" fill="rgb(149.257215735514,159.423243950033,149.257215735514)" rx="2" ry="2" />
<text  x="1008.22" y="193.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_form1_cell_integral_otherwise (2,292,657 us, 5.31%)</title><rect x="1097.3" y="135" width="62.6" height="15.0" fill="rgb(155.512646720462,138.930291523545,138.930291523545)" rx="2" ry="2" />
<text  x="1100.31" y="145.5" >Parloo..</text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.__init__ (35,599 us, 0.08%)</title><rect x="124.9" y="71" width="1.0" height="15.0" fill="rgb(115.703753076734,115.703753076734,149.813629627755)" rx="2" ry="2" />
<text  x="127.90" y="81.5" ></text>
</g>
<g >
<title>firedrake.slate.slac.optimise.optimise (33,622 us, 0.08%)</title><rect x="416.3" y="167" width="0.9" height="15.0" fill="rgb(153.331564514817,153.331564514817,135.376043417959)" rx="2" ry="2" />
<text  x="419.29" y="177.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (2,292,657 us, 5.31%)</title><rect x="1097.3" y="151" width="62.6" height="15.0" fill="rgb(139.599289656337,110.848179744364,139.599289656337)" rx="2" ry="2" />
<text  x="1100.31" y="161.5" >pyop2...</text>
</g>
<g >
<title>firedrake.ufl_expr.action (4,664 us, 0.01%)</title><rect x="124.5" y="87" width="0.1" height="15.0" fill="rgb(154.207458853823,128.923851212643,128.923851212643)" rx="2" ry="2" />
<text  x="127.50" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (9,507 us, 0.02%)</title><rect x="44.3" y="119" width="0.2" height="15.0" fill="rgb(133.837093419147,151.735542738297,151.735542738297)" rx="2" ry="2" />
<text  x="47.27" y="129.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (9,507 us, 0.02%)</title><rect x="44.3" y="103" width="0.2" height="15.0" fill="rgb(143.102142489783,160.425232617942,143.102142489783)" rx="2" ry="2" />
<text  x="47.27" y="113.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (2,552,676 us, 5.91%)</title><rect x="1027.6" y="151" width="69.7" height="15.0" fill="rgb(150.493923759458,159.221919387995,150.493923759458)" rx="2" ry="2" />
<text  x="1030.61" y="161.5" >pyop2.g..</text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (5,497 us, 0.01%)</title><rect x="1189.8" y="151" width="0.2" height="15.0" fill="rgb(153.519219851685,153.519219851685,136.285450050475)" rx="2" ry="2" />
<text  x="1192.85" y="161.5" ></text>
</g>
<g >
<title>PetscBarrier (31,516 us, 0.07%)</title><rect x="46.2" y="71" width="0.9" height="15.0" fill="rgb(143.943424019385,121.980024049675,143.943424019385)" rx="2" ry="2" />
<text  x="49.23" y="81.5" ></text>
</g>
<g >
<title>CreateMesh (5,475 us, 0.01%)</title><rect x="45.8" y="87" width="0.1" height="15.0" fill="rgb(156.594921690483,147.227732960366,147.227732960366)" rx="2" ry="2" />
<text  x="48.75" y="97.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (5,908 us, 0.01%)</title><rect x="125.7" y="119" width="0.2" height="15.0" fill="rgb(108.729223517287,108.729223517287,148.463720680765)" rx="2" ry="2" />
<text  x="128.71" y="129.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (809,259 us, 1.87%)</title><rect x="1005.2" y="167" width="22.1" height="15.0" fill="rgb(151.05976255314,140.21564154242,151.05976255314)" rx="2" ry="2" />
<text  x="1008.22" y="177.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (5,866 us, 0.01%)</title><rect x="1004.4" y="167" width="0.1" height="15.0" fill="rgb(155.905316948352,141.940763270702,141.940763270702)" rx="2" ry="2" />
<text  x="1007.37" y="177.5" ></text>
</g>
<g >
<title>firedrake.mesh.MeshTopology._facets (18,069 us, 0.04%)</title><rect x="45.1" y="135" width="0.5" height="15.0" fill="rgb(111.520965577462,111.520965577462,149.004057853702)" rx="2" ry="2" />
<text  x="48.13" y="145.5" ></text>
</g>
<g >
<title>firedrake.parloops.par_loop (989,630 us, 2.29%)</title><rect x="125.9" y="167" width="27.0" height="15.0" fill="rgb(150.670379005265,150.670379005265,122.479529025517)" rx="2" ry="2" />
<text  x="128.87" y="177.5" >f..</text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalProblem.__init__ (9,945 us, 0.02%)</title><rect x="124.6" y="87" width="0.3" height="15.0" fill="rgb(154.330744086809,129.869037998868,129.869037998868)" rx="2" ry="2" />
<text  x="127.63" y="97.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (7,300 us, 0.02%)</title><rect x="1004.5" y="135" width="0.2" height="15.0" fill="rgb(129.932584508164,150.723262650265,150.723262650265)" rx="2" ry="2" />
<text  x="1007.53" y="145.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (5,866 us, 0.01%)</title><rect x="1004.4" y="183" width="0.1" height="15.0" fill="rgb(131.751922894298,151.194942972596,151.194942972596)" rx="2" ry="2" />
<text  x="1007.37" y="193.5" ></text>
</g>
<g >
<title>Mesh: reorder (5,652 us, 0.01%)</title><rect x="46.1" y="87" width="0.1" height="15.0" fill="rgb(145.005968503082,124.702794289146,145.005968503082)" rx="2" ry="2" />
<text  x="49.07" y="97.5" ></text>
</g>
<g >
<title>firedrake.mesh._from_cell_list (34,531 us, 0.08%)</title><rect x="123.6" y="103" width="0.9" height="15.0" fill="rgb(115.095343981775,146.876570661942,146.876570661942)" rx="2" ry="2" />
<text  x="126.56" y="113.5" ></text>
</g>
<g >
<title>firedrake.functionspace.VectorFunctionSpace (9,507 us, 0.02%)</title><rect x="44.3" y="87" width="0.2" height="15.0" fill="rgb(148.387982288065,159.564747069385,148.387982288065)" rx="2" ry="2" />
<text  x="47.27" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspace.MixedFunctionSpace (4,766 us, 0.01%)</title><rect x="1004.2" y="151" width="0.2" height="15.0" fill="rgb(130.593547591146,130.593547591146,152.695525340222)" rx="2" ry="2" />
<text  x="1007.24" y="161.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (39,887 us, 0.09%)</title><rect x="44.5" y="71" width="1.1" height="15.0" fill="rgb(154.623502698176,132.113520686017,132.113520686017)" rx="2" ry="2" />
<text  x="47.53" y="81.5" ></text>
</g>
<g >
<title>SNESSolve (38,970,921 us, 90.18%)</title><rect x="125.9" y="87" width="1064.1" height="15.0" fill="rgb(108.028308199736,145.044376199932,145.044376199932)" rx="2" ry="2" />
<text  x="128.87" y="97.5" >SNESSolve</text>
</g>
<g >
<title>firedrake.interpolation.make_interpolator (11,445 us, 0.03%)</title><rect x="1004.7" y="135" width="0.3" height="15.0" fill="rgb(147.206448206874,159.757089826788,147.206448206874)" rx="2" ry="2" />
<text  x="1007.73" y="145.5" ></text>
</g>
<g >
<title>HybridInit (884,400 us, 2.05%)</title><rect x="1003.2" y="119" width="24.1" height="15.0" fill="rgb(127.730440530151,127.730440530151,152.141375586481)" rx="2" ry="2" />
<text  x="1006.16" y="129.5" >H..</text>
</g>
<g >
<title>KSPSolve (32,128,514 us, 74.35%)</title><rect x="125.9" y="103" width="877.3" height="15.0" fill="rgb(156.293453028391,144.916473217664,144.916473217664)" rx="2" ry="2" />
<text  x="128.87" y="113.5" >KSPSolve</text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (21,459,134 us, 49.66%)</title><rect x="417.2" y="167" width="586.0" height="15.0" fill="rgb(155.797352462044,141.113035542335,141.113035542335)" rx="2" ry="2" />
<text  x="420.21" y="177.5" >firedrake.tsfc_interface.compile_form</text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (9,945 us, 0.02%)</title><rect x="124.6" y="103" width="0.3" height="15.0" fill="rgb(152.056911082119,112.436318296245,112.436318296245)" rx="2" ry="2" />
<text  x="127.63" y="113.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (7,300 us, 0.02%)</title><rect x="1004.5" y="183" width="0.2" height="15.0" fill="rgb(148.053925449562,148.053925449562,109.799792563262)" rx="2" ry="2" />
<text  x="1007.53" y="193.5" ></text>
</g>
<g >
<title>DMPlexBuFrCeLi (5,755 us, 0.01%)</title><rect x="124.0" y="119" width="0.1" height="15.0" fill="rgb(153.052467244753,120.068915543107,120.068915543107)" rx="2" ry="2" />
<text  x="126.95" y="129.5" ></text>
</g>
<g >
<title>firedrake.utility_meshes.RectangleMesh (46,121 us, 0.11%)</title><rect x="123.2" y="87" width="1.3" height="15.0" fill="rgb(151.102019758888,151.102019758888,124.571326523843)" rx="2" ry="2" />
<text  x="126.24" y="97.5" ></text>
</g>
<g >
<title>SCForwardElim (32,128,514 us, 74.35%)</title><rect x="125.9" y="135" width="877.3" height="15.0" fill="rgb(155.157415513908,136.206852273297,136.206852273297)" rx="2" ry="2" />
<text  x="128.87" y="145.5" >SCForwardElim</text>
</g>
<g >
<title>DMPlexStratify (5,755 us, 0.01%)</title><rect x="124.0" y="135" width="0.1" height="15.0" fill="rgb(155.128167570365,135.982618039464,135.982618039464)" rx="2" ry="2" />
<text  x="126.95" y="145.5" ></text>
</g>
<g >
<title>firedrake.matrix_free.operators.ImplicitMatrixContext.__init__ (13,445 us, 0.03%)</title><rect x="125.5" y="103" width="0.4" height="15.0" fill="rgb(130.892144417694,130.892144417694,152.753318274392)" rx="2" ry="2" />
<text  x="128.51" y="113.5" ></text>
</g>
<g >
<title>firedrake.parloops.par_loop (815,620 us, 1.89%)</title><rect x="1005.0" y="135" width="22.3" height="15.0" fill="rgb(150.627966905259,150.627966905259,122.27399346395)" rx="2" ry="2" />
<text  x="1008.04" y="145.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (10,168 us, 0.02%)</title><rect x="1189.7" y="135" width="0.3" height="15.0" fill="rgb(132.94064731099,132.94064731099,153.149802705353)" rx="2" ry="2" />
<text  x="1192.72" y="145.5" ></text>
</g>
</g>
</svg>
