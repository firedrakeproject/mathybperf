<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="283" onload="init(evt)" viewBox="0 0 1200 283" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:13px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:18px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 13 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (1 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="283.0" fill="url(#background)"  />
<text id="title" x="600.00" y="26" >Firedrake example</text>
<text id="details" x="10.00" y="265" > </text>
<text id="unzoom" x="10.00" y="26" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="26" >Search</text>
<text id="ignorecase" x="1174.00" y="26" >ic</text>
<text id="matched" x="1090.00" y="265" > </text>
<g id="frames">
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (2,137 us, 0.02%)</title><rect x="429.4" y="231" width="0.3" height="15.0" fill="rgb(152.432219220222,152.432219220222,131.017677759539)" rx="2" ry="2" />
<text  x="432.44" y="241.5" ></text>
</g>
<g >
<title>all (10,915,296 us, 100%)</title><rect x="10.0" y="39" width="1180.0" height="15.0" fill="rgb(141.825598418385,141.825598418385,154.869470661623)" rx="2" ry="2" />
<text  x="13.00" y="49.5" ></text>
</g>
<g >
<title>firedrake.functionspace.make_scalar_element (1,362 us, 0.01%)</title><rect x="429.3" y="199" width="0.1" height="15.0" fill="rgb(130.632072596457,130.632072596457,152.702981792863)" rx="2" ry="2" />
<text  x="432.29" y="209.5" ></text>
</g>
<g >
<title>firedrake.utility_meshes.SquareMesh (1,805 us, 0.02%)</title><rect x="304.3" y="71" width="0.2" height="15.0" fill="rgb(106.871336982305,144.744420699116,144.744420699116)" rx="2" ry="2" />
<text  x="307.30" y="81.5" ></text>
</g>
<g >
<title>firedrake (10,915,296 us, 100.00%)</title><rect x="10.0" y="55" width="1180.0" height="15.0" fill="rgb(139.691270457489,153.253292340831,153.253292340831)" rx="2" ry="2" />
<text  x="13.00" y="65.5" >firedrake</text>
</g>
<g >
<title>HybridRHS (126,387 us, 1.16%)</title><rect x="410.9" y="151" width="13.7" height="15.0" fill="rgb(125.148528474479,149.482951826717,149.482951826717)" rx="2" ry="2" />
<text  x="413.94" y="161.5" ></text>
</g>
<g >
<title>KSPSolve (1,086,322 us, 9.95%)</title><rect x="307.2" y="103" width="117.4" height="15.0" fill="rgb(125.575057513197,149.593533429347,149.593533429347)" rx="2" ry="2" />
<text  x="310.16" y="113.5" >KSPSolve</text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (4,294 us, 0.04%)</title><rect x="428.1" y="183" width="0.4" height="15.0" fill="rgb(154.58303048195,154.58303048195,141.440840027912)" rx="2" ry="2" />
<text  x="431.07" y="193.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (1,699 us, 0.02%)</title><rect x="427.9" y="183" width="0.2" height="15.0" fill="rgb(126.70130156815,163.095136954022,126.70130156815)" rx="2" ry="2" />
<text  x="430.89" y="193.5" ></text>
</g>
<g >
<title>ParLoopExecute (954,042 us, 8.74%)</title><rect x="307.8" y="183" width="103.1" height="15.0" fill="rgb(138.159376344717,152.85613460789,152.85613460789)" rx="2" ry="2" />
<text  x="310.80" y="193.5" >ParLoopExec..</text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (10,465 us, 0.10%)</title><rect x="428.5" y="135" width="1.2" height="15.0" fill="rgb(151.009808927065,159.137938081641,151.009808927065)" rx="2" ry="2" />
<text  x="431.54" y="145.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (2,778 us, 0.03%)</title><rect x="306.9" y="119" width="0.3" height="15.0" fill="rgb(154.33515538108,129.902857921615,129.902857921615)" rx="2" ry="2" />
<text  x="309.86" y="129.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (2,137 us, 0.02%)</title><rect x="429.4" y="199" width="0.3" height="15.0" fill="rgb(119.1317968294,147.923058437252,147.923058437252)" rx="2" ry="2" />
<text  x="432.44" y="209.5" ></text>
</g>
<g >
<title>CreateMesh (1,663 us, 0.02%)</title><rect x="129.1" y="71" width="0.2" height="15.0" fill="rgb(130.669208031192,162.449198692597,130.669208031192)" rx="2" ry="2" />
<text  x="132.11" y="81.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.action (4,456 us, 0.04%)</title><rect x="306.4" y="119" width="0.5" height="15.0" fill="rgb(141.005423960293,141.005423960293,154.710727218121)" rx="2" ry="2" />
<text  x="309.38" y="129.5" ></text>
</g>
<g >
<title>SNESFunctionEval (6,183,229 us, 56.65%)</title><rect x="521.6" y="103" width="668.4" height="15.0" fill="rgb(127.979711223356,127.979711223356,152.189621527101)" rx="2" ry="2" />
<text  x="524.56" y="113.5" >SNESFunctionEval</text>
</g>
<g >
<title>firedrake.slate.slac.optimise.optimise (16,323 us, 0.15%)</title><rect x="422.8" y="167" width="1.8" height="15.0" fill="rgb(134.042809689224,151.788876586095,151.788876586095)" rx="2" ry="2" />
<text  x="425.84" y="177.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (5,487 us, 0.05%)</title><rect x="1189.4" y="135" width="0.6" height="15.0" fill="rgb(112.785798054157,112.785798054157,149.248864139514)" rx="2" ry="2" />
<text  x="1192.41" y="145.5" ></text>
</g>
<g >
<title>HybridInit (896,904 us, 8.22%)</title><rect x="424.6" y="119" width="97.0" height="15.0" fill="rgb(134.304263609019,134.304263609019,153.413728440455)" rx="2" ry="2" />
<text  x="427.60" y="129.5" >HybridInit</text>
</g>
<g >
<title>firedrake.utility_meshes.RectangleMesh (1,805 us, 0.02%)</title><rect x="304.3" y="87" width="0.2" height="15.0" fill="rgb(135.979687613996,135.979687613996,153.738004054322)" rx="2" ry="2" />
<text  x="307.30" y="97.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (830,318 us, 7.61%)</title><rect x="431.6" y="167" width="89.7" height="15.0" fill="rgb(132.64880778511,93.0375699493435,132.64880778511)" rx="2" ry="2" />
<text  x="434.58" y="177.5" >Parloop_C..</text>
</g>
<g >
<title>ParLoopExecute (5,180,616 us, 47.46%)</title><rect x="522.0" y="119" width="560.1" height="15.0" fill="rgb(140.243011713012,140.243011713012,154.563163557357)" rx="2" ry="2" />
<text  x="525.04" y="129.5" >ParLoopExecute</text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (16,358 us, 0.15%)</title><rect x="127.3" y="103" width="1.8" height="15.0" fill="rgb(134.810615855498,134.810615855498,153.511732101064)" rx="2" ry="2" />
<text  x="130.34" y="113.5" ></text>
</g>
<g >
<title>firedrake.matrix_free.operators.ImplicitMatrixContext.__init__ (7,234 us, 0.07%)</title><rect x="306.4" y="103" width="0.8" height="15.0" fill="rgb(153.887637151612,126.471884829022,126.471884829022)" rx="2" ry="2" />
<text  x="309.38" y="113.5" ></text>
</g>
<g >
<title>SCForwardElim (1,086,322 us, 9.95%)</title><rect x="307.2" y="135" width="117.4" height="15.0" fill="rgb(151.352619324096,140.966087017995,151.352619324096)" rx="2" ry="2" />
<text  x="310.16" y="145.5" >SCForwardElim</text>
</g>
<g >
<title>firedrake.functionspace.MixedFunctionSpace (1,734 us, 0.02%)</title><rect x="304.1" y="71" width="0.2" height="15.0" fill="rgb(155.015024297442,135.115186280387,135.115186280387)" rx="2" ry="2" />
<text  x="307.11" y="81.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (2,428,523 us, 22.25%)</title><rect x="819.6" y="151" width="262.5" height="15.0" fill="rgb(140.343170378315,153.422303431415,153.422303431415)" rx="2" ry="2" />
<text  x="822.55" y="161.5" >pyop2.global_kernel.GlobalKernel..</text>
</g>
<g >
<title>CreateFunctionSpace (1,699 us, 0.02%)</title><rect x="427.9" y="167" width="0.2" height="15.0" fill="rgb(134.235819496285,161.868587523861,134.235819496285)" rx="2" ry="2" />
<text  x="430.89" y="177.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.solve (8,166,455 us, 74.82%)</title><rect x="307.2" y="71" width="882.8" height="15.0" fill="rgb(134.144446632587,161.883462176091,134.144446632587)" rx="2" ry="2" />
<text  x="310.16" y="81.5" >firedrake.variational_solver.NonlinearVariationalSolver.solve</text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (9,402 us, 0.09%)</title><rect x="305.2" y="103" width="1.0" height="15.0" fill="rgb(113.688965880318,113.688965880318,149.423670815545)" rx="2" ry="2" />
<text  x="308.20" y="113.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.action (5,002 us, 0.05%)</title><rect x="304.5" y="87" width="0.5" height="15.0" fill="rgb(136.146795571671,152.33435440747,152.33435440747)" rx="2" ry="2" />
<text  x="307.49" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (1,699 us, 0.02%)</title><rect x="427.9" y="215" width="0.2" height="15.0" fill="rgb(155.245134197665,136.879362182095,136.879362182095)" rx="2" ry="2" />
<text  x="430.89" y="225.5" ></text>
</g>
<g >
<title>firedrake.__init__ (1,617,138 us, 14.82%)</title><rect x="129.3" y="71" width="174.8" height="15.0" fill="rgb(147.940039347703,159.637668013165,147.940039347703)" rx="2" ry="2" />
<text  x="132.29" y="81.5" >firedrake.__init__</text>
</g>
<g >
<title>firedrake.parloops.par_loop (836,761 us, 7.67%)</title><rect x="430.9" y="135" width="90.4" height="15.0" fill="rgb(150.12701745523,150.12701745523,119.846315359961)" rx="2" ry="2" />
<text  x="433.88" y="145.5" >firedrake..</text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (10,465 us, 0.10%)</title><rect x="428.5" y="151" width="1.2" height="15.0" fill="rgb(142.024734766491,160.600624572897,142.024734766491)" rx="2" ry="2" />
<text  x="431.54" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (4,294 us, 0.04%)</title><rect x="428.1" y="167" width="0.4" height="15.0" fill="rgb(151.929991816571,142.445604029963,151.929991816571)" rx="2" ry="2" />
<text  x="431.07" y="177.5" ></text>
</g>
<g >
<title>firedrake.assemble.allocate_matrix (7,234 us, 0.07%)</title><rect x="306.4" y="87" width="0.8" height="15.0" fill="rgb(154.435986281234,130.675894822792,130.675894822792)" rx="2" ry="2" />
<text  x="309.38" y="97.5" ></text>
</g>
<g >
<title>firedrake.interpolation.make_interpolator (11,239 us, 0.10%)</title><rect x="429.7" y="135" width="1.2" height="15.0" fill="rgb(125.506788125989,163.289592630653,125.506788125989)" rx="2" ry="2" />
<text  x="432.67" y="145.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (6,418 us, 0.06%)</title><rect x="126.5" y="119" width="0.7" height="15.0" fill="rgb(155.943664178703,142.234758703388,142.234758703388)" rx="2" ry="2" />
<text  x="129.48" y="129.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (7,278 us, 0.07%)</title><rect x="427.8" y="135" width="0.7" height="15.0" fill="rgb(133.351417147662,162.012559999218,133.351417147662)" rx="2" ry="2" />
<text  x="430.75" y="145.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (954,042 us, 8.74%)</title><rect x="307.8" y="215" width="103.1" height="15.0" fill="rgb(104.813854356095,144.210999277506,144.210999277506)" rx="2" ry="2" />
<text  x="310.80" y="225.5" >pyop2.globa..</text>
</g>
<g >
<title>CreateFunctionSpace (17,904 us, 0.16%)</title><rect x="127.2" y="71" width="1.9" height="15.0" fill="rgb(138.132015737989,152.849041117256,152.849041117256)" rx="2" ry="2" />
<text  x="130.17" y="81.5" ></text>
</g>
<g >
<title>CreateExtMesh (1,083,886 us, 9.93%)</title><rect x="10.0" y="71" width="117.2" height="15.0" fill="rgb(154.949523499575,154.949523499575,143.216921574862)" rx="2" ry="2" />
<text  x="13.00" y="81.5" >CreateExtMesh</text>
</g>
<g >
<title>firedrake.functionspace.VectorFunctionSpace (6,418 us, 0.06%)</title><rect x="126.5" y="87" width="0.7" height="15.0" fill="rgb(144.568831232404,160.18646933426,144.568831232404)" rx="2" ry="2" />
<text  x="129.48" y="97.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (5,103 us, 0.05%)</title><rect x="429.1" y="183" width="0.6" height="15.0" fill="rgb(129.657486547142,162.613897538837,129.657486547142)" rx="2" ry="2" />
<text  x="432.12" y="193.5" ></text>
</g>
<g >
<title>PCApply (1,086,322 us, 9.95%)</title><rect x="307.2" y="119" width="117.4" height="15.0" fill="rgb(147.726070450793,147.726070450793,156.011497506605)" rx="2" ry="2" />
<text  x="310.16" y="129.5" >PCApply</text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (1,428 us, 0.01%)</title><rect x="1189.8" y="167" width="0.2" height="15.0" fill="rgb(155.104763538304,135.803187126999,135.803187126999)" rx="2" ry="2" />
<text  x="1192.85" y="177.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (954,042 us, 8.74%)</title><rect x="307.8" y="199" width="103.1" height="15.0" fill="rgb(155.596942668749,155.596942668749,146.354414471628)" rx="2" ry="2" />
<text  x="310.80" y="209.5" >Parloop_Cel..</text>
</g>
<g >
<title>ParLoopExecute (1,041,842 us, 9.54%)</title><rect x="13.9" y="103" width="112.6" height="15.0" fill="rgb(131.231235350306,131.231235350306,152.818948777479)" rx="2" ry="2" />
<text  x="16.85" y="113.5" >ParLoopExecute</text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (2,017 us, 0.02%)</title><rect x="521.3" y="135" width="0.3" height="15.0" fill="rgb(150.258739032992,150.258739032992,120.484658390654)" rx="2" ry="2" />
<text  x="524.34" y="145.5" ></text>
</g>
<g >
<title>firedrake.function.Function.__init__ (1,322 us, 0.01%)</title><rect x="424.5" y="183" width="0.1" height="15.0" fill="rgb(148.178730185247,148.178730185247,110.404615513119)" rx="2" ry="2" />
<text  x="427.46" y="193.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (830,318 us, 7.61%)</title><rect x="431.6" y="183" width="89.7" height="15.0" fill="rgb(155.089215377214,135.683984558643,135.683984558643)" rx="2" ry="2" />
<text  x="434.58" y="193.5" >pyop2.glo..</text>
</g>
<g >
<title>Parloop_Cells_wrap_form1_cell_integral_otherwise (2,428,523 us, 22.25%)</title><rect x="819.6" y="135" width="262.5" height="15.0" fill="rgb(134.470092422273,161.830450070793,134.470092422273)" rx="2" ry="2" />
<text  x="822.55" y="145.5" >Parloop_Cells_wrap_form1_cell_in..</text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.__init__ (8,777 us, 0.08%)</title><rect x="306.2" y="71" width="1.0" height="15.0" fill="rgb(131.625425860008,151.162147445187,151.162147445187)" rx="2" ry="2" />
<text  x="309.22" y="81.5" ></text>
</g>
<g >
<title>firedrake.functionspace.MixedFunctionSpace (2,984 us, 0.03%)</title><rect x="427.8" y="151" width="0.3" height="15.0" fill="rgb(132.922624789138,151.498458278665,151.498458278665)" rx="2" ry="2" />
<text  x="430.75" y="161.5" ></text>
</g>
<g >
<title>SNESSolve (8,166,455 us, 74.82%)</title><rect x="307.2" y="87" width="882.8" height="15.0" fill="rgb(136.182421971043,161.5516987489,136.182421971043)" rx="2" ry="2" />
<text  x="310.16" y="97.5" >SNESSolve</text>
</g>
<g >
<title>firedrake.parloops.par_loop (959,935 us, 8.79%)</title><rect x="307.2" y="167" width="103.7" height="15.0" fill="rgb(121.855238052803,148.629135791467,148.629135791467)" rx="2" ry="2" />
<text  x="310.16" y="177.5" >firedrake.p..</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (1,041,842 us, 9.54%)</title><rect x="13.9" y="135" width="112.6" height="15.0" fill="rgb(140.886485403216,114.14661884574,140.886485403216)" rx="2" ry="2" />
<text  x="16.85" y="145.5" >pyop2.global..</text>
</g>
<g >
<title>CreateFunctionSpace (6,418 us, 0.06%)</title><rect x="126.5" y="103" width="0.7" height="15.0" fill="rgb(140.631071469508,160.827499993336,140.631071469508)" rx="2" ry="2" />
<text  x="129.48" y="113.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (3,279 us, 0.03%)</title><rect x="1189.6" y="151" width="0.4" height="15.0" fill="rgb(155.391409289413,155.391409289413,145.358368094848)" rx="2" ry="2" />
<text  x="1192.65" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (2,137 us, 0.02%)</title><rect x="429.4" y="215" width="0.3" height="15.0" fill="rgb(143.789075975563,143.789075975563,155.249498575915)" rx="2" ry="2" />
<text  x="432.44" y="225.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalProblem.__init__ (10,932 us, 0.10%)</title><rect x="305.0" y="87" width="1.2" height="15.0" fill="rgb(152.078113297403,142.825165324595,152.078113297403)" rx="2" ry="2" />
<text  x="308.03" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (16,358 us, 0.15%)</title><rect x="127.3" y="87" width="1.8" height="15.0" fill="rgb(148.35252095385,148.35252095385,111.246832314812)" rx="2" ry="2" />
<text  x="130.34" y="97.5" ></text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (998,224 us, 9.15%)</title><rect x="1082.1" y="119" width="107.9" height="15.0" fill="rgb(152.490667535156,115.761784436194,115.761784436194)" rx="2" ry="2" />
<text  x="1085.09" y="129.5" >firedrake.ts..</text>
</g>
<g >
<title>Parloop_Cells_wrap_pyop2_kernel_uniform_extrusion (1,041,842 us, 9.54%)</title><rect x="13.9" y="119" width="112.6" height="15.0" fill="rgb(150.87709262294,150.87709262294,123.481295018863)" rx="2" ry="2" />
<text  x="16.85" y="129.5" >Parloop_Cell..</text>
</g>
<g >
<title>FunctionSpaceData: CreateElement (4,294 us, 0.04%)</title><rect x="428.1" y="199" width="0.4" height="15.0" fill="rgb(152.155211105627,113.189951809805,113.189951809805)" rx="2" ry="2" />
<text  x="431.07" y="209.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (6,418 us, 0.06%)</title><rect x="126.5" y="151" width="0.7" height="15.0" fill="rgb(153.27779106469,153.27779106469,135.115449005806)" rx="2" ry="2" />
<text  x="129.48" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (4,294 us, 0.04%)</title><rect x="428.1" y="151" width="0.4" height="15.0" fill="rgb(112.375165494057,146.171339202163,146.171339202163)" rx="2" ry="2" />
<text  x="431.07" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (1,699 us, 0.02%)</title><rect x="427.9" y="199" width="0.2" height="15.0" fill="rgb(115.695485113183,115.695485113183,149.812029376745)" rx="2" ry="2" />
<text  x="430.89" y="209.5" ></text>
</g>
<g >
<title>firedrake.extrusion_utils.make_extruded_coords (1,074,870 us, 9.85%)</title><rect x="10.3" y="87" width="116.2" height="15.0" fill="rgb(150.097824071336,150.097824071336,119.70483973032)" rx="2" ry="2" />
<text  x="13.28" y="97.5" >firedrake.ext..</text>
</g>
<g >
<title>firedrake.variational_solver.LinearVariationalProblem.__init__ (15,934 us, 0.15%)</title><rect x="304.5" y="71" width="1.7" height="15.0" fill="rgb(140.778708134213,140.778708134213,154.666846735654)" rx="2" ry="2" />
<text  x="307.49" y="81.5" ></text>
</g>
<g >
<title>PCSetUp (896,904 us, 8.22%)</title><rect x="424.6" y="103" width="97.0" height="15.0" fill="rgb(148.166355570446,132.801286149269,148.166355570446)" rx="2" ry="2" />
<text  x="427.60" y="113.5" >PCSetUp</text>
</g>
<g >
<title>firedrake.mesh.MeshTopology._facets (2,179 us, 0.02%)</title><rect x="128.9" y="135" width="0.2" height="15.0" fill="rgb(130.73039811947,130.73039811947,152.722012539252)" rx="2" ry="2" />
<text  x="131.87" y="145.5" ></text>
</g>
<g >
<title>Log_Event_form0_cell_integral_otherwise (2,374 us, 0.02%)</title><rect x="522.2" y="151" width="0.2" height="15.0" fill="rgb(109.478131904656,109.478131904656,148.608670691224)" rx="2" ry="2" />
<text  x="525.17" y="161.5" ></text>
</g>
<g >
<title>ParLoopExecute (830,318 us, 7.61%)</title><rect x="431.6" y="151" width="89.7" height="15.0" fill="rgb(140.095177738471,112.118892954833,140.095177738471)" rx="2" ry="2" />
<text  x="434.58" y="161.5" >ParLoopEx..</text>
</g>
<g >
<title>Parloop_Cells_wrap_form0_cell_integral_otherwise (2,750,859 us, 25.20%)</title><rect x="522.2" y="135" width="297.4" height="15.0" fill="rgb(128.172183480557,128.172183480557,152.226874222043)" rx="2" ry="2" />
<text  x="525.17" y="145.5" >Parloop_Cells_wrap_form0_cell_integr..</text>
</g>
<g >
<title>HybridBreak (959,935 us, 8.79%)</title><rect x="307.2" y="151" width="103.7" height="15.0" fill="rgb(120.301801046354,120.301801046354,150.703574396069)" rx="2" ry="2" />
<text  x="310.16" y="161.5" >HybridBreak</text>
</g>
<g >
<title>CreateFunctionSpace (1,940 us, 0.02%)</title><rect x="424.2" y="183" width="0.3" height="15.0" fill="rgb(151.88671957492,151.88671957492,128.374102555381)" rx="2" ry="2" />
<text  x="427.25" y="193.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (2,748,485 us, 25.18%)</title><rect x="522.4" y="151" width="297.2" height="15.0" fill="rgb(155.01561969903,155.01561969903,143.537233926069)" rx="2" ry="2" />
<text  x="525.43" y="161.5" >pyop2.global_kernel.GlobalKernel.com..</text>
</g>
<g >
<title>FunctionSpaceData: CreateElement (6,346 us, 0.06%)</title><rect x="128.2" y="135" width="0.7" height="15.0" fill="rgb(114.164043673917,146.635122433978,146.635122433978)" rx="2" ry="2" />
<text  x="131.19" y="145.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (7,413 us, 0.07%)</title><rect x="428.9" y="167" width="0.8" height="15.0" fill="rgb(143.010064547235,160.44022205045,143.010064547235)" rx="2" ry="2" />
<text  x="431.87" y="177.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (6,418 us, 0.06%)</title><rect x="126.5" y="135" width="0.7" height="15.0" fill="rgb(154.533147533312,131.420797755392,131.420797755392)" rx="2" ry="2" />
<text  x="129.48" y="145.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (16,358 us, 0.15%)</title><rect x="127.3" y="119" width="1.8" height="15.0" fill="rgb(133.279740747194,162.024228250457,133.279740747194)" rx="2" ry="2" />
<text  x="130.34" y="129.5" ></text>
</g>
</g>
</svg>
