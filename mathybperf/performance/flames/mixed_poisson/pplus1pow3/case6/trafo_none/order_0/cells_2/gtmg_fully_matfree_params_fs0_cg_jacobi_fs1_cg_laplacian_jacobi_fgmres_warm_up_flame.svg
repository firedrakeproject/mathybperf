<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="267" onload="init(evt)" viewBox="0 0 1200 267" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:13px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:18px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 13 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (1 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="267.0" fill="url(#background)"  />
<text id="title" x="600.00" y="26" >Firedrake example</text>
<text id="details" x="10.00" y="249" > </text>
<text id="unzoom" x="10.00" y="26" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="26" >Search</text>
<text id="ignorecase" x="1174.00" y="26" >ic</text>
<text id="matched" x="1090.00" y="249" > </text>
<g id="frames">
<g >
<title>CreateMesh (8,518 us, 0.01%)</title><rect x="142.8" y="103" width="0.2" height="15.0" fill="rgb(144.543639560776,144.543639560776,155.395543140795)" rx="2" ry="2" />
<text  x="145.81" y="113.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (1,388,815 us, 2.04%)</title><rect x="146.2" y="199" width="24.1" height="15.0" fill="rgb(150.784761468549,150.784761468549,123.033844039889)" rx="2" ry="2" />
<text  x="149.18" y="209.5" >P..</text>
</g>
<g >
<title>PCSetUp (1,135,463 us, 1.67%)</title><rect x="994.1" y="103" width="19.7" height="15.0" fill="rgb(147.117738915809,159.771530874171,147.117738915809)" rx="2" ry="2" />
<text  x="997.05" y="113.5" ></text>
</g>
<g >
<title>firedrake.extrusion_utils.make_extruded_coords (2,640,032 us, 3.88%)</title><rect x="10.0" y="87" width="45.8" height="15.0" fill="rgb(154.984269116712,154.984269116712,143.385304180991)" rx="2" ry="2" />
<text  x="13.00" y="97.5" >fir..</text>
</g>
<g >
<title>ParLoopExecute (8,303,983 us, 12.22%)</title><rect x="1013.8" y="119" width="144.1" height="15.0" fill="rgb(153.691728131773,124.969915676926,124.969915676926)" rx="2" ry="2" />
<text  x="1016.76" y="129.5" >ParLoopExecute</text>
</g>
<g >
<title>firedrake.matrix_free.operators.ImplicitMatrixContext.__init__ (20,341 us, 0.03%)</title><rect x="145.5" y="103" width="0.4" height="15.0" fill="rgb(134.37543754746,134.37543754746,153.427504041444)" rx="2" ry="2" />
<text  x="148.51" y="113.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (25,772 us, 0.04%)</title><rect x="143.9" y="103" width="0.5" height="15.0" fill="rgb(148.886112883486,148.886112883486,113.832700896893)" rx="2" ry="2" />
<text  x="146.91" y="113.5" ></text>
</g>
<g >
<title>firedrake.assemble.allocate_matrix (34,386 us, 0.05%)</title><rect x="145.3" y="87" width="0.6" height="15.0" fill="rgb(148.931463825091,148.931463825091,114.05247853698)" rx="2" ry="2" />
<text  x="148.27" y="97.5" ></text>
</g>
<g >
<title>KSPSolve (48,860,814 us, 71.88%)</title><rect x="145.9" y="103" width="848.2" height="15.0" fill="rgb(135.908847154976,161.596234184074,135.908847154976)" rx="2" ry="2" />
<text  x="148.87" y="113.5" >KSPSolve</text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (13,772 us, 0.02%)</title><rect x="995.4" y="167" width="0.2" height="15.0" fill="rgb(141.552372070102,141.552372070102,154.8165881426)" rx="2" ry="2" />
<text  x="998.36" y="177.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.action (12,690 us, 0.02%)</title><rect x="145.6" y="119" width="0.3" height="15.0" fill="rgb(149.887250472869,149.887250472869,118.684367676212)" rx="2" ry="2" />
<text  x="148.65" y="129.5" ></text>
</g>
<g >
<title>PCApply (48,860,814 us, 71.88%)</title><rect x="145.9" y="119" width="848.2" height="15.0" fill="rgb(127.483990587841,162.967722462444,127.483990587841)" rx="2" ry="2" />
<text  x="148.87" y="129.5" >PCApply</text>
</g>
<g >
<title>firedrake.interpolation.make_interpolator (17,129 us, 0.03%)</title><rect x="995.6" y="135" width="0.3" height="15.0" fill="rgb(156.310278157227,145.045465872076,145.045465872076)" rx="2" ry="2" />
<text  x="998.60" y="145.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (14,249 us, 0.02%)</title><rect x="55.8" y="103" width="0.3" height="15.0" fill="rgb(149.690661689925,136.707320580433,149.690661689925)" rx="2" ry="2" />
<text  x="58.83" y="113.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (2,831,335 us, 4.17%)</title><rect x="1108.8" y="151" width="49.1" height="15.0" fill="rgb(155.586899797041,139.499565110648,139.499565110648)" rx="2" ry="2" />
<text  x="1111.76" y="161.5" >pyop..</text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (7,324 us, 0.01%)</title><rect x="995.2" y="167" width="0.2" height="15.0" fill="rgb(142.963932008513,154.101760150355,154.101760150355)" rx="2" ry="2" />
<text  x="998.23" y="177.5" ></text>
</g>
<g >
<title>SCForwardElim (48,860,814 us, 71.88%)</title><rect x="145.9" y="135" width="848.2" height="15.0" fill="rgb(145.162132606847,145.162132606847,155.515251472293)" rx="2" ry="2" />
<text  x="148.87" y="145.5" >SCForwardElim</text>
</g>
<g >
<title>Parloop_Cells_wrap_form1_cell_integral_otherwise (2,831,335 us, 4.17%)</title><rect x="1108.8" y="135" width="49.1" height="15.0" fill="rgb(150.832070509705,150.832070509705,123.26311093165)" rx="2" ry="2" />
<text  x="1111.76" y="145.5" >Parl..</text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (7,324 us, 0.01%)</title><rect x="995.2" y="183" width="0.2" height="15.0" fill="rgb(131.385191573834,162.332643232167,131.385191573834)" rx="2" ry="2" />
<text  x="998.23" y="193.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.__init__ (87,245 us, 0.13%)</title><rect x="144.4" y="71" width="1.5" height="15.0" fill="rgb(138.026368380901,106.81756897606,138.026368380901)" rx="2" ry="2" />
<text  x="147.35" y="81.5" ></text>
</g>
<g >
<title>firedrake.parloops.par_loop (1,406,915 us, 2.07%)</title><rect x="145.9" y="167" width="24.4" height="15.0" fill="rgb(152.468745307905,115.593714027269,115.593714027269)" rx="2" ry="2" />
<text  x="148.87" y="177.5" >f..</text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.solve (60,148,590 us, 88.49%)</title><rect x="145.9" y="71" width="1044.1" height="15.0" fill="rgb(130.052068497464,150.754239980824,150.754239980824)" rx="2" ry="2" />
<text  x="148.87" y="81.5" >firedrake.variational_solver.NonlinearVariationalSolver.solve</text>
</g>
<g >
<title>HybridRHS (47,453,899 us, 69.81%)</title><rect x="170.3" y="151" width="823.8" height="15.0" fill="rgb(129.720835367709,150.668364724962,150.668364724962)" rx="2" ry="2" />
<text  x="173.29" y="161.5" >HybridRHS</text>
</g>
<g >
<title>ParLoopExecute (1,388,815 us, 2.04%)</title><rect x="146.2" y="183" width="24.1" height="15.0" fill="rgb(144.778738737288,144.778738737288,155.441046207217)" rx="2" ry="2" />
<text  x="149.18" y="193.5" >P..</text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (69,539 us, 0.10%)</title><rect x="56.1" y="119" width="1.2" height="15.0" fill="rgb(122.212675625856,148.721804791889,148.721804791889)" rx="2" ry="2" />
<text  x="59.08" y="129.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (69,539 us, 0.10%)</title><rect x="56.1" y="87" width="1.2" height="15.0" fill="rgb(153.004974269744,153.004974269744,133.793336845684)" rx="2" ry="2" />
<text  x="59.08" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspace.VectorFunctionSpace (14,249 us, 0.02%)</title><rect x="55.8" y="87" width="0.3" height="15.0" fill="rgb(137.378402163521,105.157155544023,137.378402163521)" rx="2" ry="2" />
<text  x="58.83" y="97.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalProblem.__init__ (25,772 us, 0.04%)</title><rect x="143.9" y="87" width="0.5" height="15.0" fill="rgb(155.199045516164,136.526015623927,136.526015623927)" rx="2" ry="2" />
<text  x="146.91" y="97.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_form0_cell_integral_otherwise (5,472,648 us, 8.05%)</title><rect x="1013.8" y="135" width="95.0" height="15.0" fill="rgb(145.503493136706,154.760164887294,154.760164887294)" rx="2" ry="2" />
<text  x="1016.76" y="145.5" >Parloop_Ce..</text>
</g>
<g >
<title>Mesh: numbering (16,930 us, 0.02%)</title><rect x="57.5" y="87" width="0.3" height="15.0" fill="rgb(106.768566806157,144.717776579374,144.717776579374)" rx="2" ry="2" />
<text  x="60.47" y="97.5" ></text>
</g>
<g >
<title>firedrake.utility_meshes.SquareMesh (64,583 us, 0.10%)</title><rect x="142.6" y="71" width="1.1" height="15.0" fill="rgb(149.653560727014,149.653560727014,117.551871215531)" rx="2" ry="2" />
<text  x="145.62" y="81.5" ></text>
</g>
<g >
<title>all (67,975,435 us, 100%)</title><rect x="10.0" y="39" width="1180.0" height="15.0" fill="rgb(122.17655758507,122.17655758507,151.066430500336)" rx="2" ry="2" />
<text  x="13.00" y="49.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (7,324 us, 0.01%)</title><rect x="995.2" y="151" width="0.2" height="15.0" fill="rgb(139.606543320124,160.994283645561,139.606543320124)" rx="2" ry="2" />
<text  x="998.23" y="161.5" ></text>
</g>
<g >
<title>HybridBreak (1,406,915 us, 2.07%)</title><rect x="145.9" y="151" width="24.4" height="15.0" fill="rgb(132.258945791326,151.326393353307,151.326393353307)" rx="2" ry="2" />
<text  x="148.87" y="161.5" >H..</text>
</g>
<g >
<title>firedrake.slate.slac.optimise.optimise (62,245 us, 0.09%)</title><rect x="396.2" y="167" width="1.1" height="15.0" fill="rgb(112.482631902928,112.482631902928,149.190186819922)" rx="2" ry="2" />
<text  x="399.17" y="177.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (1,029,196 us, 1.51%)</title><rect x="995.9" y="167" width="17.9" height="15.0" fill="rgb(142.100148239694,142.100148239694,154.922609336715)" rx="2" ry="2" />
<text  x="998.90" y="177.5" ></text>
</g>
<g >
<title>ParLoopExecute (2,555,876 us, 3.76%)</title><rect x="11.5" y="103" width="44.3" height="15.0" fill="rgb(147.790212798312,147.790212798312,156.023912154512)" rx="2" ry="2" />
<text  x="14.46" y="113.5" >Par..</text>
</g>
<g >
<title>firedrake.ufl_expr.action (9,247 us, 0.01%)</title><rect x="143.7" y="87" width="0.2" height="15.0" fill="rgb(144.606344365673,123.678757437036,144.606344365673)" rx="2" ry="2" />
<text  x="146.75" y="97.5" ></text>
</g>
<g >
<title>firedrake.__init__ (4,843,534 us, 7.13%)</title><rect x="58.5" y="71" width="84.1" height="15.0" fill="rgb(149.509051859577,159.382247371697,149.509051859577)" rx="2" ry="2" />
<text  x="61.54" y="81.5" >firedrak..</text>
</g>
<g >
<title>PetscBarrier (37,124 us, 0.05%)</title><rect x="57.9" y="71" width="0.6" height="15.0" fill="rgb(131.424790511582,162.326196893463,131.424790511582)" rx="2" ry="2" />
<text  x="60.90" y="81.5" ></text>
</g>
<g >
<title>SNESSolve (60,148,590 us, 88.49%)</title><rect x="145.9" y="87" width="1044.1" height="15.0" fill="rgb(125.457796290419,163.297568045746,125.457796290419)" rx="2" ry="2" />
<text  x="148.87" y="97.5" >SNESSolve</text>
</g>
<g >
<title>DMPlexInterp (16,008 us, 0.02%)</title><rect x="143.5" y="119" width="0.2" height="15.0" fill="rgb(140.081039441473,112.082663568774,140.081039441473)" rx="2" ry="2" />
<text  x="146.47" y="129.5" ></text>
</g>
<g >
<title>firedrake.mesh.MeshTopology._facets (28,454 us, 0.04%)</title><rect x="56.8" y="135" width="0.5" height="15.0" fill="rgb(130.24565424386,150.804428878038,150.804428878038)" rx="2" ry="2" />
<text  x="59.79" y="145.5" ></text>
</g>
<g >
<title>Mesh: reorder (7,602 us, 0.01%)</title><rect x="57.8" y="87" width="0.1" height="15.0" fill="rgb(155.976255114275,142.484622542777,142.484622542777)" rx="2" ry="2" />
<text  x="60.77" y="97.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (1,029,196 us, 1.51%)</title><rect x="995.9" y="183" width="17.9" height="15.0" fill="rgb(121.821725566375,148.62044736906,148.62044736906)" rx="2" ry="2" />
<text  x="998.90" y="193.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_pyop2_kernel_uniform_extrusion (2,555,876 us, 3.76%)</title><rect x="11.5" y="119" width="44.3" height="15.0" fill="rgb(136.788683646687,161.453004987749,136.788683646687)" rx="2" ry="2" />
<text  x="14.46" y="129.5" >Par..</text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (14,249 us, 0.02%)</title><rect x="55.8" y="135" width="0.3" height="15.0" fill="rgb(127.883103266674,127.883103266674,152.170923212905)" rx="2" ry="2" />
<text  x="58.83" y="145.5" ></text>
</g>
<g >
<title>firedrake (67,975,435 us, 100.00%)</title><rect x="10.0" y="55" width="1180.0" height="15.0" fill="rgb(113.083097467935,146.354877121316,146.354877121316)" rx="2" ry="2" />
<text  x="13.00" y="65.5" >firedrake</text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (13,772 us, 0.02%)</title><rect x="995.4" y="135" width="0.2" height="15.0" fill="rgb(154.792183567907,154.792183567907,142.454428059855)" rx="2" ry="2" />
<text  x="998.36" y="145.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (5,463,172 us, 8.04%)</title><rect x="1013.9" y="151" width="94.9" height="15.0" fill="rgb(135.958700109351,152.285588917239,152.285588917239)" rx="2" ry="2" />
<text  x="1016.93" y="161.5" >pyop2.glob..</text>
</g>
<g >
<title>firedrake.utility_meshes.RectangleMesh (64,583 us, 0.10%)</title><rect x="142.6" y="87" width="1.1" height="15.0" fill="rgb(126.949082765235,163.054800480078,126.949082765235)" rx="2" ry="2" />
<text  x="145.62" y="97.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (7,324 us, 0.01%)</title><rect x="995.2" y="135" width="0.2" height="15.0" fill="rgb(109.039003444527,145.306408300433,145.306408300433)" rx="2" ry="2" />
<text  x="998.23" y="145.5" ></text>
</g>
<g >
<title>CreateMesh (8,518 us, 0.01%)</title><rect x="142.8" y="119" width="0.2" height="15.0" fill="rgb(152.818181012411,152.818181012411,132.888107983223)" rx="2" ry="2" />
<text  x="145.81" y="129.5" ></text>
</g>
<g >
<title>CreateExtMesh (2,654,281 us, 3.90%)</title><rect x="10.0" y="71" width="46.1" height="15.0" fill="rgb(147.931616861158,159.639039115626,147.931616861158)" rx="2" ry="2" />
<text  x="13.00" y="81.5" >Crea..</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (1,388,815 us, 2.04%)</title><rect x="146.2" y="215" width="24.1" height="15.0" fill="rgb(145.862390350936,145.862390350936,155.650785229213)" rx="2" ry="2" />
<text  x="149.18" y="225.5" >p..</text>
</g>
<g >
<title>ParLoopExecute (1,029,196 us, 1.51%)</title><rect x="995.9" y="151" width="17.9" height="15.0" fill="rgb(155.782735129588,141.000969326841,141.000969326841)" rx="2" ry="2" />
<text  x="998.90" y="161.5" ></text>
</g>
<g >
<title>HybridInit (1,135,463 us, 1.67%)</title><rect x="994.1" y="119" width="19.7" height="15.0" fill="rgb(130.013055462253,162.556014227075,130.013055462253)" rx="2" ry="2" />
<text  x="997.05" y="129.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (14,249 us, 0.02%)</title><rect x="55.8" y="151" width="0.3" height="15.0" fill="rgb(153.506886825081,153.506886825081,136.225682306164)" rx="2" ry="2" />
<text  x="58.83" y="161.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (2,555,876 us, 3.76%)</title><rect x="11.5" y="135" width="44.3" height="15.0" fill="rgb(137.71539280919,161.302145356644,137.71539280919)" rx="2" ry="2" />
<text  x="14.46" y="145.5" >pyo..</text>
</g>
<g >
<title>firedrake.parloops.par_loop (1,029,196 us, 1.51%)</title><rect x="995.9" y="135" width="17.9" height="15.0" fill="rgb(139.54434580772,110.707386132281,139.54434580772)" rx="2" ry="2" />
<text  x="998.90" y="145.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (8,154 us, 0.01%)</title><rect x="1189.9" y="151" width="0.1" height="15.0" fill="rgb(152.840151660883,118.441162733435,118.441162733435)" rx="2" ry="2" />
<text  x="1192.86" y="161.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (13,772 us, 0.02%)</title><rect x="995.4" y="151" width="0.2" height="15.0" fill="rgb(146.889958915886,146.889958915886,155.849669467591)" rx="2" ry="2" />
<text  x="998.36" y="161.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (8,154 us, 0.01%)</title><rect x="1189.9" y="135" width="0.1" height="15.0" fill="rgb(153.744538291163,125.374793565585,125.374793565585)" rx="2" ry="2" />
<text  x="1192.86" y="145.5" ></text>
</g>
<g >
<title>firedrake.mesh._from_cell_list (45,192 us, 0.07%)</title><rect x="143.0" y="103" width="0.7" height="15.0" fill="rgb(148.275508081282,148.275508081282,110.873616086211)" rx="2" ry="2" />
<text  x="145.96" y="113.5" ></text>
</g>
<g >
<title>DMPlexStratify (13,353 us, 0.02%)</title><rect x="143.2" y="135" width="0.3" height="15.0" fill="rgb(131.858436197666,162.255603409682,131.858436197666)" rx="2" ry="2" />
<text  x="146.24" y="145.5" ></text>
</g>
<g >
<title>FunctionSpaceData: CreateElement (16,733 us, 0.02%)</title><rect x="56.5" y="135" width="0.3" height="15.0" fill="rgb(128.143914650456,162.860292963879,128.143914650456)" rx="2" ry="2" />
<text  x="59.50" y="145.5" ></text>
</g>
<g >
<title>CreateMesh (35,520 us, 0.05%)</title><rect x="57.3" y="71" width="0.6" height="15.0" fill="rgb(108.560183369308,145.182269762413,145.182269762413)" rx="2" ry="2" />
<text  x="60.28" y="81.5" ></text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (34,379,577 us, 50.58%)</title><rect x="397.3" y="167" width="596.8" height="15.0" fill="rgb(141.497901120425,160.686388189698,141.497901120425)" rx="2" ry="2" />
<text  x="400.25" y="177.5" >firedrake.tsfc_interface.compile_form</text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (14,249 us, 0.02%)</title><rect x="55.8" y="119" width="0.3" height="15.0" fill="rgb(155.101272860616,135.776425264725,135.776425264725)" rx="2" ry="2" />
<text  x="58.83" y="129.5" ></text>
</g>
<g >
<title>SNESFunctionEval (10,152,313 us, 14.94%)</title><rect x="1013.8" y="103" width="176.2" height="15.0" fill="rgb(112.621250876453,112.621250876453,149.217016298668)" rx="2" ry="2" />
<text  x="1016.76" y="113.5" >SNESFunctionEval</text>
</g>
<g >
<title>CreateFunctionSpace (13,772 us, 0.02%)</title><rect x="995.4" y="183" width="0.2" height="15.0" fill="rgb(118.111503462276,118.111503462276,150.279645831408)" rx="2" ry="2" />
<text  x="998.36" y="193.5" ></text>
</g>
<g >
<title>DMPlexBuFrCeLi (13,353 us, 0.02%)</title><rect x="143.2" y="119" width="0.3" height="15.0" fill="rgb(152.929583061927,119.126803474772,119.126803474772)" rx="2" ry="2" />
<text  x="146.24" y="129.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (69,539 us, 0.10%)</title><rect x="56.1" y="103" width="1.2" height="15.0" fill="rgb(143.843344755907,154.329756047828,154.329756047828)" rx="2" ry="2" />
<text  x="59.08" y="113.5" ></text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (1,848,330 us, 2.72%)</title><rect x="1157.9" y="119" width="32.1" height="15.0" fill="rgb(105.935463296464,144.501786780565,144.501786780565)" rx="2" ry="2" />
<text  x="1160.91" y="129.5" >fi..</text>
</g>
<g >
<title>CreateFunctionSpace (69,539 us, 0.10%)</title><rect x="56.1" y="71" width="1.2" height="15.0" fill="rgb(155.346034419769,137.652930551559,137.652930551559)" rx="2" ry="2" />
<text  x="59.08" y="81.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.LinearVariationalProblem.__init__ (35,019 us, 0.05%)</title><rect x="143.7" y="71" width="0.7" height="15.0" fill="rgb(142.525079885094,160.519173041961,142.525079885094)" rx="2" ry="2" />
<text  x="146.75" y="81.5" ></text>
</g>
</g>
</svg>
