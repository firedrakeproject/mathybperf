<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="267" onload="init(evt)" viewBox="0 0 1200 267" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:13px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:18px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 13 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (1 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="267.0" fill="url(#background)"  />
<text id="title" x="600.00" y="26" >Firedrake example</text>
<text id="details" x="10.00" y="249" > </text>
<text id="unzoom" x="10.00" y="26" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="26" >Search</text>
<text id="ignorecase" x="1174.00" y="26" >ic</text>
<text id="matched" x="1090.00" y="249" > </text>
<g id="frames">
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (880,978 us, 1.70%)</title><rect x="1024.4" y="167" width="20.1" height="15.0" fill="rgb(138.185271795933,161.225653428569,138.185271795933)" rx="2" ry="2" />
<text  x="1027.39" y="177.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (10,089 us, 0.02%)</title><rect x="134.8" y="103" width="0.2" height="15.0" fill="rgb(117.183198356956,117.183198356956,150.09997387554)" rx="2" ry="2" />
<text  x="137.76" y="113.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_form0_cell_integral_otherwise (2,909,872 us, 5.63%)</title><rect x="1044.5" y="135" width="66.4" height="15.0" fill="rgb(152.577560802631,144.104999556742,152.577560802631)" rx="2" ry="2" />
<text  x="1047.49" y="145.5" >Parloo..</text>
</g>
<g >
<title>firedrake.functionspace.VectorFunctionSpace (8,817 us, 0.02%)</title><rect x="43.7" y="87" width="0.2" height="15.0" fill="rgb(151.447165693832,151.447165693832,126.243956823956)" rx="2" ry="2" />
<text  x="46.69" y="97.5" ></text>
</g>
<g >
<title>firedrake.slate.slac.optimise.optimise (33,317 us, 0.06%)</title><rect x="450.0" y="167" width="0.8" height="15.0" fill="rgb(110.067800806182,145.573133542343,145.573133542343)" rx="2" ry="2" />
<text  x="453.01" y="177.5" ></text>
</g>
<g >
<title>firedrake.interpolation.make_interpolator (12,541 us, 0.02%)</title><rect x="1023.9" y="135" width="0.3" height="15.0" fill="rgb(148.215046856872,148.215046856872,110.580611690994)" rx="2" ry="2" />
<text  x="1026.93" y="145.5" ></text>
</g>
<g >
<title>firedrake.mesh.MeshTopology._facets (20,384 us, 0.04%)</title><rect x="44.5" y="135" width="0.4" height="15.0" fill="rgb(154.91279166249,134.331402745756,134.331402745756)" rx="2" ry="2" />
<text  x="47.46" y="145.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (8,351 us, 0.02%)</title><rect x="1023.7" y="183" width="0.2" height="15.0" fill="rgb(138.883883052405,138.883883052405,154.30010639724)" rx="2" ry="2" />
<text  x="1026.74" y="193.5" ></text>
</g>
<g >
<title>SNESSolve (46,215,824 us, 89.36%)</title><rect x="135.6" y="87" width="1054.4" height="15.0" fill="rgb(114.678652869353,114.678652869353,149.615223136004)" rx="2" ry="2" />
<text  x="138.60" y="97.5" >SNESSolve</text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (6,022 us, 0.01%)</title><rect x="1023.6" y="167" width="0.1" height="15.0" fill="rgb(149.268513634857,149.268513634857,115.68587376892)" rx="2" ry="2" />
<text  x="1026.60" y="177.5" ></text>
</g>
<g >
<title>CreateMesh (7,414 us, 0.01%)</title><rect x="133.8" y="119" width="0.2" height="15.0" fill="rgb(154.225278057178,129.060465105029,129.060465105029)" rx="2" ry="2" />
<text  x="136.80" y="129.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (8,817 us, 0.02%)</title><rect x="43.7" y="135" width="0.2" height="15.0" fill="rgb(124.165044294249,163.508016045122,124.165044294249)" rx="2" ry="2" />
<text  x="46.69" y="145.5" ></text>
</g>
<g >
<title>ParLoopExecute (1,393,227 us, 2.69%)</title><rect x="11.9" y="103" width="31.8" height="15.0" fill="rgb(109.078808080839,109.078808080839,148.531382209195)" rx="2" ry="2" />
<text  x="14.90" y="113.5" >Pa..</text>
</g>
<g >
<title>KSPSolve (38,875,021 us, 75.16%)</title><rect x="135.6" y="103" width="886.9" height="15.0" fill="rgb(126.555856508857,149.847814650444,149.847814650444)" rx="2" ry="2" />
<text  x="138.60" y="113.5" >KSPSolve</text>
</g>
<g >
<title>Parloop_Cells_wrap_form1_cell_integral_otherwise (2,482,878 us, 4.80%)</title><rect x="1110.9" y="135" width="56.6" height="15.0" fill="rgb(154.632663680036,132.183754880273,132.183754880273)" rx="2" ry="2" />
<text  x="1113.87" y="145.5" >Parlo..</text>
</g>
<g >
<title>FunctionSpaceData: CreateElement (6,022 us, 0.01%)</title><rect x="1023.6" y="199" width="0.1" height="15.0" fill="rgb(109.812687012442,109.812687012442,148.673423292731)" rx="2" ry="2" />
<text  x="1026.60" y="209.5" ></text>
</g>
<g >
<title>firedrake.parloops.par_loop (888,549 us, 1.72%)</title><rect x="1024.2" y="135" width="20.3" height="15.0" fill="rgb(131.992386028042,162.233797623342,131.992386028042)" rx="2" ry="2" />
<text  x="1027.21" y="145.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (45,676 us, 0.09%)</title><rect x="43.9" y="119" width="1.0" height="15.0" fill="rgb(120.44222925943,120.44222925943,150.730754050212)" rx="2" ry="2" />
<text  x="46.89" y="129.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (12,883 us, 0.02%)</title><rect x="1023.4" y="135" width="0.3" height="15.0" fill="rgb(148.808822827842,148.808822827842,113.458141396465)" rx="2" ry="2" />
<text  x="1026.44" y="145.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (2,482,878 us, 4.80%)</title><rect x="1110.9" y="151" width="56.6" height="15.0" fill="rgb(123.688627900809,163.585572202194,123.688627900809)" rx="2" ry="2" />
<text  x="1113.87" y="161.5" >pyop2..</text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (8,817 us, 0.02%)</title><rect x="43.7" y="151" width="0.2" height="15.0" fill="rgb(136.74572914048,152.489633480865,152.489633480865)" rx="2" ry="2" />
<text  x="46.69" y="161.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (8,817 us, 0.02%)</title><rect x="43.7" y="103" width="0.2" height="15.0" fill="rgb(119.941773627922,148.133052422054,148.133052422054)" rx="2" ry="2" />
<text  x="46.69" y="113.5" ></text>
</g>
<g >
<title>firedrake.functionspace.MixedFunctionSpace (6,861 us, 0.01%)</title><rect x="1023.4" y="151" width="0.2" height="15.0" fill="rgb(125.064715974659,149.461222660097,149.461222660097)" rx="2" ry="2" />
<text  x="1026.44" y="161.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (8,351 us, 0.02%)</title><rect x="1023.7" y="167" width="0.2" height="15.0" fill="rgb(123.907433077688,149.161186353475,149.161186353475)" rx="2" ry="2" />
<text  x="1026.74" y="177.5" ></text>
</g>
<g >
<title>DMPlexStratify (5,977 us, 0.01%)</title><rect x="134.3" y="135" width="0.1" height="15.0" fill="rgb(131.796127354391,131.796127354391,152.928282713753)" rx="2" ry="2" />
<text  x="137.30" y="145.5" ></text>
</g>
<g >
<title>HybridInit (962,739 us, 1.86%)</title><rect x="1022.5" y="119" width="22.0" height="15.0" fill="rgb(152.090456781779,112.693501993639,112.693501993639)" rx="2" ry="2" />
<text  x="1025.52" y="129.5" ></text>
</g>
<g >
<title>FunctionSpaceData: CreateElement (8,458 us, 0.02%)</title><rect x="44.3" y="135" width="0.2" height="15.0" fill="rgb(143.078114754012,160.429144109812,143.078114754012)" rx="2" ry="2" />
<text  x="47.27" y="145.5" ></text>
</g>
<g >
<title>CreateMesh (24,001 us, 0.05%)</title><rect x="44.9" y="71" width="0.6" height="15.0" fill="rgb(129.366115873057,150.576400411533,150.576400411533)" rx="2" ry="2" />
<text  x="47.93" y="81.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (6,022 us, 0.01%)</title><rect x="1023.6" y="151" width="0.1" height="15.0" fill="rgb(124.230576339685,163.497348037726,124.230576339685)" rx="2" ry="2" />
<text  x="1026.60" y="161.5" ></text>
</g>
<g >
<title>ParLoopExecute (5,392,750 us, 10.43%)</title><rect x="1044.5" y="119" width="123.0" height="15.0" fill="rgb(152.996405714596,152.996405714596,133.751812309196)" rx="2" ry="2" />
<text  x="1047.49" y="129.5" >ParLoopExecute</text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (45,676 us, 0.09%)</title><rect x="43.9" y="103" width="1.0" height="15.0" fill="rgb(139.584839151212,139.584839151212,154.435775319589)" rx="2" ry="2" />
<text  x="46.89" y="113.5" ></text>
</g>
<g >
<title>HybridRHS (37,813,640 us, 73.11%)</title><rect x="159.8" y="151" width="862.7" height="15.0" fill="rgb(155.344596384115,155.344596384115,145.131505553787)" rx="2" ry="2" />
<text  x="162.81" y="161.5" >HybridRHS</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (1,053,511 us, 2.04%)</title><rect x="135.8" y="215" width="24.0" height="15.0" fill="rgb(149.849881322971,149.849881322971,118.503271026708)" rx="2" ry="2" />
<text  x="138.78" y="225.5" >p..</text>
</g>
<g >
<title>firedrake.variational_solver.LinearVariationalProblem.__init__ (10,089 us, 0.02%)</title><rect x="134.8" y="71" width="0.2" height="15.0" fill="rgb(115.272166685857,146.922413585222,146.922413585222)" rx="2" ry="2" />
<text  x="137.76" y="81.5" ></text>
</g>
<g >
<title>firedrake.__init__ (3,818,412 us, 7.38%)</title><rect x="46.4" y="71" width="87.1" height="15.0" fill="rgb(122.190740465507,148.716117898465,148.716117898465)" rx="2" ry="2" />
<text  x="49.37" y="81.5" >firedrake..</text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.solve (46,215,824 us, 89.36%)</title><rect x="135.6" y="71" width="1054.4" height="15.0" fill="rgb(155.288755996737,137.213795974984,137.213795974984)" rx="2" ry="2" />
<text  x="138.60" y="81.5" >firedrake.variational_solver.NonlinearVariationalSolver.solve</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (1,393,227 us, 2.69%)</title><rect x="11.9" y="135" width="31.8" height="15.0" fill="rgb(132.326557795385,151.343922391396,151.343922391396)" rx="2" ry="2" />
<text  x="14.90" y="145.5" >py..</text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (6,022 us, 0.01%)</title><rect x="1023.6" y="183" width="0.1" height="15.0" fill="rgb(152.928555411751,119.118924823428,119.118924823428)" rx="2" ry="2" />
<text  x="1026.60" y="193.5" ></text>
</g>
<g >
<title>SCForwardElim (38,875,021 us, 75.16%)</title><rect x="135.6" y="135" width="886.9" height="15.0" fill="rgb(140.29260022289,112.624788071156,140.29260022289)" rx="2" ry="2" />
<text  x="138.60" y="145.5" >SCForwardElim</text>
</g>
<g >
<title>CreateFunctionSpace (45,676 us, 0.09%)</title><rect x="43.9" y="71" width="1.0" height="15.0" fill="rgb(135.838377554802,101.21084248418,135.838377554802)" rx="2" ry="2" />
<text  x="46.89" y="81.5" ></text>
</g>
<g >
<title>DMPlexInterp (14,254 us, 0.03%)</title><rect x="134.4" y="119" width="0.4" height="15.0" fill="rgb(138.000009255096,152.814817214284,152.814817214284)" rx="2" ry="2" />
<text  x="137.43" y="129.5" ></text>
</g>
<g >
<title>PCSetUp (962,739 us, 1.86%)</title><rect x="1022.5" y="103" width="22.0" height="15.0" fill="rgb(150.558005384623,150.558005384623,121.934949171634)" rx="2" ry="2" />
<text  x="1025.52" y="113.5" ></text>
</g>
<g >
<title>Mesh: reorder (6,735 us, 0.01%)</title><rect x="45.3" y="87" width="0.2" height="15.0" fill="rgb(153.084565611515,153.084565611515,134.179048732726)" rx="2" ry="2" />
<text  x="48.32" y="97.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.__init__ (26,761 us, 0.05%)</title><rect x="135.0" y="71" width="0.6" height="15.0" fill="rgb(139.227860513908,153.133149022124,153.133149022124)" rx="2" ry="2" />
<text  x="137.99" y="81.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_pyop2_kernel_uniform_extrusion (1,393,227 us, 2.69%)</title><rect x="11.9" y="119" width="31.8" height="15.0" fill="rgb(121.016485883154,121.016485883154,150.841900493514)" rx="2" ry="2" />
<text  x="14.90" y="129.5" >Pa..</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (2,903,745 us, 5.61%)</title><rect x="1044.6" y="151" width="66.3" height="15.0" fill="rgb(147.885003623034,147.885003623034,108.981171403934)" rx="2" ry="2" />
<text  x="1047.63" y="161.5" >pyop2...</text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (8,351 us, 0.02%)</title><rect x="1023.7" y="151" width="0.2" height="15.0" fill="rgb(107.593434575169,144.931631186155,144.931631186155)" rx="2" ry="2" />
<text  x="1026.74" y="161.5" ></text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (985,314 us, 1.91%)</title><rect x="1167.5" y="119" width="22.5" height="15.0" fill="rgb(136.716845052688,103.461915447513,136.716845052688)" rx="2" ry="2" />
<text  x="1170.52" y="129.5" ></text>
</g>
<g >
<title>DMPlexBuFrCeLi (5,977 us, 0.01%)</title><rect x="134.3" y="119" width="0.1" height="15.0" fill="rgb(129.606604527363,162.622180658336,129.606604527363)" rx="2" ry="2" />
<text  x="137.30" y="129.5" ></text>
</g>
<g >
<title>ParLoopExecute (880,978 us, 1.70%)</title><rect x="1024.4" y="151" width="20.1" height="15.0" fill="rgb(140.980305126988,160.770648002583,140.980305126988)" rx="2" ry="2" />
<text  x="1027.39" y="161.5" ></text>
</g>
<g >
<title>firedrake (51,721,042 us, 100.00%)</title><rect x="10.0" y="55" width="1180.0" height="15.0" fill="rgb(119.177357936013,119.177357936013,150.48594024568)" rx="2" ry="2" />
<text  x="13.00" y="65.5" >firedrake</text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (1,053,511 us, 2.04%)</title><rect x="135.8" y="199" width="24.0" height="15.0" fill="rgb(149.081222114981,149.081222114981,114.778230249524)" rx="2" ry="2" />
<text  x="138.78" y="209.5" >P..</text>
</g>
<g >
<title>CreateExtMesh (1,485,292 us, 2.87%)</title><rect x="10.0" y="71" width="33.9" height="15.0" fill="rgb(132.549948440101,162.143031649286,132.549948440101)" rx="2" ry="2" />
<text  x="13.00" y="81.5" >Cr..</text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (25,060,701 us, 48.45%)</title><rect x="450.8" y="167" width="571.7" height="15.0" fill="rgb(137.971240167716,137.971240167716,154.123465838913)" rx="2" ry="2" />
<text  x="453.77" y="177.5" >firedrake.tsfc_interface.compile_form</text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (6,198 us, 0.01%)</title><rect x="1189.9" y="135" width="0.1" height="15.0" fill="rgb(148.08847796421,148.08847796421,109.96723936502)" rx="2" ry="2" />
<text  x="1192.86" y="145.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (8,351 us, 0.02%)</title><rect x="1023.7" y="135" width="0.2" height="15.0" fill="rgb(112.434907071011,112.434907071011,149.18094975568)" rx="2" ry="2" />
<text  x="1026.74" y="145.5" ></text>
</g>
<g >
<title>firedrake.extrusion_utils.make_extruded_coords (1,476,475 us, 2.85%)</title><rect x="10.0" y="87" width="33.7" height="15.0" fill="rgb(134.589600409917,134.589600409917,153.468954918048)" rx="2" ry="2" />
<text  x="13.00" y="97.5" >fi..</text>
</g>
<g >
<title>firedrake.utility_meshes.SquareMesh (55,974 us, 0.11%)</title><rect x="133.5" y="71" width="1.3" height="15.0" fill="rgb(143.584806655465,143.584806655465,155.209962578477)" rx="2" ry="2" />
<text  x="136.48" y="81.5" ></text>
</g>
<g >
<title>Mesh: numbering (7,888 us, 0.02%)</title><rect x="45.1" y="87" width="0.2" height="15.0" fill="rgb(155.935056357627,142.168765408472,142.168765408472)" rx="2" ry="2" />
<text  x="48.14" y="97.5" ></text>
</g>
<g >
<title>SNESFunctionEval (6,378,064 us, 12.33%)</title><rect x="1044.5" y="103" width="145.5" height="15.0" fill="rgb(144.006245466975,154.371989565512,154.371989565512)" rx="2" ry="2" />
<text  x="1047.49" y="113.5" >SNESFunctionEval</text>
</g>
<g >
<title>PCApply (38,875,021 us, 75.16%)</title><rect x="135.6" y="119" width="886.9" height="15.0" fill="rgb(141.755665633534,141.755665633534,154.85593528391)" rx="2" ry="2" />
<text  x="138.60" y="129.5" >PCApply</text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (8,817 us, 0.02%)</title><rect x="43.7" y="119" width="0.2" height="15.0" fill="rgb(149.663207655421,159.357152242141,149.663207655421)" rx="2" ry="2" />
<text  x="46.69" y="129.5" ></text>
</g>
<g >
<title>firedrake.mesh._from_cell_list (34,732 us, 0.07%)</title><rect x="134.0" y="103" width="0.8" height="15.0" fill="rgb(133.287722597354,133.287722597354,153.21697856723)" rx="2" ry="2" />
<text  x="136.97" y="113.5" ></text>
</g>
<g >
<title>firedrake.assemble.allocate_matrix (7,470 us, 0.01%)</title><rect x="135.4" y="87" width="0.2" height="15.0" fill="rgb(153.00932611171,153.00932611171,133.814426541362)" rx="2" ry="2" />
<text  x="138.43" y="97.5" ></text>
</g>
<g >
<title>firedrake.parloops.par_loop (1,061,381 us, 2.05%)</title><rect x="135.6" y="167" width="24.2" height="15.0" fill="rgb(129.177041704025,150.527381182525,150.527381182525)" rx="2" ry="2" />
<text  x="138.60" y="177.5" >f..</text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (45,676 us, 0.09%)</title><rect x="43.9" y="87" width="1.0" height="15.0" fill="rgb(127.393662862555,162.982426975863,127.393662862555)" rx="2" ry="2" />
<text  x="46.89" y="97.5" ></text>
</g>
<g >
<title>firedrake.matrix_free.operators.ImplicitMatrixContext.__init__ (7,470 us, 0.01%)</title><rect x="135.4" y="103" width="0.2" height="15.0" fill="rgb(146.000691983909,154.889068292125,154.889068292125)" rx="2" ry="2" />
<text  x="138.43" y="113.5" ></text>
</g>
<g >
<title>HybridBreak (1,061,381 us, 2.05%)</title><rect x="135.6" y="151" width="24.2" height="15.0" fill="rgb(152.747344874809,117.729644040202,117.729644040202)" rx="2" ry="2" />
<text  x="138.60" y="161.5" >H..</text>
</g>
<g >
<title>firedrake.utility_meshes.RectangleMesh (55,974 us, 0.11%)</title><rect x="133.5" y="87" width="1.3" height="15.0" fill="rgb(153.844129932742,153.844129932742,137.86001428944)" rx="2" ry="2" />
<text  x="136.48" y="97.5" ></text>
</g>
<g >
<title>PetscBarrier (39,013 us, 0.08%)</title><rect x="45.5" y="71" width="0.9" height="15.0" fill="rgb(115.857990066077,115.857990066077,149.843481948273)" rx="2" ry="2" />
<text  x="48.48" y="81.5" ></text>
</g>
<g >
<title>all (51,721,042 us, 100%)</title><rect x="10.0" y="39" width="1180.0" height="15.0" fill="rgb(155.596638021462,155.596638021462,146.352938104007)" rx="2" ry="2" />
<text  x="13.00" y="49.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (880,978 us, 1.70%)</title><rect x="1024.4" y="183" width="20.1" height="15.0" fill="rgb(150.278047726222,150.278047726222,120.578231288615)" rx="2" ry="2" />
<text  x="1027.39" y="193.5" ></text>
</g>
<g >
<title>ParLoopExecute (1,053,511 us, 2.04%)</title><rect x="135.8" y="183" width="24.0" height="15.0" fill="rgb(130.552582245011,150.884002804262,150.884002804262)" rx="2" ry="2" />
<text  x="138.78" y="193.5" >P..</text>
</g>
<g >
<title>CreateMesh (7,414 us, 0.01%)</title><rect x="133.8" y="103" width="0.2" height="15.0" fill="rgb(114.799901688045,114.799901688045,149.638690649299)" rx="2" ry="2" />
<text  x="136.80" y="113.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalProblem.__init__ (10,089 us, 0.02%)</title><rect x="134.8" y="87" width="0.2" height="15.0" fill="rgb(143.309756381707,120.356250728124,143.309756381707)" rx="2" ry="2" />
<text  x="137.76" y="97.5" ></text>
</g>
</g>
</svg>
