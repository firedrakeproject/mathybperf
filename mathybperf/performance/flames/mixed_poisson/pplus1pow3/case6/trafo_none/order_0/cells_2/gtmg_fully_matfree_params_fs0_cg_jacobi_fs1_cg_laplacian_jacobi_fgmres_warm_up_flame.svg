<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="283" onload="init(evt)" viewBox="0 0 1200 283" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:13px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:18px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 13 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (1 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="283.0" fill="url(#background)"  />
<text id="title" x="600.00" y="26" >Firedrake example</text>
<text id="details" x="10.00" y="265" > </text>
<text id="unzoom" x="10.00" y="26" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="26" >Search</text>
<text id="ignorecase" x="1174.00" y="26" >ic</text>
<text id="matched" x="1090.00" y="265" > </text>
<g id="frames">
<g >
<title>firedrake.parloops.par_loop (1,022,242 us, 4.91%)</title><rect x="290.1" y="167" width="58.0" height="15.0" fill="rgb(133.891600777562,161.924623129234,133.891600777562)" rx="2" ry="2" />
<text  x="293.10" y="177.5" >fired..</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (1,610,635 us, 7.74%)</title><rect x="12.5" y="135" width="91.3" height="15.0" fill="rgb(154.24657721876,129.223758677161,129.223758677161)" rx="2" ry="2" />
<text  x="15.46" y="145.5" >pyop2.glo..</text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (2,683 us, 0.01%)</title><rect x="360.1" y="199" width="0.1" height="15.0" fill="rgb(149.816777911494,149.816777911494,118.342846801856)" rx="2" ry="2" />
<text  x="363.08" y="209.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (6,425 us, 0.03%)</title><rect x="1189.6" y="135" width="0.4" height="15.0" fill="rgb(149.534229415464,149.534229415464,116.973573321093)" rx="2" ry="2" />
<text  x="1192.64" y="145.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (7,713,530 us, 37.07%)</title><rect x="412.5" y="151" width="437.4" height="15.0" fill="rgb(144.984580485916,144.984580485916,155.480886545661)" rx="2" ry="2" />
<text  x="415.45" y="161.5" >pyop2.global_kernel.GlobalKernel.compile</text>
</g>
<g >
<title>DMPlexStratify (4,338 us, 0.02%)</title><rect x="110.9" y="87" width="0.2" height="15.0" fill="rgb(115.660738923058,115.660738923058,149.805304307689)" rx="2" ry="2" />
<text  x="113.86" y="97.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.__init__ (13,414 us, 0.06%)</title><rect x="289.3" y="71" width="0.8" height="15.0" fill="rgb(133.1840137672,133.1840137672,153.196905890426)" rx="2" ry="2" />
<text  x="292.34" y="81.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_form0_cell_integral_otherwise (7,722,528 us, 37.11%)</title><rect x="411.9" y="135" width="438.0" height="15.0" fill="rgb(151.641343286916,141.705942172723,151.641343286916)" rx="2" ry="2" />
<text  x="414.94" y="145.5" >Parloop_Cells_wrap_form0_cell_integral_otherwise</text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (2,683 us, 0.01%)</title><rect x="360.1" y="231" width="0.1" height="15.0" fill="rgb(148.363633179664,159.568710877729,148.363633179664)" rx="2" ry="2" />
<text  x="363.08" y="241.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (13,137 us, 0.06%)</title><rect x="103.8" y="135" width="0.7" height="15.0" fill="rgb(137.331791625253,105.03771603971,137.331791625253)" rx="2" ry="2" />
<text  x="106.79" y="145.5" ></text>
</g>
<g >
<title>Mesh: reorder (5,580 us, 0.03%)</title><rect x="108.8" y="87" width="0.3" height="15.0" fill="rgb(131.910252522117,162.247168194074,131.910252522117)" rx="2" ry="2" />
<text  x="111.76" y="97.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (4,861,977 us, 23.36%)</title><rect x="850.1" y="151" width="275.7" height="15.0" fill="rgb(119.845774068087,148.108163647282,148.108163647282)" rx="2" ry="2" />
<text  x="853.14" y="161.5" >pyop2.global_kernel.GlobalKernel...</text>
</g>
<g >
<title>firedrake.functionspace.MixedFunctionSpace (3,969 us, 0.02%)</title><rect x="358.8" y="151" width="0.3" height="15.0" fill="rgb(122.554566943648,148.810443281686,148.810443281686)" rx="2" ry="2" />
<text  x="361.84" y="161.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (6,298 us, 0.03%)</title><rect x="359.9" y="183" width="0.3" height="15.0" fill="rgb(135.271109236633,135.271109236633,153.600859852252)" rx="2" ry="2" />
<text  x="362.87" y="193.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (53,400 us, 0.26%)</title><rect x="104.5" y="87" width="3.1" height="15.0" fill="rgb(139.722021984255,139.722021984255,154.462326835662)" rx="2" ry="2" />
<text  x="107.54" y="97.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalProblem.__init__ (10,280 us, 0.05%)</title><rect x="288.8" y="87" width="0.5" height="15.0" fill="rgb(131.763020900824,162.271136132424,131.763020900824)" rx="2" ry="2" />
<text  x="291.75" y="97.5" ></text>
</g>
<g >
<title>Mesh: numbering (9,550 us, 0.05%)</title><rect x="108.2" y="87" width="0.6" height="15.0" fill="rgb(115.749735416515,115.749735416515,149.822529435455)" rx="2" ry="2" />
<text  x="111.22" y="97.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (1,015,875 us, 4.88%)</title><rect x="290.5" y="215" width="57.6" height="15.0" fill="rgb(149.180451947537,149.180451947537,115.259113284216)" rx="2" ry="2" />
<text  x="293.46" y="225.5" >pyop2..</text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (1,131,393 us, 5.44%)</title><rect x="1125.8" y="119" width="64.2" height="15.0" fill="rgb(153.103483716058,120.460041823112,120.460041823112)" rx="2" ry="2" />
<text  x="1128.84" y="129.5" >firedr..</text>
</g>
<g >
<title>SCForwardElim (1,170,199 us, 5.62%)</title><rect x="290.1" y="135" width="66.4" height="15.0" fill="rgb(148.232216331,148.232216331,110.663817604078)" rx="2" ry="2" />
<text  x="293.10" y="145.5" >SCForw..</text>
</g>
<g >
<title>Parloop_Cells_wrap_form1_cell_integral_otherwise (4,866,878 us, 23.39%)</title><rect x="849.9" y="135" width="275.9" height="15.0" fill="rgb(154.359471806603,130.089283850627,130.089283850627)" rx="2" ry="2" />
<text  x="852.86" y="145.5" >Parloop_Cells_wrap_form1_cell_int..</text>
</g>
<g >
<title>CreateFunctionSpace (2,385 us, 0.01%)</title><rect x="356.3" y="183" width="0.2" height="15.0" fill="rgb(152.925276541841,152.925276541841,133.407109395077)" rx="2" ry="2" />
<text  x="359.32" y="193.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (4,360 us, 0.02%)</title><rect x="289.8" y="119" width="0.3" height="15.0" fill="rgb(117.620563800292,117.620563800292,150.184625251669)" rx="2" ry="2" />
<text  x="292.85" y="129.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (13,137 us, 0.06%)</title><rect x="103.8" y="119" width="0.7" height="15.0" fill="rgb(151.924479103797,142.431477703481,151.924479103797)" rx="2" ry="2" />
<text  x="106.79" y="129.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (7,224 us, 0.03%)</title><rect x="359.1" y="183" width="0.4" height="15.0" fill="rgb(129.278624544628,129.278624544628,152.441024105412)" rx="2" ry="2" />
<text  x="362.07" y="193.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (2,410 us, 0.01%)</title><rect x="411.4" y="135" width="0.2" height="15.0" fill="rgb(153.332963611361,153.332963611361,135.382823655057)" rx="2" ry="2" />
<text  x="414.43" y="145.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.action (5,713 us, 0.03%)</title><rect x="288.4" y="87" width="0.4" height="15.0" fill="rgb(125.76100289757,163.248208830628,125.76100289757)" rx="2" ry="2" />
<text  x="291.43" y="97.5" ></text>
</g>
<g >
<title>Log_Event_form0_cell_integral_otherwise (6,122 us, 0.03%)</title><rect x="412.1" y="151" width="0.4" height="15.0" fill="rgb(139.23743396901,161.054371214347,139.23743396901)" rx="2" ry="2" />
<text  x="415.10" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (7,224 us, 0.03%)</title><rect x="359.1" y="151" width="0.4" height="15.0" fill="rgb(138.867136081668,108.972036209275,138.867136081668)" rx="2" ry="2" />
<text  x="362.07" y="161.5" ></text>
</g>
<g >
<title>KSPSolve (1,170,199 us, 5.62%)</title><rect x="290.1" y="103" width="66.4" height="15.0" fill="rgb(144.128521450122,160.25814767091,144.128521450122)" rx="2" ry="2" />
<text  x="293.10" y="113.5" >KSPSolve</text>
</g>
<g >
<title>firedrake (20,808,867 us, 100.00%)</title><rect x="10.0" y="55" width="1180.0" height="15.0" fill="rgb(152.075430632225,112.578301513728,112.578301513728)" rx="2" ry="2" />
<text  x="13.00" y="65.5" >firedrake</text>
</g>
<g >
<title>HybridInit (971,841 us, 4.67%)</title><rect x="356.5" y="119" width="55.1" height="15.0" fill="rgb(153.818455014122,125.941488441601,125.941488441601)" rx="2" ry="2" />
<text  x="359.45" y="129.5" >Hybri..</text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (2,683 us, 0.01%)</title><rect x="360.1" y="215" width="0.1" height="15.0" fill="rgb(137.90285128855,152.789628111846,152.789628111846)" rx="2" ry="2" />
<text  x="363.08" y="225.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (13,584 us, 0.07%)</title><rect x="358.7" y="135" width="0.8" height="15.0" fill="rgb(153.801313285102,153.801313285102,137.652518227804)" rx="2" ry="2" />
<text  x="361.71" y="145.5" ></text>
</g>
<g >
<title>firedrake.matrix_free.operators.ImplicitMatrixContext.__init__ (9,352 us, 0.04%)</title><rect x="289.6" y="103" width="0.5" height="15.0" fill="rgb(130.30082437782,150.818732246101,150.818732246101)" rx="2" ry="2" />
<text  x="292.57" y="113.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (3,969 us, 0.02%)</title><rect x="358.8" y="167" width="0.3" height="15.0" fill="rgb(130.631519416549,162.455334048469,130.631519416549)" rx="2" ry="2" />
<text  x="361.84" y="177.5" ></text>
</g>
<g >
<title>CreateMesh (26,714 us, 0.13%)</title><rect x="107.6" y="71" width="1.5" height="15.0" fill="rgb(136.87672192435,136.87672192435,153.911623598261)" rx="2" ry="2" />
<text  x="110.56" y="81.5" ></text>
</g>
<g >
<title>CreateExtMesh (1,667,095 us, 8.01%)</title><rect x="10.0" y="71" width="94.5" height="15.0" fill="rgb(144.338401082399,160.223981219144,144.338401082399)" rx="2" ry="2" />
<text  x="13.00" y="81.5" >CreateExtM..</text>
</g>
<g >
<title>HybridRHS (147,957 us, 0.71%)</title><rect x="348.1" y="151" width="8.4" height="15.0" fill="rgb(134.786647800026,151.98172350371,151.98172350371)" rx="2" ry="2" />
<text  x="351.06" y="161.5" ></text>
</g>
<g >
<title>ParLoopExecute (1,015,875 us, 4.88%)</title><rect x="290.5" y="183" width="57.6" height="15.0" fill="rgb(154.431615245409,154.431615245409,140.707058496983)" rx="2" ry="2" />
<text  x="293.46" y="193.5" >ParLo..</text>
</g>
<g >
<title>firedrake.utility_meshes.RectangleMesh (8,208 us, 0.04%)</title><rect x="288.0" y="87" width="0.4" height="15.0" fill="rgb(140.628935632124,153.49639071944,153.49639071944)" rx="2" ry="2" />
<text  x="290.96" y="97.5" ></text>
</g>
<g >
<title>firedrake.utility_meshes.SquareMesh (8,208 us, 0.04%)</title><rect x="288.0" y="71" width="0.4" height="15.0" fill="rgb(156.726099918794,148.233432710751,148.233432710751)" rx="2" ry="2" />
<text  x="290.96" y="81.5" ></text>
</g>
<g >
<title>all (20,808,867 us, 100%)</title><rect x="10.0" y="39" width="1180.0" height="15.0" fill="rgb(146.942911356669,159.799991174496,146.942911356669)" rx="2" ry="2" />
<text  x="13.00" y="49.5" ></text>
</g>
<g >
<title>FunctionSpaceData: CreateElement (8,804 us, 0.04%)</title><rect x="105.5" y="135" width="0.5" height="15.0" fill="rgb(115.780905698978,115.780905698978,149.828562393351)" rx="2" ry="2" />
<text  x="108.52" y="145.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (9,409 us, 0.05%)</title><rect x="359.7" y="167" width="0.5" height="15.0" fill="rgb(152.720928561924,152.720928561924,132.416807646246)" rx="2" ry="2" />
<text  x="362.70" y="177.5" ></text>
</g>
<g >
<title>ParLoopExecute (876,298 us, 4.21%)</title><rect x="361.7" y="151" width="49.7" height="15.0" fill="rgb(153.502849428049,123.521845615045,123.521845615045)" rx="2" ry="2" />
<text  x="364.73" y="161.5" >ParL..</text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (3,969 us, 0.02%)</title><rect x="358.8" y="215" width="0.3" height="15.0" fill="rgb(154.378410183552,130.234478073899,130.234478073899)" rx="2" ry="2" />
<text  x="361.84" y="225.5" ></text>
</g>
<g >
<title>ParLoopExecute (12,589,406 us, 60.50%)</title><rect x="411.9" y="119" width="713.9" height="15.0" fill="rgb(132.341686993456,151.347844776081,151.347844776081)" rx="2" ry="2" />
<text  x="414.94" y="129.5" >ParLoopExecute</text>
</g>
<g >
<title>DMPlexSymmetrize (4,575 us, 0.02%)</title><rect x="111.1" y="87" width="0.3" height="15.0" fill="rgb(152.856127988819,118.563647914281,118.563647914281)" rx="2" ry="2" />
<text  x="114.11" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (3,969 us, 0.02%)</title><rect x="358.8" y="199" width="0.3" height="15.0" fill="rgb(111.861494159164,111.861494159164,149.069966611451)" rx="2" ry="2" />
<text  x="361.84" y="209.5" ></text>
</g>
<g >
<title>firedrake.parloops.par_loop (884,140 us, 4.25%)</title><rect x="361.3" y="135" width="50.1" height="15.0" fill="rgb(123.463724764693,123.463724764693,151.315559631876)" rx="2" ry="2" />
<text  x="364.29" y="145.5" >fire..</text>
</g>
<g >
<title>CreateMesh (5,164 us, 0.02%)</title><rect x="107.9" y="87" width="0.3" height="15.0" fill="rgb(154.455218668041,130.823343121646,130.823343121646)" rx="2" ry="2" />
<text  x="110.93" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (53,400 us, 0.26%)</title><rect x="104.5" y="119" width="3.1" height="15.0" fill="rgb(139.461521000787,153.193727666871,153.193727666871)" rx="2" ry="2" />
<text  x="107.54" y="129.5" ></text>
</g>
<g >
<title>FunctionSpaceData: CreateElement (7,224 us, 0.03%)</title><rect x="359.1" y="199" width="0.4" height="15.0" fill="rgb(152.337069625852,114.584200464867,114.584200464867)" rx="2" ry="2" />
<text  x="362.07" y="209.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (10,280 us, 0.05%)</title><rect x="288.8" y="103" width="0.5" height="15.0" fill="rgb(134.199395624777,97.0109512884917,134.199395624777)" rx="2" ry="2" />
<text  x="291.75" y="113.5" ></text>
</g>
<g >
<title>SNESSolve (15,869,482 us, 76.26%)</title><rect x="290.1" y="87" width="899.9" height="15.0" fill="rgb(147.887932335217,159.646150550081,147.887932335217)" rx="2" ry="2" />
<text  x="293.10" y="97.5" >SNESSolve</text>
</g>
<g >
<title>ParLoopExecute (1,610,635 us, 7.74%)</title><rect x="12.5" y="103" width="91.3" height="15.0" fill="rgb(147.008296354515,155.150299054874,155.150299054874)" rx="2" ry="2" />
<text  x="15.46" y="113.5" >ParLoopEx..</text>
</g>
<g >
<title>firedrake.functionspace.VectorFunctionSpace (13,137 us, 0.06%)</title><rect x="103.8" y="87" width="0.7" height="15.0" fill="rgb(141.427576294512,160.697836417172,141.427576294512)" rx="2" ry="2" />
<text  x="106.79" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (7,224 us, 0.03%)</title><rect x="359.1" y="167" width="0.4" height="15.0" fill="rgb(154.359986919706,130.093233051077,130.093233051077)" rx="2" ry="2" />
<text  x="362.07" y="177.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.action (4,992 us, 0.02%)</title><rect x="289.6" y="119" width="0.2" height="15.0" fill="rgb(129.212062583956,150.536460669914,150.536460669914)" rx="2" ry="2" />
<text  x="292.57" y="129.5" ></text>
</g>
<g >
<title>DMPlexInterp (3,667 us, 0.02%)</title><rect x="288.2" y="119" width="0.2" height="15.0" fill="rgb(145.213142547698,154.684888808662,154.684888808662)" rx="2" ry="2" />
<text  x="291.22" y="129.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (3,969 us, 0.02%)</title><rect x="358.8" y="183" width="0.3" height="15.0" fill="rgb(112.71175490161,146.25860312264,146.25860312264)" rx="2" ry="2" />
<text  x="361.84" y="193.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (13,137 us, 0.06%)</title><rect x="103.8" y="103" width="0.7" height="15.0" fill="rgb(125.178239133255,163.3430773504,125.178239133255)" rx="2" ry="2" />
<text  x="106.79" y="113.5" ></text>
</g>
<g >
<title>HybridBreak (1,022,242 us, 4.91%)</title><rect x="290.1" y="151" width="58.0" height="15.0" fill="rgb(152.35038880577,143.522871314785,152.35038880577)" rx="2" ry="2" />
<text  x="293.10" y="161.5" >Hybri..</text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (53,400 us, 0.26%)</title><rect x="104.5" y="103" width="3.1" height="15.0" fill="rgb(153.039284337126,119.967846584634,119.967846584634)" rx="2" ry="2" />
<text  x="107.54" y="113.5" ></text>
</g>
<g >
<title>SNESFunctionEval (13,727,442 us, 65.97%)</title><rect x="411.6" y="103" width="778.4" height="15.0" fill="rgb(135.123476522787,161.724085217221,135.123476522787)" rx="2" ry="2" />
<text  x="414.56" y="113.5" >SNESFunctionEval</text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (1,015,875 us, 4.88%)</title><rect x="290.5" y="199" width="57.6" height="15.0" fill="rgb(156.34972054701,145.34785752708,145.34785752708)" rx="2" ry="2" />
<text  x="293.46" y="209.5" >Parlo..</text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (13,296 us, 0.06%)</title><rect x="359.5" y="135" width="0.7" height="15.0" fill="rgb(149.547337505737,149.547337505737,117.037097143187)" rx="2" ry="2" />
<text  x="362.48" y="145.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.solve (15,869,482 us, 76.26%)</title><rect x="290.1" y="71" width="899.9" height="15.0" fill="rgb(123.448480245023,149.042198582043,149.042198582043)" rx="2" ry="2" />
<text  x="293.10" y="81.5" >firedrake.variational_solver.NonlinearVariationalSolver.solve</text>
</g>
<g >
<title>firedrake.mesh._from_cell_list (3,667 us, 0.02%)</title><rect x="288.2" y="103" width="0.2" height="15.0" fill="rgb(153.385368497658,153.385368497658,135.636785796342)" rx="2" ry="2" />
<text  x="291.22" y="113.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (13,296 us, 0.06%)</title><rect x="359.5" y="151" width="0.7" height="15.0" fill="rgb(153.16917329251,153.16917329251,134.589070571396)" rx="2" ry="2" />
<text  x="362.48" y="161.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (876,298 us, 4.21%)</title><rect x="361.7" y="183" width="49.7" height="15.0" fill="rgb(136.947808623449,136.947808623449,153.925382314216)" rx="2" ry="2" />
<text  x="364.73" y="193.5" >pyop..</text>
</g>
<g >
<title>firedrake.__init__ (3,114,181 us, 14.97%)</title><rect x="111.4" y="71" width="176.6" height="15.0" fill="rgb(141.718813660026,116.279460003818,141.718813660026)" rx="2" ry="2" />
<text  x="114.37" y="81.5" >firedrake.__init__</text>
</g>
<g >
<title>firedrake.slate.slac.optimise.optimise (18,180 us, 0.09%)</title><rect x="355.4" y="167" width="1.1" height="15.0" fill="rgb(130.878996146863,130.878996146863,152.75077344778)" rx="2" ry="2" />
<text  x="358.42" y="177.5" ></text>
</g>
<g >
<title>PCSetUp (971,841 us, 4.67%)</title><rect x="356.5" y="103" width="55.1" height="15.0" fill="rgb(134.466540980408,134.466540980408,153.44513696395)" rx="2" ry="2" />
<text  x="359.45" y="113.5" >PCSetUp</text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (3,951 us, 0.02%)</title><rect x="1189.8" y="151" width="0.2" height="15.0" fill="rgb(153.72475573227,125.223127280737,125.223127280737)" rx="2" ry="2" />
<text  x="1192.78" y="161.5" ></text>
</g>
<g >
<title>firedrake.mesh.MeshTopology._facets (27,210 us, 0.13%)</title><rect x="106.0" y="135" width="1.6" height="15.0" fill="rgb(120.252298913223,120.252298913223,150.693993338043)" rx="2" ry="2" />
<text  x="109.02" y="145.5" ></text>
</g>
<g >
<title>firedrake.assemble.allocate_matrix (9,352 us, 0.04%)</title><rect x="289.6" y="87" width="0.5" height="15.0" fill="rgb(151.7681267351,151.7681267351,127.79938340856)" rx="2" ry="2" />
<text  x="292.57" y="97.5" ></text>
</g>
<g >
<title>PetscBarrier (40,380 us, 0.19%)</title><rect x="109.1" y="71" width="2.3" height="15.0" fill="rgb(133.44920028383,133.44920028383,153.248232312999)" rx="2" ry="2" />
<text  x="112.08" y="81.5" ></text>
</g>
<g >
<title>firedrake.interpolation.make_interpolator (18,681 us, 0.09%)</title><rect x="360.2" y="135" width="1.1" height="15.0" fill="rgb(145.232933734401,154.690019857067,154.690019857067)" rx="2" ry="2" />
<text  x="363.23" y="145.5" ></text>
</g>
<g >
<title>Log_Event_form1_cell_integral_otherwise (2,370 us, 0.01%)</title><rect x="850.0" y="151" width="0.1" height="15.0" fill="rgb(148.662898826588,148.662898826588,112.750971236543)" rx="2" ry="2" />
<text  x="853.00" y="161.5" ></text>
</g>
<g >
<title>firedrake.extrusion_utils.make_extruded_coords (1,650,532 us, 7.93%)</title><rect x="10.2" y="87" width="93.6" height="15.0" fill="rgb(132.185448246528,151.307338434285,151.307338434285)" rx="2" ry="2" />
<text  x="13.19" y="97.5" >firedrake...</text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (13,137 us, 0.06%)</title><rect x="103.8" y="151" width="0.7" height="15.0" fill="rgb(134.292899242168,134.292899242168,153.411528885581)" rx="2" ry="2" />
<text  x="106.79" y="161.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.LinearVariationalProblem.__init__ (15,993 us, 0.08%)</title><rect x="288.4" y="71" width="0.9" height="15.0" fill="rgb(104.6672048799,144.172979042937,144.172979042937)" rx="2" ry="2" />
<text  x="291.43" y="81.5" ></text>
</g>
<g >
<title>PCApply (1,170,199 us, 5.62%)</title><rect x="290.1" y="119" width="66.4" height="15.0" fill="rgb(156.797037928325,148.777290783825,148.777290783825)" rx="2" ry="2" />
<text  x="293.10" y="129.5" >PCApply</text>
</g>
<g >
<title>CreateFunctionSpace (53,400 us, 0.26%)</title><rect x="104.5" y="71" width="3.1" height="15.0" fill="rgb(110.419920332416,145.664423789886,145.664423789886)" rx="2" ry="2" />
<text  x="107.54" y="81.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_pyop2_kernel_uniform_extrusion (1,610,635 us, 7.74%)</title><rect x="12.5" y="119" width="91.3" height="15.0" fill="rgb(139.258427361615,161.050953685318,139.258427361615)" rx="2" ry="2" />
<text  x="15.46" y="129.5" >Parloop_C..</text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (876,298 us, 4.21%)</title><rect x="361.7" y="167" width="49.7" height="15.0" fill="rgb(137.373146986177,152.652297366787,152.652297366787)" rx="2" ry="2" />
<text  x="364.73" y="177.5" >Parl..</text>
</g>
</g>
</svg>
