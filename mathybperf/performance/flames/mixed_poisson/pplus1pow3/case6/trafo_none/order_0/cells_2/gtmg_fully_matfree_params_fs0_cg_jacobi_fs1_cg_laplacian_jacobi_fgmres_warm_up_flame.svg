<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="267" onload="init(evt)" viewBox="0 0 1200 267" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:13px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:18px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 13 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (1 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="267.0" fill="url(#background)"  />
<text id="title" x="600.00" y="26" >Firedrake example</text>
<text id="details" x="10.00" y="249" > </text>
<text id="unzoom" x="10.00" y="26" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="26" >Search</text>
<text id="ignorecase" x="1174.00" y="26" >ic</text>
<text id="matched" x="1090.00" y="249" > </text>
<g id="frames">
<g >
<title>firedrake.functionspace.MixedFunctionSpace (5,361 us, 0.01%)</title><rect x="1001.7" y="151" width="0.1" height="15.0" fill="rgb(156.203258113919,144.22497887338,144.22497887338)" rx="2" ry="2" />
<text  x="1004.65" y="161.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (7,487 us, 0.02%)</title><rect x="1002.0" y="151" width="0.2" height="15.0" fill="rgb(137.91381077101,152.792469459151,152.792469459151)" rx="2" ry="2" />
<text  x="1005.03" y="161.5" ></text>
</g>
<g >
<title>firedrake (46,065,027 us, 100.00%)</title><rect x="10.0" y="55" width="1180.0" height="15.0" fill="rgb(153.137805799286,120.723177794526,120.723177794526)" rx="2" ry="2" />
<text  x="13.00" y="65.5" >firedrake</text>
</g>
<g >
<title>Parloop_Cells_wrap_form1_cell_integral_otherwise (2,066,411 us, 4.49%)</title><rect x="1107.7" y="135" width="53.0" height="15.0" fill="rgb(130.282131981933,162.512211072709,130.282131981933)" rx="2" ry="2" />
<text  x="1110.73" y="145.5" >Parl..</text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (47,766 us, 0.10%)</title><rect x="59.3" y="87" width="1.2" height="15.0" fill="rgb(152.564952478113,116.331302332197,116.331302332197)" rx="2" ry="2" />
<text  x="62.27" y="97.5" ></text>
</g>
<g >
<title>FunctionSpaceData: CreateElement (9,356 us, 0.02%)</title><rect x="1001.8" y="199" width="0.2" height="15.0" fill="rgb(136.551057423741,152.439163035785,152.439163035785)" rx="2" ry="2" />
<text  x="1004.79" y="209.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_form0_cell_integral_otherwise (3,294,303 us, 7.15%)</title><rect x="1023.3" y="135" width="84.4" height="15.0" fill="rgb(105.338607982616,144.347046514012,144.347046514012)" rx="2" ry="2" />
<text  x="1026.34" y="145.5" >Parloop_C..</text>
</g>
<g >
<title>Mesh: reorder (7,494 us, 0.02%)</title><rect x="61.0" y="87" width="0.2" height="15.0" fill="rgb(154.301148255522,129.64213662567,129.64213662567)" rx="2" ry="2" />
<text  x="63.96" y="97.5" ></text>
</g>
<g >
<title>SCForwardElim (33,578,025 us, 72.89%)</title><rect x="140.5" y="135" width="860.1" height="15.0" fill="rgb(137.890132306813,161.273699391914,137.890132306813)" rx="2" ry="2" />
<text  x="143.51" y="145.5" >SCForwardElim</text>
</g>
<g >
<title>HybridBreak (1,017,786 us, 2.21%)</title><rect x="140.5" y="151" width="26.1" height="15.0" fill="rgb(126.118144271822,126.118144271822,151.829318246159)" rx="2" ry="2" />
<text  x="143.51" y="161.5" >H..</text>
</g>
<g >
<title>firedrake.interpolation.make_interpolator (14,517 us, 0.03%)</title><rect x="1002.2" y="135" width="0.4" height="15.0" fill="rgb(128.794885912055,162.754320898038,128.794885912055)" rx="2" ry="2" />
<text  x="1005.22" y="145.5" ></text>
</g>
<g >
<title>SNESSolve (40,970,062 us, 88.94%)</title><rect x="140.5" y="87" width="1049.5" height="15.0" fill="rgb(152.965231970135,119.400111771032,119.400111771032)" rx="2" ry="2" />
<text  x="143.51" y="97.5" >SNESSolve</text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (9,805 us, 0.02%)</title><rect x="59.0" y="119" width="0.3" height="15.0" fill="rgb(151.528968216226,141.417981054079,151.528968216226)" rx="2" ry="2" />
<text  x="62.02" y="129.5" ></text>
</g>
<g >
<title>PCApply (33,578,025 us, 72.89%)</title><rect x="140.5" y="119" width="860.1" height="15.0" fill="rgb(151.389554009386,151.389554009386,125.964761737794)" rx="2" ry="2" />
<text  x="143.51" y="129.5" >PCApply</text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (9,805 us, 0.02%)</title><rect x="59.0" y="135" width="0.3" height="15.0" fill="rgb(154.850364338774,133.852793263936,133.852793263936)" rx="2" ry="2" />
<text  x="62.02" y="145.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (5,361 us, 0.01%)</title><rect x="1001.7" y="167" width="0.1" height="15.0" fill="rgb(151.930434167283,151.930434167283,128.585950195297)" rx="2" ry="2" />
<text  x="1004.65" y="177.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (7,487 us, 0.02%)</title><rect x="1002.0" y="183" width="0.2" height="15.0" fill="rgb(116.23758927192,116.23758927192,149.916952762307)" rx="2" ry="2" />
<text  x="1005.03" y="193.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (795,965 us, 1.73%)</title><rect x="1002.8" y="167" width="20.4" height="15.0" fill="rgb(146.633444132267,155.053115145403,155.053115145403)" rx="2" ry="2" />
<text  x="1005.77" y="177.5" ></text>
</g>
<g >
<title>firedrake.parloops.par_loop (802,962 us, 1.74%)</title><rect x="1002.6" y="135" width="20.6" height="15.0" fill="rgb(137.386417728996,161.355699439466,137.386417728996)" rx="2" ry="2" />
<text  x="1005.59" y="145.5" ></text>
</g>
<g >
<title>DMPlexBuFrCeLi (5,959 us, 0.01%)</title><rect x="138.8" y="119" width="0.2" height="15.0" fill="rgb(129.474358483624,150.604463310569,150.604463310569)" rx="2" ry="2" />
<text  x="141.84" y="129.5" ></text>
</g>
<g >
<title>PCSetUp (879,005 us, 1.91%)</title><rect x="1000.6" y="103" width="22.6" height="15.0" fill="rgb(129.607363566491,129.607363566491,152.504651012869)" rx="2" ry="2" />
<text  x="1003.65" y="113.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.LinearVariationalProblem.__init__ (15,636 us, 0.03%)</title><rect x="139.3" y="71" width="0.4" height="15.0" fill="rgb(148.576739672291,148.576739672291,112.333430719564)" rx="2" ry="2" />
<text  x="142.33" y="81.5" ></text>
</g>
<g >
<title>CreateExtMesh (1,923,277 us, 4.18%)</title><rect x="10.0" y="71" width="49.3" height="15.0" fill="rgb(115.760090527577,115.760090527577,149.824533650499)" rx="2" ry="2" />
<text  x="13.00" y="81.5" >Crea..</text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.__init__ (30,443 us, 0.07%)</title><rect x="139.7" y="71" width="0.8" height="15.0" fill="rgb(120.024039740866,148.154380673558,148.154380673558)" rx="2" ry="2" />
<text  x="142.73" y="81.5" ></text>
</g>
<g >
<title>DMPlexInterp (13,250 us, 0.03%)</title><rect x="139.0" y="119" width="0.3" height="15.0" fill="rgb(140.604563351043,113.424193587047,140.604563351043)" rx="2" ry="2" />
<text  x="141.99" y="129.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.action (5,973 us, 0.01%)</title><rect x="139.3" y="87" width="0.2" height="15.0" fill="rgb(155.778415319826,140.967850785332,140.967850785332)" rx="2" ry="2" />
<text  x="142.33" y="97.5" ></text>
</g>
<g >
<title>ParLoopExecute (1,010,449 us, 2.19%)</title><rect x="140.7" y="183" width="25.9" height="15.0" fill="rgb(109.082534638834,145.317694165624,145.317694165624)" rx="2" ry="2" />
<text  x="143.70" y="193.5" >P..</text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.solve (40,970,062 us, 88.94%)</title><rect x="140.5" y="71" width="1049.5" height="15.0" fill="rgb(148.755542003881,159.50491176681,148.755542003881)" rx="2" ry="2" />
<text  x="143.51" y="81.5" >firedrake.variational_solver.NonlinearVariationalSolver.solve</text>
</g>
<g >
<title>firedrake.functionspace.VectorFunctionSpace (9,805 us, 0.02%)</title><rect x="59.0" y="87" width="0.3" height="15.0" fill="rgb(110.36893759746,110.36893759746,148.781084696283)" rx="2" ry="2" />
<text  x="62.02" y="97.5" ></text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (1,145,372 us, 2.49%)</title><rect x="1160.7" y="119" width="29.3" height="15.0" fill="rgb(153.522068000782,123.669188005998,123.669188005998)" rx="2" ry="2" />
<text  x="1163.66" y="129.5" >f..</text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (9,805 us, 0.02%)</title><rect x="59.0" y="151" width="0.3" height="15.0" fill="rgb(139.603280397348,139.603280397348,154.439344593035)" rx="2" ry="2" />
<text  x="62.02" y="161.5" ></text>
</g>
<g >
<title>CreateMesh (7,671 us, 0.02%)</title><rect x="138.2" y="119" width="0.2" height="15.0" fill="rgb(128.865639088529,162.742802939077,128.865639088529)" rx="2" ry="2" />
<text  x="141.21" y="129.5" ></text>
</g>
<g >
<title>PetscBarrier (34,347 us, 0.07%)</title><rect x="61.2" y="71" width="0.8" height="15.0" fill="rgb(152.265950024352,114.038950186701,114.038950186701)" rx="2" ry="2" />
<text  x="64.16" y="81.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalProblem.__init__ (9,663 us, 0.02%)</title><rect x="139.5" y="87" width="0.2" height="15.0" fill="rgb(143.269615166322,120.253388863699,143.269615166322)" rx="2" ry="2" />
<text  x="142.49" y="97.5" ></text>
</g>
<g >
<title>SNESFunctionEval (6,513,032 us, 14.14%)</title><rect x="1023.2" y="103" width="166.8" height="15.0" fill="rgb(152.620827327737,116.759676179314,116.759676179314)" rx="2" ry="2" />
<text  x="1026.16" y="113.5" >SNESFunctionEval</text>
</g>
<g >
<title>firedrake.mesh._from_cell_list (36,183 us, 0.08%)</title><rect x="138.4" y="103" width="0.9" height="15.0" fill="rgb(141.474320561864,160.690226885278,141.474320561864)" rx="2" ry="2" />
<text  x="141.41" y="113.5" ></text>
</g>
<g >
<title>DMPlexStratify (5,959 us, 0.01%)</title><rect x="138.8" y="135" width="0.2" height="15.0" fill="rgb(152.4789278395,115.671780102833,115.671780102833)" rx="2" ry="2" />
<text  x="141.84" y="145.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (6,364 us, 0.01%)</title><rect x="1189.8" y="135" width="0.2" height="15.0" fill="rgb(151.484335046872,151.484335046872,126.424085227147)" rx="2" ry="2" />
<text  x="1192.84" y="145.5" ></text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (22,446,174 us, 48.73%)</title><rect x="425.7" y="167" width="574.9" height="15.0" fill="rgb(152.945532141712,152.945532141712,133.505271148294)" rx="2" ry="2" />
<text  x="428.67" y="177.5" >firedrake.tsfc_interface.compile_form</text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (1,010,449 us, 2.19%)</title><rect x="140.7" y="199" width="25.9" height="15.0" fill="rgb(139.172693496348,139.172693496348,154.356005192842)" rx="2" ry="2" />
<text  x="143.70" y="209.5" >P..</text>
</g>
<g >
<title>firedrake.slate.slac.optimise.optimise (45,649 us, 0.10%)</title><rect x="424.5" y="167" width="1.2" height="15.0" fill="rgb(144.942649108186,154.6147608799,154.6147608799)" rx="2" ry="2" />
<text  x="427.50" y="177.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (3,288,217 us, 7.14%)</title><rect x="1023.5" y="151" width="84.2" height="15.0" fill="rgb(154.161301483225,128.569978038057,128.569978038057)" rx="2" ry="2" />
<text  x="1026.50" y="161.5" >pyop2.gl..</text>
</g>
<g >
<title>firedrake.assemble.allocate_matrix (12,001 us, 0.03%)</title><rect x="140.2" y="87" width="0.3" height="15.0" fill="rgb(149.222601562772,149.222601562772,115.463376804201)" rx="2" ry="2" />
<text  x="143.21" y="97.5" ></text>
</g>
<g >
<title>firedrake.__init__ (2,958,933 us, 6.42%)</title><rect x="62.0" y="71" width="75.8" height="15.0" fill="rgb(139.804214032923,111.373298459366,139.804214032923)" rx="2" ry="2" />
<text  x="65.04" y="81.5" >firedra..</text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (9,356 us, 0.02%)</title><rect x="1001.8" y="183" width="0.2" height="15.0" fill="rgb(120.725740596962,148.336303117731,148.336303117731)" rx="2" ry="2" />
<text  x="1004.79" y="193.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (9,356 us, 0.02%)</title><rect x="1001.8" y="167" width="0.2" height="15.0" fill="rgb(144.274171838511,144.274171838511,155.343388097776)" rx="2" ry="2" />
<text  x="1004.79" y="177.5" ></text>
</g>
<g >
<title>Mesh: numbering (8,557 us, 0.02%)</title><rect x="60.7" y="87" width="0.3" height="15.0" fill="rgb(126.192736309769,163.177926647247,126.192736309769)" rx="2" ry="2" />
<text  x="63.75" y="97.5" ></text>
</g>
<g >
<title>ParLoopExecute (5,360,714 us, 11.64%)</title><rect x="1023.3" y="119" width="137.4" height="15.0" fill="rgb(128.605921217417,150.379312908219,150.379312908219)" rx="2" ry="2" />
<text  x="1026.34" y="129.5" >ParLoopExecute</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (795,965 us, 1.73%)</title><rect x="1002.8" y="183" width="20.4" height="15.0" fill="rgb(140.861016429746,153.556559815119,153.556559815119)" rx="2" ry="2" />
<text  x="1005.77" y="193.5" ></text>
</g>
<g >
<title>HybridInit (879,005 us, 1.91%)</title><rect x="1000.6" y="119" width="22.6" height="15.0" fill="rgb(144.662739653094,123.823270361054,144.662739653094)" rx="2" ry="2" />
<text  x="1003.65" y="129.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (1,852,115 us, 4.02%)</title><rect x="11.6" y="135" width="47.4" height="15.0" fill="rgb(152.840512282037,152.840512282037,132.996328751412)" rx="2" ry="2" />
<text  x="14.57" y="145.5" >pyop..</text>
</g>
<g >
<title>ParLoopExecute (795,965 us, 1.73%)</title><rect x="1002.8" y="151" width="20.4" height="15.0" fill="rgb(131.896868462157,162.249346994533,131.896868462157)" rx="2" ry="2" />
<text  x="1005.77" y="161.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (1,010,449 us, 2.19%)</title><rect x="140.7" y="215" width="25.9" height="15.0" fill="rgb(153.848719934167,126.173519495282,126.173519495282)" rx="2" ry="2" />
<text  x="143.70" y="225.5" >p..</text>
</g>
<g >
<title>FunctionSpaceData: CreateElement (8,239 us, 0.02%)</title><rect x="59.7" y="135" width="0.2" height="15.0" fill="rgb(152.880914987924,118.753681574084,118.753681574084)" rx="2" ry="2" />
<text  x="62.73" y="145.5" ></text>
</g>
<g >
<title>ParLoopExecute (1,852,115 us, 4.02%)</title><rect x="11.6" y="103" width="47.4" height="15.0" fill="rgb(156.775946953897,148.615593313212,148.615593313212)" rx="2" ry="2" />
<text  x="14.57" y="113.5" >ParL..</text>
</g>
<g >
<title>CreateFunctionSpace (14,717 us, 0.03%)</title><rect x="1001.7" y="135" width="0.3" height="15.0" fill="rgb(132.079417459352,132.079417459352,152.983113056649)" rx="2" ry="2" />
<text  x="1004.65" y="145.5" ></text>
</g>
<g >
<title>firedrake.utility_meshes.SquareMesh (58,560 us, 0.13%)</title><rect x="137.8" y="71" width="1.5" height="15.0" fill="rgb(153.572662583226,153.572662583226,136.544441749477)" rx="2" ry="2" />
<text  x="140.83" y="81.5" ></text>
</g>
<g >
<title>firedrake.mesh.MeshTopology._facets (21,242 us, 0.05%)</title><rect x="59.9" y="135" width="0.6" height="15.0" fill="rgb(142.659266326608,142.659266326608,155.030825740634)" rx="2" ry="2" />
<text  x="62.95" y="145.5" ></text>
</g>
<g >
<title>firedrake.utility_meshes.RectangleMesh (58,560 us, 0.13%)</title><rect x="137.8" y="87" width="1.5" height="15.0" fill="rgb(149.994447071873,159.303229546439,149.994447071873)" rx="2" ry="2" />
<text  x="140.83" y="97.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (9,805 us, 0.02%)</title><rect x="59.0" y="103" width="0.3" height="15.0" fill="rgb(128.43844153118,162.812346727482,128.43844153118)" rx="2" ry="2" />
<text  x="62.02" y="113.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (47,766 us, 0.10%)</title><rect x="59.3" y="103" width="1.2" height="15.0" fill="rgb(121.515303581267,148.54100463218,148.54100463218)" rx="2" ry="2" />
<text  x="62.27" y="113.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (7,487 us, 0.02%)</title><rect x="1002.0" y="167" width="0.2" height="15.0" fill="rgb(155.004214617724,155.004214617724,143.48196314743)" rx="2" ry="2" />
<text  x="1005.03" y="177.5" ></text>
</g>
<g >
<title>firedrake.extrusion_utils.make_extruded_coords (1,913,472 us, 4.15%)</title><rect x="10.0" y="87" width="49.0" height="15.0" fill="rgb(140.604607291188,113.424306183668,140.604607291188)" rx="2" ry="2" />
<text  x="13.00" y="97.5" >fire..</text>
</g>
<g >
<title>CreateMesh (7,671 us, 0.02%)</title><rect x="138.2" y="103" width="0.2" height="15.0" fill="rgb(130.120214665868,130.120214665868,152.603912515975)" rx="2" ry="2" />
<text  x="141.21" y="113.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (7,487 us, 0.02%)</title><rect x="1002.0" y="135" width="0.2" height="15.0" fill="rgb(148.638529275628,159.523960350479,148.638529275628)" rx="2" ry="2" />
<text  x="1005.03" y="145.5" ></text>
</g>
<g >
<title>all (46,065,027 us, 100%)</title><rect x="10.0" y="39" width="1180.0" height="15.0" fill="rgb(129.7909978465,162.592163141267,129.7909978465)" rx="2" ry="2" />
<text  x="13.00" y="49.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_pyop2_kernel_uniform_extrusion (1,852,115 us, 4.02%)</title><rect x="11.6" y="119" width="47.4" height="15.0" fill="rgb(144.856130412906,154.59233010705,154.59233010705)" rx="2" ry="2" />
<text  x="14.57" y="129.5" >Parl..</text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (9,356 us, 0.02%)</title><rect x="1001.8" y="151" width="0.2" height="15.0" fill="rgb(154.192256565919,128.807300338711,128.807300338711)" rx="2" ry="2" />
<text  x="1004.79" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (47,766 us, 0.10%)</title><rect x="59.3" y="119" width="1.2" height="15.0" fill="rgb(126.653363403459,163.102940841297,126.653363403459)" rx="2" ry="2" />
<text  x="62.27" y="129.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (9,663 us, 0.02%)</title><rect x="139.5" y="103" width="0.2" height="15.0" fill="rgb(155.459845268791,138.525480394061,138.525480394061)" rx="2" ry="2" />
<text  x="142.49" y="113.5" ></text>
</g>
<g >
<title>firedrake.parloops.par_loop (1,017,786 us, 2.21%)</title><rect x="140.5" y="167" width="26.1" height="15.0" fill="rgb(147.2053376896,147.2053376896,155.910710520568)" rx="2" ry="2" />
<text  x="143.51" y="177.5" >f..</text>
</g>
<g >
<title>HybridRHS (32,560,239 us, 70.68%)</title><rect x="166.6" y="151" width="834.0" height="15.0" fill="rgb(151.752879901461,151.752879901461,127.725494907078)" rx="2" ry="2" />
<text  x="169.58" y="161.5" >HybridRHS</text>
</g>
<g >
<title>KSPSolve (33,578,025 us, 72.89%)</title><rect x="140.5" y="103" width="860.1" height="15.0" fill="rgb(111.079940017622,145.835540004569,145.835540004569)" rx="2" ry="2" />
<text  x="143.51" y="113.5" >KSPSolve</text>
</g>
<g >
<title>firedrake.matrix_free.operators.ImplicitMatrixContext.__init__ (7,016 us, 0.02%)</title><rect x="140.3" y="103" width="0.2" height="15.0" fill="rgb(140.335589528679,160.875601704634,140.335589528679)" rx="2" ry="2" />
<text  x="143.33" y="113.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (47,766 us, 0.10%)</title><rect x="59.3" y="71" width="1.2" height="15.0" fill="rgb(153.628348000116,124.484001334219,124.484001334219)" rx="2" ry="2" />
<text  x="62.27" y="81.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (2,066,411 us, 4.49%)</title><rect x="1107.7" y="151" width="53.0" height="15.0" fill="rgb(156.564099447874,146.99142910037,146.99142910037)" rx="2" ry="2" />
<text  x="1110.73" y="161.5" >pyop..</text>
</g>
<g >
<title>CreateMesh (26,003 us, 0.06%)</title><rect x="60.5" y="71" width="0.7" height="15.0" fill="rgb(140.383875043585,160.867741271975,140.383875043585)" rx="2" ry="2" />
<text  x="63.49" y="81.5" ></text>
</g>
</g>
</svg>
