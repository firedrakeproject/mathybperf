<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="267" onload="init(evt)" viewBox="0 0 1200 267" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:13px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:18px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 13 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (1 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="267.0" fill="url(#background)"  />
<text id="title" x="600.00" y="26" >Firedrake example</text>
<text id="details" x="10.00" y="249" > </text>
<text id="unzoom" x="10.00" y="26" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="26" >Search</text>
<text id="ignorecase" x="1174.00" y="26" >ic</text>
<text id="matched" x="1090.00" y="249" > </text>
<g id="frames">
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (9,140 us, 0.02%)</title><rect x="979.4" y="183" width="0.2" height="15.0" fill="rgb(153.080291752161,120.282236766569,120.282236766569)" rx="2" ry="2" />
<text  x="982.38" y="193.5" ></text>
</g>
<g >
<title>CreateMesh (8,305 us, 0.02%)</title><rect x="136.6" y="119" width="0.2" height="15.0" fill="rgb(108.874181099802,108.874181099802,148.491776987058)" rx="2" ry="2" />
<text  x="139.57" y="129.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_form1_cell_integral_otherwise (3,274,735 us, 6.92%)</title><rect x="1082.8" y="135" width="81.6" height="15.0" fill="rgb(152.293696456511,114.251672833254,114.251672833254)" rx="2" ry="2" />
<text  x="1085.77" y="145.5" >Parloop_..</text>
</g>
<g >
<title>firedrake.assemble.allocate_matrix (16,433 us, 0.03%)</title><rect x="138.6" y="87" width="0.4" height="15.0" fill="rgb(120.757697848325,148.344588331047,148.344588331047)" rx="2" ry="2" />
<text  x="141.61" y="97.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (9,297 us, 0.02%)</title><rect x="137.7" y="103" width="0.3" height="15.0" fill="rgb(117.762186338806,117.762186338806,150.212036065575)" rx="2" ry="2" />
<text  x="140.74" y="113.5" ></text>
</g>
<g >
<title>firedrake.extrusion_utils.make_extruded_coords (1,868,114 us, 3.95%)</title><rect x="10.0" y="87" width="46.6" height="15.0" fill="rgb(155.355163532651,137.722920416992,137.722920416992)" rx="2" ry="2" />
<text  x="13.00" y="97.5" >fire..</text>
</g>
<g >
<title>DMPlexBuFrCeLi (6,986 us, 0.01%)</title><rect x="137.2" y="119" width="0.2" height="15.0" fill="rgb(106.765465582232,144.716972558357,144.716972558357)" rx="2" ry="2" />
<text  x="140.18" y="129.5" ></text>
</g>
<g >
<title>CreateMesh (9,256 us, 0.02%)</title><rect x="58.4" y="87" width="0.2" height="15.0" fill="rgb(142.840500380333,142.840500380333,155.065903299419)" rx="2" ry="2" />
<text  x="61.38" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (55,411 us, 0.12%)</title><rect x="56.8" y="119" width="1.4" height="15.0" fill="rgb(151.589708202939,151.589708202939,126.934739752704)" rx="2" ry="2" />
<text  x="59.81" y="129.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.__init__ (41,846 us, 0.09%)</title><rect x="138.0" y="71" width="1.0" height="15.0" fill="rgb(138.291980185957,138.291980185957,154.185544552121)" rx="2" ry="2" />
<text  x="140.97" y="81.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (1,496,682 us, 3.16%)</title><rect x="980.6" y="167" width="37.3" height="15.0" fill="rgb(135.104963532268,152.064249804662,152.064249804662)" rx="2" ry="2" />
<text  x="983.56" y="177.5" >Pa..</text>
</g>
<g >
<title>firedrake.variational_solver.LinearVariationalProblem.__init__ (9,297 us, 0.02%)</title><rect x="137.7" y="71" width="0.3" height="15.0" fill="rgb(155.222775817099,136.707947931096,136.707947931096)" rx="2" ry="2" />
<text  x="140.74" y="81.5" ></text>
</g>
<g >
<title>firedrake.matrix_free.operators.ImplicitMatrixContext.__init__ (8,217 us, 0.02%)</title><rect x="138.8" y="103" width="0.2" height="15.0" fill="rgb(133.840838645652,96.0921490294821,133.840838645652)" rx="2" ry="2" />
<text  x="141.81" y="113.5" ></text>
</g>
<g >
<title>ParLoopExecute (1,496,682 us, 3.16%)</title><rect x="980.6" y="151" width="37.3" height="15.0" fill="rgb(136.478630135113,152.420385590585,152.420385590585)" rx="2" ry="2" />
<text  x="983.56" y="161.5" >Pa..</text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (7,358 us, 0.02%)</title><rect x="1189.8" y="135" width="0.2" height="15.0" fill="rgb(128.51031367408,162.800646611196,128.51031367408)" rx="2" ry="2" />
<text  x="1192.82" y="145.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (2,584,421 us, 5.46%)</title><rect x="1018.4" y="151" width="64.4" height="15.0" fill="rgb(107.133785698346,144.81246295883,144.81246295883)" rx="2" ry="2" />
<text  x="1021.37" y="161.5" >pyop2...</text>
</g>
<g >
<title>PCApply (33,640,230 us, 71.04%)</title><rect x="139.0" y="119" width="838.3" height="15.0" fill="rgb(148.01499446956,148.01499446956,109.611127044789)" rx="2" ry="2" />
<text  x="142.02" y="129.5" >PCApply</text>
</g>
<g >
<title>HybridRHS (32,486,957 us, 68.61%)</title><rect x="167.8" y="151" width="809.5" height="15.0" fill="rgb(154.675590161357,132.512857903733,132.512857903733)" rx="2" ry="2" />
<text  x="170.76" y="161.5" >HybridRHS</text>
</g>
<g >
<title>firedrake.functionspace.MixedFunctionSpace (6,592 us, 0.01%)</title><rect x="979.2" y="151" width="0.2" height="15.0" fill="rgb(109.737268227902,109.737268227902,148.658826108626)" rx="2" ry="2" />
<text  x="982.21" y="161.5" ></text>
</g>
<g >
<title>Mesh: reorder (9,537 us, 0.02%)</title><rect x="58.9" y="87" width="0.3" height="15.0" fill="rgb(142.639063266071,142.639063266071,155.026915470852)" rx="2" ry="2" />
<text  x="61.92" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (10,419 us, 0.02%)</title><rect x="56.6" y="151" width="0.2" height="15.0" fill="rgb(137.342668088657,161.36282147394,137.342668088657)" rx="2" ry="2" />
<text  x="59.55" y="161.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.solve (42,175,798 us, 89.07%)</title><rect x="139.0" y="71" width="1051.0" height="15.0" fill="rgb(156.02520596255,142.859912379552,142.859912379552)" rx="2" ry="2" />
<text  x="142.02" y="81.5" >firedrake.variational_solver.NonlinearVariationalSolver.solve</text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (9,131 us, 0.02%)</title><rect x="1017.9" y="135" width="0.2" height="15.0" fill="rgb(149.24027217568,149.24027217568,115.54901131291)" rx="2" ry="2" />
<text  x="1020.86" y="145.5" ></text>
</g>
<g >
<title>firedrake.parloops.par_loop (1,153,273 us, 2.44%)</title><rect x="139.0" y="167" width="28.8" height="15.0" fill="rgb(154.59200163169,131.872012509622,131.872012509622)" rx="2" ry="2" />
<text  x="142.02" y="177.5" >f..</text>
</g>
<g >
<title>firedrake.functionspace.VectorFunctionSpace (10,419 us, 0.02%)</title><rect x="56.6" y="87" width="0.2" height="15.0" fill="rgb(106.963095133777,144.768209849498,144.768209849498)" rx="2" ry="2" />
<text  x="59.55" y="97.5" ></text>
</g>
<g >
<title>DMPlexInterp (15,691 us, 0.03%)</title><rect x="137.4" y="119" width="0.3" height="15.0" fill="rgb(151.063858315226,151.063858315226,124.386390296864)" rx="2" ry="2" />
<text  x="140.35" y="129.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (1,496,682 us, 3.16%)</title><rect x="980.6" y="183" width="37.3" height="15.0" fill="rgb(127.907467120099,150.198232216322,150.198232216322)" rx="2" ry="2" />
<text  x="983.56" y="193.5" >py..</text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalProblem.__init__ (9,297 us, 0.02%)</title><rect x="137.7" y="87" width="0.3" height="15.0" fill="rgb(147.509884449471,159.707693229156,147.509884449471)" rx="2" ry="2" />
<text  x="140.74" y="97.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (10,419 us, 0.02%)</title><rect x="56.6" y="103" width="0.2" height="15.0" fill="rgb(150.872956697095,150.872956697095,123.461251685923)" rx="2" ry="2" />
<text  x="59.55" y="113.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_form0_cell_integral_otherwise (2,590,370 us, 5.47%)</title><rect x="1018.2" y="135" width="64.6" height="15.0" fill="rgb(120.60364637311,120.60364637311,150.761996072215)" rx="2" ry="2" />
<text  x="1021.22" y="145.5" >Parloo..</text>
</g>
<g >
<title>CreateFunctionSpace (55,411 us, 0.12%)</title><rect x="56.8" y="71" width="1.4" height="15.0" fill="rgb(127.152254980133,150.002436476331,150.002436476331)" rx="2" ry="2" />
<text  x="59.81" y="81.5" ></text>
</g>
<g >
<title>firedrake (47,353,224 us, 100.00%)</title><rect x="10.0" y="55" width="1180.0" height="15.0" fill="rgb(136.202752289275,102.144552741267,136.202752289275)" rx="2" ry="2" />
<text  x="13.00" y="65.5" >firedrake</text>
</g>
<g >
<title>firedrake.__init__ (3,052,173 us, 6.45%)</title><rect x="60.2" y="71" width="76.0" height="15.0" fill="rgb(132.87507498519,93.6173796495494,132.87507498519)" rx="2" ry="2" />
<text  x="63.18" y="81.5" >firedra..</text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (22,196,047 us, 46.87%)</title><rect x="424.2" y="167" width="553.1" height="15.0" fill="rgb(117.515216523893,117.515216523893,150.164235456237)" rx="2" ry="2" />
<text  x="427.20" y="177.5" >firedrake.tsfc_interface.compile_form</text>
</g>
<g >
<title>PCSetUp (1,636,552 us, 3.46%)</title><rect x="977.3" y="103" width="40.8" height="15.0" fill="rgb(136.49111314834,161.501446696782,136.49111314834)" rx="2" ry="2" />
<text  x="980.30" y="113.5" >PCS..</text>
</g>
<g >
<title>Parloop_Cells_wrap_pyop2_kernel_uniform_extrusion (1,808,248 us, 3.82%)</title><rect x="11.5" y="119" width="45.1" height="15.0" fill="rgb(152.202486681726,113.552397893236,113.552397893236)" rx="2" ry="2" />
<text  x="14.49" y="129.5" >Par..</text>
</g>
<g >
<title>firedrake.utility_meshes.RectangleMesh (60,431 us, 0.13%)</title><rect x="136.2" y="87" width="1.5" height="15.0" fill="rgb(134.717703023235,151.96384893195,151.96384893195)" rx="2" ry="2" />
<text  x="139.24" y="97.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (9,551 us, 0.02%)</title><rect x="979.6" y="183" width="0.2" height="15.0" fill="rgb(149.252692166922,159.42398034492,149.252692166922)" rx="2" ry="2" />
<text  x="982.61" y="193.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (9,551 us, 0.02%)</title><rect x="979.6" y="135" width="0.2" height="15.0" fill="rgb(142.742396161954,160.483795973635,142.742396161954)" rx="2" ry="2" />
<text  x="982.61" y="145.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (55,411 us, 0.12%)</title><rect x="56.8" y="103" width="1.4" height="15.0" fill="rgb(136.878733441232,136.878733441232,153.912012924109)" rx="2" ry="2" />
<text  x="59.81" y="113.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (10,419 us, 0.02%)</title><rect x="56.6" y="119" width="0.2" height="15.0" fill="rgb(119.870689624606,119.870689624606,150.62013347573)" rx="2" ry="2" />
<text  x="59.55" y="129.5" ></text>
</g>
<g >
<title>HybridInit (1,636,552 us, 3.46%)</title><rect x="977.3" y="119" width="40.8" height="15.0" fill="rgb(152.754235710193,117.782473778145,117.782473778145)" rx="2" ry="2" />
<text  x="980.30" y="129.5" >Hyb..</text>
</g>
<g >
<title>firedrake.parloops.par_loop (1,503,992 us, 3.18%)</title><rect x="980.4" y="135" width="37.5" height="15.0" fill="rgb(152.252356661264,113.934734403023,113.934734403023)" rx="2" ry="2" />
<text  x="983.38" y="145.5" >fi..</text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (1,028,374 us, 2.17%)</title><rect x="1164.4" y="119" width="25.6" height="15.0" fill="rgb(153.923959552623,153.923959552623,138.246880908863)" rx="2" ry="2" />
<text  x="1167.37" y="129.5" >f..</text>
</g>
<g >
<title>FunctionSpaceData: CreateElement (9,467 us, 0.02%)</title><rect x="57.3" y="135" width="0.3" height="15.0" fill="rgb(114.508269541107,114.508269541107,149.582245717634)" rx="2" ry="2" />
<text  x="60.32" y="145.5" ></text>
</g>
<g >
<title>KSPSolve (33,640,230 us, 71.04%)</title><rect x="139.0" y="103" width="838.3" height="15.0" fill="rgb(152.005382485994,112.041265725955,112.041265725955)" rx="2" ry="2" />
<text  x="142.02" y="113.5" >KSPSolve</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (1,142,285 us, 2.41%)</title><rect x="139.3" y="215" width="28.5" height="15.0" fill="rgb(154.323272801277,129.811758143123,129.811758143123)" rx="2" ry="2" />
<text  x="142.29" y="225.5" >p..</text>
</g>
<g >
<title>SNESFunctionEval (6,899,016 us, 14.57%)</title><rect x="1018.1" y="103" width="171.9" height="15.0" fill="rgb(134.959272224093,152.026477984024,152.026477984024)" rx="2" ry="2" />
<text  x="1021.08" y="113.5" >SNESFunctionEval</text>
</g>
<g >
<title>SCForwardElim (33,640,230 us, 71.04%)</title><rect x="139.0" y="135" width="838.3" height="15.0" fill="rgb(150.617737438654,150.617737438654,122.224419895015)" rx="2" ry="2" />
<text  x="142.02" y="145.5" >SCForwardElim</text>
</g>
<g >
<title>CreateFunctionSpace (15,732 us, 0.03%)</title><rect x="979.2" y="135" width="0.4" height="15.0" fill="rgb(133.49662979535,161.98892073099,133.49662979535)" rx="2" ry="2" />
<text  x="982.21" y="145.5" ></text>
</g>
<g >
<title>firedrake.interpolation.make_interpolator (21,362 us, 0.05%)</title><rect x="979.8" y="135" width="0.6" height="15.0" fill="rgb(140.013654785745,153.336873462971,153.336873462971)" rx="2" ry="2" />
<text  x="982.84" y="145.5" ></text>
</g>
<g >
<title>CreateExtMesh (1,878,533 us, 3.97%)</title><rect x="10.0" y="71" width="46.8" height="15.0" fill="rgb(139.321132039222,139.321132039222,154.384735233398)" rx="2" ry="2" />
<text  x="13.00" y="81.5" >Crea..</text>
</g>
<g >
<title>ParLoopExecute (1,142,285 us, 2.41%)</title><rect x="139.3" y="183" width="28.5" height="15.0" fill="rgb(152.350880158086,152.350880158086,130.623496150723)" rx="2" ry="2" />
<text  x="142.29" y="193.5" >P..</text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (9,551 us, 0.02%)</title><rect x="979.6" y="151" width="0.2" height="15.0" fill="rgb(154.744375712869,133.040213798665,133.040213798665)" rx="2" ry="2" />
<text  x="982.61" y="161.5" ></text>
</g>
<g >
<title>FunctionSpaceData: CreateElement (9,140 us, 0.02%)</title><rect x="979.4" y="199" width="0.2" height="15.0" fill="rgb(147.975523334318,159.631891550227,147.975523334318)" rx="2" ry="2" />
<text  x="982.38" y="209.5" ></text>
</g>
<g >
<title>SNESSolve (42,175,798 us, 89.07%)</title><rect x="139.0" y="87" width="1051.0" height="15.0" fill="rgb(156.139216161661,143.733990572738,143.733990572738)" rx="2" ry="2" />
<text  x="142.02" y="97.5" >SNESSolve</text>
</g>
<g >
<title>firedrake.mesh.MeshTopology._facets (25,534 us, 0.05%)</title><rect x="57.6" y="135" width="0.6" height="15.0" fill="rgb(111.856028782673,111.856028782673,149.068908796646)" rx="2" ry="2" />
<text  x="60.56" y="145.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (10,419 us, 0.02%)</title><rect x="56.6" y="135" width="0.2" height="15.0" fill="rgb(112.858285803975,112.858285803975,149.262894026576)" rx="2" ry="2" />
<text  x="59.55" y="145.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (9,140 us, 0.02%)</title><rect x="979.4" y="167" width="0.2" height="15.0" fill="rgb(131.16564224156,162.368383821141,131.16564224156)" rx="2" ry="2" />
<text  x="982.38" y="177.5" ></text>
</g>
<g >
<title>PetscBarrier (40,813 us, 0.09%)</title><rect x="59.2" y="71" width="1.0" height="15.0" fill="rgb(148.181409781151,148.181409781151,110.417601247118)" rx="2" ry="2" />
<text  x="62.16" y="81.5" ></text>
</g>
<g >
<title>ParLoopExecute (5,865,105 us, 12.39%)</title><rect x="1018.2" y="119" width="146.2" height="15.0" fill="rgb(143.470360251131,160.365290191676,143.470360251131)" rx="2" ry="2" />
<text  x="1021.22" y="129.5" >ParLoopExecute</text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (9,551 us, 0.02%)</title><rect x="979.6" y="167" width="0.2" height="15.0" fill="rgb(114.174071331225,146.637722196984,146.637722196984)" rx="2" ry="2" />
<text  x="982.61" y="177.5" ></text>
</g>
<g >
<title>CreateMesh (38,922 us, 0.08%)</title><rect x="58.2" y="71" width="1.0" height="15.0" fill="rgb(121.041227030453,148.418095896784,148.418095896784)" rx="2" ry="2" />
<text  x="61.19" y="81.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (9,140 us, 0.02%)</title><rect x="979.4" y="151" width="0.2" height="15.0" fill="rgb(128.561719738337,150.367853265495,150.367853265495)" rx="2" ry="2" />
<text  x="982.38" y="161.5" ></text>
</g>
<g >
<title>Mesh: numbering (12,653 us, 0.03%)</title><rect x="58.6" y="87" width="0.3" height="15.0" fill="rgb(156.083619928919,143.307752788381,143.307752788381)" rx="2" ry="2" />
<text  x="61.61" y="97.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (1,142,285 us, 2.41%)</title><rect x="139.3" y="199" width="28.5" height="15.0" fill="rgb(155.570924727303,139.377089575987,139.377089575987)" rx="2" ry="2" />
<text  x="142.29" y="209.5" >P..</text>
</g>
<g >
<title>HybridBreak (1,153,273 us, 2.44%)</title><rect x="139.0" y="151" width="28.8" height="15.0" fill="rgb(154.029403009604,127.55875640696,127.55875640696)" rx="2" ry="2" />
<text  x="142.02" y="161.5" >H..</text>
</g>
<g >
<title>DMPlexStratify (6,986 us, 0.01%)</title><rect x="137.2" y="135" width="0.2" height="15.0" fill="rgb(149.306399133125,149.306399133125,115.869472722068)" rx="2" ry="2" />
<text  x="140.18" y="145.5" ></text>
</g>
<g >
<title>firedrake.mesh._from_cell_list (38,626 us, 0.08%)</title><rect x="136.8" y="103" width="0.9" height="15.0" fill="rgb(138.542151831904,138.542151831904,154.233964870691)" rx="2" ry="2" />
<text  x="139.78" y="113.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (55,411 us, 0.12%)</title><rect x="56.8" y="87" width="1.4" height="15.0" fill="rgb(154.227084437077,129.074314017589,129.074314017589)" rx="2" ry="2" />
<text  x="59.81" y="97.5" ></text>
</g>
<g >
<title>CreateMesh (8,305 us, 0.02%)</title><rect x="136.6" y="103" width="0.2" height="15.0" fill="rgb(153.008118830331,153.008118830331,133.808575870063)" rx="2" ry="2" />
<text  x="139.57" y="113.5" ></text>
</g>
<g >
<title>firedrake.utility_meshes.SquareMesh (60,431 us, 0.13%)</title><rect x="136.2" y="71" width="1.5" height="15.0" fill="rgb(155.200775942139,155.200775942139,144.434529565749)" rx="2" ry="2" />
<text  x="139.24" y="81.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (3,269,312 us, 6.90%)</title><rect x="1082.9" y="151" width="81.5" height="15.0" fill="rgb(155.066595169875,155.066595169875,143.784268900166)" rx="2" ry="2" />
<text  x="1085.91" y="161.5" >pyop2.gl..</text>
</g>
<g >
<title>all (47,353,224 us, 100%)</title><rect x="10.0" y="39" width="1180.0" height="15.0" fill="rgb(113.776569589322,113.776569589322,149.440626372127)" rx="2" ry="2" />
<text  x="13.00" y="49.5" ></text>
</g>
<g >
<title>ParLoopExecute (1,808,248 us, 3.82%)</title><rect x="11.5" y="103" width="45.1" height="15.0" fill="rgb(153.638342688746,124.560627280384,124.560627280384)" rx="2" ry="2" />
<text  x="14.49" y="113.5" >Par..</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (1,808,248 us, 3.82%)</title><rect x="11.5" y="135" width="45.1" height="15.0" fill="rgb(137.565112402408,161.32660960891,137.565112402408)" rx="2" ry="2" />
<text  x="14.49" y="145.5" >pyo..</text>
</g>
<g >
<title>firedrake.slate.slac.optimise.optimise (34,661 us, 0.07%)</title><rect x="423.3" y="167" width="0.9" height="15.0" fill="rgb(133.802676955078,95.9943596973879,133.802676955078)" rx="2" ry="2" />
<text  x="426.33" y="177.5" ></text>
</g>
</g>
</svg>
