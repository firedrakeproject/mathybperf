<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="267" onload="init(evt)" viewBox="0 0 1200 267" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:13px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:18px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 13 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (1 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="267.0" fill="url(#background)"  />
<text id="title" x="600.00" y="26" >Firedrake example</text>
<text id="details" x="10.00" y="249" > </text>
<text id="unzoom" x="10.00" y="26" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="26" >Search</text>
<text id="ignorecase" x="1174.00" y="26" >ic</text>
<text id="matched" x="1090.00" y="249" > </text>
<g id="frames">
<g >
<title>CreateFunctionSpace (7,077 us, 0.02%)</title><rect x="1005.1" y="183" width="0.2" height="15.0" fill="rgb(155.765880151449,140.871747827776,140.871747827776)" rx="2" ry="2" />
<text  x="1008.07" y="193.5" ></text>
</g>
<g >
<title>firedrake.matrix_free.operators.ImplicitMatrixContext.__init__ (7,065 us, 0.02%)</title><rect x="125.6" y="103" width="0.2" height="15.0" fill="rgb(152.445339282762,115.414267834508,115.414267834508)" rx="2" ry="2" />
<text  x="128.59" y="113.5" ></text>
</g>
<g >
<title>SCForwardElim (34,115,843 us, 74.41%)</title><rect x="125.8" y="135" width="878.1" height="15.0" fill="rgb(136.16603298774,136.16603298774,153.774070900853)" rx="2" ry="2" />
<text  x="128.77" y="145.5" >SCForwardElim</text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (1,139,176 us, 2.48%)</title><rect x="1160.7" y="119" width="29.3" height="15.0" fill="rgb(124.024396892869,163.530912133719,124.024396892869)" rx="2" ry="2" />
<text  x="1163.68" y="129.5" >f..</text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (1,013,813 us, 2.21%)</title><rect x="126.0" y="199" width="26.1" height="15.0" fill="rgb(118.233223298473,147.690094929234,147.690094929234)" rx="2" ry="2" />
<text  x="128.97" y="209.5" >P..</text>
</g>
<g >
<title>firedrake.utility_meshes.SquareMesh (10,870 us, 0.02%)</title><rect x="124.9" y="71" width="0.3" height="15.0" fill="rgb(126.046507527131,163.201731332793,126.046507527131)" rx="2" ry="2" />
<text  x="127.89" y="81.5" ></text>
</g>
<g >
<title>PCApply (34,115,843 us, 74.41%)</title><rect x="125.8" y="119" width="878.1" height="15.0" fill="rgb(136.229002451003,161.544115880069,136.229002451003)" rx="2" ry="2" />
<text  x="128.77" y="129.5" >PCApply</text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (10,995 us, 0.02%)</title><rect x="125.3" y="103" width="0.3" height="15.0" fill="rgb(142.545583173271,160.515835297375,142.545583173271)" rx="2" ry="2" />
<text  x="128.30" y="113.5" ></text>
</g>
<g >
<title>SNESFunctionEval (6,378,165 us, 13.91%)</title><rect x="1025.8" y="103" width="164.2" height="15.0" fill="rgb(156.363717289304,145.455165884662,145.455165884662)" rx="2" ry="2" />
<text  x="1028.84" y="113.5" >SNESFunctionEval</text>
</g>
<g >
<title>Parloop_Cells_wrap_pyop2_kernel_uniform_extrusion (1,223,731 us, 2.67%)</title><rect x="11.7" y="119" width="31.5" height="15.0" fill="rgb(155.840803850834,155.840803850834,147.536203277117)" rx="2" ry="2" />
<text  x="14.74" y="129.5" >Pa..</text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (40,125 us, 0.09%)</title><rect x="43.5" y="87" width="1.0" height="15.0" fill="rgb(153.398924574236,122.725088402478,122.725088402478)" rx="2" ry="2" />
<text  x="46.45" y="97.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (2,209,004 us, 4.82%)</title><rect x="1103.8" y="151" width="56.9" height="15.0" fill="rgb(111.037890078276,145.824638168442,145.824638168442)" rx="2" ry="2" />
<text  x="1106.82" y="161.5" >pyop2..</text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (40,125 us, 0.09%)</title><rect x="43.5" y="119" width="1.0" height="15.0" fill="rgb(149.560553235654,149.560553235654,117.101142603554)" rx="2" ry="2" />
<text  x="46.45" y="129.5" ></text>
</g>
<g >
<title>firedrake.mesh.MeshTopology._facets (17,293 us, 0.04%)</title><rect x="44.0" y="135" width="0.5" height="15.0" fill="rgb(128.893338999853,162.738293651187,128.893338999853)" rx="2" ry="2" />
<text  x="47.04" y="145.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (781,633 us, 1.70%)</title><rect x="1005.7" y="167" width="20.1" height="15.0" fill="rgb(121.126649385298,121.126649385298,150.863222461671)" rx="2" ry="2" />
<text  x="1008.72" y="177.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.solve (41,347,986 us, 90.19%)</title><rect x="125.8" y="71" width="1064.2" height="15.0" fill="rgb(152.188364561695,152.188364561695,129.835920568212)" rx="2" ry="2" />
<text  x="128.77" y="81.5" >firedrake.variational_solver.NonlinearVariationalSolver.solve</text>
</g>
<g >
<title>Parloop_Cells_wrap_form0_cell_integral_otherwise (3,024,519 us, 6.60%)</title><rect x="1026.0" y="135" width="77.8" height="15.0" fill="rgb(153.619721981698,124.417868526348,124.417868526348)" rx="2" ry="2" />
<text  x="1028.98" y="145.5" >Parloop_..</text>
</g>
<g >
<title>Parloop_Cells_wrap_form1_cell_integral_otherwise (2,209,004 us, 4.82%)</title><rect x="1103.8" y="135" width="56.9" height="15.0" fill="rgb(148.517728732738,148.517728732738,112.047454627886)" rx="2" ry="2" />
<text  x="1106.82" y="145.5" >Parlo..</text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (6,955 us, 0.02%)</title><rect x="1189.8" y="135" width="0.2" height="15.0" fill="rgb(107.282334368759,144.850975577086,144.850975577086)" rx="2" ry="2" />
<text  x="1192.82" y="145.5" ></text>
</g>
<g >
<title>firedrake.mesh._from_cell_list (5,930 us, 0.01%)</title><rect x="125.0" y="103" width="0.2" height="15.0" fill="rgb(142.707806378931,160.489426868546,142.707806378931)" rx="2" ry="2" />
<text  x="128.02" y="113.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (3,018,060 us, 6.58%)</title><rect x="1026.1" y="151" width="77.7" height="15.0" fill="rgb(155.267243770045,137.04886890368,137.04886890368)" rx="2" ry="2" />
<text  x="1029.14" y="161.5" >pyop2.gl..</text>
</g>
<g >
<title>FunctionSpaceData: CreateElement (8,479 us, 0.02%)</title><rect x="43.8" y="135" width="0.2" height="15.0" fill="rgb(114.113252655283,114.113252655283,149.505790836506)" rx="2" ry="2" />
<text  x="46.82" y="145.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (8,477 us, 0.02%)</title><rect x="43.2" y="103" width="0.3" height="15.0" fill="rgb(125.605614579561,163.273504603327,125.605614579561)" rx="2" ry="2" />
<text  x="46.23" y="113.5" ></text>
</g>
<g >
<title>CreateExtMesh (1,299,665 us, 2.83%)</title><rect x="10.0" y="71" width="33.5" height="15.0" fill="rgb(153.709072640372,125.102890242852,125.102890242852)" rx="2" ry="2" />
<text  x="13.00" y="81.5" >Cr..</text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (5,689 us, 0.01%)</title><rect x="1004.9" y="183" width="0.2" height="15.0" fill="rgb(141.535005195036,160.680347991506,141.535005195036)" rx="2" ry="2" />
<text  x="1007.93" y="193.5" ></text>
</g>
<g >
<title>HybridInit (853,978 us, 1.86%)</title><rect x="1003.9" y="119" width="21.9" height="15.0" fill="rgb(131.285824915072,162.348819199872,131.285824915072)" rx="2" ry="2" />
<text  x="1006.86" y="129.5" ></text>
</g>
<g >
<title>Mesh: numbering (6,440 us, 0.01%)</title><rect x="44.8" y="87" width="0.2" height="15.0" fill="rgb(127.431785716364,162.976220929894,127.431785716364)" rx="2" ry="2" />
<text  x="47.79" y="97.5" ></text>
</g>
<g >
<title>KSPSolve (34,115,843 us, 74.41%)</title><rect x="125.8" y="103" width="878.1" height="15.0" fill="rgb(125.790094211202,149.649283684386,149.649283684386)" rx="2" ry="2" />
<text  x="128.77" y="113.5" >KSPSolve</text>
</g>
<g >
<title>CreateFunctionSpace (11,573 us, 0.03%)</title><rect x="1004.8" y="135" width="0.3" height="15.0" fill="rgb(152.183647204333,113.407961899887,113.407961899887)" rx="2" ry="2" />
<text  x="1007.78" y="145.5" ></text>
</g>
<g >
<title>all (45,845,881 us, 100%)</title><rect x="10.0" y="39" width="1180.0" height="15.0" fill="rgb(142.487054019721,118.248075925535,142.487054019721)" rx="2" ry="2" />
<text  x="13.00" y="49.5" ></text>
</g>
<g >
<title>SNESSolve (41,347,986 us, 90.19%)</title><rect x="125.8" y="87" width="1064.2" height="15.0" fill="rgb(147.773497871434,131.794588295549,147.773497871434)" rx="2" ry="2" />
<text  x="128.77" y="97.5" >SNESSolve</text>
</g>
<g >
<title>PCSetUp (853,978 us, 1.86%)</title><rect x="1003.9" y="103" width="21.9" height="15.0" fill="rgb(153.912197734065,153.912197734065,138.189881326621)" rx="2" ry="2" />
<text  x="1006.86" y="113.5" ></text>
</g>
<g >
<title>firedrake.utility_meshes.RectangleMesh (10,870 us, 0.02%)</title><rect x="124.9" y="87" width="0.3" height="15.0" fill="rgb(147.56800301774,131.268007732958,147.56800301774)" rx="2" ry="2" />
<text  x="127.89" y="97.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (7,077 us, 0.02%)</title><rect x="1005.1" y="167" width="0.2" height="15.0" fill="rgb(104.809201419256,144.209792960548,144.209792960548)" rx="2" ry="2" />
<text  x="1008.07" y="177.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (40,125 us, 0.09%)</title><rect x="43.5" y="71" width="1.0" height="15.0" fill="rgb(155.030072605926,155.030072605926,143.607274936412)" rx="2" ry="2" />
<text  x="46.45" y="81.5" ></text>
</g>
<g >
<title>firedrake.functionspace.VectorFunctionSpace (8,477 us, 0.02%)</title><rect x="43.2" y="87" width="0.3" height="15.0" fill="rgb(153.505596170792,153.505596170792,136.219427596917)" rx="2" ry="2" />
<text  x="46.23" y="97.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.LinearVariationalProblem.__init__ (16,050 us, 0.04%)</title><rect x="125.2" y="71" width="0.4" height="15.0" fill="rgb(138.149211238023,107.132353797434,138.149211238023)" rx="2" ry="2" />
<text  x="128.17" y="81.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (1,223,731 us, 2.67%)</title><rect x="11.7" y="135" width="31.5" height="15.0" fill="rgb(123.573417810383,123.573417810383,151.336790543945)" rx="2" ry="2" />
<text  x="14.74" y="145.5" >py..</text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (40,125 us, 0.09%)</title><rect x="43.5" y="103" width="1.0" height="15.0" fill="rgb(132.756313688357,162.109437306547,132.756313688357)" rx="2" ry="2" />
<text  x="46.45" y="113.5" ></text>
</g>
<g >
<title>firedrake.interpolation.make_interpolator (12,242 us, 0.03%)</title><rect x="1005.3" y="135" width="0.3" height="15.0" fill="rgb(134.813260593892,151.988623116935,151.988623116935)" rx="2" ry="2" />
<text  x="1008.26" y="145.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalProblem.__init__ (10,995 us, 0.02%)</title><rect x="125.3" y="87" width="0.3" height="15.0" fill="rgb(125.783498476646,163.244546759616,125.783498476646)" rx="2" ry="2" />
<text  x="128.30" y="97.5" ></text>
</g>
<g >
<title>firedrake.slate.slac.optimise.optimise (33,129 us, 0.07%)</title><rect x="430.9" y="167" width="0.9" height="15.0" fill="rgb(143.022606779537,154.116972128028,154.116972128028)" rx="2" ry="2" />
<text  x="433.94" y="177.5" ></text>
</g>
<g >
<title>firedrake.parloops.par_loop (787,320 us, 1.72%)</title><rect x="1005.6" y="135" width="20.2" height="15.0" fill="rgb(150.460618915591,150.460618915591,121.462999360173)" rx="2" ry="2" />
<text  x="1008.57" y="145.5" ></text>
</g>
<g >
<title>CreateMesh (18,379 us, 0.04%)</title><rect x="44.5" y="71" width="0.5" height="15.0" fill="rgb(145.62040795179,154.790476135649,154.790476135649)" rx="2" ry="2" />
<text  x="47.48" y="81.5" ></text>
</g>
<g >
<title>HybridRHS (33,094,277 us, 72.19%)</title><rect x="152.1" y="151" width="851.8" height="15.0" fill="rgb(156.675987049572,147.849234046716,147.849234046716)" rx="2" ry="2" />
<text  x="155.06" y="161.5" >HybridRHS</text>
</g>
<g >
<title>firedrake.__init__ (3,080,136 us, 6.72%)</title><rect x="45.6" y="71" width="79.3" height="15.0" fill="rgb(152.521844042872,152.521844042872,131.452013438533)" rx="2" ry="2" />
<text  x="48.62" y="81.5" >firedrak..</text>
</g>
<g >
<title>ParLoopExecute (781,633 us, 1.70%)</title><rect x="1005.7" y="151" width="20.1" height="15.0" fill="rgb(148.232171269904,148.232171269904,110.663599231074)" rx="2" ry="2" />
<text  x="1008.72" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (8,477 us, 0.02%)</title><rect x="43.2" y="151" width="0.3" height="15.0" fill="rgb(144.099977510786,154.396290465759,154.396290465759)" rx="2" ry="2" />
<text  x="46.23" y="161.5" ></text>
</g>
<g >
<title>ParLoopExecute (5,233,523 us, 11.42%)</title><rect x="1026.0" y="119" width="134.7" height="15.0" fill="rgb(135.414170594728,152.144414598633,152.144414598633)" rx="2" ry="2" />
<text  x="1028.98" y="129.5" >ParLoopExecute</text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (5,689 us, 0.01%)</title><rect x="1004.9" y="151" width="0.2" height="15.0" fill="rgb(152.217998141893,152.217998141893,129.979529456867)" rx="2" ry="2" />
<text  x="1007.93" y="161.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.__init__ (7,065 us, 0.02%)</title><rect x="125.6" y="71" width="0.2" height="15.0" fill="rgb(152.478434512946,115.667997932582,115.667997932582)" rx="2" ry="2" />
<text  x="128.59" y="81.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (781,633 us, 1.70%)</title><rect x="1005.7" y="183" width="20.1" height="15.0" fill="rgb(132.108276774096,162.214931687938,132.108276774096)" rx="2" ry="2" />
<text  x="1008.72" y="193.5" ></text>
</g>
<g >
<title>HybridBreak (1,021,566 us, 2.23%)</title><rect x="125.8" y="151" width="26.3" height="15.0" fill="rgb(119.664135305957,148.061072116359,148.061072116359)" rx="2" ry="2" />
<text  x="128.77" y="161.5" >H..</text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (8,477 us, 0.02%)</title><rect x="43.2" y="119" width="0.3" height="15.0" fill="rgb(152.225050313471,113.725385736607,113.725385736607)" rx="2" ry="2" />
<text  x="46.23" y="129.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (7,077 us, 0.02%)</title><rect x="1005.1" y="135" width="0.2" height="15.0" fill="rgb(152.688657242055,117.279705522423,117.279705522423)" rx="2" ry="2" />
<text  x="1008.07" y="145.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (8,477 us, 0.02%)</title><rect x="43.2" y="135" width="0.3" height="15.0" fill="rgb(133.115816386578,151.548544989113,151.548544989113)" rx="2" ry="2" />
<text  x="46.23" y="145.5" ></text>
</g>
<g >
<title>firedrake.assemble.allocate_matrix (7,065 us, 0.02%)</title><rect x="125.6" y="87" width="0.2" height="15.0" fill="rgb(148.495144532091,148.495144532091,111.938008117056)" rx="2" ry="2" />
<text  x="128.59" y="97.5" ></text>
</g>
<g >
<title>firedrake.extrusion_utils.make_extruded_coords (1,291,188 us, 2.82%)</title><rect x="10.0" y="87" width="33.2" height="15.0" fill="rgb(125.483382849126,163.293402792003,125.483382849126)" rx="2" ry="2" />
<text  x="13.00" y="97.5" >fi..</text>
</g>
<g >
<title>firedrake.ufl_expr.action (5,055 us, 0.01%)</title><rect x="125.2" y="87" width="0.1" height="15.0" fill="rgb(153.907533348258,153.907533348258,138.167276995406)" rx="2" ry="2" />
<text  x="128.17" y="97.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (1,013,813 us, 2.21%)</title><rect x="126.0" y="215" width="26.1" height="15.0" fill="rgb(155.886211257355,141.794286306391,141.794286306391)" rx="2" ry="2" />
<text  x="128.97" y="225.5" >p..</text>
</g>
<g >
<title>PetscBarrier (25,605 us, 0.06%)</title><rect x="45.0" y="71" width="0.6" height="15.0" fill="rgb(154.300632290928,154.300632290928,140.072294948344)" rx="2" ry="2" />
<text  x="47.96" y="81.5" ></text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (22,226,192 us, 48.48%)</title><rect x="431.8" y="167" width="572.1" height="15.0" fill="rgb(154.688849216217,154.688849216217,141.953653893976)" rx="2" ry="2" />
<text  x="434.79" y="177.5" >firedrake.tsfc_interface.compile_form</text>
</g>
<g >
<title>firedrake (45,845,881 us, 100.00%)</title><rect x="10.0" y="55" width="1180.0" height="15.0" fill="rgb(129.375919269555,129.375919269555,152.459855342495)" rx="2" ry="2" />
<text  x="13.00" y="65.5" >firedrake</text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (7,077 us, 0.02%)</title><rect x="1005.1" y="151" width="0.2" height="15.0" fill="rgb(152.889021006018,118.815827712802,118.815827712802)" rx="2" ry="2" />
<text  x="1008.07" y="161.5" ></text>
</g>
<g >
<title>firedrake.parloops.par_loop (1,021,566 us, 2.23%)</title><rect x="125.8" y="167" width="26.3" height="15.0" fill="rgb(144.983398842015,124.644959532663,144.983398842015)" rx="2" ry="2" />
<text  x="128.77" y="177.5" >f..</text>
</g>
<g >
<title>ParLoopExecute (1,223,731 us, 2.67%)</title><rect x="11.7" y="103" width="31.5" height="15.0" fill="rgb(143.542486708983,160.353548675282,143.542486708983)" rx="2" ry="2" />
<text  x="14.74" y="113.5" >Pa..</text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (5,689 us, 0.01%)</title><rect x="1004.9" y="167" width="0.2" height="15.0" fill="rgb(138.842250072769,138.842250072769,154.292048401181)" rx="2" ry="2" />
<text  x="1007.93" y="177.5" ></text>
</g>
<g >
<title>ParLoopExecute (1,013,813 us, 2.21%)</title><rect x="126.0" y="183" width="26.1" height="15.0" fill="rgb(120.078905105607,120.078905105607,150.660433246247)" rx="2" ry="2" />
<text  x="128.97" y="193.5" >P..</text>
</g>
</g>
</svg>
