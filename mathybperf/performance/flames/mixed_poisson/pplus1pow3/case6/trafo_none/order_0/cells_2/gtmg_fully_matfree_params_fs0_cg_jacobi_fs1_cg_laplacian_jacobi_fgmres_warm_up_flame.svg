<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="267" onload="init(evt)" viewBox="0 0 1200 267" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:13px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:18px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 13 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (1 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="267.0" fill="url(#background)"  />
<text id="title" x="600.00" y="26" >Firedrake example</text>
<text id="details" x="10.00" y="249" > </text>
<text id="unzoom" x="10.00" y="26" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="26" >Search</text>
<text id="ignorecase" x="1174.00" y="26" >ic</text>
<text id="matched" x="1090.00" y="249" > </text>
<g id="frames">
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (799,717 us, 1.76%)</title><rect x="1004.5" y="183" width="20.9" height="15.0" fill="rgb(154.825193530677,133.659817068525,133.659817068525)" rx="2" ry="2" />
<text  x="1007.54" y="193.5" ></text>
</g>
<g >
<title>SNESSolve (40,552,568 us, 89.50%)</title><rect x="133.9" y="87" width="1056.1" height="15.0" fill="rgb(139.192614995637,153.124011295165,153.124011295165)" rx="2" ry="2" />
<text  x="136.94" y="97.5" >SNESSolve</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (966,892 us, 2.13%)</title><rect x="134.1" y="215" width="25.2" height="15.0" fill="rgb(154.600834281106,131.939729488482,131.939729488482)" rx="2" ry="2" />
<text  x="137.10" y="225.5" >p..</text>
</g>
<g >
<title>all (45,311,862 us, 100%)</title><rect x="10.0" y="39" width="1180.0" height="15.0" fill="rgb(155.028873880777,135.221366419287,135.221366419287)" rx="2" ry="2" />
<text  x="13.00" y="49.5" ></text>
</g>
<g >
<title>firedrake.extrusion_utils.make_extruded_coords (1,870,620 us, 4.13%)</title><rect x="10.0" y="87" width="48.7" height="15.0" fill="rgb(117.116809036119,147.400654194549,147.400654194549)" rx="2" ry="2" />
<text  x="13.00" y="97.5" >fire..</text>
</g>
<g >
<title>HybridInit (874,526 us, 1.93%)</title><rect x="1002.6" y="119" width="22.8" height="15.0" fill="rgb(152.056729577326,112.434926759501,112.434926759501)" rx="2" ry="2" />
<text  x="1005.59" y="129.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (8,055 us, 0.02%)</title><rect x="1003.8" y="151" width="0.2" height="15.0" fill="rgb(126.109020519554,163.191554799142,126.109020519554)" rx="2" ry="2" />
<text  x="1006.82" y="161.5" ></text>
</g>
<g >
<title>firedrake.utility_meshes.SquareMesh (21,841 us, 0.05%)</title><rect x="132.4" y="71" width="0.6" height="15.0" fill="rgb(150.256747751817,150.256747751817,120.475008335726)" rx="2" ry="2" />
<text  x="135.39" y="81.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (12,363 us, 0.03%)</title><rect x="1003.5" y="135" width="0.3" height="15.0" fill="rgb(139.609865054801,153.23218723643,153.23218723643)" rx="2" ry="2" />
<text  x="1006.50" y="145.5" ></text>
</g>
<g >
<title>CreateExtMesh (1,881,127 us, 4.15%)</title><rect x="10.0" y="71" width="49.0" height="15.0" fill="rgb(136.474766345254,102.841588759713,136.474766345254)" rx="2" ry="2" />
<text  x="13.00" y="81.5" >Crea..</text>
</g>
<g >
<title>firedrake (45,311,862 us, 100.00%)</title><rect x="10.0" y="55" width="1180.0" height="15.0" fill="rgb(133.813898868477,96.0231158504715,133.813898868477)" rx="2" ry="2" />
<text  x="13.00" y="65.5" >firedrake</text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (1,038,534 us, 2.29%)</title><rect x="1163.0" y="119" width="27.0" height="15.0" fill="rgb(125.031247076143,163.36700628993,125.031247076143)" rx="2" ry="2" />
<text  x="1165.95" y="129.5" >f..</text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (10,952 us, 0.02%)</title><rect x="133.1" y="103" width="0.3" height="15.0" fill="rgb(133.377672504142,94.9052857918626,133.377672504142)" rx="2" ry="2" />
<text  x="136.13" y="113.5" ></text>
</g>
<g >
<title>firedrake.interpolation.make_interpolator (11,719 us, 0.03%)</title><rect x="1004.0" y="135" width="0.3" height="15.0" fill="rgb(142.704615782008,160.489946268045,142.704615782008)" rx="2" ry="2" />
<text  x="1007.03" y="145.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (10,507 us, 0.02%)</title><rect x="58.7" y="119" width="0.3" height="15.0" fill="rgb(110.32260451516,110.32260451516,148.772117002934)" rx="2" ry="2" />
<text  x="61.71" y="129.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (2,372,084 us, 5.24%)</title><rect x="1101.2" y="151" width="61.8" height="15.0" fill="rgb(148.558089547652,148.558089547652,112.243049346312)" rx="2" ry="2" />
<text  x="1104.18" y="161.5" >pyop2...</text>
</g>
<g >
<title>firedrake.functionspace.MixedFunctionSpace (5,194 us, 0.01%)</title><rect x="1003.5" y="151" width="0.1" height="15.0" fill="rgb(124.640491439571,163.430617672628,124.640491439571)" rx="2" ry="2" />
<text  x="1006.50" y="161.5" ></text>
</g>
<g >
<title>HybridRHS (32,382,935 us, 71.47%)</title><rect x="159.3" y="151" width="843.3" height="15.0" fill="rgb(145.13483971317,160.094328418786,145.13483971317)" rx="2" ry="2" />
<text  x="162.28" y="161.5" >HybridRHS</text>
</g>
<g >
<title>ParLoopExecute (5,283,445 us, 11.66%)</title><rect x="1025.4" y="119" width="137.6" height="15.0" fill="rgb(138.15357230677,107.143529036098,138.15357230677)" rx="2" ry="2" />
<text  x="1028.36" y="129.5" >ParLoopExecute</text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (8,055 us, 0.02%)</title><rect x="1003.8" y="135" width="0.2" height="15.0" fill="rgb(138.870233660012,161.114148008835,138.870233660012)" rx="2" ry="2" />
<text  x="1006.82" y="145.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (5,899 us, 0.01%)</title><rect x="1189.8" y="135" width="0.2" height="15.0" fill="rgb(140.136289817886,112.224242658332,140.136289817886)" rx="2" ry="2" />
<text  x="1192.85" y="145.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (25,451 us, 0.06%)</title><rect x="59.0" y="119" width="0.7" height="15.0" fill="rgb(136.837420504078,136.837420504078,153.904016871757)" rx="2" ry="2" />
<text  x="61.99" y="129.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.action (6,327 us, 0.01%)</title><rect x="133.0" y="87" width="0.1" height="15.0" fill="rgb(148.351025030603,148.351025030603,111.239582840613)" rx="2" ry="2" />
<text  x="135.96" y="97.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_pyop2_kernel_uniform_extrusion (1,796,112 us, 3.96%)</title><rect x="11.9" y="119" width="46.8" height="15.0" fill="rgb(131.847165077568,162.257438243187,131.847165077568)" rx="2" ry="2" />
<text  x="14.94" y="129.5" >Parl..</text>
</g>
<g >
<title>KSPSolve (33,356,063 us, 73.61%)</title><rect x="133.9" y="103" width="868.7" height="15.0" fill="rgb(152.317281531922,143.438033925551,152.317281531922)" rx="2" ry="2" />
<text  x="136.94" y="113.5" >KSPSolve</text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (25,451 us, 0.06%)</title><rect x="59.0" y="87" width="0.7" height="15.0" fill="rgb(126.440001957914,163.137674099874,126.440001957914)" rx="2" ry="2" />
<text  x="61.99" y="97.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.__init__ (20,319 us, 0.04%)</title><rect x="133.4" y="71" width="0.5" height="15.0" fill="rgb(148.899416819549,148.899416819549,113.897173817814)" rx="2" ry="2" />
<text  x="136.41" y="81.5" ></text>
</g>
<g >
<title>SNESFunctionEval (6,321,979 us, 13.95%)</title><rect x="1025.4" y="103" width="164.6" height="15.0" fill="rgb(155.412627933533,138.163480823755,138.163480823755)" rx="2" ry="2" />
<text  x="1028.36" y="113.5" >SNESFunctionEval</text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (10,507 us, 0.02%)</title><rect x="58.7" y="135" width="0.3" height="15.0" fill="rgb(148.146344074286,159.604083522791,148.146344074286)" rx="2" ry="2" />
<text  x="61.71" y="145.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_form0_cell_integral_otherwise (2,911,361 us, 6.43%)</title><rect x="1025.4" y="135" width="75.8" height="15.0" fill="rgb(149.960123998081,149.960123998081,119.037523990701)" rx="2" ry="2" />
<text  x="1028.36" y="145.5" >Parloop..</text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.solve (40,552,568 us, 89.50%)</title><rect x="133.9" y="71" width="1056.1" height="15.0" fill="rgb(153.212693535379,121.297317104575,121.297317104575)" rx="2" ry="2" />
<text  x="136.94" y="81.5" >firedrake.variational_solver.NonlinearVariationalSolver.solve</text>
</g>
<g >
<title>FunctionSpaceData: CreateElement (11,114 us, 0.02%)</title><rect x="59.4" y="135" width="0.3" height="15.0" fill="rgb(142.319120651414,153.934586835552,153.934586835552)" rx="2" ry="2" />
<text  x="62.36" y="145.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (25,451 us, 0.06%)</title><rect x="59.0" y="103" width="0.7" height="15.0" fill="rgb(155.732421840952,140.615234113963,140.615234113963)" rx="2" ry="2" />
<text  x="61.99" y="113.5" ></text>
</g>
<g >
<title>ParLoopExecute (1,796,112 us, 3.96%)</title><rect x="11.9" y="103" width="46.8" height="15.0" fill="rgb(148.703160740008,148.703160740008,112.946086663116)" rx="2" ry="2" />
<text  x="14.94" y="113.5" >ParL..</text>
</g>
<g >
<title>PCSetUp (874,526 us, 1.93%)</title><rect x="1002.6" y="103" width="22.8" height="15.0" fill="rgb(136.381989787809,161.519210964775,136.381989787809)" rx="2" ry="2" />
<text  x="1005.59" y="113.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (10,507 us, 0.02%)</title><rect x="58.7" y="151" width="0.3" height="15.0" fill="rgb(109.361876084985,145.390116022033,145.390116022033)" rx="2" ry="2" />
<text  x="61.71" y="161.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (966,892 us, 2.13%)</title><rect x="134.1" y="199" width="25.2" height="15.0" fill="rgb(152.142194113928,113.090154873447,113.090154873447)" rx="2" ry="2" />
<text  x="137.10" y="209.5" >P..</text>
</g>
<g >
<title>firedrake.parloops.par_loop (807,391 us, 1.78%)</title><rect x="1004.3" y="135" width="21.1" height="15.0" fill="rgb(154.803117434518,154.803117434518,142.507415259585)" rx="2" ry="2" />
<text  x="1007.34" y="145.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (799,717 us, 1.76%)</title><rect x="1004.5" y="167" width="20.9" height="15.0" fill="rgb(143.970547357151,143.970547357151,155.284622069126)" rx="2" ry="2" />
<text  x="1007.54" y="177.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (7,169 us, 0.02%)</title><rect x="1003.6" y="167" width="0.2" height="15.0" fill="rgb(147.891373981766,147.891373981766,109.012043142407)" rx="2" ry="2" />
<text  x="1006.64" y="177.5" ></text>
</g>
<g >
<title>PetscBarrier (5,429 us, 0.01%)</title><rect x="59.8" y="71" width="0.1" height="15.0" fill="rgb(133.377627487876,162.008293199648,133.377627487876)" rx="2" ry="2" />
<text  x="62.78" y="81.5" ></text>
</g>
<g >
<title>firedrake.matrix_free.operators.ImplicitMatrixContext.__init__ (7,077 us, 0.02%)</title><rect x="133.8" y="103" width="0.1" height="15.0" fill="rgb(126.421150627869,163.140742921045,126.421150627869)" rx="2" ry="2" />
<text  x="136.76" y="113.5" ></text>
</g>
<g >
<title>firedrake.assemble.allocate_matrix (7,077 us, 0.02%)</title><rect x="133.8" y="87" width="0.1" height="15.0" fill="rgb(150.516851130161,150.516851130161,121.735509323089)" rx="2" ry="2" />
<text  x="136.76" y="97.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (10,507 us, 0.02%)</title><rect x="58.7" y="103" width="0.3" height="15.0" fill="rgb(115.547627178413,146.993829268477,146.993829268477)" rx="2" ry="2" />
<text  x="61.71" y="113.5" ></text>
</g>
<g >
<title>FunctionSpaceData: CreateElement (7,169 us, 0.02%)</title><rect x="1003.6" y="199" width="0.2" height="15.0" fill="rgb(129.807786885657,129.807786885657,152.54344262303)" rx="2" ry="2" />
<text  x="1006.64" y="209.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (7,169 us, 0.02%)</title><rect x="1003.6" y="151" width="0.2" height="15.0" fill="rgb(152.919271029498,152.919271029498,133.378005758335)" rx="2" ry="2" />
<text  x="1006.64" y="161.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (25,451 us, 0.06%)</title><rect x="59.0" y="71" width="0.7" height="15.0" fill="rgb(147.23754480986,147.23754480986,155.916944156747)" rx="2" ry="2" />
<text  x="61.99" y="81.5" ></text>
</g>
<g >
<title>firedrake.__init__ (2,782,970 us, 6.14%)</title><rect x="59.9" y="71" width="72.5" height="15.0" fill="rgb(146.084763156259,154.910864521993,154.910864521993)" rx="2" ry="2" />
<text  x="62.92" y="81.5" >firedra..</text>
</g>
<g >
<title>firedrake.slate.slac.optimise.optimise (33,340 us, 0.07%)</title><rect x="462.6" y="167" width="0.8" height="15.0" fill="rgb(142.832246559987,160.469169164653,142.832246559987)" rx="2" ry="2" />
<text  x="465.57" y="177.5" ></text>
</g>
<g >
<title>CreateMesh (4,878 us, 0.01%)</title><rect x="59.7" y="71" width="0.1" height="15.0" fill="rgb(153.953145061176,126.974112135685,126.974112135685)" rx="2" ry="2" />
<text  x="62.65" y="81.5" ></text>
</g>
<g >
<title>firedrake.mesh._from_cell_list (12,406 us, 0.03%)</title><rect x="132.6" y="103" width="0.4" height="15.0" fill="rgb(104.369404549293,144.095771549817,144.095771549817)" rx="2" ry="2" />
<text  x="135.64" y="113.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.LinearVariationalProblem.__init__ (17,279 us, 0.04%)</title><rect x="133.0" y="71" width="0.4" height="15.0" fill="rgb(153.209250402209,121.270919750272,121.270919750272)" rx="2" ry="2" />
<text  x="135.96" y="81.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_form1_cell_integral_otherwise (2,372,084 us, 5.24%)</title><rect x="1101.2" y="135" width="61.8" height="15.0" fill="rgb(121.035692687751,121.035692687751,150.845617939565)" rx="2" ry="2" />
<text  x="1104.18" y="145.5" >Parloo..</text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (20,703,571 us, 45.69%)</title><rect x="463.4" y="167" width="539.2" height="15.0" fill="rgb(155.761144426165,140.835440600597,140.835440600597)" rx="2" ry="2" />
<text  x="466.43" y="177.5" >firedrake.tsfc_interface.compile_form</text>
</g>
<g >
<title>PCApply (33,356,063 us, 73.61%)</title><rect x="133.9" y="119" width="868.7" height="15.0" fill="rgb(152.208364798209,143.15893479541,152.208364798209)" rx="2" ry="2" />
<text  x="136.94" y="129.5" >PCApply</text>
</g>
<g >
<title>firedrake.utility_meshes.RectangleMesh (21,841 us, 0.05%)</title><rect x="132.4" y="87" width="0.6" height="15.0" fill="rgb(130.297774661122,150.817941578809,150.817941578809)" rx="2" ry="2" />
<text  x="135.39" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspace.VectorFunctionSpace (10,507 us, 0.02%)</title><rect x="58.7" y="87" width="0.3" height="15.0" fill="rgb(109.934386749812,109.934386749812,148.696978080609)" rx="2" ry="2" />
<text  x="61.71" y="97.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalProblem.__init__ (10,952 us, 0.02%)</title><rect x="133.1" y="87" width="0.3" height="15.0" fill="rgb(144.856419475108,160.139652643587,144.856419475108)" rx="2" ry="2" />
<text  x="136.13" y="97.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (1,796,112 us, 3.96%)</title><rect x="11.9" y="135" width="46.8" height="15.0" fill="rgb(115.664154729945,115.664154729945,149.805965431602)" rx="2" ry="2" />
<text  x="14.94" y="145.5" >pyop..</text>
</g>
<g >
<title>ParLoopExecute (799,717 us, 1.76%)</title><rect x="1004.5" y="151" width="20.9" height="15.0" fill="rgb(148.719932493395,148.719932493395,113.0273651603)" rx="2" ry="2" />
<text  x="1007.54" y="161.5" ></text>
</g>
<g >
<title>SCForwardElim (33,356,063 us, 73.61%)</title><rect x="133.9" y="135" width="868.7" height="15.0" fill="rgb(119.792013556813,119.792013556813,150.604905849706)" rx="2" ry="2" />
<text  x="136.94" y="145.5" >SCForwardElim</text>
</g>
<g >
<title>ParLoopExecute (966,892 us, 2.13%)</title><rect x="134.1" y="183" width="25.2" height="15.0" fill="rgb(154.582919696956,131.802384343329,131.802384343329)" rx="2" ry="2" />
<text  x="137.10" y="193.5" >P..</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (2,911,361 us, 6.43%)</title><rect x="1025.4" y="151" width="75.8" height="15.0" fill="rgb(150.108218219713,150.108218219713,119.755211372457)" rx="2" ry="2" />
<text  x="1028.36" y="161.5" >pyop2.g..</text>
</g>
<g >
<title>CreateFunctionSpace (8,055 us, 0.02%)</title><rect x="1003.8" y="183" width="0.2" height="15.0" fill="rgb(134.927111448982,134.927111448982,153.534279635287)" rx="2" ry="2" />
<text  x="1006.82" y="193.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (8,055 us, 0.02%)</title><rect x="1003.8" y="167" width="0.2" height="15.0" fill="rgb(120.87592108902,148.375238800857,148.375238800857)" rx="2" ry="2" />
<text  x="1006.82" y="177.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (7,169 us, 0.02%)</title><rect x="1003.6" y="183" width="0.2" height="15.0" fill="rgb(155.909099042732,141.969759327609,141.969759327609)" rx="2" ry="2" />
<text  x="1006.64" y="193.5" ></text>
</g>
<g >
<title>HybridBreak (973,128 us, 2.15%)</title><rect x="133.9" y="151" width="25.4" height="15.0" fill="rgb(154.29184478731,154.29184478731,140.029709353887)" rx="2" ry="2" />
<text  x="136.94" y="161.5" >H..</text>
</g>
<g >
<title>firedrake.parloops.par_loop (973,128 us, 2.15%)</title><rect x="133.9" y="167" width="25.4" height="15.0" fill="rgb(139.662282641887,160.985209802483,139.662282641887)" rx="2" ry="2" />
<text  x="136.94" y="177.5" >f..</text>
</g>
</g>
</svg>
