<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="283" onload="init(evt)" viewBox="0 0 1200 283" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:13px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:18px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 13 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (1 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="283.0" fill="url(#background)"  />
<text id="title" x="600.00" y="26" >Firedrake example</text>
<text id="details" x="10.00" y="265" > </text>
<text id="unzoom" x="10.00" y="26" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="26" >Search</text>
<text id="ignorecase" x="1174.00" y="26" >ic</text>
<text id="matched" x="1090.00" y="265" > </text>
<g id="frames">
<g >
<title>CreateFunctionSpace (18,353 us, 0.15%)</title><rect x="116.6" y="71" width="1.8" height="15.0" fill="rgb(152.182846902667,113.40182625378,113.40182625378)" rx="2" ry="2" />
<text  x="119.62" y="81.5" ></text>
</g>
<g >
<title>firedrake.slate.slac.optimise.optimise (17,768 us, 0.15%)</title><rect x="528.0" y="167" width="1.7" height="15.0" fill="rgb(129.835130727985,150.697996855403,150.697996855403)" rx="2" ry="2" />
<text  x="531.00" y="177.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (1,860 us, 0.02%)</title><rect x="532.8" y="215" width="0.2" height="15.0" fill="rgb(141.441874657401,160.695508776702,141.441874657401)" rx="2" ry="2" />
<text  x="535.80" y="225.5" ></text>
</g>
<g >
<title>HybridBreak (881,231 us, 7.26%)</title><rect x="430.4" y="151" width="85.7" height="15.0" fill="rgb(140.535249458198,113.246576736631,140.535249458198)" rx="2" ry="2" />
<text  x="433.42" y="161.5" >HybridBreak</text>
</g>
<g >
<title>FunctionSpaceData: CreateElement (6,525 us, 0.05%)</title><rect x="117.5" y="135" width="0.7" height="15.0" fill="rgb(129.867413900426,162.579723318535,129.867413900426)" rx="2" ry="2" />
<text  x="120.55" y="145.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (1,824 us, 0.02%)</title><rect x="529.6" y="183" width="0.1" height="15.0" fill="rgb(134.00384076069,161.906351504074,134.00384076069)" rx="2" ry="2" />
<text  x="532.55" y="193.5" ></text>
</g>
<g >
<title>firedrake.parloops.par_loop (750,752 us, 6.18%)</title><rect x="536.0" y="135" width="73.0" height="15.0" fill="rgb(116.065807733755,147.128172375418,147.128172375418)" rx="2" ry="2" />
<text  x="539.02" y="145.5" >firedra..</text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (11,605 us, 0.10%)</title><rect x="533.5" y="151" width="1.1" height="15.0" fill="rgb(152.287062217648,114.200810335301,114.200810335301)" rx="2" ry="2" />
<text  x="536.51" y="161.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.solve (7,813,787 us, 64.37%)</title><rect x="430.4" y="71" width="759.6" height="15.0" fill="rgb(151.004137611251,151.004137611251,124.0969745776)" rx="2" ry="2" />
<text  x="433.42" y="81.5" >firedrake.variational_solver.NonlinearVariationalSolver.solve</text>
</g>
<g >
<title>FunctionSpaceData: CreateElement (5,429 us, 0.04%)</title><rect x="533.0" y="199" width="0.5" height="15.0" fill="rgb(154.834758341739,133.733147286664,133.733147286664)" rx="2" ry="2" />
<text  x="535.98" y="209.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (5,429 us, 0.04%)</title><rect x="533.0" y="183" width="0.5" height="15.0" fill="rgb(106.932248669685,144.760212618067,144.760212618067)" rx="2" ry="2" />
<text  x="535.98" y="193.5" ></text>
</g>
<g >
<title>KSPSolve (1,021,565 us, 8.42%)</title><rect x="430.4" y="103" width="99.3" height="15.0" fill="rgb(127.469814899052,127.469814899052,152.090931915946)" rx="2" ry="2" />
<text  x="433.42" y="113.5" >KSPSolve</text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (2,223 us, 0.02%)</title><rect x="534.4" y="231" width="0.2" height="15.0" fill="rgb(152.132052209311,113.012400271383,113.012400271383)" rx="2" ry="2" />
<text  x="537.42" y="241.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (1,860 us, 0.02%)</title><rect x="532.8" y="167" width="0.2" height="15.0" fill="rgb(136.124638873493,136.124638873493,153.766059136805)" rx="2" ry="2" />
<text  x="535.80" y="177.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (16,855 us, 0.14%)</title><rect x="116.8" y="103" width="1.6" height="15.0" fill="rgb(146.456757837927,146.456757837927,155.765824097663)" rx="2" ry="2" />
<text  x="119.76" y="113.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (6,289 us, 0.05%)</title><rect x="116.0" y="103" width="0.6" height="15.0" fill="rgb(135.80761702489,135.80761702489,153.704700069334)" rx="2" ry="2" />
<text  x="119.01" y="113.5" ></text>
</g>
<g >
<title>SNESSolve (7,813,787 us, 64.37%)</title><rect x="430.4" y="87" width="759.6" height="15.0" fill="rgb(151.697865154422,151.697865154422,127.458884979121)" rx="2" ry="2" />
<text  x="433.42" y="97.5" >SNESSolve</text>
</g>
<g >
<title>firedrake.assemble.allocate_matrix (6,965 us, 0.06%)</title><rect x="429.7" y="87" width="0.7" height="15.0" fill="rgb(155.028798465643,155.028798465643,143.601100256577)" rx="2" ry="2" />
<text  x="432.74" y="97.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (2,266 us, 0.02%)</title><rect x="609.0" y="135" width="0.2" height="15.0" fill="rgb(128.847795523738,162.745707705438,128.847795523738)" rx="2" ry="2" />
<text  x="612.00" y="145.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (5,662 us, 0.05%)</title><rect x="534.1" y="183" width="0.5" height="15.0" fill="rgb(131.26605822161,131.26605822161,152.825688688054)" rx="2" ry="2" />
<text  x="537.09" y="193.5" ></text>
</g>
<g >
<title>ParLoopExecute (1,055,084 us, 8.69%)</title><rect x="13.4" y="103" width="102.6" height="15.0" fill="rgb(134.435627773209,97.6162961688491,134.435627773209)" rx="2" ry="2" />
<text  x="16.44" y="113.5" >ParLoopExec..</text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (6,289 us, 0.05%)</title><rect x="116.0" y="135" width="0.6" height="15.0" fill="rgb(152.149059431064,113.142788971494,113.142788971494)" rx="2" ry="2" />
<text  x="119.01" y="145.5" ></text>
</g>
<g >
<title>PCApply (1,021,565 us, 8.42%)</title><rect x="430.4" y="119" width="99.3" height="15.0" fill="rgb(126.909727129967,149.939558885547,149.939558885547)" rx="2" ry="2" />
<text  x="433.42" y="129.5" >PCApply</text>
</g>
<g >
<title>firedrake.functionspace.make_scalar_element (1,706 us, 0.01%)</title><rect x="534.3" y="199" width="0.1" height="15.0" fill="rgb(156.422784102129,145.908011449657,145.908011449657)" rx="2" ry="2" />
<text  x="537.25" y="209.5" ></text>
</g>
<g >
<title>firedrake.mesh.MeshTopology._facets (2,238 us, 0.02%)</title><rect x="118.2" y="135" width="0.2" height="15.0" fill="rgb(144.136356422417,144.136356422417,155.316714146274)" rx="2" ry="2" />
<text  x="121.18" y="145.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (874,814 us, 7.21%)</title><rect x="431.0" y="215" width="85.1" height="15.0" fill="rgb(146.458706477662,146.458706477662,155.766201253741)" rx="2" ry="2" />
<text  x="434.04" y="225.5" >pyop2.glo..</text>
</g>
<g >
<title>firedrake.function.Function.__init__ (1,927 us, 0.02%)</title><rect x="534.6" y="135" width="0.2" height="15.0" fill="rgb(120.356409706879,148.240550664746,148.240550664746)" rx="2" ry="2" />
<text  x="537.64" y="145.5" ></text>
</g>
<g >
<title>Log_Event_form0_cell_integral_otherwise (2,134 us, 0.02%)</title><rect x="609.6" y="151" width="0.2" height="15.0" fill="rgb(132.636312880574,93.0055517564715,132.636312880574)" rx="2" ry="2" />
<text  x="612.59" y="161.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (8,150 us, 0.07%)</title><rect x="533.8" y="167" width="0.8" height="15.0" fill="rgb(152.99724890982,152.99724890982,133.755898562973)" rx="2" ry="2" />
<text  x="536.84" y="177.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (2,223 us, 0.02%)</title><rect x="534.4" y="215" width="0.2" height="15.0" fill="rgb(149.413683494771,149.413683494771,116.389389243891)" rx="2" ry="2" />
<text  x="537.42" y="225.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (5,429 us, 0.04%)</title><rect x="533.0" y="151" width="0.5" height="15.0" fill="rgb(139.382644888089,153.173278304319,153.173278304319)" rx="2" ry="2" />
<text  x="535.98" y="161.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (744,710 us, 6.14%)</title><rect x="536.6" y="167" width="72.4" height="15.0" fill="rgb(145.786681964466,145.786681964466,155.636131993123)" rx="2" ry="2" />
<text  x="539.61" y="177.5" >Parloop..</text>
</g>
<g >
<title>firedrake.__init__ (3,182,120 us, 26.21%)</title><rect x="118.6" y="71" width="309.3" height="15.0" fill="rgb(133.054831316774,162.060841413548,133.054831316774)" rx="2" ry="2" />
<text  x="121.56" y="81.5" >firedrake.__init__</text>
</g>
<g >
<title>firedrake.ufl_expr.action (4,787 us, 0.04%)</title><rect x="428.1" y="87" width="0.4" height="15.0" fill="rgb(154.114473304282,154.114473304282,139.170139859211)" rx="2" ry="2" />
<text  x="431.07" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (6,289 us, 0.05%)</title><rect x="116.0" y="119" width="0.6" height="15.0" fill="rgb(154.320843590182,154.320843590182,140.170242013957)" rx="2" ry="2" />
<text  x="119.01" y="129.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (2,266,679 us, 18.67%)</title><rect x="856.2" y="151" width="220.4" height="15.0" fill="rgb(134.890259564998,152.008585813148,152.008585813148)" rx="2" ry="2" />
<text  x="859.24" y="161.5" >pyop2.global_kernel.Global..</text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (1,860 us, 0.02%)</title><rect x="532.8" y="199" width="0.2" height="15.0" fill="rgb(148.329070507888,133.218243176463,148.329070507888)" rx="2" ry="2" />
<text  x="535.80" y="209.5" ></text>
</g>
<g >
<title>firedrake.functionspace.VectorFunctionSpace (6,289 us, 0.05%)</title><rect x="116.0" y="87" width="0.6" height="15.0" fill="rgb(139.956909907875,139.956909907875,154.507789014427)" rx="2" ry="2" />
<text  x="119.01" y="97.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (874,814 us, 7.21%)</title><rect x="431.0" y="199" width="85.1" height="15.0" fill="rgb(150.853308898423,150.853308898423,123.366035430819)" rx="2" ry="2" />
<text  x="434.04" y="209.5" >Parloop_C..</text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (6,004 us, 0.05%)</title><rect x="1189.4" y="135" width="0.6" height="15.0" fill="rgb(122.432787895084,148.778870935763,148.778870935763)" rx="2" ry="2" />
<text  x="1192.42" y="145.5" ></text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (1,166,689 us, 9.61%)</title><rect x="1076.6" y="119" width="113.4" height="15.0" fill="rgb(117.726000332817,147.558592678879,147.558592678879)" rx="2" ry="2" />
<text  x="1079.59" y="129.5" >firedrake.ts..</text>
</g>
<g >
<title>firedrake.ufl_expr.action (4,498 us, 0.04%)</title><rect x="429.7" y="119" width="0.5" height="15.0" fill="rgb(153.61452611786,153.61452611786,136.747318878861)" rx="2" ry="2" />
<text  x="432.74" y="129.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (6,289 us, 0.05%)</title><rect x="116.0" y="151" width="0.6" height="15.0" fill="rgb(152.731384072606,117.607277889976,117.607277889976)" rx="2" ry="2" />
<text  x="119.01" y="161.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (1,055,084 us, 8.69%)</title><rect x="13.4" y="135" width="102.6" height="15.0" fill="rgb(155.895885885335,155.895885885335,147.803139290469)" rx="2" ry="2" />
<text  x="16.44" y="145.5" >pyop2.globa..</text>
</g>
<g >
<title>Parloop_Cells_wrap_pyop2_kernel_uniform_extrusion (1,055,084 us, 8.69%)</title><rect x="13.4" y="119" width="102.6" height="15.0" fill="rgb(151.243491168978,151.243491168978,125.25691874197)" rx="2" ry="2" />
<text  x="16.44" y="129.5" >Parloop_Cel..</text>
</g>
<g >
<title>ParLoopExecute (744,710 us, 6.14%)</title><rect x="536.6" y="151" width="72.4" height="15.0" fill="rgb(156.167791409484,143.953067472712,143.953067472712)" rx="2" ry="2" />
<text  x="539.61" y="161.5" >ParLoop..</text>
</g>
<g >
<title>HybridInit (817,728 us, 6.74%)</title><rect x="529.7" y="119" width="79.5" height="15.0" fill="rgb(112.626561312395,112.626561312395,149.21804412498)" rx="2" ry="2" />
<text  x="532.73" y="129.5" >HybridInit</text>
</g>
<g >
<title>all (12,138,657 us, 100%)</title><rect x="10.0" y="39" width="1180.0" height="15.0" fill="rgb(154.667103058291,154.667103058291,141.848268667103)" rx="2" ry="2" />
<text  x="13.00" y="49.5" ></text>
</g>
<g >
<title>firedrake.functionspace.MixedFunctionSpace (3,886 us, 0.03%)</title><rect x="532.6" y="151" width="0.4" height="15.0" fill="rgb(156.498596743222,146.489241698036,146.489241698036)" rx="2" ry="2" />
<text  x="535.60" y="161.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (1,611 us, 0.01%)</title><rect x="1189.8" y="167" width="0.2" height="15.0" fill="rgb(155.542451163869,139.158792256332,139.158792256332)" rx="2" ry="2" />
<text  x="1192.84" y="177.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (2,467 us, 0.02%)</title><rect x="430.2" y="119" width="0.2" height="15.0" fill="rgb(152.854029208041,152.854029208041,133.06183385435)" rx="2" ry="2" />
<text  x="433.18" y="129.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (1,860 us, 0.02%)</title><rect x="532.8" y="183" width="0.2" height="15.0" fill="rgb(146.604639666486,159.855058658944,146.604639666486)" rx="2" ry="2" />
<text  x="535.80" y="193.5" ></text>
</g>
<g >
<title>firedrake.extrusion_utils.make_extruded_coords (1,087,495 us, 8.96%)</title><rect x="10.3" y="87" width="105.7" height="15.0" fill="rgb(154.946400108395,134.589067497697,134.589067497697)" rx="2" ry="2" />
<text  x="13.29" y="97.5" >firedrake.e..</text>
</g>
<g >
<title>CreateMesh (1,651 us, 0.01%)</title><rect x="118.4" y="71" width="0.2" height="15.0" fill="rgb(129.837912206716,162.584525919837,129.837912206716)" rx="2" ry="2" />
<text  x="121.40" y="81.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.LinearVariationalProblem.__init__ (15,635 us, 0.13%)</title><rect x="428.1" y="71" width="1.5" height="15.0" fill="rgb(131.826934024732,151.214390302708,151.214390302708)" rx="2" ry="2" />
<text  x="431.07" y="81.5" ></text>
</g>
<g >
<title>firedrake.parloops.par_loop (881,231 us, 7.26%)</title><rect x="430.4" y="167" width="85.7" height="15.0" fill="rgb(154.414336498685,130.509913156582,130.509913156582)" rx="2" ry="2" />
<text  x="433.42" y="177.5" >firedrake..</text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (11,605 us, 0.10%)</title><rect x="533.5" y="135" width="1.1" height="15.0" fill="rgb(151.318462068207,151.318462068207,125.620239253616)" rx="2" ry="2" />
<text  x="536.51" y="145.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.__init__ (8,562 us, 0.07%)</title><rect x="429.6" y="71" width="0.8" height="15.0" fill="rgb(153.910907756203,126.650292797556,126.650292797556)" rx="2" ry="2" />
<text  x="432.59" y="81.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (16,855 us, 0.14%)</title><rect x="116.8" y="87" width="1.6" height="15.0" fill="rgb(152.412740964349,152.412740964349,130.923283134923)" rx="2" ry="2" />
<text  x="119.76" y="97.5" ></text>
</g>
<g >
<title>CreateExtMesh (1,096,767 us, 9.04%)</title><rect x="10.0" y="71" width="106.6" height="15.0" fill="rgb(138.719028234791,108.592509851653,138.719028234791)" rx="2" ry="2" />
<text  x="13.00" y="81.5" >CreateExtMesh</text>
</g>
<g >
<title>HybridRHS (140,334 us, 1.16%)</title><rect x="516.1" y="151" width="13.6" height="15.0" fill="rgb(151.073624984684,159.127549421098,151.073624984684)" rx="2" ry="2" />
<text  x="519.09" y="161.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (9,315 us, 0.08%)</title><rect x="532.6" y="135" width="0.9" height="15.0" fill="rgb(130.202041863028,130.202041863028,152.619750038005)" rx="2" ry="2" />
<text  x="535.60" y="145.5" ></text>
</g>
<g >
<title>ParLoopExecute (874,814 us, 7.21%)</title><rect x="431.0" y="183" width="85.1" height="15.0" fill="rgb(154.952192455166,134.633475489603,134.633475489603)" rx="2" ry="2" />
<text  x="434.04" y="193.5" >ParLoopEx..</text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (9,201 us, 0.08%)</title><rect x="428.7" y="103" width="0.9" height="15.0" fill="rgb(134.798213973437,161.777034934557,134.798213973437)" rx="2" ry="2" />
<text  x="431.69" y="113.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (2,535,186 us, 20.89%)</title><rect x="609.8" y="151" width="246.4" height="15.0" fill="rgb(144.881581329503,124.384052156851,144.881581329503)" rx="2" ry="2" />
<text  x="612.80" y="161.5" >pyop2.global_kernel.GlobalKern..</text>
</g>
<g >
<title>SCForwardElim (1,021,565 us, 8.42%)</title><rect x="430.4" y="135" width="99.3" height="15.0" fill="rgb(156.465181897897,146.233061217207,146.233061217207)" rx="2" ry="2" />
<text  x="433.42" y="145.5" >SCForwardE..</text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (2,223 us, 0.02%)</title><rect x="534.4" y="199" width="0.2" height="15.0" fill="rgb(128.64756916991,150.390110525532,150.390110525532)" rx="2" ry="2" />
<text  x="537.42" y="209.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (5,429 us, 0.04%)</title><rect x="533.0" y="167" width="0.5" height="15.0" fill="rgb(135.471823519739,152.159361653266,152.159361653266)" rx="2" ry="2" />
<text  x="535.98" y="177.5" ></text>
</g>
<g >
<title>SNESFunctionEval (5,974,494 us, 49.22%)</title><rect x="609.2" y="103" width="580.8" height="15.0" fill="rgb(152.803286160976,118.158527234146,118.158527234146)" rx="2" ry="2" />
<text  x="612.22" y="113.5" >SNESFunctionEval</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (744,710 us, 6.14%)</title><rect x="536.6" y="183" width="72.4" height="15.0" fill="rgb(133.705279210135,95.7447779759703,133.705279210135)" rx="2" ry="2" />
<text  x="539.61" y="193.5" >pyop2.g..</text>
</g>
<g >
<title>firedrake.utility_meshes.RectangleMesh (1,782 us, 0.01%)</title><rect x="427.9" y="87" width="0.2" height="15.0" fill="rgb(153.639671513549,124.570814937206,124.570814937206)" rx="2" ry="2" />
<text  x="430.90" y="97.5" ></text>
</g>
<g >
<title>ParLoopExecute (4,803,999 us, 39.58%)</title><rect x="609.6" y="119" width="467.0" height="15.0" fill="rgb(133.859267696501,151.741291625019,151.741291625019)" rx="2" ry="2" />
<text  x="612.59" y="129.5" >ParLoopExecute</text>
</g>
<g >
<title>firedrake.utility_meshes.SquareMesh (1,782 us, 0.01%)</title><rect x="427.9" y="71" width="0.2" height="15.0" fill="rgb(153.579637809312,124.110556538057,124.110556538057)" rx="2" ry="2" />
<text  x="430.90" y="81.5" ></text>
</g>
<g >
<title>firedrake (12,138,657 us, 100.00%)</title><rect x="10.0" y="55" width="1180.0" height="15.0" fill="rgb(148.339305341313,148.339305341313,111.182787423285)" rx="2" ry="2" />
<text  x="13.00" y="65.5" >firedrake</text>
</g>
<g >
<title>PCSetUp (817,728 us, 6.74%)</title><rect x="529.7" y="103" width="79.5" height="15.0" fill="rgb(133.896344435146,133.896344435146,153.334776342286)" rx="2" ry="2" />
<text  x="532.73" y="113.5" >PCSetUp</text>
</g>
<g >
<title>firedrake.interpolation.make_interpolator (12,285 us, 0.10%)</title><rect x="534.8" y="135" width="1.2" height="15.0" fill="rgb(151.07107650311,140.244633539218,151.07107650311)" rx="2" ry="2" />
<text  x="537.82" y="145.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalProblem.__init__ (10,848 us, 0.09%)</title><rect x="428.5" y="87" width="1.1" height="15.0" fill="rgb(148.865320004255,148.865320004255,113.731935405237)" rx="2" ry="2" />
<text  x="431.53" y="97.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_form1_cell_integral_otherwise (2,266,679 us, 18.67%)</title><rect x="856.2" y="135" width="220.4" height="15.0" fill="rgb(140.349124509167,153.423847094969,153.423847094969)" rx="2" ry="2" />
<text  x="859.24" y="145.5" >Parloop_Cells_wrap_form1_c..</text>
</g>
<g >
<title>firedrake.matrix_free.operators.ImplicitMatrixContext.__init__ (6,965 us, 0.06%)</title><rect x="429.7" y="103" width="0.7" height="15.0" fill="rgb(155.66484385083,140.097136189696,140.097136189696)" rx="2" ry="2" />
<text  x="432.74" y="113.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (3,692 us, 0.03%)</title><rect x="1189.6" y="151" width="0.4" height="15.0" fill="rgb(138.952996139184,153.061887887937,153.061887887937)" rx="2" ry="2" />
<text  x="1192.64" y="161.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_form0_cell_integral_otherwise (2,537,320 us, 20.90%)</title><rect x="609.6" y="135" width="246.6" height="15.0" fill="rgb(147.579026465838,159.696437552073,147.579026465838)" rx="2" ry="2" />
<text  x="612.59" y="145.5" >Parloop_Cells_wrap_form0_cell_..</text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (16,855 us, 0.14%)</title><rect x="116.8" y="119" width="1.6" height="15.0" fill="rgb(156.661188486144,147.735778393774,147.735778393774)" rx="2" ry="2" />
<text  x="119.76" y="129.5" ></text>
</g>
</g>
</svg>
