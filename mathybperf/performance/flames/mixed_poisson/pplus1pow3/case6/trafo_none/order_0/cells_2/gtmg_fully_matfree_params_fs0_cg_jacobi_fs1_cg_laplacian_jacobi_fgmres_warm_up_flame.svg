<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="267" onload="init(evt)" viewBox="0 0 1200 267" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:13px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:18px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 13 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (1 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="267.0" fill="url(#background)"  />
<text id="title" x="600.00" y="26" >Firedrake example</text>
<text id="details" x="10.00" y="249" > </text>
<text id="unzoom" x="10.00" y="26" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="26" >Search</text>
<text id="ignorecase" x="1174.00" y="26" >ic</text>
<text id="matched" x="1090.00" y="249" > </text>
<g id="frames">
<g >
<title>ParLoopExecute (6,242,246 us, 11.99%)</title><rect x="1022.5" y="119" width="141.5" height="15.0" fill="rgb(126.051234605367,163.200961808429,126.051234605367)" rx="2" ry="2" />
<text  x="1025.50" y="129.5" >ParLoopExecute</text>
</g>
<g >
<title>HybridRHS (37,209,510 us, 71.49%)</title><rect x="156.9" y="151" width="843.6" height="15.0" fill="rgb(153.668063927602,124.788490111613,124.788490111613)" rx="2" ry="2" />
<text  x="159.92" y="161.5" >HybridRHS</text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (45,887 us, 0.09%)</title><rect x="48.5" y="103" width="1.0" height="15.0" fill="rgb(154.710092940619,154.710092940619,142.05660425069)" rx="2" ry="2" />
<text  x="51.49" y="113.5" ></text>
</g>
<g >
<title>ParLoopExecute (882,297 us, 1.70%)</title><rect x="1002.4" y="151" width="20.0" height="15.0" fill="rgb(154.261369883227,154.261369883227,139.882023280252)" rx="2" ry="2" />
<text  x="1005.35" y="161.5" ></text>
</g>
<g >
<title>firedrake.parloops.par_loop (888,171 us, 1.71%)</title><rect x="1002.2" y="135" width="20.2" height="15.0" fill="rgb(142.888054888231,154.082088304356,154.082088304356)" rx="2" ry="2" />
<text  x="1005.22" y="145.5" ></text>
</g>
<g >
<title>CreateExtMesh (1,697,728 us, 3.26%)</title><rect x="10.0" y="71" width="38.5" height="15.0" fill="rgb(151.773400913009,151.773400913009,127.824942886119)" rx="2" ry="2" />
<text  x="13.00" y="81.5" >Cre..</text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (7,316 us, 0.01%)</title><rect x="1001.6" y="167" width="0.2" height="15.0" fill="rgb(154.823655493654,154.823655493654,142.606945853863)" rx="2" ry="2" />
<text  x="1004.59" y="177.5" ></text>
</g>
<g >
<title>PCApply (38,265,597 us, 73.52%)</title><rect x="133.0" y="119" width="867.5" height="15.0" fill="rgb(133.963805661563,161.912868845792,133.963805661563)" rx="2" ry="2" />
<text  x="135.98" y="129.5" >PCApply</text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (9,817 us, 0.02%)</title><rect x="48.3" y="135" width="0.2" height="15.0" fill="rgb(154.077500277723,127.927502129208,127.927502129208)" rx="2" ry="2" />
<text  x="51.27" y="145.5" ></text>
</g>
<g >
<title>firedrake.__init__ (3,495,746 us, 6.72%)</title><rect x="51.1" y="71" width="79.3" height="15.0" fill="rgb(136.31113961802,161.530744713346,136.31113961802)" rx="2" ry="2" />
<text  x="54.12" y="81.5" >firedrak..</text>
</g>
<g >
<title>DMPlexInterp (21,007 us, 0.04%)</title><rect x="131.7" y="119" width="0.5" height="15.0" fill="rgb(155.289179043492,137.217039333435,137.217039333435)" rx="2" ry="2" />
<text  x="134.69" y="129.5" ></text>
</g>
<g >
<title>HybridInit (962,595 us, 1.85%)</title><rect x="1000.5" y="119" width="21.9" height="15.0" fill="rgb(156.563804192659,146.989165477052,146.989165477052)" rx="2" ry="2" />
<text  x="1003.53" y="129.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (13,860 us, 0.03%)</title><rect x="1001.4" y="135" width="0.4" height="15.0" fill="rgb(155.772050162322,140.91905124447,140.91905124447)" rx="2" ry="2" />
<text  x="1004.44" y="145.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (1,632,369 us, 3.14%)</title><rect x="11.3" y="135" width="37.0" height="15.0" fill="rgb(128.820301487201,150.434892978163,150.434892978163)" rx="2" ry="2" />
<text  x="14.26" y="145.5" >py..</text>
</g>
<g >
<title>firedrake.mesh.MeshTopology._facets (20,400 us, 0.04%)</title><rect x="49.1" y="135" width="0.4" height="15.0" fill="rgb(150.729912496003,150.729912496003,122.76803748063)" rx="2" ry="2" />
<text  x="52.07" y="145.5" ></text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (1,145,916 us, 2.20%)</title><rect x="1164.0" y="119" width="26.0" height="15.0" fill="rgb(144.283349675902,154.443831397456,154.443831397456)" rx="2" ry="2" />
<text  x="1167.02" y="129.5" >f..</text>
</g>
<g >
<title>CreateMesh (9,491 us, 0.02%)</title><rect x="130.8" y="103" width="0.2" height="15.0" fill="rgb(127.329652568827,162.992847256238,127.329652568827)" rx="2" ry="2" />
<text  x="133.79" y="113.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (45,887 us, 0.09%)</title><rect x="48.5" y="119" width="1.0" height="15.0" fill="rgb(111.27747055489,111.27747055489,148.956929784817)" rx="2" ry="2" />
<text  x="51.49" y="129.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (45,887 us, 0.09%)</title><rect x="48.5" y="87" width="1.0" height="15.0" fill="rgb(152.514215655464,143.942677617126,152.514215655464)" rx="2" ry="2" />
<text  x="51.49" y="97.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_form1_cell_integral_otherwise (2,671,743 us, 5.13%)</title><rect x="1103.4" y="135" width="60.6" height="15.0" fill="rgb(130.917207741292,130.917207741292,152.75816924025)" rx="2" ry="2" />
<text  x="1106.45" y="145.5" >Parlo..</text>
</g>
<g >
<title>DMPlexBuFrCeLi (8,501 us, 0.02%)</title><rect x="131.5" y="119" width="0.2" height="15.0" fill="rgb(128.406019966024,162.817624656694,128.406019966024)" rx="2" ry="2" />
<text  x="134.49" y="129.5" ></text>
</g>
<g >
<title>KSPSolve (38,265,597 us, 73.52%)</title><rect x="133.0" y="103" width="867.5" height="15.0" fill="rgb(154.536638949382,154.536638949382,141.216019523929)" rx="2" ry="2" />
<text  x="135.98" y="113.5" >KSPSolve</text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (7,316 us, 0.01%)</title><rect x="1001.6" y="183" width="0.2" height="15.0" fill="rgb(141.73036235209,141.73036235209,154.851037874598)" rx="2" ry="2" />
<text  x="1004.59" y="193.5" ></text>
</g>
<g >
<title>CreateMesh (26,877 us, 0.05%)</title><rect x="49.5" y="71" width="0.6" height="15.0" fill="rgb(152.300815637244,114.306253218867,114.306253218867)" rx="2" ry="2" />
<text  x="52.53" y="81.5" ></text>
</g>
<g >
<title>CreateMesh (9,491 us, 0.02%)</title><rect x="130.8" y="119" width="0.2" height="15.0" fill="rgb(154.291837422996,154.291837422996,140.029673665289)" rx="2" ry="2" />
<text  x="133.79" y="129.5" ></text>
</g>
<g >
<title>ParLoopExecute (1,050,085 us, 2.02%)</title><rect x="133.1" y="183" width="23.8" height="15.0" fill="rgb(143.292885832092,160.394181376171,143.292885832092)" rx="2" ry="2" />
<text  x="136.11" y="193.5" >P..</text>
</g>
<g >
<title>DMPlexStratify (8,501 us, 0.02%)</title><rect x="131.5" y="135" width="0.2" height="15.0" fill="rgb(132.290962209651,162.185192198429,132.290962209651)" rx="2" ry="2" />
<text  x="134.49" y="145.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (7,371 us, 0.01%)</title><rect x="1001.8" y="151" width="0.1" height="15.0" fill="rgb(154.235565855032,154.235565855032,139.756972989772)" rx="2" ry="2" />
<text  x="1004.75" y="161.5" ></text>
</g>
<g >
<title>ParLoopExecute (1,632,369 us, 3.14%)</title><rect x="11.3" y="103" width="37.0" height="15.0" fill="rgb(143.18395376233,160.411914503807,143.18395376233)" rx="2" ry="2" />
<text  x="14.26" y="113.5" >Pa..</text>
</g>
<g >
<title>SNESFunctionEval (7,394,235 us, 14.21%)</title><rect x="1022.4" y="103" width="167.6" height="15.0" fill="rgb(154.799358093191,133.461745381131,133.461745381131)" rx="2" ry="2" />
<text  x="1025.36" y="113.5" >SNESFunctionEval</text>
</g>
<g >
<title>CreateFunctionSpace (7,371 us, 0.01%)</title><rect x="1001.8" y="183" width="0.1" height="15.0" fill="rgb(138.36438742198,152.909285627921,152.909285627921)" rx="2" ry="2" />
<text  x="1004.75" y="193.5" ></text>
</g>
<g >
<title>firedrake.slate.slac.optimise.optimise (37,160 us, 0.07%)</title><rect x="448.7" y="167" width="0.9" height="15.0" fill="rgb(148.374707984275,148.374707984275,111.354354077642)" rx="2" ry="2" />
<text  x="451.71" y="177.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (9,817 us, 0.02%)</title><rect x="48.3" y="119" width="0.2" height="15.0" fill="rgb(129.744755535788,150.674566250019,150.674566250019)" rx="2" ry="2" />
<text  x="51.27" y="129.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (882,297 us, 1.70%)</title><rect x="1002.4" y="167" width="20.0" height="15.0" fill="rgb(142.213826189531,160.569842248216,142.213826189531)" rx="2" ry="2" />
<text  x="1005.35" y="177.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (7,316 us, 0.01%)</title><rect x="1001.6" y="151" width="0.2" height="15.0" fill="rgb(144.754844636925,160.156188082361,144.754844636925)" rx="2" ry="2" />
<text  x="1004.59" y="161.5" ></text>
</g>
<g >
<title>Mesh: reorder (7,762 us, 0.01%)</title><rect x="50.0" y="87" width="0.1" height="15.0" fill="rgb(138.276088236859,107.457476106951,138.276088236859)" rx="2" ry="2" />
<text  x="52.96" y="97.5" ></text>
</g>
<g >
<title>FunctionSpaceData: CreateElement (7,316 us, 0.01%)</title><rect x="1001.6" y="199" width="0.2" height="15.0" fill="rgb(143.415078619891,160.374289526994,143.415078619891)" rx="2" ry="2" />
<text  x="1004.59" y="209.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (7,371 us, 0.01%)</title><rect x="1001.8" y="135" width="0.1" height="15.0" fill="rgb(152.785586634929,118.022830867792,118.022830867792)" rx="2" ry="2" />
<text  x="1004.75" y="145.5" ></text>
</g>
<g >
<title>firedrake.interpolation.make_interpolator (13,193 us, 0.03%)</title><rect x="1001.9" y="135" width="0.3" height="15.0" fill="rgb(108.432233946869,108.432233946869,148.406238828426)" rx="2" ry="2" />
<text  x="1004.92" y="145.5" ></text>
</g>
<g >
<title>firedrake.matrix_free.operators.ImplicitMatrixContext.__init__ (7,116 us, 0.01%)</title><rect x="132.8" y="103" width="0.2" height="15.0" fill="rgb(136.355956480888,102.537138482277,136.355956480888)" rx="2" ry="2" />
<text  x="135.81" y="113.5" ></text>
</g>
<g >
<title>HybridBreak (1,056,087 us, 2.03%)</title><rect x="133.0" y="151" width="23.9" height="15.0" fill="rgb(104.579015336946,144.150115087356,144.150115087356)" rx="2" ry="2" />
<text  x="135.98" y="161.5" >H..</text>
</g>
<g >
<title>Parloop_Cells_wrap_form0_cell_integral_otherwise (3,570,503 us, 6.86%)</title><rect x="1022.5" y="135" width="80.9" height="15.0" fill="rgb(153.798794218887,125.790755678133,125.790755678133)" rx="2" ry="2" />
<text  x="1025.50" y="145.5" >Parloop_..</text>
</g>
<g >
<title>firedrake.assemble.allocate_matrix (7,116 us, 0.01%)</title><rect x="132.8" y="87" width="0.2" height="15.0" fill="rgb(153.267520670328,153.267520670328,135.065677094667)" rx="2" ry="2" />
<text  x="135.81" y="97.5" ></text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (24,302,351 us, 46.69%)</title><rect x="449.6" y="167" width="550.9" height="15.0" fill="rgb(156.6960761859,148.003250758567,148.003250758567)" rx="2" ry="2" />
<text  x="452.55" y="177.5" >firedrake.tsfc_interface.compile_form</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (882,297 us, 1.70%)</title><rect x="1002.4" y="183" width="20.0" height="15.0" fill="rgb(134.418469776072,134.418469776072,153.435832859885)" rx="2" ry="2" />
<text  x="1005.35" y="193.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.solve (46,622,427 us, 89.58%)</title><rect x="133.0" y="71" width="1057.0" height="15.0" fill="rgb(111.133793798436,111.133793798436,148.929121380342)" rx="2" ry="2" />
<text  x="135.98" y="81.5" >firedrake.variational_solver.NonlinearVariationalSolver.solve</text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (7,371 us, 0.01%)</title><rect x="1001.8" y="167" width="0.1" height="15.0" fill="rgb(155.807136475381,141.188046311255,141.188046311255)" rx="2" ry="2" />
<text  x="1004.75" y="177.5" ></text>
</g>
<g >
<title>PetscBarrier (43,404 us, 0.08%)</title><rect x="50.1" y="71" width="1.0" height="15.0" fill="rgb(148.043003023458,148.043003023458,109.74686080599)" rx="2" ry="2" />
<text  x="53.14" y="81.5" ></text>
</g>
<g >
<title>FunctionSpaceData: CreateElement (8,656 us, 0.02%)</title><rect x="48.9" y="135" width="0.2" height="15.0" fill="rgb(128.653856307483,150.391740524162,150.391740524162)" rx="2" ry="2" />
<text  x="51.87" y="145.5" ></text>
</g>
<g >
<title>firedrake.parloops.par_loop (1,056,087 us, 2.03%)</title><rect x="133.0" y="167" width="23.9" height="15.0" fill="rgb(152.984976066392,119.551483175672,119.551483175672)" rx="2" ry="2" />
<text  x="135.98" y="177.5" >f..</text>
</g>
<g >
<title>firedrake.utility_meshes.RectangleMesh (78,558 us, 0.15%)</title><rect x="130.4" y="87" width="1.8" height="15.0" fill="rgb(137.412174027074,137.412174027074,154.015259489111)" rx="2" ry="2" />
<text  x="133.38" y="97.5" ></text>
</g>
<g >
<title>PCSetUp (962,595 us, 1.85%)</title><rect x="1000.5" y="103" width="21.9" height="15.0" fill="rgb(151.287885053932,151.287885053932,125.472058338285)" rx="2" ry="2" />
<text  x="1003.53" y="113.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (10,420 us, 0.02%)</title><rect x="132.2" y="103" width="0.2" height="15.0" fill="rgb(148.561874669332,148.561874669332,112.261392628303)" rx="2" ry="2" />
<text  x="135.16" y="113.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (9,817 us, 0.02%)</title><rect x="48.3" y="151" width="0.2" height="15.0" fill="rgb(144.0428991682,160.272086181921,144.0428991682)" rx="2" ry="2" />
<text  x="51.27" y="161.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (3,563,537 us, 6.85%)</title><rect x="1022.7" y="151" width="80.7" height="15.0" fill="rgb(115.474791121843,115.474791121843,149.769314410679)" rx="2" ry="2" />
<text  x="1025.65" y="161.5" >pyop2.gl..</text>
</g>
<g >
<title>CreateFunctionSpace (45,887 us, 0.09%)</title><rect x="48.5" y="71" width="1.0" height="15.0" fill="rgb(155.89675633549,141.875131905424,141.875131905424)" rx="2" ry="2" />
<text  x="51.49" y="81.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (1,050,085 us, 2.02%)</title><rect x="133.1" y="199" width="23.8" height="15.0" fill="rgb(147.554315028775,159.700460344153,147.554315028775)" rx="2" ry="2" />
<text  x="136.11" y="209.5" >P..</text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (6,399 us, 0.01%)</title><rect x="1189.9" y="135" width="0.1" height="15.0" fill="rgb(145.722904241717,126.539942119399,145.722904241717)" rx="2" ry="2" />
<text  x="1192.85" y="145.5" ></text>
</g>
<g >
<title>firedrake.mesh._from_cell_list (51,037 us, 0.10%)</title><rect x="131.0" y="103" width="1.2" height="15.0" fill="rgb(152.881445785408,118.75775102146,118.75775102146)" rx="2" ry="2" />
<text  x="134.00" y="113.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.__init__ (25,466 us, 0.05%)</title><rect x="132.4" y="71" width="0.6" height="15.0" fill="rgb(137.860709126114,161.278489212028,137.860709126114)" rx="2" ry="2" />
<text  x="135.40" y="81.5" ></text>
</g>
<g >
<title>all (52,046,513 us, 100%)</title><rect x="10.0" y="39" width="1180.0" height="15.0" fill="rgb(155.567176025354,139.348349527716,139.348349527716)" rx="2" ry="2" />
<text  x="13.00" y="49.5" ></text>
</g>
<g >
<title>SCForwardElim (38,265,597 us, 73.52%)</title><rect x="133.0" y="135" width="867.5" height="15.0" fill="rgb(146.214814052083,154.94458142091,154.94458142091)" rx="2" ry="2" />
<text  x="135.98" y="145.5" >SCForwardElim</text>
</g>
<g >
<title>firedrake (52,046,513 us, 100.00%)</title><rect x="10.0" y="55" width="1180.0" height="15.0" fill="rgb(149.248558868603,149.248558868603,115.589169901691)" rx="2" ry="2" />
<text  x="13.00" y="65.5" >firedrake</text>
</g>
<g >
<title>firedrake.extrusion_utils.make_extruded_coords (1,687,911 us, 3.24%)</title><rect x="10.0" y="87" width="38.3" height="15.0" fill="rgb(145.025670674107,145.025670674107,155.488839485311)" rx="2" ry="2" />
<text  x="13.00" y="97.5" >fi..</text>
</g>
<g >
<title>firedrake.utility_meshes.SquareMesh (78,558 us, 0.15%)</title><rect x="130.4" y="71" width="1.8" height="15.0" fill="rgb(116.44240592187,116.44240592187,149.956594694555)" rx="2" ry="2" />
<text  x="133.38" y="81.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalProblem.__init__ (10,420 us, 0.02%)</title><rect x="132.2" y="87" width="0.2" height="15.0" fill="rgb(154.673166337925,132.494275257427,132.494275257427)" rx="2" ry="2" />
<text  x="135.16" y="97.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.LinearVariationalProblem.__init__ (10,420 us, 0.02%)</title><rect x="132.2" y="71" width="0.2" height="15.0" fill="rgb(155.268682507763,137.059899226186,137.059899226186)" rx="2" ry="2" />
<text  x="135.16" y="81.5" ></text>
</g>
<g >
<title>firedrake.functionspace.VectorFunctionSpace (9,817 us, 0.02%)</title><rect x="48.3" y="87" width="0.2" height="15.0" fill="rgb(120.385493944867,120.385493944867,150.719773021587)" rx="2" ry="2" />
<text  x="51.27" y="97.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_pyop2_kernel_uniform_extrusion (1,632,369 us, 3.14%)</title><rect x="11.3" y="119" width="37.0" height="15.0" fill="rgb(111.798995132296,146.021961700966,146.021961700966)" rx="2" ry="2" />
<text  x="14.26" y="129.5" >Pa..</text>
</g>
<g >
<title>CreateFunctionSpace (9,817 us, 0.02%)</title><rect x="48.3" y="103" width="0.2" height="15.0" fill="rgb(156.263431643014,144.686309263105,144.686309263105)" rx="2" ry="2" />
<text  x="51.27" y="113.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (2,671,743 us, 5.13%)</title><rect x="1103.4" y="151" width="60.6" height="15.0" fill="rgb(149.664098096328,159.357007286644,149.664098096328)" rx="2" ry="2" />
<text  x="1106.45" y="161.5" >pyop2..</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (1,050,085 us, 2.02%)</title><rect x="133.1" y="215" width="23.8" height="15.0" fill="rgb(106.807190610231,144.727790158208,144.727790158208)" rx="2" ry="2" />
<text  x="136.11" y="225.5" >p..</text>
</g>
<g >
<title>Mesh: numbering (9,012 us, 0.02%)</title><rect x="49.8" y="87" width="0.2" height="15.0" fill="rgb(139.081292240501,109.520811366284,139.081292240501)" rx="2" ry="2" />
<text  x="52.76" y="97.5" ></text>
</g>
<g >
<title>SNESSolve (46,622,427 us, 89.58%)</title><rect x="133.0" y="87" width="1057.0" height="15.0" fill="rgb(156.074770052003,143.239903732027,143.239903732027)" rx="2" ry="2" />
<text  x="135.98" y="97.5" >SNESSolve</text>
</g>
</g>
</svg>
