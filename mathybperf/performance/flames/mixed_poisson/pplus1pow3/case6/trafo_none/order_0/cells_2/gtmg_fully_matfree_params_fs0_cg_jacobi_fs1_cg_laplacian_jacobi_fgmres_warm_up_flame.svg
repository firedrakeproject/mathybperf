<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="283" onload="init(evt)" viewBox="0 0 1200 283" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:13px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:18px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 13 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (1 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="283.0" fill="url(#background)"  />
<text id="title" x="600.00" y="26" >Firedrake example</text>
<text id="details" x="10.00" y="265" > </text>
<text id="unzoom" x="10.00" y="26" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="26" >Search</text>
<text id="ignorecase" x="1174.00" y="26" >ic</text>
<text id="matched" x="1090.00" y="265" > </text>
<g id="frames">
<g >
<title>firedrake.assemble.allocate_matrix (6,851 us, 0.06%)</title><rect x="382.8" y="87" width="0.7" height="15.0" fill="rgb(155.713999288918,140.473994548372,140.473994548372)" rx="2" ry="2" />
<text  x="385.80" y="97.5" ></text>
</g>
<g >
<title>PCApply (1,059,986 us, 8.95%)</title><rect x="383.5" y="119" width="105.6" height="15.0" fill="rgb(149.690353673277,159.352733122955,149.690353673277)" rx="2" ry="2" />
<text  x="386.48" y="129.5" >PCApply</text>
</g>
<g >
<title>ParLoopExecute (1,156,387 us, 9.77%)</title><rect x="13.5" y="103" width="115.2" height="15.0" fill="rgb(139.062196281084,161.082898279824,139.062196281084)" rx="2" ry="2" />
<text  x="16.48" y="113.5" >ParLoopExecute</text>
</g>
<g >
<title>firedrake.extrusion_utils.make_extruded_coords (1,188,598 us, 10.04%)</title><rect x="10.3" y="87" width="118.4" height="15.0" fill="rgb(152.441899863807,115.387898955851,115.387898955851)" rx="2" ry="2" />
<text  x="13.27" y="97.5" >firedrake.ext..</text>
</g>
<g >
<title>firedrake.matrix_free.operators.ImplicitMatrixContext.__init__ (6,851 us, 0.06%)</title><rect x="382.8" y="103" width="0.7" height="15.0" fill="rgb(136.343578920433,161.525463896674,136.343578920433)" rx="2" ry="2" />
<text  x="385.80" y="113.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (9,318 us, 0.08%)</title><rect x="492.7" y="167" width="1.0" height="15.0" fill="rgb(140.445601119894,160.857692840948,140.445601119894)" rx="2" ry="2" />
<text  x="495.73" y="177.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (6,297 us, 0.05%)</title><rect x="128.7" y="119" width="0.6" height="15.0" fill="rgb(150.147993660271,159.278233590189,150.147993660271)" rx="2" ry="2" />
<text  x="131.71" y="129.5" ></text>
</g>
<g >
<title>firedrake.slate.slac.optimise.optimise (13,522 us, 0.11%)</title><rect x="487.8" y="167" width="1.3" height="15.0" fill="rgb(127.115699153479,127.115699153479,152.022393384544)" rx="2" ry="2" />
<text  x="490.76" y="177.5" ></text>
</g>
<g >
<title>ParLoopExecute (763,711 us, 6.45%)</title><rect x="495.5" y="151" width="76.1" height="15.0" fill="rgb(130.732971028685,162.438818669749,130.732971028685)" rx="2" ry="2" />
<text  x="498.46" y="161.5" >ParLoop..</text>
</g>
<g >
<title>firedrake.ufl_expr.derivative (1,424 us, 0.01%)</title><rect x="382.5" y="103" width="0.1" height="15.0" fill="rgb(135.253364273758,135.253364273758,153.597425343308)" rx="2" ry="2" />
<text  x="385.50" y="113.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (6,297 us, 0.05%)</title><rect x="128.7" y="135" width="0.6" height="15.0" fill="rgb(111.776194378301,111.776194378301,149.053456976445)" rx="2" ry="2" />
<text  x="131.71" y="145.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (3,699 us, 0.03%)</title><rect x="1189.6" y="151" width="0.4" height="15.0" fill="rgb(149.086198564651,149.086198564651,114.802346890231)" rx="2" ry="2" />
<text  x="1192.63" y="161.5" ></text>
</g>
<g >
<title>FunctionSpaceData: CreateElement (7,894 us, 0.07%)</title><rect x="130.4" y="135" width="0.8" height="15.0" fill="rgb(115.213370153593,115.213370153593,149.718716803921)" rx="2" ry="2" />
<text  x="133.43" y="145.5" ></text>
</g>
<g >
<title>SCForwardElim (1,059,986 us, 8.95%)</title><rect x="383.5" y="135" width="105.6" height="15.0" fill="rgb(152.32608962532,114.500020460783,114.500020460783)" rx="2" ry="2" />
<text  x="386.48" y="145.5" >SCForwardElim</text>
</g>
<g >
<title>firedrake.ufl_expr.action (5,611 us, 0.05%)</title><rect x="381.0" y="87" width="0.5" height="15.0" fill="rgb(130.757185349929,162.4348768035,130.757185349929)" rx="2" ry="2" />
<text  x="383.98" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (4,911 us, 0.04%)</title><rect x="492.0" y="183" width="0.5" height="15.0" fill="rgb(119.75292606152,148.084091941875,148.084091941875)" rx="2" ry="2" />
<text  x="495.00" y="193.5" ></text>
</g>
<g >
<title>KSPSolve (1,059,986 us, 8.95%)</title><rect x="383.5" y="103" width="105.6" height="15.0" fill="rgb(156.406353797204,145.782045778564,145.782045778564)" rx="2" ry="2" />
<text  x="386.48" y="113.5" >KSPSolve</text>
</g>
<g >
<title>firedrake.interpolation.make_interpolator (12,418 us, 0.10%)</title><rect x="493.7" y="135" width="1.2" height="15.0" fill="rgb(138.885067812993,161.111733146722,138.885067812993)" rx="2" ry="2" />
<text  x="496.66" y="145.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (2,026 us, 0.02%)</title><rect x="493.5" y="215" width="0.2" height="15.0" fill="rgb(124.422760929498,124.422760929498,151.501179534741)" rx="2" ry="2" />
<text  x="496.45" y="225.5" ></text>
</g>
<g >
<title>ParLoopExecute (5,156,800 us, 43.55%)</title><rect x="572.1" y="119" width="513.9" height="15.0" fill="rgb(144.372096110699,123.078496283666,144.372096110699)" rx="2" ry="2" />
<text  x="575.10" y="129.5" >ParLoopExecute</text>
</g>
<g >
<title>FunctionSpaceData: CreateElement (4,911 us, 0.04%)</title><rect x="492.0" y="199" width="0.5" height="15.0" fill="rgb(133.056269386216,94.0816903021785,133.056269386216)" rx="2" ry="2" />
<text  x="495.00" y="209.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (1,546 us, 0.01%)</title><rect x="491.8" y="199" width="0.2" height="15.0" fill="rgb(156.541901734281,146.821246629487,146.821246629487)" rx="2" ry="2" />
<text  x="494.84" y="209.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (19,593 us, 0.17%)</title><rect x="129.5" y="119" width="2.0" height="15.0" fill="rgb(137.98496348496,137.98496348496,154.126121964831)" rx="2" ry="2" />
<text  x="132.50" y="129.5" ></text>
</g>
<g >
<title>HybridBreak (973,383 us, 8.22%)</title><rect x="383.5" y="151" width="97.0" height="15.0" fill="rgb(127.748073245644,162.924732262337,127.748073245644)" rx="2" ry="2" />
<text  x="386.48" y="161.5" >HybridBreak</text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (1,043,940 us, 8.82%)</title><rect x="1086.0" y="119" width="104.0" height="15.0" fill="rgb(150.683689159303,150.683689159303,122.544032079701)" rx="2" ry="2" />
<text  x="1088.97" y="129.5" >firedrake.t..</text>
</g>
<g >
<title>firedrake.parloops.par_loop (769,438 us, 6.50%)</title><rect x="494.9" y="135" width="76.7" height="15.0" fill="rgb(150.924196005903,139.868252265127,150.924196005903)" rx="2" ry="2" />
<text  x="497.89" y="145.5" >firedra..</text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (967,400 us, 8.17%)</title><rect x="384.1" y="199" width="96.4" height="15.0" fill="rgb(129.314133628556,162.669792200002,129.314133628556)" rx="2" ry="2" />
<text  x="387.08" y="209.5" >Parloop_Ce..</text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (1,546 us, 0.01%)</title><rect x="491.8" y="215" width="0.2" height="15.0" fill="rgb(147.996846373803,147.996846373803,109.523178580736)" rx="2" ry="2" />
<text  x="494.84" y="225.5" ></text>
</g>
<g >
<title>CreateMesh (1,690 us, 0.01%)</title><rect x="131.5" y="71" width="0.1" height="15.0" fill="rgb(143.765776885933,143.765776885933,155.244989074697)" rx="2" ry="2" />
<text  x="134.45" y="81.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (19,593 us, 0.17%)</title><rect x="129.5" y="103" width="2.0" height="15.0" fill="rgb(141.125769792756,160.746967708156,141.125769792756)" rx="2" ry="2" />
<text  x="132.50" y="113.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (1,546 us, 0.01%)</title><rect x="491.8" y="183" width="0.2" height="15.0" fill="rgb(127.614447610684,127.614447610684,152.118925344003)" rx="2" ry="2" />
<text  x="494.84" y="193.5" ></text>
</g>
<g >
<title>firedrake.utility_meshes.SquareMesh (1,899 us, 0.02%)</title><rect x="380.8" y="71" width="0.2" height="15.0" fill="rgb(155.557475912028,155.557475912028,146.16315249675)" rx="2" ry="2" />
<text  x="383.79" y="81.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (6,297 us, 0.05%)</title><rect x="128.7" y="151" width="0.6" height="15.0" fill="rgb(153.935866437628,126.841642688481,126.841642688481)" rx="2" ry="2" />
<text  x="131.71" y="161.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.LinearVariationalProblem.__init__ (16,634 us, 0.14%)</title><rect x="381.0" y="71" width="1.6" height="15.0" fill="rgb(111.519799943171,145.949577763044,145.949577763044)" rx="2" ry="2" />
<text  x="383.98" y="81.5" ></text>
</g>
<g >
<title>firedrake.parloops.par_loop (973,383 us, 8.22%)</title><rect x="383.5" y="167" width="97.0" height="15.0" fill="rgb(148.188694966344,132.858530851257,148.188694966344)" rx="2" ry="2" />
<text  x="386.48" y="177.5" >firedrake...</text>
</g>
<g >
<title>HybridInit (827,505 us, 6.99%)</title><rect x="489.1" y="119" width="82.5" height="15.0" fill="rgb(125.562595691107,163.280507678192,125.562595691107)" rx="2" ry="2" />
<text  x="492.11" y="129.5" >HybridInit</text>
</g>
<g >
<title>firedrake.mesh.MeshTopology._facets (2,363 us, 0.02%)</title><rect x="131.2" y="135" width="0.3" height="15.0" fill="rgb(115.001801808496,146.852318987388,146.852318987388)" rx="2" ry="2" />
<text  x="134.22" y="145.5" ></text>
</g>
<g >
<title>SNESSolve (8,093,569 us, 68.35%)</title><rect x="383.5" y="87" width="806.5" height="15.0" fill="rgb(136.59710102534,161.48419285634,136.59710102534)" rx="2" ry="2" />
<text  x="386.48" y="97.5" >SNESSolve</text>
</g>
<g >
<title>firedrake.functionspace.VectorFunctionSpace (6,297 us, 0.05%)</title><rect x="128.7" y="87" width="0.6" height="15.0" fill="rgb(129.578732665579,162.626717938162,129.578732665579)" rx="2" ry="2" />
<text  x="131.71" y="97.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_pyop2_kernel_uniform_extrusion (1,156,387 us, 9.77%)</title><rect x="13.5" y="119" width="115.2" height="15.0" fill="rgb(132.401882352053,151.363450980162,151.363450980162)" rx="2" ry="2" />
<text  x="16.48" y="129.5" >Parloop_Cells..</text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalProblem.__init__ (11,023 us, 0.09%)</title><rect x="381.5" y="87" width="1.1" height="15.0" fill="rgb(124.735071850517,163.415220861544,124.735071850517)" rx="2" ry="2" />
<text  x="384.54" y="97.5" ></text>
</g>
<g >
<title>SNESFunctionEval (6,206,078 us, 52.41%)</title><rect x="571.6" y="103" width="618.4" height="15.0" fill="rgb(138.252884809086,138.252884809086,154.177977704984)" rx="2" ry="2" />
<text  x="574.57" y="113.5" >SNESFunctionEval</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (2,301,262 us, 19.43%)</title><rect x="856.7" y="151" width="229.3" height="15.0" fill="rgb(134.823166055065,161.77297296778,134.823166055065)" rx="2" ry="2" />
<text  x="859.65" y="161.5" >pyop2.global_kernel.GlobalK..</text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (11,727 us, 0.10%)</title><rect x="492.5" y="135" width="1.2" height="15.0" fill="rgb(113.812748485052,113.812748485052,149.447628739042)" rx="2" ry="2" />
<text  x="495.49" y="145.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (1,496 us, 0.01%)</title><rect x="1189.9" y="167" width="0.1" height="15.0" fill="rgb(121.4783496271,121.4783496271,150.931293476213)" rx="2" ry="2" />
<text  x="1192.85" y="177.5" ></text>
</g>
<g >
<title>firedrake.utility_meshes.RectangleMesh (1,899 us, 0.02%)</title><rect x="380.8" y="87" width="0.2" height="15.0" fill="rgb(111.367458192359,111.367458192359,148.974346746908)" rx="2" ry="2" />
<text  x="383.79" y="97.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (7,132 us, 0.06%)</title><rect x="492.9" y="183" width="0.8" height="15.0" fill="rgb(135.514370488527,161.660451315821,135.514370488527)" rx="2" ry="2" />
<text  x="495.95" y="193.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (967,400 us, 8.17%)</title><rect x="384.1" y="215" width="96.4" height="15.0" fill="rgb(153.548906666828,153.548906666828,136.429316923858)" rx="2" ry="2" />
<text  x="387.08" y="225.5" >pyop2.glob..</text>
</g>
<g >
<title>Parloop_Cells_wrap_form0_cell_integral_otherwise (2,855,538 us, 24.11%)</title><rect x="572.1" y="135" width="284.6" height="15.0" fill="rgb(152.248285757478,113.903524140665,113.903524140665)" rx="2" ry="2" />
<text  x="575.10" y="145.5" >Parloop_Cells_wrap_form0_cell_integ..</text>
</g>
<g >
<title>Parloop_Cells_wrap_form1_cell_integral_otherwise (2,301,262 us, 19.43%)</title><rect x="856.7" y="135" width="229.3" height="15.0" fill="rgb(134.443927776156,134.443927776156,153.44076021474)" rx="2" ry="2" />
<text  x="859.65" y="145.5" >Parloop_Cells_wrap_form1_ce..</text>
</g>
<g >
<title>HybridRHS (86,603 us, 0.73%)</title><rect x="480.5" y="151" width="8.6" height="15.0" fill="rgb(148.249088515258,148.249088515258,110.745582804713)" rx="2" ry="2" />
<text  x="483.48" y="161.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (763,711 us, 6.45%)</title><rect x="495.5" y="167" width="76.1" height="15.0" fill="rgb(129.555255506429,129.555255506429,152.49456558189)" rx="2" ry="2" />
<text  x="498.46" y="177.5" >Parloop..</text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.solve (8,093,569 us, 68.35%)</title><rect x="383.5" y="71" width="806.5" height="15.0" fill="rgb(148.638503544788,148.638503544788,112.632747947821)" rx="2" ry="2" />
<text  x="386.48" y="81.5" >firedrake.variational_solver.NonlinearVariationalSolver.solve</text>
</g>
<g >
<title>firedrake (11,841,504 us, 100.00%)</title><rect x="10.0" y="55" width="1180.0" height="15.0" fill="rgb(156.781698062716,148.659685147487,148.659685147487)" rx="2" ry="2" />
<text  x="13.00" y="65.5" >firedrake</text>
</g>
<g >
<title>Log_Event_form0_cell_integral_otherwise (2,357 us, 0.02%)</title><rect x="572.1" y="151" width="0.2" height="15.0" fill="rgb(153.655072908592,153.655072908592,136.943814864717)" rx="2" ry="2" />
<text  x="575.10" y="161.5" ></text>
</g>
<g >
<title>all (11,841,504 us, 100%)</title><rect x="10.0" y="39" width="1180.0" height="15.0" fill="rgb(151.182669370719,151.182669370719,124.962166950407)" rx="2" ry="2" />
<text  x="13.00" y="49.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (2,026 us, 0.02%)</title><rect x="493.5" y="231" width="0.2" height="15.0" fill="rgb(142.891947414267,160.459450420933,142.891947414267)" rx="2" ry="2" />
<text  x="496.45" y="241.5" ></text>
</g>
<g >
<title>firedrake.__init__ (2,500,486 us, 21.12%)</title><rect x="131.6" y="71" width="249.2" height="15.0" fill="rgb(114.167140504001,146.635925315852,146.635925315852)" rx="2" ry="2" />
<text  x="134.62" y="81.5" >firedrake.__init__</text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (4,452 us, 0.04%)</title><rect x="493.2" y="199" width="0.5" height="15.0" fill="rgb(144.239847657483,154.432553096385,154.432553096385)" rx="2" ry="2" />
<text  x="496.21" y="209.5" ></text>
</g>
<g >
<title>firedrake.functionspace.MixedFunctionSpace (1,546 us, 0.01%)</title><rect x="491.8" y="151" width="0.2" height="15.0" fill="rgb(116.944766661433,147.356050615927,147.356050615927)" rx="2" ry="2" />
<text  x="494.84" y="161.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (21,226 us, 0.18%)</title><rect x="129.3" y="71" width="2.2" height="15.0" fill="rgb(154.90261941179,134.253415490389,134.253415490389)" rx="2" ry="2" />
<text  x="132.34" y="81.5" ></text>
</g>
<g >
<title>PCSetUp (827,505 us, 6.99%)</title><rect x="489.1" y="103" width="82.5" height="15.0" fill="rgb(110.838291919134,145.772890497553,145.772890497553)" rx="2" ry="2" />
<text  x="492.11" y="113.5" >PCSetUp</text>
</g>
<g >
<title>ParLoopExecute (967,400 us, 8.17%)</title><rect x="384.1" y="183" width="96.4" height="15.0" fill="rgb(134.832083005673,134.832083005673,153.515887033356)" rx="2" ry="2" />
<text  x="387.08" y="193.5" >ParLoopExe..</text>
</g>
<g >
<title>firedrake.ufl_expr.action (4,319 us, 0.04%)</title><rect x="382.8" y="119" width="0.4" height="15.0" fill="rgb(136.092427115181,136.092427115181,153.759824602938)" rx="2" ry="2" />
<text  x="385.80" y="129.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (11,727 us, 0.10%)</title><rect x="492.5" y="151" width="1.2" height="15.0" fill="rgb(128.664843267852,128.664843267852,152.322227729262)" rx="2" ry="2" />
<text  x="495.49" y="161.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (1,156,387 us, 9.77%)</title><rect x="13.5" y="135" width="115.2" height="15.0" fill="rgb(133.761680964857,133.761680964857,153.308712444811)" rx="2" ry="2" />
<text  x="16.48" y="145.5" >pyop2.global_..</text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (4,911 us, 0.04%)</title><rect x="492.0" y="151" width="0.5" height="15.0" fill="rgb(153.972059928288,127.119126116874,127.119126116874)" rx="2" ry="2" />
<text  x="495.00" y="161.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (1,546 us, 0.01%)</title><rect x="491.8" y="167" width="0.2" height="15.0" fill="rgb(149.455358262738,149.455358262738,116.591351580963)" rx="2" ry="2" />
<text  x="494.84" y="177.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (9,599 us, 0.08%)</title><rect x="381.5" y="103" width="1.0" height="15.0" fill="rgb(154.011149222106,127.41881070281,127.41881070281)" rx="2" ry="2" />
<text  x="384.54" y="113.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (4,911 us, 0.04%)</title><rect x="492.0" y="167" width="0.5" height="15.0" fill="rgb(112.791526953299,146.27928476567,146.27928476567)" rx="2" ry="2" />
<text  x="495.00" y="177.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (6,297 us, 0.05%)</title><rect x="128.7" y="103" width="0.6" height="15.0" fill="rgb(152.504261891654,115.866007836016,115.866007836016)" rx="2" ry="2" />
<text  x="131.71" y="113.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (19,593 us, 0.17%)</title><rect x="129.5" y="87" width="2.0" height="15.0" fill="rgb(124.350020891293,124.350020891293,151.48710081767)" rx="2" ry="2" />
<text  x="132.50" y="97.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (2,532 us, 0.02%)</title><rect x="383.2" y="119" width="0.3" height="15.0" fill="rgb(156.341912511205,145.287995919239,145.287995919239)" rx="2" ry="2" />
<text  x="386.23" y="129.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (763,711 us, 6.45%)</title><rect x="495.5" y="183" width="76.1" height="15.0" fill="rgb(145.271536316565,154.700027933924,154.700027933924)" rx="2" ry="2" />
<text  x="498.46" y="193.5" >pyop2.g..</text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.__init__ (8,422 us, 0.07%)</title><rect x="382.6" y="71" width="0.9" height="15.0" fill="rgb(119.392163891492,147.990561008905,147.990561008905)" rx="2" ry="2" />
<text  x="385.64" y="81.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (5,995 us, 0.05%)</title><rect x="1189.4" y="135" width="0.6" height="15.0" fill="rgb(115.063470919895,146.868307275528,146.868307275528)" rx="2" ry="2" />
<text  x="1192.40" y="145.5" ></text>
</g>
<g >
<title>CreateExtMesh (1,197,578 us, 10.11%)</title><rect x="10.0" y="71" width="119.3" height="15.0" fill="rgb(153.362877131064,122.44872467149,122.44872467149)" rx="2" ry="2" />
<text  x="13.00" y="81.5" >CreateExtMesh</text>
</g>
<g >
<title>CreateFunctionSpace (6,457 us, 0.05%)</title><rect x="491.8" y="135" width="0.7" height="15.0" fill="rgb(132.083336120688,162.218991794307,132.083336120688)" rx="2" ry="2" />
<text  x="494.84" y="145.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (2,853,181 us, 24.09%)</title><rect x="572.3" y="151" width="284.4" height="15.0" fill="rgb(115.32144569451,115.32144569451,149.73963465055)" rx="2" ry="2" />
<text  x="575.33" y="161.5" >pyop2.global_kernel.GlobalKernel.co..</text>
</g>
</g>
</svg>
