<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="267" onload="init(evt)" viewBox="0 0 1200 267" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:13px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:18px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 13 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (1 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="267.0" fill="url(#background)"  />
<text id="title" x="600.00" y="26" >Firedrake example</text>
<text id="details" x="10.00" y="249" > </text>
<text id="unzoom" x="10.00" y="26" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="26" >Search</text>
<text id="ignorecase" x="1174.00" y="26" >ic</text>
<text id="matched" x="1090.00" y="249" > </text>
<g id="frames">
<g >
<title>CreateFunctionSpace (9,438 us, 0.02%)</title><rect x="39.3" y="103" width="0.2" height="15.0" fill="rgb(156.5547470901,146.919727690764,146.919727690764)" rx="2" ry="2" />
<text  x="42.32" y="113.5" ></text>
</g>
<g >
<title>firedrake.extrusion_utils.make_extruded_coords (1,337,623 us, 2.48%)</title><rect x="10.0" y="87" width="29.3" height="15.0" fill="rgb(112.001039675675,146.074343619619,146.074343619619)" rx="2" ry="2" />
<text  x="13.00" y="97.5" >f..</text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (43,214 us, 0.08%)</title><rect x="39.5" y="119" width="1.0" height="15.0" fill="rgb(150.558960752775,150.558960752775,121.93957903268)" rx="2" ry="2" />
<text  x="42.53" y="129.5" ></text>
</g>
<g >
<title>firedrake.utility_meshes.RectangleMesh (9,639 us, 0.02%)</title><rect x="106.2" y="87" width="0.2" height="15.0" fill="rgb(156.123362494436,143.612445790677,143.612445790677)" rx="2" ry="2" />
<text  x="109.21" y="97.5" ></text>
</g>
<g >
<title>ParLoopExecute (1,361,570 us, 2.53%)</title><rect x="994.3" y="151" width="29.8" height="15.0" fill="rgb(155.290582733156,137.227800954198,137.227800954198)" rx="2" ry="2" />
<text  x="997.30" y="161.5" >P..</text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (1,190,053 us, 2.21%)</title><rect x="1163.9" y="119" width="26.1" height="15.0" fill="rgb(153.785085619831,125.6856564187,125.6856564187)" rx="2" ry="2" />
<text  x="1166.92" y="129.5" >f..</text>
</g>
<g >
<title>SNESSolve (49,416,829 us, 91.79%)</title><rect x="106.8" y="87" width="1083.2" height="15.0" fill="rgb(148.416629020773,148.416629020773,111.557509869899)" rx="2" ry="2" />
<text  x="109.84" y="97.5" >SNESSolve</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (1,374,773 us, 2.55%)</title><rect x="107.1" y="215" width="30.1" height="15.0" fill="rgb(112.931228324966,146.315503639806,146.315503639806)" rx="2" ry="2" />
<text  x="110.06" y="225.5" >p..</text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (43,214 us, 0.08%)</title><rect x="39.5" y="87" width="1.0" height="15.0" fill="rgb(142.695830631851,160.491376408768,142.695830631851)" rx="2" ry="2" />
<text  x="42.53" y="97.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (3,274,797 us, 6.08%)</title><rect x="1024.3" y="151" width="71.8" height="15.0" fill="rgb(135.872545427533,135.872545427533,153.717266856942)" rx="2" ry="2" />
<text  x="1027.31" y="161.5" >pyop2.g..</text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (9,564 us, 0.02%)</title><rect x="993.5" y="151" width="0.2" height="15.0" fill="rgb(146.605071943289,159.854988288302,146.605071943289)" rx="2" ry="2" />
<text  x="996.46" y="161.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (10,790 us, 0.02%)</title><rect x="106.4" y="103" width="0.3" height="15.0" fill="rgb(152.321243541125,114.462867148623,114.462867148623)" rx="2" ry="2" />
<text  x="109.42" y="113.5" ></text>
</g>
<g >
<title>firedrake.assemble.allocate_matrix (8,070 us, 0.01%)</title><rect x="106.7" y="87" width="0.1" height="15.0" fill="rgb(115.505137872385,115.505137872385,149.7751879753)" rx="2" ry="2" />
<text  x="109.66" y="97.5" ></text>
</g>
<g >
<title>firedrake.mesh.MeshTopology._facets (19,363 us, 0.04%)</title><rect x="40.0" y="135" width="0.5" height="15.0" fill="rgb(140.33624336989,112.736623635342,140.33624336989)" rx="2" ry="2" />
<text  x="43.05" y="145.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (9,564 us, 0.02%)</title><rect x="993.5" y="183" width="0.2" height="15.0" fill="rgb(153.459019918832,153.459019918832,135.993711914339)" rx="2" ry="2" />
<text  x="996.46" y="193.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (1,361,570 us, 2.53%)</title><rect x="994.3" y="167" width="29.8" height="15.0" fill="rgb(153.791254787206,125.732953368577,125.732953368577)" rx="2" ry="2" />
<text  x="997.30" y="177.5" >P..</text>
</g>
<g >
<title>firedrake.functionspace.VectorFunctionSpace (9,438 us, 0.02%)</title><rect x="39.3" y="87" width="0.2" height="15.0" fill="rgb(129.220503598631,150.538649081126,150.538649081126)" rx="2" ry="2" />
<text  x="42.32" y="97.5" ></text>
</g>
<g >
<title>HybridRHS (39,003,800 us, 72.45%)</title><rect x="137.2" y="151" width="854.9" height="15.0" fill="rgb(153.48197821739,123.36183299999,123.36183299999)" rx="2" ry="2" />
<text  x="140.19" y="161.5" >HybridRHS</text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (6,509 us, 0.01%)</title><rect x="993.3" y="151" width="0.2" height="15.0" fill="rgb(153.054414389823,153.054414389823,134.032931273757)" rx="2" ry="2" />
<text  x="996.32" y="161.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.__init__ (8,070 us, 0.01%)</title><rect x="106.7" y="71" width="0.1" height="15.0" fill="rgb(117.43382813729,147.48284433189,147.48284433189)" rx="2" ry="2" />
<text  x="109.66" y="81.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (9,438 us, 0.02%)</title><rect x="39.3" y="119" width="0.2" height="15.0" fill="rgb(136.520330575091,161.496690371497,136.520330575091)" rx="2" ry="2" />
<text  x="42.32" y="129.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (7,374 us, 0.01%)</title><rect x="1189.8" y="135" width="0.2" height="15.0" fill="rgb(145.236364112571,154.69090921437,154.69090921437)" rx="2" ry="2" />
<text  x="1192.84" y="145.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (6,509 us, 0.01%)</title><rect x="993.3" y="167" width="0.2" height="15.0" fill="rgb(143.747264198022,143.747264198022,155.241405973811)" rx="2" ry="2" />
<text  x="996.32" y="177.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.LinearVariationalProblem.__init__ (10,790 us, 0.02%)</title><rect x="106.4" y="71" width="0.3" height="15.0" fill="rgb(154.776604394781,133.287300359987,133.287300359987)" rx="2" ry="2" />
<text  x="109.42" y="81.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (9,564 us, 0.02%)</title><rect x="993.5" y="167" width="0.2" height="15.0" fill="rgb(153.308587019592,153.308587019592,135.264690941099)" rx="2" ry="2" />
<text  x="996.46" y="177.5" ></text>
</g>
<g >
<title>ParLoopExecute (6,376,830 us, 11.85%)</title><rect x="1024.1" y="119" width="139.8" height="15.0" fill="rgb(132.295009927055,162.184533267689,132.295009927055)" rx="2" ry="2" />
<text  x="1027.14" y="129.5" >ParLoopExecute</text>
</g>
<g >
<title>firedrake.slate.slac.optimise.optimise (45,214 us, 0.08%)</title><rect x="385.1" y="167" width="1.0" height="15.0" fill="rgb(153.252480336946,121.602349249916,121.602349249916)" rx="2" ry="2" />
<text  x="388.07" y="177.5" ></text>
</g>
<g >
<title>Mesh: numbering (6,777 us, 0.01%)</title><rect x="40.8" y="87" width="0.1" height="15.0" fill="rgb(120.559170864027,148.293118372155,148.293118372155)" rx="2" ry="2" />
<text  x="43.77" y="97.5" ></text>
</g>
<g >
<title>all (53,834,843 us, 100%)</title><rect x="10.0" y="39" width="1180.0" height="15.0" fill="rgb(152.95106924712,119.291530894588,119.291530894588)" rx="2" ry="2" />
<text  x="13.00" y="49.5" ></text>
</g>
<g >
<title>firedrake.parloops.par_loop (1,384,682 us, 2.57%)</title><rect x="106.8" y="167" width="30.4" height="15.0" fill="rgb(134.87072916433,98.7312434835967,134.87072916433)" rx="2" ry="2" />
<text  x="109.84" y="177.5" >f..</text>
</g>
<g >
<title>firedrake.utility_meshes.SquareMesh (9,639 us, 0.02%)</title><rect x="106.2" y="71" width="0.2" height="15.0" fill="rgb(143.364737350569,154.205672646444,154.205672646444)" rx="2" ry="2" />
<text  x="109.21" y="81.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_form0_cell_integral_otherwise (3,282,640 us, 6.10%)</title><rect x="1024.1" y="135" width="72.0" height="15.0" fill="rgb(121.875413492391,148.63436646099,148.63436646099)" rx="2" ry="2" />
<text  x="1027.14" y="145.5" >Parloop..</text>
</g>
<g >
<title>PCSetUp (1,461,464 us, 2.71%)</title><rect x="992.1" y="103" width="32.0" height="15.0" fill="rgb(126.905860754545,163.061836621353,126.905860754545)" rx="2" ry="2" />
<text  x="995.11" y="113.5" >PC..</text>
</g>
<g >
<title>ParLoopExecute (1,374,773 us, 2.55%)</title><rect x="107.1" y="183" width="30.1" height="15.0" fill="rgb(127.304368004309,162.996963348136,127.304368004309)" rx="2" ry="2" />
<text  x="110.06" y="193.5" >P..</text>
</g>
<g >
<title>SCForwardElim (40,388,482 us, 75.02%)</title><rect x="106.8" y="135" width="885.3" height="15.0" fill="rgb(152.92786873607,152.92786873607,133.419671567108)" rx="2" ry="2" />
<text  x="109.84" y="145.5" >SCForwardElim</text>
</g>
<g >
<title>SNESFunctionEval (7,566,883 us, 14.06%)</title><rect x="1024.1" y="103" width="165.9" height="15.0" fill="rgb(155.48564569808,155.48564569808,145.815052229156)" rx="2" ry="2" />
<text  x="1027.14" y="113.5" >SNESFunctionEval</text>
</g>
<g >
<title>firedrake.__init__ (2,950,256 us, 5.48%)</title><rect x="41.5" y="71" width="64.7" height="15.0" fill="rgb(125.606550926143,163.273352174814,125.606550926143)" rx="2" ry="2" />
<text  x="44.55" y="81.5" >firedr..</text>
</g>
<g >
<title>CreateFunctionSpace (43,214 us, 0.08%)</title><rect x="39.5" y="71" width="1.0" height="15.0" fill="rgb(127.349378743869,150.053542637299,150.053542637299)" rx="2" ry="2" />
<text  x="42.53" y="81.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (9,438 us, 0.02%)</title><rect x="39.3" y="151" width="0.2" height="15.0" fill="rgb(106.926924676778,144.758832323609,144.758832323609)" rx="2" ry="2" />
<text  x="42.32" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (43,214 us, 0.08%)</title><rect x="39.5" y="103" width="1.0" height="15.0" fill="rgb(133.390772257302,162.006153353462,133.390772257302)" rx="2" ry="2" />
<text  x="42.53" y="113.5" ></text>
</g>
<g >
<title>firedrake.functionspace.MixedFunctionSpace (6,608 us, 0.01%)</title><rect x="993.2" y="151" width="0.1" height="15.0" fill="rgb(137.997654271309,106.74398907023,137.997654271309)" rx="2" ry="2" />
<text  x="996.17" y="161.5" ></text>
</g>
<g >
<title>CreateExtMesh (1,347,061 us, 2.50%)</title><rect x="10.0" y="71" width="29.5" height="15.0" fill="rgb(156.042471823085,142.992283976988,142.992283976988)" rx="2" ry="2" />
<text  x="13.00" y="81.5" >C..</text>
</g>
<g >
<title>firedrake (53,834,843 us, 100.00%)</title><rect x="10.0" y="55" width="1180.0" height="15.0" fill="rgb(155.057622318831,155.057622318831,143.740785083564)" rx="2" ry="2" />
<text  x="13.00" y="65.5" >firedrake</text>
</g>
<g >
<title>Parloop_Cells_wrap_form1_cell_integral_otherwise (3,094,190 us, 5.75%)</title><rect x="1096.1" y="135" width="67.8" height="15.0" fill="rgb(149.548797622537,159.375777131215,149.548797622537)" rx="2" ry="2" />
<text  x="1099.09" y="145.5" >Parloo..</text>
</g>
<g >
<title>CreateFunctionSpace (13,117 us, 0.02%)</title><rect x="993.2" y="135" width="0.3" height="15.0" fill="rgb(152.063371287944,152.063371287944,129.230183933883)" rx="2" ry="2" />
<text  x="996.17" y="145.5" ></text>
</g>
<g >
<title>ParLoopExecute (1,302,603 us, 2.42%)</title><rect x="10.8" y="103" width="28.5" height="15.0" fill="rgb(132.424631412991,162.16343209556,132.424631412991)" rx="2" ry="2" />
<text  x="13.77" y="113.5" >P..</text>
</g>
<g >
<title>KSPSolve (40,388,482 us, 75.02%)</title><rect x="106.8" y="103" width="885.3" height="15.0" fill="rgb(151.40257025515,151.40257025515,126.027840467265)" rx="2" ry="2" />
<text  x="109.84" y="113.5" >KSPSolve</text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalProblem.__init__ (10,790 us, 0.02%)</title><rect x="106.4" y="87" width="0.3" height="15.0" fill="rgb(148.551877886462,148.551877886462,112.212946680544)" rx="2" ry="2" />
<text  x="109.42" y="97.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (6,608 us, 0.01%)</title><rect x="993.2" y="167" width="0.1" height="15.0" fill="rgb(149.257044275378,149.257044275378,115.630291488371)" rx="2" ry="2" />
<text  x="996.17" y="177.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (3,088,144 us, 5.74%)</title><rect x="1096.2" y="151" width="67.7" height="15.0" fill="rgb(110.443073309291,145.67042641352,145.67042641352)" rx="2" ry="2" />
<text  x="1099.23" y="161.5" >pyop2...</text>
</g>
<g >
<title>FunctionSpaceData: CreateElement (6,509 us, 0.01%)</title><rect x="993.3" y="199" width="0.2" height="15.0" fill="rgb(131.781567876231,131.781567876231,152.925464750238)" rx="2" ry="2" />
<text  x="996.32" y="209.5" ></text>
</g>
<g >
<title>FunctionSpaceData: CreateElement (6,960 us, 0.01%)</title><rect x="39.9" y="135" width="0.1" height="15.0" fill="rgb(140.687406655387,113.636479554429,140.687406655387)" rx="2" ry="2" />
<text  x="42.90" y="145.5" ></text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (27,649,697 us, 51.36%)</title><rect x="386.1" y="167" width="606.0" height="15.0" fill="rgb(137.172556751491,137.172556751491,153.968881951901)" rx="2" ry="2" />
<text  x="389.06" y="177.5" >firedrake.tsfc_interface.compile_form</text>
</g>
<g >
<title>Parloop_Cells_wrap_pyop2_kernel_uniform_extrusion (1,302,603 us, 2.42%)</title><rect x="10.8" y="119" width="28.5" height="15.0" fill="rgb(122.395657012365,122.395657012365,151.108836841103)" rx="2" ry="2" />
<text  x="13.77" y="129.5" >P..</text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (6,509 us, 0.01%)</title><rect x="993.3" y="183" width="0.2" height="15.0" fill="rgb(131.340144832473,151.088185697308,151.088185697308)" rx="2" ry="2" />
<text  x="996.32" y="193.5" ></text>
</g>
<g >
<title>firedrake.interpolation.make_interpolator (15,497 us, 0.03%)</title><rect x="993.7" y="135" width="0.3" height="15.0" fill="rgb(140.307108541114,140.307108541114,154.575569395054)" rx="2" ry="2" />
<text  x="996.67" y="145.5" ></text>
</g>
<g >
<title>HybridInit (1,461,464 us, 2.71%)</title><rect x="992.1" y="119" width="32.0" height="15.0" fill="rgb(140.409217089711,112.923618792383,140.409217089711)" rx="2" ry="2" />
<text  x="995.11" y="129.5" >Hy..</text>
</g>
<g >
<title>CreateMesh (20,272 us, 0.04%)</title><rect x="40.5" y="71" width="0.4" height="15.0" fill="rgb(151.053800743789,159.130776623104,151.053800743789)" rx="2" ry="2" />
<text  x="43.47" y="81.5" ></text>
</g>
<g >
<title>PetscBarrier (28,712 us, 0.05%)</title><rect x="40.9" y="71" width="0.6" height="15.0" fill="rgb(128.499912703139,128.499912703139,152.290305684478)" rx="2" ry="2" />
<text  x="43.92" y="81.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (1,361,570 us, 2.53%)</title><rect x="994.3" y="183" width="29.8" height="15.0" fill="rgb(112.305060786101,146.153163907508,146.153163907508)" rx="2" ry="2" />
<text  x="997.30" y="193.5" >p..</text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.solve (49,416,829 us, 91.79%)</title><rect x="106.8" y="71" width="1083.2" height="15.0" fill="rgb(147.451678444572,130.969926014217,147.451678444572)" rx="2" ry="2" />
<text  x="109.84" y="81.5" >firedrake.variational_solver.NonlinearVariationalSolver.solve</text>
</g>
<g >
<title>firedrake.matrix_free.operators.ImplicitMatrixContext.__init__ (8,070 us, 0.01%)</title><rect x="106.7" y="103" width="0.1" height="15.0" fill="rgb(142.121020384848,117.310114736174,142.121020384848)" rx="2" ry="2" />
<text  x="109.66" y="113.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (9,564 us, 0.02%)</title><rect x="993.5" y="135" width="0.2" height="15.0" fill="rgb(156.577924494081,147.097421121286,147.097421121286)" rx="2" ry="2" />
<text  x="996.46" y="145.5" ></text>
</g>
<g >
<title>PCApply (40,388,482 us, 75.02%)</title><rect x="106.8" y="119" width="885.3" height="15.0" fill="rgb(156.059130232245,143.119998447212,143.119998447212)" rx="2" ry="2" />
<text  x="109.84" y="129.5" >PCApply</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (1,302,603 us, 2.42%)</title><rect x="10.8" y="135" width="28.5" height="15.0" fill="rgb(152.621647108532,116.765961165412,116.765961165412)" rx="2" ry="2" />
<text  x="13.77" y="145.5" >p..</text>
</g>
<g >
<title>firedrake.parloops.par_loop (1,374,674 us, 2.55%)</title><rect x="994.0" y="135" width="30.1" height="15.0" fill="rgb(150.186036732347,150.186036732347,120.132331856759)" rx="2" ry="2" />
<text  x="997.01" y="145.5" >f..</text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (9,438 us, 0.02%)</title><rect x="39.3" y="135" width="0.2" height="15.0" fill="rgb(131.237347029834,151.061534415142,151.061534415142)" rx="2" ry="2" />
<text  x="42.32" y="145.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (1,374,773 us, 2.55%)</title><rect x="107.1" y="199" width="30.1" height="15.0" fill="rgb(156.24416021354,144.538561637138,144.538561637138)" rx="2" ry="2" />
<text  x="110.06" y="209.5" >P..</text>
</g>
<g >
<title>HybridBreak (1,384,682 us, 2.57%)</title><rect x="106.8" y="151" width="30.4" height="15.0" fill="rgb(128.454928285925,150.340166592647,150.340166592647)" rx="2" ry="2" />
<text  x="109.84" y="161.5" >H..</text>
</g>
</g>
</svg>
