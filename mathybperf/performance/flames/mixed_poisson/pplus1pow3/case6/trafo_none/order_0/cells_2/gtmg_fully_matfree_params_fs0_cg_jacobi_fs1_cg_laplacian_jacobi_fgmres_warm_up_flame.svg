<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="267" onload="init(evt)" viewBox="0 0 1200 267" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:13px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:18px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 13 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (1 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="267.0" fill="url(#background)"  />
<text id="title" x="600.00" y="26" >Firedrake example</text>
<text id="details" x="10.00" y="249" > </text>
<text id="unzoom" x="10.00" y="26" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="26" >Search</text>
<text id="ignorecase" x="1174.00" y="26" >ic</text>
<text id="matched" x="1090.00" y="249" > </text>
<g id="frames">
<g >
<title>firedrake.__init__ (2,808,584 us, 5.57%)</title><rect x="39.6" y="71" width="65.8" height="15.0" fill="rgb(122.316322953539,122.316322953539,151.093481861975)" rx="2" ry="2" />
<text  x="42.62" y="81.5" >firedr..</text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (38,092 us, 0.08%)</title><rect x="37.7" y="87" width="0.9" height="15.0" fill="rgb(153.926964341182,153.926964341182,138.261442576499)" rx="2" ry="2" />
<text  x="40.69" y="97.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalProblem.__init__ (10,063 us, 0.02%)</title><rect x="105.5" y="87" width="0.3" height="15.0" fill="rgb(136.375696402553,152.393699067329,152.393699067329)" rx="2" ry="2" />
<text  x="108.53" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspace.MixedFunctionSpace (5,751 us, 0.01%)</title><rect x="997.6" y="151" width="0.1" height="15.0" fill="rgb(125.332881964528,163.317902936007,125.332881964528)" rx="2" ry="2" />
<text  x="1000.57" y="161.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (8,656 us, 0.02%)</title><rect x="997.8" y="167" width="0.2" height="15.0" fill="rgb(153.602249217553,153.602249217553,136.68782313122)" rx="2" ry="2" />
<text  x="1000.83" y="177.5" ></text>
</g>
<g >
<title>firedrake.assemble.allocate_matrix (7,937 us, 0.02%)</title><rect x="105.8" y="87" width="0.2" height="15.0" fill="rgb(144.011034864682,160.277273394122,144.011034864682)" rx="2" ry="2" />
<text  x="108.77" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (5,437 us, 0.01%)</title><rect x="997.7" y="151" width="0.1" height="15.0" fill="rgb(147.783837236367,147.783837236367,108.490903530087)" rx="2" ry="2" />
<text  x="1000.71" y="161.5" ></text>
</g>
<g >
<title>firedrake.slate.slac.optimise.optimise (37,866 us, 0.08%)</title><rect x="445.6" y="167" width="0.9" height="15.0" fill="rgb(135.143197387691,161.720874843864,135.143197387691)" rx="2" ry="2" />
<text  x="448.58" y="177.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_form1_cell_integral_otherwise (2,715,227 us, 5.39%)</title><rect x="1101.2" y="135" width="63.5" height="15.0" fill="rgb(155.221178092097,136.695698706079,136.695698706079)" rx="2" ry="2" />
<text  x="1104.16" y="145.5" >Parloo..</text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (5,437 us, 0.01%)</title><rect x="997.7" y="167" width="0.1" height="15.0" fill="rgb(153.388944891522,122.648577501665,122.648577501665)" rx="2" ry="2" />
<text  x="1000.71" y="177.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (9,925 us, 0.02%)</title><rect x="37.5" y="151" width="0.2" height="15.0" fill="rgb(146.373327052756,146.373327052756,155.749676203759)" rx="2" ry="2" />
<text  x="40.45" y="161.5" ></text>
</g>
<g >
<title>CreateMesh (17,202 us, 0.03%)</title><rect x="38.6" y="71" width="0.4" height="15.0" fill="rgb(108.587642736519,108.587642736519,148.436317949004)" rx="2" ry="2" />
<text  x="41.58" y="81.5" ></text>
</g>
<g >
<title>firedrake.interpolation.make_interpolator (13,511 us, 0.03%)</title><rect x="998.0" y="135" width="0.4" height="15.0" fill="rgb(143.751979294443,160.319445231137,143.751979294443)" rx="2" ry="2" />
<text  x="1001.03" y="145.5" ></text>
</g>
<g >
<title>all (50,412,081 us, 100%)</title><rect x="10.0" y="39" width="1180.0" height="15.0" fill="rgb(150.825701731392,150.825701731392,123.23224685213)" rx="2" ry="2" />
<text  x="13.00" y="49.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_pyop2_kernel_uniform_extrusion (1,138,228 us, 2.26%)</title><rect x="10.8" y="119" width="26.7" height="15.0" fill="rgb(149.17870072225,149.17870072225,115.250626577057)" rx="2" ry="2" />
<text  x="13.81" y="129.5" >P..</text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (1,219,761 us, 2.42%)</title><rect x="106.1" y="199" width="28.6" height="15.0" fill="rgb(130.312603446313,150.821786078674,150.821786078674)" rx="2" ry="2" />
<text  x="109.12" y="209.5" >P..</text>
</g>
<g >
<title>CreateFunctionSpace (8,656 us, 0.02%)</title><rect x="997.8" y="183" width="0.2" height="15.0" fill="rgb(141.567274514036,115.891140942217,141.567274514036)" rx="2" ry="2" />
<text  x="1000.83" y="193.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.LinearVariationalProblem.__init__ (10,063 us, 0.02%)</title><rect x="105.5" y="71" width="0.3" height="15.0" fill="rgb(132.285502913191,162.186080921108,132.285502913191)" rx="2" ry="2" />
<text  x="108.53" y="81.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (2,709,390 us, 5.37%)</title><rect x="1101.3" y="151" width="63.4" height="15.0" fill="rgb(128.017702888781,150.226811860054,150.226811860054)" rx="2" ry="2" />
<text  x="1104.30" y="161.5" >pyop2...</text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (6,544 us, 0.01%)</title><rect x="1189.8" y="135" width="0.2" height="15.0" fill="rgb(152.780996485493,117.987639722112,117.987639722112)" rx="2" ry="2" />
<text  x="1192.85" y="145.5" ></text>
</g>
<g >
<title>PCSetUp (1,080,612 us, 2.14%)</title><rect x="996.6" y="103" width="25.3" height="15.0" fill="rgb(152.490430721921,115.75996886806,115.75996886806)" rx="2" ry="2" />
<text  x="999.59" y="113.5" >P..</text>
</g>
<g >
<title>firedrake.mesh._from_cell_list (7,400 us, 0.01%)</title><rect x="105.4" y="103" width="0.1" height="15.0" fill="rgb(110.885021769777,145.785005644016,145.785005644016)" rx="2" ry="2" />
<text  x="108.36" y="113.5" ></text>
</g>
<g >
<title>SNESFunctionEval (7,182,463 us, 14.25%)</title><rect x="1021.9" y="103" width="168.1" height="15.0" fill="rgb(153.158004234966,120.878032468076,120.878032468076)" rx="2" ry="2" />
<text  x="1024.88" y="113.5" >SNESFunctionEval</text>
</g>
<g >
<title>CreateFunctionSpace (5,751 us, 0.01%)</title><rect x="997.6" y="167" width="0.1" height="15.0" fill="rgb(149.829015026997,149.829015026997,118.402149746214)" rx="2" ry="2" />
<text  x="1000.57" y="177.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (8,656 us, 0.02%)</title><rect x="997.8" y="151" width="0.2" height="15.0" fill="rgb(136.256606807604,161.539622147599,136.256606807604)" rx="2" ry="2" />
<text  x="1000.83" y="161.5" ></text>
</g>
<g >
<title>firedrake (50,412,081 us, 100.00%)</title><rect x="10.0" y="55" width="1180.0" height="15.0" fill="rgb(133.131041496893,162.048435105157,133.131041496893)" rx="2" ry="2" />
<text  x="13.00" y="65.5" >firedrake</text>
</g>
<g >
<title>KSPSolve (38,049,566 us, 75.48%)</title><rect x="106.0" y="103" width="890.6" height="15.0" fill="rgb(124.92697809115,124.92697809115,151.598769953126)" rx="2" ry="2" />
<text  x="108.96" y="113.5" >KSPSolve</text>
</g>
<g >
<title>ParLoopExecute (1,138,228 us, 2.26%)</title><rect x="10.8" y="103" width="26.7" height="15.0" fill="rgb(129.124931303162,150.513871078598,150.513871078598)" rx="2" ry="2" />
<text  x="13.81" y="113.5" >P..</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (1,138,228 us, 2.26%)</title><rect x="10.8" y="135" width="26.7" height="15.0" fill="rgb(139.771984393276,160.967351377839,139.771984393276)" rx="2" ry="2" />
<text  x="13.81" y="145.5" >p..</text>
</g>
<g >
<title>SCForwardElim (38,049,566 us, 75.48%)</title><rect x="106.0" y="135" width="890.6" height="15.0" fill="rgb(113.626492875357,146.49575741213,146.49575741213)" rx="2" ry="2" />
<text  x="108.96" y="145.5" >SCForwardElim</text>
</g>
<g >
<title>FunctionSpaceData: CreateElement (5,437 us, 0.01%)</title><rect x="997.7" y="199" width="0.1" height="15.0" fill="rgb(142.730494429179,142.730494429179,155.044611825002)" rx="2" ry="2" />
<text  x="1000.71" y="209.5" ></text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (23,502,189 us, 46.62%)</title><rect x="446.5" y="167" width="550.1" height="15.0" fill="rgb(156.136907008779,143.716287067308,143.716287067308)" rx="2" ry="2" />
<text  x="449.47" y="177.5" >firedrake.tsfc_interface.compile_form</text>
</g>
<g >
<title>firedrake.mesh.MeshTopology._facets (17,286 us, 0.03%)</title><rect x="38.2" y="135" width="0.4" height="15.0" fill="rgb(127.879674755566,150.19102678848,150.19102678848)" rx="2" ry="2" />
<text  x="41.17" y="145.5" ></text>
</g>
<g >
<title>ParLoopExecute (6,102,256 us, 12.10%)</title><rect x="1021.9" y="119" width="142.8" height="15.0" fill="rgb(155.419161598539,138.213572255467,138.213572255467)" rx="2" ry="2" />
<text  x="1024.88" y="129.5" >ParLoopExecute</text>
</g>
<g >
<title>firedrake.functionspace.VectorFunctionSpace (9,925 us, 0.02%)</title><rect x="37.5" y="87" width="0.2" height="15.0" fill="rgb(152.568367759815,116.357486158585,116.357486158585)" rx="2" ry="2" />
<text  x="40.45" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (9,925 us, 0.02%)</title><rect x="37.5" y="119" width="0.2" height="15.0" fill="rgb(153.278012066868,121.798092512653,121.798092512653)" rx="2" ry="2" />
<text  x="40.45" y="129.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (38,092 us, 0.08%)</title><rect x="37.7" y="103" width="0.9" height="15.0" fill="rgb(135.143887656734,135.143887656734,153.576236320658)" rx="2" ry="2" />
<text  x="40.69" y="113.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (10,063 us, 0.02%)</title><rect x="105.5" y="103" width="0.3" height="15.0" fill="rgb(152.002545315866,112.019514088308,112.019514088308)" rx="2" ry="2" />
<text  x="108.53" y="113.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.solve (46,312,641 us, 91.87%)</title><rect x="106.0" y="71" width="1084.0" height="15.0" fill="rgb(150.375379685099,138.461910443067,150.375379685099)" rx="2" ry="2" />
<text  x="108.96" y="81.5" >firedrake.variational_solver.NonlinearVariationalSolver.solve</text>
</g>
<g >
<title>ParLoopExecute (1,219,761 us, 2.42%)</title><rect x="106.1" y="183" width="28.6" height="15.0" fill="rgb(119.201764352919,119.201764352919,150.490664068307)" rx="2" ry="2" />
<text  x="109.12" y="193.5" >P..</text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (996,087 us, 1.98%)</title><rect x="998.6" y="167" width="23.3" height="15.0" fill="rgb(151.392832727656,151.392832727656,125.980650910948)" rx="2" ry="2" />
<text  x="1001.56" y="177.5" >P..</text>
</g>
<g >
<title>HybridRHS (36,822,861 us, 73.04%)</title><rect x="134.7" y="151" width="861.9" height="15.0" fill="rgb(146.632163222036,155.052783057565,155.052783057565)" rx="2" ry="2" />
<text  x="137.67" y="161.5" >HybridRHS</text>
</g>
<g >
<title>CreateFunctionSpace (11,188 us, 0.02%)</title><rect x="997.6" y="135" width="0.2" height="15.0" fill="rgb(114.184044094611,114.184044094611,149.519492405409)" rx="2" ry="2" />
<text  x="1000.57" y="145.5" ></text>
</g>
<g >
<title>FunctionSpaceData: CreateElement (6,645 us, 0.01%)</title><rect x="38.0" y="135" width="0.2" height="15.0" fill="rgb(139.360094623352,161.03440320085,139.360094623352)" rx="2" ry="2" />
<text  x="41.02" y="145.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_form0_cell_integral_otherwise (3,387,029 us, 6.72%)</title><rect x="1021.9" y="135" width="79.3" height="15.0" fill="rgb(119.941981983495,148.133106440165,148.133106440165)" rx="2" ry="2" />
<text  x="1024.88" y="145.5" >Parloop_..</text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (5,437 us, 0.01%)</title><rect x="997.7" y="183" width="0.1" height="15.0" fill="rgb(139.761961626724,111.265026668481,139.761961626724)" rx="2" ry="2" />
<text  x="1000.71" y="193.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (38,092 us, 0.08%)</title><rect x="37.7" y="71" width="0.9" height="15.0" fill="rgb(150.363306879054,150.363306879054,120.991410260031)" rx="2" ry="2" />
<text  x="40.69" y="81.5" ></text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (1,080,207 us, 2.14%)</title><rect x="1164.7" y="119" width="25.3" height="15.0" fill="rgb(152.466360906802,115.575433618818,115.575433618818)" rx="2" ry="2" />
<text  x="1167.72" y="129.5" >f..</text>
</g>
<g >
<title>firedrake.extrusion_utils.make_extruded_coords (1,172,849 us, 2.33%)</title><rect x="10.0" y="87" width="27.5" height="15.0" fill="rgb(124.552625753412,163.44492138898,124.552625753412)" rx="2" ry="2" />
<text  x="13.00" y="97.5" >f..</text>
</g>
<g >
<title>HybridInit (1,080,612 us, 2.14%)</title><rect x="996.6" y="119" width="25.3" height="15.0" fill="rgb(117.784668756066,117.784668756066,150.216387501174)" rx="2" ry="2" />
<text  x="999.59" y="129.5" >H..</text>
</g>
<g >
<title>PCApply (38,049,566 us, 75.48%)</title><rect x="106.0" y="119" width="890.6" height="15.0" fill="rgb(149.852402646923,149.852402646923,118.515489750472)" rx="2" ry="2" />
<text  x="108.96" y="129.5" >PCApply</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (1,219,761 us, 2.42%)</title><rect x="106.1" y="215" width="28.6" height="15.0" fill="rgb(137.090355974046,137.090355974046,153.952972124009)" rx="2" ry="2" />
<text  x="109.12" y="225.5" >p..</text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (38,092 us, 0.08%)</title><rect x="37.7" y="119" width="0.9" height="15.0" fill="rgb(118.984302943228,118.984302943228,150.448574763205)" rx="2" ry="2" />
<text  x="40.69" y="129.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.__init__ (7,937 us, 0.02%)</title><rect x="105.8" y="71" width="0.2" height="15.0" fill="rgb(155.150239647702,155.150239647702,144.189622908097)" rx="2" ry="2" />
<text  x="108.77" y="81.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (3,380,806 us, 6.71%)</title><rect x="1022.0" y="151" width="79.2" height="15.0" fill="rgb(148.428460346866,148.428460346866,111.614846296348)" rx="2" ry="2" />
<text  x="1025.03" y="161.5" >pyop2.gl..</text>
</g>
<g >
<title>CreateExtMesh (1,182,774 us, 2.35%)</title><rect x="10.0" y="71" width="27.7" height="15.0" fill="rgb(139.251622849124,139.251622849124,154.371281841766)" rx="2" ry="2" />
<text  x="13.00" y="81.5" >C..</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (996,087 us, 1.98%)</title><rect x="998.6" y="183" width="23.3" height="15.0" fill="rgb(127.246942747819,163.006311645704,127.246942747819)" rx="2" ry="2" />
<text  x="1001.56" y="193.5" >p..</text>
</g>
<g >
<title>PetscBarrier (27,388 us, 0.05%)</title><rect x="39.0" y="71" width="0.6" height="15.0" fill="rgb(156.648490645402,147.638428281417,147.638428281417)" rx="2" ry="2" />
<text  x="41.98" y="81.5" ></text>
</g>
<g >
<title>Mesh: numbering (5,898 us, 0.01%)</title><rect x="38.8" y="87" width="0.2" height="15.0" fill="rgb(153.542764293606,123.827859584316,123.827859584316)" rx="2" ry="2" />
<text  x="41.84" y="97.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (8,656 us, 0.02%)</title><rect x="997.8" y="135" width="0.2" height="15.0" fill="rgb(124.74042837501,124.74042837501,151.562663556453)" rx="2" ry="2" />
<text  x="1000.83" y="145.5" ></text>
</g>
<g >
<title>HybridBreak (1,226,705 us, 2.43%)</title><rect x="106.0" y="151" width="28.7" height="15.0" fill="rgb(151.209365413101,151.209365413101,125.091540078874)" rx="2" ry="2" />
<text  x="108.96" y="161.5" >H..</text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (9,925 us, 0.02%)</title><rect x="37.5" y="135" width="0.2" height="15.0" fill="rgb(110.693261133257,110.693261133257,148.843856993534)" rx="2" ry="2" />
<text  x="40.45" y="145.5" ></text>
</g>
<g >
<title>firedrake.utility_meshes.SquareMesh (7,400 us, 0.01%)</title><rect x="105.4" y="71" width="0.1" height="15.0" fill="rgb(153.65301663018,124.673127498044,124.673127498044)" rx="2" ry="2" />
<text  x="108.36" y="81.5" ></text>
</g>
<g >
<title>firedrake.utility_meshes.RectangleMesh (7,400 us, 0.01%)</title><rect x="105.4" y="87" width="0.1" height="15.0" fill="rgb(141.109055109956,141.109055109956,154.730784859992)" rx="2" ry="2" />
<text  x="108.36" y="97.5" ></text>
</g>
<g >
<title>firedrake.parloops.par_loop (1,226,705 us, 2.43%)</title><rect x="106.0" y="167" width="28.7" height="15.0" fill="rgb(147.975627839593,159.631874537741,147.975627839593)" rx="2" ry="2" />
<text  x="108.96" y="177.5" >f..</text>
</g>
<g >
<title>CreateFunctionSpace (9,925 us, 0.02%)</title><rect x="37.5" y="103" width="0.2" height="15.0" fill="rgb(113.469025139374,146.454932443542,146.454932443542)" rx="2" ry="2" />
<text  x="40.45" y="113.5" ></text>
</g>
<g >
<title>firedrake.parloops.par_loop (1,005,177 us, 1.99%)</title><rect x="998.4" y="135" width="23.5" height="15.0" fill="rgb(113.750911849053,146.528014183088,146.528014183088)" rx="2" ry="2" />
<text  x="1001.35" y="145.5" >f..</text>
</g>
<g >
<title>ParLoopExecute (996,087 us, 1.98%)</title><rect x="998.6" y="151" width="23.3" height="15.0" fill="rgb(152.388559284291,152.388559284291,130.8060949931)" rx="2" ry="2" />
<text  x="1001.56" y="161.5" >P..</text>
</g>
<g >
<title>firedrake.matrix_free.operators.ImplicitMatrixContext.__init__ (7,937 us, 0.02%)</title><rect x="105.8" y="103" width="0.2" height="15.0" fill="rgb(125.024508338351,163.368103293757,125.024508338351)" rx="2" ry="2" />
<text  x="108.77" y="113.5" ></text>
</g>
<g >
<title>SNESSolve (46,312,641 us, 91.87%)</title><rect x="106.0" y="87" width="1084.0" height="15.0" fill="rgb(144.606428568334,160.180348837713,144.606428568334)" rx="2" ry="2" />
<text  x="108.96" y="97.5" >SNESSolve</text>
</g>
</g>
</svg>
