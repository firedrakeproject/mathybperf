<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="283" onload="init(evt)" viewBox="0 0 1200 283" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:13px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:18px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 13 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (1 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="283.0" fill="url(#background)"  />
<text id="title" x="600.00" y="26" >Firedrake example</text>
<text id="details" x="10.00" y="265" > </text>
<text id="unzoom" x="10.00" y="26" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="26" >Search</text>
<text id="ignorecase" x="1174.00" y="26" >ic</text>
<text id="matched" x="1090.00" y="265" > </text>
<g id="frames">
<g >
<title>firedrake.extrusion_utils.make_extruded_coords (2,075,611 us, 11.30%)</title><rect x="10.2" y="87" width="133.4" height="15.0" fill="rgb(124.080615838604,124.080615838604,151.434957904246)" rx="2" ry="2" />
<text  x="13.22" y="97.5" >firedrake.extru..</text>
</g>
<g >
<title>firedrake.utility_meshes.SquareMesh (21,688 us, 0.12%)</title><rect x="343.6" y="71" width="1.4" height="15.0" fill="rgb(135.516722483963,135.516722483963,153.648397900122)" rx="2" ry="2" />
<text  x="346.57" y="81.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (4,982 us, 0.03%)</title><rect x="439.5" y="151" width="0.3" height="15.0" fill="rgb(140.398084457454,153.436540414895,153.436540414895)" rx="2" ry="2" />
<text  x="442.50" y="161.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (65,632 us, 0.36%)</title><rect x="144.6" y="71" width="4.2" height="15.0" fill="rgb(147.775636690068,147.775636690068,108.451162421096)" rx="2" ry="2" />
<text  x="147.61" y="81.5" ></text>
</g>
<g >
<title>FunctionSpaceData: CreateElement (4,982 us, 0.03%)</title><rect x="439.5" y="199" width="0.3" height="15.0" fill="rgb(148.081646378109,159.614615705889,148.081646378109)" rx="2" ry="2" />
<text  x="442.50" y="209.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (19,466 us, 0.11%)</title><rect x="440.4" y="167" width="1.2" height="15.0" fill="rgb(128.573572432893,162.790348673715,128.573572432893)" rx="2" ry="2" />
<text  x="443.38" y="177.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (2,872 us, 0.02%)</title><rect x="435.6" y="183" width="0.2" height="15.0" fill="rgb(129.089754029434,150.504751044668,150.504751044668)" rx="2" ry="2" />
<text  x="438.65" y="193.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (3,020 us, 0.02%)</title><rect x="439.3" y="199" width="0.2" height="15.0" fill="rgb(139.144093910094,161.069566107659,139.144093910094)" rx="2" ry="2" />
<text  x="442.31" y="209.5" ></text>
</g>
<g >
<title>firedrake.mesh.MeshTopology._facets (28,011 us, 0.15%)</title><rect x="147.0" y="135" width="1.8" height="15.0" fill="rgb(116.64135727553,147.277388923286,147.277388923286)" rx="2" ry="2" />
<text  x="150.03" y="145.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (63,411 us, 0.35%)</title><rect x="144.8" y="119" width="4.0" height="15.0" fill="rgb(123.680010196419,123.680010196419,151.357421328339)" rx="2" ry="2" />
<text  x="147.75" y="129.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.action (4,676 us, 0.03%)</title><rect x="345.0" y="87" width="0.3" height="15.0" fill="rgb(115.513749297141,146.985046114073,146.985046114073)" rx="2" ry="2" />
<text  x="347.96" y="97.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (956,587 us, 5.21%)</title><rect x="443.2" y="167" width="61.5" height="15.0" fill="rgb(134.323656317342,161.854288506479,134.323656317342)" rx="2" ry="2" />
<text  x="446.24" y="177.5" >Parloo..</text>
</g>
<g >
<title>CreateMesh (5,025 us, 0.03%)</title><rect x="149.2" y="87" width="0.3" height="15.0" fill="rgb(145.701275844551,160.002117885771,145.701275844551)" rx="2" ry="2" />
<text  x="152.21" y="97.5" ></text>
</g>
<g >
<title>CreateMesh (3,611 us, 0.02%)</title><rect x="343.9" y="119" width="0.2" height="15.0" fill="rgb(154.306623296193,154.306623296193,140.101328281551)" rx="2" ry="2" />
<text  x="346.90" y="129.5" ></text>
</g>
<g >
<title>firedrake.assemble.allocate_matrix (2,093 us, 0.01%)</title><rect x="439.8" y="135" width="0.2" height="15.0" fill="rgb(140.633977176678,160.827026971238,140.633977176678)" rx="2" ry="2" />
<text  x="442.82" y="145.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (3,020 us, 0.02%)</title><rect x="439.3" y="167" width="0.2" height="15.0" fill="rgb(144.186026445993,154.418599448961,154.418599448961)" rx="2" ry="2" />
<text  x="442.31" y="177.5" ></text>
</g>
<g >
<title>PetscBarrier (32,281 us, 0.18%)</title><rect x="150.5" y="71" width="2.1" height="15.0" fill="rgb(133.228134173556,94.5220938197362,133.228134173556)" rx="2" ry="2" />
<text  x="153.48" y="81.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (5,789 us, 0.03%)</title><rect x="1189.6" y="151" width="0.4" height="15.0" fill="rgb(136.297296619819,161.532998224681,136.297296619819)" rx="2" ry="2" />
<text  x="1192.63" y="161.5" ></text>
</g>
<g >
<title>Log_Event_form0_cell_integral_otherwise (5,953 us, 0.03%)</title><rect x="505.5" y="151" width="0.4" height="15.0" fill="rgb(132.312129398847,162.181746376932,132.312129398847)" rx="2" ry="2" />
<text  x="508.53" y="161.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (13,363 us, 0.07%)</title><rect x="143.6" y="103" width="0.9" height="15.0" fill="rgb(108.638176066649,145.202490091353,145.202490091353)" rx="2" ry="2" />
<text  x="146.61" y="113.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (4,536 us, 0.02%)</title><rect x="441.3" y="231" width="0.3" height="15.0" fill="rgb(118.834758577677,118.834758577677,150.419630692454)" rx="2" ry="2" />
<text  x="444.34" y="241.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (4,982 us, 0.03%)</title><rect x="439.5" y="183" width="0.3" height="15.0" fill="rgb(156.566917821575,147.013036632071,147.013036632071)" rx="2" ry="2" />
<text  x="442.50" y="193.5" ></text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (1,374,927 us, 7.49%)</title><rect x="1101.6" y="119" width="88.4" height="15.0" fill="rgb(129.887136367602,129.887136367602,152.558800587278)" rx="2" ry="2" />
<text  x="1104.64" y="129.5" >firedrake..</text>
</g>
<g >
<title>firedrake.ufl_expr.action (5,031 us, 0.03%)</title><rect x="346.6" y="119" width="0.3" height="15.0" fill="rgb(137.689292357149,137.689292357149,154.068895294932)" rx="2" ry="2" />
<text  x="349.61" y="129.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (8,888 us, 0.05%)</title><rect x="1189.4" y="135" width="0.6" height="15.0" fill="rgb(133.342372295149,133.342372295149,153.227555928093)" rx="2" ry="2" />
<text  x="1192.43" y="145.5" ></text>
</g>
<g >
<title>DMPlexSymmetrize (2,233 us, 0.01%)</title><rect x="152.4" y="87" width="0.2" height="15.0" fill="rgb(132.967210555026,151.510017551303,151.510017551303)" rx="2" ry="2" />
<text  x="155.41" y="97.5" ></text>
</g>
<g >
<title>firedrake.utility_meshes.RectangleMesh (21,688 us, 0.12%)</title><rect x="343.6" y="87" width="1.4" height="15.0" fill="rgb(139.142850113618,153.111109288716,153.111109288716)" rx="2" ry="2" />
<text  x="346.57" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (3,020 us, 0.02%)</title><rect x="439.3" y="183" width="0.2" height="15.0" fill="rgb(153.918000487597,126.704670404911,126.704670404911)" rx="2" ry="2" />
<text  x="442.31" y="193.5" ></text>
</g>
<g >
<title>firedrake.functionspace.MixedFunctionSpace (3,020 us, 0.02%)</title><rect x="439.3" y="151" width="0.2" height="15.0" fill="rgb(156.38407532335,145.611244145681,145.611244145681)" rx="2" ry="2" />
<text  x="442.31" y="161.5" ></text>
</g>
<g >
<title>all (18,360,926 us, 100%)</title><rect x="10.0" y="39" width="1180.0" height="15.0" fill="rgb(154.966520067299,154.966520067299,143.299289556911)" rx="2" ry="2" />
<text  x="13.00" y="49.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (4,104 us, 0.02%)</title><rect x="346.9" y="119" width="0.3" height="15.0" fill="rgb(154.199167292408,128.860282575127,128.860282575127)" rx="2" ry="2" />
<text  x="349.93" y="129.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.solve (13,114,169 us, 71.42%)</title><rect x="347.2" y="71" width="842.8" height="15.0" fill="rgb(125.077378904889,149.464505642008,149.464505642008)" rx="2" ry="2" />
<text  x="350.19" y="81.5" >firedrake.variational_solver.NonlinearVariationalSolver.solve</text>
</g>
<g >
<title>SNESSolve (13,114,169 us, 71.42%)</title><rect x="347.2" y="87" width="842.8" height="15.0" fill="rgb(139.091764535772,139.091764535772,154.340341523053)" rx="2" ry="2" />
<text  x="350.19" y="97.5" >SNESSolve</text>
</g>
<g >
<title>CreateExtMesh (2,094,537 us, 11.41%)</title><rect x="10.0" y="71" width="134.6" height="15.0" fill="rgb(132.094677047027,162.217145596996,132.094677047027)" rx="2" ry="2" />
<text  x="13.00" y="81.5" >CreateExtMesh</text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (13,363 us, 0.07%)</title><rect x="143.6" y="119" width="0.9" height="15.0" fill="rgb(148.023126785522,148.023126785522,156.068992281069)" rx="2" ry="2" />
<text  x="146.61" y="129.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (3,864,002 us, 21.04%)</title><rect x="853.3" y="151" width="248.3" height="15.0" fill="rgb(145.884188529887,145.884188529887,155.655004231591)" rx="2" ry="2" />
<text  x="856.31" y="161.5" >pyop2.global_kernel.GlobalKern..</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (2,003,108 us, 10.91%)</title><rect x="14.9" y="135" width="128.7" height="15.0" fill="rgb(156.156670018238,143.867803473158,143.867803473158)" rx="2" ry="2" />
<text  x="17.88" y="145.5" >pyop2.global_k..</text>
</g>
<g >
<title>SCForwardElim (1,379,233 us, 7.51%)</title><rect x="347.2" y="135" width="88.6" height="15.0" fill="rgb(145.016042432384,124.728608732984,145.016042432384)" rx="2" ry="2" />
<text  x="350.19" y="145.5" >SCForward..</text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (13,363 us, 0.07%)</title><rect x="143.6" y="151" width="0.9" height="15.0" fill="rgb(155.883450901959,141.773123581685,141.773123581685)" rx="2" ry="2" />
<text  x="146.61" y="161.5" ></text>
</g>
<g >
<title>Log_Event_form1_cell_integral_otherwise (2,394 us, 0.01%)</title><rect x="853.2" y="151" width="0.1" height="15.0" fill="rgb(128.092814436553,128.092814436553,152.211512471591)" rx="2" ry="2" />
<text  x="856.16" y="161.5" ></text>
</g>
<g >
<title>Mesh: numbering (9,391 us, 0.05%)</title><rect x="149.5" y="87" width="0.6" height="15.0" fill="rgb(121.511535232009,121.511535232009,150.937716496518)" rx="2" ry="2" />
<text  x="152.53" y="97.5" ></text>
</g>
<g >
<title>DMPlexInterp (4,593 us, 0.03%)</title><rect x="344.7" y="119" width="0.3" height="15.0" fill="rgb(154.141071484865,154.141071484865,139.299038734345)" rx="2" ry="2" />
<text  x="347.67" y="129.5" ></text>
</g>
<g >
<title>PCSetUp (1,076,825 us, 5.86%)</title><rect x="435.8" y="103" width="69.2" height="15.0" fill="rgb(155.435963407751,138.342386126092,138.342386126092)" rx="2" ry="2" />
<text  x="438.83" y="113.5" >PCSetUp</text>
</g>
<g >
<title>firedrake.interpolation.make_interpolator (18,743 us, 0.10%)</title><rect x="441.6" y="135" width="1.2" height="15.0" fill="rgb(127.617386076068,162.946006917849,127.617386076068)" rx="2" ry="2" />
<text  x="444.63" y="145.5" ></text>
</g>
<g >
<title>CreateMesh (25,738 us, 0.14%)</title><rect x="148.8" y="71" width="1.7" height="15.0" fill="rgb(117.027312256706,147.377451325813,147.377451325813)" rx="2" ry="2" />
<text  x="151.83" y="81.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (8,002 us, 0.04%)</title><rect x="439.3" y="135" width="0.5" height="15.0" fill="rgb(154.146826949409,128.459006612138,128.459006612138)" rx="2" ry="2" />
<text  x="442.31" y="145.5" ></text>
</g>
<g >
<title>FunctionSpaceData: CreateElement (8,793 us, 0.05%)</title><rect x="146.5" y="135" width="0.5" height="15.0" fill="rgb(148.878943020453,148.878943020453,113.797954637578)" rx="2" ry="2" />
<text  x="149.46" y="145.5" ></text>
</g>
<g >
<title>CreateMesh (3,611 us, 0.02%)</title><rect x="343.9" y="103" width="0.2" height="15.0" fill="rgb(150.450688982415,150.450688982415,121.414877376317)" rx="2" ry="2" />
<text  x="346.90" y="113.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (4,982 us, 0.03%)</title><rect x="439.5" y="167" width="0.3" height="15.0" fill="rgb(150.793158379222,150.793158379222,123.074536760845)" rx="2" ry="2" />
<text  x="442.50" y="177.5" ></text>
</g>
<g >
<title>firedrake.parloops.par_loop (1,203,702 us, 6.56%)</title><rect x="347.2" y="167" width="77.4" height="15.0" fill="rgb(136.811226536118,161.449335215051,136.811226536118)" rx="2" ry="2" />
<text  x="350.19" y="177.5" >firedrak..</text>
</g>
<g >
<title>firedrake.mesh._from_cell_list (12,941 us, 0.07%)</title><rect x="344.1" y="103" width="0.9" height="15.0" fill="rgb(153.80720239338,125.855218349249,125.855218349249)" rx="2" ry="2" />
<text  x="347.13" y="113.5" ></text>
</g>
<g >
<title>firedrake.assemble.allocate_matrix (9,135 us, 0.05%)</title><rect x="346.6" y="87" width="0.6" height="15.0" fill="rgb(124.275114056674,124.275114056674,151.472602720647)" rx="2" ry="2" />
<text  x="349.61" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (4,536 us, 0.02%)</title><rect x="441.3" y="215" width="0.3" height="15.0" fill="rgb(123.993174589054,149.183415634199,149.183415634199)" rx="2" ry="2" />
<text  x="444.34" y="225.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (4,946 us, 0.03%)</title><rect x="504.7" y="135" width="0.3" height="15.0" fill="rgb(148.306083355622,148.306083355622,111.021788569551)" rx="2" ry="2" />
<text  x="507.72" y="145.5" ></text>
</g>
<g >
<title>Mesh: reorder (5,341 us, 0.03%)</title><rect x="150.1" y="87" width="0.4" height="15.0" fill="rgb(142.861509095173,154.075206061712,154.075206061712)" rx="2" ry="2" />
<text  x="153.14" y="97.5" ></text>
</g>
<g >
<title>ParLoopExecute (9,278,129 us, 50.53%)</title><rect x="505.4" y="119" width="596.2" height="15.0" fill="rgb(147.679147420474,147.679147420474,107.983560576143)" rx="2" ry="2" />
<text  x="508.36" y="129.5" >ParLoopExecute</text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (13,363 us, 0.07%)</title><rect x="143.6" y="135" width="0.9" height="15.0" fill="rgb(124.007833265714,124.007833265714,151.420870954654)" rx="2" ry="2" />
<text  x="146.61" y="145.5" ></text>
</g>
<g >
<title>ParLoopExecute (956,587 us, 5.21%)</title><rect x="443.2" y="151" width="61.5" height="15.0" fill="rgb(137.748512295304,137.748512295304,154.080357218446)" rx="2" ry="2" />
<text  x="446.24" y="161.5" >ParLoo..</text>
</g>
<g >
<title>DMPlexStratify (3,712 us, 0.02%)</title><rect x="152.2" y="87" width="0.2" height="15.0" fill="rgb(140.38282960425,140.38282960425,154.590225084694)" rx="2" ry="2" />
<text  x="155.17" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspace.make_scalar_element (3,691 us, 0.02%)</title><rect x="441.0" y="199" width="0.2" height="15.0" fill="rgb(127.488969978782,150.089732957462,150.089732957462)" rx="2" ry="2" />
<text  x="443.97" y="209.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (1,194,351 us, 6.50%)</title><rect x="347.8" y="199" width="76.8" height="15.0" fill="rgb(148.99743312052,148.99743312052,114.372175891752)" rx="2" ry="2" />
<text  x="350.79" y="209.5" >Parloop_..</text>
</g>
<g >
<title>CreateFunctionSpace (14,136 us, 0.08%)</title><rect x="440.7" y="183" width="0.9" height="15.0" fill="rgb(141.382454079568,115.417538578894,141.382454079568)" rx="2" ry="2" />
<text  x="443.72" y="193.5" ></text>
</g>
<g >
<title>ParLoopExecute (2,003,108 us, 10.91%)</title><rect x="14.9" y="103" width="128.7" height="15.0" fill="rgb(152.945967214174,119.252415308668,119.252415308668)" rx="2" ry="2" />
<text  x="17.88" y="113.5" >ParLoopExecute</text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.__init__ (15,309 us, 0.08%)</title><rect x="346.2" y="71" width="1.0" height="15.0" fill="rgb(140.220101926121,153.390396795661,153.390396795661)" rx="2" ry="2" />
<text  x="349.21" y="81.5" ></text>
</g>
<g >
<title>KSPSolve (1,379,233 us, 7.51%)</title><rect x="347.2" y="103" width="88.6" height="15.0" fill="rgb(129.986192333075,162.560387294616,129.986192333075)" rx="2" ry="2" />
<text  x="350.19" y="113.5" >KSPSolve</text>
</g>
<g >
<title>Parloop_Cells_wrap_form0_cell_integral_otherwise (5,409,353 us, 29.46%)</title><rect x="505.4" y="135" width="347.6" height="15.0" fill="rgb(127.828914110883,162.911572121484,127.828914110883)" rx="2" ry="2" />
<text  x="508.36" y="145.5" >Parloop_Cells_wrap_form0_cell_integral_othe..</text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (26,063 us, 0.14%)</title><rect x="440.0" y="151" width="1.6" height="15.0" fill="rgb(111.99028979201,111.99028979201,149.094894798454)" rx="2" ry="2" />
<text  x="442.96" y="161.5" ></text>
</g>
<g >
<title>firedrake.__init__ (2,969,692 us, 16.17%)</title><rect x="152.6" y="71" width="190.8" height="15.0" fill="rgb(125.298594213751,149.521857759121,149.521857759121)" rx="2" ry="2" />
<text  x="155.56" y="81.5" >firedrake.__init__</text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (12,478 us, 0.07%)</title><rect x="345.3" y="103" width="0.8" height="15.0" fill="rgb(137.573546551386,105.657213037927,137.573546551386)" rx="2" ry="2" />
<text  x="348.26" y="113.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (956,587 us, 5.21%)</title><rect x="443.2" y="183" width="61.5" height="15.0" fill="rgb(143.153773642212,160.416827546617,143.153773642212)" rx="2" ry="2" />
<text  x="446.24" y="193.5" >pyop2...</text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (63,411 us, 0.35%)</title><rect x="144.8" y="87" width="4.0" height="15.0" fill="rgb(153.838421142094,153.838421142094,137.832348611686)" rx="2" ry="2" />
<text  x="147.75" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (63,411 us, 0.35%)</title><rect x="144.8" y="103" width="4.0" height="15.0" fill="rgb(145.120714017018,145.120714017018,155.507234971036)" rx="2" ry="2" />
<text  x="147.75" y="113.5" ></text>
</g>
<g >
<title>firedrake.slate.slac.optimise.optimise (20,451 us, 0.11%)</title><rect x="434.5" y="167" width="1.3" height="15.0" fill="rgb(155.732855291393,155.732855291393,147.013067950597)" rx="2" ry="2" />
<text  x="437.52" y="177.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (6,631 us, 0.04%)</title><rect x="441.2" y="199" width="0.4" height="15.0" fill="rgb(152.232978691888,113.786169971143,113.786169971143)" rx="2" ry="2" />
<text  x="444.21" y="209.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (5,400,756 us, 29.41%)</title><rect x="505.9" y="151" width="347.1" height="15.0" fill="rgb(152.163927963144,113.256781050771,113.256781050771)" rx="2" ry="2" />
<text  x="508.91" y="161.5" >pyop2.global_kernel.GlobalKernel.compile</text>
</g>
<g >
<title>HybridInit (1,076,825 us, 5.86%)</title><rect x="435.8" y="119" width="69.2" height="15.0" fill="rgb(154.126132016929,128.300345463122,128.300345463122)" rx="2" ry="2" />
<text  x="438.83" y="129.5" >HybridI..</text>
</g>
<g >
<title>PCApply (1,379,233 us, 7.51%)</title><rect x="347.2" y="119" width="88.6" height="15.0" fill="rgb(152.02622646745,112.201069583781,112.201069583781)" rx="2" ry="2" />
<text  x="350.19" y="129.5" >PCApply</text>
</g>
<g >
<title>firedrake.ufl_expr.derivative (2,225 us, 0.01%)</title><rect x="346.1" y="103" width="0.1" height="15.0" fill="rgb(127.51745924338,162.962274076659,127.51745924338)" rx="2" ry="2" />
<text  x="349.07" y="113.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (26,063 us, 0.14%)</title><rect x="440.0" y="135" width="1.6" height="15.0" fill="rgb(138.833953566011,138.833953566011,154.290442625679)" rx="2" ry="2" />
<text  x="442.96" y="145.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.LinearVariationalProblem.__init__ (19,379 us, 0.11%)</title><rect x="345.0" y="71" width="1.2" height="15.0" fill="rgb(153.978667884394,153.978667884394,138.512005901296)" rx="2" ry="2" />
<text  x="347.96" y="81.5" ></text>
</g>
<g >
<title>HybridBreak (1,203,702 us, 6.56%)</title><rect x="347.2" y="151" width="77.4" height="15.0" fill="rgb(104.207742478468,144.053859161084,144.053859161084)" rx="2" ry="2" />
<text  x="350.19" y="161.5" >HybridBr..</text>
</g>
<g >
<title>firedrake.parloops.par_loop (962,870 us, 5.24%)</title><rect x="442.8" y="135" width="61.9" height="15.0" fill="rgb(155.99722102426,142.645361185996,142.645361185996)" rx="2" ry="2" />
<text  x="445.84" y="145.5" >firedr..</text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (2,402 us, 0.01%)</title><rect x="1189.8" y="167" width="0.2" height="15.0" fill="rgb(124.362789310937,124.362789310937,151.489572124698)" rx="2" ry="2" />
<text  x="1192.85" y="177.5" ></text>
</g>
<g >
<title>ParLoopExecute (1,194,351 us, 6.50%)</title><rect x="347.8" y="183" width="76.8" height="15.0" fill="rgb(130.329623634981,162.504479873375,130.329623634981)" rx="2" ry="2" />
<text  x="350.79" y="193.5" >ParLoopE..</text>
</g>
<g >
<title>Parloop_Cells_wrap_pyop2_kernel_uniform_extrusion (2,003,108 us, 10.91%)</title><rect x="14.9" y="119" width="128.7" height="15.0" fill="rgb(132.195125071901,151.309847240863,151.309847240863)" rx="2" ry="2" />
<text  x="17.88" y="129.5" >Parloop_Cells_..</text>
</g>
<g >
<title>firedrake.functionspace.MixedFunctionSpace (2,501 us, 0.01%)</title><rect x="343.4" y="71" width="0.2" height="15.0" fill="rgb(147.899442233091,159.644276845776,147.899442233091)" rx="2" ry="2" />
<text  x="346.41" y="81.5" ></text>
</g>
<g >
<title>firedrake.matrix_free.operators.ImplicitMatrixContext.__init__ (9,135 us, 0.05%)</title><rect x="346.6" y="103" width="0.6" height="15.0" fill="rgb(121.532964793141,148.545583464888,148.545583464888)" rx="2" ry="2" />
<text  x="349.61" y="113.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_form1_cell_integral_otherwise (3,868,776 us, 21.07%)</title><rect x="853.0" y="135" width="248.6" height="15.0" fill="rgb(151.049782883543,151.049782883543,124.31817858948)" rx="2" ry="2" />
<text  x="856.00" y="145.5" >Parloop_Cells_wrap_form1_cell_..</text>
</g>
<g >
<title>HybridRHS (175,531 us, 0.96%)</title><rect x="424.6" y="151" width="11.2" height="15.0" fill="rgb(148.4304758008,159.5578295208,148.4304758008)" rx="2" ry="2" />
<text  x="427.55" y="161.5" ></text>
</g>
<g >
<title>firedrake (18,360,926 us, 100.00%)</title><rect x="10.0" y="55" width="1180.0" height="15.0" fill="rgb(138.55274347521,161.165832457524,138.55274347521)" rx="2" ry="2" />
<text  x="13.00" y="65.5" >firedrake</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (1,194,351 us, 6.50%)</title><rect x="347.8" y="215" width="76.8" height="15.0" fill="rgb(149.708675219006,149.708675219006,117.818964522876)" rx="2" ry="2" />
<text  x="350.79" y="225.5" >pyop2.gl..</text>
</g>
<g >
<title>SNESFunctionEval (10,658,111 us, 58.05%)</title><rect x="505.0" y="103" width="685.0" height="15.0" fill="rgb(143.163539944989,154.153510356108,154.153510356108)" rx="2" ry="2" />
<text  x="508.04" y="113.5" >SNESFunctionEval</text>
</g>
<g >
<title>firedrake.function.Function.split (2,225 us, 0.01%)</title><rect x="346.1" y="119" width="0.1" height="15.0" fill="rgb(120.137145675205,148.183704434312,148.183704434312)" rx="2" ry="2" />
<text  x="349.07" y="129.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalProblem.__init__ (14,703 us, 0.08%)</title><rect x="345.3" y="87" width="0.9" height="15.0" fill="rgb(146.238836803304,154.950809541597,154.950809541597)" rx="2" ry="2" />
<text  x="348.26" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (3,020 us, 0.02%)</title><rect x="439.3" y="215" width="0.2" height="15.0" fill="rgb(135.519481765883,100.393672025074,135.519481765883)" rx="2" ry="2" />
<text  x="442.31" y="225.5" ></text>
</g>
<g >
<title>firedrake.mesh.make_mesh_from_coordinates (2,176 us, 0.01%)</title><rect x="144.5" y="87" width="0.1" height="15.0" fill="rgb(138.246349286113,152.878683148251,152.878683148251)" rx="2" ry="2" />
<text  x="147.47" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspace.VectorFunctionSpace (13,363 us, 0.07%)</title><rect x="143.6" y="87" width="0.9" height="15.0" fill="rgb(155.761427677663,140.837612195418,140.837612195418)" rx="2" ry="2" />
<text  x="146.61" y="97.5" ></text>
</g>
</g>
</svg>
