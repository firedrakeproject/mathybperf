<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="267" onload="init(evt)" viewBox="0 0 1200 267" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:13px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:18px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 13 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (1 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="267.0" fill="url(#background)"  />
<text id="title" x="600.00" y="26" >Firedrake example</text>
<text id="details" x="10.00" y="249" > </text>
<text id="unzoom" x="10.00" y="26" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="26" >Search</text>
<text id="ignorecase" x="1174.00" y="26" >ic</text>
<text id="matched" x="1090.00" y="249" > </text>
<g id="frames">
<g >
<title>DMPlexStratify (5,677 us, 0.01%)</title><rect x="122.3" y="135" width="0.1" height="15.0" fill="rgb(152.558763670565,116.283854807667,116.283854807667)" rx="2" ry="2" />
<text  x="125.31" y="145.5" ></text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (24,883,128 us, 51.48%)</title><rect x="418.0" y="167" width="607.5" height="15.0" fill="rgb(106.389682061277,144.619547201072,144.619547201072)" rx="2" ry="2" />
<text  x="421.03" y="177.5" >firedrake.tsfc_interface.compile_form</text>
</g>
<g >
<title>firedrake (48,331,570 us, 100.00%)</title><rect x="10.0" y="55" width="1180.0" height="15.0" fill="rgb(115.17539479309,146.897324575986,146.897324575986)" rx="2" ry="2" />
<text  x="13.00" y="65.5" >firedrake</text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.solve (43,662,957 us, 90.34%)</title><rect x="124.0" y="71" width="1066.0" height="15.0" fill="rgb(127.716530662045,127.716530662045,152.138683353944)" rx="2" ry="2" />
<text  x="126.98" y="81.5" >firedrake.variational_solver.NonlinearVariationalSolver.solve</text>
</g>
<g >
<title>ParLoopExecute (824,503 us, 1.71%)</title><rect x="1029.1" y="151" width="20.1" height="15.0" fill="rgb(141.840063316754,160.63068736704,141.840063316754)" rx="2" ry="2" />
<text  x="1032.08" y="161.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (1,418,515 us, 2.93%)</title><rect x="124.3" y="215" width="34.6" height="15.0" fill="rgb(146.139690703645,146.139690703645,155.704456265222)" rx="2" ry="2" />
<text  x="127.30" y="225.5" >py..</text>
</g>
<g >
<title>firedrake.extrusion_utils.make_extruded_coords (1,495,943 us, 3.10%)</title><rect x="10.0" y="87" width="36.5" height="15.0" fill="rgb(131.209145621019,131.209145621019,152.814673346004)" rx="2" ry="2" />
<text  x="13.00" y="97.5" >fi..</text>
</g>
<g >
<title>SNESSolve (43,662,957 us, 90.34%)</title><rect x="124.0" y="87" width="1066.0" height="15.0" fill="rgb(152.83753481174,118.42110022334,118.42110022334)" rx="2" ry="2" />
<text  x="126.98" y="97.5" >SNESSolve</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (2,108,639 us, 4.36%)</title><rect x="1113.9" y="151" width="51.5" height="15.0" fill="rgb(124.636094296576,163.431333486604,124.636094296576)" rx="2" ry="2" />
<text  x="1116.92" y="161.5" >pyop..</text>
</g>
<g >
<title>KSPSolve (36,927,164 us, 76.40%)</title><rect x="124.0" y="103" width="901.5" height="15.0" fill="rgb(126.901745893817,163.062506482402,126.901745893817)" rx="2" ry="2" />
<text  x="126.98" y="113.5" >KSPSolve</text>
</g>
<g >
<title>firedrake.mesh._from_cell_list (34,630 us, 0.07%)</title><rect x="121.9" y="103" width="0.9" height="15.0" fill="rgb(149.290877831544,149.290877831544,115.794254106714)" rx="2" ry="2" />
<text  x="124.94" y="113.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (46,054 us, 0.10%)</title><rect x="46.7" y="103" width="1.2" height="15.0" fill="rgb(155.367550907847,137.817890293494,137.817890293494)" rx="2" ry="2" />
<text  x="49.74" y="113.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.LinearVariationalProblem.__init__ (14,954 us, 0.03%)</title><rect x="122.8" y="71" width="0.3" height="15.0" fill="rgb(138.634072577642,138.634072577642,154.25175598277)" rx="2" ry="2" />
<text  x="125.78" y="81.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (6,183 us, 0.01%)</title><rect x="1189.8" y="135" width="0.2" height="15.0" fill="rgb(150.945805516788,150.945805516788,123.814288273662)" rx="2" ry="2" />
<text  x="1192.85" y="145.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.action (5,405 us, 0.01%)</title><rect x="122.8" y="87" width="0.1" height="15.0" fill="rgb(156.099374623019,143.428538776481,143.428538776481)" rx="2" ry="2" />
<text  x="125.78" y="97.5" ></text>
</g>
<g >
<title>Mesh: numbering (8,855 us, 0.02%)</title><rect x="48.1" y="87" width="0.2" height="15.0" fill="rgb(152.943105500239,152.943105500239,133.493511270388)" rx="2" ry="2" />
<text  x="51.09" y="97.5" ></text>
</g>
<g >
<title>HybridBreak (1,431,585 us, 2.96%)</title><rect x="124.0" y="151" width="34.9" height="15.0" fill="rgb(112.461263497217,112.461263497217,149.186050999461)" rx="2" ry="2" />
<text  x="126.98" y="161.5" >Hy..</text>
</g>
<g >
<title>CreateFunctionSpace (11,399 us, 0.02%)</title><rect x="1027.2" y="135" width="0.3" height="15.0" fill="rgb(148.560336987462,148.560336987462,112.253940785393)" rx="2" ry="2" />
<text  x="1030.24" y="145.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (9,037 us, 0.02%)</title><rect x="46.5" y="119" width="0.2" height="15.0" fill="rgb(133.014698717827,151.522329297214,151.522329297214)" rx="2" ry="2" />
<text  x="49.52" y="129.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (6,203 us, 0.01%)</title><rect x="1027.4" y="167" width="0.1" height="15.0" fill="rgb(113.955642426459,113.955642426459,149.475285630928)" rx="2" ry="2" />
<text  x="1030.36" y="177.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (1,418,515 us, 2.93%)</title><rect x="124.3" y="199" width="34.6" height="15.0" fill="rgb(131.287775230738,131.287775230738,152.829891980143)" rx="2" ry="2" />
<text  x="127.30" y="209.5" >Pa..</text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalProblem.__init__ (9,549 us, 0.02%)</title><rect x="122.9" y="87" width="0.2" height="15.0" fill="rgb(135.43492173594,100.176986948347,135.43492173594)" rx="2" ry="2" />
<text  x="125.92" y="97.5" ></text>
</g>
<g >
<title>all (48,331,570 us, 100%)</title><rect x="10.0" y="39" width="1180.0" height="15.0" fill="rgb(117.046729982763,147.382485551087,147.382485551087)" rx="2" ry="2" />
<text  x="13.00" y="49.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (7,687 us, 0.02%)</title><rect x="1028.0" y="199" width="0.2" height="15.0" fill="rgb(154.876203639971,134.050894573115,134.050894573115)" rx="2" ry="2" />
<text  x="1031.03" y="209.5" ></text>
</g>
<g >
<title>PCSetUp (969,159 us, 2.01%)</title><rect x="1025.5" y="103" width="23.7" height="15.0" fill="rgb(122.215403995688,148.72251214703,148.72251214703)" rx="2" ry="2" />
<text  x="1028.55" y="113.5" >P..</text>
</g>
<g >
<title>CreateMesh (7,005 us, 0.01%)</title><rect x="121.8" y="119" width="0.1" height="15.0" fill="rgb(156.128590746726,143.652529058235,143.652529058235)" rx="2" ry="2" />
<text  x="124.77" y="129.5" ></text>
</g>
<g >
<title>firedrake.parloops.par_loop (830,835 us, 1.72%)</title><rect x="1028.9" y="135" width="20.3" height="15.0" fill="rgb(116.041821896327,147.121953824974,147.121953824974)" rx="2" ry="2" />
<text  x="1031.92" y="145.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (824,503 us, 1.71%)</title><rect x="1029.1" y="183" width="20.1" height="15.0" fill="rgb(112.961153315503,146.323261970686,146.323261970686)" rx="2" ry="2" />
<text  x="1032.08" y="193.5" ></text>
</g>
<g >
<title>firedrake.functionspace.VectorFunctionSpace (9,037 us, 0.02%)</title><rect x="46.5" y="87" width="0.2" height="15.0" fill="rgb(154.680958744281,132.554017039488,132.554017039488)" rx="2" ry="2" />
<text  x="49.52" y="97.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.__init__ (34,126 us, 0.07%)</title><rect x="123.1" y="71" width="0.9" height="15.0" fill="rgb(116.625283167799,147.273221562022,147.273221562022)" rx="2" ry="2" />
<text  x="126.15" y="81.5" ></text>
</g>
<g >
<title>firedrake.parloops.par_loop (1,431,585 us, 2.96%)</title><rect x="124.0" y="167" width="34.9" height="15.0" fill="rgb(154.765318851761,133.200777863499,133.200777863499)" rx="2" ry="2" />
<text  x="126.98" y="177.5" >fi..</text>
</g>
<g >
<title>CreateMesh (25,628 us, 0.05%)</title><rect x="47.9" y="71" width="0.6" height="15.0" fill="rgb(116.981468304465,116.981468304465,150.060929349251)" rx="2" ry="2" />
<text  x="50.87" y="81.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (6,203 us, 0.01%)</title><rect x="1027.4" y="151" width="0.1" height="15.0" fill="rgb(105.109348413878,144.287608848042,144.287608848042)" rx="2" ry="2" />
<text  x="1030.36" y="161.5" ></text>
</g>
<g >
<title>HybridInit (969,159 us, 2.01%)</title><rect x="1025.5" y="119" width="23.7" height="15.0" fill="rgb(117.107668136158,147.398284331596,147.398284331596)" rx="2" ry="2" />
<text  x="1028.55" y="129.5" >H..</text>
</g>
<g >
<title>firedrake.utility_meshes.RectangleMesh (54,610 us, 0.11%)</title><rect x="121.5" y="87" width="1.3" height="15.0" fill="rgb(129.643099633447,162.616239594555,129.643099633447)" rx="2" ry="2" />
<text  x="124.45" y="97.5" ></text>
</g>
<g >
<title>FunctionSpaceData: CreateElement (8,900 us, 0.02%)</title><rect x="47.2" y="135" width="0.2" height="15.0" fill="rgb(147.827544732323,147.827544732323,108.702716779718)" rx="2" ry="2" />
<text  x="50.17" y="145.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (6,203 us, 0.01%)</title><rect x="1027.4" y="183" width="0.1" height="15.0" fill="rgb(135.98685643892,135.98685643892,153.739391568823)" rx="2" ry="2" />
<text  x="1030.36" y="193.5" ></text>
</g>
<g >
<title>firedrake.utility_meshes.SquareMesh (54,610 us, 0.11%)</title><rect x="121.5" y="71" width="1.3" height="15.0" fill="rgb(156.127286339457,143.642528602505,143.642528602505)" rx="2" ry="2" />
<text  x="124.45" y="81.5" ></text>
</g>
<g >
<title>DMPlexBuFrCeLi (5,677 us, 0.01%)</title><rect x="122.3" y="119" width="0.1" height="15.0" fill="rgb(153.044279551957,120.006143231667,120.006143231667)" rx="2" ry="2" />
<text  x="125.31" y="129.5" ></text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (1,007,707 us, 2.08%)</title><rect x="1165.4" y="119" width="24.6" height="15.0" fill="rgb(128.817053509353,128.817053509353,152.351687776004)" rx="2" ry="2" />
<text  x="1168.40" y="129.5" >f..</text>
</g>
<g >
<title>HybridRHS (35,495,579 us, 73.44%)</title><rect x="158.9" y="151" width="866.6" height="15.0" fill="rgb(151.459279860631,151.459279860631,126.302663939979)" rx="2" ry="2" />
<text  x="161.93" y="161.5" >HybridRHS</text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (9,549 us, 0.02%)</title><rect x="122.9" y="103" width="0.2" height="15.0" fill="rgb(147.948489120739,159.636292468717,147.948489120739)" rx="2" ry="2" />
<text  x="125.92" y="113.5" ></text>
</g>
<g >
<title>ParLoopExecute (1,439,280 us, 2.98%)</title><rect x="11.4" y="103" width="35.1" height="15.0" fill="rgb(141.506109682355,153.723806213944,153.723806213944)" rx="2" ry="2" />
<text  x="14.38" y="113.5" >Pa..</text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (28,865 us, 0.06%)</title><rect x="1027.5" y="135" width="0.7" height="15.0" fill="rgb(146.972626839124,146.972626839124,155.865669710798)" rx="2" ry="2" />
<text  x="1030.52" y="145.5" ></text>
</g>
<g >
<title>PetscBarrier (30,944 us, 0.06%)</title><rect x="48.5" y="71" width="0.7" height="15.0" fill="rgb(117.228639830959,147.429647363582,147.429647363582)" rx="2" ry="2" />
<text  x="51.49" y="81.5" ></text>
</g>
<g >
<title>firedrake.assemble.allocate_matrix (14,174 us, 0.03%)</title><rect x="123.6" y="87" width="0.4" height="15.0" fill="rgb(139.570276617781,153.221923567573,153.221923567573)" rx="2" ry="2" />
<text  x="126.64" y="97.5" ></text>
</g>
<g >
<title>firedrake.slate.slac.optimise.optimise (40,940 us, 0.08%)</title><rect x="417.0" y="167" width="1.0" height="15.0" fill="rgb(150.162839218407,137.917275497169,150.162839218407)" rx="2" ry="2" />
<text  x="420.03" y="177.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (46,054 us, 0.10%)</title><rect x="46.7" y="71" width="1.2" height="15.0" fill="rgb(151.148967651916,151.148967651916,124.798843236209)" rx="2" ry="2" />
<text  x="49.74" y="81.5" ></text>
</g>
<g >
<title>firedrake.matrix_free.operators.ImplicitMatrixContext.__init__ (6,986 us, 0.01%)</title><rect x="123.8" y="103" width="0.2" height="15.0" fill="rgb(129.794614151335,150.687492557753,150.687492557753)" rx="2" ry="2" />
<text  x="126.81" y="113.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (824,503 us, 1.71%)</title><rect x="1029.1" y="167" width="20.1" height="15.0" fill="rgb(147.963712100037,147.963712100037,109.362604792489)" rx="2" ry="2" />
<text  x="1032.08" y="177.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (46,054 us, 0.10%)</title><rect x="46.7" y="87" width="1.2" height="15.0" fill="rgb(121.356503086198,121.356503086198,150.907710274748)" rx="2" ry="2" />
<text  x="49.74" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (9,037 us, 0.02%)</title><rect x="46.5" y="135" width="0.2" height="15.0" fill="rgb(132.613732226874,151.418375021782,151.418375021782)" rx="2" ry="2" />
<text  x="49.52" y="145.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (2,638,034 us, 5.46%)</title><rect x="1049.5" y="151" width="64.4" height="15.0" fill="rgb(149.892663731117,149.892663731117,118.710601158491)" rx="2" ry="2" />
<text  x="1052.51" y="161.5" >pyop2...</text>
</g>
<g >
<title>PCApply (36,927,164 us, 76.40%)</title><rect x="124.0" y="119" width="901.5" height="15.0" fill="rgb(154.9847269208,154.9847269208,143.387522770028)" rx="2" ry="2" />
<text  x="126.98" y="129.5" >PCApply</text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (46,054 us, 0.10%)</title><rect x="46.7" y="119" width="1.2" height="15.0" fill="rgb(153.903552124309,153.903552124309,138.147983371653)" rx="2" ry="2" />
<text  x="49.74" y="129.5" ></text>
</g>
<g >
<title>firedrake.interpolation.make_interpolator (28,848 us, 0.06%)</title><rect x="1028.2" y="135" width="0.7" height="15.0" fill="rgb(114.566274994077,146.739404628094,146.739404628094)" rx="2" ry="2" />
<text  x="1031.22" y="145.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_form0_cell_integral_otherwise (2,644,295 us, 5.47%)</title><rect x="1049.4" y="135" width="64.5" height="15.0" fill="rgb(116.335984931536,116.335984931536,149.935997083523)" rx="2" ry="2" />
<text  x="1052.36" y="145.5" >Parloo..</text>
</g>
<g >
<title>CreateMesh (7,005 us, 0.01%)</title><rect x="121.8" y="103" width="0.1" height="15.0" fill="rgb(133.151081926191,94.3246474358647,133.151081926191)" rx="2" ry="2" />
<text  x="124.77" y="113.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (15,272 us, 0.03%)</title><rect x="1027.8" y="183" width="0.4" height="15.0" fill="rgb(150.713237038575,159.186217226278,150.713237038575)" rx="2" ry="2" />
<text  x="1030.85" y="193.5" ></text>
</g>
<g >
<title>SCForwardElim (36,927,164 us, 76.40%)</title><rect x="124.0" y="135" width="901.5" height="15.0" fill="rgb(108.702084431652,108.702084431652,148.458467954513)" rx="2" ry="2" />
<text  x="126.98" y="145.5" >SCForwardElim</text>
</g>
<g >
<title>firedrake.mesh.MeshTopology._facets (19,598 us, 0.04%)</title><rect x="47.4" y="135" width="0.5" height="15.0" fill="rgb(154.252567199624,129.269681863785,129.269681863785)" rx="2" ry="2" />
<text  x="50.39" y="145.5" ></text>
</g>
<g >
<title>ParLoopExecute (4,752,934 us, 9.83%)</title><rect x="1049.4" y="119" width="116.0" height="15.0" fill="rgb(139.952157906473,111.752404635336,139.952157906473)" rx="2" ry="2" />
<text  x="1052.36" y="129.5" >ParLoopExecute</text>
</g>
<g >
<title>SNESFunctionEval (5,766,634 us, 11.93%)</title><rect x="1049.2" y="103" width="140.8" height="15.0" fill="rgb(119.188507237202,119.188507237202,150.488098174942)" rx="2" ry="2" />
<text  x="1052.21" y="113.5" >SNESFunctionEval</text>
</g>
<g >
<title>ParLoopExecute (1,418,515 us, 2.93%)</title><rect x="124.3" y="183" width="34.6" height="15.0" fill="rgb(141.973249428176,116.9314516597,141.973249428176)" rx="2" ry="2" />
<text  x="127.30" y="193.5" >Pa..</text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (9,037 us, 0.02%)</title><rect x="46.5" y="151" width="0.2" height="15.0" fill="rgb(145.266816266206,160.072843863641,145.266816266206)" rx="2" ry="2" />
<text  x="49.52" y="161.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (9,037 us, 0.02%)</title><rect x="46.5" y="103" width="0.2" height="15.0" fill="rgb(154.016149145681,127.457143450219,127.457143450219)" rx="2" ry="2" />
<text  x="49.52" y="113.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_form1_cell_integral_otherwise (2,108,639 us, 4.36%)</title><rect x="1113.9" y="135" width="51.5" height="15.0" fill="rgb(153.28317672502,121.837688225153,121.837688225153)" rx="2" ry="2" />
<text  x="1116.92" y="145.5" >Parl..</text>
</g>
<g >
<title>DMPlexInterp (13,755 us, 0.03%)</title><rect x="122.4" y="119" width="0.4" height="15.0" fill="rgb(144.425800327079,144.425800327079,155.372735547177)" rx="2" ry="2" />
<text  x="125.45" y="129.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_pyop2_kernel_uniform_extrusion (1,439,280 us, 2.98%)</title><rect x="11.4" y="119" width="35.1" height="15.0" fill="rgb(151.373395396094,151.373395396094,125.886454611839)" rx="2" ry="2" />
<text  x="14.38" y="129.5" >Pa..</text>
</g>
<g >
<title>CreateExtMesh (1,504,980 us, 3.11%)</title><rect x="10.0" y="71" width="36.7" height="15.0" fill="rgb(134.767987553146,134.767987553146,153.503481461899)" rx="2" ry="2" />
<text  x="13.00" y="81.5" >Cr..</text>
</g>
<g >
<title>Mesh: reorder (7,715 us, 0.02%)</title><rect x="48.3" y="87" width="0.2" height="15.0" fill="rgb(122.985756779214,148.922233239055,148.922233239055)" rx="2" ry="2" />
<text  x="51.31" y="97.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (1,439,280 us, 2.98%)</title><rect x="11.4" y="135" width="35.1" height="15.0" fill="rgb(130.280245258849,162.512518213676,130.280245258849)" rx="2" ry="2" />
<text  x="14.38" y="145.5" >py..</text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (28,865 us, 0.06%)</title><rect x="1027.5" y="151" width="0.7" height="15.0" fill="rgb(156.092681309795,143.377223375094,143.377223375094)" rx="2" ry="2" />
<text  x="1030.52" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspace.MixedFunctionSpace (5,196 us, 0.01%)</title><rect x="1027.2" y="151" width="0.2" height="15.0" fill="rgb(130.046333415454,130.046333415454,152.58961291912)" rx="2" ry="2" />
<text  x="1030.24" y="161.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (21,179 us, 0.04%)</title><rect x="1027.7" y="167" width="0.5" height="15.0" fill="rgb(149.420360469813,149.420360469813,116.421746892172)" rx="2" ry="2" />
<text  x="1030.70" y="177.5" ></text>
</g>
<g >
<title>firedrake.__init__ (2,957,317 us, 6.12%)</title><rect x="49.2" y="71" width="72.3" height="15.0" fill="rgb(144.830984435511,154.585810779577,154.585810779577)" rx="2" ry="2" />
<text  x="52.25" y="81.5" >firedra..</text>
</g>
</g>
</svg>
