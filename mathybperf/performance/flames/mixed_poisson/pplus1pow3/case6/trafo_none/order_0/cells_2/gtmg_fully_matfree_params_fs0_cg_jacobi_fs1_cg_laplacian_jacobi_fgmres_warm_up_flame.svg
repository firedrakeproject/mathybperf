<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="267" onload="init(evt)" viewBox="0 0 1200 267" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:13px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:18px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 13 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (1 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="267.0" fill="url(#background)"  />
<text id="title" x="600.00" y="26" >Firedrake example</text>
<text id="details" x="10.00" y="249" > </text>
<text id="unzoom" x="10.00" y="26" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="26" >Search</text>
<text id="ignorecase" x="1174.00" y="26" >ic</text>
<text id="matched" x="1090.00" y="249" > </text>
<g id="frames">
<g >
<title>HybridBreak (1,061,381 us, 2.05%)</title><rect x="135.6" y="151" width="24.2" height="15.0" fill="rgb(148.764457078035,159.503460475669,148.764457078035)" rx="2" ry="2" />
<text  x="138.60" y="161.5" >H..</text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (985,314 us, 1.91%)</title><rect x="1167.5" y="119" width="22.5" height="15.0" fill="rgb(108.832302773327,108.832302773327,148.483671504515)" rx="2" ry="2" />
<text  x="1170.52" y="129.5" ></text>
</g>
<g >
<title>CreateMesh (7,414 us, 0.01%)</title><rect x="133.8" y="119" width="0.2" height="15.0" fill="rgb(128.283266206852,162.837607826792,128.283266206852)" rx="2" ry="2" />
<text  x="136.80" y="129.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (8,351 us, 0.02%)</title><rect x="1023.7" y="135" width="0.2" height="15.0" fill="rgb(144.242960475004,160.239518062209,144.242960475004)" rx="2" ry="2" />
<text  x="1026.74" y="145.5" ></text>
</g>
<g >
<title>ParLoopExecute (880,978 us, 1.70%)</title><rect x="1024.4" y="151" width="20.1" height="15.0" fill="rgb(152.77656764142,152.77656764142,132.686443185345)" rx="2" ry="2" />
<text  x="1027.39" y="161.5" ></text>
</g>
<g >
<title>SNESFunctionEval (6,378,064 us, 12.33%)</title><rect x="1044.5" y="103" width="145.5" height="15.0" fill="rgb(133.999668120247,161.907030771123,133.999668120247)" rx="2" ry="2" />
<text  x="1047.49" y="113.5" >SNESFunctionEval</text>
</g>
<g >
<title>CreateMesh (24,001 us, 0.05%)</title><rect x="44.9" y="71" width="0.6" height="15.0" fill="rgb(142.490166800539,153.978932133473,153.978932133473)" rx="2" ry="2" />
<text  x="47.93" y="81.5" ></text>
</g>
<g >
<title>HybridRHS (37,813,640 us, 73.11%)</title><rect x="159.8" y="151" width="862.7" height="15.0" fill="rgb(134.898316780989,134.898316780989,153.52870647374)" rx="2" ry="2" />
<text  x="162.81" y="161.5" >HybridRHS</text>
</g>
<g >
<title>firedrake.mesh.MeshTopology._facets (20,384 us, 0.04%)</title><rect x="44.5" y="135" width="0.4" height="15.0" fill="rgb(150.317099711161,150.317099711161,120.767483215624)" rx="2" ry="2" />
<text  x="47.46" y="145.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (12,883 us, 0.02%)</title><rect x="1023.4" y="135" width="0.3" height="15.0" fill="rgb(131.0570935528,131.0570935528,152.785243913445)" rx="2" ry="2" />
<text  x="1026.44" y="145.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (1,053,511 us, 2.04%)</title><rect x="135.8" y="199" width="24.0" height="15.0" fill="rgb(152.523104781474,152.523104781474,131.45812317176)" rx="2" ry="2" />
<text  x="138.78" y="209.5" >P..</text>
</g>
<g >
<title>PCSetUp (962,739 us, 1.86%)</title><rect x="1022.5" y="103" width="22.0" height="15.0" fill="rgb(109.033088922649,145.304874905872,145.304874905872)" rx="2" ry="2" />
<text  x="1025.52" y="113.5" ></text>
</g>
<g >
<title>ParLoopExecute (5,392,750 us, 10.43%)</title><rect x="1044.5" y="119" width="123.0" height="15.0" fill="rgb(155.066927757032,135.513112803909,135.513112803909)" rx="2" ry="2" />
<text  x="1047.49" y="129.5" >ParLoopExecute</text>
</g>
<g >
<title>CreateExtMesh (1,485,292 us, 2.87%)</title><rect x="10.0" y="71" width="33.9" height="15.0" fill="rgb(123.136751707548,148.961380072327,148.961380072327)" rx="2" ry="2" />
<text  x="13.00" y="81.5" >Cr..</text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (8,817 us, 0.02%)</title><rect x="43.7" y="135" width="0.2" height="15.0" fill="rgb(133.377679863703,162.008284673351,133.377679863703)" rx="2" ry="2" />
<text  x="46.69" y="145.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_pyop2_kernel_uniform_extrusion (1,393,227 us, 2.69%)</title><rect x="11.9" y="119" width="31.8" height="15.0" fill="rgb(138.009166488907,161.254321734364,138.009166488907)" rx="2" ry="2" />
<text  x="14.90" y="129.5" >Pa..</text>
</g>
<g >
<title>Parloop_Cells_wrap_form1_cell_integral_otherwise (2,482,878 us, 4.80%)</title><rect x="1110.9" y="135" width="56.6" height="15.0" fill="rgb(154.414200345003,154.414200345003,140.6226632104)" rx="2" ry="2" />
<text  x="1113.87" y="145.5" >Parlo..</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (880,978 us, 1.70%)</title><rect x="1024.4" y="183" width="20.1" height="15.0" fill="rgb(113.913461234809,146.570156616432,146.570156616432)" rx="2" ry="2" />
<text  x="1027.39" y="193.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (45,676 us, 0.09%)</title><rect x="43.9" y="71" width="1.0" height="15.0" fill="rgb(156.260940818084,144.667212938644,144.667212938644)" rx="2" ry="2" />
<text  x="46.89" y="81.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalProblem.__init__ (10,089 us, 0.02%)</title><rect x="134.8" y="87" width="0.2" height="15.0" fill="rgb(133.162458850262,94.3538008037957,133.162458850262)" rx="2" ry="2" />
<text  x="137.76" y="97.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.LinearVariationalProblem.__init__ (10,089 us, 0.02%)</title><rect x="134.8" y="71" width="0.2" height="15.0" fill="rgb(151.842165866406,151.842165866406,128.158188429504)" rx="2" ry="2" />
<text  x="137.76" y="81.5" ></text>
</g>
<g >
<title>HybridInit (962,739 us, 1.86%)</title><rect x="1022.5" y="119" width="22.0" height="15.0" fill="rgb(147.153648729309,147.153648729309,155.900706205673)" rx="2" ry="2" />
<text  x="1025.52" y="129.5" ></text>
</g>
<g >
<title>firedrake.matrix_free.operators.ImplicitMatrixContext.__init__ (7,470 us, 0.01%)</title><rect x="135.4" y="103" width="0.2" height="15.0" fill="rgb(155.436193212281,155.436193212281,145.5753978749)" rx="2" ry="2" />
<text  x="138.43" y="113.5" ></text>
</g>
<g >
<title>firedrake.assemble.allocate_matrix (7,470 us, 0.01%)</title><rect x="135.4" y="87" width="0.2" height="15.0" fill="rgb(105.159879326826,144.300709455103,144.300709455103)" rx="2" ry="2" />
<text  x="138.43" y="97.5" ></text>
</g>
<g >
<title>Mesh: reorder (6,735 us, 0.01%)</title><rect x="45.3" y="87" width="0.2" height="15.0" fill="rgb(106.813414310639,144.729403710166,144.729403710166)" rx="2" ry="2" />
<text  x="48.32" y="97.5" ></text>
</g>
<g >
<title>firedrake.utility_meshes.RectangleMesh (55,974 us, 0.11%)</title><rect x="133.5" y="87" width="1.3" height="15.0" fill="rgb(129.123997202465,150.513628904343,150.513628904343)" rx="2" ry="2" />
<text  x="136.48" y="97.5" ></text>
</g>
<g >
<title>ParLoopExecute (1,053,511 us, 2.04%)</title><rect x="135.8" y="183" width="24.0" height="15.0" fill="rgb(150.818149152064,150.818149152064,123.195645890772)" rx="2" ry="2" />
<text  x="138.78" y="193.5" >P..</text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.__init__ (26,761 us, 0.05%)</title><rect x="135.0" y="71" width="0.6" height="15.0" fill="rgb(128.621488318854,128.621488318854,152.31383644881)" rx="2" ry="2" />
<text  x="137.99" y="81.5" ></text>
</g>
<g >
<title>firedrake (51,721,042 us, 100.00%)</title><rect x="10.0" y="55" width="1180.0" height="15.0" fill="rgb(107.696786498485,144.958426129237,144.958426129237)" rx="2" ry="2" />
<text  x="13.00" y="65.5" >firedrake</text>
</g>
<g >
<title>CreateFunctionSpace (8,351 us, 0.02%)</title><rect x="1023.7" y="183" width="0.2" height="15.0" fill="rgb(156.665347236942,147.767662149892,147.767662149892)" rx="2" ry="2" />
<text  x="1026.74" y="193.5" ></text>
</g>
<g >
<title>all (51,721,042 us, 100%)</title><rect x="10.0" y="39" width="1180.0" height="15.0" fill="rgb(135.089147525752,99.2909405347407,135.089147525752)" rx="2" ry="2" />
<text  x="13.00" y="49.5" ></text>
</g>
<g >
<title>firedrake.mesh._from_cell_list (34,732 us, 0.07%)</title><rect x="134.0" y="103" width="0.8" height="15.0" fill="rgb(142.391065319997,160.540989366512,142.391065319997)" rx="2" ry="2" />
<text  x="136.97" y="113.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (45,676 us, 0.09%)</title><rect x="43.9" y="103" width="1.0" height="15.0" fill="rgb(123.424399182928,123.424399182928,151.307948228954)" rx="2" ry="2" />
<text  x="46.89" y="113.5" ></text>
</g>
<g >
<title>PCApply (38,875,021 us, 75.16%)</title><rect x="135.6" y="119" width="886.9" height="15.0" fill="rgb(108.759209094532,108.759209094532,148.469524340877)" rx="2" ry="2" />
<text  x="138.60" y="129.5" >PCApply</text>
</g>
<g >
<title>SNESSolve (46,215,824 us, 89.36%)</title><rect x="135.6" y="87" width="1054.4" height="15.0" fill="rgb(146.509401152142,159.87056260314,146.509401152142)" rx="2" ry="2" />
<text  x="138.60" y="97.5" >SNESSolve</text>
</g>
<g >
<title>DMPlexBuFrCeLi (5,977 us, 0.01%)</title><rect x="134.3" y="119" width="0.1" height="15.0" fill="rgb(140.038515873859,111.973696926763,140.038515873859)" rx="2" ry="2" />
<text  x="137.30" y="129.5" ></text>
</g>
<g >
<title>firedrake.functionspace.VectorFunctionSpace (8,817 us, 0.02%)</title><rect x="43.7" y="87" width="0.2" height="15.0" fill="rgb(138.139583771249,152.851003199953,152.851003199953)" rx="2" ry="2" />
<text  x="46.69" y="97.5" ></text>
</g>
<g >
<title>firedrake.parloops.par_loop (1,061,381 us, 2.05%)</title><rect x="135.6" y="167" width="24.2" height="15.0" fill="rgb(130.057764987765,130.057764987765,152.591825481503)" rx="2" ry="2" />
<text  x="138.60" y="177.5" >f..</text>
</g>
<g >
<title>CreateMesh (7,414 us, 0.01%)</title><rect x="133.8" y="103" width="0.2" height="15.0" fill="rgb(143.328633335183,143.328633335183,155.160380645519)" rx="2" ry="2" />
<text  x="136.80" y="113.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (2,903,745 us, 5.61%)</title><rect x="1044.6" y="151" width="66.3" height="15.0" fill="rgb(106.386220778406,144.618649831439,144.618649831439)" rx="2" ry="2" />
<text  x="1047.63" y="161.5" >pyop2...</text>
</g>
<g >
<title>ParLoopExecute (1,393,227 us, 2.69%)</title><rect x="11.9" y="103" width="31.8" height="15.0" fill="rgb(139.300091328805,110.081484030062,139.300091328805)" rx="2" ry="2" />
<text  x="14.90" y="113.5" >Pa..</text>
</g>
<g >
<title>Mesh: numbering (7,888 us, 0.02%)</title><rect x="45.1" y="87" width="0.2" height="15.0" fill="rgb(123.679571419222,163.58704651315,123.679571419222)" rx="2" ry="2" />
<text  x="48.14" y="97.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (8,351 us, 0.02%)</title><rect x="1023.7" y="167" width="0.2" height="15.0" fill="rgb(141.349257827435,153.683140918224,153.683140918224)" rx="2" ry="2" />
<text  x="1026.74" y="177.5" ></text>
</g>
<g >
<title>KSPSolve (38,875,021 us, 75.16%)</title><rect x="135.6" y="103" width="886.9" height="15.0" fill="rgb(119.903427894556,119.903427894556,150.626469915075)" rx="2" ry="2" />
<text  x="138.60" y="113.5" >KSPSolve</text>
</g>
<g >
<title>PetscBarrier (39,013 us, 0.08%)</title><rect x="45.5" y="71" width="0.9" height="15.0" fill="rgb(155.793449981876,141.083116527718,141.083116527718)" rx="2" ry="2" />
<text  x="48.48" y="81.5" ></text>
</g>
<g >
<title>firedrake.__init__ (3,818,412 us, 7.38%)</title><rect x="46.4" y="71" width="87.1" height="15.0" fill="rgb(155.691952281884,140.304967494444,140.304967494444)" rx="2" ry="2" />
<text  x="49.37" y="81.5" >firedrake..</text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (25,060,701 us, 48.45%)</title><rect x="450.8" y="167" width="571.7" height="15.0" fill="rgb(152.797890203532,118.117158227082,118.117158227082)" rx="2" ry="2" />
<text  x="453.77" y="177.5" >firedrake.tsfc_interface.compile_form</text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (8,817 us, 0.02%)</title><rect x="43.7" y="151" width="0.2" height="15.0" fill="rgb(117.460864098752,147.489853655232,147.489853655232)" rx="2" ry="2" />
<text  x="46.69" y="161.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (6,198 us, 0.01%)</title><rect x="1189.9" y="135" width="0.1" height="15.0" fill="rgb(150.502719104162,159.220487587695,150.502719104162)" rx="2" ry="2" />
<text  x="1192.86" y="145.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (8,817 us, 0.02%)</title><rect x="43.7" y="119" width="0.2" height="15.0" fill="rgb(119.594738357437,148.043080314891,148.043080314891)" rx="2" ry="2" />
<text  x="46.69" y="129.5" ></text>
</g>
<g >
<title>DMPlexStratify (5,977 us, 0.01%)</title><rect x="134.3" y="135" width="0.1" height="15.0" fill="rgb(153.745361461672,125.381104539483,125.381104539483)" rx="2" ry="2" />
<text  x="137.30" y="145.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.solve (46,215,824 us, 89.36%)</title><rect x="135.6" y="71" width="1054.4" height="15.0" fill="rgb(111.901161256227,111.901161256227,149.077644114108)" rx="2" ry="2" />
<text  x="138.60" y="81.5" >firedrake.variational_solver.NonlinearVariationalSolver.solve</text>
</g>
<g >
<title>firedrake.extrusion_utils.make_extruded_coords (1,476,475 us, 2.85%)</title><rect x="10.0" y="87" width="33.7" height="15.0" fill="rgb(144.675165906175,154.545413383082,154.545413383082)" rx="2" ry="2" />
<text  x="13.00" y="97.5" >fi..</text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (6,022 us, 0.01%)</title><rect x="1023.6" y="183" width="0.1" height="15.0" fill="rgb(135.067411820987,135.067411820987,153.561434545997)" rx="2" ry="2" />
<text  x="1026.60" y="193.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (1,393,227 us, 2.69%)</title><rect x="11.9" y="135" width="31.8" height="15.0" fill="rgb(154.649292901945,154.649292901945,141.761957909427)" rx="2" ry="2" />
<text  x="14.90" y="145.5" >py..</text>
</g>
<g >
<title>firedrake.utility_meshes.SquareMesh (55,974 us, 0.11%)</title><rect x="133.5" y="71" width="1.3" height="15.0" fill="rgb(110.378125109734,145.653587991413,145.653587991413)" rx="2" ry="2" />
<text  x="136.48" y="81.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_form0_cell_integral_otherwise (2,909,872 us, 5.63%)</title><rect x="1044.5" y="135" width="66.4" height="15.0" fill="rgb(119.916465475015,119.916465475015,150.628993317745)" rx="2" ry="2" />
<text  x="1047.49" y="145.5" >Parloo..</text>
</g>
<g >
<title>firedrake.functionspace.MixedFunctionSpace (6,861 us, 0.01%)</title><rect x="1023.4" y="151" width="0.2" height="15.0" fill="rgb(135.102627109765,152.063644065495,152.063644065495)" rx="2" ry="2" />
<text  x="1026.44" y="161.5" ></text>
</g>
<g >
<title>FunctionSpaceData: CreateElement (6,022 us, 0.01%)</title><rect x="1023.6" y="199" width="0.1" height="15.0" fill="rgb(115.611111896831,147.010288269549,147.010288269549)" rx="2" ry="2" />
<text  x="1026.60" y="209.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (8,817 us, 0.02%)</title><rect x="43.7" y="103" width="0.2" height="15.0" fill="rgb(132.981441092583,151.513706949929,151.513706949929)" rx="2" ry="2" />
<text  x="46.69" y="113.5" ></text>
</g>
<g >
<title>firedrake.interpolation.make_interpolator (12,541 us, 0.02%)</title><rect x="1023.9" y="135" width="0.3" height="15.0" fill="rgb(140.853269599251,114.061503348081,140.853269599251)" rx="2" ry="2" />
<text  x="1026.93" y="145.5" ></text>
</g>
<g >
<title>FunctionSpaceData: CreateElement (8,458 us, 0.02%)</title><rect x="44.3" y="135" width="0.2" height="15.0" fill="rgb(141.311077585945,160.716801323218,141.311077585945)" rx="2" ry="2" />
<text  x="47.27" y="145.5" ></text>
</g>
<g >
<title>firedrake.slate.slac.optimise.optimise (33,317 us, 0.06%)</title><rect x="450.0" y="167" width="0.8" height="15.0" fill="rgb(149.565563553139,149.565563553139,117.125423372902)" rx="2" ry="2" />
<text  x="453.01" y="177.5" ></text>
</g>
<g >
<title>DMPlexInterp (14,254 us, 0.03%)</title><rect x="134.4" y="119" width="0.4" height="15.0" fill="rgb(155.126471973097,155.126471973097,144.074441100392)" rx="2" ry="2" />
<text  x="137.43" y="129.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (6,022 us, 0.01%)</title><rect x="1023.6" y="167" width="0.1" height="15.0" fill="rgb(125.117239497251,125.117239497251,151.635594741403)" rx="2" ry="2" />
<text  x="1026.60" y="177.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (6,022 us, 0.01%)</title><rect x="1023.6" y="151" width="0.1" height="15.0" fill="rgb(147.148686077041,130.193508072418,147.148686077041)" rx="2" ry="2" />
<text  x="1026.60" y="161.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (2,482,878 us, 4.80%)</title><rect x="1110.9" y="151" width="56.6" height="15.0" fill="rgb(155.497822097252,155.497822097252,145.874060932838)" rx="2" ry="2" />
<text  x="1113.87" y="161.5" >pyop2..</text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (880,978 us, 1.70%)</title><rect x="1024.4" y="167" width="20.1" height="15.0" fill="rgb(152.773201573411,152.773201573411,132.670130701914)" rx="2" ry="2" />
<text  x="1027.39" y="177.5" ></text>
</g>
<g >
<title>SCForwardElim (38,875,021 us, 75.16%)</title><rect x="135.6" y="135" width="886.9" height="15.0" fill="rgb(155.200699827522,136.538698677668,136.538698677668)" rx="2" ry="2" />
<text  x="138.60" y="145.5" >SCForwardElim</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (1,053,511 us, 2.04%)</title><rect x="135.8" y="215" width="24.0" height="15.0" fill="rgb(150.612249702841,159.202657025119,150.612249702841)" rx="2" ry="2" />
<text  x="138.78" y="225.5" >p..</text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (8,351 us, 0.02%)</title><rect x="1023.7" y="151" width="0.2" height="15.0" fill="rgb(154.065141493075,154.065141493075,138.931070312593)" rx="2" ry="2" />
<text  x="1026.74" y="161.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (10,089 us, 0.02%)</title><rect x="134.8" y="103" width="0.2" height="15.0" fill="rgb(122.738351479904,122.738351479904,151.175164802562)" rx="2" ry="2" />
<text  x="137.76" y="113.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (45,676 us, 0.09%)</title><rect x="43.9" y="87" width="1.0" height="15.0" fill="rgb(152.491391861225,115.767337602723,115.767337602723)" rx="2" ry="2" />
<text  x="46.89" y="97.5" ></text>
</g>
<g >
<title>firedrake.parloops.par_loop (888,549 us, 1.72%)</title><rect x="1024.2" y="135" width="20.3" height="15.0" fill="rgb(154.702375509212,154.702375509212,142.019204390796)" rx="2" ry="2" />
<text  x="1027.21" y="145.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (45,676 us, 0.09%)</title><rect x="43.9" y="119" width="1.0" height="15.0" fill="rgb(149.925686975722,149.925686975722,118.870636882347)" rx="2" ry="2" />
<text  x="46.89" y="129.5" ></text>
</g>
</g>
</svg>
