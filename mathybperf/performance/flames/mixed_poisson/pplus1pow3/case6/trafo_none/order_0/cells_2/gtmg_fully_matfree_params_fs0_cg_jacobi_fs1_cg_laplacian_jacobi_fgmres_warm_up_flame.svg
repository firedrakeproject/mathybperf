<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="283" onload="init(evt)" viewBox="0 0 1200 283" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:13px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:18px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 13 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (1 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="283.0" fill="url(#background)"  />
<text id="title" x="600.00" y="26" >Firedrake example</text>
<text id="details" x="10.00" y="265" > </text>
<text id="unzoom" x="10.00" y="26" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="26" >Search</text>
<text id="ignorecase" x="1174.00" y="26" >ic</text>
<text id="matched" x="1090.00" y="265" > </text>
<g id="frames">
<g >
<title>firedrake.functionspace.MixedFunctionSpace (2,141 us, 0.04%)</title><rect x="1048.8" y="71" width="0.4" height="15.0" fill="rgb(152.26297083336,152.26297083336,130.19747403859)" rx="2" ry="2" />
<text  x="1051.78" y="81.5" ></text>
</g>
<g >
<title>firedrake.__init__ (3,035,319 us, 53.14%)</title><rect x="421.8" y="71" width="627.0" height="15.0" fill="rgb(131.007740168748,162.394088809739,131.007740168748)" rx="2" ry="2" />
<text  x="424.77" y="81.5" >firedrake.__init__</text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (1,030 us, 0.02%)</title><rect x="1189.8" y="215" width="0.2" height="15.0" fill="rgb(152.32027824075,152.32027824075,130.475194551328)" rx="2" ry="2" />
<text  x="1192.79" y="225.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (11,068 us, 0.19%)</title><rect x="381.9" y="103" width="2.3" height="15.0" fill="rgb(140.799674629327,113.92416623765,140.799674629327)" rx="2" ry="2" />
<text  x="384.93" y="113.5" ></text>
</g>
<g >
<title>firedrake.utility_meshes.RectangleMesh (61,862 us, 1.08%)</title><rect x="1049.2" y="87" width="12.8" height="15.0" fill="rgb(156.517250600157,146.632254601206,146.632254601206)" rx="2" ry="2" />
<text  x="1052.22" y="97.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.LinearVariationalProblem.__init__ (25,083 us, 0.44%)</title><rect x="1062.0" y="71" width="5.2" height="15.0" fill="rgb(137.552991880879,137.552991880879,154.04251455759)" rx="2" ry="2" />
<text  x="1065.00" y="81.5" ></text>
</g>
<g >
<title>firedrake.mesh.ExtrudedMeshTopology.__init__ (1,184 us, 0.02%)</title><rect x="384.2" y="87" width="0.3" height="15.0" fill="rgb(149.481928591929,149.481928591929,116.720115483965)" rx="2" ry="2" />
<text  x="387.22" y="97.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (95,386 us, 1.67%)</title><rect x="384.8" y="71" width="19.7" height="15.0" fill="rgb(129.115145053629,162.702185688944,129.115145053629)" rx="2" ry="2" />
<text  x="387.78" y="81.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.__init__ (41,972 us, 0.73%)</title><rect x="1067.2" y="71" width="8.7" height="15.0" fill="rgb(150.230459015231,150.230459015231,120.347609073812)" rx="2" ry="2" />
<text  x="1070.18" y="81.5" ></text>
</g>
<g >
<title>CreateMesh (9,913 us, 0.17%)</title><rect x="406.2" y="87" width="2.0" height="15.0" fill="rgb(127.943435881399,150.207557450733,150.207557450733)" rx="2" ry="2" />
<text  x="409.20" y="97.5" ></text>
</g>
<g >
<title>DMPlexSymmetrize (2,554 us, 0.04%)</title><rect x="421.2" y="87" width="0.6" height="15.0" fill="rgb(153.737203178372,153.737203178372,137.341830787493)" rx="2" ry="2" />
<text  x="424.24" y="97.5" ></text>
</g>
<g >
<title>DMPlexStratify (6,188 us, 0.11%)</title><rect x="1057.4" y="135" width="1.3" height="15.0" fill="rgb(156.025595477405,142.862898660109,142.862898660109)" rx="2" ry="2" />
<text  x="1060.44" y="145.5" ></text>
</g>
<g >
<title>FunctionSpaceData: CreateElement (19,106 us, 0.33%)</title><rect x="394.7" y="135" width="3.9" height="15.0" fill="rgb(127.785856725597,162.918581463275,127.785856725597)" rx="2" ry="2" />
<text  x="397.66" y="145.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.derivative (1,004 us, 0.02%)</title><rect x="1067.0" y="103" width="0.2" height="15.0" fill="rgb(155.88053232675,155.88053232675,147.72873358348)" rx="2" ry="2" />
<text  x="1069.97" y="113.5" ></text>
</g>
<g >
<title>DMPlexBuCoFrCeLi (2,451 us, 0.04%)</title><rect x="1056.6" y="119" width="0.5" height="15.0" fill="rgb(114.906388752888,146.827582269267,146.827582269267)" rx="2" ry="2" />
<text  x="1059.55" y="129.5" ></text>
</g>
<g >
<title>DMPlexBuFrCeLi (8,029 us, 0.14%)</title><rect x="1057.1" y="119" width="1.6" height="15.0" fill="rgb(151.984768988984,151.984768988984,128.849265100463)" rx="2" ry="2" />
<text  x="1060.06" y="129.5" ></text>
</g>
<g >
<title>SNESFunctionEval (552,590 us, 9.67%)</title><rect x="1075.9" y="103" width="114.1" height="15.0" fill="rgb(131.238348356357,162.356547941988,131.238348356357)" rx="2" ry="2" />
<text  x="1078.85" y="113.5" >SNESFunction..</text>
</g>
<g >
<title>Parloop_Cells_wrap_pyop2_kernel_uniform_extrusion (1,719,571 us, 30.10%)</title><rect x="26.7" y="119" width="355.2" height="15.0" fill="rgb(129.107775078358,150.509423168463,150.509423168463)" rx="2" ry="2" />
<text  x="29.72" y="129.5" >Parloop_Cells_wrap_pyop2_kernel_uniform_extr..</text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (86,759 us, 1.52%)</title><rect x="386.6" y="119" width="17.9" height="15.0" fill="rgb(127.13950183239,163.023802027285,127.13950183239)" rx="2" ry="2" />
<text  x="389.56" y="129.5" ></text>
</g>
<g >
<title>firedrake.mesh._from_cell_list (39,137 us, 0.69%)</title><rect x="1053.9" y="103" width="8.1" height="15.0" fill="rgb(128.013007128567,162.881603490698,128.013007128567)" rx="2" ry="2" />
<text  x="1056.92" y="113.5" ></text>
</g>
<g >
<title>firedrake.matrix_free.operators.ImplicitMatrixContext.__init__ (10,353 us, 0.18%)</title><rect x="1073.7" y="103" width="2.2" height="15.0" fill="rgb(149.645303012044,149.645303012044,117.511853058368)" rx="2" ry="2" />
<text  x="1076.71" y="113.5" ></text>
</g>
<g >
<title>firedrake.extrusion_utils.make_extruded_coords (1,799,554 us, 31.50%)</title><rect x="10.2" y="87" width="371.7" height="15.0" fill="rgb(132.14483876346,132.14483876346,152.995775244541)" rx="2" ry="2" />
<text  x="13.20" y="97.5" >firedrake.extrusion_utils.make_extruded_coords</text>
</g>
<g >
<title>firedrake.functionspace.make_scalar_element (1,467 us, 0.03%)</title><rect x="385.1" y="87" width="0.3" height="15.0" fill="rgb(155.368944932756,137.828577817793,137.828577817793)" rx="2" ry="2" />
<text  x="388.11" y="97.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.solve (552,590 us, 9.67%)</title><rect x="1075.9" y="71" width="114.1" height="15.0" fill="rgb(140.081926346534,112.084936262994,140.081926346534)" rx="2" ry="2" />
<text  x="1078.85" y="81.5" >firedrake.va..</text>
</g>
<g >
<title>CreateFunctionSpace (2,178 us, 0.04%)</title><rect x="1189.6" y="183" width="0.4" height="15.0" fill="rgb(154.517126144554,131.29796710825,131.29796710825)" rx="2" ry="2" />
<text  x="1192.55" y="193.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (2,178 us, 0.04%)</title><rect x="1189.6" y="167" width="0.4" height="15.0" fill="rgb(152.946036514763,152.946036514763,133.507715417695)" rx="2" ry="2" />
<text  x="1192.55" y="177.5" ></text>
</g>
<g >
<title>firedrake.functionspace.VectorFunctionSpace (11,068 us, 0.19%)</title><rect x="381.9" y="87" width="2.3" height="15.0" fill="rgb(136.850054007917,136.850054007917,153.906462066049)" rx="2" ry="2" />
<text  x="384.93" y="97.5" ></text>
</g>
<g >
<title>firedrake.function.Function.split (1,004 us, 0.02%)</title><rect x="1067.0" y="119" width="0.2" height="15.0" fill="rgb(155.630125620575,139.830963091075,139.830963091075)" rx="2" ry="2" />
<text  x="1069.97" y="129.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (11,068 us, 0.19%)</title><rect x="381.9" y="135" width="2.3" height="15.0" fill="rgb(154.310678228985,154.310678228985,140.120979109699)" rx="2" ry="2" />
<text  x="384.93" y="145.5" ></text>
</g>
<g >
<title>ParLoopExecute (1,720,487 us, 30.12%)</title><rect x="26.5" y="103" width="355.4" height="15.0" fill="rgb(105.403479823012,144.3638651393,144.3638651393)" rx="2" ry="2" />
<text  x="29.53" y="113.5" >ParLoopExecute</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (1,718,694 us, 30.09%)</title><rect x="26.9" y="135" width="355.0" height="15.0" fill="rgb(118.110391508035,118.110391508035,150.279430614458)" rx="2" ry="2" />
<text  x="29.90" y="145.5" >pyop2.global_kernel.GlobalKernel.compile</text>
</g>
<g >
<title>firedrake.ufl_expr.action (7,137 us, 0.12%)</title><rect x="1073.7" y="119" width="1.5" height="15.0" fill="rgb(139.786992165667,160.964908252101,139.786992165667)" rx="2" ry="2" />
<text  x="1076.71" y="129.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.action (7,133 us, 0.12%)</title><rect x="1062.0" y="87" width="1.5" height="15.0" fill="rgb(108.492859135998,108.492859135998,148.417972736)" rx="2" ry="2" />
<text  x="1065.00" y="97.5" ></text>
</g>
<g >
<title>CreateExtMesh (1,814,283 us, 31.76%)</title><rect x="10.0" y="71" width="374.8" height="15.0" fill="rgb(113.388090425245,113.388090425245,149.365436856499)" rx="2" ry="2" />
<text  x="13.00" y="81.5" >CreateExtMesh</text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalProblem.__init__ (17,950 us, 0.31%)</title><rect x="1063.5" y="87" width="3.7" height="15.0" fill="rgb(143.100473038562,160.425504389071,143.100473038562)" rx="2" ry="2" />
<text  x="1066.47" y="97.5" ></text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (552,590 us, 9.67%)</title><rect x="1075.9" y="119" width="114.1" height="15.0" fill="rgb(128.707275454976,162.768583065469,128.707275454976)" rx="2" ry="2" />
<text  x="1078.85" y="129.5" >firedrake.ts..</text>
</g>
<g >
<title>Mesh: numbering (12,688 us, 0.22%)</title><rect x="408.2" y="87" width="2.7" height="15.0" fill="rgb(152.130089175004,112.997350341694,112.997350341694)" rx="2" ry="2" />
<text  x="411.25" y="97.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (9,940 us, 0.17%)</title><rect x="1187.9" y="135" width="2.1" height="15.0" fill="rgb(150.686266170605,150.686266170605,122.556520672932)" rx="2" ry="2" />
<text  x="1190.95" y="145.5" ></text>
</g>
<g >
<title>DMPlexStratify (4,216 us, 0.07%)</title><rect x="420.4" y="87" width="0.8" height="15.0" fill="rgb(152.778299797709,144.619393231629,152.778299797709)" rx="2" ry="2" />
<text  x="423.37" y="97.5" ></text>
</g>
<g >
<title>CreateMesh (8,178 us, 0.14%)</title><rect x="1052.2" y="119" width="1.7" height="15.0" fill="rgb(150.611037706204,150.611037706204,122.191951960833)" rx="2" ry="2" />
<text  x="1055.23" y="129.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (11,068 us, 0.19%)</title><rect x="381.9" y="151" width="2.3" height="15.0" fill="rgb(121.836751180902,148.624342898752,148.624342898752)" rx="2" ry="2" />
<text  x="384.93" y="161.5" ></text>
</g>
<g >
<title>DMPlexInterp (15,894 us, 0.28%)</title><rect x="1058.7" y="119" width="3.3" height="15.0" fill="rgb(148.049951231616,159.6197753809,148.049951231616)" rx="2" ry="2" />
<text  x="1061.72" y="129.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (3,216 us, 0.06%)</title><rect x="1075.2" y="119" width="0.7" height="15.0" fill="rgb(144.793720827121,160.149859400236,144.793720827121)" rx="2" ry="2" />
<text  x="1078.19" y="129.5" ></text>
</g>
<g >
<title>Mesh: reorder (9,346 us, 0.16%)</title><rect x="410.9" y="87" width="1.9" height="15.0" fill="rgb(148.269147809779,133.064691262558,148.269147809779)" rx="2" ry="2" />
<text  x="413.87" y="97.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (16,946 us, 0.30%)</title><rect x="1063.5" y="103" width="3.5" height="15.0" fill="rgb(144.823917126499,144.823917126499,155.44979041158)" rx="2" ry="2" />
<text  x="1066.47" y="113.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (11,068 us, 0.19%)</title><rect x="381.9" y="119" width="2.3" height="15.0" fill="rgb(142.048484697591,142.048484697591,154.912609941469)" rx="2" ry="2" />
<text  x="384.93" y="129.5" ></text>
</g>
<g >
<title>firedrake.assemble.allocate_matrix (16,763 us, 0.29%)</title><rect x="1072.4" y="87" width="3.5" height="15.0" fill="rgb(127.942342852356,162.893106977523,127.942342852356)" rx="2" ry="2" />
<text  x="1075.39" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (1,030 us, 0.02%)</title><rect x="1189.8" y="199" width="0.2" height="15.0" fill="rgb(153.040499753796,119.977164779101,119.977164779101)" rx="2" ry="2" />
<text  x="1192.79" y="209.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (1,030 us, 0.02%)</title><rect x="1189.8" y="231" width="0.2" height="15.0" fill="rgb(149.958788169647,149.958788169647,119.031050360599)" rx="2" ry="2" />
<text  x="1192.79" y="241.5" ></text>
</g>
<g >
<title>firedrake (5,712,343 us, 100.00%)</title><rect x="10.0" y="55" width="1180.0" height="15.0" fill="rgb(155.065282171615,155.065282171615,143.777905908597)" rx="2" ry="2" />
<text  x="13.00" y="65.5" >firedrake</text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (910 us, 0.02%)</title><rect x="1049.0" y="103" width="0.2" height="15.0" fill="rgb(153.392889960623,153.392889960623,135.67323596302)" rx="2" ry="2" />
<text  x="1052.03" y="113.5" ></text>
</g>
<g >
<title>firedrake.utility_meshes.SquareMesh (61,862 us, 1.08%)</title><rect x="1049.2" y="71" width="12.8" height="15.0" fill="rgb(139.870006708694,160.951394256724,139.870006708694)" rx="2" ry="2" />
<text  x="1052.22" y="81.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (92,284 us, 1.62%)</title><rect x="385.4" y="87" width="19.1" height="15.0" fill="rgb(152.498659531016,152.498659531016,131.339657727233)" rx="2" ry="2" />
<text  x="388.42" y="97.5" ></text>
</g>
<g >
<title>CreateMesh (40,264 us, 0.70%)</title><rect x="404.5" y="71" width="8.3" height="15.0" fill="rgb(154.058089818361,127.778688607432,127.778688607432)" rx="2" ry="2" />
<text  x="407.48" y="81.5" ></text>
</g>
<g >
<title>firedrake.mesh._Facets.__init__ (1,832 us, 0.03%)</title><rect x="404.1" y="151" width="0.4" height="15.0" fill="rgb(122.73639842427,122.73639842427,151.174786791794)" rx="2" ry="2" />
<text  x="407.10" y="161.5" ></text>
</g>
<g >
<title>firedrake.mesh.MeshTopology._facets (28,450 us, 0.50%)</title><rect x="398.6" y="135" width="5.9" height="15.0" fill="rgb(154.026516769224,127.536628564047,127.536628564047)" rx="2" ry="2" />
<text  x="401.60" y="145.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (86,759 us, 1.52%)</title><rect x="386.6" y="103" width="17.9" height="15.0" fill="rgb(130.645061640091,130.645061640091,152.705495801308)" rx="2" ry="2" />
<text  x="389.56" y="113.5" ></text>
</g>
<g >
<title>firedrake.mesh.make_mesh_from_coordinates (1,514 us, 0.03%)</title><rect x="384.5" y="87" width="0.3" height="15.0" fill="rgb(109.446545275272,145.412067293589,145.412067293589)" rx="2" ry="2" />
<text  x="387.46" y="97.5" ></text>
</g>
<g >
<title>all (5,712,343 us, 100%)</title><rect x="10.0" y="39" width="1180.0" height="15.0" fill="rgb(134.94340397467,134.94340397467,153.537433027355)" rx="2" ry="2" />
<text  x="13.00" y="49.5" ></text>
</g>
<g >
<title>PetscBarrier (43,443 us, 0.76%)</title><rect x="412.8" y="71" width="9.0" height="15.0" fill="rgb(139.782175410272,160.965692375072,139.782175410272)" rx="2" ry="2" />
<text  x="415.80" y="81.5" ></text>
</g>
<g >
<title>CreateMesh (8,178 us, 0.14%)</title><rect x="1052.2" y="103" width="1.7" height="15.0" fill="rgb(144.863913529425,154.594347952073,154.594347952073)" rx="2" ry="2" />
<text  x="1055.23" y="113.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (910 us, 0.02%)</title><rect x="1049.0" y="119" width="0.2" height="15.0" fill="rgb(143.553161885867,160.351810855789,143.553161885867)" rx="2" ry="2" />
<text  x="1052.03" y="129.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (910 us, 0.02%)</title><rect x="1049.0" y="87" width="0.2" height="15.0" fill="rgb(137.471187796559,105.394918728682,137.471187796559)" rx="2" ry="2" />
<text  x="1052.03" y="97.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (5,587 us, 0.10%)</title><rect x="1188.8" y="151" width="1.2" height="15.0" fill="rgb(155.800607282132,141.137989163014,141.137989163014)" rx="2" ry="2" />
<text  x="1191.85" y="161.5" ></text>
</g>
<g >
<title>SNESSolve (552,590 us, 9.67%)</title><rect x="1075.9" y="87" width="114.1" height="15.0" fill="rgb(154.094137660228,128.055055395082,128.055055395082)" rx="2" ry="2" />
<text  x="1078.85" y="97.5" >SNESSolve</text>
</g>
<g >
<title>firedrake.mesh._Facets.__init__ (894 us, 0.02%)</title><rect x="384.0" y="167" width="0.2" height="15.0" fill="rgb(124.960457641705,163.37853015135,124.960457641705)" rx="2" ry="2" />
<text  x="387.03" y="177.5" ></text>
</g>
</g>
</svg>
