<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="283" onload="init(evt)" viewBox="0 0 1200 283" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:13px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:18px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 13 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (1 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="283.0" fill="url(#background)"  />
<text id="title" x="600.00" y="26" >Firedrake example</text>
<text id="details" x="10.00" y="265" > </text>
<text id="unzoom" x="10.00" y="26" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="26" >Search</text>
<text id="ignorecase" x="1174.00" y="26" >ic</text>
<text id="matched" x="1090.00" y="265" > </text>
<g id="frames">
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (9,601 us, 0.07%)</title><rect x="173.0" y="151" width="0.9" height="15.0" fill="rgb(106.822759754731,144.731826603078,144.731826603078)" rx="2" ry="2" />
<text  x="176.00" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (1,774 us, 0.01%)</title><rect x="534.4" y="199" width="0.2" height="15.0" fill="rgb(110.456971696943,110.456971696943,148.798123554247)" rx="2" ry="2" />
<text  x="537.41" y="209.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.LinearVariationalProblem.__init__ (14,654 us, 0.11%)</title><rect x="432.5" y="71" width="1.4" height="15.0" fill="rgb(156.556389283498,146.932317840149,146.932317840149)" rx="2" ry="2" />
<text  x="435.53" y="81.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (1,909 us, 0.01%)</title><rect x="536.0" y="199" width="0.2" height="15.0" fill="rgb(149.256631127404,149.256631127404,115.628289309729)" rx="2" ry="2" />
<text  x="539.03" y="209.5" ></text>
</g>
<g >
<title>FunctionSpaceData: CreateElement (12,059 us, 0.09%)</title><rect x="174.7" y="135" width="1.1" height="15.0" fill="rgb(156.730715072455,148.268815555488,148.268815555488)" rx="2" ry="2" />
<text  x="177.74" y="145.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (954,772 us, 7.42%)</title><rect x="436.2" y="199" width="87.6" height="15.0" fill="rgb(148.173025050861,159.599740107999,148.173025050861)" rx="2" ry="2" />
<text  x="439.19" y="209.5" >Parloop_C..</text>
</g>
<g >
<title>DMPlexBuFrCeLi (1,871 us, 0.01%)</title><rect x="432.0" y="119" width="0.2" height="15.0" fill="rgb(153.01666466137,153.01666466137,133.849990282025)" rx="2" ry="2" />
<text  x="435.04" y="129.5" ></text>
</g>
<g >
<title>HybridRHS (87,795 us, 0.68%)</title><rect x="523.8" y="151" width="8.0" height="15.0" fill="rgb(122.806990282043,148.875886369418,148.875886369418)" rx="2" ry="2" />
<text  x="526.76" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspace.MixedFunctionSpace (1,553 us, 0.01%)</title><rect x="430.5" y="71" width="0.1" height="15.0" fill="rgb(124.001544201373,163.534632339311,124.001544201373)" rx="2" ry="2" />
<text  x="433.45" y="81.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (2,824,958 us, 21.96%)</title><rect x="611.8" y="151" width="259.1" height="15.0" fill="rgb(135.496109604606,100.333780861802,135.496109604606)" rx="2" ry="2" />
<text  x="614.79" y="161.5" >pyop2.global_kernel.GlobalKerne..</text>
</g>
<g >
<title>all (12,865,002 us, 100%)</title><rect x="10.0" y="39" width="1180.0" height="15.0" fill="rgb(153.855454519371,126.22515131518,126.22515131518)" rx="2" ry="2" />
<text  x="13.00" y="49.5" ></text>
</g>
<g >
<title>Log_Event_form0_cell_integral_otherwise (2,360 us, 0.02%)</title><rect x="611.6" y="151" width="0.2" height="15.0" fill="rgb(130.335068754901,162.503593458505,130.335068754901)" rx="2" ry="2" />
<text  x="614.57" y="161.5" ></text>
</g>
<g >
<title>FunctionSpaceData: CreateElement (6,871 us, 0.05%)</title><rect x="534.6" y="199" width="0.6" height="15.0" fill="rgb(109.117566817997,145.326776582444,145.326776582444)" rx="2" ry="2" />
<text  x="537.57" y="209.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (24,922 us, 0.19%)</title><rect x="173.9" y="87" width="2.3" height="15.0" fill="rgb(143.177111842943,120.01634909754,143.177111842943)" rx="2" ry="2" />
<text  x="176.88" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspace.MixedFunctionSpace (1,774 us, 0.01%)</title><rect x="534.4" y="151" width="0.2" height="15.0" fill="rgb(153.780875095148,125.653375729466,125.653375729466)" rx="2" ry="2" />
<text  x="537.41" y="161.5" ></text>
</g>
<g >
<title>CreateExtMesh (1,786,744 us, 13.89%)</title><rect x="10.0" y="71" width="163.9" height="15.0" fill="rgb(109.318659508713,109.318659508713,148.577805066203)" rx="2" ry="2" />
<text  x="13.00" y="81.5" >CreateExtMesh</text>
</g>
<g >
<title>Mesh: numbering (2,085 us, 0.02%)</title><rect x="176.2" y="87" width="0.2" height="15.0" fill="rgb(127.029258714795,149.970548555688,149.970548555688)" rx="2" ry="2" />
<text  x="179.17" y="97.5" ></text>
</g>
<g >
<title>SNESSolve (8,224,297 us, 63.93%)</title><rect x="435.7" y="87" width="754.3" height="15.0" fill="rgb(153.77190203878,125.584582297311,125.584582297311)" rx="2" ry="2" />
<text  x="438.65" y="97.5" >SNESSolve</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (1,701,372 us, 13.22%)</title><rect x="16.9" y="135" width="156.1" height="15.0" fill="rgb(134.144054656166,96.8691400564249,134.144054656166)" rx="2" ry="2" />
<text  x="19.95" y="145.5" >pyop2.global_kerne..</text>
</g>
<g >
<title>Parloop_Cells_wrap_pyop2_kernel_uniform_extrusion (1,701,372 us, 13.22%)</title><rect x="16.9" y="119" width="156.1" height="15.0" fill="rgb(120.125219696315,120.125219696315,150.669397360577)" rx="2" ry="2" />
<text  x="19.95" y="129.5" >Parloop_Cells_wrap..</text>
</g>
<g >
<title>firedrake.functionspace.VectorFunctionSpace (9,601 us, 0.07%)</title><rect x="173.0" y="87" width="0.9" height="15.0" fill="rgb(146.377844189423,159.891978852885,146.377844189423)" rx="2" ry="2" />
<text  x="176.00" y="97.5" ></text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (1,031,101 us, 8.01%)</title><rect x="1095.4" y="119" width="94.6" height="15.0" fill="rgb(128.641994601504,128.641994601504,152.317805406743)" rx="2" ry="2" />
<text  x="1098.43" y="129.5" >firedrake...</text>
</g>
<g >
<title>firedrake.ufl_expr.action (4,677 us, 0.04%)</title><rect x="432.5" y="87" width="0.5" height="15.0" fill="rgb(106.73470500645,144.708997594265,144.708997594265)" rx="2" ry="2" />
<text  x="435.53" y="97.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (1,774 us, 0.01%)</title><rect x="534.4" y="167" width="0.2" height="15.0" fill="rgb(152.772836447666,152.772836447666,132.668361246382)" rx="2" ry="2" />
<text  x="537.41" y="177.5" ></text>
</g>
<g >
<title>Mesh: reorder (1,572 us, 0.01%)</title><rect x="176.4" y="87" width="0.1" height="15.0" fill="rgb(148.524885354786,148.524885354786,112.08213671935)" rx="2" ry="2" />
<text  x="179.36" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (6,871 us, 0.05%)</title><rect x="534.6" y="167" width="0.6" height="15.0" fill="rgb(128.399271181723,162.818723295999,128.399271181723)" rx="2" ry="2" />
<text  x="537.57" y="177.5" ></text>
</g>
<g >
<title>firedrake.slate.slac.optimise.optimise (13,247 us, 0.10%)</title><rect x="530.6" y="167" width="1.2" height="15.0" fill="rgb(139.37246662809,110.266945734481,139.37246662809)" rx="2" ry="2" />
<text  x="533.60" y="177.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (9,977 us, 0.08%)</title><rect x="433.0" y="103" width="0.9" height="15.0" fill="rgb(132.059921780724,151.274794535743,151.274794535743)" rx="2" ry="2" />
<text  x="435.95" y="113.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (1,909 us, 0.01%)</title><rect x="536.0" y="231" width="0.2" height="15.0" fill="rgb(149.354788337599,149.354788337599,116.103974251443)" rx="2" ry="2" />
<text  x="539.03" y="241.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_form0_cell_integral_otherwise (2,827,318 us, 21.98%)</title><rect x="611.6" y="135" width="259.3" height="15.0" fill="rgb(119.768990274115,119.768990274115,150.600449730474)" rx="2" ry="2" />
<text  x="614.57" y="145.5" >Parloop_Cells_wrap_form0_cell_i..</text>
</g>
<g >
<title>PetscBarrier (3,658 us, 0.03%)</title><rect x="176.5" y="71" width="0.3" height="15.0" fill="rgb(110.877455774852,110.877455774852,148.879507569326)" rx="2" ry="2" />
<text  x="179.50" y="81.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (954,772 us, 7.42%)</title><rect x="436.2" y="215" width="87.6" height="15.0" fill="rgb(127.718447237084,127.718447237084,152.139054303952)" rx="2" ry="2" />
<text  x="439.19" y="225.5" >pyop2.glo..</text>
</g>
<g >
<title>firedrake.parloops.par_loop (805,454 us, 6.26%)</title><rect x="537.3" y="135" width="73.9" height="15.0" fill="rgb(134.745540391438,151.97106602741,151.97106602741)" rx="2" ry="2" />
<text  x="540.34" y="145.5" >firedra..</text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (1,774 us, 0.01%)</title><rect x="534.4" y="183" width="0.2" height="15.0" fill="rgb(143.922329403647,143.922329403647,155.275289561996)" rx="2" ry="2" />
<text  x="537.41" y="193.5" ></text>
</g>
<g >
<title>firedrake.mesh.MeshTopology._facets (3,480 us, 0.03%)</title><rect x="175.8" y="135" width="0.4" height="15.0" fill="rgb(137.327663033514,105.027136523378,137.327663033514)" rx="2" ry="2" />
<text  x="178.85" y="145.5" ></text>
</g>
<g >
<title>firedrake.__init__ (2,765,048 us, 21.49%)</title><rect x="176.8" y="71" width="253.7" height="15.0" fill="rgb(152.68137287415,152.68137287415,132.225114697804)" rx="2" ry="2" />
<text  x="179.84" y="81.5" >firedrake.__init__</text>
</g>
<g >
<title>ParLoopExecute (954,772 us, 7.42%)</title><rect x="436.2" y="183" width="87.6" height="15.0" fill="rgb(154.566069374186,131.673198535426,131.673198535426)" rx="2" ry="2" />
<text  x="439.19" y="193.5" >ParLoopEx..</text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (799,542 us, 6.21%)</title><rect x="537.9" y="167" width="73.3" height="15.0" fill="rgb(148.200779245035,148.200779245035,110.511468649015)" rx="2" ry="2" />
<text  x="540.88" y="177.5" >Parloop..</text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.__init__ (19,447 us, 0.15%)</title><rect x="433.9" y="71" width="1.8" height="15.0" fill="rgb(151.768273420121,151.768273420121,127.800094266743)" rx="2" ry="2" />
<text  x="436.87" y="81.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (8,645 us, 0.07%)</title><rect x="534.4" y="135" width="0.8" height="15.0" fill="rgb(155.140885400839,155.140885400839,144.144290788682)" rx="2" ry="2" />
<text  x="537.41" y="145.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (1,909 us, 0.01%)</title><rect x="536.0" y="215" width="0.2" height="15.0" fill="rgb(149.733220752575,159.345754761209,149.733220752575)" rx="2" ry="2" />
<text  x="539.03" y="225.5" ></text>
</g>
<g >
<title>CreateMesh (3,657 us, 0.03%)</title><rect x="176.2" y="71" width="0.3" height="15.0" fill="rgb(137.755807107336,106.124255712549,137.755807107336)" rx="2" ry="2" />
<text  x="179.17" y="81.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (1,774 us, 0.01%)</title><rect x="534.4" y="215" width="0.2" height="15.0" fill="rgb(149.365061147246,149.365061147246,116.153757867424)" rx="2" ry="2" />
<text  x="537.41" y="225.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (10,942 us, 0.09%)</title><rect x="535.2" y="135" width="1.0" height="15.0" fill="rgb(141.717505273605,160.65063867639,141.717505273605)" rx="2" ry="2" />
<text  x="538.20" y="145.5" ></text>
</g>
<g >
<title>firedrake.utility_meshes.RectangleMesh (21,022 us, 0.16%)</title><rect x="430.6" y="87" width="1.9" height="15.0" fill="rgb(126.095235769905,126.095235769905,151.824884342562)" rx="2" ry="2" />
<text  x="433.60" y="97.5" ></text>
</g>
<g >
<title>firedrake.interpolation.make_interpolator (12,334 us, 0.10%)</title><rect x="536.2" y="135" width="1.1" height="15.0" fill="rgb(155.34754956781,137.664546686546,137.664546686546)" rx="2" ry="2" />
<text  x="539.21" y="145.5" ></text>
</g>
<g >
<title>KSPSolve (1,048,400 us, 8.15%)</title><rect x="435.7" y="103" width="96.1" height="15.0" fill="rgb(138.925533239839,161.105145751654,138.925533239839)" rx="2" ry="2" />
<text  x="438.65" y="113.5" >KSPSolve</text>
</g>
<g >
<title>CreateMesh (4,048 us, 0.03%)</title><rect x="431.1" y="119" width="0.3" height="15.0" fill="rgb(133.626811135197,151.681025109125,151.681025109125)" rx="2" ry="2" />
<text  x="434.06" y="129.5" ></text>
</g>
<g >
<title>ParLoopExecute (799,542 us, 6.21%)</title><rect x="537.9" y="151" width="73.3" height="15.0" fill="rgb(149.138565678621,149.138565678621,115.056125981011)" rx="2" ry="2" />
<text  x="540.88" y="161.5" >ParLoop..</text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (6,871 us, 0.05%)</title><rect x="534.6" y="151" width="0.6" height="15.0" fill="rgb(139.480169623577,161.01485610779,139.480169623577)" rx="2" ry="2" />
<text  x="537.57" y="161.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (8,831 us, 0.07%)</title><rect x="535.4" y="151" width="0.8" height="15.0" fill="rgb(132.886311279427,132.886311279427,153.139286054083)" rx="2" ry="2" />
<text  x="538.40" y="161.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (3,627 us, 0.03%)</title><rect x="1189.7" y="151" width="0.3" height="15.0" fill="rgb(130.430144191469,150.852259605196,150.852259605196)" rx="2" ry="2" />
<text  x="1192.67" y="161.5" ></text>
</g>
<g >
<title>ParLoopExecute (1,701,372 us, 13.22%)</title><rect x="16.9" y="103" width="156.1" height="15.0" fill="rgb(138.55867044678,161.164867601687,138.55867044678)" rx="2" ry="2" />
<text  x="19.95" y="113.5" >ParLoopExecute</text>
</g>
<g >
<title>ParLoopExecute (5,275,222 us, 41.00%)</title><rect x="611.6" y="119" width="483.8" height="15.0" fill="rgb(144.461937710145,144.461937710145,155.379729879383)" rx="2" ry="2" />
<text  x="614.57" y="129.5" >ParLoopExecute</text>
</g>
<g >
<title>firedrake.matrix_free.operators.ImplicitMatrixContext.__init__ (6,480 us, 0.05%)</title><rect x="435.1" y="103" width="0.6" height="15.0" fill="rgb(152.257519543958,152.257519543958,130.171056251488)" rx="2" ry="2" />
<text  x="438.06" y="113.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.solve (8,224,297 us, 63.93%)</title><rect x="435.7" y="71" width="754.3" height="15.0" fill="rgb(154.249712031192,129.247792239142,129.247792239142)" rx="2" ry="2" />
<text  x="438.65" y="81.5" >firedrake.variational_solver.NonlinearVariationalSolver.solve</text>
</g>
<g >
<title>firedrake.extrusion_utils.make_extruded_coords (1,774,541 us, 13.79%)</title><rect x="10.2" y="87" width="162.8" height="15.0" fill="rgb(140.589475401936,113.385530717461,140.589475401936)" rx="2" ry="2" />
<text  x="13.24" y="97.5" >firedrake.extrusion..</text>
</g>
<g >
<title>SCForwardElim (1,048,400 us, 8.15%)</title><rect x="435.7" y="135" width="96.1" height="15.0" fill="rgb(153.143116025809,153.143116025809,134.46279304815)" rx="2" ry="2" />
<text  x="438.65" y="145.5" >SCForwardE..</text>
</g>
<g >
<title>DMPlexStratify (1,871 us, 0.01%)</title><rect x="432.0" y="135" width="0.2" height="15.0" fill="rgb(155.991941916402,142.604888025745,142.604888025745)" rx="2" ry="2" />
<text  x="435.04" y="145.5" ></text>
</g>
<g >
<title>DMPlexInterp (3,463 us, 0.03%)</title><rect x="432.2" y="119" width="0.3" height="15.0" fill="rgb(154.261090815885,129.335029588451,129.335029588451)" rx="2" ry="2" />
<text  x="435.21" y="129.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (5,985 us, 0.05%)</title><rect x="1189.5" y="135" width="0.5" height="15.0" fill="rgb(149.699883954437,149.699883954437,117.776360702271)" rx="2" ry="2" />
<text  x="1192.45" y="145.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (6,496 us, 0.05%)</title><rect x="535.6" y="167" width="0.6" height="15.0" fill="rgb(125.92349464995,125.92349464995,151.791644125797)" rx="2" ry="2" />
<text  x="538.61" y="177.5" ></text>
</g>
<g >
<title>HybridInit (865,694 us, 6.73%)</title><rect x="531.8" y="119" width="79.4" height="15.0" fill="rgb(152.218850182458,152.218850182458,129.983658576526)" rx="2" ry="2" />
<text  x="534.81" y="129.5" >HybridInit</text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (24,922 us, 0.19%)</title><rect x="173.9" y="103" width="2.3" height="15.0" fill="rgb(131.550737305488,162.305693927014,131.550737305488)" rx="2" ry="2" />
<text  x="176.88" y="113.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (1,616 us, 0.01%)</title><rect x="1189.9" y="167" width="0.1" height="15.0" fill="rgb(130.953342024631,130.953342024631,152.765162972509)" rx="2" ry="2" />
<text  x="1192.85" y="177.5" ></text>
</g>
<g >
<title>SNESFunctionEval (6,310,203 us, 49.05%)</title><rect x="611.2" y="103" width="578.8" height="15.0" fill="rgb(149.346976850779,149.346976850779,116.066118584545)" rx="2" ry="2" />
<text  x="614.22" y="113.5" >SNESFunctionEval</text>
</g>
<g >
<title>Parloop_Cells_wrap_form1_cell_integral_otherwise (2,447,904 us, 19.03%)</title><rect x="870.9" y="135" width="224.5" height="15.0" fill="rgb(148.198527439583,132.883726563932,148.198527439583)" rx="2" ry="2" />
<text  x="873.90" y="145.5" >Parloop_Cells_wrap_form1_ce..</text>
</g>
<g >
<title>CreateFunctionSpace (9,601 us, 0.07%)</title><rect x="173.0" y="103" width="0.9" height="15.0" fill="rgb(156.188755117884,144.113789237107,144.113789237107)" rx="2" ry="2" />
<text  x="176.00" y="113.5" ></text>
</g>
<g >
<title>firedrake.mesh._from_cell_list (11,936 us, 0.09%)</title><rect x="431.4" y="103" width="1.1" height="15.0" fill="rgb(152.537988815526,152.537988815526,131.530253490628)" rx="2" ry="2" />
<text  x="434.43" y="113.5" ></text>
</g>
<g >
<title>PCSetUp (865,694 us, 6.73%)</title><rect x="531.8" y="103" width="79.4" height="15.0" fill="rgb(149.075410160732,149.075410160732,114.750064625087)" rx="2" ry="2" />
<text  x="534.81" y="113.5" >PCSetUp</text>
</g>
<g >
<title>firedrake.ufl_expr.action (3,914 us, 0.03%)</title><rect x="435.1" y="119" width="0.3" height="15.0" fill="rgb(153.349055957684,122.342762342242,122.342762342242)" rx="2" ry="2" />
<text  x="438.06" y="129.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (2,447,904 us, 19.03%)</title><rect x="870.9" y="151" width="224.5" height="15.0" fill="rgb(113.501519670351,113.501519670351,149.387390903939)" rx="2" ry="2" />
<text  x="873.90" y="161.5" >pyop2.global_kernel.GlobalK..</text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (24,922 us, 0.19%)</title><rect x="173.9" y="119" width="2.3" height="15.0" fill="rgb(148.847731061604,148.847731061604,113.646696683159)" rx="2" ry="2" />
<text  x="176.88" y="129.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (9,601 us, 0.07%)</title><rect x="173.0" y="135" width="0.9" height="15.0" fill="rgb(147.540269462465,159.702746831692,147.540269462465)" rx="2" ry="2" />
<text  x="176.00" y="145.5" ></text>
</g>
<g >
<title>firedrake (12,865,002 us, 100.00%)</title><rect x="10.0" y="55" width="1180.0" height="15.0" fill="rgb(105.181987891199,144.306441305126,144.306441305126)" rx="2" ry="2" />
<text  x="13.00" y="65.5" >firedrake</text>
</g>
<g >
<title>firedrake.assemble.allocate_matrix (9,254 us, 0.07%)</title><rect x="434.8" y="87" width="0.9" height="15.0" fill="rgb(147.496594872506,159.709856648662,147.496594872506)" rx="2" ry="2" />
<text  x="437.80" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (6,871 us, 0.05%)</title><rect x="534.6" y="183" width="0.6" height="15.0" fill="rgb(139.180957136375,139.180957136375,154.35760460704)" rx="2" ry="2" />
<text  x="537.57" y="193.5" ></text>
</g>
<g >
<title>CreateMesh (4,048 us, 0.03%)</title><rect x="431.1" y="103" width="0.3" height="15.0" fill="rgb(129.471562232531,162.644164287728,129.471562232531)" rx="2" ry="2" />
<text  x="434.06" y="113.5" ></text>
</g>
<g >
<title>HybridBreak (960,605 us, 7.47%)</title><rect x="435.7" y="151" width="88.1" height="15.0" fill="rgb(130.138976551604,150.776771698564,150.776771698564)" rx="2" ry="2" />
<text  x="438.65" y="161.5" >HybridBreak</text>
</g>
<g >
<title>firedrake.utility_meshes.SquareMesh (21,022 us, 0.16%)</title><rect x="430.6" y="71" width="1.9" height="15.0" fill="rgb(135.583335838015,161.649224398463,135.583335838015)" rx="2" ry="2" />
<text  x="433.60" y="81.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (9,601 us, 0.07%)</title><rect x="173.0" y="119" width="0.9" height="15.0" fill="rgb(154.352291478108,130.034234665497,130.034234665497)" rx="2" ry="2" />
<text  x="176.00" y="129.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (4,475 us, 0.03%)</title><rect x="535.8" y="183" width="0.4" height="15.0" fill="rgb(133.0557310489,94.0803108128064,133.0557310489)" rx="2" ry="2" />
<text  x="538.80" y="193.5" ></text>
</g>
<g >
<title>firedrake.parloops.par_loop (960,605 us, 7.47%)</title><rect x="435.7" y="167" width="88.1" height="15.0" fill="rgb(155.07214481231,155.07214481231,143.811163321194)" rx="2" ry="2" />
<text  x="438.65" y="177.5" >firedrake..</text>
</g>
<g >
<title>CreateFunctionSpace (24,922 us, 0.19%)</title><rect x="173.9" y="71" width="2.3" height="15.0" fill="rgb(120.225632800568,120.225632800568,150.688832154949)" rx="2" ry="2" />
<text  x="176.88" y="81.5" ></text>
</g>
<g >
<title>PCApply (1,048,400 us, 8.15%)</title><rect x="435.7" y="119" width="96.1" height="15.0" fill="rgb(131.086460033256,151.022415564177,151.022415564177)" rx="2" ry="2" />
<text  x="438.65" y="129.5" >PCApply</text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (2,566 us, 0.02%)</title><rect x="435.4" y="119" width="0.3" height="15.0" fill="rgb(149.04682943737,159.457492882289,149.04682943737)" rx="2" ry="2" />
<text  x="438.42" y="129.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (799,542 us, 6.21%)</title><rect x="537.9" y="183" width="73.3" height="15.0" fill="rgb(154.570300501718,131.705637179838,131.705637179838)" rx="2" ry="2" />
<text  x="540.88" y="193.5" >pyop2.g..</text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalProblem.__init__ (9,977 us, 0.08%)</title><rect x="433.0" y="87" width="0.9" height="15.0" fill="rgb(134.054459237364,96.6395517957462,134.054459237364)" rx="2" ry="2" />
<text  x="435.95" y="97.5" ></text>
</g>
</g>
</svg>
