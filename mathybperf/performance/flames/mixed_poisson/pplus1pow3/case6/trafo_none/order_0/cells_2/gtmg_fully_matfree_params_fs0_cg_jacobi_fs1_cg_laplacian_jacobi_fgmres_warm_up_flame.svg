<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="267" onload="init(evt)" viewBox="0 0 1200 267" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:13px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:18px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 13 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (1 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="267.0" fill="url(#background)"  />
<text id="title" x="600.00" y="26" >Firedrake example</text>
<text id="details" x="10.00" y="249" > </text>
<text id="unzoom" x="10.00" y="26" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="26" >Search</text>
<text id="ignorecase" x="1174.00" y="26" >ic</text>
<text id="matched" x="1090.00" y="249" > </text>
<g id="frames">
<g >
<title>all (70,685,237 us, 100%)</title><rect x="10.0" y="39" width="1180.0" height="15.0" fill="rgb(148.633564486433,133.998508996486,148.633564486433)" rx="2" ry="2" />
<text  x="13.00" y="49.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (17,534 us, 0.02%)</title><rect x="1003.5" y="135" width="0.2" height="15.0" fill="rgb(154.868803707581,154.868803707581,142.82574104443)" rx="2" ry="2" />
<text  x="1006.45" y="145.5" ></text>
</g>
<g >
<title>firedrake.parloops.par_loop (1,249,637 us, 1.77%)</title><rect x="123.3" y="167" width="20.9" height="15.0" fill="rgb(129.522208893064,150.616868972276,150.616868972276)" rx="2" ry="2" />
<text  x="126.33" y="177.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (59,467 us, 0.08%)</title><rect x="39.1" y="103" width="1.0" height="15.0" fill="rgb(156.28616528866,144.860600546391,144.860600546391)" rx="2" ry="2" />
<text  x="42.09" y="113.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (8,690 us, 0.01%)</title><rect x="1003.7" y="199" width="0.2" height="15.0" fill="rgb(135.800873338072,101.114737928809,135.800873338072)" rx="2" ry="2" />
<text  x="1006.75" y="209.5" ></text>
</g>
<g >
<title>firedrake.extrusion_utils.make_extruded_coords (1,729,389 us, 2.45%)</title><rect x="10.0" y="87" width="28.9" height="15.0" fill="rgb(152.71016695393,152.71016695393,132.364655238275)" rx="2" ry="2" />
<text  x="13.00" y="97.5" >f..</text>
</g>
<g >
<title>firedrake.slate.slac.optimise.optimise (46,522 us, 0.07%)</title><rect x="400.3" y="167" width="0.8" height="15.0" fill="rgb(154.588217526103,131.843001033453,131.843001033453)" rx="2" ry="2" />
<text  x="403.28" y="177.5" ></text>
</g>
<g >
<title>KSPSolve (52,650,121 us, 74.49%)</title><rect x="123.3" y="103" width="879.0" height="15.0" fill="rgb(130.628896277611,130.628896277611,152.702367021473)" rx="2" ry="2" />
<text  x="126.33" y="113.5" >KSPSolve</text>
</g>
<g >
<title>firedrake.__init__ (4,803,134 us, 6.80%)</title><rect x="41.3" y="71" width="80.2" height="15.0" fill="rgb(150.156596655845,159.276833102537,150.156596655845)" rx="2" ry="2" />
<text  x="44.29" y="81.5" >firedrak..</text>
</g>
<g >
<title>SCForwardElim (52,650,121 us, 74.49%)</title><rect x="123.3" y="135" width="879.0" height="15.0" fill="rgb(156.142897972891,143.762217792164,143.762217792164)" rx="2" ry="2" />
<text  x="126.33" y="145.5" >SCForwardElim</text>
</g>
<g >
<title>firedrake.variational_solver.LinearVariationalProblem.__init__ (12,161 us, 0.02%)</title><rect x="122.6" y="71" width="0.2" height="15.0" fill="rgb(127.041561738366,163.039745763522,127.041561738366)" rx="2" ry="2" />
<text  x="125.64" y="81.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (12,161 us, 0.02%)</title><rect x="122.6" y="103" width="0.2" height="15.0" fill="rgb(143.999708151902,143.999708151902,155.290266093916)" rx="2" ry="2" />
<text  x="125.64" y="113.5" ></text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (1,177,985 us, 1.67%)</title><rect x="1170.3" y="119" width="19.7" height="15.0" fill="rgb(156.458255284362,146.17995718011,146.17995718011)" rx="2" ry="2" />
<text  x="1173.34" y="129.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (1,240,084 us, 1.75%)</title><rect x="123.5" y="215" width="20.7" height="15.0" fill="rgb(152.190336359791,152.190336359791,129.84547620514)" rx="2" ry="2" />
<text  x="126.49" y="225.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (59,467 us, 0.08%)</title><rect x="39.1" y="71" width="1.0" height="15.0" fill="rgb(149.212295909914,149.212295909914,115.413434024968)" rx="2" ry="2" />
<text  x="42.09" y="81.5" ></text>
</g>
<g >
<title>DMPlexInterp (21,705 us, 0.03%)</title><rect x="122.3" y="119" width="0.3" height="15.0" fill="rgb(132.373851705453,162.171698559577,132.373851705453)" rx="2" ry="2" />
<text  x="125.28" y="129.5" ></text>
</g>
<g >
<title>HybridRHS (51,400,484 us, 72.72%)</title><rect x="144.2" y="151" width="858.1" height="15.0" fill="rgb(152.51413148325,115.941674704918,115.941674704918)" rx="2" ry="2" />
<text  x="147.20" y="161.5" >HybridRHS</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (2,943,262 us, 4.16%)</title><rect x="1121.2" y="151" width="49.1" height="15.0" fill="rgb(152.080333932367,112.615893481479,112.615893481479)" rx="2" ry="2" />
<text  x="1124.20" y="161.5" >pyop..</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (964,030 us, 1.36%)</title><rect x="1004.4" y="183" width="16.1" height="15.0" fill="rgb(133.845760535565,133.845760535565,153.324985910109)" rx="2" ry="2" />
<text  x="1007.39" y="193.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_form1_cell_integral_otherwise (2,943,262 us, 4.16%)</title><rect x="1121.2" y="135" width="49.1" height="15.0" fill="rgb(145.063119675249,160.106003773797,145.063119675249)" rx="2" ry="2" />
<text  x="1124.20" y="145.5" >Parl..</text>
</g>
<g >
<title>FunctionSpaceData: CreateElement (11,836 us, 0.02%)</title><rect x="39.5" y="135" width="0.2" height="15.0" fill="rgb(129.714894301157,150.666824448448,150.666824448448)" rx="2" ry="2" />
<text  x="42.47" y="145.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (13,065 us, 0.02%)</title><rect x="38.9" y="135" width="0.2" height="15.0" fill="rgb(141.215532499567,141.215532499567,154.751393387013)" rx="2" ry="2" />
<text  x="41.87" y="145.5" ></text>
</g>
<g >
<title>PetscBarrier (44,287 us, 0.06%)</title><rect x="40.6" y="71" width="0.7" height="15.0" fill="rgb(154.636079109301,154.636079109301,141.697921837381)" rx="2" ry="2" />
<text  x="43.55" y="81.5" ></text>
</g>
<g >
<title>HybridBreak (1,249,637 us, 1.77%)</title><rect x="123.3" y="151" width="20.9" height="15.0" fill="rgb(156.769662150907,148.567409823619,148.567409823619)" rx="2" ry="2" />
<text  x="126.33" y="161.5" ></text>
</g>
<g >
<title>ParLoopExecute (1,657,019 us, 2.34%)</title><rect x="11.2" y="103" width="27.7" height="15.0" fill="rgb(141.824620838531,116.550590898734,141.824620838531)" rx="2" ry="2" />
<text  x="14.21" y="113.5" >P..</text>
</g>
<g >
<title>firedrake.utility_meshes.RectangleMesh (70,181 us, 0.10%)</title><rect x="121.5" y="87" width="1.1" height="15.0" fill="rgb(117.186423002234,147.418702259839,147.418702259839)" rx="2" ry="2" />
<text  x="124.47" y="97.5" ></text>
</g>
<g >
<title>firedrake.mesh._from_cell_list (47,693 us, 0.07%)</title><rect x="121.8" y="103" width="0.8" height="15.0" fill="rgb(152.53633669529,152.53633669529,131.52224706179)" rx="2" ry="2" />
<text  x="124.85" y="113.5" ></text>
</g>
<g >
<title>ParLoopExecute (964,030 us, 1.36%)</title><rect x="1004.4" y="151" width="16.1" height="15.0" fill="rgb(131.837381305795,151.217098857058,151.217098857058)" rx="2" ry="2" />
<text  x="1007.39" y="161.5" ></text>
</g>
<g >
<title>CreateMesh (7,994 us, 0.01%)</title><rect x="121.7" y="119" width="0.1" height="15.0" fill="rgb(152.348121941935,152.348121941935,130.610129410917)" rx="2" ry="2" />
<text  x="124.72" y="129.5" ></text>
</g>
<g >
<title>DMPlexBuFrCeLi (9,619 us, 0.01%)</title><rect x="122.1" y="119" width="0.2" height="15.0" fill="rgb(141.962900729926,116.904933120436,141.962900729926)" rx="2" ry="2" />
<text  x="125.12" y="129.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (8,483 us, 0.01%)</title><rect x="1003.6" y="167" width="0.1" height="15.0" fill="rgb(148.95130274035,148.95130274035,114.148620972464)" rx="2" ry="2" />
<text  x="1006.60" y="177.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.__init__ (29,180 us, 0.04%)</title><rect x="122.8" y="71" width="0.5" height="15.0" fill="rgb(132.905300383637,132.905300383637,153.142961364575)" rx="2" ry="2" />
<text  x="125.85" y="81.5" ></text>
</g>
<g >
<title>CreateMesh (28,209 us, 0.04%)</title><rect x="40.1" y="71" width="0.5" height="15.0" fill="rgb(132.265488021605,151.328089487083,151.328089487083)" rx="2" ry="2" />
<text  x="43.08" y="81.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.solve (63,896,164 us, 90.40%)</title><rect x="123.3" y="71" width="1066.7" height="15.0" fill="rgb(155.343531690693,137.633742961977,137.633742961977)" rx="2" ry="2" />
<text  x="126.33" y="81.5" >firedrake.variational_solver.NonlinearVariationalSolver.solve</text>
</g>
<g >
<title>PCApply (52,650,121 us, 74.49%)</title><rect x="123.3" y="119" width="879.0" height="15.0" fill="rgb(118.678012088304,118.678012088304,150.389292662252)" rx="2" ry="2" />
<text  x="126.33" y="129.5" >PCApply</text>
</g>
<g >
<title>PCSetUp (1,091,468 us, 1.54%)</title><rect x="1002.3" y="103" width="18.2" height="15.0" fill="rgb(125.755411976018,125.755411976018,151.759111995358)" rx="2" ry="2" />
<text  x="1005.26" y="113.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (59,467 us, 0.08%)</title><rect x="39.1" y="119" width="1.0" height="15.0" fill="rgb(139.138538540408,139.138538540408,154.349394556208)" rx="2" ry="2" />
<text  x="42.09" y="129.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (8,690 us, 0.01%)</title><rect x="1003.7" y="183" width="0.2" height="15.0" fill="rgb(152.578381191845,116.434255804146,116.434255804146)" rx="2" ry="2" />
<text  x="1006.75" y="193.5" ></text>
</g>
<g >
<title>firedrake.assemble.allocate_matrix (7,584 us, 0.01%)</title><rect x="123.2" y="87" width="0.1" height="15.0" fill="rgb(134.373000315247,151.874481563212,151.874481563212)" rx="2" ry="2" />
<text  x="126.21" y="97.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (964,030 us, 1.36%)</title><rect x="1004.4" y="167" width="16.1" height="15.0" fill="rgb(119.964302132727,119.964302132727,150.638252025689)" rx="2" ry="2" />
<text  x="1007.39" y="177.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (59,467 us, 0.08%)</title><rect x="39.1" y="87" width="1.0" height="15.0" fill="rgb(151.082172654769,159.126157939921,151.082172654769)" rx="2" ry="2" />
<text  x="42.09" y="97.5" ></text>
</g>
<g >
<title>HybridInit (1,091,468 us, 1.54%)</title><rect x="1002.3" y="119" width="18.2" height="15.0" fill="rgb(127.567924378226,127.567924378226,152.109920847399)" rx="2" ry="2" />
<text  x="1005.26" y="129.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (1,657,019 us, 2.34%)</title><rect x="11.2" y="135" width="27.7" height="15.0" fill="rgb(136.809096785243,103.698310512186,136.809096785243)" rx="2" ry="2" />
<text  x="14.21" y="145.5" >p..</text>
</g>
<g >
<title>Parloop_Cells_wrap_form0_cell_integral_otherwise (6,025,758 us, 8.52%)</title><rect x="1020.6" y="135" width="100.6" height="15.0" fill="rgb(122.047592206753,122.047592206753,151.041469459372)" rx="2" ry="2" />
<text  x="1023.61" y="145.5" >Parloop_Cel..</text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (8,690 us, 0.01%)</title><rect x="1003.7" y="151" width="0.2" height="15.0" fill="rgb(146.038820970744,159.947168679181,146.038820970744)" rx="2" ry="2" />
<text  x="1006.75" y="161.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (13,065 us, 0.02%)</title><rect x="38.9" y="103" width="0.2" height="15.0" fill="rgb(155.582262176608,155.582262176608,146.283270548175)" rx="2" ry="2" />
<text  x="41.87" y="113.5" ></text>
</g>
<g >
<title>firedrake.parloops.par_loop (972,247 us, 1.38%)</title><rect x="1004.3" y="135" width="16.2" height="15.0" fill="rgb(138.654775278849,138.654775278849,154.255762957197)" rx="2" ry="2" />
<text  x="1007.25" y="145.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (13,065 us, 0.02%)</title><rect x="38.9" y="151" width="0.2" height="15.0" fill="rgb(136.563869756842,152.442484751774,152.442484751774)" rx="2" ry="2" />
<text  x="41.87" y="161.5" ></text>
</g>
<g >
<title>firedrake.interpolation.make_interpolator (21,634 us, 0.03%)</title><rect x="1003.9" y="135" width="0.4" height="15.0" fill="rgb(137.88799783417,152.785777216266,152.785777216266)" rx="2" ry="2" />
<text  x="1006.89" y="145.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (8,483 us, 0.01%)</title><rect x="1003.6" y="183" width="0.1" height="15.0" fill="rgb(114.180930765796,146.63950056891,146.63950056891)" rx="2" ry="2" />
<text  x="1006.60" y="193.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (1,240,084 us, 1.75%)</title><rect x="123.5" y="199" width="20.7" height="15.0" fill="rgb(140.876376491533,160.787566617657,140.876376491533)" rx="2" ry="2" />
<text  x="126.49" y="209.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (13,065 us, 0.02%)</title><rect x="38.9" y="119" width="0.2" height="15.0" fill="rgb(154.457509846744,130.840908825038,130.840908825038)" rx="2" ry="2" />
<text  x="41.87" y="129.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (8,483 us, 0.01%)</title><rect x="1003.6" y="151" width="0.1" height="15.0" fill="rgb(144.175369663163,154.415836579339,154.415836579339)" rx="2" ry="2" />
<text  x="1006.60" y="161.5" ></text>
</g>
<g >
<title>firedrake.mesh.MeshTopology._facets (24,629 us, 0.03%)</title><rect x="39.7" y="135" width="0.4" height="15.0" fill="rgb(116.021095427177,116.021095427177,149.875050727841)" rx="2" ry="2" />
<text  x="42.67" y="145.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (8,690 us, 0.01%)</title><rect x="1003.7" y="135" width="0.2" height="15.0" fill="rgb(110.215831798274,145.611511947701,145.611511947701)" rx="2" ry="2" />
<text  x="1006.75" y="145.5" ></text>
</g>
<g >
<title>SNESFunctionEval (10,154,575 us, 14.37%)</title><rect x="1020.5" y="103" width="169.5" height="15.0" fill="rgb(153.739184082442,125.333744632052,125.333744632052)" rx="2" ry="2" />
<text  x="1023.48" y="113.5" >SNESFunctionEval</text>
</g>
<g >
<title>CreateMesh (7,994 us, 0.01%)</title><rect x="121.7" y="103" width="0.1" height="15.0" fill="rgb(155.620782774477,139.759334604322,139.759334604322)" rx="2" ry="2" />
<text  x="124.72" y="113.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (6,017,174 us, 8.51%)</title><rect x="1020.8" y="151" width="100.4" height="15.0" fill="rgb(114.891430567922,146.823704221313,146.823704221313)" rx="2" ry="2" />
<text  x="1023.75" y="161.5" >pyop2.globa..</text>
</g>
<g >
<title>firedrake (70,685,237 us, 100.00%)</title><rect x="10.0" y="55" width="1180.0" height="15.0" fill="rgb(110.29767008434,110.29767008434,148.767290984066)" rx="2" ry="2" />
<text  x="13.00" y="65.5" >firedrake</text>
</g>
<g >
<title>ParLoopExecute (8,969,020 us, 12.69%)</title><rect x="1020.6" y="119" width="149.7" height="15.0" fill="rgb(132.231805430173,162.194822371832,132.231805430173)" rx="2" ry="2" />
<text  x="1023.61" y="129.5" >ParLoopExecute</text>
</g>
<g >
<title>ParLoopExecute (1,240,084 us, 1.75%)</title><rect x="123.5" y="183" width="20.7" height="15.0" fill="rgb(135.319054350943,152.119754831726,152.119754831726)" rx="2" ry="2" />
<text  x="126.49" y="193.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (8,690 us, 0.01%)</title><rect x="1003.7" y="167" width="0.2" height="15.0" fill="rgb(113.271805937491,146.403801539349,146.403801539349)" rx="2" ry="2" />
<text  x="1006.75" y="177.5" ></text>
</g>
<g >
<title>firedrake.functionspace.VectorFunctionSpace (13,065 us, 0.02%)</title><rect x="38.9" y="87" width="0.2" height="15.0" fill="rgb(153.557150807612,123.938156191693,123.938156191693)" rx="2" ry="2" />
<text  x="41.87" y="97.5" ></text>
</g>
<g >
<title>firedrake.utility_meshes.SquareMesh (70,181 us, 0.10%)</title><rect x="121.5" y="71" width="1.1" height="15.0" fill="rgb(153.790436670393,125.72668113968,125.72668113968)" rx="2" ry="2" />
<text  x="124.47" y="81.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalProblem.__init__ (12,161 us, 0.02%)</title><rect x="122.6" y="87" width="0.2" height="15.0" fill="rgb(134.030965828099,96.5793499345037,134.030965828099)" rx="2" ry="2" />
<text  x="125.64" y="97.5" ></text>
</g>
<g >
<title>firedrake.matrix_free.operators.ImplicitMatrixContext.__init__ (7,584 us, 0.01%)</title><rect x="123.2" y="103" width="0.1" height="15.0" fill="rgb(152.067584709507,112.518149439555,112.518149439555)" rx="2" ry="2" />
<text  x="126.21" y="113.5" ></text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (36,014,101 us, 50.95%)</title><rect x="401.1" y="167" width="601.2" height="15.0" fill="rgb(152.836741640757,118.415019245801,118.415019245801)" rx="2" ry="2" />
<text  x="404.05" y="177.5" >firedrake.tsfc_interface.compile_form</text>
</g>
<g >
<title>SNESSolve (63,896,164 us, 90.40%)</title><rect x="123.3" y="87" width="1066.7" height="15.0" fill="rgb(153.812300438652,125.894303363,125.894303363)" rx="2" ry="2" />
<text  x="126.33" y="97.5" >SNESSolve</text>
</g>
<g >
<title>CreateExtMesh (1,742,454 us, 2.47%)</title><rect x="10.0" y="71" width="29.1" height="15.0" fill="rgb(149.900078871031,149.900078871031,118.746536067306)" rx="2" ry="2" />
<text  x="13.00" y="81.5" >C..</text>
</g>
<g >
<title>Parloop_Cells_wrap_pyop2_kernel_uniform_extrusion (1,657,019 us, 2.34%)</title><rect x="11.2" y="119" width="27.7" height="15.0" fill="rgb(108.885773200724,108.885773200724,148.494020619495)" rx="2" ry="2" />
<text  x="14.21" y="129.5" >P..</text>
</g>
<g >
<title>Mesh: numbering (9,980 us, 0.01%)</title><rect x="40.4" y="87" width="0.2" height="15.0" fill="rgb(130.106354100506,150.768314026057,150.768314026057)" rx="2" ry="2" />
<text  x="43.39" y="97.5" ></text>
</g>
</g>
</svg>
