<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="267" onload="init(evt)" viewBox="0 0 1200 267" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:13px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:18px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 13 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (1 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="267.0" fill="url(#background)"  />
<text id="title" x="600.00" y="26" >Firedrake example</text>
<text id="details" x="10.00" y="249" > </text>
<text id="unzoom" x="10.00" y="26" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="26" >Search</text>
<text id="ignorecase" x="1174.00" y="26" >ic</text>
<text id="matched" x="1090.00" y="249" > </text>
<g id="frames">
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (793,901 us, 1.66%)</title><rect x="1005.7" y="183" width="19.5" height="15.0" fill="rgb(114.836142467098,114.836142467098,149.645704993632)" rx="2" ry="2" />
<text  x="1008.66" y="193.5" ></text>
</g>
<g >
<title>CreateExtMesh (2,089,484 us, 4.36%)</title><rect x="10.0" y="71" width="51.4" height="15.0" fill="rgb(150.186915380578,150.186915380578,120.136589921264)" rx="2" ry="2" />
<text  x="13.00" y="81.5" >Crea..</text>
</g>
<g >
<title>ParLoopExecute (1,047,947 us, 2.19%)</title><rect x="155.7" y="183" width="25.8" height="15.0" fill="rgb(147.100936679307,155.174316916857,155.174316916857)" rx="2" ry="2" />
<text  x="158.68" y="193.5" >P..</text>
</g>
<g >
<title>SNESFunctionEval (6,693,946 us, 13.97%)</title><rect x="1025.2" y="103" width="164.8" height="15.0" fill="rgb(154.04306795803,127.663521011562,127.663521011562)" rx="2" ry="2" />
<text  x="1028.21" y="113.5" >SNESFunctionEval</text>
</g>
<g >
<title>Parloop_Cells_wrap_pyop2_kernel_uniform_extrusion (2,006,285 us, 4.19%)</title><rect x="11.8" y="119" width="49.4" height="15.0" fill="rgb(143.458600825167,143.458600825167,155.185535643581)" rx="2" ry="2" />
<text  x="14.76" y="129.5" >Parl..</text>
</g>
<g >
<title>CreateMesh (7,487 us, 0.02%)</title><rect x="152.8" y="103" width="0.2" height="15.0" fill="rgb(133.211015967622,133.211015967622,153.202132122766)" rx="2" ry="2" />
<text  x="155.79" y="113.5" ></text>
</g>
<g >
<title>KSPSolve (34,444,418 us, 71.86%)</title><rect x="155.5" y="103" width="848.0" height="15.0" fill="rgb(137.044040014799,104.300352537922,137.044040014799)" rx="2" ry="2" />
<text  x="158.50" y="113.5" >KSPSolve</text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (53,944 us, 0.11%)</title><rect x="61.4" y="119" width="1.4" height="15.0" fill="rgb(154.429989774808,154.429989774808,140.699181216376)" rx="2" ry="2" />
<text  x="64.44" y="129.5" ></text>
</g>
<g >
<title>firedrake.mesh._from_cell_list (51,317 us, 0.11%)</title><rect x="153.0" y="103" width="1.2" height="15.0" fill="rgb(139.214307617059,139.214307617059,154.364059538786)" rx="2" ry="2" />
<text  x="155.98" y="113.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (53,944 us, 0.11%)</title><rect x="61.4" y="71" width="1.4" height="15.0" fill="rgb(141.318062685279,141.318062685279,154.771237939086)" rx="2" ry="2" />
<text  x="64.44" y="81.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_form1_cell_integral_otherwise (2,135,444 us, 4.46%)</title><rect x="1107.5" y="135" width="52.6" height="15.0" fill="rgb(154.025550930182,127.529223798064,127.529223798064)" rx="2" ry="2" />
<text  x="1110.52" y="145.5" >Parl..</text>
</g>
<g >
<title>firedrake.interpolation.make_interpolator (16,243 us, 0.03%)</title><rect x="1005.1" y="135" width="0.4" height="15.0" fill="rgb(144.311242774278,154.451062941479,154.451062941479)" rx="2" ry="2" />
<text  x="1008.12" y="145.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalProblem.__init__ (12,834 us, 0.03%)</title><rect x="154.4" y="87" width="0.3" height="15.0" fill="rgb(151.51913595343,151.51913595343,126.592735774316)" rx="2" ry="2" />
<text  x="157.38" y="97.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (1,047,947 us, 2.19%)</title><rect x="155.7" y="215" width="25.8" height="15.0" fill="rgb(141.825889788375,160.632994685613,141.825889788375)" rx="2" ry="2" />
<text  x="158.68" y="225.5" >p..</text>
</g>
<g >
<title>firedrake.extrusion_utils.make_extruded_coords (2,077,801 us, 4.33%)</title><rect x="10.0" y="87" width="51.2" height="15.0" fill="rgb(120.170755813252,148.192418173806,148.192418173806)" rx="2" ry="2" />
<text  x="13.00" y="97.5" >fire..</text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (7,406 us, 0.02%)</title><rect x="1189.8" y="135" width="0.2" height="15.0" fill="rgb(138.027642383325,106.820833607271,138.027642383325)" rx="2" ry="2" />
<text  x="1192.82" y="145.5" ></text>
</g>
<g >
<title>SCForwardElim (34,444,418 us, 71.86%)</title><rect x="155.5" y="135" width="848.0" height="15.0" fill="rgb(135.88999403079,101.3431097039,135.88999403079)" rx="2" ry="2" />
<text  x="158.50" y="145.5" >SCForwardElim</text>
</g>
<g >
<title>firedrake (47,932,259 us, 100.00%)</title><rect x="10.0" y="55" width="1180.0" height="15.0" fill="rgb(145.847164736316,126.85835963681,145.847164736316)" rx="2" ry="2" />
<text  x="13.00" y="65.5" >firedrake</text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (11,683 us, 0.02%)</title><rect x="61.2" y="135" width="0.2" height="15.0" fill="rgb(109.725947894486,109.725947894486,148.656635076352)" rx="2" ry="2" />
<text  x="64.15" y="145.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (12,912 us, 0.03%)</title><rect x="1004.6" y="135" width="0.3" height="15.0" fill="rgb(134.667528505098,151.950840723544,151.950840723544)" rx="2" ry="2" />
<text  x="1007.59" y="145.5" ></text>
</g>
<g >
<title>ParLoopExecute (2,006,285 us, 4.19%)</title><rect x="11.8" y="103" width="49.4" height="15.0" fill="rgb(155.350486986059,137.687066893117,137.687066893117)" rx="2" ry="2" />
<text  x="14.76" y="113.5" >ParL..</text>
</g>
<g >
<title>firedrake.slate.slac.optimise.optimise (38,335 us, 0.08%)</title><rect x="432.1" y="167" width="0.9" height="15.0" fill="rgb(125.033564302937,125.033564302937,151.619399542504)" rx="2" ry="2" />
<text  x="435.06" y="177.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (8,258 us, 0.02%)</title><rect x="1004.9" y="135" width="0.2" height="15.0" fill="rgb(155.448883457194,155.448883457194,145.636896754095)" rx="2" ry="2" />
<text  x="1007.91" y="145.5" ></text>
</g>
<g >
<title>firedrake.functionspace.VectorFunctionSpace (11,683 us, 0.02%)</title><rect x="61.2" y="87" width="0.2" height="15.0" fill="rgb(150.997037524468,140.054908656449,150.997037524468)" rx="2" ry="2" />
<text  x="64.15" y="97.5" ></text>
</g>
<g >
<title>CreateMesh (22,458 us, 0.05%)</title><rect x="62.8" y="71" width="0.5" height="15.0" fill="rgb(139.501381401314,161.011403027693,139.501381401314)" rx="2" ry="2" />
<text  x="65.77" y="81.5" ></text>
</g>
<g >
<title>HybridInit (883,731 us, 1.84%)</title><rect x="1003.5" y="119" width="21.7" height="15.0" fill="rgb(153.591920109596,124.204720840233,124.204720840233)" rx="2" ry="2" />
<text  x="1006.45" y="129.5" ></text>
</g>
<g >
<title>DMPlexStratify (8,399 us, 0.02%)</title><rect x="153.6" y="135" width="0.2" height="15.0" fill="rgb(155.869995796759,141.669967775149,141.669967775149)" rx="2" ry="2" />
<text  x="156.56" y="145.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (1,047,947 us, 2.19%)</title><rect x="155.7" y="199" width="25.8" height="15.0" fill="rgb(150.321103177012,138.322826891094,150.321103177012)" rx="2" ry="2" />
<text  x="158.68" y="209.5" >P..</text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (6,237 us, 0.01%)</title><rect x="1004.8" y="151" width="0.1" height="15.0" fill="rgb(148.47034029628,148.47034029628,111.817802974278)" rx="2" ry="2" />
<text  x="1007.76" y="161.5" ></text>
</g>
<g >
<title>HybridRHS (33,388,900 us, 69.66%)</title><rect x="181.5" y="151" width="822.0" height="15.0" fill="rgb(147.466470013896,159.714760695412,147.466470013896)" rx="2" ry="2" />
<text  x="184.48" y="161.5" >HybridRHS</text>
</g>
<g >
<title>firedrake.matrix_free.operators.ImplicitMatrixContext.__init__ (12,247 us, 0.03%)</title><rect x="155.2" y="103" width="0.3" height="15.0" fill="rgb(139.613481928898,160.993154104598,139.613481928898)" rx="2" ry="2" />
<text  x="158.20" y="113.5" ></text>
</g>
<g >
<title>Mesh: numbering (9,205 us, 0.02%)</title><rect x="62.9" y="87" width="0.2" height="15.0" fill="rgb(114.821150326798,146.805483418059,146.805483418059)" rx="2" ry="2" />
<text  x="65.90" y="97.5" ></text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (23,171,975 us, 48.34%)</title><rect x="433.0" y="167" width="570.5" height="15.0" fill="rgb(128.877865478926,150.449816976018,150.449816976018)" rx="2" ry="2" />
<text  x="436.00" y="177.5" >firedrake.tsfc_interface.compile_form</text>
</g>
<g >
<title>HybridBreak (1,055,518 us, 2.20%)</title><rect x="155.5" y="151" width="26.0" height="15.0" fill="rgb(153.385029196584,122.618557173814,122.618557173814)" rx="2" ry="2" />
<text  x="158.50" y="161.5" >H..</text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (53,944 us, 0.11%)</title><rect x="61.4" y="103" width="1.4" height="15.0" fill="rgb(153.721994465657,125.20195757004,125.20195757004)" rx="2" ry="2" />
<text  x="64.44" y="113.5" ></text>
</g>
<g >
<title>firedrake.assemble.allocate_matrix (12,247 us, 0.03%)</title><rect x="155.2" y="87" width="0.3" height="15.0" fill="rgb(115.594824698983,147.006065662699,147.006065662699)" rx="2" ry="2" />
<text  x="158.20" y="97.5" ></text>
</g>
<g >
<title>FunctionSpaceData: CreateElement (13,763 us, 0.03%)</title><rect x="61.9" y="135" width="0.3" height="15.0" fill="rgb(143.413093449493,154.218209412832,154.218209412832)" rx="2" ry="2" />
<text  x="64.89" y="145.5" ></text>
</g>
<g >
<title>firedrake.function.Function.__init__ (6,900 us, 0.01%)</title><rect x="432.8" y="183" width="0.2" height="15.0" fill="rgb(133.664813534973,161.961541982679,133.664813534973)" rx="2" ry="2" />
<text  x="435.83" y="193.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.action (7,020 us, 0.01%)</title><rect x="155.3" y="119" width="0.2" height="15.0" fill="rgb(152.2358326669,113.808050446235,113.808050446235)" rx="2" ry="2" />
<text  x="158.32" y="129.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (11,683 us, 0.02%)</title><rect x="61.2" y="151" width="0.2" height="15.0" fill="rgb(155.42455983246,138.254958715529,138.254958715529)" rx="2" ry="2" />
<text  x="64.15" y="161.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (8,258 us, 0.02%)</title><rect x="1004.9" y="167" width="0.2" height="15.0" fill="rgb(116.495514048651,147.239577716317,147.239577716317)" rx="2" ry="2" />
<text  x="1007.91" y="177.5" ></text>
</g>
<g >
<title>firedrake.mesh.MeshTopology._facets (21,809 us, 0.05%)</title><rect x="62.2" y="135" width="0.6" height="15.0" fill="rgb(127.725192016056,127.725192016056,152.140359745043)" rx="2" ry="2" />
<text  x="65.23" y="145.5" ></text>
</g>
<g >
<title>CreateMesh (5,304 us, 0.01%)</title><rect x="62.8" y="87" width="0.1" height="15.0" fill="rgb(150.549122988548,150.549122988548,121.891903713734)" rx="2" ry="2" />
<text  x="65.77" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (11,683 us, 0.02%)</title><rect x="61.2" y="119" width="0.2" height="15.0" fill="rgb(143.659618912183,143.659618912183,155.2244423701)" rx="2" ry="2" />
<text  x="64.15" y="129.5" ></text>
</g>
<g >
<title>ParLoopExecute (793,901 us, 1.66%)</title><rect x="1005.7" y="151" width="19.5" height="15.0" fill="rgb(135.294335089314,152.113346134267,152.113346134267)" rx="2" ry="2" />
<text  x="1008.66" y="161.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (2,135,444 us, 4.46%)</title><rect x="1107.5" y="151" width="52.6" height="15.0" fill="rgb(146.99297693514,159.791840964047,146.99297693514)" rx="2" ry="2" />
<text  x="1110.52" y="161.5" >pyop..</text>
</g>
<g >
<title>SNESSolve (42,022,095 us, 87.67%)</title><rect x="155.5" y="87" width="1034.5" height="15.0" fill="rgb(154.925287707981,134.42720576119,134.42720576119)" rx="2" ry="2" />
<text  x="158.50" y="97.5" >SNESSolve</text>
</g>
<g >
<title>ParLoopExecute (5,471,059 us, 11.41%)</title><rect x="1025.4" y="119" width="134.7" height="15.0" fill="rgb(142.296425276774,160.556395885176,142.296425276774)" rx="2" ry="2" />
<text  x="1028.40" y="129.5" >ParLoopExecute</text>
</g>
<g >
<title>CreateFunctionSpace (8,258 us, 0.02%)</title><rect x="1004.9" y="183" width="0.2" height="15.0" fill="rgb(146.776159587335,129.238908942545,146.776159587335)" rx="2" ry="2" />
<text  x="1007.91" y="193.5" ></text>
</g>
<g >
<title>all (47,932,259 us, 100%)</title><rect x="10.0" y="39" width="1180.0" height="15.0" fill="rgb(148.436543656341,148.436543656341,111.654019257652)" rx="2" ry="2" />
<text  x="13.00" y="49.5" ></text>
</g>
<g >
<title>PCApply (34,444,418 us, 71.86%)</title><rect x="155.5" y="119" width="848.0" height="15.0" fill="rgb(105.168592167787,144.302968339797,144.302968339797)" rx="2" ry="2" />
<text  x="158.50" y="129.5" >PCApply</text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (12,834 us, 0.03%)</title><rect x="154.4" y="103" width="0.3" height="15.0" fill="rgb(118.23302284917,118.23302284917,150.303165712742)" rx="2" ry="2" />
<text  x="157.38" y="113.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (2,006,285 us, 4.19%)</title><rect x="11.8" y="135" width="49.4" height="15.0" fill="rgb(151.039142530467,159.133162843877,151.039142530467)" rx="2" ry="2" />
<text  x="14.76" y="145.5" >pyop..</text>
</g>
<g >
<title>CreateFunctionSpace (11,683 us, 0.02%)</title><rect x="61.2" y="103" width="0.2" height="15.0" fill="rgb(109.834488326589,145.512645121708,145.512645121708)" rx="2" ry="2" />
<text  x="64.15" y="113.5" ></text>
</g>
<g >
<title>firedrake.utility_meshes.RectangleMesh (77,682 us, 0.16%)</title><rect x="152.3" y="87" width="1.9" height="15.0" fill="rgb(132.115498710698,162.21375602384,132.115498710698)" rx="2" ry="2" />
<text  x="155.33" y="97.5" ></text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (1,214,987 us, 2.53%)</title><rect x="1160.1" y="119" width="29.9" height="15.0" fill="rgb(124.209109514417,149.239398762997,149.239398762997)" rx="2" ry="2" />
<text  x="1163.09" y="129.5" >f..</text>
</g>
<g >
<title>DMPlexInterp (19,234 us, 0.04%)</title><rect x="153.8" y="119" width="0.4" height="15.0" fill="rgb(155.533041583068,155.533041583068,146.044739979482)" rx="2" ry="2" />
<text  x="156.77" y="129.5" ></text>
</g>
<g >
<title>DMPlexBuFrCeLi (8,399 us, 0.02%)</title><rect x="153.6" y="119" width="0.2" height="15.0" fill="rgb(148.32627065349,148.32627065349,111.119619320757)" rx="2" ry="2" />
<text  x="156.56" y="129.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (8,258 us, 0.02%)</title><rect x="1004.9" y="151" width="0.2" height="15.0" fill="rgb(151.956251015608,151.956251015608,128.711062614098)" rx="2" ry="2" />
<text  x="1007.91" y="161.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (3,329,512 us, 6.95%)</title><rect x="1025.6" y="151" width="81.9" height="15.0" fill="rgb(136.557472500805,136.557472500805,153.849833387253)" rx="2" ry="2" />
<text  x="1028.55" y="161.5" >pyop2.gl..</text>
</g>
<g >
<title>firedrake.parloops.par_loop (1,055,518 us, 2.20%)</title><rect x="155.5" y="167" width="26.0" height="15.0" fill="rgb(152.947997518622,119.267980976104,119.267980976104)" rx="2" ry="2" />
<text  x="158.50" y="177.5" >f..</text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (6,237 us, 0.01%)</title><rect x="1004.8" y="183" width="0.1" height="15.0" fill="rgb(156.038770272345,142.963905421314,142.963905421314)" rx="2" ry="2" />
<text  x="1007.76" y="193.5" ></text>
</g>
<g >
<title>Mesh: reorder (7,949 us, 0.02%)</title><rect x="63.1" y="87" width="0.2" height="15.0" fill="rgb(121.024145083659,121.024145083659,150.843382919418)" rx="2" ry="2" />
<text  x="66.12" y="97.5" ></text>
</g>
<g >
<title>firedrake.__init__ (3,580,259 us, 7.47%)</title><rect x="64.2" y="71" width="88.1" height="15.0" fill="rgb(155.970898274868,142.443553440658,142.443553440658)" rx="2" ry="2" />
<text  x="67.19" y="81.5" >firedrake..</text>
</g>
<g >
<title>firedrake.parloops.par_loop (799,935 us, 1.67%)</title><rect x="1005.5" y="135" width="19.7" height="15.0" fill="rgb(125.642829545168,163.267446353112,125.642829545168)" rx="2" ry="2" />
<text  x="1008.52" y="145.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.__init__ (32,722 us, 0.07%)</title><rect x="154.7" y="71" width="0.8" height="15.0" fill="rgb(114.479871758682,146.717003789288,146.717003789288)" rx="2" ry="2" />
<text  x="157.69" y="81.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (793,901 us, 1.66%)</title><rect x="1005.7" y="167" width="19.5" height="15.0" fill="rgb(155.774394447694,140.93702409899,140.93702409899)" rx="2" ry="2" />
<text  x="1008.66" y="177.5" ></text>
</g>
<g >
<title>PCSetUp (883,731 us, 1.84%)</title><rect x="1003.5" y="103" width="21.7" height="15.0" fill="rgb(133.270676564217,162.025703815127,133.270676564217)" rx="2" ry="2" />
<text  x="1006.45" y="113.5" ></text>
</g>
<g >
<title>CreateMesh (7,487 us, 0.02%)</title><rect x="152.8" y="119" width="0.2" height="15.0" fill="rgb(108.911014095991,145.273225876738,145.273225876738)" rx="2" ry="2" />
<text  x="155.79" y="129.5" ></text>
</g>
<g >
<title>PetscBarrier (35,384 us, 0.07%)</title><rect x="63.3" y="71" width="0.9" height="15.0" fill="rgb(143.262859626442,160.399069363137,143.262859626442)" rx="2" ry="2" />
<text  x="66.32" y="81.5" ></text>
</g>
<g >
<title>firedrake.utility_meshes.SquareMesh (77,682 us, 0.16%)</title><rect x="152.3" y="71" width="1.9" height="15.0" fill="rgb(104.123627424737,144.032051554561,144.032051554561)" rx="2" ry="2" />
<text  x="155.33" y="81.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (53,944 us, 0.11%)</title><rect x="61.4" y="87" width="1.4" height="15.0" fill="rgb(139.68035195245,139.68035195245,154.454261668216)" rx="2" ry="2" />
<text  x="64.44" y="97.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_form0_cell_integral_otherwise (3,335,615 us, 6.96%)</title><rect x="1025.4" y="135" width="82.1" height="15.0" fill="rgb(118.757121349435,147.825920349854,147.825920349854)" rx="2" ry="2" />
<text  x="1028.40" y="145.5" >Parloop_..</text>
</g>
<g >
<title>firedrake.variational_solver.LinearVariationalProblem.__init__ (18,231 us, 0.04%)</title><rect x="154.2" y="71" width="0.5" height="15.0" fill="rgb(111.976073125907,146.06787081042,146.06787081042)" rx="2" ry="2" />
<text  x="157.24" y="81.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (6,237 us, 0.01%)</title><rect x="1004.8" y="167" width="0.1" height="15.0" fill="rgb(121.548521658113,121.548521658113,150.944875159635)" rx="2" ry="2" />
<text  x="1007.76" y="177.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.solve (42,022,095 us, 87.67%)</title><rect x="155.5" y="71" width="1034.5" height="15.0" fill="rgb(108.356961713267,145.129582666403,145.129582666403)" rx="2" ry="2" />
<text  x="158.50" y="81.5" >firedrake.variational_solver.NonlinearVariationalSolver.solve</text>
</g>
</g>
</svg>
