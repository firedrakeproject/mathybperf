<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="283" onload="init(evt)" viewBox="0 0 1200 283" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:13px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:18px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 13 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (1 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="283.0" fill="url(#background)"  />
<text id="title" x="600.00" y="26" >Firedrake example</text>
<text id="details" x="10.00" y="265" > </text>
<text id="unzoom" x="10.00" y="26" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="26" >Search</text>
<text id="ignorecase" x="1174.00" y="26" >ic</text>
<text id="matched" x="1090.00" y="265" > </text>
<g id="frames">
<g >
<title>firedrake.functionspace.MixedFunctionSpace (709 us, 0.02%)</title><rect x="794.6" y="71" width="0.2" height="15.0" fill="rgb(118.398889763429,147.733045494222,147.733045494222)" rx="2" ry="2" />
<text  x="797.65" y="81.5" ></text>
</g>
<g >
<title>firedrake.mesh._from_cell_list (5,067 us, 0.11%)</title><rect x="795.6" y="103" width="1.3" height="15.0" fill="rgb(140.382086454302,140.382086454302,154.59008124922)" rx="2" ry="2" />
<text  x="798.62" y="113.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (2,404 us, 0.05%)</title><rect x="1103.9" y="167" width="0.6" height="15.0" fill="rgb(130.913349256047,162.409454772271,130.913349256047)" rx="2" ry="2" />
<text  x="1106.90" y="177.5" ></text>
</g>
<g >
<title>firedrake.mesh.MeshTopology._facets (18,726 us, 0.40%)</title><rect x="52.6" y="135" width="4.7" height="15.0" fill="rgb(143.246294454798,143.246294454798,155.144444088025)" rx="2" ry="2" />
<text  x="55.61" y="145.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.solve (1,533,226 us, 32.74%)</title><rect x="803.7" y="71" width="386.3" height="15.0" fill="rgb(152.836389911475,118.412322654639,118.412322654639)" rx="2" ry="2" />
<text  x="806.69" y="81.5" >firedrake.variational_solver.NonlinearVariationa..</text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (39,820 us, 0.85%)</title><rect x="47.3" y="119" width="10.0" height="15.0" fill="rgb(152.72308198584,152.72308198584,132.427243469839)" rx="2" ry="2" />
<text  x="50.29" y="129.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.LinearVariationalProblem.__init__ (16,009 us, 0.34%)</title><rect x="796.9" y="71" width="4.0" height="15.0" fill="rgb(114.845013792138,146.811670242406,146.811670242406)" rx="2" ry="2" />
<text  x="799.89" y="81.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_form1_cell_integral_otherwise (71,908 us, 1.54%)</title><rect x="1161.7" y="135" width="18.2" height="15.0" fill="rgb(155.664170802847,155.664170802847,146.680212352259)" rx="2" ry="2" />
<text  x="1164.74" y="145.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (94,510 us, 2.02%)</title><rect x="1137.9" y="151" width="23.8" height="15.0" fill="rgb(148.348554659944,148.348554659944,111.227611044342)" rx="2" ry="2" />
<text  x="1140.93" y="161.5" >p..</text>
</g>
<g >
<title>PCSetUp (155,389 us, 3.32%)</title><rect x="1095.9" y="103" width="39.2" height="15.0" fill="rgb(104.660611374044,144.171269615493,144.171269615493)" rx="2" ry="2" />
<text  x="1098.93" y="113.5" >PCS..</text>
</g>
<g >
<title>firedrake.utility_meshes.SquareMesh (8,197 us, 0.18%)</title><rect x="794.8" y="71" width="2.1" height="15.0" fill="rgb(155.491210576912,138.765947756322,138.765947756322)" rx="2" ry="2" />
<text  x="797.83" y="81.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (70,129 us, 1.50%)</title><rect x="805.6" y="199" width="17.7" height="15.0" fill="rgb(134.634474859153,134.634474859153,153.47764029532)" rx="2" ry="2" />
<text  x="808.59" y="209.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (2,554 us, 0.05%)</title><rect x="1109.0" y="215" width="0.7" height="15.0" fill="rgb(145.929330040262,127.06890822817,145.929330040262)" rx="2" ry="2" />
<text  x="1112.01" y="225.5" ></text>
</g>
<g >
<title>firedrake.extrusion_utils.make_extruded_coords (133,165 us, 2.84%)</title><rect x="10.2" y="87" width="33.5" height="15.0" fill="rgb(155.352209371069,137.700271844865,137.700271844865)" rx="2" ry="2" />
<text  x="13.19" y="97.5" >fi..</text>
</g>
<g >
<title>ParLoopExecute (72,881 us, 1.56%)</title><rect x="1116.2" y="151" width="18.4" height="15.0" fill="rgb(113.694896620905,113.694896620905,149.42481870082)" rx="2" ry="2" />
<text  x="1119.21" y="161.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (10,180 us, 0.22%)</title><rect x="1107.3" y="167" width="2.6" height="15.0" fill="rgb(152.93146493131,119.141231140045,119.141231140045)" rx="2" ry="2" />
<text  x="1110.29" y="177.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.action (4,469 us, 0.10%)</title><rect x="801.9" y="119" width="1.1" height="15.0" fill="rgb(151.538928261595,141.443503670336,151.538928261595)" rx="2" ry="2" />
<text  x="804.88" y="129.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (2,554 us, 0.05%)</title><rect x="1109.0" y="231" width="0.7" height="15.0" fill="rgb(132.802811782168,162.101867849415,132.802811782168)" rx="2" ry="2" />
<text  x="1112.01" y="241.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (2,729 us, 0.06%)</title><rect x="803.0" y="119" width="0.7" height="15.0" fill="rgb(139.165455961889,153.116970064193,153.116970064193)" rx="2" ry="2" />
<text  x="806.00" y="129.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (99,542 us, 2.13%)</title><rect x="18.7" y="135" width="25.0" height="15.0" fill="rgb(150.064803284735,159.291776209462,150.064803284735)" rx="2" ry="2" />
<text  x="21.66" y="145.5" >p..</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (70,129 us, 1.50%)</title><rect x="805.6" y="215" width="17.7" height="15.0" fill="rgb(154.934911260289,134.500986328883,134.500986328883)" rx="2" ry="2" />
<text  x="808.59" y="225.5" ></text>
</g>
<g >
<title>Log_Event_form1_cell_integral_otherwise (2,000 us, 0.04%)</title><rect x="1162.3" y="151" width="0.5" height="15.0" fill="rgb(112.036161291376,146.08344922369,146.08344922369)" rx="2" ry="2" />
<text  x="1165.26" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspace.VectorFunctionSpace (9,361 us, 0.20%)</title><rect x="43.7" y="87" width="2.4" height="15.0" fill="rgb(111.254503915353,111.254503915353,148.952484628778)" rx="2" ry="2" />
<text  x="46.74" y="97.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (71,819 us, 1.53%)</title><rect x="1116.5" y="183" width="18.1" height="15.0" fill="rgb(135.825596536579,135.825596536579,153.708179974822)" rx="2" ry="2" />
<text  x="1119.47" y="193.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (71,819 us, 1.53%)</title><rect x="1116.5" y="167" width="18.1" height="15.0" fill="rgb(107.368709992643,144.873369257352,144.873369257352)" rx="2" ry="2" />
<text  x="1119.47" y="177.5" ></text>
</g>
<g >
<title>firedrake.assemble.allocate_matrix (919 us, 0.02%)</title><rect x="1106.2" y="135" width="0.2" height="15.0" fill="rgb(114.844267119387,114.844267119387,149.647277506978)" rx="2" ry="2" />
<text  x="1109.16" y="145.5" ></text>
</g>
<g >
<title>firedrake.parloops.par_loop (78,704 us, 1.68%)</title><rect x="1114.7" y="135" width="19.9" height="15.0" fill="rgb(112.759405409503,146.270956958019,146.270956958019)" rx="2" ry="2" />
<text  x="1117.74" y="145.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.derivative (1,026 us, 0.02%)</title><rect x="800.7" y="103" width="0.2" height="15.0" fill="rgb(128.366741410393,150.31730332862,150.31730332862)" rx="2" ry="2" />
<text  x="803.67" y="113.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (39,820 us, 0.85%)</title><rect x="47.3" y="103" width="10.0" height="15.0" fill="rgb(140.317190267684,153.415567847177,153.415567847177)" rx="2" ry="2" />
<text  x="50.29" y="113.5" ></text>
</g>
<g >
<title>CreateMesh (3,401 us, 0.07%)</title><rect x="58.4" y="87" width="0.9" height="15.0" fill="rgb(148.207555610692,148.207555610692,110.544307959507)" rx="2" ry="2" />
<text  x="61.42" y="97.5" ></text>
</g>
<g >
<title>SCForwardElim (1,159,861 us, 24.77%)</title><rect x="803.7" y="135" width="292.2" height="15.0" fill="rgb(156.017320042261,142.799453657332,142.799453657332)" rx="2" ry="2" />
<text  x="806.69" y="145.5" >SCForwardElim</text>
</g>
<g >
<title>CreateFunctionSpace (42,667 us, 0.91%)</title><rect x="46.6" y="71" width="10.7" height="15.0" fill="rgb(154.009291335451,127.404566905127,127.404566905127)" rx="2" ry="2" />
<text  x="49.58" y="81.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (67,849 us, 1.45%)</title><rect x="1162.8" y="151" width="17.1" height="15.0" fill="rgb(118.367615949147,147.724937468297,147.724937468297)" rx="2" ry="2" />
<text  x="1165.76" y="161.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (1,609 us, 0.03%)</title><rect x="1189.6" y="183" width="0.4" height="15.0" fill="rgb(133.268403001918,162.02607392992,133.268403001918)" rx="2" ry="2" />
<text  x="1192.59" y="193.5" ></text>
</g>
<g >
<title>firedrake.interpolation.make_interpolator (18,135 us, 0.39%)</title><rect x="1110.2" y="135" width="4.5" height="15.0" fill="rgb(149.82839602502,149.82839602502,118.399149967406)" rx="2" ry="2" />
<text  x="1113.17" y="145.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (2,404 us, 0.05%)</title><rect x="1103.9" y="199" width="0.6" height="15.0" fill="rgb(134.392195073344,161.843131034572,134.392195073344)" rx="2" ry="2" />
<text  x="1106.90" y="209.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (3,647 us, 0.08%)</title><rect x="1108.7" y="199" width="1.0" height="15.0" fill="rgb(138.430390202001,138.430390202001,154.212333587484)" rx="2" ry="2" />
<text  x="1111.74" y="209.5" ></text>
</g>
<g >
<title>firedrake.mesh.make_mesh_from_coordinates (1,005 us, 0.02%)</title><rect x="46.3" y="87" width="0.3" height="15.0" fill="rgb(151.874607789652,151.874607789652,128.315406980619)" rx="2" ry="2" />
<text  x="49.32" y="97.5" ></text>
</g>
<g >
<title>firedrake.mesh._Facets.__init__ (1,380 us, 0.03%)</title><rect x="57.0" y="151" width="0.3" height="15.0" fill="rgb(148.307294683244,148.307294683244,111.027658849567)" rx="2" ry="2" />
<text  x="59.98" y="161.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (10,340 us, 0.22%)</title><rect x="1103.6" y="135" width="2.6" height="15.0" fill="rgb(136.417571293922,102.695026440676,136.417571293922)" rx="2" ry="2" />
<text  x="1106.56" y="145.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (7,278 us, 0.16%)</title><rect x="1107.8" y="183" width="1.9" height="15.0" fill="rgb(153.655823678108,124.694648198826,124.694648198826)" rx="2" ry="2" />
<text  x="1110.82" y="193.5" ></text>
</g>
<g >
<title>HybridBreak (77,657 us, 1.66%)</title><rect x="803.7" y="151" width="19.6" height="15.0" fill="rgb(125.548909427812,125.548909427812,151.719143760222)" rx="2" ry="2" />
<text  x="806.69" y="161.5" ></text>
</g>
<g >
<title>ParLoopExecute (173,268 us, 3.70%)</title><rect x="1136.2" y="119" width="43.7" height="15.0" fill="rgb(140.025720672082,140.025720672082,154.521107226855)" rx="2" ry="2" />
<text  x="1139.20" y="129.5" >Par..</text>
</g>
<g >
<title>HybridRHS (1,082,204 us, 23.11%)</title><rect x="823.3" y="151" width="272.6" height="15.0" fill="rgb(155.744470113415,140.707604202845,140.707604202845)" rx="2" ry="2" />
<text  x="826.26" y="161.5" >HybridRHS</text>
</g>
<g >
<title>Parloop_Cells_wrap_pyop2_kernel_uniform_extrusion (99,542 us, 2.13%)</title><rect x="18.7" y="119" width="25.0" height="15.0" fill="rgb(155.560260674723,139.295331839543,139.295331839543)" rx="2" ry="2" />
<text  x="21.66" y="129.5" >P..</text>
</g>
<g >
<title>firedrake.functionspace.make_scalar_element (1,497 us, 0.03%)</title><rect x="1108.4" y="199" width="0.3" height="15.0" fill="rgb(149.359024920181,135.857501357964,149.359024920181)" rx="2" ry="2" />
<text  x="1111.36" y="209.5" ></text>
</g>
<g >
<title>Mesh: reorder (3,721 us, 0.08%)</title><rect x="60.9" y="87" width="0.9" height="15.0" fill="rgb(148.161745220452,132.789472127409,148.161745220452)" rx="2" ry="2" />
<text  x="63.88" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (879 us, 0.02%)</title><rect x="1189.8" y="199" width="0.2" height="15.0" fill="rgb(149.187980635358,149.187980635358,115.295598463656)" rx="2" ry="2" />
<text  x="1192.78" y="209.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (5,644 us, 0.12%)</title><rect x="1104.7" y="183" width="1.5" height="15.0" fill="rgb(145.712014424865,145.712014424865,155.621680211264)" rx="2" ry="2" />
<text  x="1107.74" y="193.5" ></text>
</g>
<g >
<title>PetscBarrier (25,247 us, 0.54%)</title><rect x="61.8" y="71" width="6.4" height="15.0" fill="rgb(142.726868454731,160.486323739927,142.726868454731)" rx="2" ry="2" />
<text  x="64.81" y="81.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (9,361 us, 0.20%)</title><rect x="43.7" y="119" width="2.4" height="15.0" fill="rgb(140.713951055064,160.81400796778,140.713951055064)" rx="2" ry="2" />
<text  x="46.74" y="129.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (2,022 us, 0.04%)</title><rect x="1134.6" y="135" width="0.5" height="15.0" fill="rgb(155.773533357439,140.93042240703,140.93042240703)" rx="2" ry="2" />
<text  x="1137.57" y="145.5" ></text>
</g>
<g >
<title>FunctionSpaceData: CreateElement (779 us, 0.02%)</title><rect x="45.9" y="167" width="0.2" height="15.0" fill="rgb(136.974605842344,104.122427471005,136.974605842344)" rx="2" ry="2" />
<text  x="48.90" y="177.5" ></text>
</g>
<g >
<title>SNESFunctionEval (217,976 us, 4.65%)</title><rect x="1135.1" y="103" width="54.9" height="15.0" fill="rgb(155.568751455543,139.360427825831,139.360427825831)" rx="2" ry="2" />
<text  x="1138.08" y="113.5" >SNESF..</text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (9,361 us, 0.20%)</title><rect x="43.7" y="135" width="2.4" height="15.0" fill="rgb(105.147836112935,144.297587140391,144.297587140391)" rx="2" ry="2" />
<text  x="46.74" y="145.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalProblem.__init__ (11,281 us, 0.24%)</title><rect x="798.1" y="87" width="2.8" height="15.0" fill="rgb(151.040421516844,151.040421516844,124.272811966242)" rx="2" ry="2" />
<text  x="801.08" y="97.5" ></text>
</g>
<g >
<title>firedrake (4,683,333 us, 100.00%)</title><rect x="10.0" y="55" width="1180.0" height="15.0" fill="rgb(117.14247033407,147.407307123648,147.407307123648)" rx="2" ry="2" />
<text  x="13.00" y="65.5" >firedrake</text>
</g>
<g >
<title>firedrake.function.Function.split (1,026 us, 0.02%)</title><rect x="800.7" y="119" width="0.2" height="15.0" fill="rgb(112.469980495395,146.195920869176,146.195920869176)" rx="2" ry="2" />
<text  x="803.67" y="129.5" ></text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (40,246 us, 0.86%)</title><rect x="1179.9" y="119" width="10.1" height="15.0" fill="rgb(145.085178296667,154.651712891728,154.651712891728)" rx="2" ry="2" />
<text  x="1182.86" y="129.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_form0_cell_integral_otherwise (100,304 us, 2.14%)</title><rect x="1136.5" y="135" width="25.2" height="15.0" fill="rgb(154.298102890628,129.618788828144,129.618788828144)" rx="2" ry="2" />
<text  x="1139.47" y="145.5" >P..</text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (709 us, 0.02%)</title><rect x="794.6" y="87" width="0.2" height="15.0" fill="rgb(155.106492664672,135.816443762482,135.816443762482)" rx="2" ry="2" />
<text  x="797.65" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (40,975 us, 0.87%)</title><rect x="47.0" y="87" width="10.3" height="15.0" fill="rgb(118.630381616529,118.630381616529,150.380073861264)" rx="2" ry="2" />
<text  x="50.00" y="97.5" ></text>
</g>
<g >
<title>CreateMesh (1,260 us, 0.03%)</title><rect x="795.3" y="119" width="0.3" height="15.0" fill="rgb(132.810057539906,93.4507724460087,132.810057539906)" rx="2" ry="2" />
<text  x="798.30" y="129.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (13,731 us, 0.29%)</title><rect x="1106.4" y="151" width="3.5" height="15.0" fill="rgb(152.983732500881,119.541949173423,119.541949173423)" rx="2" ry="2" />
<text  x="1109.39" y="161.5" ></text>
</g>
<g >
<title>Log_Event_form0_cell_integral_otherwise (3,737 us, 0.08%)</title><rect x="1137.0" y="151" width="0.9" height="15.0" fill="rgb(154.124505415137,154.124505415137,139.21875701182)" rx="2" ry="2" />
<text  x="1139.99" y="161.5" ></text>
</g>
<g >
<title>firedrake.__init__ (2,883,319 us, 61.57%)</title><rect x="68.2" y="71" width="726.4" height="15.0" fill="rgb(133.684889692635,133.684889692635,153.293849617929)" rx="2" ry="2" />
<text  x="71.18" y="81.5" >firedrake.__init__</text>
</g>
<g >
<title>firedrake.assemble.allocate_matrix (7,198 us, 0.15%)</title><rect x="801.9" y="87" width="1.8" height="15.0" fill="rgb(150.943737366508,150.943737366508,123.804265699231)" rx="2" ry="2" />
<text  x="804.88" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspace.make_scalar_element (860 us, 0.02%)</title><rect x="46.8" y="87" width="0.2" height="15.0" fill="rgb(141.426062980533,160.698082770611,141.426062980533)" rx="2" ry="2" />
<text  x="49.79" y="97.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (1,609 us, 0.03%)</title><rect x="1189.6" y="167" width="0.4" height="15.0" fill="rgb(156.542896307558,146.828871691278,146.828871691278)" rx="2" ry="2" />
<text  x="1192.59" y="177.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (5,644 us, 0.12%)</title><rect x="1104.7" y="167" width="1.5" height="15.0" fill="rgb(139.790362353061,139.790362353061,154.475554003818)" rx="2" ry="2" />
<text  x="1107.74" y="177.5" ></text>
</g>
<g >
<title>firedrake.functionspace.MixedFunctionSpace (3,765 us, 0.08%)</title><rect x="1103.6" y="151" width="0.9" height="15.0" fill="rgb(148.25377652467,148.25377652467,110.768301619556)" rx="2" ry="2" />
<text  x="1106.56" y="161.5" ></text>
</g>
<g >
<title>firedrake.utility_meshes.RectangleMesh (8,197 us, 0.18%)</title><rect x="794.8" y="87" width="2.1" height="15.0" fill="rgb(151.829699575237,151.829699575237,128.097774864611)" rx="2" ry="2" />
<text  x="797.83" y="97.5" ></text>
</g>
<g >
<title>firedrake.function.Function.__init__ (1,266 us, 0.03%)</title><rect x="1109.9" y="135" width="0.3" height="15.0" fill="rgb(146.964832784912,146.964832784912,155.864161184177)" rx="2" ry="2" />
<text  x="1112.85" y="145.5" ></text>
</g>
<g >
<title>SNESSolve (1,533,226 us, 32.74%)</title><rect x="803.7" y="87" width="386.3" height="15.0" fill="rgb(150.835460859468,150.835460859468,123.279541088192)" rx="2" ry="2" />
<text  x="806.69" y="97.5" >SNESSolve</text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (2,404 us, 0.05%)</title><rect x="1103.9" y="183" width="0.6" height="15.0" fill="rgb(153.942552633816,126.892903525919,126.892903525919)" rx="2" ry="2" />
<text  x="1106.90" y="193.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (9,361 us, 0.20%)</title><rect x="43.7" y="103" width="2.4" height="15.0" fill="rgb(138.686827788322,161.144004778645,138.686827788322)" rx="2" ry="2" />
<text  x="46.74" y="113.5" ></text>
</g>
<g >
<title>KSPSolve (1,159,861 us, 24.77%)</title><rect x="803.7" y="103" width="292.2" height="15.0" fill="rgb(148.490677672241,133.632361535118,148.490677672241)" rx="2" ry="2" />
<text  x="806.69" y="113.5" >KSPSolve</text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (10,255 us, 0.22%)</title><rect x="798.1" y="103" width="2.6" height="15.0" fill="rgb(156.562250084024,146.977250644184,146.977250644184)" rx="2" ry="2" />
<text  x="801.08" y="113.5" ></text>
</g>
<g >
<title>all (4,683,333 us, 100%)</title><rect x="10.0" y="39" width="1180.0" height="15.0" fill="rgb(136.944711467499,161.427605109942,136.944711467499)" rx="2" ry="2" />
<text  x="13.00" y="49.5" ></text>
</g>
<g >
<title>FunctionSpaceData: CreateElement (4,358 us, 0.09%)</title><rect x="1105.1" y="199" width="1.1" height="15.0" fill="rgb(111.736779863662,111.736779863662,149.045828360709)" rx="2" ry="2" />
<text  x="1108.06" y="209.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.WithGeometry.split (770 us, 0.02%)</title><rect x="1109.7" y="183" width="0.2" height="15.0" fill="rgb(111.050310861566,111.050310861566,148.912963392561)" rx="2" ry="2" />
<text  x="1112.66" y="193.5" ></text>
</g>
<g >
<title>PCApply (1,159,861 us, 24.77%)</title><rect x="803.7" y="119" width="292.2" height="15.0" fill="rgb(143.716651316301,143.716651316301,155.235480899929)" rx="2" ry="2" />
<text  x="806.69" y="129.5" >PCApply</text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (9,361 us, 0.20%)</title><rect x="43.7" y="151" width="2.4" height="15.0" fill="rgb(150.212081605232,150.212081605232,120.258549317661)" rx="2" ry="2" />
<text  x="46.74" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspace.make_scalar_element (931 us, 0.02%)</title><rect x="1104.5" y="151" width="0.2" height="15.0" fill="rgb(143.802796106716,154.319243435075,154.319243435075)" rx="2" ry="2" />
<text  x="1107.50" y="161.5" ></text>
</g>
<g >
<title>CreateMesh (1,260 us, 0.03%)</title><rect x="795.3" y="103" width="0.3" height="15.0" fill="rgb(143.492843612832,154.238885381105,154.238885381105)" rx="2" ry="2" />
<text  x="798.30" y="113.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (2,404 us, 0.05%)</title><rect x="1103.9" y="215" width="0.6" height="15.0" fill="rgb(112.776810384973,146.275469359067,146.275469359067)" rx="2" ry="2" />
<text  x="1106.90" y="225.5" ></text>
</g>
<g >
<title>CreateExtMesh (145,170 us, 3.10%)</title><rect x="10.0" y="71" width="36.6" height="15.0" fill="rgb(118.414487173862,118.414487173862,150.338287840102)" rx="2" ry="2" />
<text  x="13.00" y="81.5" >Cr..</text>
</g>
<g >
<title>Mesh: numbering (6,359 us, 0.14%)</title><rect x="59.3" y="87" width="1.6" height="15.0" fill="rgb(152.872151376891,118.686493889496,118.686493889496)" rx="2" ry="2" />
<text  x="62.27" y="97.5" ></text>
</g>
<g >
<title>firedrake.matrix_free.operators.ImplicitMatrixContext.__init__ (7,198 us, 0.15%)</title><rect x="801.9" y="103" width="1.8" height="15.0" fill="rgb(134.125531438116,151.810322965437,151.810322965437)" rx="2" ry="2" />
<text  x="804.88" y="113.5" ></text>
</g>
<g >
<title>ParLoopExecute (100,339 us, 2.14%)</title><rect x="18.5" y="103" width="25.2" height="15.0" fill="rgb(141.602264106961,141.602264106961,154.826244665863)" rx="2" ry="2" />
<text  x="21.46" y="113.5" >P..</text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (13,731 us, 0.29%)</title><rect x="1106.4" y="135" width="3.5" height="15.0" fill="rgb(148.534733528309,148.534733528309,112.129862483344)" rx="2" ry="2" />
<text  x="1109.39" y="145.5" ></text>
</g>
<g >
<title>ParLoopExecute (70,973 us, 1.52%)</title><rect x="805.4" y="183" width="17.9" height="15.0" fill="rgb(120.398976987201,148.251586626311,148.251586626311)" rx="2" ry="2" />
<text  x="808.38" y="193.5" ></text>
</g>
<g >
<title>CreateMesh (17,811 us, 0.38%)</title><rect x="57.3" y="71" width="4.5" height="15.0" fill="rgb(148.648405156775,134.036538214236,148.648405156775)" rx="2" ry="2" />
<text  x="60.33" y="81.5" ></text>
</g>
<g >
<title>FunctionSpaceData: CreateElement (6,323 us, 0.14%)</title><rect x="51.0" y="135" width="1.6" height="15.0" fill="rgb(156.528911066802,146.72165151215,146.72165151215)" rx="2" ry="2" />
<text  x="54.02" y="145.5" ></text>
</g>
<g >
<title>DMPlexStratify (3,367 us, 0.07%)</title><rect x="66.8" y="87" width="0.9" height="15.0" fill="rgb(153.619517363374,153.619517363374,136.771507222505)" rx="2" ry="2" />
<text  x="69.81" y="97.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.__init__ (10,978 us, 0.23%)</title><rect x="800.9" y="71" width="2.8" height="15.0" fill="rgb(149.518220655632,149.518220655632,116.895992408062)" rx="2" ry="2" />
<text  x="803.93" y="81.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (6,678 us, 0.14%)</title><rect x="1188.3" y="135" width="1.7" height="15.0" fill="rgb(135.309276789141,161.693838662233,135.309276789141)" rx="2" ry="2" />
<text  x="1191.32" y="145.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.action (4,728 us, 0.10%)</title><rect x="796.9" y="87" width="1.2" height="15.0" fill="rgb(152.760195903987,117.828168597237,117.828168597237)" rx="2" ry="2" />
<text  x="799.89" y="97.5" ></text>
</g>
<g >
<title>DMPlexSymmetrize (2,057 us, 0.04%)</title><rect x="67.7" y="87" width="0.5" height="15.0" fill="rgb(153.787532122953,153.787532122953,137.585732595848)" rx="2" ry="2" />
<text  x="70.66" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (5,644 us, 0.12%)</title><rect x="1104.7" y="151" width="1.5" height="15.0" fill="rgb(132.46968133214,162.156098387791,132.46968133214)" rx="2" ry="2" />
<text  x="1107.74" y="161.5" ></text>
</g>
<g >
<title>DMPlexInterp (3,495 us, 0.07%)</title><rect x="796.0" y="119" width="0.9" height="15.0" fill="rgb(132.023146103077,162.228790169267,132.023146103077)" rx="2" ry="2" />
<text  x="799.01" y="129.5" ></text>
</g>
<g >
<title>firedrake.parloops.par_loop (76,850 us, 1.64%)</title><rect x="803.9" y="167" width="19.4" height="15.0" fill="rgb(132.94292391252,162.079058897962,132.94292391252)" rx="2" ry="2" />
<text  x="806.90" y="177.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (4,069 us, 0.09%)</title><rect x="1189.0" y="151" width="1.0" height="15.0" fill="rgb(150.104234513309,150.104234513309,119.735905718342)" rx="2" ry="2" />
<text  x="1191.97" y="161.5" ></text>
</g>
<g >
<title>HybridInit (155,389 us, 3.32%)</title><rect x="1095.9" y="119" width="39.2" height="15.0" fill="rgb(146.103374474894,146.103374474894,155.697427317721)" rx="2" ry="2" />
<text  x="1098.93" y="129.5" >Hyb..</text>
</g>
<g >
<title>firedrake.mesh.ExtrudedMeshTopology.__init__ (885 us, 0.02%)</title><rect x="46.1" y="87" width="0.2" height="15.0" fill="rgb(154.176472808526,128.686291532035,128.686291532035)" rx="2" ry="2" />
<text  x="49.10" y="97.5" ></text>
</g>
</g>
</svg>
