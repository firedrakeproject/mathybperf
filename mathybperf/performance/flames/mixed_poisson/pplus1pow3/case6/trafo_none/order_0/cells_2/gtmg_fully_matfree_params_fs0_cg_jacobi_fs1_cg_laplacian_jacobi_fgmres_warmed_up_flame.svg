<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="283" onload="init(evt)" viewBox="0 0 1200 283" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:13px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:18px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 13 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (1 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="283.0" fill="url(#background)"  />
<text id="title" x="600.00" y="26" >Firedrake example</text>
<text id="details" x="10.00" y="265" > </text>
<text id="unzoom" x="10.00" y="26" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="26" >Search</text>
<text id="ignorecase" x="1174.00" y="26" >ic</text>
<text id="matched" x="1090.00" y="265" > </text>
<g id="frames">
<g >
<title>Parloop_Cells_wrap_form0_cell_integral_otherwise (89,662 us, 1.59%)</title><rect x="1142.3" y="135" width="18.8" height="15.0" fill="rgb(146.116889127864,154.919193477594,154.919193477594)" rx="2" ry="2" />
<text  x="1145.33" y="145.5" ></text>
</g>
<g >
<title>Mesh: numbering (7,830 us, 0.14%)</title><rect x="60.6" y="87" width="1.6" height="15.0" fill="rgb(153.389962036986,153.389962036986,135.659046794625)" rx="2" ry="2" />
<text  x="63.59" y="97.5" ></text>
</g>
<g >
<title>firedrake.function.Function.__init__ (1,604 us, 0.03%)</title><rect x="1117.2" y="135" width="0.3" height="15.0" fill="rgb(152.865632604699,118.636516636024,118.636516636024)" rx="2" ry="2" />
<text  x="1120.17" y="145.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalProblem.__init__ (13,468 us, 0.24%)</title><rect x="822.8" y="87" width="2.9" height="15.0" fill="rgb(106.338887422626,144.606378220681,144.606378220681)" rx="2" ry="2" />
<text  x="825.84" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (49,036 us, 0.87%)</title><rect x="48.1" y="103" width="10.3" height="15.0" fill="rgb(113.095104281323,146.357989998862,146.357989998862)" rx="2" ry="2" />
<text  x="51.08" y="113.5" ></text>
</g>
<g >
<title>FunctionSpaceData: CreateElement (7,929 us, 0.14%)</title><rect x="52.0" y="135" width="1.7" height="15.0" fill="rgb(152.202230997539,113.5504376478,113.5504376478)" rx="2" ry="2" />
<text  x="55.00" y="145.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (972 us, 0.02%)</title><rect x="1189.8" y="183" width="0.2" height="15.0" fill="rgb(150.789716345966,159.173767106471,150.789716345966)" rx="2" ry="2" />
<text  x="1192.80" y="193.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.solve (1,723,184 us, 30.65%)</title><rect x="828.3" y="71" width="361.7" height="15.0" fill="rgb(138.798245775895,153.02176742338,153.02176742338)" rx="2" ry="2" />
<text  x="831.29" y="81.5" >firedrake.variational_solver.NonlinearVariati..</text>
</g>
<g >
<title>PCApply (1,309,148 us, 23.29%)</title><rect x="828.3" y="119" width="274.8" height="15.0" fill="rgb(119.807604814658,119.807604814658,150.607923512515)" rx="2" ry="2" />
<text  x="831.29" y="129.5" >PCApply</text>
</g>
<g >
<title>firedrake.ufl_expr.derivative (1,170 us, 0.02%)</title><rect x="825.4" y="103" width="0.3" height="15.0" fill="rgb(136.900532019276,161.434797113141,136.900532019276)" rx="2" ry="2" />
<text  x="828.42" y="113.5" ></text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (51,563 us, 0.92%)</title><rect x="1179.2" y="119" width="10.8" height="15.0" fill="rgb(153.659575276057,124.723410449771,124.723410449771)" rx="2" ry="2" />
<text  x="1182.18" y="129.5" ></text>
</g>
<g >
<title>DMPlexSymmetrize (2,646 us, 0.05%)</title><rect x="69.5" y="87" width="0.5" height="15.0" fill="rgb(151.479762798665,151.479762798665,126.401927408913)" rx="2" ry="2" />
<text  x="72.45" y="97.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (12,665 us, 0.23%)</title><rect x="1110.8" y="135" width="2.6" height="15.0" fill="rgb(155.864044853691,155.864044853691,147.648832752504)" rx="2" ry="2" />
<text  x="1113.77" y="145.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (3,066 us, 0.05%)</title><rect x="1111.1" y="167" width="0.6" height="15.0" fill="rgb(155.193547211846,136.483861957489,136.483861957489)" rx="2" ry="2" />
<text  x="1114.10" y="177.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (50,284 us, 0.89%)</title><rect x="47.8" y="87" width="10.6" height="15.0" fill="rgb(122.56854806224,122.56854806224,151.14229962495)" rx="2" ry="2" />
<text  x="50.82" y="97.5" ></text>
</g>
<g >
<title>SNESSolve (1,723,184 us, 30.65%)</title><rect x="828.3" y="87" width="361.7" height="15.0" fill="rgb(151.375427501696,151.375427501696,125.896302508219)" rx="2" ry="2" />
<text  x="831.29" y="97.5" >SNESSolve</text>
</g>
<g >
<title>firedrake.variational_solver.LinearVariationalProblem.__init__ (19,253 us, 0.34%)</title><rect x="821.6" y="71" width="4.1" height="15.0" fill="rgb(128.789879336774,150.427005753978,150.427005753978)" rx="2" ry="2" />
<text  x="824.62" y="81.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_pyop2_kernel_uniform_extrusion (122,253 us, 2.17%)</title><rect x="19.1" y="119" width="25.6" height="15.0" fill="rgb(111.426221096872,145.925316580671,145.925316580671)" rx="2" ry="2" />
<text  x="22.05" y="129.5" >P..</text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (3,021 us, 0.05%)</title><rect x="1116.3" y="231" width="0.6" height="15.0" fill="rgb(143.665137608981,160.333582249701,143.665137608981)" rx="2" ry="2" />
<text  x="1119.30" y="241.5" ></text>
</g>
<g >
<title>ParLoopExecute (81,800 us, 1.46%)</title><rect x="830.7" y="183" width="17.1" height="15.0" fill="rgb(106.424265449274,144.628513264627,144.628513264627)" rx="2" ry="2" />
<text  x="833.66" y="193.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.action (5,785 us, 0.10%)</title><rect x="821.6" y="87" width="1.2" height="15.0" fill="rgb(152.711142782587,117.452094666497,117.452094666497)" rx="2" ry="2" />
<text  x="824.62" y="97.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_form1_cell_integral_otherwise (85,885 us, 1.53%)</title><rect x="1161.1" y="135" width="18.1" height="15.0" fill="rgb(119.649946708754,148.057393591158,148.057393591158)" rx="2" ry="2" />
<text  x="1164.15" y="145.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (82,403 us, 1.47%)</title><rect x="1143.9" y="151" width="17.2" height="15.0" fill="rgb(138.769784465985,138.769784465985,154.278022799868)" rx="2" ry="2" />
<text  x="1146.85" y="161.5" ></text>
</g>
<g >
<title>firedrake.parloops.par_loop (89,443 us, 1.59%)</title><rect x="1121.7" y="135" width="18.7" height="15.0" fill="rgb(149.976193529011,159.306201053417,149.976193529011)" rx="2" ry="2" />
<text  x="1124.67" y="145.5" ></text>
</g>
<g >
<title>FunctionSpaceData: CreateElement (5,457 us, 0.10%)</title><rect x="1112.3" y="199" width="1.1" height="15.0" fill="rgb(155.646550701708,155.646550701708,146.594822631355)" rx="2" ry="2" />
<text  x="1115.28" y="209.5" ></text>
</g>
<g >
<title>ParLoopExecute (81,073 us, 1.44%)</title><rect x="1123.4" y="151" width="17.0" height="15.0" fill="rgb(134.179782280425,161.877709861326,134.179782280425)" rx="2" ry="2" />
<text  x="1126.43" y="161.5" ></text>
</g>
<g >
<title>ParLoopExecute (122,253 us, 2.17%)</title><rect x="19.1" y="103" width="25.6" height="15.0" fill="rgb(155.832220673639,141.380358497901,141.380358497901)" rx="2" ry="2" />
<text  x="22.05" y="113.5" >P..</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (80,956 us, 1.44%)</title><rect x="830.8" y="215" width="17.0" height="15.0" fill="rgb(152.653179021566,117.007705832005,117.007705832005)" rx="2" ry="2" />
<text  x="833.84" y="225.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (16,695 us, 0.30%)</title><rect x="1113.7" y="151" width="3.5" height="15.0" fill="rgb(112.487101231628,112.487101231628,149.191051851283)" rx="2" ry="2" />
<text  x="1116.66" y="161.5" ></text>
</g>
<g >
<title>firedrake.utility_meshes.RectangleMesh (10,945 us, 0.19%)</title><rect x="819.3" y="87" width="2.3" height="15.0" fill="rgb(141.106735314887,153.620264711267,153.620264711267)" rx="2" ry="2" />
<text  x="822.33" y="97.5" ></text>
</g>
<g >
<title>DMPlexStratify (4,288 us, 0.08%)</title><rect x="68.6" y="87" width="0.9" height="15.0" fill="rgb(130.999675407185,150.999915846307,150.999915846307)" rx="2" ry="2" />
<text  x="71.55" y="97.5" ></text>
</g>
<g >
<title>firedrake.mesh._from_cell_list (6,595 us, 0.12%)</title><rect x="820.2" y="103" width="1.4" height="15.0" fill="rgb(144.046609823925,160.271482121687,144.046609823925)" rx="2" ry="2" />
<text  x="823.24" y="113.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (3,603 us, 0.06%)</title><rect x="1189.2" y="151" width="0.8" height="15.0" fill="rgb(154.60572147794,131.977197997538,131.977197997538)" rx="2" ry="2" />
<text  x="1192.24" y="161.5" ></text>
</g>
<g >
<title>firedrake.matrix_free.operators.ImplicitMatrixContext.__init__ (8,224 us, 0.15%)</title><rect x="826.6" y="103" width="1.7" height="15.0" fill="rgb(132.506739451751,92.6735198451113,132.506739451751)" rx="2" ry="2" />
<text  x="829.56" y="113.5" ></text>
</g>
<g >
<title>HybridRHS (1,216,040 us, 21.63%)</title><rect x="847.8" y="151" width="255.3" height="15.0" fill="rgb(152.891360706023,118.833765412843,118.833765412843)" rx="2" ry="2" />
<text  x="850.83" y="161.5" >HybridRHS</text>
</g>
<g >
<title>CreateMesh (4,696 us, 0.08%)</title><rect x="59.6" y="87" width="1.0" height="15.0" fill="rgb(125.090704895876,163.357327109974,125.090704895876)" rx="2" ry="2" />
<text  x="62.60" y="97.5" ></text>
</g>
<g >
<title>CreateMesh (1,887 us, 0.03%)</title><rect x="819.8" y="103" width="0.4" height="15.0" fill="rgb(153.914037469047,153.914037469047,138.198796965379)" rx="2" ry="2" />
<text  x="822.84" y="113.5" ></text>
</g>
<g >
<title>firedrake.mesh.make_mesh_from_coordinates (1,215 us, 0.02%)</title><rect x="47.1" y="87" width="0.3" height="15.0" fill="rgb(122.985723513264,148.92222461455,148.92222461455)" rx="2" ry="2" />
<text  x="50.12" y="97.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (3,259 us, 0.06%)</title><rect x="827.6" y="119" width="0.7" height="15.0" fill="rgb(155.657404135849,155.657404135849,146.647420042962)" rx="2" ry="2" />
<text  x="830.61" y="129.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (3,021 us, 0.05%)</title><rect x="1116.3" y="215" width="0.6" height="15.0" fill="rgb(154.256014930361,129.2961144661,129.2961144661)" rx="2" ry="2" />
<text  x="1119.30" y="225.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (81,073 us, 1.44%)</title><rect x="1123.4" y="167" width="17.0" height="15.0" fill="rgb(145.476469065264,154.75315864655,154.75315864655)" rx="2" ry="2" />
<text  x="1126.43" y="177.5" ></text>
</g>
<g >
<title>HybridBreak (93,108 us, 1.66%)</title><rect x="828.3" y="151" width="19.5" height="15.0" fill="rgb(119.245925897052,119.245925897052,150.499211463946)" rx="2" ry="2" />
<text  x="831.29" y="161.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (12,298 us, 0.22%)</title><rect x="822.8" y="103" width="2.6" height="15.0" fill="rgb(137.095403071101,104.431970369697,137.095403071101)" rx="2" ry="2" />
<text  x="825.84" y="113.5" ></text>
</g>
<g >
<title>CreateExtMesh (178,052 us, 3.17%)</title><rect x="10.0" y="71" width="37.4" height="15.0" fill="rgb(112.757860651456,112.757860651456,149.243456900282)" rx="2" ry="2" />
<text  x="13.00" y="81.5" >Cr..</text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (3,066 us, 0.05%)</title><rect x="1111.1" y="183" width="0.6" height="15.0" fill="rgb(128.478911730208,128.478911730208,152.28624098004)" rx="2" ry="2" />
<text  x="1114.10" y="193.5" ></text>
</g>
<g >
<title>firedrake.functionspace.make_scalar_element (1,082 us, 0.02%)</title><rect x="47.6" y="87" width="0.2" height="15.0" fill="rgb(156.763618573853,148.521075732871,148.521075732871)" rx="2" ry="2" />
<text  x="50.60" y="97.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (122,253 us, 2.17%)</title><rect x="19.1" y="135" width="25.6" height="15.0" fill="rgb(152.012179482828,152.012179482828,128.982100570628)" rx="2" ry="2" />
<text  x="22.05" y="145.5" >p..</text>
</g>
<g >
<title>HybridInit (180,507 us, 3.21%)</title><rect x="1103.1" y="119" width="37.9" height="15.0" fill="rgb(124.467341591299,124.467341591299,151.509808049929)" rx="2" ry="2" />
<text  x="1106.09" y="129.5" >Hy..</text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (12,339 us, 0.22%)</title><rect x="1114.6" y="167" width="2.6" height="15.0" fill="rgb(116.388556009466,116.388556009466,149.946172130865)" rx="2" ry="2" />
<text  x="1117.58" y="177.5" ></text>
</g>
<g >
<title>firedrake.functionspace.MixedFunctionSpace (1,970 us, 0.04%)</title><rect x="818.9" y="71" width="0.4" height="15.0" fill="rgb(139.900801232971,160.946381194633,139.900801232971)" rx="2" ry="2" />
<text  x="821.91" y="81.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.WithGeometry.split (1,098 us, 0.02%)</title><rect x="1116.9" y="183" width="0.3" height="15.0" fill="rgb(149.588573199725,149.588573199725,117.236931660208)" rx="2" ry="2" />
<text  x="1119.94" y="193.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (2,558 us, 0.05%)</title><rect x="1140.4" y="135" width="0.6" height="15.0" fill="rgb(139.317545531186,139.317545531186,154.384041070552)" rx="2" ry="2" />
<text  x="1143.44" y="145.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (10,381 us, 0.18%)</title><rect x="44.7" y="151" width="2.2" height="15.0" fill="rgb(112.05773523259,112.05773523259,149.107948754695)" rx="2" ry="2" />
<text  x="47.72" y="161.5" ></text>
</g>
<g >
<title>firedrake.assemble.allocate_matrix (1,109 us, 0.02%)</title><rect x="1113.4" y="135" width="0.3" height="15.0" fill="rgb(134.012277105958,96.5314600840164,134.012277105958)" rx="2" ry="2" />
<text  x="1116.43" y="145.5" ></text>
</g>
<g >
<title>firedrake.mesh.MeshTopology._facets (22,454 us, 0.40%)</title><rect x="53.7" y="135" width="4.7" height="15.0" fill="rgb(128.647369891232,162.778335133985,128.647369891232)" rx="2" ry="2" />
<text  x="56.66" y="145.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (972 us, 0.02%)</title><rect x="1189.8" y="199" width="0.2" height="15.0" fill="rgb(136.285526493175,136.285526493175,153.797198676098)" rx="2" ry="2" />
<text  x="1192.80" y="209.5" ></text>
</g>
<g >
<title>SNESFunctionEval (233,529 us, 4.15%)</title><rect x="1141.0" y="103" width="49.0" height="15.0" fill="rgb(134.893208050328,152.00935023527,152.00935023527)" rx="2" ry="2" />
<text  x="1143.98" y="113.5" >SNES..</text>
</g>
<g >
<title>Log_Event_form1_cell_integral_otherwise (2,524 us, 0.04%)</title><rect x="1161.6" y="151" width="0.6" height="15.0" fill="rgb(138.376076350333,152.912316090827,152.912316090827)" rx="2" ry="2" />
<text  x="1164.65" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (10,381 us, 0.18%)</title><rect x="44.7" y="119" width="2.2" height="15.0" fill="rgb(149.967225351389,149.967225351389,119.071938241348)" rx="2" ry="2" />
<text  x="47.72" y="129.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (10,381 us, 0.18%)</title><rect x="44.7" y="135" width="2.2" height="15.0" fill="rgb(152.995274025626,152.995274025626,133.74632797034)" rx="2" ry="2" />
<text  x="47.72" y="145.5" ></text>
</g>
<g >
<title>firedrake.assemble.allocate_matrix (8,224 us, 0.15%)</title><rect x="826.6" y="87" width="1.7" height="15.0" fill="rgb(117.856966111868,147.592546769744,147.592546769744)" rx="2" ry="2" />
<text  x="829.56" y="97.5" ></text>
</g>
<g >
<title>FunctionSpaceData: CreateElement (949 us, 0.02%)</title><rect x="46.7" y="167" width="0.2" height="15.0" fill="rgb(128.413852351806,150.329517276394,150.329517276394)" rx="2" ry="2" />
<text  x="49.70" y="177.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (8,642 us, 0.15%)</title><rect x="1115.1" y="183" width="1.8" height="15.0" fill="rgb(117.341271098259,147.458848062512,147.458848062512)" rx="2" ry="2" />
<text  x="1118.12" y="193.5" ></text>
</g>
<g >
<title>firedrake.functionspace.make_scalar_element (998 us, 0.02%)</title><rect x="1111.7" y="151" width="0.3" height="15.0" fill="rgb(153.12168673703,120.599598317233,120.599598317233)" rx="2" ry="2" />
<text  x="1114.75" y="161.5" ></text>
</g>
<g >
<title>firedrake.extrusion_utils.make_extruded_coords (164,486 us, 2.93%)</title><rect x="10.2" y="87" width="34.5" height="15.0" fill="rgb(156.33745907154,145.253852881805,145.253852881805)" rx="2" ry="2" />
<text  x="13.19" y="97.5" >fi..</text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (49,036 us, 0.87%)</title><rect x="48.1" y="119" width="10.3" height="15.0" fill="rgb(124.780278427823,163.407861651285,124.780278427823)" rx="2" ry="2" />
<text  x="51.08" y="129.5" ></text>
</g>
<g >
<title>SCForwardElim (1,309,148 us, 23.29%)</title><rect x="828.3" y="135" width="274.8" height="15.0" fill="rgb(129.809517363519,150.691356353505,150.691356353505)" rx="2" ry="2" />
<text  x="831.29" y="145.5" >SCForwardElim</text>
</g>
<g >
<title>PCSetUp (180,507 us, 3.21%)</title><rect x="1103.1" y="103" width="37.9" height="15.0" fill="rgb(152.671836238573,117.150744495724,117.150744495724)" rx="2" ry="2" />
<text  x="1106.09" y="113.5" >PC..</text>
</g>
<g >
<title>CreateFunctionSpace (52,417 us, 0.93%)</title><rect x="47.4" y="71" width="11.0" height="15.0" fill="rgb(139.50509202383,161.010798972865,139.50509202383)" rx="2" ry="2" />
<text  x="50.37" y="81.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (7,021 us, 0.12%)</title><rect x="1112.0" y="183" width="1.4" height="15.0" fill="rgb(155.470097614889,138.604081714149,138.604081714149)" rx="2" ry="2" />
<text  x="1114.95" y="193.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (6,708 us, 0.12%)</title><rect x="1188.6" y="135" width="1.4" height="15.0" fill="rgb(131.135105198188,162.373354967737,131.135105198188)" rx="2" ry="2" />
<text  x="1191.59" y="145.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (3,066 us, 0.05%)</title><rect x="1111.1" y="199" width="0.6" height="15.0" fill="rgb(156.16806198538,143.955141887915,143.955141887915)" rx="2" ry="2" />
<text  x="1114.10" y="209.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (80,977 us, 1.44%)</title><rect x="1162.2" y="151" width="17.0" height="15.0" fill="rgb(154.246888670539,129.226146474135,129.226146474135)" rx="2" ry="2" />
<text  x="1165.18" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (3,066 us, 0.05%)</title><rect x="1111.1" y="215" width="0.6" height="15.0" fill="rgb(145.944578491921,127.107982385549,145.944578491921)" rx="2" ry="2" />
<text  x="1114.10" y="225.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (80,956 us, 1.44%)</title><rect x="830.8" y="199" width="17.0" height="15.0" fill="rgb(155.52672891342,139.038255002887,139.038255002887)" rx="2" ry="2" />
<text  x="833.84" y="209.5" ></text>
</g>
<g >
<title>firedrake.functionspace.make_scalar_element (1,864 us, 0.03%)</title><rect x="1115.6" y="199" width="0.4" height="15.0" fill="rgb(136.714078586396,136.714078586396,153.880144242528)" rx="2" ry="2" />
<text  x="1118.63" y="209.5" ></text>
</g>
<g >
<title>firedrake.interpolation.make_interpolator (19,847 us, 0.35%)</title><rect x="1117.5" y="135" width="4.2" height="15.0" fill="rgb(155.535861902874,139.108274588697,139.108274588697)" rx="2" ry="2" />
<text  x="1120.50" y="145.5" ></text>
</g>
<g >
<title>PetscBarrier (32,359 us, 0.58%)</title><rect x="63.2" y="71" width="6.8" height="15.0" fill="rgb(111.415997527419,111.415997527419,148.98374145692)" rx="2" ry="2" />
<text  x="66.22" y="81.5" ></text>
</g>
<g >
<title>Log_Event_form0_cell_integral_otherwise (4,908 us, 0.09%)</title><rect x="1142.8" y="151" width="1.1" height="15.0" fill="rgb(154.518466751843,154.518466751843,141.12795425893)" rx="2" ry="2" />
<text  x="1145.82" y="161.5" ></text>
</g>
<g >
<title>firedrake.__init__ (3,567,768 us, 63.47%)</title><rect x="70.0" y="71" width="748.9" height="15.0" fill="rgb(153.629201801623,124.490547145775,124.490547145775)" rx="2" ry="2" />
<text  x="73.01" y="81.5" >firedrake.__init__</text>
</g>
<g >
<title>all (5,621,511 us, 100%)</title><rect x="10.0" y="39" width="1180.0" height="15.0" fill="rgb(149.323800462658,159.412404575846,149.323800462658)" rx="2" ry="2" />
<text  x="13.00" y="49.5" ></text>
</g>
<g >
<title>firedrake.function.Function.split (1,170 us, 0.02%)</title><rect x="825.4" y="119" width="0.3" height="15.0" fill="rgb(129.661162539108,129.661162539108,152.515063717247)" rx="2" ry="2" />
<text  x="828.42" y="129.5" ></text>
</g>
<g >
<title>DMPlexInterp (4,492 us, 0.08%)</title><rect x="820.7" y="119" width="0.9" height="15.0" fill="rgb(121.524983466889,148.543514232156,148.543514232156)" rx="2" ry="2" />
<text  x="823.68" y="129.5" ></text>
</g>
<g >
<title>firedrake.mesh._Facets.__init__ (1,060 us, 0.02%)</title><rect x="58.2" y="151" width="0.2" height="15.0" fill="rgb(141.242244532274,160.728006704048,141.242244532274)" rx="2" ry="2" />
<text  x="61.15" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (7,021 us, 0.12%)</title><rect x="1112.0" y="167" width="1.4" height="15.0" fill="rgb(138.98092198911,109.263612597095,138.98092198911)" rx="2" ry="2" />
<text  x="1114.95" y="177.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (81,073 us, 1.44%)</title><rect x="1123.4" y="183" width="17.0" height="15.0" fill="rgb(154.414047268204,154.414047268204,140.62192137668)" rx="2" ry="2" />
<text  x="1126.43" y="193.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (10,381 us, 0.18%)</title><rect x="44.7" y="103" width="2.2" height="15.0" fill="rgb(134.162041709196,96.9152318798141,134.162041709196)" rx="2" ry="2" />
<text  x="47.72" y="113.5" ></text>
</g>
<g >
<title>firedrake.functionspace.MixedFunctionSpace (4,646 us, 0.08%)</title><rect x="1110.8" y="151" width="0.9" height="15.0" fill="rgb(142.4019666774,118.030039610838,142.4019666774)" rx="2" ry="2" />
<text  x="1113.77" y="161.5" ></text>
</g>
<g >
<title>Mesh: reorder (4,702 us, 0.08%)</title><rect x="62.2" y="87" width="1.0" height="15.0" fill="rgb(131.386270998295,151.100144332891,151.100144332891)" rx="2" ry="2" />
<text  x="65.23" y="97.5" ></text>
</g>
<g >
<title>firedrake.parloops.par_loop (92,101 us, 1.64%)</title><rect x="828.5" y="167" width="19.3" height="15.0" fill="rgb(156.673043409436,147.826666139006,147.826666139006)" rx="2" ry="2" />
<text  x="831.50" y="177.5" ></text>
</g>
<g >
<title>KSPSolve (1,309,148 us, 23.29%)</title><rect x="828.3" y="103" width="274.8" height="15.0" fill="rgb(146.285841973589,159.906955957788,146.285841973589)" rx="2" ry="2" />
<text  x="831.29" y="113.5" >KSPSolve</text>
</g>
<g >
<title>firedrake.ufl_expr.action (4,965 us, 0.09%)</title><rect x="826.6" y="119" width="1.0" height="15.0" fill="rgb(135.955791794163,152.284834909598,152.284834909598)" rx="2" ry="2" />
<text  x="829.56" y="129.5" ></text>
</g>
<g >
<title>firedrake (5,621,511 us, 100.00%)</title><rect x="10.0" y="55" width="1180.0" height="15.0" fill="rgb(145.680403301006,160.005515741697,145.680403301006)" rx="2" ry="2" />
<text  x="13.00" y="65.5" >firedrake</text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.__init__ (12,510 us, 0.22%)</title><rect x="825.7" y="71" width="2.6" height="15.0" fill="rgb(128.20544804356,128.20544804356,152.23331252456)" rx="2" ry="2" />
<text  x="828.66" y="81.5" ></text>
</g>
<g >
<title>CreateMesh (1,887 us, 0.03%)</title><rect x="819.8" y="119" width="0.4" height="15.0" fill="rgb(128.610508530354,128.610508530354,152.311711328456)" rx="2" ry="2" />
<text  x="822.84" y="129.5" ></text>
</g>
<g >
<title>firedrake.mesh.ExtrudedMeshTopology.__init__ (1,067 us, 0.02%)</title><rect x="46.9" y="87" width="0.2" height="15.0" fill="rgb(155.983961637713,142.54370588913,142.54370588913)" rx="2" ry="2" />
<text  x="49.90" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (928 us, 0.02%)</title><rect x="819.1" y="87" width="0.2" height="15.0" fill="rgb(149.974775298318,149.974775298318,119.108526445694)" rx="2" ry="2" />
<text  x="822.13" y="97.5" ></text>
</g>
<g >
<title>CreateMesh (23,053 us, 0.41%)</title><rect x="58.4" y="71" width="4.8" height="15.0" fill="rgb(152.867107884571,152.867107884571,133.125215132922)" rx="2" ry="2" />
<text  x="61.38" y="81.5" ></text>
</g>
<g >
<title>ParLoopExecute (176,839 us, 3.15%)</title><rect x="1142.1" y="119" width="37.1" height="15.0" fill="rgb(124.90202025111,163.388043214936,124.90202025111)" rx="2" ry="2" />
<text  x="1145.06" y="129.5" >Pa..</text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (16,695 us, 0.30%)</title><rect x="1113.7" y="135" width="3.5" height="15.0" fill="rgb(124.321036886602,163.482621902181,124.321036886602)" rx="2" ry="2" />
<text  x="1116.66" y="145.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (972 us, 0.02%)</title><rect x="1189.8" y="167" width="0.2" height="15.0" fill="rgb(149.371333443437,149.371333443437,116.184154379734)" rx="2" ry="2" />
<text  x="1192.80" y="177.5" ></text>
</g>
<g >
<title>firedrake.utility_meshes.SquareMesh (10,945 us, 0.19%)</title><rect x="819.3" y="71" width="2.3" height="15.0" fill="rgb(139.182011663663,109.778904888136,139.182011663663)" rx="2" ry="2" />
<text  x="822.33" y="81.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (7,021 us, 0.12%)</title><rect x="1112.0" y="151" width="1.4" height="15.0" fill="rgb(149.545921869361,136.336424790237,149.545921869361)" rx="2" ry="2" />
<text  x="1114.95" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (4,372 us, 0.08%)</title><rect x="1116.0" y="199" width="0.9" height="15.0" fill="rgb(153.567249870066,124.015582337173,124.015582337173)" rx="2" ry="2" />
<text  x="1119.02" y="209.5" ></text>
</g>
<g >
<title>firedrake.functionspace.VectorFunctionSpace (10,381 us, 0.18%)</title><rect x="44.7" y="87" width="2.2" height="15.0" fill="rgb(110.717664254662,145.741616658616,145.741616658616)" rx="2" ry="2" />
<text  x="47.72" y="97.5" ></text>
</g>
</g>
</svg>
