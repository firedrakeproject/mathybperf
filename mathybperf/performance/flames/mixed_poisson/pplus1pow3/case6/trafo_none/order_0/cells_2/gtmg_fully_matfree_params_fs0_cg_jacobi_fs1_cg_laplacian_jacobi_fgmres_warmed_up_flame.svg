<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="283" onload="init(evt)" viewBox="0 0 1200 283" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:13px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:18px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 13 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (1 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="283.0" fill="url(#background)"  />
<text id="title" x="600.00" y="26" >Firedrake example</text>
<text id="details" x="10.00" y="265" > </text>
<text id="unzoom" x="10.00" y="26" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="26" >Search</text>
<text id="ignorecase" x="1174.00" y="26" >ic</text>
<text id="matched" x="1090.00" y="265" > </text>
<g id="frames">
<g >
<title>firedrake.ufl_expr.action (4,230 us, 0.09%)</title><rect x="795.2" y="119" width="1.0" height="15.0" fill="rgb(123.169691060619,123.169691060619,151.258649882701)" rx="2" ry="2" />
<text  x="798.17" y="129.5" ></text>
</g>
<g >
<title>CreateMesh (1,506 us, 0.03%)</title><rect x="788.5" y="119" width="0.4" height="15.0" fill="rgb(106.247992224298,144.582812798892,144.582812798892)" rx="2" ry="2" />
<text  x="791.49" y="129.5" ></text>
</g>
<g >
<title>HybridRHS (1,135,518 us, 23.76%)</title><rect x="817.7" y="151" width="280.4" height="15.0" fill="rgb(138.232096256085,107.344746656218,138.232096256085)" rx="2" ry="2" />
<text  x="820.73" y="161.5" >HybridRHS</text>
</g>
<g >
<title>firedrake.extrusion_utils.make_extruded_coords (143,265 us, 3.00%)</title><rect x="10.2" y="87" width="35.4" height="15.0" fill="rgb(148.540751733101,159.539877624844,148.540751733101)" rx="2" ry="2" />
<text  x="13.20" y="97.5" >fi..</text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (2,731 us, 0.06%)</title><rect x="1107.4" y="183" width="0.7" height="15.0" fill="rgb(148.792437639313,148.792437639313,113.378736252053)" rx="2" ry="2" />
<text  x="1110.42" y="193.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (74,585 us, 1.56%)</title><rect x="1141.9" y="151" width="18.5" height="15.0" fill="rgb(148.543788837918,148.543788837918,112.173745906834)" rx="2" ry="2" />
<text  x="1144.95" y="161.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (2,272 us, 0.05%)</title><rect x="1138.4" y="135" width="0.6" height="15.0" fill="rgb(155.727581394637,140.578124025551,140.578124025551)" rx="2" ry="2" />
<text  x="1141.42" y="145.5" ></text>
</g>
<g >
<title>firedrake.assemble.allocate_matrix (7,021 us, 0.15%)</title><rect x="795.2" y="87" width="1.7" height="15.0" fill="rgb(115.11329003592,146.881223342646,146.881223342646)" rx="2" ry="2" />
<text  x="798.17" y="97.5" ></text>
</g>
<g >
<title>HybridInit (165,360 us, 3.46%)</title><rect x="1098.1" y="119" width="40.9" height="15.0" fill="rgb(139.694368947854,139.694368947854,154.456974635068)" rx="2" ry="2" />
<text  x="1101.15" y="129.5" >Hyb..</text>
</g>
<g >
<title>HybridBreak (84,323 us, 1.76%)</title><rect x="796.9" y="151" width="20.8" height="15.0" fill="rgb(123.205108212792,148.979102129242,148.979102129242)" rx="2" ry="2" />
<text  x="799.90" y="161.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_form1_cell_integral_otherwise (81,525 us, 1.71%)</title><rect x="1160.4" y="135" width="20.1" height="15.0" fill="rgb(140.208476861232,160.896294464451,140.208476861232)" rx="2" ry="2" />
<text  x="1163.37" y="145.5" ></text>
</g>
<g >
<title>firedrake.__init__ (2,901,606 us, 60.72%)</title><rect x="70.7" y="71" width="716.6" height="15.0" fill="rgb(155.439555074457,138.369922237501,138.369922237501)" rx="2" ry="2" />
<text  x="73.72" y="81.5" >firedrake.__init__</text>
</g>
<g >
<title>CreateMesh (4,143 us, 0.09%)</title><rect x="60.3" y="87" width="1.0" height="15.0" fill="rgb(122.70248361857,122.70248361857,151.168222635852)" rx="2" ry="2" />
<text  x="63.31" y="97.5" ></text>
</g>
<g >
<title>CreateMesh (1,506 us, 0.03%)</title><rect x="788.5" y="103" width="0.4" height="15.0" fill="rgb(151.107441082545,151.107441082545,124.597599092335)" rx="2" ry="2" />
<text  x="791.49" y="113.5" ></text>
</g>
<g >
<title>PCApply (1,219,841 us, 25.53%)</title><rect x="796.9" y="119" width="301.2" height="15.0" fill="rgb(143.780155298245,160.314858439821,143.780155298245)" rx="2" ry="2" />
<text  x="799.90" y="129.5" >PCApply</text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.__init__ (10,820 us, 0.23%)</title><rect x="794.2" y="71" width="2.7" height="15.0" fill="rgb(144.121509134062,144.121509134062,155.31384047756)" rx="2" ry="2" />
<text  x="797.23" y="81.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_form0_cell_integral_otherwise (80,873 us, 1.69%)</title><rect x="1140.4" y="135" width="20.0" height="15.0" fill="rgb(130.922585788498,162.40795115071,130.922585788498)" rx="2" ry="2" />
<text  x="1143.39" y="145.5" ></text>
</g>
<g >
<title>firedrake.utility_meshes.RectangleMesh (9,188 us, 0.19%)</title><rect x="787.9" y="87" width="2.3" height="15.0" fill="rgb(152.78870450072,144.646055283096,152.78870450072)" rx="2" ry="2" />
<text  x="790.94" y="97.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (6,343 us, 0.13%)</title><rect x="1188.4" y="135" width="1.6" height="15.0" fill="rgb(137.046405515903,152.567586615234,152.567586615234)" rx="2" ry="2" />
<text  x="1191.43" y="145.5" ></text>
</g>
<g >
<title>firedrake.parloops.par_loop (83,418 us, 1.75%)</title><rect x="797.1" y="167" width="20.6" height="15.0" fill="rgb(147.948870036334,159.636230459201,147.948870036334)" rx="2" ry="2" />
<text  x="800.13" y="177.5" ></text>
</g>
<g >
<title>CreateExtMesh (155,195 us, 3.25%)</title><rect x="10.0" y="71" width="38.3" height="15.0" fill="rgb(137.277364768545,152.627464939993,152.627464939993)" rx="2" ry="2" />
<text  x="13.00" y="81.5" >Cr..</text>
</g>
<g >
<title>CreateFunctionSpace (1,580 us, 0.03%)</title><rect x="1189.6" y="183" width="0.4" height="15.0" fill="rgb(133.290111097512,94.6809096873756,133.290111097512)" rx="2" ry="2" />
<text  x="1192.61" y="193.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (1,580 us, 0.03%)</title><rect x="1189.6" y="167" width="0.4" height="15.0" fill="rgb(131.686737107367,151.178042953762,151.178042953762)" rx="2" ry="2" />
<text  x="1192.61" y="177.5" ></text>
</g>
<g >
<title>KSPSolve (1,219,841 us, 25.53%)</title><rect x="796.9" y="103" width="301.2" height="15.0" fill="rgb(141.768119245411,160.642399192608,141.768119245411)" rx="2" ry="2" />
<text  x="799.90" y="113.5" >KSPSolve</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (106,669 us, 2.23%)</title><rect x="19.2" y="135" width="26.4" height="15.0" fill="rgb(145.425998421081,125.779120954019,145.425998421081)" rx="2" ry="2" />
<text  x="22.24" y="145.5" >p..</text>
</g>
<g >
<title>firedrake.functionspace.make_scalar_element (1,618 us, 0.03%)</title><rect x="1112.1" y="199" width="0.4" height="15.0" fill="rgb(125.628411195496,125.628411195496,151.734531199128)" rx="2" ry="2" />
<text  x="1115.08" y="209.5" ></text>
</g>
<g >
<title>Log_Event_form1_cell_integral_otherwise (2,363 us, 0.05%)</title><rect x="1160.9" y="151" width="0.6" height="15.0" fill="rgb(155.689602828104,140.286955015464,140.286955015464)" rx="2" ry="2" />
<text  x="1163.94" y="161.5" ></text>
</g>
<g >
<title>FunctionSpaceData: CreateElement (940 us, 0.02%)</title><rect x="47.6" y="167" width="0.2" height="15.0" fill="rgb(118.535732613999,147.768523270296,147.768523270296)" rx="2" ry="2" />
<text  x="50.61" y="177.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_pyop2_kernel_uniform_extrusion (107,380 us, 2.25%)</title><rect x="19.1" y="119" width="26.5" height="15.0" fill="rgb(142.778701950101,118.995423747133,142.778701950101)" rx="2" ry="2" />
<text  x="22.06" y="129.5" >P..</text>
</g>
<g >
<title>Mesh: reorder (3,901 us, 0.08%)</title><rect x="63.0" y="87" width="0.9" height="15.0" fill="rgb(136.534876465245,136.534876465245,153.845459961015)" rx="2" ry="2" />
<text  x="65.97" y="97.5" ></text>
</g>
<g >
<title>firedrake.parloops.par_loop (80,726 us, 1.69%)</title><rect x="1118.5" y="135" width="19.9" height="15.0" fill="rgb(133.847689692668,133.847689692668,153.325359295355)" rx="2" ry="2" />
<text  x="1121.48" y="145.5" ></text>
</g>
<g >
<title>SNESSolve (1,591,796 us, 33.31%)</title><rect x="796.9" y="87" width="393.1" height="15.0" fill="rgb(136.959370997173,161.425218674879,136.959370997173)" rx="2" ry="2" />
<text  x="799.90" y="97.5" >SNESSolve</text>
</g>
<g >
<title>Mesh: numbering (6,624 us, 0.14%)</title><rect x="61.3" y="87" width="1.7" height="15.0" fill="rgb(146.347957985238,128.141642337174,146.347957985238)" rx="2" ry="2" />
<text  x="64.33" y="97.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.action (4,932 us, 0.10%)</title><rect x="790.2" y="87" width="1.2" height="15.0" fill="rgb(122.550375764855,122.550375764855,151.138782406101)" rx="2" ry="2" />
<text  x="793.21" y="97.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (14,688 us, 0.31%)</title><rect x="1110.0" y="135" width="3.6" height="15.0" fill="rgb(152.35791454918,114.744011543715,114.744011543715)" rx="2" ry="2" />
<text  x="1113.01" y="145.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (9,171 us, 0.19%)</title><rect x="45.6" y="135" width="2.2" height="15.0" fill="rgb(131.672573581753,151.174370928603,151.174370928603)" rx="2" ry="2" />
<text  x="48.58" y="145.5" ></text>
</g>
<g >
<title>firedrake.matrix_free.operators.ImplicitMatrixContext.__init__ (7,021 us, 0.15%)</title><rect x="795.2" y="103" width="1.7" height="15.0" fill="rgb(153.74278093992,153.74278093992,137.368861478072)" rx="2" ry="2" />
<text  x="798.17" y="113.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (2,791 us, 0.06%)</title><rect x="796.2" y="119" width="0.7" height="15.0" fill="rgb(113.806543161688,113.806543161688,149.446427708714)" rx="2" ry="2" />
<text  x="799.21" y="129.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (5,973 us, 0.13%)</title><rect x="1108.3" y="183" width="1.5" height="15.0" fill="rgb(140.29429682606,112.629135616778,140.29429682606)" rx="2" ry="2" />
<text  x="1111.35" y="193.5" ></text>
</g>
<g >
<title>ParLoopExecute (73,249 us, 1.53%)</title><rect x="1120.3" y="151" width="18.1" height="15.0" fill="rgb(134.583071539787,97.9941208207051,134.583071539787)" rx="2" ry="2" />
<text  x="1123.33" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspace.MixedFunctionSpace (2,684 us, 0.06%)</title><rect x="787.3" y="71" width="0.6" height="15.0" fill="rgb(126.774329326095,126.774329326095,151.956321805051)" rx="2" ry="2" />
<text  x="790.28" y="81.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (10,336 us, 0.22%)</title><rect x="791.4" y="103" width="2.6" height="15.0" fill="rgb(145.82770762121,126.808500779351,145.82770762121)" rx="2" ry="2" />
<text  x="794.43" y="113.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.WithGeometry.split (876 us, 0.02%)</title><rect x="1113.4" y="183" width="0.2" height="15.0" fill="rgb(125.413423041139,149.551628195851,149.551628195851)" rx="2" ry="2" />
<text  x="1116.42" y="193.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (10,705 us, 0.22%)</title><rect x="1111.0" y="167" width="2.6" height="15.0" fill="rgb(155.524027146124,155.524027146124,146.001054631217)" rx="2" ry="2" />
<text  x="1113.99" y="177.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (7,614 us, 0.16%)</title><rect x="1111.5" y="183" width="1.9" height="15.0" fill="rgb(145.794921310713,126.724485858702,145.794921310713)" rx="2" ry="2" />
<text  x="1114.54" y="193.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (73,963 us, 1.55%)</title><rect x="799.5" y="199" width="18.2" height="15.0" fill="rgb(154.442804965683,130.728171403571,130.728171403571)" rx="2" ry="2" />
<text  x="802.46" y="209.5" ></text>
</g>
<g >
<title>firedrake.mesh._Facets.__init__ (888 us, 0.02%)</title><rect x="58.9" y="151" width="0.2" height="15.0" fill="rgb(156.128371568855,143.650848694559,143.650848694559)" rx="2" ry="2" />
<text  x="61.90" y="161.5" ></text>
</g>
<g >
<title>firedrake.mesh.MeshTopology._facets (18,851 us, 0.39%)</title><rect x="54.5" y="135" width="4.6" height="15.0" fill="rgb(145.745962102859,126.599027888576,145.745962102859)" rx="2" ry="2" />
<text  x="57.46" y="145.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (40,774 us, 0.85%)</title><rect x="49.0" y="119" width="10.1" height="15.0" fill="rgb(145.623607674456,154.791305693377,154.791305693377)" rx="2" ry="2" />
<text  x="52.05" y="129.5" ></text>
</g>
<g >
<title>SNESFunctionEval (206,595 us, 4.32%)</title><rect x="1139.0" y="103" width="51.0" height="15.0" fill="rgb(150.667282346404,159.193698222678,150.667282346404)" rx="2" ry="2" />
<text  x="1141.98" y="113.5" >SNES..</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (73,963 us, 1.55%)</title><rect x="799.5" y="215" width="18.2" height="15.0" fill="rgb(140.17434091176,160.901851479481,140.17434091176)" rx="2" ry="2" />
<text  x="802.46" y="225.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (41,873 us, 0.88%)</title><rect x="48.8" y="87" width="10.3" height="15.0" fill="rgb(129.723115678812,150.668955916729,150.668955916729)" rx="2" ry="2" />
<text  x="51.78" y="97.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.solve (1,591,796 us, 33.31%)</title><rect x="796.9" y="71" width="393.1" height="15.0" fill="rgb(152.440667038422,152.440667038422,131.058617186198)" rx="2" ry="2" />
<text  x="799.90" y="81.5" >firedrake.variational_solver.NonlinearVariational..</text>
</g>
<g >
<title>firedrake.mesh.ExtrudedMeshTopology.__init__ (933 us, 0.02%)</title><rect x="47.8" y="87" width="0.3" height="15.0" fill="rgb(147.567405322128,159.698329366165,147.567405322128)" rx="2" ry="2" />
<text  x="50.84" y="97.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (14,688 us, 0.31%)</title><rect x="1110.0" y="151" width="3.6" height="15.0" fill="rgb(152.480123712118,115.680948459571,115.680948459571)" rx="2" ry="2" />
<text  x="1113.01" y="161.5" ></text>
</g>
<g >
<title>SCForwardElim (1,219,841 us, 25.53%)</title><rect x="796.9" y="135" width="301.2" height="15.0" fill="rgb(133.755829570873,133.755829570873,153.307579916943)" rx="2" ry="2" />
<text  x="799.90" y="145.5" >SCForwardElim</text>
</g>
<g >
<title>firedrake.variational_solver.LinearVariationalProblem.__init__ (16,290 us, 0.34%)</title><rect x="790.2" y="71" width="4.0" height="15.0" fill="rgb(153.908737911074,126.633657318234,126.633657318234)" rx="2" ry="2" />
<text  x="793.21" y="81.5" ></text>
</g>
<g >
<title>firedrake.functionspace.VectorFunctionSpace (9,171 us, 0.19%)</title><rect x="45.6" y="87" width="2.2" height="15.0" fill="rgb(147.860043361899,147.860043361899,108.860210138434)" rx="2" ry="2" />
<text  x="48.58" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (2,731 us, 0.06%)</title><rect x="1107.4" y="215" width="0.7" height="15.0" fill="rgb(126.884351239103,126.884351239103,151.977616368859)" rx="2" ry="2" />
<text  x="1110.42" y="225.5" ></text>
</g>
<g >
<title>firedrake (4,778,273 us, 100.00%)</title><rect x="10.0" y="55" width="1180.0" height="15.0" fill="rgb(149.655347062467,159.358431873552,149.655347062467)" rx="2" ry="2" />
<text  x="13.00" y="65.5" >firedrake</text>
</g>
<g >
<title>firedrake.functionspace.make_scalar_element (941 us, 0.02%)</title><rect x="48.5" y="87" width="0.3" height="15.0" fill="rgb(152.176385959231,113.352292354107,113.352292354107)" rx="2" ry="2" />
<text  x="51.55" y="97.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (76,845 us, 1.61%)</title><rect x="1161.5" y="151" width="19.0" height="15.0" fill="rgb(156.433629026026,145.991155866203,145.991155866203)" rx="2" ry="2" />
<text  x="1164.52" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (3,789 us, 0.08%)</title><rect x="1112.5" y="199" width="0.9" height="15.0" fill="rgb(148.054455643133,148.054455643133,109.802361962877)" rx="2" ry="2" />
<text  x="1115.48" y="209.5" ></text>
</g>
<g >
<title>firedrake.mesh.make_mesh_from_coordinates (1,018 us, 0.02%)</title><rect x="48.1" y="87" width="0.2" height="15.0" fill="rgb(156.311696569413,145.056340365497,145.056340365497)" rx="2" ry="2" />
<text  x="51.07" y="97.5" ></text>
</g>
<g >
<title>all (4,778,273 us, 100%)</title><rect x="10.0" y="39" width="1180.0" height="15.0" fill="rgb(140.263006494669,160.88741754738,140.263006494669)" rx="2" ry="2" />
<text  x="13.00" y="49.5" ></text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (38,476 us, 0.81%)</title><rect x="1180.5" y="119" width="9.5" height="15.0" fill="rgb(146.340204570071,159.898106232779,146.340204570071)" rx="2" ry="2" />
<text  x="1183.50" y="129.5" ></text>
</g>
<g >
<title>firedrake.function.Function.split (1,022 us, 0.02%)</title><rect x="794.0" y="119" width="0.2" height="15.0" fill="rgb(133.021793505996,162.066219661815,133.021793505996)" rx="2" ry="2" />
<text  x="796.98" y="129.5" ></text>
</g>
<g >
<title>DMPlexInterp (3,759 us, 0.08%)</title><rect x="789.3" y="119" width="0.9" height="15.0" fill="rgb(155.592799764345,139.54479819331,139.54479819331)" rx="2" ry="2" />
<text  x="792.28" y="129.5" ></text>
</g>
<g >
<title>PCSetUp (165,360 us, 3.46%)</title><rect x="1098.1" y="103" width="40.9" height="15.0" fill="rgb(156.390661263019,145.661736349812,145.661736349812)" rx="2" ry="2" />
<text  x="1101.15" y="113.5" >PCS..</text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (5,973 us, 0.13%)</title><rect x="1108.3" y="167" width="1.5" height="15.0" fill="rgb(150.350289809394,150.350289809394,120.928327537832)" rx="2" ry="2" />
<text  x="1111.35" y="177.5" ></text>
</g>
<g >
<title>DMPlexStratify (3,864 us, 0.08%)</title><rect x="69.2" y="87" width="0.9" height="15.0" fill="rgb(152.550489140937,116.220416747181,116.220416747181)" rx="2" ry="2" />
<text  x="72.18" y="97.5" ></text>
</g>
<g >
<title>firedrake.utility_meshes.SquareMesh (9,188 us, 0.19%)</title><rect x="787.9" y="71" width="2.3" height="15.0" fill="rgb(139.072661074292,109.498694002872,139.072661074292)" rx="2" ry="2" />
<text  x="790.94" y="81.5" ></text>
</g>
<g >
<title>firedrake.matrix_free.operators.ImplicitMatrixContext.__init__ (747 us, 0.02%)</title><rect x="1109.8" y="151" width="0.2" height="15.0" fill="rgb(154.975830459621,154.975830459621,143.344409150472)" rx="2" ry="2" />
<text  x="1112.82" y="161.5" ></text>
</g>
<g >
<title>FunctionSpaceData: CreateElement (6,721 us, 0.14%)</title><rect x="52.8" y="135" width="1.7" height="15.0" fill="rgb(148.630626197526,148.630626197526,112.594573111089)" rx="2" ry="2" />
<text  x="55.80" y="145.5" ></text>
</g>
<g >
<title>Log_Event_form0_cell_integral_otherwise (4,227 us, 0.09%)</title><rect x="1140.9" y="151" width="1.0" height="15.0" fill="rgb(155.878831436998,141.737707683652,141.737707683652)" rx="2" ry="2" />
<text  x="1143.90" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (951 us, 0.02%)</title><rect x="787.7" y="87" width="0.2" height="15.0" fill="rgb(132.878532669974,151.487026988512,151.487026988512)" rx="2" ry="2" />
<text  x="790.71" y="97.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (73,249 us, 1.53%)</title><rect x="1120.3" y="183" width="18.1" height="15.0" fill="rgb(143.654152577894,143.654152577894,155.223384369915)" rx="2" ry="2" />
<text  x="1123.33" y="193.5" ></text>
</g>
<g >
<title>firedrake.assemble.allocate_matrix (747 us, 0.02%)</title><rect x="1109.8" y="135" width="0.2" height="15.0" fill="rgb(111.31180132228,111.31180132228,148.963574449474)" rx="2" ry="2" />
<text  x="1112.82" y="145.5" ></text>
</g>
<g >
<title>CreateMesh (19,479 us, 0.41%)</title><rect x="59.1" y="71" width="4.8" height="15.0" fill="rgb(151.904873110981,151.904873110981,128.462077383984)" rx="2" ry="2" />
<text  x="62.12" y="81.5" ></text>
</g>
<g >
<title>FunctionSpaceData: CreateElement (4,557 us, 0.10%)</title><rect x="1108.7" y="199" width="1.1" height="15.0" fill="rgb(153.06264730295,120.146962655953,120.146962655953)" rx="2" ry="2" />
<text  x="1111.70" y="209.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (2,731 us, 0.06%)</title><rect x="1107.4" y="199" width="0.7" height="15.0" fill="rgb(126.727933134014,163.090801582835,126.727933134014)" rx="2" ry="2" />
<text  x="1110.42" y="209.5" ></text>
</g>
<g >
<title>firedrake.mesh._from_cell_list (5,462 us, 0.11%)</title><rect x="788.9" y="103" width="1.3" height="15.0" fill="rgb(154.678707592263,132.536758207353,132.536758207353)" rx="2" ry="2" />
<text  x="791.86" y="113.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalProblem.__init__ (11,358 us, 0.24%)</title><rect x="791.4" y="87" width="2.8" height="15.0" fill="rgb(132.816014457221,132.816014457221,153.125680217527)" rx="2" ry="2" />
<text  x="794.43" y="97.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (43,707 us, 0.91%)</title><rect x="48.3" y="71" width="10.8" height="15.0" fill="rgb(152.652980073218,117.006180561338,117.006180561338)" rx="2" ry="2" />
<text  x="51.33" y="81.5" ></text>
</g>
<g >
<title>ParLoopExecute (74,767 us, 1.56%)</title><rect x="799.3" y="183" width="18.4" height="15.0" fill="rgb(156.2474591618,144.563853573801,144.563853573801)" rx="2" ry="2" />
<text  x="802.26" y="193.5" ></text>
</g>
<g >
<title>ParLoopExecute (163,700 us, 3.43%)</title><rect x="1140.1" y="119" width="40.4" height="15.0" fill="rgb(125.208612855387,125.208612855387,151.653279907494)" rx="2" ry="2" />
<text  x="1143.07" y="129.5" >Par..</text>
</g>
<g >
<title>PetscBarrier (27,508 us, 0.58%)</title><rect x="63.9" y="71" width="6.8" height="15.0" fill="rgb(112.959994998867,146.322961666373,146.322961666373)" rx="2" ry="2" />
<text  x="66.93" y="81.5" ></text>
</g>
<g >
<title>DMPlexSymmetrize (2,373 us, 0.05%)</title><rect x="70.1" y="87" width="0.6" height="15.0" fill="rgb(117.412477086327,117.412477086327,150.144350403805)" rx="2" ry="2" />
<text  x="73.14" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (9,171 us, 0.19%)</title><rect x="45.6" y="151" width="2.2" height="15.0" fill="rgb(114.668011428539,146.765780740732,146.765780740732)" rx="2" ry="2" />
<text  x="48.58" y="161.5" ></text>
</g>
<g >
<title>firedrake.interpolation.make_interpolator (18,129 us, 0.38%)</title><rect x="1114.0" y="135" width="4.5" height="15.0" fill="rgb(154.836479351146,154.836479351146,142.669092240167)" rx="2" ry="2" />
<text  x="1117.01" y="145.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (2,731 us, 0.06%)</title><rect x="1107.4" y="167" width="0.7" height="15.0" fill="rgb(156.029473908009,142.892633294734,142.892633294734)" rx="2" ry="2" />
<text  x="1110.42" y="177.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (73,249 us, 1.53%)</title><rect x="1120.3" y="167" width="18.1" height="15.0" fill="rgb(108.680601992489,108.680601992489,148.454310063062)" rx="2" ry="2" />
<text  x="1123.33" y="177.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (11,846 us, 0.25%)</title><rect x="1106.9" y="135" width="2.9" height="15.0" fill="rgb(153.341488757507,122.284747140886,122.284747140886)" rx="2" ry="2" />
<text  x="1109.90" y="145.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (842 us, 0.02%)</title><rect x="1189.8" y="199" width="0.2" height="15.0" fill="rgb(120.710259392047,120.710259392047,150.782630850074)" rx="2" ry="2" />
<text  x="1192.79" y="209.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (3,700 us, 0.08%)</title><rect x="1189.1" y="151" width="0.9" height="15.0" fill="rgb(154.413892351357,130.506508027072,130.506508027072)" rx="2" ry="2" />
<text  x="1192.09" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (5,973 us, 0.13%)</title><rect x="1108.3" y="151" width="1.5" height="15.0" fill="rgb(143.593598028345,160.345228227944,143.593598028345)" rx="2" ry="2" />
<text  x="1111.35" y="161.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (9,171 us, 0.19%)</title><rect x="45.6" y="103" width="2.2" height="15.0" fill="rgb(112.156620904732,146.114679493819,146.114679493819)" rx="2" ry="2" />
<text  x="48.58" y="113.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.derivative (1,022 us, 0.02%)</title><rect x="794.0" y="103" width="0.2" height="15.0" fill="rgb(150.594351103618,150.594351103618,122.111086117536)" rx="2" ry="2" />
<text  x="796.98" y="113.5" ></text>
</g>
<g >
<title>ParLoopExecute (108,100 us, 2.26%)</title><rect x="18.9" y="103" width="26.7" height="15.0" fill="rgb(152.019383289621,112.148605220427,112.148605220427)" rx="2" ry="2" />
<text  x="21.88" y="113.5" >P..</text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (2,619 us, 0.05%)</title><rect x="1112.8" y="231" width="0.6" height="15.0" fill="rgb(107.083123513651,144.799328318354,144.799328318354)" rx="2" ry="2" />
<text  x="1115.77" y="241.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (40,774 us, 0.85%)</title><rect x="49.0" y="103" width="10.1" height="15.0" fill="rgb(145.466825973935,160.040284143778,145.466825973935)" rx="2" ry="2" />
<text  x="52.05" y="113.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (9,171 us, 0.19%)</title><rect x="45.6" y="119" width="2.2" height="15.0" fill="rgb(144.817196633929,160.146037757267,144.817196633929)" rx="2" ry="2" />
<text  x="48.58" y="129.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (2,619 us, 0.05%)</title><rect x="1112.8" y="215" width="0.6" height="15.0" fill="rgb(140.268892171409,153.403046118513,153.403046118513)" rx="2" ry="2" />
<text  x="1115.77" y="225.5" ></text>
</g>
<g >
<title>firedrake.functionspace.make_scalar_element (1,045 us, 0.02%)</title><rect x="1108.1" y="151" width="0.2" height="15.0" fill="rgb(144.653459289622,160.172692673782,144.653459289622)" rx="2" ry="2" />
<text  x="1111.09" y="161.5" ></text>
</g>
<g >
<title>firedrake.function.Function.__init__ (1,509 us, 0.03%)</title><rect x="1113.6" y="135" width="0.4" height="15.0" fill="rgb(147.601672437803,147.601672437803,107.60810489089)" rx="2" ry="2" />
<text  x="1116.64" y="145.5" ></text>
</g>
<g >
<title>firedrake.functionspace.MixedFunctionSpace (4,111 us, 0.09%)</title><rect x="1107.1" y="151" width="1.0" height="15.0" fill="rgb(109.639032067401,109.639032067401,148.639812658207)" rx="2" ry="2" />
<text  x="1110.08" y="161.5" ></text>
</g>
</g>
</svg>
