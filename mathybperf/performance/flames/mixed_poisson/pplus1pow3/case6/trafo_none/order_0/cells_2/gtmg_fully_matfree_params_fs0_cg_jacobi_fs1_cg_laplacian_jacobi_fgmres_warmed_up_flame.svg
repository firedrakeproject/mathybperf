<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="283" onload="init(evt)" viewBox="0 0 1200 283" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:13px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:18px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 13 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (1 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="283.0" fill="url(#background)"  />
<text id="title" x="600.00" y="26" >Firedrake example</text>
<text id="details" x="10.00" y="265" > </text>
<text id="unzoom" x="10.00" y="26" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="26" >Search</text>
<text id="ignorecase" x="1174.00" y="26" >ic</text>
<text id="matched" x="1090.00" y="265" > </text>
<g id="frames">
<g >
<title>firedrake.assemble.allocate_matrix (7,021 us, 0.15%)</title><rect x="795.2" y="87" width="1.7" height="15.0" fill="rgb(156.459804159759,146.191831891485,146.191831891485)" rx="2" ry="2" />
<text  x="798.17" y="97.5" ></text>
</g>
<g >
<title>firedrake.assemble.allocate_matrix (747 us, 0.02%)</title><rect x="1109.8" y="135" width="0.2" height="15.0" fill="rgb(133.249207950546,94.5760953732737,133.249207950546)" rx="2" ry="2" />
<text  x="1112.82" y="145.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (951 us, 0.02%)</title><rect x="787.7" y="87" width="0.2" height="15.0" fill="rgb(151.362224894474,151.362224894474,125.832320642451)" rx="2" ry="2" />
<text  x="790.71" y="97.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (2,791 us, 0.06%)</title><rect x="796.2" y="119" width="0.7" height="15.0" fill="rgb(151.20425812204,151.20425812204,125.066789360654)" rx="2" ry="2" />
<text  x="799.21" y="129.5" ></text>
</g>
<g >
<title>CreateMesh (19,479 us, 0.41%)</title><rect x="59.1" y="71" width="4.8" height="15.0" fill="rgb(149.571456248684,149.571456248684,117.153980282084)" rx="2" ry="2" />
<text  x="62.12" y="81.5" ></text>
</g>
<g >
<title>firedrake.functionspace.make_scalar_element (1,045 us, 0.02%)</title><rect x="1108.1" y="151" width="0.2" height="15.0" fill="rgb(110.23509696433,145.616506620382,145.616506620382)" rx="2" ry="2" />
<text  x="1111.09" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (2,731 us, 0.06%)</title><rect x="1107.4" y="199" width="0.7" height="15.0" fill="rgb(128.808432315546,128.808432315546,152.350019157848)" rx="2" ry="2" />
<text  x="1110.42" y="209.5" ></text>
</g>
<g >
<title>KSPSolve (1,219,841 us, 25.53%)</title><rect x="796.9" y="103" width="301.2" height="15.0" fill="rgb(132.70253140771,162.118192561536,132.70253140771)" rx="2" ry="2" />
<text  x="799.90" y="113.5" >KSPSolve</text>
</g>
<g >
<title>PetscBarrier (27,508 us, 0.58%)</title><rect x="63.9" y="71" width="6.8" height="15.0" fill="rgb(140.248560437074,140.248560437074,154.56423750395)" rx="2" ry="2" />
<text  x="66.93" y="81.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_pyop2_kernel_uniform_extrusion (107,380 us, 2.25%)</title><rect x="19.1" y="119" width="26.5" height="15.0" fill="rgb(144.795445178299,144.795445178299,155.444279711929)" rx="2" ry="2" />
<text  x="22.06" y="129.5" >P..</text>
</g>
<g >
<title>FunctionSpaceData: CreateElement (6,721 us, 0.14%)</title><rect x="52.8" y="135" width="1.7" height="15.0" fill="rgb(147.356271606847,147.356271606847,155.939923536809)" rx="2" ry="2" />
<text  x="55.80" y="145.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.solve (1,591,796 us, 33.31%)</title><rect x="796.9" y="71" width="393.1" height="15.0" fill="rgb(110.190478178178,110.190478178178,148.746544163518)" rx="2" ry="2" />
<text  x="799.90" y="81.5" >firedrake.variational_solver.NonlinearVariational..</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (73,963 us, 1.55%)</title><rect x="799.5" y="215" width="18.2" height="15.0" fill="rgb(135.058262321926,161.734701482477,135.058262321926)" rx="2" ry="2" />
<text  x="802.46" y="225.5" ></text>
</g>
<g >
<title>firedrake.matrix_free.operators.ImplicitMatrixContext.__init__ (7,021 us, 0.15%)</title><rect x="795.2" y="103" width="1.7" height="15.0" fill="rgb(155.760045223197,140.827013377844,140.827013377844)" rx="2" ry="2" />
<text  x="798.17" y="113.5" ></text>
</g>
<g >
<title>firedrake.extrusion_utils.make_extruded_coords (143,265 us, 3.00%)</title><rect x="10.2" y="87" width="35.4" height="15.0" fill="rgb(140.714287578667,140.714287578667,154.654378241032)" rx="2" ry="2" />
<text  x="13.20" y="97.5" >fi..</text>
</g>
<g >
<title>CreateFunctionSpace (2,731 us, 0.06%)</title><rect x="1107.4" y="167" width="0.7" height="15.0" fill="rgb(137.308115412823,152.63543732925,152.63543732925)" rx="2" ry="2" />
<text  x="1110.42" y="177.5" ></text>
</g>
<g >
<title>FunctionSpaceData: CreateElement (940 us, 0.02%)</title><rect x="47.6" y="167" width="0.2" height="15.0" fill="rgb(126.744839952717,163.088049310023,126.744839952717)" rx="2" ry="2" />
<text  x="50.61" y="177.5" ></text>
</g>
<g >
<title>firedrake.mesh.ExtrudedMeshTopology.__init__ (933 us, 0.02%)</title><rect x="47.8" y="87" width="0.3" height="15.0" fill="rgb(131.540668255879,162.307333074624,131.540668255879)" rx="2" ry="2" />
<text  x="50.84" y="97.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (7,614 us, 0.16%)</title><rect x="1111.5" y="183" width="1.9" height="15.0" fill="rgb(106.558230491644,144.663244942278,144.663244942278)" rx="2" ry="2" />
<text  x="1114.54" y="193.5" ></text>
</g>
<g >
<title>firedrake.mesh.make_mesh_from_coordinates (1,018 us, 0.02%)</title><rect x="48.1" y="87" width="0.2" height="15.0" fill="rgb(110.03140174247,145.563696748048,145.563696748048)" rx="2" ry="2" />
<text  x="51.07" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (40,774 us, 0.85%)</title><rect x="49.0" y="103" width="10.1" height="15.0" fill="rgb(109.700768323275,109.700768323275,148.651761610956)" rx="2" ry="2" />
<text  x="52.05" y="113.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (9,171 us, 0.19%)</title><rect x="45.6" y="103" width="2.2" height="15.0" fill="rgb(147.959293424356,147.959293424356,109.341191210339)" rx="2" ry="2" />
<text  x="48.58" y="113.5" ></text>
</g>
<g >
<title>CreateMesh (1,506 us, 0.03%)</title><rect x="788.5" y="103" width="0.4" height="15.0" fill="rgb(142.550121585088,142.550121585088,155.009700951953)" rx="2" ry="2" />
<text  x="791.49" y="113.5" ></text>
</g>
<g >
<title>Log_Event_form0_cell_integral_otherwise (4,227 us, 0.09%)</title><rect x="1140.9" y="151" width="1.0" height="15.0" fill="rgb(139.383183214063,153.173417870313,153.173417870313)" rx="2" ry="2" />
<text  x="1143.90" y="161.5" ></text>
</g>
<g >
<title>PCApply (1,219,841 us, 25.53%)</title><rect x="796.9" y="119" width="301.2" height="15.0" fill="rgb(155.174379697528,136.336911014379,136.336911014379)" rx="2" ry="2" />
<text  x="799.90" y="129.5" >PCApply</text>
</g>
<g >
<title>HybridRHS (1,135,518 us, 23.76%)</title><rect x="817.7" y="151" width="280.4" height="15.0" fill="rgb(156.414895472918,145.84753195904,145.84753195904)" rx="2" ry="2" />
<text  x="820.73" y="161.5" >HybridRHS</text>
</g>
<g >
<title>SCForwardElim (1,219,841 us, 25.53%)</title><rect x="796.9" y="135" width="301.2" height="15.0" fill="rgb(144.522041910183,154.505714569307,154.505714569307)" rx="2" ry="2" />
<text  x="799.90" y="145.5" >SCForwardElim</text>
</g>
<g >
<title>FunctionSpaceData: CreateElement (4,557 us, 0.10%)</title><rect x="1108.7" y="199" width="1.1" height="15.0" fill="rgb(127.366365725797,150.057946669651,150.057946669651)" rx="2" ry="2" />
<text  x="1111.70" y="209.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.WithGeometry.split (876 us, 0.02%)</title><rect x="1113.4" y="183" width="0.2" height="15.0" fill="rgb(125.184419292397,125.184419292397,151.648597282399)" rx="2" ry="2" />
<text  x="1116.42" y="193.5" ></text>
</g>
<g >
<title>firedrake.utility_meshes.RectangleMesh (9,188 us, 0.19%)</title><rect x="787.9" y="87" width="2.3" height="15.0" fill="rgb(132.292876873569,132.292876873569,153.024427781981)" rx="2" ry="2" />
<text  x="790.94" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspace.MixedFunctionSpace (2,684 us, 0.06%)</title><rect x="787.3" y="71" width="0.6" height="15.0" fill="rgb(152.666788171158,152.666788171158,132.154434983304)" rx="2" ry="2" />
<text  x="790.28" y="81.5" ></text>
</g>
<g >
<title>firedrake.matrix_free.operators.ImplicitMatrixContext.__init__ (747 us, 0.02%)</title><rect x="1109.8" y="151" width="0.2" height="15.0" fill="rgb(154.360771860671,130.099250931813,130.099250931813)" rx="2" ry="2" />
<text  x="1112.82" y="161.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (43,707 us, 0.91%)</title><rect x="48.3" y="71" width="10.8" height="15.0" fill="rgb(147.077419273691,130.010886888832,147.077419273691)" rx="2" ry="2" />
<text  x="51.33" y="81.5" ></text>
</g>
<g >
<title>DMPlexSymmetrize (2,373 us, 0.05%)</title><rect x="70.1" y="87" width="0.6" height="15.0" fill="rgb(133.479617424212,151.642863776648,151.642863776648)" rx="2" ry="2" />
<text  x="73.14" y="97.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.derivative (1,022 us, 0.02%)</title><rect x="794.0" y="103" width="0.2" height="15.0" fill="rgb(127.672772357231,127.672772357231,152.130214004625)" rx="2" ry="2" />
<text  x="796.98" y="113.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (9,171 us, 0.19%)</title><rect x="45.6" y="135" width="2.2" height="15.0" fill="rgb(155.904927981129,155.904927981129,147.846958677778)" rx="2" ry="2" />
<text  x="48.58" y="145.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (5,973 us, 0.13%)</title><rect x="1108.3" y="151" width="1.5" height="15.0" fill="rgb(149.858242697543,159.325402351563,149.858242697543)" rx="2" ry="2" />
<text  x="1111.35" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspace.MixedFunctionSpace (4,111 us, 0.09%)</title><rect x="1107.1" y="151" width="1.0" height="15.0" fill="rgb(140.707213067908,153.516684869458,153.516684869458)" rx="2" ry="2" />
<text  x="1110.08" y="161.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (10,705 us, 0.22%)</title><rect x="1111.0" y="167" width="2.6" height="15.0" fill="rgb(148.828847805645,148.828847805645,113.555185519666)" rx="2" ry="2" />
<text  x="1113.99" y="177.5" ></text>
</g>
<g >
<title>firedrake.parloops.par_loop (80,726 us, 1.69%)</title><rect x="1118.5" y="135" width="19.9" height="15.0" fill="rgb(153.328505747669,122.185210732132,122.185210732132)" rx="2" ry="2" />
<text  x="1121.48" y="145.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.LinearVariationalProblem.__init__ (16,290 us, 0.34%)</title><rect x="790.2" y="71" width="4.0" height="15.0" fill="rgb(137.386059062539,137.386059062539,154.010204979846)" rx="2" ry="2" />
<text  x="793.21" y="81.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (5,973 us, 0.13%)</title><rect x="1108.3" y="183" width="1.5" height="15.0" fill="rgb(156.738470369588,148.32827283351,148.32827283351)" rx="2" ry="2" />
<text  x="1111.35" y="193.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (41,873 us, 0.88%)</title><rect x="48.8" y="87" width="10.3" height="15.0" fill="rgb(150.352527351994,159.244937407815,150.352527351994)" rx="2" ry="2" />
<text  x="51.78" y="97.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalProblem.__init__ (11,358 us, 0.24%)</title><rect x="791.4" y="87" width="2.8" height="15.0" fill="rgb(154.411351126409,154.411351126409,140.608855458753)" rx="2" ry="2" />
<text  x="794.43" y="97.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (74,585 us, 1.56%)</title><rect x="1141.9" y="151" width="18.5" height="15.0" fill="rgb(136.930146357924,161.429976174291,136.930146357924)" rx="2" ry="2" />
<text  x="1144.95" y="161.5" ></text>
</g>
<g >
<title>SNESSolve (1,591,796 us, 33.31%)</title><rect x="796.9" y="87" width="393.1" height="15.0" fill="rgb(154.642589673094,132.259854160384,132.259854160384)" rx="2" ry="2" />
<text  x="799.90" y="97.5" >SNESSolve</text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (6,343 us, 0.13%)</title><rect x="1188.4" y="135" width="1.6" height="15.0" fill="rgb(151.10119824325,151.10119824325,124.567345332673)" rx="2" ry="2" />
<text  x="1191.43" y="145.5" ></text>
</g>
<g >
<title>HybridInit (165,360 us, 3.46%)</title><rect x="1098.1" y="119" width="40.9" height="15.0" fill="rgb(114.48719404825,146.718902160657,146.718902160657)" rx="2" ry="2" />
<text  x="1101.15" y="129.5" >Hyb..</text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (73,963 us, 1.55%)</title><rect x="799.5" y="199" width="18.2" height="15.0" fill="rgb(149.735474860047,149.735474860047,117.948839706383)" rx="2" ry="2" />
<text  x="802.46" y="209.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (3,700 us, 0.08%)</title><rect x="1189.1" y="151" width="0.9" height="15.0" fill="rgb(155.310274495441,137.378771131717,137.378771131717)" rx="2" ry="2" />
<text  x="1192.09" y="161.5" ></text>
</g>
<g >
<title>ParLoopExecute (73,249 us, 1.53%)</title><rect x="1120.3" y="151" width="18.1" height="15.0" fill="rgb(153.667156418777,153.667156418777,137.002373414072)" rx="2" ry="2" />
<text  x="1123.33" y="161.5" ></text>
</g>
<g >
<title>ParLoopExecute (163,700 us, 3.43%)</title><rect x="1140.1" y="119" width="40.4" height="15.0" fill="rgb(137.92577406129,137.92577406129,154.114665947346)" rx="2" ry="2" />
<text  x="1143.07" y="129.5" >Par..</text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (14,688 us, 0.31%)</title><rect x="1110.0" y="151" width="3.6" height="15.0" fill="rgb(153.502540661831,153.502540661831,136.204620130411)" rx="2" ry="2" />
<text  x="1113.01" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (9,171 us, 0.19%)</title><rect x="45.6" y="151" width="2.2" height="15.0" fill="rgb(129.214346705012,162.686036582905,129.214346705012)" rx="2" ry="2" />
<text  x="48.58" y="161.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.__init__ (10,820 us, 0.23%)</title><rect x="794.2" y="71" width="2.7" height="15.0" fill="rgb(153.4335807249,122.990785557563,122.990785557563)" rx="2" ry="2" />
<text  x="797.23" y="81.5" ></text>
</g>
<g >
<title>ParLoopExecute (74,767 us, 1.56%)</title><rect x="799.3" y="183" width="18.4" height="15.0" fill="rgb(121.2927447682,148.483304199163,148.483304199163)" rx="2" ry="2" />
<text  x="802.26" y="193.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (1,580 us, 0.03%)</title><rect x="1189.6" y="183" width="0.4" height="15.0" fill="rgb(153.223382349102,121.379264676451,121.379264676451)" rx="2" ry="2" />
<text  x="1192.61" y="193.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (11,846 us, 0.25%)</title><rect x="1106.9" y="135" width="2.9" height="15.0" fill="rgb(111.054864581643,111.054864581643,148.913844757737)" rx="2" ry="2" />
<text  x="1109.90" y="145.5" ></text>
</g>
<g >
<title>firedrake (4,778,273 us, 100.00%)</title><rect x="10.0" y="55" width="1180.0" height="15.0" fill="rgb(154.485657112543,154.485657112543,140.968953699246)" rx="2" ry="2" />
<text  x="13.00" y="65.5" >firedrake</text>
</g>
<g >
<title>HybridBreak (84,323 us, 1.76%)</title><rect x="796.9" y="151" width="20.8" height="15.0" fill="rgb(114.02065626144,114.02065626144,149.487868953827)" rx="2" ry="2" />
<text  x="799.90" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (40,774 us, 0.85%)</title><rect x="49.0" y="119" width="10.1" height="15.0" fill="rgb(156.15010263697,143.817453550101,143.817453550101)" rx="2" ry="2" />
<text  x="52.05" y="129.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (2,731 us, 0.06%)</title><rect x="1107.4" y="183" width="0.7" height="15.0" fill="rgb(154.730458110685,154.730458110685,142.155296997933)" rx="2" ry="2" />
<text  x="1110.42" y="193.5" ></text>
</g>
<g >
<title>CreateExtMesh (155,195 us, 3.25%)</title><rect x="10.0" y="71" width="38.3" height="15.0" fill="rgb(153.133076809711,120.686922207786,120.686922207786)" rx="2" ry="2" />
<text  x="13.00" y="81.5" >Cr..</text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (10,336 us, 0.22%)</title><rect x="791.4" y="103" width="2.6" height="15.0" fill="rgb(154.49797794649,131.151164256421,131.151164256421)" rx="2" ry="2" />
<text  x="794.43" y="113.5" ></text>
</g>
<g >
<title>firedrake.mesh.MeshTopology._facets (18,851 us, 0.39%)</title><rect x="54.5" y="135" width="4.6" height="15.0" fill="rgb(148.04906322283,148.04906322283,109.776229464483)" rx="2" ry="2" />
<text  x="57.46" y="145.5" ></text>
</g>
<g >
<title>firedrake.__init__ (2,901,606 us, 60.72%)</title><rect x="70.7" y="71" width="716.6" height="15.0" fill="rgb(110.266127887232,145.624551674468,145.624551674468)" rx="2" ry="2" />
<text  x="73.72" y="81.5" >firedrake.__init__</text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (2,619 us, 0.05%)</title><rect x="1112.8" y="231" width="0.6" height="15.0" fill="rgb(150.332084169675,150.332084169675,120.840100206889)" rx="2" ry="2" />
<text  x="1115.77" y="241.5" ></text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (38,476 us, 0.81%)</title><rect x="1180.5" y="119" width="9.5" height="15.0" fill="rgb(132.911448260285,93.7105861669802,132.911448260285)" rx="2" ry="2" />
<text  x="1183.50" y="129.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (2,272 us, 0.05%)</title><rect x="1138.4" y="135" width="0.6" height="15.0" fill="rgb(151.760488832812,151.760488832812,127.762368959011)" rx="2" ry="2" />
<text  x="1141.42" y="145.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (73,249 us, 1.53%)</title><rect x="1120.3" y="167" width="18.1" height="15.0" fill="rgb(136.467282702297,161.505326071719,136.467282702297)" rx="2" ry="2" />
<text  x="1123.33" y="177.5" ></text>
</g>
<g >
<title>CreateMesh (1,506 us, 0.03%)</title><rect x="788.5" y="119" width="0.4" height="15.0" fill="rgb(154.179370157531,128.708504541071,128.708504541071)" rx="2" ry="2" />
<text  x="791.49" y="129.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (2,731 us, 0.06%)</title><rect x="1107.4" y="215" width="0.7" height="15.0" fill="rgb(126.183622007329,163.1794103709,126.183622007329)" rx="2" ry="2" />
<text  x="1110.42" y="225.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (106,669 us, 2.23%)</title><rect x="19.2" y="135" width="26.4" height="15.0" fill="rgb(156.430265978193,145.965372499478,145.965372499478)" rx="2" ry="2" />
<text  x="22.24" y="145.5" >p..</text>
</g>
<g >
<title>firedrake.function.Function.__init__ (1,509 us, 0.03%)</title><rect x="1113.6" y="135" width="0.4" height="15.0" fill="rgb(152.442064162326,115.389158577834,115.389158577834)" rx="2" ry="2" />
<text  x="1116.64" y="145.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (73,249 us, 1.53%)</title><rect x="1120.3" y="183" width="18.1" height="15.0" fill="rgb(139.120208631495,161.073454408826,139.120208631495)" rx="2" ry="2" />
<text  x="1123.33" y="193.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (5,973 us, 0.13%)</title><rect x="1108.3" y="167" width="1.5" height="15.0" fill="rgb(154.636038053481,132.209625076686,132.209625076686)" rx="2" ry="2" />
<text  x="1111.35" y="177.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (76,845 us, 1.61%)</title><rect x="1161.5" y="151" width="19.0" height="15.0" fill="rgb(155.049352907579,135.378372291439,135.378372291439)" rx="2" ry="2" />
<text  x="1164.52" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (9,171 us, 0.19%)</title><rect x="45.6" y="119" width="2.2" height="15.0" fill="rgb(149.21801589609,149.21801589609,115.441153957976)" rx="2" ry="2" />
<text  x="48.58" y="129.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.action (4,932 us, 0.10%)</title><rect x="790.2" y="87" width="1.2" height="15.0" fill="rgb(114.918466395791,114.918466395791,149.66163865725)" rx="2" ry="2" />
<text  x="793.21" y="97.5" ></text>
</g>
<g >
<title>Log_Event_form1_cell_integral_otherwise (2,363 us, 0.05%)</title><rect x="1160.9" y="151" width="0.6" height="15.0" fill="rgb(150.038511771863,159.296056223185,150.038511771863)" rx="2" ry="2" />
<text  x="1163.94" y="161.5" ></text>
</g>
<g >
<title>all (4,778,273 us, 100%)</title><rect x="10.0" y="39" width="1180.0" height="15.0" fill="rgb(150.107255230535,150.107255230535,119.750544578747)" rx="2" ry="2" />
<text  x="13.00" y="49.5" ></text>
</g>
<g >
<title>firedrake.functionspace.make_scalar_element (941 us, 0.02%)</title><rect x="48.5" y="87" width="0.3" height="15.0" fill="rgb(123.782773446213,149.128867189759,149.128867189759)" rx="2" ry="2" />
<text  x="51.55" y="97.5" ></text>
</g>
<g >
<title>Mesh: reorder (3,901 us, 0.08%)</title><rect x="63.0" y="87" width="0.9" height="15.0" fill="rgb(153.925201552971,126.759878572778,126.759878572778)" rx="2" ry="2" />
<text  x="65.97" y="97.5" ></text>
</g>
<g >
<title>ParLoopExecute (108,100 us, 2.26%)</title><rect x="18.9" y="103" width="26.7" height="15.0" fill="rgb(104.269253891031,144.069806564341,144.069806564341)" rx="2" ry="2" />
<text  x="21.88" y="113.5" >P..</text>
</g>
<g >
<title>firedrake.function.Function.split (1,022 us, 0.02%)</title><rect x="794.0" y="119" width="0.2" height="15.0" fill="rgb(151.620582914248,151.620582914248,127.084363353665)" rx="2" ry="2" />
<text  x="796.98" y="129.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_form0_cell_integral_otherwise (80,873 us, 1.69%)</title><rect x="1140.4" y="135" width="20.0" height="15.0" fill="rgb(151.213925929836,151.213925929836,125.113641044591)" rx="2" ry="2" />
<text  x="1143.39" y="145.5" ></text>
</g>
<g >
<title>DMPlexInterp (3,759 us, 0.08%)</title><rect x="789.3" y="119" width="0.9" height="15.0" fill="rgb(153.75689275427,125.469511116074,125.469511116074)" rx="2" ry="2" />
<text  x="792.28" y="129.5" ></text>
</g>
<g >
<title>firedrake.functionspace.VectorFunctionSpace (9,171 us, 0.19%)</title><rect x="45.6" y="87" width="2.2" height="15.0" fill="rgb(131.231960581086,131.231960581086,152.819089144726)" rx="2" ry="2" />
<text  x="48.58" y="97.5" ></text>
</g>
<g >
<title>PCSetUp (165,360 us, 3.46%)</title><rect x="1098.1" y="103" width="40.9" height="15.0" fill="rgb(153.489681996723,123.420895308207,123.420895308207)" rx="2" ry="2" />
<text  x="1101.15" y="113.5" >PCS..</text>
</g>
<g >
<title>CreateMesh (4,143 us, 0.09%)</title><rect x="60.3" y="87" width="1.0" height="15.0" fill="rgb(150.000779060942,150.000779060942,119.234544679952)" rx="2" ry="2" />
<text  x="63.31" y="97.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (14,688 us, 0.31%)</title><rect x="1110.0" y="135" width="3.6" height="15.0" fill="rgb(154.075353740392,127.911045343009,127.911045343009)" rx="2" ry="2" />
<text  x="1113.01" y="145.5" ></text>
</g>
<g >
<title>firedrake.interpolation.make_interpolator (18,129 us, 0.38%)</title><rect x="1114.0" y="135" width="4.5" height="15.0" fill="rgb(144.108718156933,144.108718156933,155.311364804568)" rx="2" ry="2" />
<text  x="1117.01" y="145.5" ></text>
</g>
<g >
<title>DMPlexStratify (3,864 us, 0.08%)</title><rect x="69.2" y="87" width="0.9" height="15.0" fill="rgb(155.613353027514,155.613353027514,146.433941594876)" rx="2" ry="2" />
<text  x="72.18" y="97.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_form1_cell_integral_otherwise (81,525 us, 1.71%)</title><rect x="1160.4" y="135" width="20.1" height="15.0" fill="rgb(130.567873697171,162.46569497953,130.567873697171)" rx="2" ry="2" />
<text  x="1163.37" y="145.5" ></text>
</g>
<g >
<title>Mesh: numbering (6,624 us, 0.14%)</title><rect x="61.3" y="87" width="1.7" height="15.0" fill="rgb(146.987481544232,146.987481544232,155.868544815013)" rx="2" ry="2" />
<text  x="64.33" y="97.5" ></text>
</g>
<g >
<title>firedrake.utility_meshes.SquareMesh (9,188 us, 0.19%)</title><rect x="787.9" y="71" width="2.3" height="15.0" fill="rgb(141.921482280411,141.921482280411,154.888028828467)" rx="2" ry="2" />
<text  x="790.94" y="81.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (842 us, 0.02%)</title><rect x="1189.8" y="199" width="0.2" height="15.0" fill="rgb(145.398344160517,145.398344160517,155.560969837519)" rx="2" ry="2" />
<text  x="1192.79" y="209.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (2,619 us, 0.05%)</title><rect x="1112.8" y="215" width="0.6" height="15.0" fill="rgb(120.981005374991,148.402482874998,148.402482874998)" rx="2" ry="2" />
<text  x="1115.77" y="225.5" ></text>
</g>
<g >
<title>SNESFunctionEval (206,595 us, 4.32%)</title><rect x="1139.0" y="103" width="51.0" height="15.0" fill="rgb(150.561076897934,159.210987481732,150.561076897934)" rx="2" ry="2" />
<text  x="1141.98" y="113.5" >SNES..</text>
</g>
<g >
<title>firedrake.mesh._Facets.__init__ (888 us, 0.02%)</title><rect x="58.9" y="151" width="0.2" height="15.0" fill="rgb(131.238589723677,162.356508649634,131.238589723677)" rx="2" ry="2" />
<text  x="61.90" y="161.5" ></text>
</g>
<g >
<title>firedrake.parloops.par_loop (83,418 us, 1.75%)</title><rect x="797.1" y="167" width="20.6" height="15.0" fill="rgb(150.753725122724,150.753725122724,122.883437133202)" rx="2" ry="2" />
<text  x="800.13" y="177.5" ></text>
</g>
<g >
<title>firedrake.functionspace.make_scalar_element (1,618 us, 0.03%)</title><rect x="1112.1" y="199" width="0.4" height="15.0" fill="rgb(108.62158268269,108.62158268269,148.442886970843)" rx="2" ry="2" />
<text  x="1115.08" y="209.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.action (4,230 us, 0.09%)</title><rect x="795.2" y="119" width="1.0" height="15.0" fill="rgb(136.056359119851,136.056359119851,153.752843700616)" rx="2" ry="2" />
<text  x="798.17" y="129.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (1,580 us, 0.03%)</title><rect x="1189.6" y="167" width="0.4" height="15.0" fill="rgb(154.825207710655,154.825207710655,142.614468136251)" rx="2" ry="2" />
<text  x="1192.61" y="177.5" ></text>
</g>
<g >
<title>firedrake.mesh._from_cell_list (5,462 us, 0.11%)</title><rect x="788.9" y="103" width="1.3" height="15.0" fill="rgb(140.215171613504,160.895204621058,140.215171613504)" rx="2" ry="2" />
<text  x="791.86" y="113.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (3,789 us, 0.08%)</title><rect x="1112.5" y="199" width="0.9" height="15.0" fill="rgb(136.471498026255,102.833213692278,136.471498026255)" rx="2" ry="2" />
<text  x="1115.48" y="209.5" ></text>
</g>
</g>
</svg>
