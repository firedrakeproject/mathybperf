<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="283" onload="init(evt)" viewBox="0 0 1200 283" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:13px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:18px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 13 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (1 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="283.0" fill="url(#background)"  />
<text id="title" x="600.00" y="26" >Firedrake example</text>
<text id="details" x="10.00" y="265" > </text>
<text id="unzoom" x="10.00" y="26" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="26" >Search</text>
<text id="ignorecase" x="1174.00" y="26" >ic</text>
<text id="matched" x="1090.00" y="265" > </text>
<g id="frames">
<g >
<title>firedrake.functionspace.make_scalar_element (2,066 us, 0.04%)</title><rect x="1119.9" y="199" width="0.4" height="15.0" fill="rgb(148.196878859578,148.196878859578,110.492566781033)" rx="2" ry="2" />
<text  x="1122.86" y="209.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_pyop2_kernel_uniform_extrusion (108,324 us, 2.17%)</title><rect x="18.6" y="119" width="25.6" height="15.0" fill="rgb(114.23398356507,146.653254998352,146.653254998352)" rx="2" ry="2" />
<text  x="21.61" y="129.5" >P..</text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (772 us, 0.02%)</title><rect x="1189.8" y="167" width="0.2" height="15.0" fill="rgb(151.483586572717,151.483586572717,126.420458006242)" rx="2" ry="2" />
<text  x="1192.82" y="177.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (4,585 us, 0.09%)</title><rect x="1144.0" y="135" width="1.1" height="15.0" fill="rgb(141.663663052673,153.764653384026,153.764653384026)" rx="2" ry="2" />
<text  x="1146.98" y="145.5" ></text>
</g>
<g >
<title>FunctionSpaceData: CreateElement (4,122 us, 0.08%)</title><rect x="1116.2" y="199" width="1.0" height="15.0" fill="rgb(154.455077677445,154.455077677445,140.820761052235)" rx="2" ry="2" />
<text  x="1119.19" y="209.5" ></text>
</g>
<g >
<title>SNESFunctionEval (190,467 us, 3.81%)</title><rect x="1145.1" y="103" width="44.9" height="15.0" fill="rgb(148.066420290342,148.066420290342,109.860344483967)" rx="2" ry="2" />
<text  x="1148.06" y="113.5" >SNE..</text>
</g>
<g >
<title>Log_Event_form0_cell_integral_otherwise (3,826 us, 0.08%)</title><rect x="1146.9" y="151" width="0.9" height="15.0" fill="rgb(130.410723850946,150.847224702097,150.847224702097)" rx="2" ry="2" />
<text  x="1149.86" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (9,334 us, 0.19%)</title><rect x="44.2" y="119" width="2.2" height="15.0" fill="rgb(136.330494601492,161.527593902083,136.330494601492)" rx="2" ry="2" />
<text  x="47.17" y="129.5" ></text>
</g>
<g >
<title>firedrake.parloops.par_loop (73,442 us, 1.47%)</title><rect x="1126.6" y="135" width="17.4" height="15.0" fill="rgb(151.849977621894,151.849977621894,128.196045398409)" rx="2" ry="2" />
<text  x="1129.65" y="145.5" ></text>
</g>
<g >
<title>ParLoopExecute (67,036 us, 1.34%)</title><rect x="1128.2" y="151" width="15.8" height="15.0" fill="rgb(154.791609716842,133.402341162454,133.402341162454)" rx="2" ry="2" />
<text  x="1131.16" y="161.5" ></text>
</g>
<g >
<title>firedrake.utility_meshes.RectangleMesh (8,335 us, 0.17%)</title><rect x="825.5" y="87" width="1.9" height="15.0" fill="rgb(152.756078153868,117.796599179657,117.796599179657)" rx="2" ry="2" />
<text  x="828.48" y="97.5" ></text>
</g>
<g >
<title>HybridBreak (78,419 us, 1.57%)</title><rect x="833.5" y="151" width="18.5" height="15.0" fill="rgb(122.687131211842,122.687131211842,151.165251202292)" rx="2" ry="2" />
<text  x="836.46" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspace.make_scalar_element (815 us, 0.02%)</title><rect x="1115.7" y="151" width="0.2" height="15.0" fill="rgb(148.263562263604,148.263562263604,110.815724815927)" rx="2" ry="2" />
<text  x="1118.71" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (5,357 us, 0.11%)</title><rect x="1115.9" y="183" width="1.3" height="15.0" fill="rgb(130.951418603763,162.403257436597,130.951418603763)" rx="2" ry="2" />
<text  x="1118.90" y="193.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.LinearVariationalProblem.__init__ (15,756 us, 0.32%)</title><rect x="827.4" y="71" width="3.8" height="15.0" fill="rgb(135.829619977343,161.609131631595,135.829619977343)" rx="2" ry="2" />
<text  x="830.44" y="81.5" ></text>
</g>
<g >
<title>firedrake.functionspace.MixedFunctionSpace (2,456 us, 0.05%)</title><rect x="824.9" y="71" width="0.6" height="15.0" fill="rgb(124.004905739316,124.004905739316,151.420304336642)" rx="2" ry="2" />
<text  x="827.90" y="81.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (5,357 us, 0.11%)</title><rect x="1115.9" y="167" width="1.3" height="15.0" fill="rgb(147.995394820376,132.363199227213,147.995394820376)" rx="2" ry="2" />
<text  x="1118.90" y="177.5" ></text>
</g>
<g >
<title>firedrake.mesh.MeshTopology._facets (17,660 us, 0.35%)</title><rect x="52.7" y="135" width="4.1" height="15.0" fill="rgb(118.535793598353,147.768539081054,147.768539081054)" rx="2" ry="2" />
<text  x="55.66" y="145.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (3,267 us, 0.07%)</title><rect x="1120.7" y="215" width="0.7" height="15.0" fill="rgb(132.582459770108,162.137739107192,132.582459770108)" rx="2" ry="2" />
<text  x="1123.67" y="225.5" ></text>
</g>
<g >
<title>firedrake.utility_meshes.SquareMesh (8,335 us, 0.17%)</title><rect x="825.5" y="71" width="1.9" height="15.0" fill="rgb(154.485140118833,154.485140118833,140.966448268188)" rx="2" ry="2" />
<text  x="828.48" y="81.5" ></text>
</g>
<g >
<title>firedrake.assemble.allocate_matrix (6,331 us, 0.13%)</title><rect x="832.0" y="87" width="1.5" height="15.0" fill="rgb(135.360335212615,135.360335212615,153.61812939599)" rx="2" ry="2" />
<text  x="834.97" y="97.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (10,145 us, 0.20%)</title><rect x="828.5" y="103" width="2.4" height="15.0" fill="rgb(148.552200450004,159.538013880232,148.552200450004)" rx="2" ry="2" />
<text  x="831.54" y="113.5" ></text>
</g>
<g >
<title>DMPlexSymmetrize (2,062 us, 0.04%)</title><rect x="66.5" y="87" width="0.5" height="15.0" fill="rgb(142.999978370709,142.999978370709,155.096770007234)" rx="2" ry="2" />
<text  x="69.49" y="97.5" ></text>
</g>
<g >
<title>firedrake (5,000,992 us, 100.00%)</title><rect x="10.0" y="55" width="1180.0" height="15.0" fill="rgb(136.701555117608,161.467188701785,136.701555117608)" rx="2" ry="2" />
<text  x="13.00" y="65.5" >firedrake</text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalProblem.__init__ (11,107 us, 0.22%)</title><rect x="828.5" y="87" width="2.7" height="15.0" fill="rgb(151.950384691209,151.950384691209,128.682633503552)" rx="2" ry="2" />
<text  x="831.54" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspace.make_scalar_element (930 us, 0.02%)</title><rect x="47.1" y="87" width="0.2" height="15.0" fill="rgb(155.239892494205,155.239892494205,144.624094394994)" rx="2" ry="2" />
<text  x="50.09" y="97.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.action (4,649 us, 0.09%)</title><rect x="827.4" y="87" width="1.1" height="15.0" fill="rgb(138.298194477749,152.892124494231,152.892124494231)" rx="2" ry="2" />
<text  x="830.44" y="97.5" ></text>
</g>
<g >
<title>firedrake.assemble.allocate_matrix (864 us, 0.02%)</title><rect x="1117.2" y="135" width="0.2" height="15.0" fill="rgb(118.602890306216,147.785934523834,147.785934523834)" rx="2" ry="2" />
<text  x="1120.16" y="145.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (9,334 us, 0.19%)</title><rect x="44.2" y="151" width="2.2" height="15.0" fill="rgb(156.646551098532,147.623558422078,147.623558422078)" rx="2" ry="2" />
<text  x="47.17" y="161.5" ></text>
</g>
<g >
<title>CreateMesh (17,697 us, 0.35%)</title><rect x="56.8" y="71" width="4.2" height="15.0" fill="rgb(153.141549713362,120.751881135776,120.751881135776)" rx="2" ry="2" />
<text  x="59.82" y="81.5" ></text>
</g>
<g >
<title>firedrake.matrix_free.operators.ImplicitMatrixContext.__init__ (6,331 us, 0.13%)</title><rect x="832.0" y="103" width="1.5" height="15.0" fill="rgb(138.57620184987,138.57620184987,154.240555196749)" rx="2" ry="2" />
<text  x="834.97" y="113.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (4,665 us, 0.09%)</title><rect x="1120.3" y="199" width="1.1" height="15.0" fill="rgb(140.463607160976,140.463607160976,154.605859450512)" rx="2" ry="2" />
<text  x="1123.34" y="209.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (772 us, 0.02%)</title><rect x="1189.8" y="183" width="0.2" height="15.0" fill="rgb(150.095828349893,159.286725617459,150.095828349893)" rx="2" ry="2" />
<text  x="1192.82" y="193.5" ></text>
</g>
<g >
<title>Mesh: reorder (3,624 us, 0.07%)</title><rect x="60.1" y="87" width="0.9" height="15.0" fill="rgb(137.01321837496,137.01321837496,153.938042266121)" rx="2" ry="2" />
<text  x="63.14" y="97.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.action (3,867 us, 0.08%)</title><rect x="832.0" y="119" width="0.9" height="15.0" fill="rgb(149.777359024603,149.777359024603,118.151816811536)" rx="2" ry="2" />
<text  x="834.97" y="129.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (68,258 us, 1.36%)</title><rect x="835.9" y="215" width="16.1" height="15.0" fill="rgb(154.40226896086,130.417395366595,130.417395366595)" rx="2" ry="2" />
<text  x="838.86" y="225.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (40,315 us, 0.81%)</title><rect x="47.3" y="87" width="9.5" height="15.0" fill="rgb(152.612394648093,116.695025635378,116.695025635378)" rx="2" ry="2" />
<text  x="50.31" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.WithGeometry.split (1,432 us, 0.03%)</title><rect x="1121.4" y="183" width="0.4" height="15.0" fill="rgb(142.219048474846,142.219048474846,154.945622285454)" rx="2" ry="2" />
<text  x="1124.44" y="193.5" ></text>
</g>
<g >
<title>ParLoopExecute (145,158 us, 2.90%)</title><rect x="1146.1" y="119" width="34.3" height="15.0" fill="rgb(107.709545296016,144.961733965634,144.961733965634)" rx="2" ry="2" />
<text  x="1149.11" y="129.5" >Pa..</text>
</g>
<g >
<title>PetscBarrier (25,320 us, 0.51%)</title><rect x="61.0" y="71" width="6.0" height="15.0" fill="rgb(151.40973394268,151.40973394268,126.062556799142)" rx="2" ry="2" />
<text  x="64.00" y="81.5" ></text>
</g>
<g >
<title>firedrake.mesh._from_cell_list (5,139 us, 0.10%)</title><rect x="826.2" y="103" width="1.2" height="15.0" fill="rgb(155.456062993737,138.496482951982,138.496482951982)" rx="2" ry="2" />
<text  x="829.23" y="113.5" ></text>
</g>
<g >
<title>firedrake.extrusion_utils.make_extruded_coords (144,053 us, 2.88%)</title><rect x="10.2" y="87" width="34.0" height="15.0" fill="rgb(134.164576447851,96.9217271476186,134.164576447851)" rx="2" ry="2" />
<text  x="13.18" y="97.5" >fi..</text>
</g>
<g >
<title>FunctionSpaceData: CreateElement (6,735 us, 0.13%)</title><rect x="51.1" y="135" width="1.6" height="15.0" fill="rgb(154.983104942147,134.870471223125,134.870471223125)" rx="2" ry="2" />
<text  x="54.07" y="145.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_form0_cell_integral_otherwise (73,411 us, 1.47%)</title><rect x="1146.4" y="135" width="17.3" height="15.0" fill="rgb(153.082977995378,120.302831297896,120.302831297896)" rx="2" ry="2" />
<text  x="1149.43" y="145.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.solve (1,511,063 us, 30.22%)</title><rect x="833.5" y="71" width="356.5" height="15.0" fill="rgb(155.907427693369,155.907427693369,147.859072667866)" rx="2" ry="2" />
<text  x="836.46" y="81.5" >firedrake.variational_solver.NonlinearVariat..</text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (2,396 us, 0.05%)</title><rect x="1115.1" y="199" width="0.6" height="15.0" fill="rgb(149.483644457196,149.483644457196,116.728430831026)" rx="2" ry="2" />
<text  x="1118.14" y="209.5" ></text>
</g>
<g >
<title>CreateMesh (1,306 us, 0.03%)</title><rect x="825.9" y="103" width="0.3" height="15.0" fill="rgb(156.497211513755,146.478621605452,146.478621605452)" rx="2" ry="2" />
<text  x="828.92" y="113.5" ></text>
</g>
<g >
<title>all (5,000,992 us, 100%)</title><rect x="10.0" y="39" width="1180.0" height="15.0" fill="rgb(150.344846905279,150.344846905279,120.901950387119)" rx="2" ry="2" />
<text  x="13.00" y="49.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (2,396 us, 0.05%)</title><rect x="1115.1" y="167" width="0.6" height="15.0" fill="rgb(141.851965470398,153.813472529362,153.813472529362)" rx="2" ry="2" />
<text  x="1118.14" y="177.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (772 us, 0.02%)</title><rect x="1189.8" y="199" width="0.2" height="15.0" fill="rgb(115.817404872846,147.063771633701,147.063771633701)" rx="2" ry="2" />
<text  x="1192.82" y="209.5" ></text>
</g>
<g >
<title>SCForwardElim (1,159,577 us, 23.19%)</title><rect x="833.5" y="135" width="273.6" height="15.0" fill="rgb(151.290459722662,151.290459722662,125.484535579053)" rx="2" ry="2" />
<text  x="836.46" y="145.5" >SCForwardElim</text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (2,722 us, 0.05%)</title><rect x="1189.4" y="151" width="0.6" height="15.0" fill="rgb(134.580612441217,151.928306929204,151.928306929204)" rx="2" ry="2" />
<text  x="1192.36" y="161.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (42,098 us, 0.84%)</title><rect x="46.9" y="71" width="9.9" height="15.0" fill="rgb(115.006981606959,115.006981606959,149.678770633605)" rx="2" ry="2" />
<text  x="49.89" y="81.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (2,396 us, 0.05%)</title><rect x="1115.1" y="215" width="0.6" height="15.0" fill="rgb(149.519100420399,149.519100420399,116.900255883474)" rx="2" ry="2" />
<text  x="1118.14" y="225.5" ></text>
</g>
<g >
<title>DMPlexStratify (3,450 us, 0.07%)</title><rect x="65.7" y="87" width="0.8" height="15.0" fill="rgb(111.484256753089,111.484256753089,148.996952919953)" rx="2" ry="2" />
<text  x="68.67" y="97.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (2,464 us, 0.05%)</title><rect x="832.9" y="119" width="0.6" height="15.0" fill="rgb(124.277110786359,163.489772662686,124.277110786359)" rx="2" ry="2" />
<text  x="835.88" y="129.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (67,734 us, 1.35%)</title><rect x="1147.8" y="151" width="15.9" height="15.0" fill="rgb(154.059097590832,127.786414863049,127.786414863049)" rx="2" ry="2" />
<text  x="1150.77" y="161.5" ></text>
</g>
<g >
<title>PCSetUp (161,019 us, 3.22%)</title><rect x="1107.1" y="103" width="38.0" height="15.0" fill="rgb(152.042904852741,112.328937204351,112.328937204351)" rx="2" ry="2" />
<text  x="1110.07" y="113.5" >PC..</text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (17,892 us, 0.36%)</title><rect x="1117.6" y="151" width="4.2" height="15.0" fill="rgb(151.034779285844,151.034779285844,124.245468846783)" rx="2" ry="2" />
<text  x="1120.56" y="161.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_form1_cell_integral_otherwise (70,382 us, 1.41%)</title><rect x="1163.7" y="135" width="16.7" height="15.0" fill="rgb(128.015647147504,150.226278890094,150.226278890094)" rx="2" ry="2" />
<text  x="1166.75" y="145.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (13,415 us, 0.27%)</title><rect x="1118.6" y="167" width="3.2" height="15.0" fill="rgb(152.573934882141,116.400167429746,116.400167429746)" rx="2" ry="2" />
<text  x="1121.62" y="177.5" ></text>
</g>
<g >
<title>firedrake.parloops.par_loop (77,529 us, 1.55%)</title><rect x="833.7" y="167" width="18.3" height="15.0" fill="rgb(150.610817881644,139.065220821712,150.610817881644)" rx="2" ry="2" />
<text  x="836.67" y="177.5" ></text>
</g>
<g >
<title>KSPSolve (1,159,577 us, 23.19%)</title><rect x="833.5" y="103" width="273.6" height="15.0" fill="rgb(111.831105270681,146.030286551658,146.030286551658)" rx="2" ry="2" />
<text  x="836.46" y="113.5" >KSPSolve</text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (67,036 us, 1.34%)</title><rect x="1128.2" y="167" width="15.8" height="15.0" fill="rgb(137.28622149041,152.629761127143,152.629761127143)" rx="2" ry="2" />
<text  x="1131.16" y="177.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (68,258 us, 1.36%)</title><rect x="835.9" y="199" width="16.1" height="15.0" fill="rgb(153.92526214021,153.92526214021,138.253193448711)" rx="2" ry="2" />
<text  x="838.86" y="209.5" ></text>
</g>
<g >
<title>ParLoopExecute (69,226 us, 1.38%)</title><rect x="835.6" y="183" width="16.4" height="15.0" fill="rgb(106.88390459879,144.747678970057,144.747678970057)" rx="2" ry="2" />
<text  x="838.63" y="193.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (5,357 us, 0.11%)</title><rect x="1115.9" y="151" width="1.3" height="15.0" fill="rgb(143.296537601005,120.322377602576,143.296537601005)" rx="2" ry="2" />
<text  x="1118.90" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (39,214 us, 0.78%)</title><rect x="47.6" y="103" width="9.2" height="15.0" fill="rgb(129.167461378932,162.693669077848,129.167461378932)" rx="2" ry="2" />
<text  x="50.57" y="113.5" ></text>
</g>
<g >
<title>firedrake.mesh._Facets.__init__ (868 us, 0.02%)</title><rect x="46.2" y="167" width="0.2" height="15.0" fill="rgb(155.686568687409,140.263693270138,140.263693270138)" rx="2" ry="2" />
<text  x="49.17" y="177.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (3,267 us, 0.07%)</title><rect x="1120.7" y="231" width="0.7" height="15.0" fill="rgb(118.506984787602,147.761070130119,147.761070130119)" rx="2" ry="2" />
<text  x="1123.67" y="241.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.derivative (962 us, 0.02%)</title><rect x="830.9" y="103" width="0.3" height="15.0" fill="rgb(148.95910781204,148.95910781204,114.186445550654)" rx="2" ry="2" />
<text  x="833.93" y="113.5" ></text>
</g>
<g >
<title>firedrake.mesh._Facets.__init__ (824 us, 0.02%)</title><rect x="56.6" y="151" width="0.2" height="15.0" fill="rgb(154.17779834836,128.696454004097,128.696454004097)" rx="2" ry="2" />
<text  x="59.63" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (9,334 us, 0.19%)</title><rect x="44.2" y="135" width="2.2" height="15.0" fill="rgb(129.879478184943,162.577759365242,129.879478184943)" rx="2" ry="2" />
<text  x="47.17" y="145.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (18,710 us, 0.37%)</title><rect x="1117.4" y="135" width="4.4" height="15.0" fill="rgb(142.248017079235,160.564276289427,142.248017079235)" rx="2" ry="2" />
<text  x="1120.37" y="145.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (2,396 us, 0.05%)</title><rect x="1115.1" y="183" width="0.6" height="15.0" fill="rgb(135.280379091164,161.698542938648,135.280379091164)" rx="2" ry="2" />
<text  x="1118.14" y="193.5" ></text>
</g>
<g >
<title>PCApply (1,159,577 us, 23.19%)</title><rect x="833.5" y="119" width="273.6" height="15.0" fill="rgb(151.236721780873,151.236721780873,125.224113245769)" rx="2" ry="2" />
<text  x="836.46" y="129.5" >PCApply</text>
</g>
<g >
<title>CreateExtMesh (156,343 us, 3.13%)</title><rect x="10.0" y="71" width="36.9" height="15.0" fill="rgb(140.216162841099,140.216162841099,154.557967001503)" rx="2" ry="2" />
<text  x="13.00" y="81.5" >Cr..</text>
</g>
<g >
<title>HybridRHS (1,081,158 us, 21.62%)</title><rect x="852.0" y="151" width="255.1" height="15.0" fill="rgb(154.541395420424,154.541395420424,141.239070114361)" rx="2" ry="2" />
<text  x="854.96" y="161.5" >HybridRHS</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (66,532 us, 1.33%)</title><rect x="1164.7" y="151" width="15.7" height="15.0" fill="rgb(112.791120863612,112.791120863612,149.249894360699)" rx="2" ry="2" />
<text  x="1167.66" y="161.5" ></text>
</g>
<g >
<title>HybridInit (161,019 us, 3.22%)</title><rect x="1107.1" y="119" width="38.0" height="15.0" fill="rgb(115.592422437841,115.592422437841,149.792081762163)" rx="2" ry="2" />
<text  x="1110.07" y="129.5" >Hy..</text>
</g>
<g >
<title>CreateFunctionSpace (9,334 us, 0.19%)</title><rect x="44.2" y="103" width="2.2" height="15.0" fill="rgb(139.043055540258,109.422829821912,139.043055540258)" rx="2" ry="2" />
<text  x="47.17" y="113.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (737 us, 0.01%)</title><rect x="825.3" y="87" width="0.2" height="15.0" fill="rgb(119.176391711164,147.934620073265,147.934620073265)" rx="2" ry="2" />
<text  x="828.30" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspace.MixedFunctionSpace (3,759 us, 0.08%)</title><rect x="1114.8" y="151" width="0.9" height="15.0" fill="rgb(115.40918310908,146.957936361613,146.957936361613)" rx="2" ry="2" />
<text  x="1117.82" y="161.5" ></text>
</g>
<g >
<title>firedrake.function.Function.__init__ (1,417 us, 0.03%)</title><rect x="1121.8" y="135" width="0.3" height="15.0" fill="rgb(147.610152261321,147.610152261321,107.649199420248)" rx="2" ry="2" />
<text  x="1124.78" y="145.5" ></text>
</g>
<g >
<title>firedrake.mesh.make_mesh_from_coordinates (1,246 us, 0.02%)</title><rect x="46.6" y="87" width="0.3" height="15.0" fill="rgb(145.658247938546,160.009122428609,145.658247938546)" rx="2" ry="2" />
<text  x="49.60" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspace.VectorFunctionSpace (9,334 us, 0.19%)</title><rect x="44.2" y="87" width="2.2" height="15.0" fill="rgb(123.22100638895,123.22100638895,151.268581881732)" rx="2" ry="2" />
<text  x="47.17" y="97.5" ></text>
</g>
<g >
<title>CreateMesh (1,306 us, 0.03%)</title><rect x="825.9" y="119" width="0.3" height="15.0" fill="rgb(142.873274860983,154.07825644544,154.07825644544)" rx="2" ry="2" />
<text  x="828.92" y="129.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (107,499 us, 2.15%)</title><rect x="18.8" y="135" width="25.4" height="15.0" fill="rgb(156.204739452315,144.236335801079,144.236335801079)" rx="2" ry="2" />
<text  x="21.81" y="145.5" >p..</text>
</g>
<g >
<title>firedrake.__init__ (3,212,179 us, 64.23%)</title><rect x="67.0" y="71" width="757.9" height="15.0" fill="rgb(144.996609904933,160.116830945709,144.996609904933)" rx="2" ry="2" />
<text  x="69.97" y="81.5" >firedrake.__init__</text>
</g>
<g >
<title>firedrake.mesh.ExtrudedMeshTopology.__init__ (932 us, 0.02%)</title><rect x="46.4" y="87" width="0.2" height="15.0" fill="rgb(121.234198436601,148.4681255206,148.4681255206)" rx="2" ry="2" />
<text  x="49.38" y="97.5" ></text>
</g>
<g >
<title>SNESSolve (1,511,063 us, 30.22%)</title><rect x="833.5" y="87" width="356.5" height="15.0" fill="rgb(148.647014997416,148.647014997416,112.673995756708)" rx="2" ry="2" />
<text  x="836.46" y="97.5" >SNESSolve</text>
</g>
<g >
<title>ParLoopExecute (109,587 us, 2.19%)</title><rect x="18.3" y="103" width="25.9" height="15.0" fill="rgb(148.719855048624,148.719855048624,113.026989851022)" rx="2" ry="2" />
<text  x="21.32" y="113.5" >P..</text>
</g>
<g >
<title>DMPlexInterp (3,530 us, 0.07%)</title><rect x="826.6" y="119" width="0.8" height="15.0" fill="rgb(136.723943448706,103.480105087309,136.723943448706)" rx="2" ry="2" />
<text  x="829.61" y="129.5" ></text>
</g>
<g >
<title>firedrake.function.Function.split (962 us, 0.02%)</title><rect x="830.9" y="119" width="0.3" height="15.0" fill="rgb(144.795567021536,154.576628487065,154.576628487065)" rx="2" ry="2" />
<text  x="833.93" y="129.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (9,931 us, 0.20%)</title><rect x="1114.8" y="135" width="2.4" height="15.0" fill="rgb(146.815423344982,155.100294941292,155.100294941292)" rx="2" ry="2" />
<text  x="1117.82" y="145.5" ></text>
</g>
<g >
<title>Mesh: numbering (6,035 us, 0.12%)</title><rect x="58.7" y="87" width="1.4" height="15.0" fill="rgb(106.610253175523,144.676732304765,144.676732304765)" rx="2" ry="2" />
<text  x="61.72" y="97.5" ></text>
</g>
<g >
<title>FunctionSpaceData: CreateElement (823 us, 0.02%)</title><rect x="46.0" y="167" width="0.2" height="15.0" fill="rgb(156.767603408786,148.551626134023,148.551626134023)" rx="2" ry="2" />
<text  x="48.98" y="177.5" ></text>
</g>
<g >
<title>firedrake.interpolation.make_interpolator (19,204 us, 0.38%)</title><rect x="1122.1" y="135" width="4.5" height="15.0" fill="rgb(141.988663376498,160.60649665964,141.988663376498)" rx="2" ry="2" />
<text  x="1125.12" y="145.5" ></text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (40,871 us, 0.82%)</title><rect x="1180.4" y="119" width="9.6" height="15.0" fill="rgb(108.236354189763,145.098314049198,145.098314049198)" rx="2" ry="2" />
<text  x="1183.36" y="129.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (39,214 us, 0.78%)</title><rect x="47.6" y="119" width="9.2" height="15.0" fill="rgb(156.259486011785,144.656059423682,144.656059423682)" rx="2" ry="2" />
<text  x="50.57" y="129.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (67,036 us, 1.34%)</title><rect x="1128.2" y="183" width="15.8" height="15.0" fill="rgb(139.709988629058,111.131845861961,139.709988629058)" rx="2" ry="2" />
<text  x="1131.16" y="193.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.__init__ (9,745 us, 0.19%)</title><rect x="831.2" y="71" width="2.3" height="15.0" fill="rgb(151.715477933558,151.715477933558,127.544239216475)" rx="2" ry="2" />
<text  x="834.16" y="81.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (9,326 us, 0.19%)</title><rect x="1119.2" y="183" width="2.2" height="15.0" fill="rgb(153.715486829017,153.715486829017,137.236590017542)" rx="2" ry="2" />
<text  x="1122.24" y="193.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (5,057 us, 0.10%)</title><rect x="1188.8" y="135" width="1.2" height="15.0" fill="rgb(134.710553479243,161.791305247565,134.710553479243)" rx="2" ry="2" />
<text  x="1191.81" y="145.5" ></text>
</g>
<g >
<title>Log_Event_form1_cell_integral_otherwise (1,964 us, 0.04%)</title><rect x="1164.2" y="151" width="0.5" height="15.0" fill="rgb(142.090820216593,153.875397833932,153.875397833932)" rx="2" ry="2" />
<text  x="1167.19" y="161.5" ></text>
</g>
<g >
<title>CreateMesh (3,671 us, 0.07%)</title><rect x="57.9" y="87" width="0.8" height="15.0" fill="rgb(144.067136407492,122.297037044197,144.067136407492)" rx="2" ry="2" />
<text  x="60.85" y="97.5" ></text>
</g>
</g>
</svg>
