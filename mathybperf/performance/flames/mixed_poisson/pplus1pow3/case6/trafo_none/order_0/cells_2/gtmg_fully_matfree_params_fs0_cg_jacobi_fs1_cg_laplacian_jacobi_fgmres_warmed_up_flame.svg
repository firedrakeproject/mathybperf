<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="283" onload="init(evt)" viewBox="0 0 1200 283" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:13px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:18px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 13 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (1 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="283.0" fill="url(#background)"  />
<text id="title" x="600.00" y="26" >Firedrake example</text>
<text id="details" x="10.00" y="265" > </text>
<text id="unzoom" x="10.00" y="26" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="26" >Search</text>
<text id="ignorecase" x="1174.00" y="26" >ic</text>
<text id="matched" x="1090.00" y="265" > </text>
<g id="frames">
<g >
<title>ParLoopExecute (151,209 us, 2.98%)</title><rect x="1143.4" y="119" width="35.2" height="15.0" fill="rgb(153.659397806583,124.722049850472,124.722049850472)" rx="2" ry="2" />
<text  x="1146.42" y="129.5" >Pa..</text>
</g>
<g >
<title>firedrake.function.Function.__init__ (1,208 us, 0.02%)</title><rect x="1119.3" y="135" width="0.3" height="15.0" fill="rgb(109.60950376901,109.60950376901,148.634097503679)" rx="2" ry="2" />
<text  x="1122.33" y="145.5" ></text>
</g>
<g >
<title>SNESSolve (1,443,476 us, 28.47%)</title><rect x="854.1" y="87" width="335.9" height="15.0" fill="rgb(150.24561437876,150.24561437876,120.421054297069)" rx="2" ry="2" />
<text  x="857.05" y="97.5" >SNESSolve</text>
</g>
<g >
<title>HybridBreak (78,593 us, 1.55%)</title><rect x="854.1" y="151" width="18.2" height="15.0" fill="rgb(152.56015780923,116.2945432041,116.2945432041)" rx="2" ry="2" />
<text  x="857.05" y="161.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.action (4,081 us, 0.08%)</title><rect x="852.5" y="119" width="1.0" height="15.0" fill="rgb(152.482559942899,115.699626228894,115.699626228894)" rx="2" ry="2" />
<text  x="855.52" y="129.5" ></text>
</g>
<g >
<title>firedrake.mesh.MeshTopology._facets (19,625 us, 0.39%)</title><rect x="50.4" y="135" width="4.6" height="15.0" fill="rgb(153.996005946526,153.996005946526,138.596028817777)" rx="2" ry="2" />
<text  x="53.44" y="145.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (7,372 us, 0.15%)</title><rect x="1117.4" y="183" width="1.7" height="15.0" fill="rgb(137.444167418522,137.444167418522,154.021451758424)" rx="2" ry="2" />
<text  x="1120.43" y="193.5" ></text>
</g>
<g >
<title>ParLoopExecute (72,141 us, 1.42%)</title><rect x="1125.0" y="151" width="16.8" height="15.0" fill="rgb(135.208649634357,161.710219826965,135.208649634357)" rx="2" ry="2" />
<text  x="1128.03" y="161.5" ></text>
</g>
<g >
<title>SNESFunctionEval (204,958 us, 4.04%)</title><rect x="1142.3" y="103" width="47.7" height="15.0" fill="rgb(140.184927370549,160.900128102469,140.184927370549)" rx="2" ry="2" />
<text  x="1145.30" y="113.5" >SNES..</text>
</g>
<g >
<title>KSPSolve (1,084,531 us, 21.39%)</title><rect x="854.1" y="103" width="252.4" height="15.0" fill="rgb(153.074195274284,120.235497102846,120.235497102846)" rx="2" ry="2" />
<text  x="857.05" y="113.5" >KSPSolve</text>
</g>
<g >
<title>DMPlexStratify (1,033 us, 0.02%)</title><rect x="848.0" y="135" width="0.3" height="15.0" fill="rgb(125.290440975315,163.324811934251,125.290440975315)" rx="2" ry="2" />
<text  x="851.01" y="145.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.derivative (1,009 us, 0.02%)</title><rect x="851.5" y="103" width="0.2" height="15.0" fill="rgb(122.430787258232,122.430787258232,151.115636243529)" rx="2" ry="2" />
<text  x="854.49" y="113.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.solve (1,443,476 us, 28.47%)</title><rect x="854.1" y="71" width="335.9" height="15.0" fill="rgb(123.728756123779,149.114862698758,149.114862698758)" rx="2" ry="2" />
<text  x="857.05" y="81.5" >firedrake.variational_solver.NonlinearVar..</text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (3,689 us, 0.07%)</title><rect x="1118.3" y="199" width="0.8" height="15.0" fill="rgb(150.912432124925,139.83810732012,150.912432124925)" rx="2" ry="2" />
<text  x="1121.29" y="209.5" ></text>
</g>
<g >
<title>DMPlexBuFrCeLi (872 us, 0.02%)</title><rect x="846.4" y="119" width="0.2" height="15.0" fill="rgb(132.46018462261,132.46018462261,153.056809926957)" rx="2" ry="2" />
<text  x="849.43" y="129.5" ></text>
</g>
<g >
<title>firedrake.assemble.allocate_matrix (900 us, 0.02%)</title><rect x="1115.8" y="135" width="0.2" height="15.0" fill="rgb(150.974327246287,159.143714169209,150.974327246287)" rx="2" ry="2" />
<text  x="1118.82" y="145.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (42,000 us, 0.83%)</title><rect x="45.2" y="119" width="9.8" height="15.0" fill="rgb(137.846253882305,137.846253882305,154.099274944962)" rx="2" ry="2" />
<text  x="48.23" y="129.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (69,278 us, 1.37%)</title><rect x="1162.5" y="151" width="16.1" height="15.0" fill="rgb(155.056643925819,155.056643925819,143.736043640509)" rx="2" ry="2" />
<text  x="1165.49" y="161.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.LinearVariationalProblem.__init__ (14,948 us, 0.29%)</title><rect x="848.3" y="71" width="3.4" height="15.0" fill="rgb(153.810867967797,125.883321086444,125.883321086444)" rx="2" ry="2" />
<text  x="851.25" y="81.5" ></text>
</g>
<g >
<title>firedrake.functionspace.MixedFunctionSpace (3,823 us, 0.08%)</title><rect x="1113.5" y="151" width="0.9" height="15.0" fill="rgb(125.528137970496,149.581369103462,149.581369103462)" rx="2" ry="2" />
<text  x="1116.47" y="161.5" ></text>
</g>
<g >
<title>Log_Event_form1_cell_integral_otherwise (2,015 us, 0.04%)</title><rect x="1162.0" y="151" width="0.5" height="15.0" fill="rgb(152.930136230308,119.131044432359,119.131044432359)" rx="2" ry="2" />
<text  x="1165.02" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (43,012 us, 0.85%)</title><rect x="45.0" y="87" width="10.0" height="15.0" fill="rgb(104.11545462586,144.029932680779,144.029932680779)" rx="2" ry="2" />
<text  x="48.00" y="97.5" ></text>
</g>
<g >
<title>firedrake.matrix_free.operators.ImplicitMatrixContext.__init__ (6,593 us, 0.13%)</title><rect x="852.5" y="103" width="1.6" height="15.0" fill="rgb(154.23253102244,154.23253102244,139.742265724131)" rx="2" ry="2" />
<text  x="855.52" y="113.5" ></text>
</g>
<g >
<title>firedrake.mesh._from_cell_list (9,804 us, 0.19%)</title><rect x="846.0" y="103" width="2.3" height="15.0" fill="rgb(156.456013050842,146.162766723119,146.162766723119)" rx="2" ry="2" />
<text  x="848.97" y="113.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_form0_cell_integral_otherwise (76,842 us, 1.52%)</title><rect x="1143.7" y="135" width="17.9" height="15.0" fill="rgb(121.937497032408,148.650462193587,148.650462193587)" rx="2" ry="2" />
<text  x="1146.69" y="145.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (10,118 us, 0.20%)</title><rect x="1113.5" y="135" width="2.3" height="15.0" fill="rgb(127.687162022344,150.141116079867,150.141116079867)" rx="2" ry="2" />
<text  x="1116.47" y="145.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (2,445 us, 0.05%)</title><rect x="1113.8" y="199" width="0.6" height="15.0" fill="rgb(131.574191559702,131.574191559702,152.885327398652)" rx="2" ry="2" />
<text  x="1116.79" y="209.5" ></text>
</g>
<g >
<title>HybridRHS (1,005,938 us, 19.84%)</title><rect x="872.3" y="151" width="234.2" height="15.0" fill="rgb(152.663640730506,152.663640730506,132.139182001685)" rx="2" ry="2" />
<text  x="875.34" y="161.5" >HybridRHS</text>
</g>
<g >
<title>firedrake.assemble.allocate_matrix (6,593 us, 0.13%)</title><rect x="852.5" y="87" width="1.6" height="15.0" fill="rgb(155.672374924768,155.672374924768,146.719970789259)" rx="2" ry="2" />
<text  x="855.52" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (42,000 us, 0.83%)</title><rect x="45.2" y="103" width="9.8" height="15.0" fill="rgb(154.058341834892,127.780620734169,127.780620734169)" rx="2" ry="2" />
<text  x="48.23" y="113.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalProblem.__init__ (10,531 us, 0.21%)</title><rect x="849.3" y="87" width="2.4" height="15.0" fill="rgb(154.914023512014,134.340846925441,134.340846925441)" rx="2" ry="2" />
<text  x="852.28" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (2,445 us, 0.05%)</title><rect x="1113.8" y="183" width="0.6" height="15.0" fill="rgb(135.686696849686,161.63239818726,135.686696849686)" rx="2" ry="2" />
<text  x="1116.79" y="193.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (70,432 us, 1.39%)</title><rect x="856.0" y="215" width="16.3" height="15.0" fill="rgb(155.273155161963,137.094189575048,137.094189575048)" rx="2" ry="2" />
<text  x="858.95" y="225.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (14,185 us, 0.28%)</title><rect x="1116.0" y="135" width="3.3" height="15.0" fill="rgb(133.428853551043,161.999954073086,133.428853551043)" rx="2" ry="2" />
<text  x="1119.03" y="145.5" ></text>
</g>
<g >
<title>HybridInit (153,987 us, 3.04%)</title><rect x="1106.5" y="119" width="35.8" height="15.0" fill="rgb(140.935314553289,114.271743542803,140.935314553289)" rx="2" ry="2" />
<text  x="1109.46" y="129.5" >Hy..</text>
</g>
<g >
<title>CreateMesh (19,866 us, 0.39%)</title><rect x="55.0" y="71" width="4.6" height="15.0" fill="rgb(119.723571313061,119.723571313061,150.591658963818)" rx="2" ry="2" />
<text  x="58.01" y="81.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (2,799 us, 0.06%)</title><rect x="1189.3" y="151" width="0.7" height="15.0" fill="rgb(152.346803424341,152.346803424341,130.603739671808)" rx="2" ry="2" />
<text  x="1192.35" y="161.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_form1_cell_integral_otherwise (73,182 us, 1.44%)</title><rect x="1161.6" y="135" width="17.0" height="15.0" fill="rgb(133.52549594486,161.984221590372,133.52549594486)" rx="2" ry="2" />
<text  x="1164.58" y="145.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (764 us, 0.02%)</title><rect x="1189.8" y="167" width="0.2" height="15.0" fill="rgb(140.982133804014,140.982133804014,154.706219445938)" rx="2" ry="2" />
<text  x="1192.82" y="177.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (8,671 us, 0.17%)</title><rect x="42.1" y="119" width="2.1" height="15.0" fill="rgb(124.292041298629,149.260899595941,149.260899595941)" rx="2" ry="2" />
<text  x="45.13" y="129.5" ></text>
</g>
<g >
<title>firedrake.mesh._Facets.__init__ (993 us, 0.02%)</title><rect x="54.8" y="151" width="0.2" height="15.0" fill="rgb(110.778788908778,110.778788908778,148.860410756538)" rx="2" ry="2" />
<text  x="57.77" y="161.5" ></text>
</g>
<g >
<title>CreateMesh (1,773 us, 0.03%)</title><rect x="845.6" y="103" width="0.4" height="15.0" fill="rgb(153.744652025412,125.375665528162,125.375665528162)" rx="2" ry="2" />
<text  x="848.56" y="113.5" ></text>
</g>
<g >
<title>CreateMesh (3,537 us, 0.07%)</title><rect x="56.2" y="87" width="0.8" height="15.0" fill="rgb(134.54186476348,161.818766201294,134.54186476348)" rx="2" ry="2" />
<text  x="59.21" y="97.5" ></text>
</g>
<g >
<title>firedrake.interpolation.make_interpolator (16,531 us, 0.33%)</title><rect x="1119.6" y="135" width="3.9" height="15.0" fill="rgb(143.120409512306,160.422258916601,143.120409512306)" rx="2" ry="2" />
<text  x="1122.61" y="145.5" ></text>
</g>
<g >
<title>firedrake.function.Function.split (1,009 us, 0.02%)</title><rect x="851.5" y="119" width="0.2" height="15.0" fill="rgb(127.518065821814,150.097276324174,150.097276324174)" rx="2" ry="2" />
<text  x="854.49" y="129.5" ></text>
</g>
<g >
<title>DMPlexSymmetrize (2,308 us, 0.05%)</title><rect x="66.1" y="87" width="0.5" height="15.0" fill="rgb(138.18560981537,138.18560981537,154.164956738459)" rx="2" ry="2" />
<text  x="69.06" y="97.5" ></text>
</g>
<g >
<title>all (5,070,159 us, 100%)</title><rect x="10.0" y="39" width="1180.0" height="15.0" fill="rgb(152.772717254523,117.924165618007,117.924165618007)" rx="2" ry="2" />
<text  x="13.00" y="49.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_pyop2_kernel_uniform_extrusion (104,408 us, 2.06%)</title><rect x="17.8" y="119" width="24.3" height="15.0" fill="rgb(124.483665942329,163.456147404737,124.483665942329)" rx="2" ry="2" />
<text  x="20.83" y="129.5" >P..</text>
</g>
<g >
<title>PCApply (1,084,531 us, 21.39%)</title><rect x="854.1" y="119" width="252.4" height="15.0" fill="rgb(149.435497837042,149.435497837042,116.495104902587)" rx="2" ry="2" />
<text  x="857.05" y="129.5" >PCApply</text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (48,946 us, 0.97%)</title><rect x="1178.6" y="119" width="11.4" height="15.0" fill="rgb(155.886693405848,141.797982778168,141.797982778168)" rx="2" ry="2" />
<text  x="1181.61" y="129.5" ></text>
</g>
<g >
<title>firedrake.functionspace.make_scalar_element (1,657 us, 0.03%)</title><rect x="1117.9" y="199" width="0.4" height="15.0" fill="rgb(128.065625985609,162.87303763025,128.065625985609)" rx="2" ry="2" />
<text  x="1120.90" y="209.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (5,466 us, 0.11%)</title><rect x="1114.5" y="151" width="1.3" height="15.0" fill="rgb(152.471717287359,115.616499203084,115.616499203084)" rx="2" ry="2" />
<text  x="1117.55" y="161.5" ></text>
</g>
<g >
<title>ParLoopExecute (104,408 us, 2.06%)</title><rect x="17.8" y="103" width="24.3" height="15.0" fill="rgb(138.233315776662,152.875304090246,152.875304090246)" rx="2" ry="2" />
<text  x="20.83" y="113.5" >P..</text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (2,512 us, 0.05%)</title><rect x="853.5" y="119" width="0.6" height="15.0" fill="rgb(133.499748345547,161.988413060027,133.499748345547)" rx="2" ry="2" />
<text  x="856.47" y="129.5" ></text>
</g>
<g >
<title>firedrake.functionspace.make_scalar_element (829 us, 0.02%)</title><rect x="1114.4" y="151" width="0.1" height="15.0" fill="rgb(132.738749171919,162.112296646432,132.738749171919)" rx="2" ry="2" />
<text  x="1117.36" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspace.MixedFunctionSpace (1,340 us, 0.03%)</title><rect x="844.5" y="71" width="0.3" height="15.0" fill="rgb(155.768296024851,155.768296024851,147.184819197355)" rx="2" ry="2" />
<text  x="847.51" y="81.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (104,408 us, 2.06%)</title><rect x="17.8" y="135" width="24.3" height="15.0" fill="rgb(137.601943673594,152.711615026487,152.711615026487)" rx="2" ry="2" />
<text  x="20.83" y="145.5" >p..</text>
</g>
<g >
<title>FunctionSpaceData: CreateElement (806 us, 0.02%)</title><rect x="44.0" y="167" width="0.2" height="15.0" fill="rgb(155.523308120257,139.012028921972,139.012028921972)" rx="2" ry="2" />
<text  x="46.96" y="177.5" ></text>
</g>
<g >
<title>firedrake.parloops.par_loop (77,776 us, 1.53%)</title><rect x="854.2" y="167" width="18.1" height="15.0" fill="rgb(153.402733558957,153.402733558957,135.720939554944)" rx="2" ry="2" />
<text  x="857.24" y="177.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (70,432 us, 1.39%)</title><rect x="856.0" y="199" width="16.3" height="15.0" fill="rgb(143.204886285545,160.408506883749,143.204886285545)" rx="2" ry="2" />
<text  x="858.95" y="209.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (2,549 us, 0.05%)</title><rect x="1118.6" y="231" width="0.5" height="15.0" fill="rgb(132.275678714659,132.275678714659,153.021099106063)" rx="2" ry="2" />
<text  x="1121.55" y="241.5" ></text>
</g>
<g >
<title>DMPlexInterp (6,960 us, 0.14%)</title><rect x="846.6" y="119" width="1.7" height="15.0" fill="rgb(134.398881877836,134.398881877836,153.432041653775)" rx="2" ry="2" />
<text  x="849.63" y="129.5" ></text>
</g>
<g >
<title>firedrake.parloops.par_loop (78,869 us, 1.56%)</title><rect x="1123.5" y="135" width="18.3" height="15.0" fill="rgb(112.735577858919,112.735577858919,149.239144101726)" rx="2" ry="2" />
<text  x="1126.46" y="145.5" ></text>
</g>
<g >
<title>Log_Event_form0_cell_integral_otherwise (3,852 us, 0.08%)</title><rect x="1144.1" y="151" width="0.9" height="15.0" fill="rgb(129.750050126054,129.750050126054,152.532267766333)" rx="2" ry="2" />
<text  x="1147.13" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (8,671 us, 0.17%)</title><rect x="42.1" y="151" width="2.1" height="15.0" fill="rgb(137.036474626037,161.412666921343,137.036474626037)" rx="2" ry="2" />
<text  x="45.13" y="161.5" ></text>
</g>
<g >
<title>PCSetUp (153,987 us, 3.04%)</title><rect x="1106.5" y="103" width="35.8" height="15.0" fill="rgb(128.532143572943,162.79709290673,128.532143572943)" rx="2" ry="2" />
<text  x="1109.46" y="113.5" >PC..</text>
</g>
<g >
<title>CreateFunctionSpace (764 us, 0.02%)</title><rect x="1189.8" y="183" width="0.2" height="15.0" fill="rgb(150.715615060638,150.715615060638,122.698749909245)" rx="2" ry="2" />
<text  x="1192.82" y="193.5" ></text>
</g>
<g >
<title>PetscBarrier (29,935 us, 0.59%)</title><rect x="59.6" y="71" width="7.0" height="15.0" fill="rgb(123.938756689159,149.169307289782,149.169307289782)" rx="2" ry="2" />
<text  x="62.63" y="81.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (9,522 us, 0.19%)</title><rect x="849.3" y="103" width="2.2" height="15.0" fill="rgb(111.106224560061,111.106224560061,148.923785398721)" rx="2" ry="2" />
<text  x="852.28" y="113.5" ></text>
</g>
<g >
<title>firedrake.utility_meshes.RectangleMesh (14,747 us, 0.29%)</title><rect x="844.8" y="87" width="3.5" height="15.0" fill="rgb(126.001710989505,163.209023792406,126.001710989505)" rx="2" ry="2" />
<text  x="847.82" y="97.5" ></text>
</g>
<g >
<title>firedrake.mesh.make_mesh_from_coordinates (991 us, 0.02%)</title><rect x="44.4" y="87" width="0.2" height="15.0" fill="rgb(136.468847049276,152.417849234998,152.417849234998)" rx="2" ry="2" />
<text  x="47.36" y="97.5" ></text>
</g>
<g >
<title>CreateMesh (1,773 us, 0.03%)</title><rect x="845.6" y="119" width="0.4" height="15.0" fill="rgb(154.203730141453,154.203730141453,139.602692223963)" rx="2" ry="2" />
<text  x="848.56" y="129.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.__init__ (9,985 us, 0.20%)</title><rect x="851.7" y="71" width="2.4" height="15.0" fill="rgb(153.544727469113,153.544727469113,136.409063888779)" rx="2" ry="2" />
<text  x="854.73" y="81.5" ></text>
</g>
<g >
<title>firedrake (5,070,159 us, 100.00%)</title><rect x="10.0" y="55" width="1180.0" height="15.0" fill="rgb(150.364105669855,159.243052565372,150.364105669855)" rx="2" ry="2" />
<text  x="13.00" y="65.5" >firedrake</text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (2,075 us, 0.04%)</title><rect x="1141.8" y="135" width="0.5" height="15.0" fill="rgb(156.777370826668,148.626509671121,148.626509671121)" rx="2" ry="2" />
<text  x="1144.82" y="145.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (72,141 us, 1.42%)</title><rect x="1125.0" y="167" width="16.8" height="15.0" fill="rgb(154.256185521631,129.297422332501,129.297422332501)" rx="2" ry="2" />
<text  x="1128.03" y="177.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (5,466 us, 0.11%)</title><rect x="1114.5" y="167" width="1.3" height="15.0" fill="rgb(138.421429673626,161.187209122898,138.421429673626)" rx="2" ry="2" />
<text  x="1117.55" y="177.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (764 us, 0.02%)</title><rect x="1189.8" y="199" width="0.2" height="15.0" fill="rgb(140.623799905252,153.495059234695,153.495059234695)" rx="2" ry="2" />
<text  x="1192.82" y="209.5" ></text>
</g>
<g >
<title>firedrake.extrusion_utils.make_extruded_coords (137,240 us, 2.71%)</title><rect x="10.2" y="87" width="31.9" height="15.0" fill="rgb(120.857778589074,120.857778589074,150.811182952724)" rx="2" ry="2" />
<text  x="13.19" y="97.5" >fi..</text>
</g>
<g >
<title>firedrake.functionspace.VectorFunctionSpace (8,671 us, 0.17%)</title><rect x="42.1" y="87" width="2.1" height="15.0" fill="rgb(155.341447054838,137.61776075376,137.61776075376)" rx="2" ry="2" />
<text  x="45.13" y="97.5" ></text>
</g>
<g >
<title>firedrake.mesh.ExtrudedMeshTopology.__init__ (918 us, 0.02%)</title><rect x="44.2" y="87" width="0.2" height="15.0" fill="rgb(118.964068353691,147.879573276883,147.879573276883)" rx="2" ry="2" />
<text  x="47.15" y="97.5" ></text>
</g>
<g >
<title>SCForwardElim (1,084,531 us, 21.39%)</title><rect x="854.1" y="135" width="252.4" height="15.0" fill="rgb(125.050962533526,163.363796796868,125.050962533526)" rx="2" ry="2" />
<text  x="857.05" y="145.5" >SCForwardElim</text>
</g>
<g >
<title>FunctionSpaceData: CreateElement (4,179 us, 0.08%)</title><rect x="1114.8" y="199" width="1.0" height="15.0" fill="rgb(111.328333855396,111.328333855396,148.966774294593)" rx="2" ry="2" />
<text  x="1117.85" y="209.5" ></text>
</g>
<g >
<title>ParLoopExecute (70,432 us, 1.39%)</title><rect x="856.0" y="183" width="16.3" height="15.0" fill="rgb(152.628560880248,116.818966748569,116.818966748569)" rx="2" ry="2" />
<text  x="858.95" y="193.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (8,671 us, 0.17%)</title><rect x="42.1" y="135" width="2.1" height="15.0" fill="rgb(117.158578065235,147.411483202098,147.411483202098)" rx="2" ry="2" />
<text  x="45.13" y="145.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (71,097 us, 1.40%)</title><rect x="1145.0" y="151" width="16.6" height="15.0" fill="rgb(155.647158944738,139.961551909654,139.961551909654)" rx="2" ry="2" />
<text  x="1148.03" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (2,445 us, 0.05%)</title><rect x="1113.8" y="215" width="0.6" height="15.0" fill="rgb(130.098813845807,130.098813845807,152.599770421769)" rx="2" ry="2" />
<text  x="1116.79" y="225.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (2,549 us, 0.05%)</title><rect x="1118.6" y="215" width="0.5" height="15.0" fill="rgb(149.4191059787,136.011459070419,149.4191059787)" rx="2" ry="2" />
<text  x="1121.55" y="225.5" ></text>
</g>
<g >
<title>firedrake.__init__ (3,342,484 us, 65.92%)</title><rect x="66.6" y="71" width="777.9" height="15.0" fill="rgb(127.876894459005,150.190305970853,150.190305970853)" rx="2" ry="2" />
<text  x="69.60" y="81.5" >firedrake.__init__</text>
</g>
<g >
<title>CreateExtMesh (148,646 us, 2.93%)</title><rect x="10.0" y="71" width="34.6" height="15.0" fill="rgb(141.978016914499,160.608229804617,141.978016914499)" rx="2" ry="2" />
<text  x="13.00" y="81.5" >Cr..</text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (10,310 us, 0.20%)</title><rect x="1116.9" y="167" width="2.4" height="15.0" fill="rgb(135.981485372017,135.981485372017,153.738352007487)" rx="2" ry="2" />
<text  x="1119.93" y="177.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.WithGeometry.split (795 us, 0.02%)</title><rect x="1119.1" y="183" width="0.2" height="15.0" fill="rgb(140.690318947631,153.512304912349,153.512304912349)" rx="2" ry="2" />
<text  x="1122.15" y="193.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (8,671 us, 0.17%)</title><rect x="42.1" y="103" width="2.1" height="15.0" fill="rgb(152.6053631676,116.641117618264,116.641117618264)" rx="2" ry="2" />
<text  x="45.13" y="113.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (14,185 us, 0.28%)</title><rect x="1116.0" y="151" width="3.3" height="15.0" fill="rgb(138.75275968503,161.133271679181,138.75275968503)" rx="2" ry="2" />
<text  x="1119.03" y="161.5" ></text>
</g>
<g >
<title>Mesh: reorder (4,406 us, 0.09%)</title><rect x="58.6" y="87" width="1.0" height="15.0" fill="rgb(155.771575355796,140.915411061103,140.915411061103)" rx="2" ry="2" />
<text  x="61.60" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (5,466 us, 0.11%)</title><rect x="1114.5" y="183" width="1.3" height="15.0" fill="rgb(155.014588120974,135.111842260802,135.111842260802)" rx="2" ry="2" />
<text  x="1117.55" y="193.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.action (4,417 us, 0.09%)</title><rect x="848.3" y="87" width="1.0" height="15.0" fill="rgb(144.900335267497,160.132503561105,144.900335267497)" rx="2" ry="2" />
<text  x="851.25" y="97.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (72,141 us, 1.42%)</title><rect x="1125.0" y="183" width="16.8" height="15.0" fill="rgb(137.937713027072,161.265953693267,137.937713027072)" rx="2" ry="2" />
<text  x="1128.03" y="193.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (5,118 us, 0.10%)</title><rect x="1188.8" y="135" width="1.2" height="15.0" fill="rgb(105.797206566086,144.465942443059,144.465942443059)" rx="2" ry="2" />
<text  x="1191.81" y="145.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (44,732 us, 0.88%)</title><rect x="44.6" y="71" width="10.4" height="15.0" fill="rgb(153.890965609629,126.497403007153,126.497403007153)" rx="2" ry="2" />
<text  x="47.60" y="81.5" ></text>
</g>
<g >
<title>DMPlexStratify (3,809 us, 0.08%)</title><rect x="65.2" y="87" width="0.9" height="15.0" fill="rgb(151.471200145051,141.269950371693,151.471200145051)" rx="2" ry="2" />
<text  x="68.17" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspace.make_scalar_element (908 us, 0.02%)</title><rect x="44.8" y="87" width="0.2" height="15.0" fill="rgb(148.188455165299,148.188455165299,110.451744262604)" rx="2" ry="2" />
<text  x="47.78" y="97.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (2,445 us, 0.05%)</title><rect x="1113.8" y="167" width="0.6" height="15.0" fill="rgb(153.271460641887,153.271460641887,135.08477080299)" rx="2" ry="2" />
<text  x="1116.79" y="177.5" ></text>
</g>
<g >
<title>DMPlexStratify (872 us, 0.02%)</title><rect x="846.4" y="135" width="0.2" height="15.0" fill="rgb(153.812671927421,153.812671927421,137.707563955963)" rx="2" ry="2" />
<text  x="849.43" y="145.5" ></text>
</g>
<g >
<title>Mesh: numbering (6,765 us, 0.13%)</title><rect x="57.0" y="87" width="1.6" height="15.0" fill="rgb(133.401569737912,133.401569737912,153.23901349766)" rx="2" ry="2" />
<text  x="60.03" y="97.5" ></text>
</g>
<g >
<title>firedrake.utility_meshes.SquareMesh (14,747 us, 0.29%)</title><rect x="844.8" y="71" width="3.5" height="15.0" fill="rgb(113.841600019618,146.551525931012,146.551525931012)" rx="2" ry="2" />
<text  x="847.82" y="81.5" ></text>
</g>
<g >
<title>FunctionSpaceData: CreateElement (6,568 us, 0.13%)</title><rect x="48.9" y="135" width="1.5" height="15.0" fill="rgb(128.551822052955,162.79388943324,128.551822052955)" rx="2" ry="2" />
<text  x="51.91" y="145.5" ></text>
</g>
</g>
</svg>
