<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="283" onload="init(evt)" viewBox="0 0 1200 283" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:13px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:18px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 13 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (1 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="283.0" fill="url(#background)"  />
<text id="title" x="600.00" y="26" >Firedrake example</text>
<text id="details" x="10.00" y="265" > </text>
<text id="unzoom" x="10.00" y="26" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="26" >Search</text>
<text id="ignorecase" x="1174.00" y="26" >ic</text>
<text id="matched" x="1090.00" y="265" > </text>
<g id="frames">
<g >
<title>SCForwardElim (1,155,616 us, 25.07%)</title><rect x="811.2" y="135" width="295.7" height="15.0" fill="rgb(143.514591244297,143.514591244297,155.196372498896)" rx="2" ry="2" />
<text  x="814.16" y="145.5" >SCForwardElim</text>
</g>
<g >
<title>Log_Event_form0_cell_integral_otherwise (3,989 us, 0.09%)</title><rect x="1145.3" y="151" width="1.0" height="15.0" fill="rgb(135.770614791713,152.236826057111,152.236826057111)" rx="2" ry="2" />
<text  x="1148.29" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (749 us, 0.02%)</title><rect x="801.3" y="87" width="0.2" height="15.0" fill="rgb(152.936481170992,119.179688977609,119.179688977609)" rx="2" ry="2" />
<text  x="804.35" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspace.VectorFunctionSpace (8,445 us, 0.18%)</title><rect x="42.9" y="87" width="2.2" height="15.0" fill="rgb(132.099955498522,151.285173647765,151.285173647765)" rx="2" ry="2" />
<text  x="45.92" y="97.5" ></text>
</g>
<g >
<title>CreateMesh (1,491 us, 0.03%)</title><rect x="802.2" y="119" width="0.3" height="15.0" fill="rgb(121.474420891421,148.530405416294,148.530405416294)" rx="2" ry="2" />
<text  x="805.16" y="129.5" ></text>
</g>
<g >
<title>ParLoopExecute (64,251 us, 1.39%)</title><rect x="1126.5" y="151" width="16.5" height="15.0" fill="rgb(152.010330421456,152.010330421456,128.97313973475)" rx="2" ry="2" />
<text  x="1129.52" y="161.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (2,381 us, 0.05%)</title><rect x="1114.6" y="167" width="0.6" height="15.0" fill="rgb(152.24552037028,113.882322838815,113.882322838815)" rx="2" ry="2" />
<text  x="1117.57" y="177.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (5,600 us, 0.12%)</title><rect x="1115.4" y="151" width="1.4" height="15.0" fill="rgb(125.662620216413,149.616234870922,149.616234870922)" rx="2" ry="2" />
<text  x="1118.40" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (8,445 us, 0.18%)</title><rect x="42.9" y="151" width="2.2" height="15.0" fill="rgb(134.56405799974,134.56405799974,153.464011225756)" rx="2" ry="2" />
<text  x="45.92" y="161.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (64,251 us, 1.39%)</title><rect x="1126.5" y="183" width="16.5" height="15.0" fill="rgb(130.575324220098,150.889898871877,150.889898871877)" rx="2" ry="2" />
<text  x="1129.52" y="193.5" ></text>
</g>
<g >
<title>Log_Event_form1_cell_integral_otherwise (1,932 us, 0.04%)</title><rect x="1163.8" y="151" width="0.5" height="15.0" fill="rgb(138.58600480421,138.58600480421,154.24245254275)" rx="2" ry="2" />
<text  x="1166.81" y="161.5" ></text>
</g>
<g >
<title>ParLoopExecute (94,962 us, 2.06%)</title><rect x="18.6" y="103" width="24.3" height="15.0" fill="rgb(114.567540248717,114.567540248717,149.593717467494)" rx="2" ry="2" />
<text  x="21.61" y="113.5" >P..</text>
</g>
<g >
<title>HybridInit (142,836 us, 3.10%)</title><rect x="1106.9" y="119" width="36.6" height="15.0" fill="rgb(147.925218543057,147.925218543057,109.176059093275)" rx="2" ry="2" />
<text  x="1109.93" y="129.5" >Hy..</text>
</g>
<g >
<title>firedrake.__init__ (2,859,744 us, 62.03%)</title><rect x="69.4" y="71" width="731.9" height="15.0" fill="rgb(155.448301560918,138.436978633703,138.436978633703)" rx="2" ry="2" />
<text  x="72.41" y="81.5" >firedrake.__init__</text>
</g>
<g >
<title>PCApply (1,155,616 us, 25.07%)</title><rect x="811.2" y="119" width="295.7" height="15.0" fill="rgb(143.314832342064,143.314832342064,155.157709485561)" rx="2" ry="2" />
<text  x="814.16" y="129.5" >PCApply</text>
</g>
<g >
<title>firedrake.mesh.ExtrudedMeshTopology.__init__ (871 us, 0.02%)</title><rect x="45.1" y="87" width="0.2" height="15.0" fill="rgb(122.87519816362,148.893569894272,148.893569894272)" rx="2" ry="2" />
<text  x="48.08" y="97.5" ></text>
</g>
<g >
<title>PCSetUp (142,836 us, 3.10%)</title><rect x="1106.9" y="103" width="36.6" height="15.0" fill="rgb(154.511219670064,131.252684137157,131.252684137157)" rx="2" ry="2" />
<text  x="1109.93" y="113.5" >PC..</text>
</g>
<g >
<title>all (4,610,384 us, 100%)</title><rect x="10.0" y="39" width="1180.0" height="15.0" fill="rgb(135.543224221824,152.177872946399,152.177872946399)" rx="2" ry="2" />
<text  x="13.00" y="49.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.derivative (1,089 us, 0.02%)</title><rect x="808.3" y="103" width="0.3" height="15.0" fill="rgb(148.352665004228,148.352665004228,111.247530405103)" rx="2" ry="2" />
<text  x="811.35" y="113.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (42,408 us, 0.92%)</title><rect x="46.2" y="103" width="10.9" height="15.0" fill="rgb(152.078409963017,152.078409963017,129.303063666927)" rx="2" ry="2" />
<text  x="49.25" y="113.5" ></text>
</g>
<g >
<title>firedrake.functionspace.make_scalar_element (864 us, 0.02%)</title><rect x="1115.2" y="151" width="0.2" height="15.0" fill="rgb(152.221488954407,113.698081983788,113.698081983788)" rx="2" ry="2" />
<text  x="1118.17" y="161.5" ></text>
</g>
<g >
<title>firedrake.parloops.par_loop (73,914 us, 1.60%)</title><rect x="811.4" y="167" width="18.9" height="15.0" fill="rgb(142.133877650796,160.582857126615,142.133877650796)" rx="2" ry="2" />
<text  x="814.36" y="177.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (8,445 us, 0.18%)</title><rect x="42.9" y="119" width="2.2" height="15.0" fill="rgb(125.447696556094,163.299212188543,125.447696556094)" rx="2" ry="2" />
<text  x="45.92" y="129.5" ></text>
</g>
<g >
<title>SNESFunctionEval (181,716 us, 3.94%)</title><rect x="1143.5" y="103" width="46.5" height="15.0" fill="rgb(135.484713650459,100.3045787293,135.484713650459)" rx="2" ry="2" />
<text  x="1146.49" y="113.5" >SNES..</text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (9,259 us, 0.20%)</title><rect x="1117.9" y="167" width="2.4" height="15.0" fill="rgb(146.695705739751,159.840233949343,146.695705739751)" rx="2" ry="2" />
<text  x="1120.92" y="177.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (64,307 us, 1.39%)</title><rect x="1164.3" y="151" width="16.5" height="15.0" fill="rgb(106.288501948169,144.593315319896,144.593315319896)" rx="2" ry="2" />
<text  x="1167.31" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (5,600 us, 0.12%)</title><rect x="1115.4" y="183" width="1.4" height="15.0" fill="rgb(147.991332876534,147.991332876534,156.062838621265)" rx="2" ry="2" />
<text  x="1118.40" y="193.5" ></text>
</g>
<g >
<title>firedrake.functionspace.make_scalar_element (1,416 us, 0.03%)</title><rect x="1118.8" y="199" width="0.4" height="15.0" fill="rgb(132.761104418821,132.761104418821,153.115052468159)" rx="2" ry="2" />
<text  x="1121.84" y="209.5" ></text>
</g>
<g >
<title>firedrake.mesh._Facets.__init__ (947 us, 0.02%)</title><rect x="56.9" y="151" width="0.2" height="15.0" fill="rgb(131.974333533324,162.236736401552,131.974333533324)" rx="2" ry="2" />
<text  x="59.86" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (43,408 us, 0.94%)</title><rect x="46.0" y="87" width="11.1" height="15.0" fill="rgb(130.710499771873,162.442476781323,130.710499771873)" rx="2" ry="2" />
<text  x="48.99" y="97.5" ></text>
</g>
<g >
<title>HybridRHS (1,080,915 us, 23.45%)</title><rect x="830.3" y="151" width="276.6" height="15.0" fill="rgb(147.642191853119,159.686154814609,147.642191853119)" rx="2" ry="2" />
<text  x="833.28" y="161.5" >HybridRHS</text>
</g>
<g >
<title>firedrake.function.Function.__init__ (1,252 us, 0.03%)</title><rect x="1120.3" y="135" width="0.3" height="15.0" fill="rgb(155.197421286511,136.513563196585,136.513563196585)" rx="2" ry="2" />
<text  x="1123.29" y="145.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (66,782 us, 1.45%)</title><rect x="813.2" y="215" width="17.1" height="15.0" fill="rgb(139.538298773634,139.538298773634,154.426767504574)" rx="2" ry="2" />
<text  x="816.19" y="225.5" ></text>
</g>
<g >
<title>SNESSolve (1,480,168 us, 32.11%)</title><rect x="811.2" y="87" width="378.8" height="15.0" fill="rgb(125.871094935643,163.230286870942,125.871094935643)" rx="2" ry="2" />
<text  x="814.16" y="97.5" >SNESSolve</text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (2,568 us, 0.06%)</title><rect x="810.5" y="119" width="0.7" height="15.0" fill="rgb(129.59796139063,150.636508508682,150.636508508682)" rx="2" ry="2" />
<text  x="813.50" y="129.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (835 us, 0.02%)</title><rect x="1189.8" y="167" width="0.2" height="15.0" fill="rgb(108.483582442365,108.483582442365,148.416177246909)" rx="2" ry="2" />
<text  x="1192.79" y="177.5" ></text>
</g>
<g >
<title>firedrake.mesh.make_mesh_from_coordinates (948 us, 0.02%)</title><rect x="45.3" y="87" width="0.2" height="15.0" fill="rgb(138.825419204429,138.825419204429,154.28879081376)" rx="2" ry="2" />
<text  x="48.30" y="97.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (66,782 us, 1.45%)</title><rect x="813.2" y="199" width="17.1" height="15.0" fill="rgb(142.530418026548,153.989367636512,153.989367636512)" rx="2" ry="2" />
<text  x="816.19" y="209.5" ></text>
</g>
<g >
<title>CreateExtMesh (138,878 us, 3.01%)</title><rect x="10.0" y="71" width="35.5" height="15.0" fill="rgb(134.077469907286,151.797862568556,151.797862568556)" rx="2" ry="2" />
<text  x="13.00" y="81.5" >Cr..</text>
</g>
<g >
<title>CreateFunctionSpace (835 us, 0.02%)</title><rect x="1189.8" y="183" width="0.2" height="15.0" fill="rgb(115.389193672539,115.389193672539,149.752747162427)" rx="2" ry="2" />
<text  x="1192.79" y="193.5" ></text>
</g>
<g >
<title>firedrake.utility_meshes.RectangleMesh (10,414 us, 0.23%)</title><rect x="801.5" y="87" width="2.7" height="15.0" fill="rgb(131.371740186272,131.371740186272,152.846143261859)" rx="2" ry="2" />
<text  x="804.54" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (2,381 us, 0.05%)</title><rect x="1114.6" y="215" width="0.6" height="15.0" fill="rgb(109.045757206371,109.045757206371,148.524985265749)" rx="2" ry="2" />
<text  x="1117.57" y="225.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (3,431 us, 0.07%)</title><rect x="1119.2" y="199" width="0.9" height="15.0" fill="rgb(144.336107609305,154.45750938019,154.45750938019)" rx="2" ry="2" />
<text  x="1122.21" y="209.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (45,155 us, 0.98%)</title><rect x="45.5" y="71" width="11.6" height="15.0" fill="rgb(140.837326664542,160.793923566237,140.837326664542)" rx="2" ry="2" />
<text  x="48.54" y="81.5" ></text>
</g>
<g >
<title>HybridBreak (74,701 us, 1.62%)</title><rect x="811.2" y="151" width="19.1" height="15.0" fill="rgb(105.391762252462,144.360827250638,144.360827250638)" rx="2" ry="2" />
<text  x="814.16" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (5,600 us, 0.12%)</title><rect x="1115.4" y="167" width="1.4" height="15.0" fill="rgb(146.668960372459,146.668960372459,155.80689555596)" rx="2" ry="2" />
<text  x="1118.40" y="177.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (42,408 us, 0.92%)</title><rect x="46.2" y="119" width="10.9" height="15.0" fill="rgb(149.210735469458,159.430810504972,149.210735469458)" rx="2" ry="2" />
<text  x="49.25" y="129.5" ></text>
</g>
<g >
<title>FunctionSpaceData: CreateElement (4,290 us, 0.09%)</title><rect x="1115.7" y="199" width="1.1" height="15.0" fill="rgb(112.785412739336,112.785412739336,149.248789562452)" rx="2" ry="2" />
<text  x="1118.73" y="209.5" ></text>
</g>
<g >
<title>ParLoopExecute (67,711 us, 1.47%)</title><rect x="812.9" y="183" width="17.4" height="15.0" fill="rgb(155.114132000033,135.875012000253,135.875012000253)" rx="2" ry="2" />
<text  x="815.95" y="193.5" ></text>
</g>
<g >
<title>firedrake.functionspace.MixedFunctionSpace (3,621 us, 0.08%)</title><rect x="1114.2" y="151" width="1.0" height="15.0" fill="rgb(121.307473603714,148.487122786148,148.487122786148)" rx="2" ry="2" />
<text  x="1117.25" y="161.5" ></text>
</g>
<g >
<title>CreateMesh (1,491 us, 0.03%)</title><rect x="802.2" y="103" width="0.3" height="15.0" fill="rgb(149.066727811442,159.454253612091,149.066727811442)" rx="2" ry="2" />
<text  x="805.16" y="113.5" ></text>
</g>
<g >
<title>PetscBarrier (26,497 us, 0.57%)</title><rect x="62.6" y="71" width="6.8" height="15.0" fill="rgb(132.439933285927,151.373316037092,151.373316037092)" rx="2" ry="2" />
<text  x="65.63" y="81.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.WithGeometry.split (790 us, 0.02%)</title><rect x="1120.1" y="183" width="0.2" height="15.0" fill="rgb(139.946676978562,160.938913050002,139.946676978562)" rx="2" ry="2" />
<text  x="1123.08" y="193.5" ></text>
</g>
<g >
<title>DMPlexInterp (4,474 us, 0.10%)</title><rect x="803.1" y="119" width="1.1" height="15.0" fill="rgb(140.028153647095,111.947143720682,140.028153647095)" rx="2" ry="2" />
<text  x="806.06" y="129.5" ></text>
</g>
<g >
<title>firedrake.mesh.MeshTopology._facets (21,737 us, 0.47%)</title><rect x="51.5" y="135" width="5.6" height="15.0" fill="rgb(153.230750040714,121.435750312144,121.435750312144)" rx="2" ry="2" />
<text  x="54.54" y="145.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (11,115 us, 0.24%)</title><rect x="805.5" y="103" width="2.8" height="15.0" fill="rgb(139.32175533952,139.32175533952,154.384855872165)" rx="2" ry="2" />
<text  x="808.50" y="113.5" ></text>
</g>
<g >
<title>firedrake.assemble.allocate_matrix (903 us, 0.02%)</title><rect x="1116.8" y="135" width="0.3" height="15.0" fill="rgb(117.490084344549,147.497429274513,147.497429274513)" rx="2" ry="2" />
<text  x="1119.83" y="145.5" ></text>
</g>
<g >
<title>firedrake (4,610,384 us, 100.00%)</title><rect x="10.0" y="55" width="1180.0" height="15.0" fill="rgb(138.656441333265,161.148951410864,138.656441333265)" rx="2" ry="2" />
<text  x="13.00" y="65.5" >firedrake</text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (5,187 us, 0.11%)</title><rect x="1188.7" y="135" width="1.3" height="15.0" fill="rgb(125.029145010434,163.367348486674,125.029145010434)" rx="2" ry="2" />
<text  x="1191.67" y="145.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.solve (1,480,168 us, 32.11%)</title><rect x="811.2" y="71" width="378.8" height="15.0" fill="rgb(154.367054394907,154.367054394907,140.394186683013)" rx="2" ry="2" />
<text  x="814.16" y="81.5" >firedrake.variational_solver.NonlinearVariation..</text>
</g>
<g >
<title>Parloop_Cells_wrap_form1_cell_integral_otherwise (68,171 us, 1.48%)</title><rect x="1163.3" y="135" width="17.5" height="15.0" fill="rgb(152.164382549016,152.164382549016,129.719700045233)" rx="2" ry="2" />
<text  x="1166.32" y="145.5" ></text>
</g>
<g >
<title>firedrake.parloops.par_loop (69,847 us, 1.51%)</title><rect x="1125.1" y="135" width="17.9" height="15.0" fill="rgb(156.396001760154,145.702680161181,145.702680161181)" rx="2" ry="2" />
<text  x="1128.09" y="145.5" ></text>
</g>
<g >
<title>DMPlexBuFrCeLi (781 us, 0.02%)</title><rect x="802.9" y="119" width="0.2" height="15.0" fill="rgb(151.088602011637,151.088602011637,124.506302056395)" rx="2" ry="2" />
<text  x="805.86" y="129.5" ></text>
</g>
<g >
<title>ParLoopExecute (141,510 us, 3.07%)</title><rect x="1144.5" y="119" width="36.3" height="15.0" fill="rgb(134.040242760085,96.6031220727173,134.040242760085)" rx="2" ry="2" />
<text  x="1147.55" y="129.5" >Pa..</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (93,982 us, 2.04%)</title><rect x="18.9" y="135" width="24.0" height="15.0" fill="rgb(129.542926143977,162.632546906794,129.542926143977)" rx="2" ry="2" />
<text  x="21.86" y="145.5" >p..</text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (8,445 us, 0.18%)</title><rect x="42.9" y="135" width="2.2" height="15.0" fill="rgb(111.874358198183,146.041500273603,146.041500273603)" rx="2" ry="2" />
<text  x="45.92" y="145.5" ></text>
</g>
<g >
<title>FunctionSpaceData: CreateElement (921 us, 0.02%)</title><rect x="44.8" y="167" width="0.3" height="15.0" fill="rgb(141.432919087201,153.704830874459,153.704830874459)" rx="2" ry="2" />
<text  x="47.84" y="177.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (2,052 us, 0.04%)</title><rect x="1143.0" y="135" width="0.5" height="15.0" fill="rgb(147.604204970082,147.604204970082,107.620377931938)" rx="2" ry="2" />
<text  x="1145.97" y="145.5" ></text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (36,080 us, 0.78%)</title><rect x="1180.8" y="119" width="9.2" height="15.0" fill="rgb(152.885774739603,152.885774739603,133.215677584232)" rx="2" ry="2" />
<text  x="1183.77" y="129.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (8,445 us, 0.18%)</title><rect x="42.9" y="103" width="2.2" height="15.0" fill="rgb(125.466835185856,163.296096597651,125.466835185856)" rx="2" ry="2" />
<text  x="45.92" y="113.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (2,381 us, 0.05%)</title><rect x="1114.6" y="183" width="0.6" height="15.0" fill="rgb(116.817001826068,147.322926399351,147.322926399351)" rx="2" ry="2" />
<text  x="1117.57" y="193.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (2,381 us, 0.05%)</title><rect x="1114.6" y="199" width="0.6" height="15.0" fill="rgb(133.444030013044,161.997483486249,133.444030013044)" rx="2" ry="2" />
<text  x="1117.57" y="209.5" ></text>
</g>
<g >
<title>firedrake.functionspace.MixedFunctionSpace (749 us, 0.02%)</title><rect x="801.3" y="71" width="0.2" height="15.0" fill="rgb(134.175794020674,134.175794020674,153.38886335884)" rx="2" ry="2" />
<text  x="804.35" y="81.5" ></text>
</g>
<g >
<title>DMPlexSymmetrize (2,108 us, 0.05%)</title><rect x="68.9" y="87" width="0.5" height="15.0" fill="rgb(124.749633385829,149.379534581511,149.379534581511)" rx="2" ry="2" />
<text  x="71.87" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspace.make_scalar_element (920 us, 0.02%)</title><rect x="45.8" y="87" width="0.2" height="15.0" fill="rgb(147.194109879473,159.759098391714,147.194109879473)" rx="2" ry="2" />
<text  x="48.76" y="97.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (64,251 us, 1.39%)</title><rect x="1126.5" y="167" width="16.5" height="15.0" fill="rgb(147.061663840111,147.061663840111,155.882902678731)" rx="2" ry="2" />
<text  x="1129.52" y="177.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalProblem.__init__ (12,204 us, 0.26%)</title><rect x="805.5" y="87" width="3.1" height="15.0" fill="rgb(136.865704859092,161.440466650846,136.865704859092)" rx="2" ry="2" />
<text  x="808.50" y="97.5" ></text>
</g>
<g >
<title>firedrake.assemble.allocate_matrix (6,449 us, 0.14%)</title><rect x="809.5" y="87" width="1.7" height="15.0" fill="rgb(150.72960740923,150.72960740923,122.766558983193)" rx="2" ry="2" />
<text  x="812.51" y="97.5" ></text>
</g>
<g >
<title>Mesh: reorder (4,752 us, 0.10%)</title><rect x="61.4" y="87" width="1.2" height="15.0" fill="rgb(106.132035142172,144.552749851674,144.552749851674)" rx="2" ry="2" />
<text  x="64.41" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (835 us, 0.02%)</title><rect x="1189.8" y="199" width="0.2" height="15.0" fill="rgb(112.078164497441,112.078164497441,149.111902805956)" rx="2" ry="2" />
<text  x="1192.79" y="209.5" ></text>
</g>
<g >
<title>firedrake.mesh._from_cell_list (6,487 us, 0.14%)</title><rect x="802.5" y="103" width="1.7" height="15.0" fill="rgb(149.879043494637,159.322016175292,149.879043494637)" rx="2" ry="2" />
<text  x="805.54" y="113.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_pyop2_kernel_uniform_extrusion (93,982 us, 2.04%)</title><rect x="18.9" y="119" width="24.0" height="15.0" fill="rgb(155.033565784917,135.257337684361,135.257337684361)" rx="2" ry="2" />
<text  x="21.86" y="129.5" >P..</text>
</g>
<g >
<title>firedrake.extrusion_utils.make_extruded_coords (127,878 us, 2.77%)</title><rect x="10.2" y="87" width="32.7" height="15.0" fill="rgb(122.324981298918,122.324981298918,151.095157670758)" rx="2" ry="2" />
<text  x="13.19" y="97.5" >fi..</text>
</g>
<g >
<title>FunctionSpaceData: CreateElement (6,073 us, 0.13%)</title><rect x="50.0" y="135" width="1.5" height="15.0" fill="rgb(138.805346234549,138.805346234549,154.284905722816)" rx="2" ry="2" />
<text  x="52.98" y="145.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (10,085 us, 0.22%)</title><rect x="1114.2" y="135" width="2.6" height="15.0" fill="rgb(153.270950913325,153.270950913325,135.08230057996)" rx="2" ry="2" />
<text  x="1117.25" y="145.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (2,778 us, 0.06%)</title><rect x="1189.3" y="151" width="0.7" height="15.0" fill="rgb(123.422976589516,149.035586523208,149.035586523208)" rx="2" ry="2" />
<text  x="1192.29" y="161.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.action (5,075 us, 0.11%)</title><rect x="804.2" y="87" width="1.3" height="15.0" fill="rgb(150.933892789118,159.150296522702,150.933892789118)" rx="2" ry="2" />
<text  x="807.20" y="97.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.LinearVariationalProblem.__init__ (17,279 us, 0.37%)</title><rect x="804.2" y="71" width="4.4" height="15.0" fill="rgb(135.161016436311,99.4751046180474,135.161016436311)" rx="2" ry="2" />
<text  x="807.20" y="81.5" ></text>
</g>
<g >
<title>firedrake.function.Function.split (1,089 us, 0.02%)</title><rect x="808.3" y="119" width="0.3" height="15.0" fill="rgb(155.763633463959,140.854523223688,140.854523223688)" rx="2" ry="2" />
<text  x="811.35" y="129.5" ></text>
</g>
<g >
<title>KSPSolve (1,155,616 us, 25.07%)</title><rect x="811.2" y="103" width="295.7" height="15.0" fill="rgb(139.72231050514,160.975437824745,139.72231050514)" rx="2" ry="2" />
<text  x="814.16" y="113.5" >KSPSolve</text>
</g>
<g >
<title>CreateMesh (21,600 us, 0.47%)</title><rect x="57.1" y="71" width="5.5" height="15.0" fill="rgb(143.844699811174,160.30435119353,143.844699811174)" rx="2" ry="2" />
<text  x="60.10" y="81.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.__init__ (9,900 us, 0.21%)</title><rect x="808.6" y="71" width="2.6" height="15.0" fill="rgb(153.273520238963,153.273520238963,135.094751927281)" rx="2" ry="2" />
<text  x="811.63" y="81.5" ></text>
</g>
<g >
<title>Mesh: numbering (7,753 us, 0.17%)</title><rect x="59.4" y="87" width="2.0" height="15.0" fill="rgb(154.875230321065,134.043432461502,134.043432461502)" rx="2" ry="2" />
<text  x="62.43" y="97.5" ></text>
</g>
<g >
<title>DMPlexStratify (3,418 us, 0.07%)</title><rect x="68.0" y="87" width="0.9" height="15.0" fill="rgb(154.696499647396,154.696499647396,141.990729060455)" rx="2" ry="2" />
<text  x="71.00" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (2,421 us, 0.05%)</title><rect x="1119.5" y="215" width="0.6" height="15.0" fill="rgb(130.101218125161,162.541662165671,130.101218125161)" rx="2" ry="2" />
<text  x="1122.47" y="225.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (12,607 us, 0.27%)</title><rect x="1117.1" y="151" width="3.2" height="15.0" fill="rgb(138.605172735529,161.157297461658,138.605172735529)" rx="2" ry="2" />
<text  x="1120.06" y="161.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (12,607 us, 0.27%)</title><rect x="1117.1" y="135" width="3.2" height="15.0" fill="rgb(120.236479070711,148.209457536851,148.209457536851)" rx="2" ry="2" />
<text  x="1120.06" y="145.5" ></text>
</g>
<g >
<title>firedrake.utility_meshes.SquareMesh (10,414 us, 0.23%)</title><rect x="801.5" y="71" width="2.7" height="15.0" fill="rgb(143.105669591646,119.833278328594,143.105669591646)" rx="2" ry="2" />
<text  x="804.54" y="81.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (66,440 us, 1.44%)</title><rect x="1146.3" y="151" width="17.0" height="15.0" fill="rgb(150.29313683491,138.251163139457,150.29313683491)" rx="2" ry="2" />
<text  x="1149.31" y="161.5" ></text>
</g>
<g >
<title>CreateMesh (3,490 us, 0.08%)</title><rect x="58.5" y="87" width="0.9" height="15.0" fill="rgb(153.893002801757,126.51302148014,126.51302148014)" rx="2" ry="2" />
<text  x="61.54" y="97.5" ></text>
</g>
<g >
<title>firedrake.matrix_free.operators.ImplicitMatrixContext.__init__ (6,449 us, 0.14%)</title><rect x="809.5" y="103" width="1.7" height="15.0" fill="rgb(156.380190636954,145.581461549984,145.581461549984)" rx="2" ry="2" />
<text  x="812.51" y="113.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_form0_cell_integral_otherwise (72,289 us, 1.57%)</title><rect x="1144.8" y="135" width="18.5" height="15.0" fill="rgb(128.290891318208,162.836366529594,128.290891318208)" rx="2" ry="2" />
<text  x="1147.82" y="145.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.action (3,881 us, 0.08%)</title><rect x="809.5" y="119" width="1.0" height="15.0" fill="rgb(156.794758000244,148.759811335206,148.759811335206)" rx="2" ry="2" />
<text  x="812.51" y="129.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (2,421 us, 0.05%)</title><rect x="1119.5" y="231" width="0.6" height="15.0" fill="rgb(133.514656657826,133.514656657826,153.260901288612)" rx="2" ry="2" />
<text  x="1122.47" y="241.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (6,654 us, 0.14%)</title><rect x="1118.4" y="183" width="1.7" height="15.0" fill="rgb(152.451121292726,152.451121292726,131.109280110903)" rx="2" ry="2" />
<text  x="1121.38" y="193.5" ></text>
</g>
<g >
<title>firedrake.interpolation.make_interpolator (17,509 us, 0.38%)</title><rect x="1120.6" y="135" width="4.5" height="15.0" fill="rgb(135.360376821157,99.9859656042159,135.360376821157)" rx="2" ry="2" />
<text  x="1123.61" y="145.5" ></text>
</g>
</g>
</svg>
