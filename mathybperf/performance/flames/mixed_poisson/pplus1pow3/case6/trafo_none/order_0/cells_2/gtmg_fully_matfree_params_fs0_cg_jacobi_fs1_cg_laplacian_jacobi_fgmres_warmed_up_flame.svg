<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="283" onload="init(evt)" viewBox="0 0 1200 283" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:13px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:18px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 13 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (1 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="283.0" fill="url(#background)"  />
<text id="title" x="600.00" y="26" >Firedrake example</text>
<text id="details" x="10.00" y="265" > </text>
<text id="unzoom" x="10.00" y="26" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="26" >Search</text>
<text id="ignorecase" x="1174.00" y="26" >ic</text>
<text id="matched" x="1090.00" y="265" > </text>
<g id="frames">
<g >
<title>firedrake (2,414,636 us, 100.00%)</title><rect x="10.0" y="55" width="1180.0" height="15.0" fill="rgb(132.516754084601,151.393232540452,151.393232540452)" rx="2" ry="2" />
<text  x="13.00" y="65.5" >firedrake</text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (430 us, 0.02%)</title><rect x="1189.8" y="231" width="0.2" height="15.0" fill="rgb(152.501215297889,115.842650617146,115.842650617146)" rx="2" ry="2" />
<text  x="1192.79" y="241.5" ></text>
</g>
<g >
<title>HybridInit (143,960 us, 5.96%)</title><rect x="1033.5" y="119" width="70.3" height="15.0" fill="rgb(153.687561486025,124.93797139286,124.93797139286)" rx="2" ry="2" />
<text  x="1036.48" y="129.5" >HybridI..</text>
</g>
<g >
<title>Log_Event_form1_cell_integral_otherwise (418 us, 0.02%)</title><rect x="1140.8" y="151" width="0.2" height="15.0" fill="rgb(134.158934628501,134.158934628501,153.385600250678)" rx="2" ry="2" />
<text  x="1143.79" y="161.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (68,939 us, 2.86%)</title><rect x="1069.2" y="167" width="33.6" height="15.0" fill="rgb(144.821763900587,160.145294248742,144.821763900587)" rx="2" ry="2" />
<text  x="1072.15" y="177.5" >Pa..</text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (20,403 us, 0.84%)</title><rect x="68.9" y="119" width="10.0" height="15.0" fill="rgb(144.682032984405,154.547193736698,154.547193736698)" rx="2" ry="2" />
<text  x="71.92" y="129.5" ></text>
</g>
<g >
<title>firedrake.assemble.allocate_matrix (6,453 us, 0.27%)</title><rect x="922.5" y="87" width="3.2" height="15.0" fill="rgb(130.172826177557,150.785547527515,150.785547527515)" rx="2" ry="2" />
<text  x="925.50" y="97.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (9,664 us, 0.40%)</title><rect x="1047.1" y="135" width="4.7" height="15.0" fill="rgb(152.3442201799,152.3442201799,130.591220871823)" rx="2" ry="2" />
<text  x="1050.10" y="145.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (21,299 us, 0.88%)</title><rect x="68.5" y="87" width="10.4" height="15.0" fill="rgb(120.523345875427,148.283830412148,148.283830412148)" rx="2" ry="2" />
<text  x="71.48" y="97.5" ></text>
</g>
<g >
<title>PetscBarrier (822 us, 0.03%)</title><rect x="80.1" y="71" width="0.4" height="15.0" fill="rgb(139.804146667857,160.962115658721,139.804146667857)" rx="2" ry="2" />
<text  x="83.06" y="81.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (980 us, 0.04%)</title><rect x="1189.5" y="183" width="0.5" height="15.0" fill="rgb(139.406149429792,161.026905906778,139.406149429792)" rx="2" ry="2" />
<text  x="1192.52" y="193.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (448 us, 0.02%)</title><rect x="1048.6" y="167" width="0.2" height="15.0" fill="rgb(127.282712912411,150.036258903218,150.036258903218)" rx="2" ry="2" />
<text  x="1051.57" y="177.5" ></text>
</g>
<g >
<title>firedrake.matrix_free.operators.ImplicitMatrixContext.__init__ (414 us, 0.02%)</title><rect x="1051.8" y="151" width="0.2" height="15.0" fill="rgb(154.436220326192,130.677689167473,130.677689167473)" rx="2" ry="2" />
<text  x="1054.82" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (1,469 us, 0.06%)</title><rect x="1047.8" y="199" width="0.8" height="15.0" fill="rgb(144.659520212657,154.54135709217,154.54135709217)" rx="2" ry="2" />
<text  x="1050.85" y="209.5" ></text>
</g>
<g >
<title>firedrake.utility_meshes.SquareMesh (1,594 us, 0.07%)</title><rect x="913.6" y="71" width="0.8" height="15.0" fill="rgb(113.31797278596,146.415770722286,146.415770722286)" rx="2" ry="2" />
<text  x="916.61" y="81.5" ></text>
</g>
<g >
<title>firedrake.assemble.allocate_matrix (414 us, 0.02%)</title><rect x="1051.8" y="135" width="0.2" height="15.0" fill="rgb(115.067399887332,115.067399887332,149.690464494322)" rx="2" ry="2" />
<text  x="1054.82" y="145.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (22,935 us, 0.95%)</title><rect x="67.7" y="71" width="11.2" height="15.0" fill="rgb(147.952733973665,132.253880807518,147.952733973665)" rx="2" ry="2" />
<text  x="70.68" y="81.5" ></text>
</g>
<g >
<title>SNESFunctionEval (176,319 us, 7.30%)</title><rect x="1103.8" y="103" width="86.2" height="15.0" fill="rgb(139.840945610212,160.956125133221,139.840945610212)" rx="2" ry="2" />
<text  x="1106.84" y="113.5" >SNESFunct..</text>
</g>
<g >
<title>CreateMesh (555 us, 0.02%)</title><rect x="79.3" y="87" width="0.3" height="15.0" fill="rgb(152.448569622729,152.448569622729,131.096914325534)" rx="2" ry="2" />
<text  x="82.29" y="97.5" ></text>
</g>
<g >
<title>PCApply (220,649 us, 9.14%)</title><rect x="925.7" y="119" width="107.8" height="15.0" fill="rgb(139.002619179118,153.074753120512,153.074753120512)" rx="2" ry="2" />
<text  x="928.66" y="129.5" >PCApply</text>
</g>
<g >
<title>CreateFunctionSpace (1,954 us, 0.08%)</title><rect x="1047.6" y="167" width="1.0" height="15.0" fill="rgb(147.929117502659,147.929117502659,109.194954051346)" rx="2" ry="2" />
<text  x="1050.61" y="177.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (69,003 us, 2.86%)</title><rect x="1107.1" y="151" width="33.7" height="15.0" fill="rgb(104.161641879603,144.041907153971,144.041907153971)" rx="2" ry="2" />
<text  x="1110.07" y="161.5" >py..</text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (11,970 us, 0.50%)</title><rect x="1052.3" y="151" width="5.9" height="15.0" fill="rgb(120.022312233716,148.153932801334,148.153932801334)" rx="2" ry="2" />
<text  x="1055.31" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (2,243 us, 0.09%)</title><rect x="1056.7" y="231" width="1.1" height="15.0" fill="rgb(110.093346609888,110.093346609888,148.72774450514)" rx="2" ry="2" />
<text  x="1059.68" y="241.5" ></text>
</g>
<g >
<title>firedrake.functionspace.MixedFunctionSpace (3,008 us, 0.12%)</title><rect x="1047.3" y="151" width="1.5" height="15.0" fill="rgb(142.080479583249,160.591549835285,142.080479583249)" rx="2" ry="2" />
<text  x="1050.32" y="161.5" ></text>
</g>
<g >
<title>firedrake.mesh.ExtrudedMeshTopology.__init__ (841 us, 0.03%)</title><rect x="66.8" y="87" width="0.4" height="15.0" fill="rgb(134.138010834612,96.8536527636934,134.138010834612)" rx="2" ry="2" />
<text  x="69.78" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspace.make_scalar_element (901 us, 0.04%)</title><rect x="68.0" y="87" width="0.5" height="15.0" fill="rgb(153.737302181203,125.319316722555,125.319316722555)" rx="2" ry="2" />
<text  x="71.04" y="97.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (68,939 us, 2.86%)</title><rect x="1069.2" y="183" width="33.6" height="15.0" fill="rgb(154.809452276318,133.539134118438,133.539134118438)" rx="2" ry="2" />
<text  x="1072.15" y="193.5" >py..</text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (2,243 us, 0.09%)</title><rect x="1056.7" y="215" width="1.1" height="15.0" fill="rgb(145.089201395236,160.101757912403,145.089201395236)" rx="2" ry="2" />
<text  x="1059.68" y="225.5" ></text>
</g>
<g >
<title>firedrake.function.Function.__init__ (1,119 us, 0.05%)</title><rect x="1058.2" y="135" width="0.5" height="15.0" fill="rgb(125.487951228066,125.487951228066,151.70734539898)" rx="2" ry="2" />
<text  x="1061.16" y="145.5" ></text>
</g>
<g >
<title>firedrake.interpolation.make_interpolator (16,019 us, 0.66%)</title><rect x="1058.7" y="135" width="7.8" height="15.0" fill="rgb(153.856864949159,126.235964610216,126.235964610216)" rx="2" ry="2" />
<text  x="1061.71" y="145.5" ></text>
</g>
<g >
<title>firedrake.slate.slac.optimise.optimise (16,094 us, 0.67%)</title><rect x="1025.6" y="167" width="7.9" height="15.0" fill="rgb(155.443850091153,155.443850091153,145.612504287894)" rx="2" ry="2" />
<text  x="1028.62" y="177.5" ></text>
</g>
<g >
<title>SNESSolve (540,928 us, 22.40%)</title><rect x="925.7" y="87" width="264.3" height="15.0" fill="rgb(122.853620303207,148.887975634165,148.887975634165)" rx="2" ry="2" />
<text  x="928.66" y="97.5" >SNESSolve</text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (522 us, 0.02%)</title><rect x="1032.6" y="231" width="0.2" height="15.0" fill="rgb(120.784008316509,120.784008316509,150.796904835453)" rx="2" ry="2" />
<text  x="1035.57" y="241.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (20,403 us, 0.84%)</title><rect x="68.9" y="103" width="10.0" height="15.0" fill="rgb(118.142874350533,147.666671127916,147.666671127916)" rx="2" ry="2" />
<text  x="71.92" y="113.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.derivative (903 us, 0.04%)</title><rect x="921.3" y="103" width="0.5" height="15.0" fill="rgb(122.117742848812,148.697192590433,148.697192590433)" rx="2" ry="2" />
<text  x="924.32" y="113.5" ></text>
</g>
<g >
<title>firedrake.mesh.make_mesh_from_coordinates (993 us, 0.04%)</title><rect x="67.2" y="87" width="0.5" height="15.0" fill="rgb(135.035150640031,152.046150165934,152.046150165934)" rx="2" ry="2" />
<text  x="70.19" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspace.make_scalar_element (774 us, 0.03%)</title><rect x="1048.8" y="151" width="0.4" height="15.0" fill="rgb(106.384917923909,144.618312054347,144.618312054347)" rx="2" ry="2" />
<text  x="1051.79" y="161.5" ></text>
</g>
<g >
<title>firedrake.parloops.par_loop (74,285 us, 3.08%)</title><rect x="1066.5" y="135" width="36.3" height="15.0" fill="rgb(154.374751796339,154.374751796339,140.431489474565)" rx="2" ry="2" />
<text  x="1069.54" y="145.5" >fi..</text>
</g>
<g >
<title>CreateMesh (426 us, 0.02%)</title><rect x="913.9" y="119" width="0.2" height="15.0" fill="rgb(147.662429936461,147.662429936461,107.902545076697)" rx="2" ry="2" />
<text  x="916.90" y="129.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (76,425 us, 3.17%)</title><rect x="928.9" y="199" width="37.3" height="15.0" fill="rgb(148.200847601518,148.200847601518,110.511799915049)" rx="2" ry="2" />
<text  x="931.86" y="209.5" >Pa..</text>
</g>
<g >
<title>all (2,414,636 us, 100%)</title><rect x="10.0" y="39" width="1180.0" height="15.0" fill="rgb(152.313376299919,152.313376299919,130.441746684222)" rx="2" ry="2" />
<text  x="13.00" y="49.5" ></text>
</g>
<g >
<title>firedrake.functionspace.make_scalar_element (403 us, 0.02%)</title><rect x="1032.4" y="199" width="0.2" height="15.0" fill="rgb(130.390147623438,162.494627131068,130.390147623438)" rx="2" ry="2" />
<text  x="1035.38" y="209.5" ></text>
</g>
<g >
<title>firedrake.functionspace.VectorFunctionSpace (6,958 us, 0.29%)</title><rect x="63.4" y="87" width="3.4" height="15.0" fill="rgb(129.359984124285,150.574810698889,150.574810698889)" rx="2" ry="2" />
<text  x="66.38" y="97.5" ></text>
</g>
<g >
<title>ParLoopExecute (140,130 us, 5.80%)</title><rect x="1105.6" y="119" width="68.5" height="15.0" fill="rgb(123.0363650787,148.935353909293,148.935353909293)" rx="2" ry="2" />
<text  x="1108.65" y="129.5" >ParLoo..</text>
</g>
<g >
<title>KSPSolve (220,649 us, 9.14%)</title><rect x="925.7" y="103" width="107.8" height="15.0" fill="rgb(153.337895947388,122.257202263311,122.257202263311)" rx="2" ry="2" />
<text  x="928.66" y="113.5" >KSPSolve</text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (430 us, 0.02%)</title><rect x="1189.8" y="215" width="0.2" height="15.0" fill="rgb(152.372101395663,114.852777366753,114.852777366753)" rx="2" ry="2" />
<text  x="1192.79" y="225.5" ></text>
</g>
<g >
<title>ParLoopExecute (76,824 us, 3.18%)</title><rect x="928.7" y="183" width="37.5" height="15.0" fill="rgb(121.061969812596,148.423473655118,148.423473655118)" rx="2" ry="2" />
<text  x="931.67" y="193.5" >Pa..</text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (430 us, 0.02%)</title><rect x="1189.8" y="199" width="0.2" height="15.0" fill="rgb(154.810004945572,133.543371249387,133.543371249387)" rx="2" ry="2" />
<text  x="1192.79" y="209.5" ></text>
</g>
<g >
<title>firedrake.function.Function.split (903 us, 0.04%)</title><rect x="921.3" y="119" width="0.5" height="15.0" fill="rgb(134.192899851306,96.9943058689716,134.192899851306)" rx="2" ry="2" />
<text  x="924.32" y="129.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (6,958 us, 0.29%)</title><rect x="63.4" y="103" width="3.4" height="15.0" fill="rgb(148.885732014394,148.885732014394,113.830855146679)" rx="2" ry="2" />
<text  x="66.38" y="113.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (3,021 us, 0.13%)</title><rect x="1056.3" y="199" width="1.5" height="15.0" fill="rgb(126.86952109852,149.929135099616,149.929135099616)" rx="2" ry="2" />
<text  x="1059.30" y="209.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.LinearVariationalProblem.__init__ (15,091 us, 0.62%)</title><rect x="914.4" y="71" width="7.4" height="15.0" fill="rgb(133.659230879042,161.962450787133,133.659230879042)" rx="2" ry="2" />
<text  x="917.39" y="81.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.action (4,645 us, 0.19%)</title><rect x="914.4" y="87" width="2.3" height="15.0" fill="rgb(155.790197651907,155.790197651907,147.290957851548)" rx="2" ry="2" />
<text  x="917.39" y="97.5" ></text>
</g>
<g >
<title>FunctionSpaceData: CreateElement (6,950 us, 0.29%)</title><rect x="74.1" y="135" width="3.4" height="15.0" fill="rgb(124.65462890589,124.65462890589,151.546057207592)" rx="2" ry="2" />
<text  x="77.11" y="145.5" ></text>
</g>
<g >
<title>CreateMesh (426 us, 0.02%)</title><rect x="913.9" y="103" width="0.2" height="15.0" fill="rgb(106.997329607072,144.777085453685,144.777085453685)" rx="2" ry="2" />
<text  x="916.90" y="113.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (462 us, 0.02%)</title><rect x="913.4" y="103" width="0.2" height="15.0" fill="rgb(131.194542257202,162.363679167432,131.194542257202)" rx="2" ry="2" />
<text  x="916.38" y="113.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (6,423 us, 0.27%)</title><rect x="63.6" y="151" width="3.2" height="15.0" fill="rgb(122.688654612778,148.845206751461,148.845206751461)" rx="2" ry="2" />
<text  x="66.64" y="161.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalProblem.__init__ (10,446 us, 0.43%)</title><rect x="916.7" y="87" width="5.1" height="15.0" fill="rgb(155.135282649641,136.03716698058,136.03716698058)" rx="2" ry="2" />
<text  x="919.66" y="97.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (76,425 us, 3.17%)</title><rect x="928.9" y="215" width="37.3" height="15.0" fill="rgb(152.002982944923,112.022869244406,112.022869244406)" rx="2" ry="2" />
<text  x="931.86" y="225.5" >py..</text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (1,469 us, 0.06%)</title><rect x="1047.8" y="215" width="0.8" height="15.0" fill="rgb(153.416692759483,153.416692759483,135.788587988262)" rx="2" ry="2" />
<text  x="1050.85" y="225.5" ></text>
</g>
<g >
<title>firedrake.utility_meshes.RectangleMesh (1,594 us, 0.07%)</title><rect x="913.6" y="87" width="0.8" height="15.0" fill="rgb(150.484536090011,150.484536090011,121.578905666976)" rx="2" ry="2" />
<text  x="916.61" y="97.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_pyop2_kernel_uniform_extrusion (74,990 us, 3.11%)</title><rect x="26.7" y="119" width="36.7" height="15.0" fill="rgb(151.66533637838,151.66533637838,127.301245525993)" rx="2" ry="2" />
<text  x="29.73" y="129.5" >Pa..</text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (6,958 us, 0.29%)</title><rect x="63.4" y="119" width="3.4" height="15.0" fill="rgb(115.279970133695,146.924436701328,146.924436701328)" rx="2" ry="2" />
<text  x="66.38" y="129.5" ></text>
</g>
<g >
<title>firedrake.parloops.par_loop (82,480 us, 3.42%)</title><rect x="925.9" y="167" width="40.3" height="15.0" fill="rgb(154.203360828583,154.203360828583,139.600902476978)" rx="2" ry="2" />
<text  x="928.90" y="177.5" >fir..</text>
</g>
<g >
<title>firedrake.ufl_expr.action (3,831 us, 0.16%)</title><rect x="922.5" y="119" width="1.9" height="15.0" fill="rgb(156.205625596327,144.243129571836,144.243129571836)" rx="2" ry="2" />
<text  x="925.50" y="129.5" ></text>
</g>
<g >
<title>FunctionSpaceData: CreateElement (870 us, 0.04%)</title><rect x="66.0" y="167" width="0.4" height="15.0" fill="rgb(107.949036734491,145.023824338572,145.023824338572)" rx="2" ry="2" />
<text  x="69.01" y="177.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (6,423 us, 0.27%)</title><rect x="63.6" y="135" width="3.2" height="15.0" fill="rgb(139.997444371246,111.868451201317,139.997444371246)" rx="2" ry="2" />
<text  x="66.64" y="145.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (1,469 us, 0.06%)</title><rect x="1047.8" y="183" width="0.8" height="15.0" fill="rgb(108.981167242012,108.981167242012,148.512483982325)" rx="2" ry="2" />
<text  x="1050.85" y="193.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (12,562 us, 0.52%)</title><rect x="1052.0" y="135" width="6.2" height="15.0" fill="rgb(146.707264466852,159.838352296094,146.707264466852)" rx="2" ry="2" />
<text  x="1055.03" y="145.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_form1_cell_integral_otherwise (68,205 us, 2.82%)</title><rect x="1140.8" y="135" width="33.3" height="15.0" fill="rgb(133.785383835354,133.785383835354,153.313300097165)" rx="2" ry="2" />
<text  x="1143.79" y="145.5" >Pa..</text>
</g>
<g >
<title>firedrake.mesh._Facets.__init__ (702 us, 0.03%)</title><rect x="66.4" y="167" width="0.4" height="15.0" fill="rgb(155.659088926322,140.053015101802,140.053015101802)" rx="2" ry="2" />
<text  x="69.44" y="177.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (5,302 us, 0.22%)</title><rect x="1187.4" y="135" width="2.6" height="15.0" fill="rgb(122.920972898981,122.920972898981,151.210510883674)" rx="2" ry="2" />
<text  x="1190.41" y="145.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (5,442 us, 0.23%)</title><rect x="1049.2" y="183" width="2.6" height="15.0" fill="rgb(146.398208768078,154.992128199131,154.992128199131)" rx="2" ry="2" />
<text  x="1052.16" y="193.5" ></text>
</g>
<g >
<title>firedrake.functionspace.MixedFunctionSpace (1,108 us, 0.05%)</title><rect x="913.1" y="71" width="0.5" height="15.0" fill="rgb(132.667625415584,162.123874932347,132.667625415584)" rx="2" ry="2" />
<text  x="916.07" y="81.5" ></text>
</g>
<g >
<title>SCForwardElim (220,649 us, 9.14%)</title><rect x="925.7" y="135" width="107.8" height="15.0" fill="rgb(148.583612455106,148.583612455106,112.366737282439)" rx="2" ry="2" />
<text  x="928.66" y="145.5" >SCForwardElim</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (67,787 us, 2.81%)</title><rect x="1141.0" y="151" width="33.1" height="15.0" fill="rgb(106.321371297009,144.601837002928,144.601837002928)" rx="2" ry="2" />
<text  x="1144.00" y="161.5" >py..</text>
</g>
<g >
<title>CreateFunctionSpace (6,277 us, 0.26%)</title><rect x="1054.7" y="183" width="3.1" height="15.0" fill="rgb(129.802527739846,162.590286181886,129.802527739846)" rx="2" ry="2" />
<text  x="1057.71" y="193.5" ></text>
</g>
<g >
<title>CreateExtMesh (118,026 us, 4.89%)</title><rect x="10.0" y="71" width="57.7" height="15.0" fill="rgb(153.111315060654,120.52008213168,120.52008213168)" rx="2" ry="2" />
<text  x="13.00" y="81.5" >Creat..</text>
</g>
<g >
<title>firedrake.functionspaceimpl.WithGeometry.split (795 us, 0.03%)</title><rect x="1057.8" y="183" width="0.4" height="15.0" fill="rgb(143.872394798701,160.299842707188,143.872394798701)" rx="2" ry="2" />
<text  x="1060.78" y="193.5" ></text>
</g>
<g >
<title>PCSetUp (143,960 us, 5.96%)</title><rect x="1033.5" y="103" width="70.3" height="15.0" fill="rgb(144.141280085867,160.256070683696,144.141280085867)" rx="2" ry="2" />
<text  x="1036.48" y="113.5" >PCSetUp</text>
</g>
<g >
<title>firedrake.function.Function.__init__ (1,340 us, 0.06%)</title><rect x="1032.8" y="183" width="0.7" height="15.0" fill="rgb(127.311703804119,127.311703804119,152.060329768539)" rx="2" ry="2" />
<text  x="1035.83" y="193.5" ></text>
</g>
<g >
<title>CreateMesh (2,409 us, 0.10%)</title><rect x="78.9" y="71" width="1.2" height="15.0" fill="rgb(134.372816215773,161.846285732316,134.372816215773)" rx="2" ry="2" />
<text  x="81.89" y="81.5" ></text>
</g>
<g >
<title>firedrake.matrix_free.operators.ImplicitMatrixContext.__init__ (6,453 us, 0.27%)</title><rect x="922.5" y="103" width="3.2" height="15.0" fill="rgb(141.323685387861,141.323685387861,154.772326204102)" rx="2" ry="2" />
<text  x="925.50" y="113.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (5,442 us, 0.23%)</title><rect x="1049.2" y="151" width="2.6" height="15.0" fill="rgb(148.238131965503,148.238131965503,110.692485678976)" rx="2" ry="2" />
<text  x="1052.16" y="161.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (9,543 us, 0.40%)</title><rect x="916.7" y="103" width="4.6" height="15.0" fill="rgb(134.166815176916,134.166815176916,153.387125518113)" rx="2" ry="2" />
<text  x="919.66" y="113.5" ></text>
</g>
<g >
<title>FunctionSpaceData: CreateElement (4,834 us, 0.20%)</title><rect x="1049.5" y="199" width="2.3" height="15.0" fill="rgb(146.29306912161,128.000989624126,146.29306912161)" rx="2" ry="2" />
<text  x="1052.46" y="209.5" ></text>
</g>
<g >
<title>firedrake.__init__ (1,703,756 us, 70.56%)</title><rect x="80.5" y="71" width="832.6" height="15.0" fill="rgb(152.813964290004,152.813964290004,132.867673097713)" rx="2" ry="2" />
<text  x="83.46" y="81.5" >firedrake.__init__</text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (2,622 us, 0.11%)</title><rect x="924.4" y="119" width="1.3" height="15.0" fill="rgb(155.56376147749,139.322171327422,139.322171327422)" rx="2" ry="2" />
<text  x="927.37" y="129.5" ></text>
</g>
<g >
<title>firedrake.mesh._Facets.__init__ (938 us, 0.04%)</title><rect x="78.4" y="151" width="0.5" height="15.0" fill="rgb(116.724774007039,147.299015483306,147.299015483306)" rx="2" ry="2" />
<text  x="81.43" y="161.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.solve (540,928 us, 22.40%)</title><rect x="925.7" y="71" width="264.3" height="15.0" fill="rgb(152.738864855952,152.738864855952,132.503729686536)" rx="2" ry="2" />
<text  x="928.66" y="81.5" >firedrake.variational_solver.Non..</text>
</g>
<g >
<title>HybridBreak (82,988 us, 3.44%)</title><rect x="925.7" y="151" width="40.5" height="15.0" fill="rgb(155.013052376321,135.100068218463,135.100068218463)" rx="2" ry="2" />
<text  x="928.66" y="161.5" >Hyb..</text>
</g>
<g >
<title>firedrake.functionspace.make_scalar_element (1,484 us, 0.06%)</title><rect x="1055.6" y="199" width="0.7" height="15.0" fill="rgb(153.716862237231,125.162610485436,125.162610485436)" rx="2" ry="2" />
<text  x="1058.57" y="209.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (2,034 us, 0.08%)</title><rect x="1102.8" y="135" width="1.0" height="15.0" fill="rgb(137.972584029546,161.260277018446,137.972584029546)" rx="2" ry="2" />
<text  x="1105.84" y="145.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (74,464 us, 3.08%)</title><rect x="27.0" y="135" width="36.4" height="15.0" fill="rgb(112.98044472239,112.98044472239,149.286537688205)" rx="2" ry="2" />
<text  x="29.99" y="145.5" >py..</text>
</g>
<g >
<title>CreateFunctionSpace (925 us, 0.04%)</title><rect x="1032.4" y="183" width="0.4" height="15.0" fill="rgb(156.242788432933,144.528044652486,144.528044652486)" rx="2" ry="2" />
<text  x="1035.38" y="193.5" ></text>
</g>
<g >
<title>firedrake.extrusion_utils.make_extruded_coords (108,559 us, 4.50%)</title><rect x="10.3" y="87" width="53.1" height="15.0" fill="rgb(126.183555438829,163.179421207632,126.183555438829)" rx="2" ry="2" />
<text  x="13.33" y="97.5" >fire..</text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (462 us, 0.02%)</title><rect x="913.4" y="87" width="0.2" height="15.0" fill="rgb(153.288970870092,153.288970870092,135.169628062755)" rx="2" ry="2" />
<text  x="916.38" y="97.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (8,725 us, 0.36%)</title><rect x="1053.9" y="167" width="4.3" height="15.0" fill="rgb(119.484354599483,119.484354599483,150.545358954739)" rx="2" ry="2" />
<text  x="1056.90" y="177.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (522 us, 0.02%)</title><rect x="1032.6" y="215" width="0.2" height="15.0" fill="rgb(150.204932012813,150.204932012813,120.223901292861)" rx="2" ry="2" />
<text  x="1035.57" y="225.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_form0_cell_integral_otherwise (71,225 us, 2.95%)</title><rect x="1106.0" y="135" width="34.8" height="15.0" fill="rgb(134.318858805842,161.855069496723,134.318858805842)" rx="2" ry="2" />
<text  x="1108.99" y="145.5" >Pa..</text>
</g>
<g >
<title>Log_Event_form0_cell_integral_otherwise (2,222 us, 0.09%)</title><rect x="1106.0" y="151" width="1.1" height="15.0" fill="rgb(138.348768261557,161.199037724863,138.348768261557)" rx="2" ry="2" />
<text  x="1108.99" y="161.5" ></text>
</g>
<g >
<title>firedrake.mesh._from_cell_list (574 us, 0.02%)</title><rect x="914.1" y="103" width="0.3" height="15.0" fill="rgb(149.812775885872,159.332803925556,149.812775885872)" rx="2" ry="2" />
<text  x="917.11" y="113.5" ></text>
</g>
<g >
<title>HybridRHS (137,661 us, 5.70%)</title><rect x="966.2" y="151" width="67.3" height="15.0" fill="rgb(143.924595063052,154.350820942273,154.350820942273)" rx="2" ry="2" />
<text  x="969.21" y="161.5" >Hybrid..</text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.__init__ (7,967 us, 0.33%)</title><rect x="921.8" y="71" width="3.9" height="15.0" fill="rgb(153.58755785884,153.58755785884,136.616626546688)" rx="2" ry="2" />
<text  x="924.76" y="81.5" ></text>
</g>
<g >
<title>ParLoopExecute (68,939 us, 2.86%)</title><rect x="1069.2" y="151" width="33.6" height="15.0" fill="rgb(134.11358106976,161.888486802597,134.11358106976)" rx="2" ry="2" />
<text  x="1072.15" y="161.5" >Pa..</text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (2,897 us, 0.12%)</title><rect x="1188.6" y="151" width="1.4" height="15.0" fill="rgb(154.306612654557,129.684030351605,129.684030351605)" rx="2" ry="2" />
<text  x="1191.58" y="161.5" ></text>
</g>
<g >
<title>ParLoopExecute (75,545 us, 3.13%)</title><rect x="26.5" y="103" width="36.9" height="15.0" fill="rgb(144.566838918923,154.51732860861,154.51732860861)" rx="2" ry="2" />
<text  x="29.46" y="113.5" >Pa..</text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (32,484 us, 1.35%)</title><rect x="1174.1" y="119" width="15.9" height="15.0" fill="rgb(153.176431396696,121.019307374672,121.019307374672)" rx="2" ry="2" />
<text  x="1177.13" y="129.5" ></text>
</g>
<g >
<title>Mesh: numbering (1,025 us, 0.04%)</title><rect x="79.6" y="87" width="0.5" height="15.0" fill="rgb(138.550894447035,138.550894447035,154.235656989749)" rx="2" ry="2" />
<text  x="82.56" y="97.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (980 us, 0.04%)</title><rect x="1189.5" y="167" width="0.5" height="15.0" fill="rgb(138.852967154467,161.116958835319,138.852967154467)" rx="2" ry="2" />
<text  x="1192.52" y="177.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (462 us, 0.02%)</title><rect x="913.4" y="119" width="0.2" height="15.0" fill="rgb(119.440762198659,119.440762198659,150.53692171587)" rx="2" ry="2" />
<text  x="916.38" y="129.5" ></text>
</g>
<g >
<title>firedrake.mesh.MeshTopology._facets (2,822 us, 0.12%)</title><rect x="77.5" y="135" width="1.4" height="15.0" fill="rgb(136.629859623015,103.239015283976,136.629859623015)" rx="2" ry="2" />
<text  x="80.51" y="145.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (5,442 us, 0.23%)</title><rect x="1049.2" y="167" width="2.6" height="15.0" fill="rgb(152.139846049375,113.072153045208,113.072153045208)" rx="2" ry="2" />
<text  x="1052.16" y="177.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (522 us, 0.02%)</title><rect x="1032.6" y="199" width="0.2" height="15.0" fill="rgb(133.610851782898,95.5028076936767,133.610851782898)" rx="2" ry="2" />
<text  x="1035.57" y="209.5" ></text>
</g>
</g>
</svg>
