<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="283" onload="init(evt)" viewBox="0 0 1200 283" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:13px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:18px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 13 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (1 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="283.0" fill="url(#background)"  />
<text id="title" x="600.00" y="26" >Firedrake example</text>
<text id="details" x="10.00" y="265" > </text>
<text id="unzoom" x="10.00" y="26" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="26" >Search</text>
<text id="ignorecase" x="1174.00" y="26" >ic</text>
<text id="matched" x="1090.00" y="265" > </text>
<g id="frames">
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (69,046 us, 1.74%)</title><rect x="1106.8" y="167" width="20.6" height="15.0" fill="rgb(154.24878621882,129.24069434429,129.24069434429)" rx="2" ry="2" />
<text  x="1109.81" y="177.5" ></text>
</g>
<g >
<title>CreateMesh (1,571 us, 0.04%)</title><rect x="1012.8" y="103" width="0.5" height="15.0" fill="rgb(155.878066917878,155.878066917878,147.716785832791)" rx="2" ry="2" />
<text  x="1015.85" y="113.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.solve (560,395 us, 14.16%)</title><rect x="1022.9" y="71" width="167.1" height="15.0" fill="rgb(122.690390241381,148.845656729247,148.845656729247)" rx="2" ry="2" />
<text  x="1025.92" y="81.5" >firedrake.variation..</text>
</g>
<g >
<title>firedrake.mesh._from_cell_list (7,273 us, 0.18%)</title><rect x="1013.3" y="103" width="2.2" height="15.0" fill="rgb(151.499590867566,151.499590867566,126.498017281283)" rx="2" ry="2" />
<text  x="1016.31" y="113.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (2,435 us, 0.06%)</title><rect x="1098.3" y="215" width="0.8" height="15.0" fill="rgb(122.179027524871,148.713081210152,148.713081210152)" rx="2" ry="2" />
<text  x="1101.33" y="225.5" ></text>
</g>
<g >
<title>firedrake.function.Function.__init__ (1,237 us, 0.03%)</title><rect x="1099.3" y="135" width="0.4" height="15.0" fill="rgb(150.858513866535,150.858513866535,123.391259507056)" rx="2" ry="2" />
<text  x="1102.30" y="145.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.LinearVariationalProblem.__init__ (15,225 us, 0.38%)</title><rect x="1015.5" y="71" width="4.5" height="15.0" fill="rgb(155.687219304418,140.268681333872,140.268681333872)" rx="2" ry="2" />
<text  x="1018.48" y="81.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (5,431 us, 0.14%)</title><rect x="1093.2" y="167" width="1.6" height="15.0" fill="rgb(147.882127870087,159.647095463009,147.882127870087)" rx="2" ry="2" />
<text  x="1096.20" y="177.5" ></text>
</g>
<g >
<title>SNESSolve (560,395 us, 14.16%)</title><rect x="1022.9" y="87" width="167.1" height="15.0" fill="rgb(138.135418669234,107.097010339913,138.135418669234)" rx="2" ry="2" />
<text  x="1025.92" y="97.5" >SNESSolve</text>
</g>
<g >
<title>firedrake.__init__ (3,128,634 us, 79.05%)</title><rect x="78.8" y="71" width="932.8" height="15.0" fill="rgb(152.049334825222,152.049334825222,129.162161076075)" rx="2" ry="2" />
<text  x="81.80" y="81.5" >firedrake.__init__</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (69,046 us, 1.74%)</title><rect x="1106.8" y="183" width="20.6" height="15.0" fill="rgb(150.363035715705,159.243226743955,150.363035715705)" rx="2" ry="2" />
<text  x="1109.81" y="193.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (8,500 us, 0.21%)</title><rect x="49.9" y="135" width="2.5" height="15.0" fill="rgb(127.828625514258,162.91161910233,127.828625514258)" rx="2" ry="2" />
<text  x="52.87" y="145.5" ></text>
</g>
<g >
<title>firedrake.functionspace.MixedFunctionSpace (1,449 us, 0.04%)</title><rect x="1011.6" y="71" width="0.4" height="15.0" fill="rgb(120.161483967306,148.190014361894,148.190014361894)" rx="2" ry="2" />
<text  x="1014.60" y="81.5" ></text>
</g>
<g >
<title>SCForwardElim (199,836 us, 5.05%)</title><rect x="1022.9" y="135" width="59.6" height="15.0" fill="rgb(155.287530173115,155.287530173115,144.854953915864)" rx="2" ry="2" />
<text  x="1025.92" y="145.5" >SCFor..</text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (642 us, 0.02%)</title><rect x="1081.9" y="199" width="0.2" height="15.0" fill="rgb(148.147530845535,159.603890327471,148.147530845535)" rx="2" ry="2" />
<text  x="1084.92" y="209.5" ></text>
</g>
<g >
<title>firedrake.assemble.allocate_matrix (6,405 us, 0.16%)</title><rect x="1021.0" y="87" width="1.9" height="15.0" fill="rgb(149.457643073696,149.457643073696,116.602424126371)" rx="2" ry="2" />
<text  x="1024.01" y="97.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (75,698 us, 1.91%)</title><rect x="1131.6" y="151" width="22.5" height="15.0" fill="rgb(123.237896934407,123.237896934407,151.271851019563)" rx="2" ry="2" />
<text  x="1134.55" y="161.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (67,162 us, 1.70%)</title><rect x="1025.4" y="199" width="20.0" height="15.0" fill="rgb(120.837744696917,120.837744696917,150.80730542521)" rx="2" ry="2" />
<text  x="1028.38" y="209.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (741 us, 0.02%)</title><rect x="1011.8" y="87" width="0.2" height="15.0" fill="rgb(118.1582382626,147.670654364378,147.670654364378)" rx="2" ry="2" />
<text  x="1014.82" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (602 us, 0.02%)</title><rect x="1092.7" y="167" width="0.2" height="15.0" fill="rgb(155.554499687693,139.251164272312,139.251164272312)" rx="2" ry="2" />
<text  x="1095.75" y="177.5" ></text>
</g>
<g >
<title>firedrake.function.Function.split (993 us, 0.03%)</title><rect x="1019.7" y="119" width="0.3" height="15.0" fill="rgb(124.079754107733,149.205862176079,149.205862176079)" rx="2" ry="2" />
<text  x="1022.73" y="129.5" ></text>
</g>
<g >
<title>firedrake.mesh.MeshTopology._facets (18,270 us, 0.46%)</title><rect x="59.8" y="135" width="5.4" height="15.0" fill="rgb(147.953486628401,147.953486628401,109.31305058379)" rx="2" ry="2" />
<text  x="62.78" y="145.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (2,558 us, 0.06%)</title><rect x="1022.2" y="119" width="0.7" height="15.0" fill="rgb(121.301389853912,121.301389853912,150.897043197531)" rx="2" ry="2" />
<text  x="1025.16" y="129.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_form1_cell_integral_otherwise (82,349 us, 2.08%)</title><rect x="1154.1" y="135" width="24.6" height="15.0" fill="rgb(145.271634279197,154.700053331644,154.700053331644)" rx="2" ry="2" />
<text  x="1157.12" y="145.5" >P..</text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (37,981 us, 0.96%)</title><rect x="1178.7" y="119" width="11.3" height="15.0" fill="rgb(151.766029723435,151.766029723435,127.789220967416)" rx="2" ry="2" />
<text  x="1181.68" y="129.5" ></text>
</g>
<g >
<title>firedrake.assemble.allocate_matrix (621 us, 0.02%)</title><rect x="1094.8" y="135" width="0.2" height="15.0" fill="rgb(118.479518543235,147.75394925195,147.75394925195)" rx="2" ry="2" />
<text  x="1097.82" y="145.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (642 us, 0.02%)</title><rect x="1081.9" y="215" width="0.2" height="15.0" fill="rgb(156.051456983309,143.061170205371,143.061170205371)" rx="2" ry="2" />
<text  x="1084.92" y="225.5" ></text>
</g>
<g >
<title>CreateMesh (3,338 us, 0.08%)</title><rect x="66.6" y="87" width="1.0" height="15.0" fill="rgb(111.948352250952,146.060683916914,146.060683916914)" rx="2" ry="2" />
<text  x="69.63" y="97.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_form0_cell_integral_otherwise (81,735 us, 2.07%)</title><rect x="1129.8" y="135" width="24.3" height="15.0" fill="rgb(154.557454198252,154.557454198252,141.3168934223)" rx="2" ry="2" />
<text  x="1132.75" y="145.5" >P..</text>
</g>
<g >
<title>ParLoopExecute (69,046 us, 1.74%)</title><rect x="1106.8" y="151" width="20.6" height="15.0" fill="rgb(124.390207576294,149.286350112373,149.286350112373)" rx="2" ry="2" />
<text  x="1109.81" y="161.5" ></text>
</g>
<g >
<title>PetscBarrier (27,239 us, 0.69%)</title><rect x="70.7" y="71" width="8.1" height="15.0" fill="rgb(145.534179116793,145.534179116793,155.587260474218)" rx="2" ry="2" />
<text  x="73.68" y="81.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.__init__ (9,716 us, 0.25%)</title><rect x="1020.0" y="71" width="2.9" height="15.0" fill="rgb(144.512783707609,154.503314294565,154.503314294565)" rx="2" ry="2" />
<text  x="1023.02" y="81.5" ></text>
</g>
<g >
<title>firedrake.utility_meshes.RectangleMesh (11,559 us, 0.29%)</title><rect x="1012.0" y="87" width="3.5" height="15.0" fill="rgb(154.634988553516,154.634988553516,141.692636836268)" rx="2" ry="2" />
<text  x="1015.04" y="97.5" ></text>
</g>
<g >
<title>Mesh: reorder (3,869 us, 0.10%)</title><rect x="69.5" y="87" width="1.2" height="15.0" fill="rgb(155.300204051876,137.301564397718,137.301564397718)" rx="2" ry="2" />
<text  x="72.53" y="97.5" ></text>
</g>
<g >
<title>DMPlexStratify (752 us, 0.02%)</title><rect x="1013.8" y="135" width="0.2" height="15.0" fill="rgb(147.10865303456,159.773009971118,147.10865303456)" rx="2" ry="2" />
<text  x="1016.76" y="145.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (41,150 us, 1.04%)</title><rect x="53.0" y="71" width="12.2" height="15.0" fill="rgb(149.629276089301,149.629276089301,117.434184125075)" rx="2" ry="2" />
<text  x="55.96" y="81.5" ></text>
</g>
<g >
<title>firedrake.interpolation.make_interpolator (17,972 us, 0.45%)</title><rect x="1099.7" y="135" width="5.3" height="15.0" fill="rgb(127.976033213417,150.216008610886,150.216008610886)" rx="2" ry="2" />
<text  x="1102.66" y="145.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.action (3,847 us, 0.10%)</title><rect x="1021.0" y="119" width="1.2" height="15.0" fill="rgb(155.080490506534,135.61709388343,135.61709388343)" rx="2" ry="2" />
<text  x="1024.01" y="129.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (10,696 us, 0.27%)</title><rect x="1091.6" y="135" width="3.2" height="15.0" fill="rgb(151.529218609121,151.529218609121,126.641597874969)" rx="2" ry="2" />
<text  x="1094.63" y="145.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (3,064 us, 0.08%)</title><rect x="1091.8" y="167" width="0.9" height="15.0" fill="rgb(130.247424486161,150.804887829745,150.804887829745)" rx="2" ry="2" />
<text  x="1094.83" y="177.5" ></text>
</g>
<g >
<title>FunctionSpaceData: CreateElement (4,126 us, 0.10%)</title><rect x="1093.6" y="199" width="1.2" height="15.0" fill="rgb(155.791512754187,155.791512754187,147.297331039522)" rx="2" ry="2" />
<text  x="1096.59" y="209.5" ></text>
</g>
<g >
<title>ParLoopExecute (67,938 us, 1.72%)</title><rect x="1025.2" y="183" width="20.2" height="15.0" fill="rgb(144.01126799906,122.15387424759,144.01126799906)" rx="2" ry="2" />
<text  x="1028.15" y="193.5" ></text>
</g>
<g >
<title>firedrake.utility_meshes.SquareMesh (11,559 us, 0.29%)</title><rect x="1012.0" y="71" width="3.5" height="15.0" fill="rgb(146.631821648147,155.052694501371,155.052694501371)" rx="2" ry="2" />
<text  x="1015.04" y="81.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.action (4,737 us, 0.12%)</title><rect x="1015.5" y="87" width="1.4" height="15.0" fill="rgb(129.484624219853,150.60712479774,150.60712479774)" rx="2" ry="2" />
<text  x="1018.48" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (2,458 us, 0.06%)</title><rect x="1092.0" y="183" width="0.7" height="15.0" fill="rgb(149.100759647658,135.195696597123,149.100759647658)" rx="2" ry="2" />
<text  x="1095.01" y="193.5" ></text>
</g>
<g >
<title>firedrake.function.Function.__init__ (1,291 us, 0.03%)</title><rect x="1082.1" y="183" width="0.4" height="15.0" fill="rgb(154.685062821516,132.585481631621,132.585481631621)" rx="2" ry="2" />
<text  x="1085.11" y="193.5" ></text>
</g>
<g >
<title>FunctionSpaceData: CreateElement (853 us, 0.02%)</title><rect x="51.9" y="167" width="0.3" height="15.0" fill="rgb(110.95757301597,110.95757301597,148.895014132123)" rx="2" ry="2" />
<text  x="54.95" y="177.5" ></text>
</g>
<g >
<title>firedrake.matrix_free.operators.ImplicitMatrixContext.__init__ (621 us, 0.02%)</title><rect x="1094.8" y="151" width="0.2" height="15.0" fill="rgb(113.165666442728,146.376283892559,146.376283892559)" rx="2" ry="2" />
<text  x="1097.82" y="161.5" ></text>
</g>
<g >
<title>firedrake.extrusion_utils.make_extruded_coords (133,006 us, 3.36%)</title><rect x="10.2" y="87" width="39.7" height="15.0" fill="rgb(140.389846102679,153.434404545139,153.434404545139)" rx="2" ry="2" />
<text  x="13.22" y="97.5" >fir..</text>
</g>
<g >
<title>firedrake.mesh._Facets.__init__ (689 us, 0.02%)</title><rect x="52.2" y="167" width="0.2" height="15.0" fill="rgb(154.102935940284,128.122508875512,128.122508875512)" rx="2" ry="2" />
<text  x="55.20" y="177.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (3,218 us, 0.08%)</title><rect x="1189.0" y="151" width="1.0" height="15.0" fill="rgb(127.428991264357,162.976675840686,127.428991264357)" rx="2" ry="2" />
<text  x="1192.04" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (8,500 us, 0.21%)</title><rect x="49.9" y="151" width="2.5" height="15.0" fill="rgb(123.298239845718,149.003247367408,149.003247367408)" rx="2" ry="2" />
<text  x="52.87" y="161.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (78,203 us, 1.98%)</title><rect x="1155.4" y="151" width="23.3" height="15.0" fill="rgb(131.01668052664,162.39263340264,131.01668052664)" rx="2" ry="2" />
<text  x="1158.36" y="161.5" >p..</text>
</g>
<g >
<title>firedrake (3,957,750 us, 100.00%)</title><rect x="10.0" y="55" width="1180.0" height="15.0" fill="rgb(146.146419672946,154.926849544838,154.926849544838)" rx="2" ry="2" />
<text  x="13.00" y="65.5" >firedrake</text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (14,408 us, 0.36%)</title><rect x="1095.0" y="135" width="4.3" height="15.0" fill="rgb(151.305172504592,151.305172504592,125.555835983791)" rx="2" ry="2" />
<text  x="1098.00" y="145.5" ></text>
</g>
<g >
<title>ParLoopExecute (165,199 us, 4.17%)</title><rect x="1129.4" y="119" width="49.3" height="15.0" fill="rgb(154.395074539236,154.395074539236,140.529976613222)" rx="2" ry="2" />
<text  x="1132.42" y="129.5" >ParL..</text>
</g>
<g >
<title>DMPlexInterp (5,034 us, 0.13%)</title><rect x="1014.0" y="119" width="1.5" height="15.0" fill="rgb(148.818649051553,148.818649051553,113.505760788298)" rx="2" ry="2" />
<text  x="1016.98" y="129.5" ></text>
</g>
<g >
<title>firedrake.matrix_free.operators.ImplicitMatrixContext.__init__ (6,405 us, 0.16%)</title><rect x="1021.0" y="103" width="1.9" height="15.0" fill="rgb(146.008018732844,154.890967819626,154.890967819626)" rx="2" ry="2" />
<text  x="1024.01" y="113.5" ></text>
</g>
<g >
<title>firedrake.functionspace.make_scalar_element (903 us, 0.02%)</title><rect x="1092.9" y="151" width="0.3" height="15.0" fill="rgb(110.784636548656,110.784636548656,148.861542557804)" rx="2" ry="2" />
<text  x="1095.93" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspace.MixedFunctionSpace (4,362 us, 0.11%)</title><rect x="1091.6" y="151" width="1.3" height="15.0" fill="rgb(154.505964929683,131.212397794237,131.212397794237)" rx="2" ry="2" />
<text  x="1094.63" y="161.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (8,500 us, 0.21%)</title><rect x="49.9" y="103" width="2.5" height="15.0" fill="rgb(127.112105959799,127.112105959799,152.021697927703)" rx="2" ry="2" />
<text  x="52.87" y="113.5" ></text>
</g>
<g >
<title>firedrake.mesh.make_mesh_from_coordinates (938 us, 0.02%)</title><rect x="52.7" y="87" width="0.3" height="15.0" fill="rgb(146.802576987543,155.096964404178,155.096964404178)" rx="2" ry="2" />
<text  x="55.68" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (5,431 us, 0.14%)</title><rect x="1093.2" y="151" width="1.6" height="15.0" fill="rgb(138.328074195282,161.202406526349,138.328074195282)" rx="2" ry="2" />
<text  x="1096.20" y="161.5" ></text>
</g>
<g >
<title>DMPlexSymmetrize (2,276 us, 0.06%)</title><rect x="78.1" y="87" width="0.7" height="15.0" fill="rgb(150.400179905856,150.400179905856,121.170102620688)" rx="2" ry="2" />
<text  x="81.13" y="97.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_pyop2_kernel_uniform_extrusion (100,053 us, 2.53%)</title><rect x="20.0" y="119" width="29.9" height="15.0" fill="rgb(107.430626766946,144.889421754394,144.889421754394)" rx="2" ry="2" />
<text  x="23.04" y="129.5" >P..</text>
</g>
<g >
<title>DMPlexBuFrCeLi (752 us, 0.02%)</title><rect x="1013.8" y="119" width="0.2" height="15.0" fill="rgb(128.320017899709,150.305189825851,150.305189825851)" rx="2" ry="2" />
<text  x="1016.76" y="129.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (2,458 us, 0.06%)</title><rect x="1092.0" y="199" width="0.7" height="15.0" fill="rgb(152.190540938686,152.190540938686,129.846467625939)" rx="2" ry="2" />
<text  x="1095.01" y="209.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (9,890 us, 0.25%)</title><rect x="1096.3" y="167" width="3.0" height="15.0" fill="rgb(135.227465203134,152.096009497109,152.096009497109)" rx="2" ry="2" />
<text  x="1099.35" y="177.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (1,338 us, 0.03%)</title><rect x="1189.6" y="167" width="0.4" height="15.0" fill="rgb(106.46006412849,144.637794403683,144.637794403683)" rx="2" ry="2" />
<text  x="1192.60" y="177.5" ></text>
</g>
<g >
<title>HybridBreak (75,426 us, 1.91%)</title><rect x="1022.9" y="151" width="22.5" height="15.0" fill="rgb(148.029437454033,148.029437454033,109.681119969544)" rx="2" ry="2" />
<text  x="1025.92" y="161.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalProblem.__init__ (10,488 us, 0.26%)</title><rect x="1016.9" y="87" width="3.1" height="15.0" fill="rgb(143.680323142328,143.680323142328,155.228449640451)" rx="2" ry="2" />
<text  x="1019.89" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (39,462 us, 1.00%)</title><rect x="53.5" y="87" width="11.7" height="15.0" fill="rgb(136.148106855391,152.334694369916,152.334694369916)" rx="2" ry="2" />
<text  x="56.47" y="97.5" ></text>
</g>
<g >
<title>firedrake.mesh._Facets.__init__ (802 us, 0.02%)</title><rect x="65.0" y="151" width="0.2" height="15.0" fill="rgb(155.868900279915,141.66156881268,141.66156881268)" rx="2" ry="2" />
<text  x="67.99" y="161.5" ></text>
</g>
<g >
<title>KSPSolve (199,836 us, 5.05%)</title><rect x="1022.9" y="103" width="59.6" height="15.0" fill="rgb(123.497997956881,149.055036507339,149.055036507339)" rx="2" ry="2" />
<text  x="1025.92" y="113.5" >KSPSo..</text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (5,431 us, 0.14%)</title><rect x="1093.2" y="183" width="1.6" height="15.0" fill="rgb(133.99477707644,96.4866162583766,133.99477707644)" rx="2" ry="2" />
<text  x="1096.20" y="193.5" ></text>
</g>
<g >
<title>all (3,957,750 us, 100%)</title><rect x="10.0" y="39" width="1180.0" height="15.0" fill="rgb(121.619372295869,148.56798541004,148.56798541004)" rx="2" ry="2" />
<text  x="13.00" y="49.5" ></text>
</g>
<g >
<title>CreateMesh (1,571 us, 0.04%)</title><rect x="1012.8" y="119" width="0.5" height="15.0" fill="rgb(120.624804838963,148.310134587879,148.310134587879)" rx="2" ry="2" />
<text  x="1015.85" y="129.5" ></text>
</g>
<g >
<title>Log_Event_form1_cell_integral_otherwise (2,116 us, 0.05%)</title><rect x="1154.7" y="151" width="0.7" height="15.0" fill="rgb(132.930936767614,162.081010293644,132.930936767614)" rx="2" ry="2" />
<text  x="1157.73" y="161.5" ></text>
</g>
<g >
<title>firedrake.parloops.par_loop (74,573 us, 1.88%)</title><rect x="1023.2" y="167" width="22.2" height="15.0" fill="rgb(153.180766531327,121.052543406841,121.052543406841)" rx="2" ry="2" />
<text  x="1026.17" y="177.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (8,500 us, 0.21%)</title><rect x="49.9" y="119" width="2.5" height="15.0" fill="rgb(152.627353816723,116.809712594876,116.809712594876)" rx="2" ry="2" />
<text  x="52.87" y="129.5" ></text>
</g>
<g >
<title>PCApply (199,836 us, 5.05%)</title><rect x="1022.9" y="119" width="59.6" height="15.0" fill="rgb(148.465978040684,148.465978040684,111.796662812547)" rx="2" ry="2" />
<text  x="1025.92" y="129.5" >PCApply</text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (5,507 us, 0.14%)</title><rect x="1188.4" y="135" width="1.6" height="15.0" fill="rgb(125.500515043311,163.290613830159,125.500515043311)" rx="2" ry="2" />
<text  x="1191.36" y="145.5" ></text>
</g>
<g >
<title>firedrake.mesh.ExtrudedMeshTopology.__init__ (924 us, 0.02%)</title><rect x="52.4" y="87" width="0.3" height="15.0" fill="rgb(118.783452073013,147.832746833744,147.832746833744)" rx="2" ry="2" />
<text  x="55.41" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspace.make_scalar_element (1,538 us, 0.04%)</title><rect x="1097.6" y="199" width="0.4" height="15.0" fill="rgb(111.63949213456,111.63949213456,149.026998477657)" rx="2" ry="2" />
<text  x="1100.56" y="209.5" ></text>
</g>
<g >
<title>HybridInit (152,960 us, 3.86%)</title><rect x="1082.5" y="119" width="45.6" height="15.0" fill="rgb(131.151487787572,162.370688034581,131.151487787572)" rx="2" ry="2" />
<text  x="1085.50" y="129.5" >Hyb..</text>
</g>
<g >
<title>HybridRHS (124,410 us, 3.14%)</title><rect x="1045.4" y="151" width="37.1" height="15.0" fill="rgb(152.677880340945,117.197082613914,117.197082613914)" rx="2" ry="2" />
<text  x="1048.41" y="161.5" >Hy..</text>
</g>
<g >
<title>Mesh: numbering (6,399 us, 0.16%)</title><rect x="67.6" y="87" width="1.9" height="15.0" fill="rgb(146.952227437801,146.952227437801,155.861721439574)" rx="2" ry="2" />
<text  x="70.62" y="97.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (1,338 us, 0.03%)</title><rect x="1189.6" y="183" width="0.4" height="15.0" fill="rgb(150.812107138664,159.170122093706,150.812107138664)" rx="2" ry="2" />
<text  x="1192.60" y="193.5" ></text>
</g>
<g >
<title>firedrake.functionspace.make_scalar_element (812 us, 0.02%)</title><rect x="53.2" y="87" width="0.3" height="15.0" fill="rgb(144.608331369319,144.608331369319,155.408064135997)" rx="2" ry="2" />
<text  x="56.22" y="97.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (9,495 us, 0.24%)</title><rect x="1016.9" y="103" width="2.8" height="15.0" fill="rgb(154.368410621138,130.157814762057,130.157814762057)" rx="2" ry="2" />
<text  x="1019.89" y="113.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (38,463 us, 0.97%)</title><rect x="53.8" y="103" width="11.4" height="15.0" fill="rgb(154.582261243226,131.797336198064,131.797336198064)" rx="2" ry="2" />
<text  x="56.76" y="113.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (3,479 us, 0.09%)</title><rect x="1098.0" y="199" width="1.1" height="15.0" fill="rgb(127.491735779522,162.966461617287,127.491735779522)" rx="2" ry="2" />
<text  x="1101.01" y="209.5" ></text>
</g>
<g >
<title>SNESFunctionEval (207,599 us, 5.25%)</title><rect x="1128.1" y="103" width="61.9" height="15.0" fill="rgb(140.284974322205,160.883841389409,140.284974322205)" rx="2" ry="2" />
<text  x="1131.10" y="113.5" >SNESFu..</text>
</g>
<g >
<title>CreateFunctionSpace (1,468 us, 0.04%)</title><rect x="1081.7" y="183" width="0.4" height="15.0" fill="rgb(107.016043018533,144.781937078879,144.781937078879)" rx="2" ry="2" />
<text  x="1084.68" y="193.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (38,463 us, 0.97%)</title><rect x="53.8" y="119" width="11.4" height="15.0" fill="rgb(106.831929544198,144.734203955903,144.734203955903)" rx="2" ry="2" />
<text  x="56.76" y="129.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.WithGeometry.split (820 us, 0.02%)</title><rect x="1099.1" y="183" width="0.2" height="15.0" fill="rgb(132.90019718699,162.08601441142,132.90019718699)" rx="2" ry="2" />
<text  x="1102.05" y="193.5" ></text>
</g>
<g >
<title>CreateExtMesh (144,099 us, 3.64%)</title><rect x="10.0" y="71" width="43.0" height="15.0" fill="rgb(134.803884678085,134.803884678085,153.510429292533)" rx="2" ry="2" />
<text  x="13.00" y="81.5" >Cre..</text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (2,458 us, 0.06%)</title><rect x="1092.0" y="215" width="0.7" height="15.0" fill="rgb(137.865195148609,137.865195148609,154.102940996505)" rx="2" ry="2" />
<text  x="1095.01" y="225.5" ></text>
</g>
<g >
<title>DMPlexStratify (779 us, 0.02%)</title><rect x="1015.3" y="135" width="0.2" height="15.0" fill="rgb(153.496025147333,123.469526129554,123.469526129554)" rx="2" ry="2" />
<text  x="1018.25" y="145.5" ></text>
</g>
<g >
<title>CreateMesh (18,284 us, 0.46%)</title><rect x="65.2" y="71" width="5.5" height="15.0" fill="rgb(115.445006583226,146.967223928984,146.967223928984)" rx="2" ry="2" />
<text  x="68.23" y="81.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.derivative (993 us, 0.03%)</title><rect x="1019.7" y="103" width="0.3" height="15.0" fill="rgb(150.80346571454,150.80346571454,123.124487693539)" rx="2" ry="2" />
<text  x="1022.73" y="113.5" ></text>
</g>
<g >
<title>PCSetUp (152,960 us, 3.86%)</title><rect x="1082.5" y="103" width="45.6" height="15.0" fill="rgb(115.446241021791,115.446241021791,149.763788584863)" rx="2" ry="2" />
<text  x="1085.50" y="113.5" >PCS..</text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (2,388 us, 0.06%)</title><rect x="1127.4" y="135" width="0.7" height="15.0" fill="rgb(137.954797101803,161.263172564823,137.954797101803)" rx="2" ry="2" />
<text  x="1130.39" y="145.5" ></text>
</g>
<g >
<title>DMPlexStratify (3,688 us, 0.09%)</title><rect x="77.0" y="87" width="1.1" height="15.0" fill="rgb(116.813537188747,147.322028160045,147.322028160045)" rx="2" ry="2" />
<text  x="80.03" y="97.5" ></text>
</g>
<g >
<title>ParLoopExecute (100,714 us, 2.54%)</title><rect x="19.8" y="103" width="30.1" height="15.0" fill="rgb(129.427263845922,129.427263845922,152.469793002436)" rx="2" ry="2" />
<text  x="22.85" y="113.5" >P..</text>
</g>
<g >
<title>Log_Event_form0_cell_integral_otherwise (4,099 us, 0.10%)</title><rect x="1130.3" y="151" width="1.3" height="15.0" fill="rgb(133.870869843619,133.870869843619,153.329845776184)" rx="2" ry="2" />
<text  x="1133.33" y="161.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (67,162 us, 1.70%)</title><rect x="1025.4" y="215" width="20.0" height="15.0" fill="rgb(127.113737458006,127.113737458006,152.02201370155)" rx="2" ry="2" />
<text  x="1028.38" y="225.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (716 us, 0.02%)</title><rect x="1189.8" y="199" width="0.2" height="15.0" fill="rgb(136.655138041319,103.30379123088,136.655138041319)" rx="2" ry="2" />
<text  x="1192.79" y="209.5" ></text>
</g>
<g >
<title>firedrake.slate.slac.optimise.optimise (16,637 us, 0.42%)</title><rect x="1077.5" y="167" width="5.0" height="15.0" fill="rgb(147.852833892145,147.852833892145,108.825271938856)" rx="2" ry="2" />
<text  x="1080.54" y="177.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (13,688 us, 0.35%)</title><rect x="1095.2" y="151" width="4.1" height="15.0" fill="rgb(106.905635302874,144.753312856301,144.753312856301)" rx="2" ry="2" />
<text  x="1098.22" y="161.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (6,938 us, 0.18%)</title><rect x="1097.0" y="183" width="2.1" height="15.0" fill="rgb(154.031532669514,154.031532669514,138.768196783027)" rx="2" ry="2" />
<text  x="1099.98" y="193.5" ></text>
</g>
<g >
<title>firedrake.functionspace.VectorFunctionSpace (8,500 us, 0.21%)</title><rect x="49.9" y="87" width="2.5" height="15.0" fill="rgb(126.53499907544,126.53499907544,151.909999821053)" rx="2" ry="2" />
<text  x="52.87" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (2,435 us, 0.06%)</title><rect x="1098.3" y="231" width="0.8" height="15.0" fill="rgb(138.263720551375,138.263720551375,154.180074945427)" rx="2" ry="2" />
<text  x="1101.33" y="241.5" ></text>
</g>
<g >
<title>FunctionSpaceData: CreateElement (6,537 us, 0.17%)</title><rect x="57.8" y="135" width="2.0" height="15.0" fill="rgb(132.263618947924,151.327604912425,151.327604912425)" rx="2" ry="2" />
<text  x="60.84" y="145.5" ></text>
</g>
<g >
<title>firedrake.parloops.par_loop (75,027 us, 1.90%)</title><rect x="1105.0" y="135" width="22.4" height="15.0" fill="rgb(151.635541282643,151.635541282643,127.156853908194)" rx="2" ry="2" />
<text  x="1108.02" y="145.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (100,053 us, 2.53%)</title><rect x="20.0" y="135" width="29.9" height="15.0" fill="rgb(148.559164093241,148.559164093241,112.248256759552)" rx="2" ry="2" />
<text  x="23.04" y="145.5" >p..</text>
</g>
</g>
</svg>
