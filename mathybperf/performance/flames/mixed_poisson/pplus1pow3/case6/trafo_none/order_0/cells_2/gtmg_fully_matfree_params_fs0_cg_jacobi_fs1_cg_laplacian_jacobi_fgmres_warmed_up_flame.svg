<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="283" onload="init(evt)" viewBox="0 0 1200 283" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:13px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:18px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 13 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (1 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="283.0" fill="url(#background)"  />
<text id="title" x="600.00" y="26" >Firedrake example</text>
<text id="details" x="10.00" y="265" > </text>
<text id="unzoom" x="10.00" y="26" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="26" >Search</text>
<text id="ignorecase" x="1174.00" y="26" >ic</text>
<text id="matched" x="1090.00" y="265" > </text>
<g id="frames">
<g >
<title>firedrake.functionspace.make_scalar_element (799 us, 0.02%)</title><rect x="1104.9" y="151" width="0.2" height="15.0" fill="rgb(151.696050170242,151.696050170242,127.450089286555)" rx="2" ry="2" />
<text  x="1107.92" y="161.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.LinearVariationalProblem.__init__ (17,135 us, 0.41%)</title><rect x="779.6" y="71" width="4.8" height="15.0" fill="rgb(132.521017242385,92.7101066836127,132.521017242385)" rx="2" ry="2" />
<text  x="782.57" y="81.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (5,084 us, 0.12%)</title><rect x="1105.1" y="151" width="1.5" height="15.0" fill="rgb(118.299179845813,147.707194774841,147.707194774841)" rx="2" ry="2" />
<text  x="1108.14" y="161.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (6,528 us, 0.16%)</title><rect x="44.3" y="103" width="1.9" height="15.0" fill="rgb(153.990516784218,127.260628679006,127.260628679006)" rx="2" ry="2" />
<text  x="47.30" y="113.5" ></text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (37,195 us, 0.89%)</title><rect x="1179.5" y="119" width="10.5" height="15.0" fill="rgb(140.338112639101,112.741413637697,140.338112639101)" rx="2" ry="2" />
<text  x="1182.47" y="129.5" ></text>
</g>
<g >
<title>CreateExtMesh (129,615 us, 3.11%)</title><rect x="10.0" y="71" width="36.7" height="15.0" fill="rgb(155.556700779327,155.556700779327,146.159396084432)" rx="2" ry="2" />
<text  x="13.00" y="81.5" >Cr..</text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (71,962 us, 1.73%)</title><rect x="788.5" y="199" width="20.4" height="15.0" fill="rgb(153.985414329566,153.985414329566,138.544700212512)" rx="2" ry="2" />
<text  x="791.48" y="209.5" ></text>
</g>
<g >
<title>ParLoopExecute (71,962 us, 1.73%)</title><rect x="788.5" y="183" width="20.4" height="15.0" fill="rgb(126.765989316936,163.084606390266,126.765989316936)" rx="2" ry="2" />
<text  x="791.48" y="193.5" ></text>
</g>
<g >
<title>firedrake.mesh.MeshTopology._facets (2,345 us, 0.06%)</title><rect x="51.7" y="135" width="0.7" height="15.0" fill="rgb(153.881163664918,153.881163664918,138.039485453064)" rx="2" ry="2" />
<text  x="54.73" y="145.5" ></text>
</g>
<g >
<title>firedrake.functionspace.make_scalar_element (728 us, 0.02%)</title><rect x="46.9" y="87" width="0.2" height="15.0" fill="rgb(144.541542501001,144.541542501001,155.395137258258)" rx="2" ry="2" />
<text  x="49.88" y="97.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.action (4,882 us, 0.12%)</title><rect x="779.6" y="87" width="1.4" height="15.0" fill="rgb(114.996574351369,146.850963720725,146.850963720725)" rx="2" ry="2" />
<text  x="782.57" y="97.5" ></text>
</g>
<g >
<title>PetscBarrier (720 us, 0.02%)</title><rect x="52.9" y="71" width="0.2" height="15.0" fill="rgb(153.568937215326,153.568937215326,136.526388043503)" rx="2" ry="2" />
<text  x="55.88" y="81.5" ></text>
</g>
<g >
<title>Log_Event_form0_cell_integral_otherwise (2,347 us, 0.06%)</title><rect x="1139.7" y="151" width="0.7" height="15.0" fill="rgb(147.622879771305,147.622879771305,155.991525117027)" rx="2" ry="2" />
<text  x="1142.71" y="161.5" ></text>
</g>
<g >
<title>KSPSolve (1,087,312 us, 26.08%)</title><rect x="786.8" y="103" width="307.8" height="15.0" fill="rgb(148.987241829582,148.987241829582,114.322787327975)" rx="2" ry="2" />
<text  x="789.84" y="113.5" >KSPSolve</text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (18,021 us, 0.43%)</title><rect x="47.3" y="119" width="5.1" height="15.0" fill="rgb(156.006861242075,142.719269522572,142.719269522572)" rx="2" ry="2" />
<text  x="50.30" y="129.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.action (4,168 us, 0.10%)</title><rect x="784.9" y="119" width="1.2" height="15.0" fill="rgb(130.613133943937,162.458327032382,130.613133943937)" rx="2" ry="2" />
<text  x="787.91" y="129.5" ></text>
</g>
<g >
<title>firedrake.functionspace.VectorFunctionSpace (6,528 us, 0.16%)</title><rect x="44.3" y="87" width="1.9" height="15.0" fill="rgb(111.580119739652,145.965216228799,145.965216228799)" rx="2" ry="2" />
<text  x="47.30" y="97.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (1,450 us, 0.03%)</title><rect x="1189.6" y="167" width="0.4" height="15.0" fill="rgb(107.936997051181,145.020702939195,145.020702939195)" rx="2" ry="2" />
<text  x="1192.59" y="177.5" ></text>
</g>
<g >
<title>Mesh: numbering (680 us, 0.02%)</title><rect x="52.7" y="87" width="0.2" height="15.0" fill="rgb(151.153489416744,151.153489416744,124.820756404223)" rx="2" ry="2" />
<text  x="55.69" y="97.5" ></text>
</g>
<g >
<title>firedrake.utility_meshes.SquareMesh (1,833 us, 0.04%)</title><rect x="779.1" y="71" width="0.5" height="15.0" fill="rgb(135.546867073329,135.546867073329,153.654232336773)" rx="2" ry="2" />
<text  x="782.05" y="81.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (1,509 us, 0.04%)</title><rect x="1104.5" y="183" width="0.4" height="15.0" fill="rgb(142.369322673873,117.9463893518,142.369322673873)" rx="2" ry="2" />
<text  x="1107.49" y="193.5" ></text>
</g>
<g >
<title>firedrake.extrusion_utils.make_extruded_coords (121,190 us, 2.91%)</title><rect x="10.0" y="87" width="34.3" height="15.0" fill="rgb(151.374326822626,151.374326822626,125.890968448112)" rx="2" ry="2" />
<text  x="13.00" y="97.5" >fi..</text>
</g>
<g >
<title>firedrake.functionspace.MixedFunctionSpace (1,230 us, 0.03%)</title><rect x="778.7" y="71" width="0.4" height="15.0" fill="rgb(154.253335784611,129.275574348683,129.275574348683)" rx="2" ry="2" />
<text  x="781.71" y="81.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (5,084 us, 0.12%)</title><rect x="1105.1" y="167" width="1.5" height="15.0" fill="rgb(151.082700413754,151.082700413754,124.477702005113)" rx="2" ry="2" />
<text  x="1108.14" y="177.5" ></text>
</g>
<g >
<title>firedrake.mesh.make_mesh_from_coordinates (1,059 us, 0.03%)</title><rect x="46.4" y="87" width="0.3" height="15.0" fill="rgb(143.939407100312,121.96973069455,143.939407100312)" rx="2" ry="2" />
<text  x="49.39" y="97.5" ></text>
</g>
<g >
<title>SCForwardElim (1,087,312 us, 26.08%)</title><rect x="786.8" y="135" width="307.8" height="15.0" fill="rgb(134.973519165763,152.030171635568,152.030171635568)" rx="2" ry="2" />
<text  x="789.84" y="145.5" >SCForwardElim</text>
</g>
<g >
<title>firedrake.utility_meshes.RectangleMesh (1,833 us, 0.04%)</title><rect x="779.1" y="87" width="0.5" height="15.0" fill="rgb(140.068619187339,112.050836667557,140.068619187339)" rx="2" ry="2" />
<text  x="782.05" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (18,775 us, 0.45%)</title><rect x="47.1" y="87" width="5.3" height="15.0" fill="rgb(150.486029999131,150.486029999131,121.586145380403)" rx="2" ry="2" />
<text  x="50.08" y="97.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_form0_cell_integral_otherwise (70,692 us, 1.70%)</title><rect x="1139.7" y="135" width="20.0" height="15.0" fill="rgb(119.840080978515,148.106687661096,148.106687661096)" rx="2" ry="2" />
<text  x="1142.71" y="145.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.__init__ (8,524 us, 0.20%)</title><rect x="784.4" y="71" width="2.4" height="15.0" fill="rgb(153.111690113103,153.111690113103,134.310498240421)" rx="2" ry="2" />
<text  x="787.42" y="81.5" ></text>
</g>
<g >
<title>HybridRHS (1,009,536 us, 24.22%)</title><rect x="808.9" y="151" width="285.7" height="15.0" fill="rgb(123.032035077504,123.032035077504,151.232006789194)" rx="2" ry="2" />
<text  x="811.85" y="161.5" >HybridRHS</text>
</g>
<g >
<title>HybridBreak (77,776 us, 1.87%)</title><rect x="786.8" y="151" width="22.1" height="15.0" fill="rgb(149.119259818739,149.119259818739,114.962566813891)" rx="2" ry="2" />
<text  x="789.84" y="161.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (68,345 us, 1.64%)</title><rect x="1140.4" y="151" width="19.3" height="15.0" fill="rgb(141.445700227325,160.694886009505,141.445700227325)" rx="2" ry="2" />
<text  x="1143.37" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (751 us, 0.02%)</title><rect x="1189.8" y="199" width="0.2" height="15.0" fill="rgb(156.0906266047,143.361470636036,143.361470636036)" rx="2" ry="2" />
<text  x="1192.79" y="209.5" ></text>
</g>
<g >
<title>firedrake.matrix_free.operators.ImplicitMatrixContext.__init__ (6,819 us, 0.16%)</title><rect x="784.9" y="103" width="1.9" height="15.0" fill="rgb(156.566942231289,147.013223773217,147.013223773217)" rx="2" ry="2" />
<text  x="787.91" y="113.5" ></text>
</g>
<g >
<title>SNESSolve (1,424,341 us, 34.17%)</title><rect x="786.8" y="87" width="403.2" height="15.0" fill="rgb(132.354543746152,132.354543746152,153.036363305707)" rx="2" ry="2" />
<text  x="789.84" y="97.5" >SNESSolve</text>
</g>
<g >
<title>CreateFunctionSpace (8,524 us, 0.20%)</title><rect x="1104.2" y="135" width="2.4" height="15.0" fill="rgb(137.100639135414,161.402221536095,137.100639135414)" rx="2" ry="2" />
<text  x="1107.17" y="145.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (6,528 us, 0.16%)</title><rect x="44.3" y="135" width="1.9" height="15.0" fill="rgb(154.452016828195,154.452016828195,140.805927705869)" rx="2" ry="2" />
<text  x="47.30" y="145.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (3,445 us, 0.08%)</title><rect x="1109.4" y="199" width="1.0" height="15.0" fill="rgb(106.483228275595,144.643799923302,144.643799923302)" rx="2" ry="2" />
<text  x="1112.38" y="209.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.WithGeometry.split (901 us, 0.02%)</title><rect x="1110.4" y="183" width="0.2" height="15.0" fill="rgb(145.421910967682,160.047595888982,145.421910967682)" rx="2" ry="2" />
<text  x="1113.35" y="193.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (9,725 us, 0.23%)</title><rect x="1107.9" y="167" width="2.7" height="15.0" fill="rgb(118.739407092275,118.739407092275,150.401175566247)" rx="2" ry="2" />
<text  x="1110.86" y="177.5" ></text>
</g>
<g >
<title>firedrake.function.Function.__init__ (1,148 us, 0.03%)</title><rect x="1110.6" y="135" width="0.3" height="15.0" fill="rgb(104.751501710615,144.194833776826,144.194833776826)" rx="2" ry="2" />
<text  x="1113.61" y="145.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (1,450 us, 0.03%)</title><rect x="1189.6" y="183" width="0.4" height="15.0" fill="rgb(156.011412317459,142.754161100515,142.754161100515)" rx="2" ry="2" />
<text  x="1192.59" y="193.5" ></text>
</g>
<g >
<title>firedrake.__init__ (2,563,567 us, 61.49%)</title><rect x="53.1" y="71" width="725.6" height="15.0" fill="rgb(148.690198978759,148.690198978759,112.883271973984)" rx="2" ry="2" />
<text  x="56.08" y="81.5" >firedrake.__init__</text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (70,588 us, 1.69%)</title><rect x="1117.9" y="167" width="20.0" height="15.0" fill="rgb(138.114185213733,152.844418388746,152.844418388746)" rx="2" ry="2" />
<text  x="1120.87" y="177.5" ></text>
</g>
<g >
<title>firedrake.functionspace.MixedFunctionSpace (2,641 us, 0.06%)</title><rect x="1104.2" y="151" width="0.7" height="15.0" fill="rgb(127.306061413039,127.306061413039,152.059237692846)" rx="2" ry="2" />
<text  x="1107.17" y="161.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (70,588 us, 1.69%)</title><rect x="1117.9" y="183" width="20.0" height="15.0" fill="rgb(132.041354085536,151.269980688843,151.269980688843)" rx="2" ry="2" />
<text  x="1120.87" y="193.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_form1_cell_integral_otherwise (69,789 us, 1.67%)</title><rect x="1159.7" y="135" width="19.8" height="15.0" fill="rgb(127.92011649527,162.8967252217,127.92011649527)" rx="2" ry="2" />
<text  x="1162.72" y="145.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.derivative (981 us, 0.02%)</title><rect x="784.1" y="103" width="0.3" height="15.0" fill="rgb(146.84898847512,155.108997012068,155.108997012068)" rx="2" ry="2" />
<text  x="787.15" y="113.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (69,092 us, 1.66%)</title><rect x="1159.9" y="151" width="19.6" height="15.0" fill="rgb(153.06131511901,120.13674924574,120.13674924574)" rx="2" ry="2" />
<text  x="1162.92" y="161.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (6,978 us, 0.17%)</title><rect x="1108.4" y="183" width="2.0" height="15.0" fill="rgb(155.803275459194,155.803275459194,147.354334917632)" rx="2" ry="2" />
<text  x="1111.38" y="193.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (20,169 us, 0.48%)</title><rect x="46.7" y="71" width="5.7" height="15.0" fill="rgb(155.907262264312,155.907262264312,147.858270973205)" rx="2" ry="2" />
<text  x="49.69" y="81.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalProblem.__init__ (12,253 us, 0.29%)</title><rect x="781.0" y="87" width="3.4" height="15.0" fill="rgb(150.348136143546,150.348136143546,120.917890541801)" rx="2" ry="2" />
<text  x="783.96" y="97.5" ></text>
</g>
<g >
<title>firedrake.parloops.par_loop (77,776 us, 1.87%)</title><rect x="786.8" y="167" width="22.1" height="15.0" fill="rgb(144.596454280517,144.596454280517,155.405765344616)" rx="2" ry="2" />
<text  x="789.84" y="177.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (6,033 us, 0.14%)</title><rect x="1188.3" y="135" width="1.7" height="15.0" fill="rgb(154.429847669606,130.628832133646,130.628832133646)" rx="2" ry="2" />
<text  x="1191.29" y="145.5" ></text>
</g>
<g >
<title>HybridInit (154,966 us, 3.72%)</title><rect x="1094.6" y="119" width="43.9" height="15.0" fill="rgb(156.065833480053,143.171390013742,143.171390013742)" rx="2" ry="2" />
<text  x="1097.60" y="129.5" >Hyb..</text>
</g>
<g >
<title>firedrake (4,168,836 us, 100.00%)</title><rect x="10.0" y="55" width="1180.0" height="15.0" fill="rgb(129.976335288298,162.561991929812,129.976335288298)" rx="2" ry="2" />
<text  x="13.00" y="65.5" >firedrake</text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (1,509 us, 0.04%)</title><rect x="1104.5" y="215" width="0.4" height="15.0" fill="rgb(124.117161138625,163.515810977433,124.117161138625)" rx="2" ry="2" />
<text  x="1107.49" y="225.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (2,651 us, 0.06%)</title><rect x="786.1" y="119" width="0.7" height="15.0" fill="rgb(152.03873688763,152.03873688763,129.110801840052)" rx="2" ry="2" />
<text  x="789.09" y="129.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (11,272 us, 0.27%)</title><rect x="781.0" y="103" width="3.1" height="15.0" fill="rgb(118.787198428902,147.833718111197,147.833718111197)" rx="2" ry="2" />
<text  x="783.96" y="113.5" ></text>
</g>
<g >
<title>firedrake.interpolation.make_interpolator (18,944 us, 0.45%)</title><rect x="1110.9" y="135" width="5.4" height="15.0" fill="rgb(152.853342701622,144.811690672906,152.853342701622)" rx="2" ry="2" />
<text  x="1113.93" y="145.5" ></text>
</g>
<g >
<title>SNESFunctionEval (182,063 us, 4.37%)</title><rect x="1138.5" y="103" width="51.5" height="15.0" fill="rgb(154.303092532842,129.657042751792,129.657042751792)" rx="2" ry="2" />
<text  x="1141.47" y="113.5" >SNES..</text>
</g>
<g >
<title>firedrake.mesh.ExtrudedMeshTopology.__init__ (838 us, 0.02%)</title><rect x="46.2" y="87" width="0.2" height="15.0" fill="rgb(137.130989546742,104.523160713526,137.130989546742)" rx="2" ry="2" />
<text  x="49.15" y="97.5" ></text>
</g>
<g >
<title>firedrake.parloops.par_loop (76,161 us, 1.83%)</title><rect x="1116.3" y="135" width="21.6" height="15.0" fill="rgb(140.784190433122,113.884487984875,140.784190433122)" rx="2" ry="2" />
<text  x="1119.29" y="145.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (2,170 us, 0.05%)</title><rect x="1137.9" y="135" width="0.6" height="15.0" fill="rgb(137.873921253654,161.276338400568,137.873921253654)" rx="2" ry="2" />
<text  x="1140.85" y="145.5" ></text>
</g>
<g >
<title>firedrake.functionspace.make_scalar_element (1,644 us, 0.04%)</title><rect x="1108.9" y="199" width="0.5" height="15.0" fill="rgb(153.855249807088,153.855249807088,137.913902911274)" rx="2" ry="2" />
<text  x="1111.91" y="209.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (2,508 us, 0.06%)</title><rect x="1109.6" y="215" width="0.8" height="15.0" fill="rgb(111.728552705734,146.003698849635,146.003698849635)" rx="2" ry="2" />
<text  x="1112.64" y="225.5" ></text>
</g>
<g >
<title>FunctionSpaceData: CreateElement (1,096 us, 0.03%)</title><rect x="45.8" y="167" width="0.4" height="15.0" fill="rgb(135.591290355563,161.647929477001,135.591290355563)" rx="2" ry="2" />
<text  x="48.84" y="177.5" ></text>
</g>
<g >
<title>CreateMesh (1,702 us, 0.04%)</title><rect x="52.4" y="71" width="0.5" height="15.0" fill="rgb(143.75656060628,143.75656060628,155.243205278635)" rx="2" ry="2" />
<text  x="55.40" y="81.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (71,962 us, 1.73%)</title><rect x="788.5" y="215" width="20.4" height="15.0" fill="rgb(149.362868506938,159.406044661661,149.362868506938)" rx="2" ry="2" />
<text  x="791.48" y="225.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (6,528 us, 0.16%)</title><rect x="44.3" y="151" width="1.9" height="15.0" fill="rgb(154.627294432514,154.627294432514,141.655349942181)" rx="2" ry="2" />
<text  x="47.30" y="161.5" ></text>
</g>
<g >
<title>FunctionSpaceData: CreateElement (6,441 us, 0.15%)</title><rect x="49.9" y="135" width="1.8" height="15.0" fill="rgb(143.99318134761,154.368602571603,154.368602571603)" rx="2" ry="2" />
<text  x="52.91" y="145.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (89,198 us, 2.14%)</title><rect x="19.1" y="135" width="25.2" height="15.0" fill="rgb(138.193140208285,152.864888202148,152.864888202148)" rx="2" ry="2" />
<text  x="22.06" y="145.5" >p..</text>
</g>
<g >
<title>firedrake.function.Function.split (981 us, 0.02%)</title><rect x="784.1" y="119" width="0.3" height="15.0" fill="rgb(155.864451342094,141.627460289384,141.627460289384)" rx="2" ry="2" />
<text  x="787.15" y="129.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (18,021 us, 0.43%)</title><rect x="47.3" y="103" width="5.1" height="15.0" fill="rgb(155.979780502849,142.511650521845,142.511650521845)" rx="2" ry="2" />
<text  x="50.30" y="113.5" ></text>
</g>
<g >
<title>PCSetUp (154,966 us, 3.72%)</title><rect x="1094.6" y="103" width="43.9" height="15.0" fill="rgb(143.875346129839,143.875346129839,155.26619602513)" rx="2" ry="2" />
<text  x="1097.60" y="113.5" >PCS..</text>
</g>
<g >
<title>ParLoopExecute (89,198 us, 2.14%)</title><rect x="19.1" y="103" width="25.2" height="15.0" fill="rgb(130.738179203465,162.437970827343,130.738179203465)" rx="2" ry="2" />
<text  x="22.06" y="113.5" >P..</text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (5,084 us, 0.12%)</title><rect x="1105.1" y="183" width="1.5" height="15.0" fill="rgb(145.93029502724,127.071381007303,145.93029502724)" rx="2" ry="2" />
<text  x="1108.14" y="193.5" ></text>
</g>
<g >
<title>FunctionSpaceData: CreateElement (4,418 us, 0.11%)</title><rect x="1105.3" y="199" width="1.3" height="15.0" fill="rgb(139.142328483407,139.142328483407,154.350128093563)" rx="2" ry="2" />
<text  x="1108.33" y="209.5" ></text>
</g>
<g >
<title>firedrake.mesh._Facets.__init__ (740 us, 0.02%)</title><rect x="52.2" y="151" width="0.2" height="15.0" fill="rgb(150.258795206472,150.258795206472,120.48493061598)" rx="2" ry="2" />
<text  x="55.19" y="161.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_pyop2_kernel_uniform_extrusion (89,198 us, 2.14%)</title><rect x="19.1" y="119" width="25.2" height="15.0" fill="rgb(155.786545239497,141.030180169479,141.030180169479)" rx="2" ry="2" />
<text  x="22.06" y="129.5" >P..</text>
</g>
<g >
<title>firedrake.assemble.allocate_matrix (6,819 us, 0.16%)</title><rect x="784.9" y="87" width="1.9" height="15.0" fill="rgb(114.893676882403,114.893676882403,149.656840686917)" rx="2" ry="2" />
<text  x="787.91" y="97.5" ></text>
</g>
<g >
<title>ParLoopExecute (70,588 us, 1.69%)</title><rect x="1117.9" y="151" width="20.0" height="15.0" fill="rgb(115.114693835105,146.881587290583,146.881587290583)" rx="2" ry="2" />
<text  x="1120.87" y="161.5" ></text>
</g>
<g >
<title>PCApply (1,087,312 us, 26.08%)</title><rect x="786.8" y="119" width="307.8" height="15.0" fill="rgb(118.462705249409,147.749590249847,147.749590249847)" rx="2" ry="2" />
<text  x="789.84" y="129.5" >PCApply</text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (14,220 us, 0.34%)</title><rect x="1106.6" y="135" width="4.0" height="15.0" fill="rgb(156.345931554812,145.318808586893,145.318808586893)" rx="2" ry="2" />
<text  x="1109.58" y="145.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.solve (1,424,341 us, 34.17%)</title><rect x="786.8" y="71" width="403.2" height="15.0" fill="rgb(148.972703682355,148.972703682355,114.252333229874)" rx="2" ry="2" />
<text  x="789.84" y="81.5" >firedrake.variational_solver.NonlinearVariationalS..</text>
</g>
<g >
<title>ParLoopExecute (141,246 us, 3.39%)</title><rect x="1139.5" y="119" width="40.0" height="15.0" fill="rgb(139.044907014065,139.044907014065,154.331272325303)" rx="2" ry="2" />
<text  x="1142.49" y="129.5" >Par..</text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (6,528 us, 0.16%)</title><rect x="44.3" y="119" width="1.9" height="15.0" fill="rgb(124.657906167962,124.657906167962,151.54669151638)" rx="2" ry="2" />
<text  x="47.30" y="129.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (1,509 us, 0.04%)</title><rect x="1104.5" y="167" width="0.4" height="15.0" fill="rgb(152.445423358996,115.414912418972,115.414912418972)" rx="2" ry="2" />
<text  x="1107.49" y="177.5" ></text>
</g>
<g >
<title>all (4,168,836 us, 100%)</title><rect x="10.0" y="39" width="1180.0" height="15.0" fill="rgb(153.349284425753,153.349284425753,135.461916832495)" rx="2" ry="2" />
<text  x="13.00" y="49.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (3,619 us, 0.09%)</title><rect x="1189.0" y="151" width="1.0" height="15.0" fill="rgb(154.799080043621,154.799080043621,142.487849442162)" rx="2" ry="2" />
<text  x="1191.98" y="161.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (13,557 us, 0.33%)</title><rect x="1106.8" y="151" width="3.8" height="15.0" fill="rgb(123.908450943631,149.161450244645,149.161450244645)" rx="2" ry="2" />
<text  x="1109.77" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (2,508 us, 0.06%)</title><rect x="1109.6" y="231" width="0.8" height="15.0" fill="rgb(133.711538325297,133.711538325297,153.299007417799)" rx="2" ry="2" />
<text  x="1112.64" y="241.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (1,509 us, 0.04%)</title><rect x="1104.5" y="199" width="0.4" height="15.0" fill="rgb(113.679870898293,146.509596158817,146.509596158817)" rx="2" ry="2" />
<text  x="1107.49" y="209.5" ></text>
</g>
</g>
</svg>
