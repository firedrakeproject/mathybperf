<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="283" onload="init(evt)" viewBox="0 0 1200 283" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:13px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:18px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 13 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (1 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="283.0" fill="url(#background)"  />
<text id="title" x="600.00" y="26" >Firedrake example</text>
<text id="details" x="10.00" y="265" > </text>
<text id="unzoom" x="10.00" y="26" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="26" >Search</text>
<text id="ignorecase" x="1174.00" y="26" >ic</text>
<text id="matched" x="1090.00" y="265" > </text>
<g id="frames">
<g >
<title>firedrake.utility_meshes.RectangleMesh (1,978 us, 0.06%)</title><rect x="991.1" y="87" width="0.7" height="15.0" fill="rgb(121.067634189353,148.42494219724,148.42494219724)" rx="2" ry="2" />
<text  x="994.14" y="97.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (6,209 us, 0.18%)</title><rect x="55.4" y="103" width="2.1" height="15.0" fill="rgb(133.128592590294,151.551857338224,151.551857338224)" rx="2" ry="2" />
<text  x="58.44" y="113.5" ></text>
</g>
<g >
<title>firedrake.function.Function.__init__ (1,425 us, 0.04%)</title><rect x="1093.9" y="135" width="0.5" height="15.0" fill="rgb(146.296411813561,154.965736396108,154.965736396108)" rx="2" ry="2" />
<text  x="1096.87" y="145.5" ></text>
</g>
<g >
<title>firedrake.mesh.make_mesh_from_coordinates (1,043 us, 0.03%)</title><rect x="57.9" y="87" width="0.3" height="15.0" fill="rgb(155.253065025019,155.253065025019,144.687930505861)" rx="2" ry="2" />
<text  x="60.85" y="97.5" ></text>
</g>
<g >
<title>firedrake.interpolation.make_interpolator (20,118 us, 0.58%)</title><rect x="1094.4" y="135" width="6.8" height="15.0" fill="rgb(154.174521775244,128.671333610202,128.671333610202)" rx="2" ry="2" />
<text  x="1097.35" y="145.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (9,689 us, 0.28%)</title><rect x="1090.6" y="167" width="3.3" height="15.0" fill="rgb(117.109038948923,147.398639727498,147.398639727498)" rx="2" ry="2" />
<text  x="1093.59" y="177.5" ></text>
</g>
<g >
<title>firedrake.functionspace.MixedFunctionSpace (2,739 us, 0.08%)</title><rect x="1086.4" y="151" width="0.9" height="15.0" fill="rgb(137.56524339432,105.635936197945,137.56524339432)" rx="2" ry="2" />
<text  x="1089.36" y="161.5" ></text>
</g>
<g >
<title>HybridBreak (106,583 us, 3.06%)</title><rect x="999.9" y="151" width="36.2" height="15.0" fill="rgb(122.207946780129,148.720578794848,148.720578794848)" rx="2" ry="2" />
<text  x="1002.95" y="161.5" >Hy..</text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (6,209 us, 0.18%)</title><rect x="55.4" y="151" width="2.1" height="15.0" fill="rgb(144.200740004181,160.24639116211,144.200740004181)" rx="2" ry="2" />
<text  x="58.44" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspace.make_scalar_element (710 us, 0.02%)</title><rect x="1087.3" y="151" width="0.2" height="15.0" fill="rgb(140.993972836595,160.768423026601,140.993972836595)" rx="2" ry="2" />
<text  x="1090.29" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (2,558 us, 0.07%)</title><rect x="1092.8" y="215" width="0.8" height="15.0" fill="rgb(109.821439556955,145.509262107359,145.509262107359)" rx="2" ry="2" />
<text  x="1095.75" y="225.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (2,791 us, 0.08%)</title><rect x="999.0" y="119" width="0.9" height="15.0" fill="rgb(134.690124746182,98.2684446620902,134.690124746182)" rx="2" ry="2" />
<text  x="1002.00" y="129.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.action (3,806 us, 0.11%)</title><rect x="997.7" y="119" width="1.3" height="15.0" fill="rgb(114.332303716244,146.678745407915,146.678745407915)" rx="2" ry="2" />
<text  x="1000.71" y="129.5" ></text>
</g>
<g >
<title>HybridRHS (116,405 us, 3.34%)</title><rect x="1036.1" y="151" width="39.4" height="15.0" fill="rgb(144.137228614974,122.47664832587,144.137228614974)" rx="2" ry="2" />
<text  x="1039.07" y="161.5" >Hyb..</text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (3,173 us, 0.09%)</title><rect x="1188.9" y="151" width="1.1" height="15.0" fill="rgb(151.529843578729,151.529843578729,126.644626573839)" rx="2" ry="2" />
<text  x="1191.92" y="161.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (21,693 us, 0.62%)</title><rect x="58.2" y="71" width="7.4" height="15.0" fill="rgb(152.003249840497,112.024915443811,112.024915443811)" rx="2" ry="2" />
<text  x="61.21" y="81.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (6,209 us, 0.18%)</title><rect x="55.4" y="119" width="2.1" height="15.0" fill="rgb(147.126838712351,147.126838712351,155.895517170132)" rx="2" ry="2" />
<text  x="58.44" y="129.5" ></text>
</g>
<g >
<title>CreateMesh (2,337 us, 0.07%)</title><rect x="65.6" y="71" width="0.8" height="15.0" fill="rgb(105.364195677282,144.353680360777,144.353680360777)" rx="2" ry="2" />
<text  x="68.56" y="81.5" ></text>
</g>
<g >
<title>firedrake.mesh.ExtrudedMeshTopology.__init__ (912 us, 0.03%)</title><rect x="57.5" y="87" width="0.4" height="15.0" fill="rgb(124.751129555965,163.412606816471,124.751129555965)" rx="2" ry="2" />
<text  x="60.54" y="97.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.solve (560,709 us, 16.11%)</title><rect x="999.9" y="71" width="190.1" height="15.0" fill="rgb(149.601639992361,149.601639992361,117.300255347596)" rx="2" ry="2" />
<text  x="1002.95" y="81.5" >firedrake.variational_..</text>
</g>
<g >
<title>PCSetUp (155,221 us, 4.46%)</title><rect x="1075.5" y="103" width="52.6" height="15.0" fill="rgb(138.55443811622,138.55443811622,154.236342861204)" rx="2" ry="2" />
<text  x="1078.53" y="113.5" >PCSe..</text>
</g>
<g >
<title>FunctionSpaceData: CreateElement (6,699 us, 0.19%)</title><rect x="62.3" y="135" width="2.2" height="15.0" fill="rgb(125.766357748805,163.24733711066,125.766357748805)" rx="2" ry="2" />
<text  x="65.26" y="145.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (7,648 us, 0.22%)</title><rect x="1086.4" y="135" width="2.6" height="15.0" fill="rgb(113.433721729249,146.445779707583,146.445779707583)" rx="2" ry="2" />
<text  x="1089.36" y="145.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (1,610 us, 0.05%)</title><rect x="1086.7" y="215" width="0.6" height="15.0" fill="rgb(124.219939346132,124.219939346132,151.461923744413)" rx="2" ry="2" />
<text  x="1089.75" y="225.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (74,162 us, 2.13%)</title><rect x="1103.0" y="183" width="25.1" height="15.0" fill="rgb(147.765159351974,147.765159351974,108.400387628798)" rx="2" ry="2" />
<text  x="1106.00" y="193.5" >p..</text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (4,199 us, 0.12%)</title><rect x="1087.5" y="167" width="1.5" height="15.0" fill="rgb(154.285415701989,154.285415701989,139.99855301733)" rx="2" ry="2" />
<text  x="1090.53" y="177.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (9,992 us, 0.29%)</title><rect x="993.4" y="103" width="3.4" height="15.0" fill="rgb(155.483003279489,138.703025142746,138.703025142746)" rx="2" ry="2" />
<text  x="996.44" y="113.5" ></text>
</g>
<g >
<title>KSPSolve (222,988 us, 6.41%)</title><rect x="999.9" y="103" width="75.6" height="15.0" fill="rgb(131.005845381815,151.001515469359,151.001515469359)" rx="2" ry="2" />
<text  x="1002.95" y="113.5" >KSPSolve</text>
</g>
<g >
<title>SCForwardElim (222,988 us, 6.41%)</title><rect x="999.9" y="135" width="75.6" height="15.0" fill="rgb(152.852078945886,152.852078945886,133.052382583911)" rx="2" ry="2" />
<text  x="1002.95" y="145.5" >SCForwa..</text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (13,043 us, 0.37%)</title><rect x="1089.4" y="151" width="4.5" height="15.0" fill="rgb(137.905919380028,152.79042354297,152.79042354297)" rx="2" ry="2" />
<text  x="1092.45" y="161.5" ></text>
</g>
<g >
<title>all (3,481,303 us, 100%)</title><rect x="10.0" y="39" width="1180.0" height="15.0" fill="rgb(138.191452068364,107.240595925182,138.191452068364)" rx="2" ry="2" />
<text  x="13.00" y="49.5" ></text>
</g>
<g >
<title>firedrake.mesh._from_cell_list (621 us, 0.02%)</title><rect x="991.6" y="103" width="0.2" height="15.0" fill="rgb(152.913866878205,152.913866878205,133.351816409762)" rx="2" ry="2" />
<text  x="994.60" y="113.5" ></text>
</g>
<g >
<title>firedrake.function.Function.__init__ (2,017 us, 0.06%)</title><rect x="1074.8" y="183" width="0.7" height="15.0" fill="rgb(148.572024300703,148.572024300703,112.310579303406)" rx="2" ry="2" />
<text  x="1077.84" y="193.5" ></text>
</g>
<g >
<title>CreateExtMesh (142,221 us, 4.09%)</title><rect x="10.0" y="71" width="48.2" height="15.0" fill="rgb(150.019913184772,150.019913184772,119.327271587741)" rx="2" ry="2" />
<text  x="13.00" y="81.5" >Crea..</text>
</g>
<g >
<title>firedrake.extrusion_utils.make_extruded_coords (133,457 us, 3.83%)</title><rect x="10.2" y="87" width="45.2" height="15.0" fill="rgb(140.914788880356,160.781313438082,140.914788880356)" rx="2" ry="2" />
<text  x="13.20" y="97.5" >fir..</text>
</g>
<g >
<title>firedrake.matrix_free.operators.ImplicitMatrixContext.__init__ (6,597 us, 0.19%)</title><rect x="997.7" y="103" width="2.2" height="15.0" fill="rgb(144.755647891186,160.15605732004,144.755647891186)" rx="2" ry="2" />
<text  x="1000.71" y="113.5" ></text>
</g>
<g >
<title>ParLoopExecute (100,678 us, 2.89%)</title><rect x="1001.9" y="183" width="34.2" height="15.0" fill="rgb(148.171114820855,148.171114820855,110.367710285682)" rx="2" ry="2" />
<text  x="1004.95" y="193.5" >Pa..</text>
</g>
<g >
<title>firedrake.assemble.allocate_matrix (6,597 us, 0.19%)</title><rect x="997.7" y="87" width="2.2" height="15.0" fill="rgb(139.208916750651,153.128237676095,153.128237676095)" rx="2" ry="2" />
<text  x="1000.71" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (1,610 us, 0.05%)</title><rect x="1086.7" y="183" width="0.6" height="15.0" fill="rgb(129.456607871173,150.599861299934,150.599861299934)" rx="2" ry="2" />
<text  x="1089.75" y="193.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (74,162 us, 2.13%)</title><rect x="1103.0" y="167" width="25.1" height="15.0" fill="rgb(133.208377675831,151.572542360401,151.572542360401)" rx="2" ry="2" />
<text  x="1106.00" y="177.5" >P..</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (69,895 us, 2.01%)</title><rect x="1154.5" y="151" width="23.7" height="15.0" fill="rgb(135.959249110038,101.520575844473,135.959249110038)" rx="2" ry="2" />
<text  x="1157.46" y="161.5" >p..</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (100,678 us, 2.89%)</title><rect x="1001.9" y="215" width="34.2" height="15.0" fill="rgb(133.038910185831,162.063433225562,133.038910185831)" rx="2" ry="2" />
<text  x="1004.95" y="225.5" >py..</text>
</g>
<g >
<title>SNESFunctionEval (182,500 us, 5.24%)</title><rect x="1128.1" y="103" width="61.9" height="15.0" fill="rgb(152.954182234373,152.954182234373,133.547190828116)" rx="2" ry="2" />
<text  x="1131.14" y="113.5" >SNESFu..</text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (13,885 us, 0.40%)</title><rect x="1089.2" y="135" width="4.7" height="15.0" fill="rgb(149.031068348908,149.031068348908,114.535177383168)" rx="2" ry="2" />
<text  x="1092.16" y="145.5" ></text>
</g>
<g >
<title>ParLoopExecute (100,915 us, 2.90%)</title><rect x="21.2" y="103" width="34.2" height="15.0" fill="rgb(124.544713960729,124.544713960729,151.524783347238)" rx="2" ry="2" />
<text  x="24.23" y="113.5" >Pa..</text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (19,214 us, 0.55%)</title><rect x="59.0" y="119" width="6.6" height="15.0" fill="rgb(131.207919481174,151.053905050675,151.053905050675)" rx="2" ry="2" />
<text  x="62.05" y="129.5" ></text>
</g>
<g >
<title>firedrake.utility_meshes.SquareMesh (1,978 us, 0.06%)</title><rect x="991.1" y="71" width="0.7" height="15.0" fill="rgb(154.223318219844,129.045439685468,129.045439685468)" rx="2" ry="2" />
<text  x="994.14" y="81.5" ></text>
</g>
<g >
<title>firedrake.functionspace.VectorFunctionSpace (6,209 us, 0.18%)</title><rect x="55.4" y="87" width="2.1" height="15.0" fill="rgb(146.874058075172,159.811199848228,146.874058075172)" rx="2" ry="2" />
<text  x="58.44" y="97.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (70,231 us, 2.02%)</title><rect x="1130.4" y="151" width="23.8" height="15.0" fill="rgb(123.253643862074,123.253643862074,151.274898812014)" rx="2" ry="2" />
<text  x="1133.42" y="161.5" >p..</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (99,693 us, 2.86%)</title><rect x="21.6" y="135" width="33.8" height="15.0" fill="rgb(109.251132882464,145.36140482138,145.36140482138)" rx="2" ry="2" />
<text  x="24.65" y="145.5" >py..</text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (599 us, 0.02%)</title><rect x="1189.8" y="199" width="0.2" height="15.0" fill="rgb(156.453104213444,146.140465636403,146.140465636403)" rx="2" ry="2" />
<text  x="1192.80" y="209.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalProblem.__init__ (10,971 us, 0.32%)</title><rect x="993.4" y="87" width="3.8" height="15.0" fill="rgb(152.924373116848,119.086860562502,119.086860562502)" rx="2" ry="2" />
<text  x="996.44" y="97.5" ></text>
</g>
<g >
<title>HybridInit (155,221 us, 4.46%)</title><rect x="1075.5" y="119" width="52.6" height="15.0" fill="rgb(153.778782308836,153.778782308836,137.543329650512)" rx="2" ry="2" />
<text  x="1078.53" y="129.5" >Hybr..</text>
</g>
<g >
<title>firedrake.functionspace.make_scalar_element (1,658 us, 0.05%)</title><rect x="1091.9" y="199" width="0.5" height="15.0" fill="rgb(133.823948408895,161.935636305529,133.823948408895)" rx="2" ry="2" />
<text  x="1094.87" y="209.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.derivative (979 us, 0.03%)</title><rect x="996.8" y="103" width="0.4" height="15.0" fill="rgb(116.986488423707,116.986488423707,150.061900985234)" rx="2" ry="2" />
<text  x="999.82" y="113.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_form0_cell_integral_otherwise (72,567 us, 2.08%)</title><rect x="1129.6" y="135" width="24.6" height="15.0" fill="rgb(118.597861055074,147.784630643908,147.784630643908)" rx="2" ry="2" />
<text  x="1132.63" y="145.5" >P..</text>
</g>
<g >
<title>firedrake.function.Function.split (979 us, 0.03%)</title><rect x="996.8" y="119" width="0.4" height="15.0" fill="rgb(142.609817412096,154.009952662395,154.009952662395)" rx="2" ry="2" />
<text  x="999.82" y="129.5" ></text>
</g>
<g >
<title>firedrake.parloops.par_loop (79,564 us, 2.29%)</title><rect x="1101.2" y="135" width="26.9" height="15.0" fill="rgb(138.0498361409,161.247701093342,138.0498361409)" rx="2" ry="2" />
<text  x="1104.17" y="145.5" >f..</text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (19,214 us, 0.55%)</title><rect x="59.0" y="103" width="6.6" height="15.0" fill="rgb(155.141469232197,136.084597446844,136.084597446844)" rx="2" ry="2" />
<text  x="62.05" y="113.5" ></text>
</g>
<g >
<title>Mesh: numbering (1,214 us, 0.03%)</title><rect x="65.9" y="87" width="0.5" height="15.0" fill="rgb(116.556691879126,147.255438635329,147.255438635329)" rx="2" ry="2" />
<text  x="68.94" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (2,558 us, 0.07%)</title><rect x="1092.8" y="231" width="0.8" height="15.0" fill="rgb(140.190442251355,153.382707250351,153.382707250351)" rx="2" ry="2" />
<text  x="1095.75" y="241.5" ></text>
</g>
<g >
<title>firedrake.functionspace.make_scalar_element (801 us, 0.02%)</title><rect x="58.4" y="87" width="0.3" height="15.0" fill="rgb(127.582577854863,162.951673372464,127.582577854863)" rx="2" ry="2" />
<text  x="61.44" y="97.5" ></text>
</g>
<g >
<title>ParLoopExecute (74,162 us, 2.13%)</title><rect x="1103.0" y="151" width="25.1" height="15.0" fill="rgb(147.534688832992,147.534688832992,155.97445590316)" rx="2" ry="2" />
<text  x="1106.00" y="161.5" >P..</text>
</g>
<g >
<title>FunctionSpaceData: CreateElement (4,199 us, 0.12%)</title><rect x="1087.5" y="199" width="1.5" height="15.0" fill="rgb(122.14796294531,148.705027430265,148.705027430265)" rx="2" ry="2" />
<text  x="1090.53" y="209.5" ></text>
</g>
<g >
<title>firedrake.parloops.par_loop (106,583 us, 3.06%)</title><rect x="999.9" y="167" width="36.2" height="15.0" fill="rgb(107.662034443584,144.949416337225,144.949416337225)" rx="2" ry="2" />
<text  x="1002.95" y="177.5" >fi..</text>
</g>
<g >
<title>CreateFunctionSpace (1,610 us, 0.05%)</title><rect x="1086.7" y="167" width="0.6" height="15.0" fill="rgb(119.726351255315,148.077202177304,148.077202177304)" rx="2" ry="2" />
<text  x="1089.75" y="177.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (100,678 us, 2.89%)</title><rect x="1001.9" y="199" width="34.2" height="15.0" fill="rgb(134.153932069689,161.881918035167,134.153932069689)" rx="2" ry="2" />
<text  x="1004.95" y="209.5" >Pa..</text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (4,199 us, 0.12%)</title><rect x="1087.5" y="151" width="1.5" height="15.0" fill="rgb(116.577954087881,147.260951059821,147.260951059821)" rx="2" ry="2" />
<text  x="1090.53" y="161.5" ></text>
</g>
<g >
<title>SNESSolve (560,709 us, 16.11%)</title><rect x="999.9" y="87" width="190.1" height="15.0" fill="rgb(140.150658852904,153.372393035938,153.372393035938)" rx="2" ry="2" />
<text  x="1002.95" y="97.5" >SNESSolve</text>
</g>
<g >
<title>firedrake.mesh._Facets.__init__ (887 us, 0.03%)</title><rect x="65.3" y="151" width="0.3" height="15.0" fill="rgb(142.771649605661,160.479033785125,142.771649605661)" rx="2" ry="2" />
<text  x="68.26" y="161.5" ></text>
</g>
<g >
<title>CreateMesh (712 us, 0.02%)</title><rect x="991.4" y="103" width="0.2" height="15.0" fill="rgb(153.949889286749,153.949889286749,138.372540389631)" rx="2" ry="2" />
<text  x="994.36" y="113.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (1,610 us, 0.05%)</title><rect x="1086.7" y="199" width="0.6" height="15.0" fill="rgb(133.003414403308,93.9462494084778,133.003414403308)" rx="2" ry="2" />
<text  x="1089.75" y="209.5" ></text>
</g>
<g >
<title>firedrake.assemble.allocate_matrix (612 us, 0.02%)</title><rect x="1089.0" y="135" width="0.2" height="15.0" fill="rgb(143.116250654677,143.116250654677,155.11927432026)" rx="2" ry="2" />
<text  x="1091.96" y="145.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (6,965 us, 0.20%)</title><rect x="1091.3" y="183" width="2.3" height="15.0" fill="rgb(155.104580583045,155.104580583045,143.968352056297)" rx="2" ry="2" />
<text  x="1094.26" y="193.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_form1_cell_integral_otherwise (70,586 us, 2.03%)</title><rect x="1154.2" y="135" width="24.0" height="15.0" fill="rgb(120.018907271692,120.018907271692,150.648820762263)" rx="2" ry="2" />
<text  x="1157.23" y="145.5" >P..</text>
</g>
<g >
<title>firedrake.ufl_expr.action (4,799 us, 0.14%)</title><rect x="991.8" y="87" width="1.6" height="15.0" fill="rgb(153.674678114502,124.839198877846,124.839198877846)" rx="2" ry="2" />
<text  x="994.81" y="97.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (5,703 us, 0.16%)</title><rect x="1188.1" y="135" width="1.9" height="15.0" fill="rgb(156.24729635958,144.562605423443,144.562605423443)" rx="2" ry="2" />
<text  x="1191.07" y="145.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (4,199 us, 0.12%)</title><rect x="1087.5" y="183" width="1.5" height="15.0" fill="rgb(140.219196702469,153.390162108048,153.390162108048)" rx="2" ry="2" />
<text  x="1090.53" y="193.5" ></text>
</g>
<g >
<title>ParLoopExecute (143,908 us, 4.13%)</title><rect x="1129.4" y="119" width="48.8" height="15.0" fill="rgb(155.261011869707,137.00109100109,137.00109100109)" rx="2" ry="2" />
<text  x="1132.37" y="129.5" >ParL..</text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.__init__ (8,229 us, 0.24%)</title><rect x="997.2" y="71" width="2.7" height="15.0" fill="rgb(116.124007454558,147.143261191923,147.143261191923)" rx="2" ry="2" />
<text  x="1000.16" y="81.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (1,158 us, 0.03%)</title><rect x="1189.6" y="167" width="0.4" height="15.0" fill="rgb(138.934328493898,161.10371396611,138.934328493898)" rx="2" ry="2" />
<text  x="1192.61" y="177.5" ></text>
</g>
<g >
<title>PCApply (222,988 us, 6.41%)</title><rect x="999.9" y="119" width="75.6" height="15.0" fill="rgb(109.106156692732,145.323818401819,145.323818401819)" rx="2" ry="2" />
<text  x="1002.95" y="129.5" >PCApply</text>
</g>
<g >
<title>firedrake.mesh._Facets.__init__ (583 us, 0.02%)</title><rect x="57.3" y="167" width="0.2" height="15.0" fill="rgb(118.812319765712,147.84023105037,147.84023105037)" rx="2" ry="2" />
<text  x="60.35" y="177.5" ></text>
</g>
<g >
<title>firedrake.slate.slac.optimise.optimise (27,214 us, 0.78%)</title><rect x="1066.3" y="167" width="9.2" height="15.0" fill="rgb(152.151622466509,152.151622466509,129.657862722312)" rx="2" ry="2" />
<text  x="1069.30" y="177.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (6,209 us, 0.18%)</title><rect x="55.4" y="135" width="2.1" height="15.0" fill="rgb(111.202243328408,111.202243328408,148.942369676466)" rx="2" ry="2" />
<text  x="58.44" y="145.5" ></text>
</g>
<g >
<title>FunctionSpaceData: CreateElement (777 us, 0.02%)</title><rect x="57.1" y="167" width="0.2" height="15.0" fill="rgb(150.432467596106,150.432467596106,121.326573734973)" rx="2" ry="2" />
<text  x="60.08" y="177.5" ></text>
</g>
<g >
<title>Log_Event_form0_cell_integral_otherwise (2,336 us, 0.07%)</title><rect x="1129.6" y="151" width="0.8" height="15.0" fill="rgb(148.805624652672,148.805624652672,113.442642547563)" rx="2" ry="2" />
<text  x="1132.63" y="161.5" ></text>
</g>
<g >
<title>firedrake.mesh.MeshTopology._facets (3,045 us, 0.09%)</title><rect x="64.5" y="135" width="1.1" height="15.0" fill="rgb(134.640073221295,161.802778777929,134.640073221295)" rx="2" ry="2" />
<text  x="67.53" y="145.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (3,520 us, 0.10%)</title><rect x="1092.4" y="199" width="1.2" height="15.0" fill="rgb(145.630680568648,160.013610139988,145.630680568648)" rx="2" ry="2" />
<text  x="1095.43" y="209.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_pyop2_kernel_uniform_extrusion (100,242 us, 2.88%)</title><rect x="21.5" y="119" width="33.9" height="15.0" fill="rgb(149.626283094066,149.626283094066,117.419679609704)" rx="2" ry="2" />
<text  x="24.46" y="129.5" >Pa..</text>
</g>
<g >
<title>firedrake.functionspaceimpl.WithGeometry.split (735 us, 0.02%)</title><rect x="1093.6" y="183" width="0.3" height="15.0" fill="rgb(153.679874179549,153.679874179549,137.064005639352)" rx="2" ry="2" />
<text  x="1096.62" y="193.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (1,158 us, 0.03%)</title><rect x="1189.6" y="183" width="0.4" height="15.0" fill="rgb(151.779444990787,151.779444990787,127.854233416891)" rx="2" ry="2" />
<text  x="1192.61" y="193.5" ></text>
</g>
<g >
<title>firedrake (3,481,303 us, 100.00%)</title><rect x="10.0" y="55" width="1180.0" height="15.0" fill="rgb(152.4206893019,152.4206893019,130.961802001513)" rx="2" ry="2" />
<text  x="13.00" y="65.5" >firedrake</text>
</g>
<g >
<title>firedrake.functionspace.MixedFunctionSpace (1,122 us, 0.03%)</title><rect x="990.8" y="71" width="0.3" height="15.0" fill="rgb(152.295970762519,114.269109179314,114.269109179314)" rx="2" ry="2" />
<text  x="993.76" y="81.5" ></text>
</g>
<g >
<title>PetscBarrier (833 us, 0.02%)</title><rect x="66.4" y="71" width="0.2" height="15.0" fill="rgb(111.10933120749,111.10933120749,148.924386685321)" rx="2" ry="2" />
<text  x="69.35" y="81.5" ></text>
</g>
<g >
<title>firedrake.__init__ (2,726,411 us, 78.32%)</title><rect x="66.6" y="71" width="924.2" height="15.0" fill="rgb(141.495575286454,115.707411671538,141.495575286454)" rx="2" ry="2" />
<text  x="69.63" y="81.5" >firedrake.__init__</text>
</g>
<g >
<title>firedrake.variational_solver.LinearVariationalProblem.__init__ (15,770 us, 0.45%)</title><rect x="991.8" y="71" width="5.4" height="15.0" fill="rgb(153.396491754571,153.396491754571,135.690690810614)" rx="2" ry="2" />
<text  x="994.81" y="81.5" ></text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (34,956 us, 1.00%)</title><rect x="1178.2" y="119" width="11.8" height="15.0" fill="rgb(133.912959442663,161.921146137241,133.912959442663)" rx="2" ry="2" />
<text  x="1181.15" y="129.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (20,198 us, 0.58%)</title><rect x="58.7" y="87" width="6.9" height="15.0" fill="rgb(112.521141764157,112.521141764157,149.19764034145)" rx="2" ry="2" />
<text  x="61.71" y="97.5" ></text>
</g>
</g>
</svg>
