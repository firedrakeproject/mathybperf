<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="283" onload="init(evt)" viewBox="0 0 1200 283" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:13px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:18px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 13 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (1 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="283.0" fill="url(#background)"  />
<text id="title" x="600.00" y="26" >Firedrake example</text>
<text id="details" x="10.00" y="265" > </text>
<text id="unzoom" x="10.00" y="26" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="26" >Search</text>
<text id="ignorecase" x="1174.00" y="26" >ic</text>
<text id="matched" x="1090.00" y="265" > </text>
<g id="frames">
<g >
<title>firedrake (5,527,989 us, 100.00%)</title><rect x="10.0" y="55" width="1180.0" height="15.0" fill="rgb(156.558168945073,146.945961912223,146.945961912223)" rx="2" ry="2" />
<text  x="13.00" y="65.5" >firedrake</text>
</g>
<g >
<title>CreateExtMesh (146,837 us, 2.66%)</title><rect x="10.0" y="71" width="31.3" height="15.0" fill="rgb(154.55023027568,131.551765446878,131.551765446878)" rx="2" ry="2" />
<text  x="13.00" y="81.5" >Cr..</text>
</g>
<g >
<title>firedrake.functionspace.make_scalar_element (1,129 us, 0.02%)</title><rect x="41.5" y="87" width="0.3" height="15.0" fill="rgb(154.828280445079,133.683483412275,133.683483412275)" rx="2" ry="2" />
<text  x="44.55" y="97.5" ></text>
</g>
<g >
<title>DMPlexStratify (3,611 us, 0.07%)</title><rect x="58.8" y="87" width="0.7" height="15.0" fill="rgb(148.767332454566,134.341289414825,148.767332454566)" rx="2" ry="2" />
<text  x="61.76" y="97.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (67,735 us, 1.23%)</title><rect x="1167.0" y="151" width="14.5" height="15.0" fill="rgb(153.853478245737,126.209999883984,126.209999883984)" rx="2" ry="2" />
<text  x="1170.02" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (39,242 us, 0.71%)</title><rect x="42.1" y="119" width="8.3" height="15.0" fill="rgb(146.726297736078,155.077188301946,155.077188301946)" rx="2" ry="2" />
<text  x="45.07" y="129.5" ></text>
</g>
<g >
<title>KSPSolve (1,438,917 us, 26.03%)</title><rect x="809.6" y="103" width="307.2" height="15.0" fill="rgb(151.545272729792,151.545272729792,126.719398613606)" rx="2" ry="2" />
<text  x="812.64" y="113.5" >KSPSolve</text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (39,242 us, 0.71%)</title><rect x="42.1" y="103" width="8.3" height="15.0" fill="rgb(150.257791598455,150.257791598455,120.480066977127)" rx="2" ry="2" />
<text  x="45.07" y="113.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_form1_cell_integral_otherwise (71,638 us, 1.30%)</title><rect x="1166.2" y="135" width="15.3" height="15.0" fill="rgb(139.372595568298,161.0323681633,139.372595568298)" rx="2" ry="2" />
<text  x="1169.18" y="145.5" ></text>
</g>
<g >
<title>Mesh: reorder (3,685 us, 0.07%)</title><rect x="53.4" y="87" width="0.8" height="15.0" fill="rgb(129.8671150981,162.579771960774,129.8671150981)" rx="2" ry="2" />
<text  x="56.43" y="97.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (67,593 us, 1.22%)</title><rect x="1134.2" y="183" width="14.5" height="15.0" fill="rgb(147.605835220331,159.692073336225,147.605835220331)" rx="2" ry="2" />
<text  x="1137.24" y="193.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (5,459 us, 0.10%)</title><rect x="1124.5" y="151" width="1.2" height="15.0" fill="rgb(156.041103274938,142.981791774526,142.981791774526)" rx="2" ry="2" />
<text  x="1127.51" y="161.5" ></text>
</g>
<g >
<title>Log_Event_form0_cell_integral_otherwise (3,861 us, 0.07%)</title><rect x="1150.8" y="151" width="0.8" height="15.0" fill="rgb(130.563509033618,150.886835675383,150.886835675383)" rx="2" ry="2" />
<text  x="1153.79" y="161.5" ></text>
</g>
<g >
<title>PCApply (1,438,917 us, 26.03%)</title><rect x="809.6" y="119" width="307.2" height="15.0" fill="rgb(130.244611444229,150.804158522578,150.804158522578)" rx="2" ry="2" />
<text  x="812.64" y="129.5" >PCApply</text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (3,419 us, 0.06%)</title><rect x="1189.3" y="151" width="0.7" height="15.0" fill="rgb(114.92288240472,114.92288240472,149.662493368656)" rx="2" ry="2" />
<text  x="1192.27" y="161.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (2,593 us, 0.05%)</title><rect x="1123.6" y="167" width="0.6" height="15.0" fill="rgb(107.618094437352,144.938024483758,144.938024483758)" rx="2" ry="2" />
<text  x="1126.61" y="177.5" ></text>
</g>
<g >
<title>firedrake.extrusion_utils.make_extruded_coords (136,289 us, 2.47%)</title><rect x="10.0" y="87" width="29.1" height="15.0" fill="rgb(148.097001841986,148.097001841986,110.008547388085)" rx="2" ry="2" />
<text  x="13.00" y="97.5" >f..</text>
</g>
<g >
<title>CreateFunctionSpace (1,409 us, 0.03%)</title><rect x="1189.7" y="183" width="0.3" height="15.0" fill="rgb(155.33330525228,155.33330525228,145.07678699182)" rx="2" ry="2" />
<text  x="1192.70" y="193.5" ></text>
</g>
<g >
<title>DMPlexBuFrCeLi (788 us, 0.01%)</title><rect x="802.1" y="119" width="0.2" height="15.0" fill="rgb(128.492572495374,128.492572495374,152.288884999105)" rx="2" ry="2" />
<text  x="805.09" y="129.5" ></text>
</g>
<g >
<title>firedrake.functionspace.make_scalar_element (1,487 us, 0.03%)</title><rect x="1127.5" y="199" width="0.3" height="15.0" fill="rgb(127.964771532567,127.964771532567,152.186729974045)" rx="2" ry="2" />
<text  x="1130.47" y="209.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalProblem.__init__ (12,724 us, 0.23%)</title><rect x="804.4" y="87" width="2.7" height="15.0" fill="rgb(142.585697419974,142.585697419974,155.016586597414)" rx="2" ry="2" />
<text  x="807.39" y="97.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.action (4,523 us, 0.08%)</title><rect x="807.9" y="119" width="1.0" height="15.0" fill="rgb(128.700203440486,162.769734323642,128.700203440486)" rx="2" ry="2" />
<text  x="810.94" y="129.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (3,439 us, 0.06%)</title><rect x="808.9" y="119" width="0.7" height="15.0" fill="rgb(133.415739978509,133.415739978509,153.241756124873)" rx="2" ry="2" />
<text  x="811.90" y="129.5" ></text>
</g>
<g >
<title>Mesh: numbering (6,056 us, 0.11%)</title><rect x="52.1" y="87" width="1.3" height="15.0" fill="rgb(136.392055446745,161.517572369135,136.392055446745)" rx="2" ry="2" />
<text  x="55.14" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (2,593 us, 0.05%)</title><rect x="1123.6" y="199" width="0.6" height="15.0" fill="rgb(118.097314482157,147.654859310189,147.654859310189)" rx="2" ry="2" />
<text  x="1126.61" y="209.5" ></text>
</g>
<g >
<title>PCSetUp (151,661 us, 2.74%)</title><rect x="1116.8" y="103" width="32.4" height="15.0" fill="rgb(156.227405978237,144.410112499816,144.410112499816)" rx="2" ry="2" />
<text  x="1119.79" y="113.5" >PC..</text>
</g>
<g >
<title>HybridInit (151,661 us, 2.74%)</title><rect x="1116.8" y="119" width="32.4" height="15.0" fill="rgb(137.922489929051,137.922489929051,154.114030308848)" rx="2" ry="2" />
<text  x="1119.79" y="129.5" >Hy..</text>
</g>
<g >
<title>firedrake.functionspace.MixedFunctionSpace (3,928 us, 0.07%)</title><rect x="1123.3" y="151" width="0.9" height="15.0" fill="rgb(156.369291127832,145.497898646712,145.497898646712)" rx="2" ry="2" />
<text  x="1126.32" y="161.5" ></text>
</g>
<g >
<title>CreateMesh (1,489 us, 0.03%)</title><rect x="801.5" y="119" width="0.3" height="15.0" fill="rgb(155.554561316717,155.554561316717,146.149027919477)" rx="2" ry="2" />
<text  x="804.50" y="129.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (3,435 us, 0.06%)</title><rect x="1127.8" y="199" width="0.7" height="15.0" fill="rgb(113.05560394104,113.05560394104,149.30108463375)" rx="2" ry="2" />
<text  x="1130.79" y="209.5" ></text>
</g>
<g >
<title>CreateMesh (1,489 us, 0.03%)</title><rect x="801.5" y="103" width="0.3" height="15.0" fill="rgb(152.82901516945,118.355782965782,118.355782965782)" rx="2" ry="2" />
<text  x="804.50" y="113.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (8,703 us, 0.16%)</title><rect x="39.1" y="119" width="1.8" height="15.0" fill="rgb(154.834365887451,133.730138470457,133.730138470457)" rx="2" ry="2" />
<text  x="42.09" y="129.5" ></text>
</g>
<g >
<title>ParLoopExecute (146,686 us, 2.65%)</title><rect x="1150.2" y="119" width="31.3" height="15.0" fill="rgb(156.783788292334,148.67571024123,148.67571024123)" rx="2" ry="2" />
<text  x="1153.16" y="129.5" >Pa..</text>
</g>
<g >
<title>DMPlexSymmetrize (2,261 us, 0.04%)</title><rect x="59.5" y="87" width="0.5" height="15.0" fill="rgb(134.070534451142,96.6807445310522,134.070534451142)" rx="2" ry="2" />
<text  x="62.53" y="97.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (6,803 us, 0.12%)</title><rect x="1127.1" y="183" width="1.4" height="15.0" fill="rgb(118.869841136699,118.869841136699,150.426420865168)" rx="2" ry="2" />
<text  x="1130.07" y="193.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (67,593 us, 1.22%)</title><rect x="1134.2" y="167" width="14.5" height="15.0" fill="rgb(114.107626086889,146.620495652156,146.620495652156)" rx="2" ry="2" />
<text  x="1137.24" y="177.5" ></text>
</g>
<g >
<title>firedrake.parloops.par_loop (74,315 us, 1.34%)</title><rect x="1132.8" y="135" width="15.9" height="15.0" fill="rgb(113.078910794452,113.078910794452,149.305595637636)" rx="2" ry="2" />
<text  x="1135.81" y="145.5" ></text>
</g>
<g >
<title>firedrake.assemble.allocate_matrix (7,962 us, 0.14%)</title><rect x="807.9" y="87" width="1.7" height="15.0" fill="rgb(124.746805704591,163.413310699253,124.746805704591)" rx="2" ry="2" />
<text  x="810.94" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (5,459 us, 0.10%)</title><rect x="1124.5" y="183" width="1.2" height="15.0" fill="rgb(135.472169430802,135.472169430802,153.639774728542)" rx="2" ry="2" />
<text  x="1127.51" y="193.5" ></text>
</g>
<g >
<title>ParLoopExecute (67,593 us, 1.22%)</title><rect x="1134.2" y="151" width="14.5" height="15.0" fill="rgb(110.852970237911,145.776695987607,145.776695987607)" rx="2" ry="2" />
<text  x="1137.24" y="161.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.solve (1,781,894 us, 32.23%)</title><rect x="809.6" y="71" width="380.4" height="15.0" fill="rgb(133.393446462653,162.005718017708,133.393446462653)" rx="2" ry="2" />
<text  x="812.64" y="81.5" >firedrake.variational_solver.NonlinearVariation..</text>
</g>
<g >
<title>firedrake.interpolation.make_interpolator (18,015 us, 0.33%)</title><rect x="1129.0" y="135" width="3.8" height="15.0" fill="rgb(153.835931119312,126.075471914725,126.075471914725)" rx="2" ry="2" />
<text  x="1131.96" y="145.5" ></text>
</g>
<g >
<title>FunctionSpaceData: CreateElement (6,654 us, 0.12%)</title><rect x="45.3" y="135" width="1.4" height="15.0" fill="rgb(148.313579816256,148.313579816256,111.058117571084)" rx="2" ry="2" />
<text  x="48.28" y="145.5" ></text>
</g>
<g >
<title>Log_Event_form1_cell_integral_otherwise (1,992 us, 0.04%)</title><rect x="1166.6" y="151" width="0.4" height="15.0" fill="rgb(108.45421151461,145.154795577862,145.154795577862)" rx="2" ry="2" />
<text  x="1169.59" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspace.make_scalar_element (1,622 us, 0.03%)</title><rect x="1124.2" y="151" width="0.3" height="15.0" fill="rgb(139.440059165967,153.188163487473,153.188163487473)" rx="2" ry="2" />
<text  x="1127.16" y="161.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_pyop2_kernel_uniform_extrusion (103,483 us, 1.87%)</title><rect x="17.0" y="119" width="22.1" height="15.0" fill="rgb(150.419386117195,150.419386117195,121.263178875636)" rx="2" ry="2" />
<text  x="20.00" y="129.5" ></text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (39,933 us, 0.72%)</title><rect x="1181.5" y="119" width="8.5" height="15.0" fill="rgb(150.857763936867,150.857763936867,123.387625232509)" rx="2" ry="2" />
<text  x="1184.48" y="129.5" ></text>
</g>
<g >
<title>firedrake.utility_meshes.SquareMesh (10,564 us, 0.19%)</title><rect x="801.0" y="71" width="2.2" height="15.0" fill="rgb(152.304985708453,114.338223764803,114.338223764803)" rx="2" ry="2" />
<text  x="803.99" y="81.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (8,703 us, 0.16%)</title><rect x="39.1" y="103" width="1.8" height="15.0" fill="rgb(130.067900457254,162.547085972075,130.067900457254)" rx="2" ry="2" />
<text  x="42.09" y="113.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (8,703 us, 0.16%)</title><rect x="39.1" y="135" width="1.8" height="15.0" fill="rgb(151.923374323352,142.428646703589,151.923374323352)" rx="2" ry="2" />
<text  x="42.09" y="145.5" ></text>
</g>
<g >
<title>firedrake.assemble.allocate_matrix (919 us, 0.02%)</title><rect x="1125.7" y="135" width="0.2" height="15.0" fill="rgb(119.656060489126,148.058978645329,148.058978645329)" rx="2" ry="2" />
<text  x="1128.67" y="145.5" ></text>
</g>
<g >
<title>DMPlexStratify (786 us, 0.01%)</title><rect x="803.1" y="135" width="0.1" height="15.0" fill="rgb(154.965467084228,154.965467084228,143.294186638952)" rx="2" ry="2" />
<text  x="806.08" y="145.5" ></text>
</g>
<g >
<title>firedrake.functionspace.VectorFunctionSpace (8,703 us, 0.16%)</title><rect x="39.1" y="87" width="1.8" height="15.0" fill="rgb(154.08420003726,154.08420003726,139.023430949798)" rx="2" ry="2" />
<text  x="42.09" y="97.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (2,294 us, 0.04%)</title><rect x="1148.7" y="135" width="0.5" height="15.0" fill="rgb(116.183809573552,116.183809573552,149.906543788429)" rx="2" ry="2" />
<text  x="1151.67" y="145.5" ></text>
</g>
<g >
<title>firedrake.functionspace.MixedFunctionSpace (1,393 us, 0.03%)</title><rect x="800.7" y="71" width="0.3" height="15.0" fill="rgb(113.428594403627,113.428594403627,149.373276336186)" rx="2" ry="2" />
<text  x="803.69" y="81.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (68,244 us, 1.23%)</title><rect x="1151.6" y="151" width="14.6" height="15.0" fill="rgb(116.168970867457,147.154918373044,147.154918373044)" rx="2" ry="2" />
<text  x="1154.62" y="161.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.derivative (1,130 us, 0.02%)</title><rect x="806.9" y="103" width="0.2" height="15.0" fill="rgb(129.219425194808,129.219425194808,152.429566166737)" rx="2" ry="2" />
<text  x="809.86" y="113.5" ></text>
</g>
<g >
<title>firedrake.mesh._from_cell_list (6,683 us, 0.12%)</title><rect x="801.8" y="103" width="1.4" height="15.0" fill="rgb(153.633971324974,124.527113491466,124.527113491466)" rx="2" ry="2" />
<text  x="804.82" y="113.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (2,593 us, 0.05%)</title><rect x="1123.6" y="215" width="0.6" height="15.0" fill="rgb(156.650980957393,147.65752067335,147.65752067335)" rx="2" ry="2" />
<text  x="1126.61" y="225.5" ></text>
</g>
<g >
<title>PetscBarrier (27,167 us, 0.49%)</title><rect x="54.2" y="71" width="5.8" height="15.0" fill="rgb(134.253289842915,97.1490552224704,134.253289842915)" rx="2" ry="2" />
<text  x="57.22" y="81.5" ></text>
</g>
<g >
<title>firedrake.mesh._Facets.__init__ (837 us, 0.02%)</title><rect x="50.3" y="151" width="0.1" height="15.0" fill="rgb(126.388509536593,149.804428398376,149.804428398376)" rx="2" ry="2" />
<text  x="53.27" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (2,409 us, 0.04%)</title><rect x="1128.0" y="215" width="0.5" height="15.0" fill="rgb(127.867214676835,150.187796397698,150.187796397698)" rx="2" ry="2" />
<text  x="1131.01" y="225.5" ></text>
</g>
<g >
<title>ParLoopExecute (68,372 us, 1.24%)</title><rect x="811.4" y="183" width="14.6" height="15.0" fill="rgb(153.558719662957,123.950184082674,123.950184082674)" rx="2" ry="2" />
<text  x="814.40" y="193.5" ></text>
</g>
<g >
<title>FunctionSpaceData: CreateElement (4,212 us, 0.08%)</title><rect x="1124.8" y="199" width="0.9" height="15.0" fill="rgb(132.511185343525,132.511185343525,153.066681034231)" rx="2" ry="2" />
<text  x="1127.77" y="209.5" ></text>
</g>
<g >
<title>CreateMesh (3,547 us, 0.06%)</title><rect x="51.4" y="87" width="0.7" height="15.0" fill="rgb(147.819844446751,159.657234624948,147.819844446751)" rx="2" ry="2" />
<text  x="54.38" y="97.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (103,483 us, 1.87%)</title><rect x="17.0" y="135" width="22.1" height="15.0" fill="rgb(145.597621246799,160.018991890056,145.597621246799)" rx="2" ry="2" />
<text  x="20.00" y="145.5" ></text>
</g>
<g >
<title>firedrake.mesh.ExtrudedMeshTopology.__init__ (885 us, 0.02%)</title><rect x="40.9" y="87" width="0.2" height="15.0" fill="rgb(115.013806461482,146.855431304829,146.855431304829)" rx="2" ry="2" />
<text  x="43.95" y="97.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (42,639 us, 0.77%)</title><rect x="41.3" y="71" width="9.1" height="15.0" fill="rgb(154.730746378968,132.935722238754,132.935722238754)" rx="2" ry="2" />
<text  x="44.34" y="81.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (11,009 us, 0.20%)</title><rect x="1123.3" y="135" width="2.4" height="15.0" fill="rgb(145.505238907487,154.760617494534,154.760617494534)" rx="2" ry="2" />
<text  x="1126.32" y="145.5" ></text>
</g>
<g >
<title>ParLoopExecute (103,483 us, 1.87%)</title><rect x="17.0" y="103" width="22.1" height="15.0" fill="rgb(154.129801520419,154.129801520419,139.2444227528)" rx="2" ry="2" />
<text  x="20.00" y="113.5" ></text>
</g>
<g >
<title>HybridBreak (76,605 us, 1.39%)</title><rect x="809.6" y="151" width="16.4" height="15.0" fill="rgb(141.217933163128,141.217933163128,154.751858031573)" rx="2" ry="2" />
<text  x="812.64" y="161.5" ></text>
</g>
<g >
<title>firedrake.parloops.par_loop (75,768 us, 1.37%)</title><rect x="809.8" y="167" width="16.2" height="15.0" fill="rgb(156.540372873538,146.809525363791,146.809525363791)" rx="2" ry="2" />
<text  x="812.82" y="177.5" ></text>
</g>
<g >
<title>firedrake.__init__ (3,469,879 us, 62.77%)</title><rect x="60.0" y="71" width="740.7" height="15.0" fill="rgb(149.114166337225,149.114166337225,114.937883018861)" rx="2" ry="2" />
<text  x="63.02" y="81.5" >firedrake.__init__</text>
</g>
<g >
<title>firedrake.mesh.make_mesh_from_coordinates (960 us, 0.02%)</title><rect x="41.1" y="87" width="0.2" height="15.0" fill="rgb(143.375640236611,120.525078106317,143.375640236611)" rx="2" ry="2" />
<text  x="44.14" y="97.5" ></text>
</g>
<g >
<title>SNESFunctionEval (191,316 us, 3.46%)</title><rect x="1149.2" y="103" width="40.8" height="15.0" fill="rgb(146.846099345879,129.418129573816,146.846099345879)" rx="2" ry="2" />
<text  x="1152.16" y="113.5" >SNE..</text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (40,547 us, 0.73%)</title><rect x="41.8" y="87" width="8.6" height="15.0" fill="rgb(132.744948225315,132.744948225315,153.111925462964)" rx="2" ry="2" />
<text  x="44.79" y="97.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.action (5,339 us, 0.10%)</title><rect x="803.2" y="87" width="1.2" height="15.0" fill="rgb(148.04434374389,148.04434374389,109.753358143466)" rx="2" ry="2" />
<text  x="806.25" y="97.5" ></text>
</g>
<g >
<title>CreateMesh (17,673 us, 0.32%)</title><rect x="50.4" y="71" width="3.8" height="15.0" fill="rgb(143.721162854687,121.410479815137,143.721162854687)" rx="2" ry="2" />
<text  x="53.45" y="81.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (5,459 us, 0.10%)</title><rect x="1124.5" y="167" width="1.2" height="15.0" fill="rgb(144.442814240581,160.206983728278,144.442814240581)" rx="2" ry="2" />
<text  x="1127.51" y="177.5" ></text>
</g>
<g >
<title>firedrake.matrix_free.operators.ImplicitMatrixContext.__init__ (7,962 us, 0.14%)</title><rect x="807.9" y="103" width="1.7" height="15.0" fill="rgb(148.298857426093,133.140822154363,148.298857426093)" rx="2" ry="2" />
<text  x="810.94" y="113.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (2,409 us, 0.04%)</title><rect x="1128.0" y="231" width="0.5" height="15.0" fill="rgb(125.550027818463,149.587044249231,149.587044249231)" rx="2" ry="2" />
<text  x="1131.01" y="241.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (13,257 us, 0.24%)</title><rect x="1125.9" y="151" width="2.8" height="15.0" fill="rgb(155.404927752838,138.104446105091,138.104446105091)" rx="2" ry="2" />
<text  x="1128.87" y="161.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (68,372 us, 1.24%)</title><rect x="811.4" y="215" width="14.6" height="15.0" fill="rgb(154.726792348063,154.726792348063,142.137532148305)" rx="2" ry="2" />
<text  x="814.40" y="225.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (68,372 us, 1.24%)</title><rect x="811.4" y="199" width="14.6" height="15.0" fill="rgb(133.671053234418,151.692495282997,151.692495282997)" rx="2" ry="2" />
<text  x="814.40" y="209.5" ></text>
</g>
<g >
<title>HybridRHS (1,362,312 us, 24.64%)</title><rect x="826.0" y="151" width="290.8" height="15.0" fill="rgb(154.266939219314,129.379867348073,129.379867348073)" rx="2" ry="2" />
<text  x="828.99" y="161.5" >HybridRHS</text>
</g>
<g >
<title>DMPlexInterp (4,648 us, 0.08%)</title><rect x="802.3" y="119" width="0.9" height="15.0" fill="rgb(145.391222217366,154.73105761191,154.73105761191)" rx="2" ry="2" />
<text  x="805.25" y="129.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (13,257 us, 0.24%)</title><rect x="1125.9" y="135" width="2.8" height="15.0" fill="rgb(155.611416529252,139.687526724265,139.687526724265)" rx="2" ry="2" />
<text  x="1128.87" y="145.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (11,594 us, 0.21%)</title><rect x="804.4" y="103" width="2.5" height="15.0" fill="rgb(154.133160666215,128.354231774316,128.354231774316)" rx="2" ry="2" />
<text  x="807.39" y="113.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_form0_cell_integral_otherwise (73,974 us, 1.34%)</title><rect x="1150.4" y="135" width="15.8" height="15.0" fill="rgb(105.484238027159,144.384802451486,144.384802451486)" rx="2" ry="2" />
<text  x="1153.39" y="145.5" ></text>
</g>
<g >
<title>firedrake.utility_meshes.RectangleMesh (10,564 us, 0.19%)</title><rect x="801.0" y="87" width="2.2" height="15.0" fill="rgb(152.498830444066,115.824366737842,115.824366737842)" rx="2" ry="2" />
<text  x="803.99" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (2,593 us, 0.05%)</title><rect x="1123.6" y="183" width="0.6" height="15.0" fill="rgb(156.24444857067,144.540772375139,144.540772375139)" rx="2" ry="2" />
<text  x="1126.61" y="193.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (8,703 us, 0.16%)</title><rect x="39.1" y="151" width="1.8" height="15.0" fill="rgb(149.232880925503,149.232880925503,115.513192177439)" rx="2" ry="2" />
<text  x="42.09" y="161.5" ></text>
</g>
<g >
<title>SNESSolve (1,781,894 us, 32.23%)</title><rect x="809.6" y="87" width="380.4" height="15.0" fill="rgb(136.967809645318,152.547209908045,152.547209908045)" rx="2" ry="2" />
<text  x="812.64" y="97.5" >SNESSolve</text>
</g>
<g >
<title>firedrake.variational_solver.LinearVariationalProblem.__init__ (18,063 us, 0.33%)</title><rect x="803.2" y="71" width="3.9" height="15.0" fill="rgb(140.783330587259,160.80271362533,140.783330587259)" rx="2" ry="2" />
<text  x="806.25" y="81.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.WithGeometry.split (823 us, 0.01%)</title><rect x="1128.5" y="183" width="0.2" height="15.0" fill="rgb(156.770050724117,148.570388884897,148.570388884897)" rx="2" ry="2" />
<text  x="1131.52" y="193.5" ></text>
</g>
<g >
<title>firedrake.function.Function.split (1,130 us, 0.02%)</title><rect x="806.9" y="119" width="0.2" height="15.0" fill="rgb(148.105998810226,132.646621951204,148.105998810226)" rx="2" ry="2" />
<text  x="809.86" y="129.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (1,409 us, 0.03%)</title><rect x="1189.7" y="167" width="0.3" height="15.0" fill="rgb(134.114744453741,161.888297414507,134.114744453741)" rx="2" ry="2" />
<text  x="1192.70" y="177.5" ></text>
</g>
<g >
<title>all (5,527,989 us, 100%)</title><rect x="10.0" y="39" width="1180.0" height="15.0" fill="rgb(154.821290975302,133.629897477313,133.629897477313)" rx="2" ry="2" />
<text  x="13.00" y="49.5" ></text>
</g>
<g >
<title>firedrake.function.Function.__init__ (1,249 us, 0.02%)</title><rect x="1128.7" y="135" width="0.3" height="15.0" fill="rgb(130.945897720411,162.404156185049,130.945897720411)" rx="2" ry="2" />
<text  x="1131.70" y="145.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.__init__ (11,880 us, 0.21%)</title><rect x="807.1" y="71" width="2.5" height="15.0" fill="rgb(134.346021183347,97.3866792823275,134.346021183347)" rx="2" ry="2" />
<text  x="810.10" y="81.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (9,647 us, 0.17%)</title><rect x="1126.6" y="167" width="2.1" height="15.0" fill="rgb(141.59550768213,115.963488435457,141.59550768213)" rx="2" ry="2" />
<text  x="1129.64" y="177.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (5,741 us, 0.10%)</title><rect x="1188.8" y="135" width="1.2" height="15.0" fill="rgb(104.779098284215,144.201988444056,144.201988444056)" rx="2" ry="2" />
<text  x="1191.77" y="145.5" ></text>
</g>
<g >
<title>SCForwardElim (1,438,917 us, 26.03%)</title><rect x="809.6" y="135" width="307.2" height="15.0" fill="rgb(120.024148630526,148.15440890421,148.15440890421)" rx="2" ry="2" />
<text  x="812.64" y="145.5" >SCForwardElim</text>
</g>
<g >
<title>firedrake.mesh.MeshTopology._facets (17,559 us, 0.32%)</title><rect x="46.7" y="135" width="3.7" height="15.0" fill="rgb(141.160133424395,114.847841900013,141.160133424395)" rx="2" ry="2" />
<text  x="49.70" y="145.5" ></text>
</g>
</g>
</svg>
