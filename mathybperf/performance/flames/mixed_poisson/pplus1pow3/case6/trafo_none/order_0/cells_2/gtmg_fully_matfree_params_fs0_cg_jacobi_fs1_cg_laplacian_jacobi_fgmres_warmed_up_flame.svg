<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="283" onload="init(evt)" viewBox="0 0 1200 283" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:13px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:18px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 13 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (1 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="283.0" fill="url(#background)"  />
<text id="title" x="600.00" y="26" >Firedrake example</text>
<text id="details" x="10.00" y="265" > </text>
<text id="unzoom" x="10.00" y="26" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="26" >Search</text>
<text id="ignorecase" x="1174.00" y="26" >ic</text>
<text id="matched" x="1090.00" y="265" > </text>
<g id="frames">
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (73,249 us, 1.53%)</title><rect x="1120.3" y="167" width="18.1" height="15.0" fill="rgb(130.787320817782,150.944860952758,150.944860952758)" rx="2" ry="2" />
<text  x="1123.33" y="177.5" ></text>
</g>
<g >
<title>DMPlexStratify (3,864 us, 0.08%)</title><rect x="69.2" y="87" width="0.9" height="15.0" fill="rgb(154.317471378822,154.317471378822,140.153899758907)" rx="2" ry="2" />
<text  x="72.18" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (2,619 us, 0.05%)</title><rect x="1112.8" y="231" width="0.6" height="15.0" fill="rgb(152.340237388919,152.340237388919,130.571919653991)" rx="2" ry="2" />
<text  x="1115.77" y="241.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (106,669 us, 2.23%)</title><rect x="19.2" y="135" width="26.4" height="15.0" fill="rgb(152.737192455503,117.651808825524,117.651808825524)" rx="2" ry="2" />
<text  x="22.24" y="145.5" >p..</text>
</g>
<g >
<title>CreateExtMesh (155,195 us, 3.25%)</title><rect x="10.0" y="71" width="38.3" height="15.0" fill="rgb(138.620699540464,108.34054257244,138.620699540464)" rx="2" ry="2" />
<text  x="13.00" y="81.5" >Cr..</text>
</g>
<g >
<title>firedrake.ufl_expr.action (4,230 us, 0.09%)</title><rect x="795.2" y="119" width="1.0" height="15.0" fill="rgb(151.300613061062,151.300613061062,125.533740218992)" rx="2" ry="2" />
<text  x="798.17" y="129.5" ></text>
</g>
<g >
<title>HybridInit (165,360 us, 3.46%)</title><rect x="1098.1" y="119" width="40.9" height="15.0" fill="rgb(152.06572097001,112.503860770079,112.503860770079)" rx="2" ry="2" />
<text  x="1101.15" y="129.5" >Hyb..</text>
</g>
<g >
<title>firedrake.variational_solver.LinearVariationalProblem.__init__ (16,290 us, 0.34%)</title><rect x="790.2" y="71" width="4.0" height="15.0" fill="rgb(152.131975957468,142.963188391013,152.131975957468)" rx="2" ry="2" />
<text  x="793.21" y="81.5" ></text>
</g>
<g >
<title>DMPlexSymmetrize (2,373 us, 0.05%)</title><rect x="70.1" y="87" width="0.6" height="15.0" fill="rgb(155.910767130519,141.982548000645,141.982548000645)" rx="2" ry="2" />
<text  x="73.14" y="97.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (14,688 us, 0.31%)</title><rect x="1110.0" y="135" width="3.6" height="15.0" fill="rgb(127.473519838314,162.969427003065,127.473519838314)" rx="2" ry="2" />
<text  x="1113.01" y="145.5" ></text>
</g>
<g >
<title>firedrake.utility_meshes.SquareMesh (9,188 us, 0.19%)</title><rect x="787.9" y="71" width="2.3" height="15.0" fill="rgb(154.006313816275,154.006313816275,138.645982340409)" rx="2" ry="2" />
<text  x="790.94" y="81.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (1,580 us, 0.03%)</title><rect x="1189.6" y="167" width="0.4" height="15.0" fill="rgb(133.43907599613,151.632353036034,151.632353036034)" rx="2" ry="2" />
<text  x="1192.61" y="177.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (73,963 us, 1.55%)</title><rect x="799.5" y="215" width="18.2" height="15.0" fill="rgb(153.477534884877,123.327767450723,123.327767450723)" rx="2" ry="2" />
<text  x="802.46" y="225.5" ></text>
</g>
<g >
<title>firedrake.functionspace.VectorFunctionSpace (9,171 us, 0.19%)</title><rect x="45.6" y="87" width="2.2" height="15.0" fill="rgb(143.786287808523,160.313860124194,143.786287808523)" rx="2" ry="2" />
<text  x="48.58" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (9,171 us, 0.19%)</title><rect x="45.6" y="119" width="2.2" height="15.0" fill="rgb(132.853825261425,151.480621364073,151.480621364073)" rx="2" ry="2" />
<text  x="48.58" y="129.5" ></text>
</g>
<g >
<title>ParLoopExecute (73,249 us, 1.53%)</title><rect x="1120.3" y="151" width="18.1" height="15.0" fill="rgb(128.086088912972,128.086088912972,152.210210757349)" rx="2" ry="2" />
<text  x="1123.33" y="161.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (9,171 us, 0.19%)</title><rect x="45.6" y="103" width="2.2" height="15.0" fill="rgb(138.305583949208,152.894040283128,152.894040283128)" rx="2" ry="2" />
<text  x="48.58" y="113.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (1,580 us, 0.03%)</title><rect x="1189.6" y="183" width="0.4" height="15.0" fill="rgb(136.059526449857,136.059526449857,153.75345673223)" rx="2" ry="2" />
<text  x="1192.61" y="193.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (842 us, 0.02%)</title><rect x="1189.8" y="199" width="0.2" height="15.0" fill="rgb(131.682271575595,162.284281371415,131.682271575595)" rx="2" ry="2" />
<text  x="1192.79" y="209.5" ></text>
</g>
<g >
<title>ParLoopExecute (163,700 us, 3.43%)</title><rect x="1140.1" y="119" width="40.4" height="15.0" fill="rgb(144.238142348856,160.240302408326,144.238142348856)" rx="2" ry="2" />
<text  x="1143.07" y="129.5" >Par..</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (73,249 us, 1.53%)</title><rect x="1120.3" y="183" width="18.1" height="15.0" fill="rgb(132.462510105389,162.157265796797,132.462510105389)" rx="2" ry="2" />
<text  x="1123.33" y="193.5" ></text>
</g>
<g >
<title>firedrake.mesh.make_mesh_from_coordinates (1,018 us, 0.02%)</title><rect x="48.1" y="87" width="0.2" height="15.0" fill="rgb(152.248125274289,113.902293769549,113.902293769549)" rx="2" ry="2" />
<text  x="51.07" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (2,731 us, 0.06%)</title><rect x="1107.4" y="215" width="0.7" height="15.0" fill="rgb(108.012581188113,145.040298826548,145.040298826548)" rx="2" ry="2" />
<text  x="1110.42" y="225.5" ></text>
</g>
<g >
<title>firedrake.mesh._from_cell_list (5,462 us, 0.11%)</title><rect x="788.9" y="103" width="1.3" height="15.0" fill="rgb(156.13195445819,143.678317512788,143.678317512788)" rx="2" ry="2" />
<text  x="791.86" y="113.5" ></text>
</g>
<g >
<title>DMPlexInterp (3,759 us, 0.08%)</title><rect x="789.3" y="119" width="0.9" height="15.0" fill="rgb(139.479577122219,139.479577122219,154.415402023655)" rx="2" ry="2" />
<text  x="792.28" y="129.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (2,791 us, 0.06%)</title><rect x="796.2" y="119" width="0.7" height="15.0" fill="rgb(150.813929990057,150.813929990057,123.175199182582)" rx="2" ry="2" />
<text  x="799.21" y="129.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (40,774 us, 0.85%)</title><rect x="49.0" y="119" width="10.1" height="15.0" fill="rgb(156.410598869544,145.814591333168,145.814591333168)" rx="2" ry="2" />
<text  x="52.05" y="129.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (43,707 us, 0.91%)</title><rect x="48.3" y="71" width="10.8" height="15.0" fill="rgb(155.851377349706,141.527226347744,141.527226347744)" rx="2" ry="2" />
<text  x="51.33" y="81.5" ></text>
</g>
<g >
<title>firedrake.function.Function.__init__ (1,509 us, 0.03%)</title><rect x="1113.6" y="135" width="0.4" height="15.0" fill="rgb(153.57192790597,124.051447279106,124.051447279106)" rx="2" ry="2" />
<text  x="1116.64" y="145.5" ></text>
</g>
<g >
<title>firedrake.assemble.allocate_matrix (747 us, 0.02%)</title><rect x="1109.8" y="135" width="0.2" height="15.0" fill="rgb(134.389816094084,134.389816094084,153.430286985952)" rx="2" ry="2" />
<text  x="1112.82" y="145.5" ></text>
</g>
<g >
<title>CreateMesh (1,506 us, 0.03%)</title><rect x="788.5" y="103" width="0.4" height="15.0" fill="rgb(143.256405489967,154.17758660851,154.17758660851)" rx="2" ry="2" />
<text  x="791.49" y="113.5" ></text>
</g>
<g >
<title>firedrake.extrusion_utils.make_extruded_coords (143,265 us, 3.00%)</title><rect x="10.2" y="87" width="35.4" height="15.0" fill="rgb(133.717969231675,133.717969231675,153.300252109356)" rx="2" ry="2" />
<text  x="13.20" y="97.5" >fi..</text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (14,688 us, 0.31%)</title><rect x="1110.0" y="151" width="3.6" height="15.0" fill="rgb(151.654363505849,151.654363505849,127.248069297575)" rx="2" ry="2" />
<text  x="1113.01" y="161.5" ></text>
</g>
<g >
<title>firedrake.utility_meshes.RectangleMesh (9,188 us, 0.19%)</title><rect x="787.9" y="87" width="2.3" height="15.0" fill="rgb(117.876102506407,117.876102506407,150.234084356079)" rx="2" ry="2" />
<text  x="790.94" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (3,789 us, 0.08%)</title><rect x="1112.5" y="199" width="0.9" height="15.0" fill="rgb(154.67029997142,154.67029997142,141.863761399959)" rx="2" ry="2" />
<text  x="1115.48" y="209.5" ></text>
</g>
<g >
<title>all (4,778,273 us, 100%)</title><rect x="10.0" y="39" width="1180.0" height="15.0" fill="rgb(150.954939535834,159.14687030812,150.954939535834)" rx="2" ry="2" />
<text  x="13.00" y="49.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (2,731 us, 0.06%)</title><rect x="1107.4" y="167" width="0.7" height="15.0" fill="rgb(139.582116240069,139.582116240069,154.43524830453)" rx="2" ry="2" />
<text  x="1110.42" y="177.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (3,700 us, 0.08%)</title><rect x="1189.1" y="151" width="0.9" height="15.0" fill="rgb(109.375844447214,145.393737449278,145.393737449278)" rx="2" ry="2" />
<text  x="1192.09" y="161.5" ></text>
</g>
<g >
<title>firedrake.__init__ (2,901,606 us, 60.72%)</title><rect x="70.7" y="71" width="716.6" height="15.0" fill="rgb(145.82409823219,159.982123543597,145.82409823219)" rx="2" ry="2" />
<text  x="73.72" y="81.5" >firedrake.__init__</text>
</g>
<g >
<title>firedrake.parloops.par_loop (80,726 us, 1.69%)</title><rect x="1118.5" y="135" width="19.9" height="15.0" fill="rgb(155.572772648401,155.572772648401,146.237282834561)" rx="2" ry="2" />
<text  x="1121.48" y="145.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (2,731 us, 0.06%)</title><rect x="1107.4" y="199" width="0.7" height="15.0" fill="rgb(126.11020059949,126.11020059949,151.827780761192)" rx="2" ry="2" />
<text  x="1110.42" y="209.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (2,272 us, 0.05%)</title><rect x="1138.4" y="135" width="0.6" height="15.0" fill="rgb(152.483668051671,115.708121729477,115.708121729477)" rx="2" ry="2" />
<text  x="1141.42" y="145.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (73,963 us, 1.55%)</title><rect x="799.5" y="199" width="18.2" height="15.0" fill="rgb(132.667082236987,162.12396335677,132.667082236987)" rx="2" ry="2" />
<text  x="802.46" y="209.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (5,973 us, 0.13%)</title><rect x="1108.3" y="167" width="1.5" height="15.0" fill="rgb(137.534764353002,105.557833654568,137.534764353002)" rx="2" ry="2" />
<text  x="1111.35" y="177.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.WithGeometry.split (876 us, 0.02%)</title><rect x="1113.4" y="183" width="0.2" height="15.0" fill="rgb(146.298158853211,146.298158853211,155.735127519976)" rx="2" ry="2" />
<text  x="1116.42" y="193.5" ></text>
</g>
<g >
<title>PetscBarrier (27,508 us, 0.58%)</title><rect x="63.9" y="71" width="6.8" height="15.0" fill="rgb(115.222657435189,115.222657435189,149.720514342295)" rx="2" ry="2" />
<text  x="66.93" y="81.5" ></text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (38,476 us, 0.81%)</title><rect x="1180.5" y="119" width="9.5" height="15.0" fill="rgb(147.882912228388,147.882912228388,156.041853979688)" rx="2" ry="2" />
<text  x="1183.50" y="129.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.solve (1,591,796 us, 33.31%)</title><rect x="796.9" y="71" width="393.1" height="15.0" fill="rgb(146.154135351002,146.154135351002,155.70725200342)" rx="2" ry="2" />
<text  x="799.90" y="81.5" >firedrake.variational_solver.NonlinearVariational..</text>
</g>
<g >
<title>firedrake.ufl_expr.derivative (1,022 us, 0.02%)</title><rect x="794.0" y="103" width="0.2" height="15.0" fill="rgb(126.701606206381,149.885601609062,149.885601609062)" rx="2" ry="2" />
<text  x="796.98" y="113.5" ></text>
</g>
<g >
<title>KSPSolve (1,219,841 us, 25.53%)</title><rect x="796.9" y="103" width="301.2" height="15.0" fill="rgb(136.98550765091,136.98550765091,153.932678900176)" rx="2" ry="2" />
<text  x="799.90" y="113.5" >KSPSolve</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (76,845 us, 1.61%)</title><rect x="1161.5" y="151" width="19.0" height="15.0" fill="rgb(135.999875346314,135.999875346314,153.741911357351)" rx="2" ry="2" />
<text  x="1164.52" y="161.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (11,846 us, 0.25%)</title><rect x="1106.9" y="135" width="2.9" height="15.0" fill="rgb(135.129538443875,161.723098392857,135.129538443875)" rx="2" ry="2" />
<text  x="1109.90" y="145.5" ></text>
</g>
<g >
<title>firedrake.mesh.ExtrudedMeshTopology.__init__ (933 us, 0.02%)</title><rect x="47.8" y="87" width="0.3" height="15.0" fill="rgb(154.710607398095,132.781323385391,132.781323385391)" rx="2" ry="2" />
<text  x="50.84" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (2,619 us, 0.05%)</title><rect x="1112.8" y="215" width="0.6" height="15.0" fill="rgb(155.89553462744,141.865765477039,141.865765477039)" rx="2" ry="2" />
<text  x="1115.77" y="225.5" ></text>
</g>
<g >
<title>firedrake.functionspace.make_scalar_element (1,618 us, 0.03%)</title><rect x="1112.1" y="199" width="0.4" height="15.0" fill="rgb(136.476566835219,161.503814701243,136.476566835219)" rx="2" ry="2" />
<text  x="1115.08" y="209.5" ></text>
</g>
<g >
<title>firedrake.mesh.MeshTopology._facets (18,851 us, 0.39%)</title><rect x="54.5" y="135" width="4.6" height="15.0" fill="rgb(134.495181158702,161.826365857886,134.495181158702)" rx="2" ry="2" />
<text  x="57.46" y="145.5" ></text>
</g>
<g >
<title>firedrake.functionspace.MixedFunctionSpace (2,684 us, 0.06%)</title><rect x="787.3" y="71" width="0.6" height="15.0" fill="rgb(109.802698759335,145.50440338205,145.50440338205)" rx="2" ry="2" />
<text  x="790.28" y="81.5" ></text>
</g>
<g >
<title>FunctionSpaceData: CreateElement (6,721 us, 0.14%)</title><rect x="52.8" y="135" width="1.7" height="15.0" fill="rgb(153.234028937701,153.234028937701,134.90337100578)" rx="2" ry="2" />
<text  x="55.80" y="145.5" ></text>
</g>
<g >
<title>firedrake.matrix_free.operators.ImplicitMatrixContext.__init__ (747 us, 0.02%)</title><rect x="1109.8" y="151" width="0.2" height="15.0" fill="rgb(141.814825240053,160.634795891154,141.814825240053)" rx="2" ry="2" />
<text  x="1112.82" y="161.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_pyop2_kernel_uniform_extrusion (107,380 us, 2.25%)</title><rect x="19.1" y="119" width="26.5" height="15.0" fill="rgb(147.767307903939,147.767307903939,108.410799842165)" rx="2" ry="2" />
<text  x="22.06" y="129.5" >P..</text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (10,705 us, 0.22%)</title><rect x="1111.0" y="167" width="2.6" height="15.0" fill="rgb(140.097630955406,112.125179323228,140.097630955406)" rx="2" ry="2" />
<text  x="1113.99" y="177.5" ></text>
</g>
<g >
<title>firedrake.mesh._Facets.__init__ (888 us, 0.02%)</title><rect x="58.9" y="151" width="0.2" height="15.0" fill="rgb(138.452932330191,107.910639096115,138.452932330191)" rx="2" ry="2" />
<text  x="61.90" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (9,171 us, 0.19%)</title><rect x="45.6" y="151" width="2.2" height="15.0" fill="rgb(142.654698753658,154.021588565763,154.021588565763)" rx="2" ry="2" />
<text  x="48.58" y="161.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_form0_cell_integral_otherwise (80,873 us, 1.69%)</title><rect x="1140.4" y="135" width="20.0" height="15.0" fill="rgb(139.655767352678,110.992903841236,139.655767352678)" rx="2" ry="2" />
<text  x="1143.39" y="145.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_form1_cell_integral_otherwise (81,525 us, 1.71%)</title><rect x="1160.4" y="135" width="20.1" height="15.0" fill="rgb(145.428320237941,145.428320237941,155.566771658956)" rx="2" ry="2" />
<text  x="1163.37" y="145.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (74,585 us, 1.56%)</title><rect x="1141.9" y="151" width="18.5" height="15.0" fill="rgb(104.056066821379,144.01453584258,144.01453584258)" rx="2" ry="2" />
<text  x="1144.95" y="161.5" ></text>
</g>
<g >
<title>PCSetUp (165,360 us, 3.46%)</title><rect x="1098.1" y="103" width="40.9" height="15.0" fill="rgb(144.654388678758,154.540026694493,154.540026694493)" rx="2" ry="2" />
<text  x="1101.15" y="113.5" >PCS..</text>
</g>
<g >
<title>ParLoopExecute (108,100 us, 2.26%)</title><rect x="18.9" y="103" width="26.7" height="15.0" fill="rgb(155.517271945396,155.517271945396,145.968317889228)" rx="2" ry="2" />
<text  x="21.88" y="113.5" >P..</text>
</g>
<g >
<title>Mesh: numbering (6,624 us, 0.14%)</title><rect x="61.3" y="87" width="1.7" height="15.0" fill="rgb(148.768586146613,148.768586146613,113.263148248969)" rx="2" ry="2" />
<text  x="64.33" y="97.5" ></text>
</g>
<g >
<title>SNESFunctionEval (206,595 us, 4.32%)</title><rect x="1139.0" y="103" width="51.0" height="15.0" fill="rgb(107.701358453017,144.959611450782,144.959611450782)" rx="2" ry="2" />
<text  x="1141.98" y="113.5" >SNES..</text>
</g>
<g >
<title>SCForwardElim (1,219,841 us, 25.53%)</title><rect x="796.9" y="135" width="301.2" height="15.0" fill="rgb(155.491220645301,155.491220645301,145.842069281075)" rx="2" ry="2" />
<text  x="799.90" y="145.5" >SCForwardElim</text>
</g>
<g >
<title>CreateMesh (19,479 us, 0.41%)</title><rect x="59.1" y="71" width="4.8" height="15.0" fill="rgb(147.114232335226,147.114232335226,155.893077226173)" rx="2" ry="2" />
<text  x="62.12" y="81.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (41,873 us, 0.88%)</title><rect x="48.8" y="87" width="10.3" height="15.0" fill="rgb(134.788336761116,98.5201129503603,134.788336761116)" rx="2" ry="2" />
<text  x="51.78" y="97.5" ></text>
</g>
<g >
<title>PCApply (1,219,841 us, 25.53%)</title><rect x="796.9" y="119" width="301.2" height="15.0" fill="rgb(151.677051876714,151.677051876714,127.358020633308)" rx="2" ry="2" />
<text  x="799.90" y="129.5" >PCApply</text>
</g>
<g >
<title>firedrake.parloops.par_loop (83,418 us, 1.75%)</title><rect x="797.1" y="167" width="20.6" height="15.0" fill="rgb(152.71917326272,152.71917326272,132.408301196259)" rx="2" ry="2" />
<text  x="800.13" y="177.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (10,336 us, 0.22%)</title><rect x="791.4" y="103" width="2.6" height="15.0" fill="rgb(150.193377161645,150.193377161645,120.167904706435)" rx="2" ry="2" />
<text  x="794.43" y="113.5" ></text>
</g>
<g >
<title>Mesh: reorder (3,901 us, 0.08%)</title><rect x="63.0" y="87" width="0.9" height="15.0" fill="rgb(134.5149426315,134.5149426315,153.454505025452)" rx="2" ry="2" />
<text  x="65.97" y="97.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (7,614 us, 0.16%)</title><rect x="1111.5" y="183" width="1.9" height="15.0" fill="rgb(135.247762907489,99.6973924504408,135.247762907489)" rx="2" ry="2" />
<text  x="1114.54" y="193.5" ></text>
</g>
<g >
<title>Log_Event_form0_cell_integral_otherwise (4,227 us, 0.09%)</title><rect x="1140.9" y="151" width="1.0" height="15.0" fill="rgb(137.915019074207,161.269648057687,137.915019074207)" rx="2" ry="2" />
<text  x="1143.90" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (5,973 us, 0.13%)</title><rect x="1108.3" y="151" width="1.5" height="15.0" fill="rgb(155.246892517304,136.89284263266,136.89284263266)" rx="2" ry="2" />
<text  x="1111.35" y="161.5" ></text>
</g>
<g >
<title>HybridRHS (1,135,518 us, 23.76%)</title><rect x="817.7" y="151" width="280.4" height="15.0" fill="rgb(147.760784611691,147.760784611691,108.379186964349)" rx="2" ry="2" />
<text  x="820.73" y="161.5" >HybridRHS</text>
</g>
<g >
<title>CreateMesh (1,506 us, 0.03%)</title><rect x="788.5" y="119" width="0.4" height="15.0" fill="rgb(141.374038467091,115.395973571921,141.374038467091)" rx="2" ry="2" />
<text  x="791.49" y="129.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalProblem.__init__ (11,358 us, 0.24%)</title><rect x="791.4" y="87" width="2.8" height="15.0" fill="rgb(152.010895769163,112.083534230249,112.083534230249)" rx="2" ry="2" />
<text  x="794.43" y="97.5" ></text>
</g>
<g >
<title>firedrake (4,778,273 us, 100.00%)</title><rect x="10.0" y="55" width="1180.0" height="15.0" fill="rgb(153.91025110739,126.645258489992,126.645258489992)" rx="2" ry="2" />
<text  x="13.00" y="65.5" >firedrake</text>
</g>
<g >
<title>firedrake.matrix_free.operators.ImplicitMatrixContext.__init__ (7,021 us, 0.15%)</title><rect x="795.2" y="103" width="1.7" height="15.0" fill="rgb(150.618677116141,150.618677116141,122.228973716681)" rx="2" ry="2" />
<text  x="798.17" y="113.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (9,171 us, 0.19%)</title><rect x="45.6" y="135" width="2.2" height="15.0" fill="rgb(143.230465334302,160.404342852556,143.230465334302)" rx="2" ry="2" />
<text  x="48.58" y="145.5" ></text>
</g>
<g >
<title>firedrake.function.Function.split (1,022 us, 0.02%)</title><rect x="794.0" y="119" width="0.2" height="15.0" fill="rgb(125.114579392676,149.474150212916,149.474150212916)" rx="2" ry="2" />
<text  x="796.98" y="129.5" ></text>
</g>
<g >
<title>firedrake.functionspace.make_scalar_element (941 us, 0.02%)</title><rect x="48.5" y="87" width="0.3" height="15.0" fill="rgb(152.333016868519,114.553129325316,114.553129325316)" rx="2" ry="2" />
<text  x="51.55" y="97.5" ></text>
</g>
<g >
<title>FunctionSpaceData: CreateElement (940 us, 0.02%)</title><rect x="47.6" y="167" width="0.2" height="15.0" fill="rgb(127.845894735885,162.908807833693,127.845894735885)" rx="2" ry="2" />
<text  x="50.61" y="177.5" ></text>
</g>
<g >
<title>firedrake.interpolation.make_interpolator (18,129 us, 0.38%)</title><rect x="1114.0" y="135" width="4.5" height="15.0" fill="rgb(121.065285331471,148.424333234085,148.424333234085)" rx="2" ry="2" />
<text  x="1117.01" y="145.5" ></text>
</g>
<g >
<title>Log_Event_form1_cell_integral_otherwise (2,363 us, 0.05%)</title><rect x="1160.9" y="151" width="0.6" height="15.0" fill="rgb(154.562640312077,131.646909059259,131.646909059259)" rx="2" ry="2" />
<text  x="1163.94" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspace.MixedFunctionSpace (4,111 us, 0.09%)</title><rect x="1107.1" y="151" width="1.0" height="15.0" fill="rgb(114.31288599928,146.673711184999,146.673711184999)" rx="2" ry="2" />
<text  x="1110.08" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspace.make_scalar_element (1,045 us, 0.02%)</title><rect x="1108.1" y="151" width="0.2" height="15.0" fill="rgb(152.455584127978,115.492811647834,115.492811647834)" rx="2" ry="2" />
<text  x="1111.09" y="161.5" ></text>
</g>
<g >
<title>CreateMesh (4,143 us, 0.09%)</title><rect x="60.3" y="87" width="1.0" height="15.0" fill="rgb(151.289259146555,151.289259146555,125.478717402533)" rx="2" ry="2" />
<text  x="63.31" y="97.5" ></text>
</g>
<g >
<title>ParLoopExecute (74,767 us, 1.56%)</title><rect x="799.3" y="183" width="18.4" height="15.0" fill="rgb(155.982676261397,142.533851337378,142.533851337378)" rx="2" ry="2" />
<text  x="802.26" y="193.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.action (4,932 us, 0.10%)</title><rect x="790.2" y="87" width="1.2" height="15.0" fill="rgb(106.934516347024,144.760800534414,144.760800534414)" rx="2" ry="2" />
<text  x="793.21" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (40,774 us, 0.85%)</title><rect x="49.0" y="103" width="10.1" height="15.0" fill="rgb(152.6698250567,117.135325434699,117.135325434699)" rx="2" ry="2" />
<text  x="52.05" y="113.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (951 us, 0.02%)</title><rect x="787.7" y="87" width="0.2" height="15.0" fill="rgb(110.491036184452,110.491036184452,148.804716680862)" rx="2" ry="2" />
<text  x="790.71" y="97.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (6,343 us, 0.13%)</title><rect x="1188.4" y="135" width="1.6" height="15.0" fill="rgb(154.451876928701,130.797723120044,130.797723120044)" rx="2" ry="2" />
<text  x="1191.43" y="145.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (2,731 us, 0.06%)</title><rect x="1107.4" y="183" width="0.7" height="15.0" fill="rgb(156.179924463112,144.046087550524,144.046087550524)" rx="2" ry="2" />
<text  x="1110.42" y="193.5" ></text>
</g>
<g >
<title>firedrake.assemble.allocate_matrix (7,021 us, 0.15%)</title><rect x="795.2" y="87" width="1.7" height="15.0" fill="rgb(133.244566174614,133.244566174614,153.208625711216)" rx="2" ry="2" />
<text  x="798.17" y="97.5" ></text>
</g>
<g >
<title>SNESSolve (1,591,796 us, 33.31%)</title><rect x="796.9" y="87" width="393.1" height="15.0" fill="rgb(109.597659273416,145.451244996812,145.451244996812)" rx="2" ry="2" />
<text  x="799.90" y="97.5" >SNESSolve</text>
</g>
<g >
<title>FunctionSpaceData: CreateElement (4,557 us, 0.10%)</title><rect x="1108.7" y="199" width="1.1" height="15.0" fill="rgb(140.367510461724,112.816745558169,140.367510461724)" rx="2" ry="2" />
<text  x="1111.70" y="209.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (5,973 us, 0.13%)</title><rect x="1108.3" y="183" width="1.5" height="15.0" fill="rgb(115.957352391503,147.100054323723,147.100054323723)" rx="2" ry="2" />
<text  x="1111.35" y="193.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.__init__ (10,820 us, 0.23%)</title><rect x="794.2" y="71" width="2.7" height="15.0" fill="rgb(120.010680500212,148.150917166722,148.150917166722)" rx="2" ry="2" />
<text  x="797.23" y="81.5" ></text>
</g>
<g >
<title>HybridBreak (84,323 us, 1.76%)</title><rect x="796.9" y="151" width="20.8" height="15.0" fill="rgb(143.874099972589,143.874099972589,155.265954833404)" rx="2" ry="2" />
<text  x="799.90" y="161.5" ></text>
</g>
</g>
</svg>
