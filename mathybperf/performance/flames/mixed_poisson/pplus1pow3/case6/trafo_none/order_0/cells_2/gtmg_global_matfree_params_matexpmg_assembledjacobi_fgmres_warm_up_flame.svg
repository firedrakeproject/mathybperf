<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="283" onload="init(evt)" viewBox="0 0 1200 283" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:13px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:18px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 13 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (1 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="283.0" fill="url(#background)"  />
<text id="title" x="600.00" y="26" >Firedrake example</text>
<text id="details" x="10.00" y="265" > </text>
<text id="unzoom" x="10.00" y="26" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="26" >Search</text>
<text id="ignorecase" x="1174.00" y="26" >ic</text>
<text id="matched" x="1090.00" y="265" > </text>
<g id="frames">
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (1,009,082 us, 8.29%)</title><rect x="382.2" y="215" width="97.8" height="15.0" fill="rgb(152.850119094195,118.517579722158,118.517579722158)" rx="2" ry="2" />
<text  x="385.21" y="225.5" >pyop2.glob..</text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (8,440 us, 0.07%)</title><rect x="484.6" y="167" width="0.9" height="15.0" fill="rgb(114.66479442487,146.764946702744,146.764946702744)" rx="2" ry="2" />
<text  x="487.65" y="177.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (2,779 us, 0.02%)</title><rect x="381.3" y="119" width="0.2" height="15.0" fill="rgb(114.632768607375,146.756643713023,146.756643713023)" rx="2" ry="2" />
<text  x="384.25" y="129.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (6,622 us, 0.05%)</title><rect x="130.0" y="151" width="0.6" height="15.0" fill="rgb(126.293833312258,126.293833312258,151.863322576566)" rx="2" ry="2" />
<text  x="132.95" y="161.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (3,908 us, 0.03%)</title><rect x="1189.6" y="151" width="0.4" height="15.0" fill="rgb(148.724465342233,159.509970758241,148.724465342233)" rx="2" ry="2" />
<text  x="1192.62" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (2,246 us, 0.02%)</title><rect x="485.2" y="215" width="0.3" height="15.0" fill="rgb(110.515688101754,110.515688101754,148.809488019694)" rx="2" ry="2" />
<text  x="488.25" y="225.5" ></text>
</g>
<g >
<title>HybridInit (891,622 us, 7.32%)</title><rect x="481.5" y="119" width="86.4" height="15.0" fill="rgb(123.763951384206,149.123987395905,149.123987395905)" rx="2" ry="2" />
<text  x="484.45" y="129.5" >HybridInit</text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (1,770 us, 0.01%)</title><rect x="1189.8" y="167" width="0.2" height="15.0" fill="rgb(143.62609452552,143.62609452552,155.217953779133)" rx="2" ry="2" />
<text  x="1192.83" y="177.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (6,622 us, 0.05%)</title><rect x="130.0" y="135" width="0.6" height="15.0" fill="rgb(142.296767393599,117.760466446099,142.296767393599)" rx="2" ry="2" />
<text  x="132.95" y="145.5" ></text>
</g>
<g >
<title>firedrake.interpolation.make_interpolator (18,125 us, 0.15%)</title><rect x="485.5" y="135" width="1.7" height="15.0" fill="rgb(154.66471932536,154.66471932536,141.836716730589)" rx="2" ry="2" />
<text  x="488.47" y="145.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (4,632 us, 0.04%)</title><rect x="483.9" y="183" width="0.5" height="15.0" fill="rgb(153.802386245112,125.818294545857,125.818294545857)" rx="2" ry="2" />
<text  x="486.94" y="193.5" ></text>
</g>
<g >
<title>PCApply (1,031,103 us, 8.47%)</title><rect x="381.5" y="119" width="100.0" height="15.0" fill="rgb(140.467312248002,160.854158471255,140.467312248002)" rx="2" ry="2" />
<text  x="384.52" y="129.5" >PCApply</text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (11,167 us, 0.09%)</title><rect x="484.4" y="135" width="1.1" height="15.0" fill="rgb(138.145694711828,161.232096209702,138.145694711828)" rx="2" ry="2" />
<text  x="487.38" y="145.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (2,364,016 us, 19.42%)</title><rect x="840.2" y="151" width="229.2" height="15.0" fill="rgb(153.491903829834,123.437929362057,123.437929362057)" rx="2" ry="2" />
<text  x="843.25" y="161.5" >pyop2.global_kernel.GlobalK..</text>
</g>
<g >
<title>firedrake.functionspace.VectorFunctionSpace (6,622 us, 0.05%)</title><rect x="130.0" y="87" width="0.6" height="15.0" fill="rgb(121.786819765736,148.611397717043,148.611397717043)" rx="2" ry="2" />
<text  x="132.95" y="97.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (826,274 us, 6.79%)</title><rect x="487.8" y="183" width="80.1" height="15.0" fill="rgb(152.079896470963,112.612539610716,112.612539610716)" rx="2" ry="2" />
<text  x="490.79" y="193.5" >pyop2.gl..</text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (1,831 us, 0.02%)</title><rect x="483.8" y="183" width="0.1" height="15.0" fill="rgb(139.155425142391,139.155425142391,154.352662930785)" rx="2" ry="2" />
<text  x="486.76" y="193.5" ></text>
</g>
<g >
<title>SNESFunctionEval (6,419,323 us, 52.72%)</title><rect x="567.9" y="103" width="622.1" height="15.0" fill="rgb(118.843267406167,147.84825451271,147.84825451271)" rx="2" ry="2" />
<text  x="570.86" y="113.5" >SNESFunctionEval</text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (4,632 us, 0.04%)</title><rect x="483.9" y="167" width="0.5" height="15.0" fill="rgb(156.427255484057,145.942292044438,145.942292044438)" rx="2" ry="2" />
<text  x="486.94" y="177.5" ></text>
</g>
<g >
<title>firedrake.slate.slac.optimise.optimise (1,708 us, 0.01%)</title><rect x="481.3" y="167" width="0.2" height="15.0" fill="rgb(132.539253417581,162.144772699463,132.539253417581)" rx="2" ry="2" />
<text  x="484.29" y="177.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (1,831 us, 0.02%)</title><rect x="483.8" y="199" width="0.1" height="15.0" fill="rgb(113.565353070828,113.565353070828,149.399745755644)" rx="2" ry="2" />
<text  x="486.76" y="209.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (6,463 us, 0.05%)</title><rect x="483.8" y="135" width="0.6" height="15.0" fill="rgb(137.485348825156,161.3395943773,137.485348825156)" rx="2" ry="2" />
<text  x="486.76" y="145.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (17,654 us, 0.14%)</title><rect x="379.0" y="103" width="1.7" height="15.0" fill="rgb(126.690896099179,149.882824914602,149.882824914602)" rx="2" ry="2" />
<text  x="381.98" y="113.5" ></text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (1,244,797 us, 10.22%)</title><rect x="1069.4" y="119" width="120.6" height="15.0" fill="rgb(104.931653688853,144.241539845258,144.241539845258)" rx="2" ry="2" />
<text  x="1072.36" y="129.5" >firedrake.tsf..</text>
</g>
<g >
<title>SCForwardElim (1,031,103 us, 8.47%)</title><rect x="381.5" y="135" width="100.0" height="15.0" fill="rgb(139.031704158299,139.031704158299,154.328716933864)" rx="2" ry="2" />
<text  x="384.52" y="145.5" >SCForwardElim</text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (11,167 us, 0.09%)</title><rect x="484.4" y="151" width="1.1" height="15.0" fill="rgb(131.214756828448,162.360388423276,131.214756828448)" rx="2" ry="2" />
<text  x="487.38" y="161.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_form0_cell_integral_otherwise (2,806,864 us, 23.05%)</title><rect x="568.2" y="135" width="272.0" height="15.0" fill="rgb(144.366408998561,154.465365295923,154.465365295923)" rx="2" ry="2" />
<text  x="571.22" y="145.5" >Parloop_Cells_wrap_form0_cell_int..</text>
</g>
<g >
<title>firedrake.ufl_expr.action (4,242 us, 0.03%)</title><rect x="380.8" y="119" width="0.5" height="15.0" fill="rgb(152.588123922473,152.588123922473,131.773215931986)" rx="2" ry="2" />
<text  x="383.84" y="129.5" ></text>
</g>
<g >
<title>HybridRHS (14,938 us, 0.12%)</title><rect x="480.0" y="151" width="1.5" height="15.0" fill="rgb(144.214896130241,160.244086676472,144.214896130241)" rx="2" ry="2" />
<text  x="483.00" y="161.5" ></text>
</g>
<g >
<title>firedrake.mesh.MeshTopology._facets (4,654 us, 0.04%)</title><rect x="132.5" y="135" width="0.5" height="15.0" fill="rgb(119.752158462544,148.083892934734,148.083892934734)" rx="2" ry="2" />
<text  x="135.53" y="145.5" ></text>
</g>
<g >
<title>firedrake.matrix_free.operators.ImplicitMatrixContext.__init__ (7,021 us, 0.06%)</title><rect x="380.8" y="103" width="0.7" height="15.0" fill="rgb(128.865251200722,150.446546607595,150.446546607595)" rx="2" ry="2" />
<text  x="383.84" y="113.5" ></text>
</g>
<g >
<title>HybridBreak (1,016,165 us, 8.35%)</title><rect x="381.5" y="151" width="98.5" height="15.0" fill="rgb(152.681374952686,117.22387463726,117.22387463726)" rx="2" ry="2" />
<text  x="384.52" y="161.5" >HybridBreak</text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (22,839 us, 0.19%)</title><rect x="130.8" y="87" width="2.2" height="15.0" fill="rgb(145.081409340965,145.081409340965,155.49962761438)" rx="2" ry="2" />
<text  x="133.76" y="97.5" ></text>
</g>
<g >
<title>FunctionSpaceData: CreateElement (7,530 us, 0.06%)</title><rect x="131.8" y="135" width="0.7" height="15.0" fill="rgb(151.209564767609,151.209564767609,125.09250618149)" rx="2" ry="2" />
<text  x="134.80" y="145.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_pyop2_kernel_uniform_extrusion (1,200,137 us, 9.86%)</title><rect x="13.6" y="119" width="116.4" height="15.0" fill="rgb(151.012631232234,140.094867532598,151.012631232234)" rx="2" ry="2" />
<text  x="16.64" y="129.5" >Parloop_Cells..</text>
</g>
<g >
<title>firedrake.__init__ (2,526,769 us, 20.75%)</title><rect x="133.1" y="71" width="244.9" height="15.0" fill="rgb(140.503910790704,160.848200568955,140.503910790704)" rx="2" ry="2" />
<text  x="136.14" y="81.5" >firedrake.__init__</text>
</g>
<g >
<title>firedrake.utility_meshes.RectangleMesh (2,312 us, 0.02%)</title><rect x="378.0" y="87" width="0.2" height="15.0" fill="rgb(116.291927299221,147.186795966465,147.186795966465)" rx="2" ry="2" />
<text  x="381.02" y="97.5" ></text>
</g>
<g >
<title>firedrake.mesh._Facets.__init__ (2,634 us, 0.02%)</title><rect x="132.7" y="151" width="0.3" height="15.0" fill="rgb(149.217496517541,159.429709869237,149.217496517541)" rx="2" ry="2" />
<text  x="135.72" y="161.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (2,804,499 us, 23.03%)</title><rect x="568.4" y="151" width="271.8" height="15.0" fill="rgb(146.125437366565,159.933068335676,146.125437366565)" rx="2" ry="2" />
<text  x="571.45" y="161.5" >pyop2.global_kernel.GlobalKernel...</text>
</g>
<g >
<title>CreateFunctionSpace (5,563 us, 0.05%)</title><rect x="484.9" y="183" width="0.6" height="15.0" fill="rgb(125.075109419345,149.463917256867,149.463917256867)" rx="2" ry="2" />
<text  x="487.93" y="193.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (4,632 us, 0.04%)</title><rect x="483.9" y="151" width="0.5" height="15.0" fill="rgb(153.222994804712,121.376293502791,121.376293502791)" rx="2" ry="2" />
<text  x="486.94" y="161.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_form1_cell_integral_otherwise (2,364,016 us, 19.42%)</title><rect x="840.2" y="135" width="229.2" height="15.0" fill="rgb(153.319581498195,122.11679148616,122.11679148616)" rx="2" ry="2" />
<text  x="843.25" y="145.5" >Parloop_Cells_wrap_form1_ce..</text>
</g>
<g >
<title>ParLoopExecute (1,009,082 us, 8.29%)</title><rect x="382.2" y="183" width="97.8" height="15.0" fill="rgb(153.35273442265,153.35273442265,135.478636048229)" rx="2" ry="2" />
<text  x="385.21" y="193.5" >ParLoopExe..</text>
</g>
<g >
<title>KSPSolve (1,031,103 us, 8.47%)</title><rect x="381.5" y="103" width="100.0" height="15.0" fill="rgb(136.214169418598,161.546530559763,136.214169418598)" rx="2" ry="2" />
<text  x="384.52" y="113.5" >KSPSolve</text>
</g>
<g >
<title>CreateFunctionSpace (1,831 us, 0.02%)</title><rect x="483.8" y="167" width="0.1" height="15.0" fill="rgb(113.270474417053,113.270474417053,149.342672467817)" rx="2" ry="2" />
<text  x="486.76" y="177.5" ></text>
</g>
<g >
<title>SNESSolve (8,342,048 us, 68.52%)</title><rect x="381.5" y="87" width="808.5" height="15.0" fill="rgb(140.502933232535,140.502933232535,154.613470948233)" rx="2" ry="2" />
<text  x="384.52" y="97.5" >SNESSolve</text>
</g>
<g >
<title>firedrake.ufl_expr.action (5,825 us, 0.05%)</title><rect x="378.2" y="87" width="0.6" height="15.0" fill="rgb(146.307789615363,128.038710889368,146.307789615363)" rx="2" ry="2" />
<text  x="381.25" y="97.5" ></text>
</g>
<g >
<title>FunctionSpaceData: CreateElement (4,632 us, 0.04%)</title><rect x="483.9" y="199" width="0.5" height="15.0" fill="rgb(156.466108773194,146.240167261157,146.240167261157)" rx="2" ry="2" />
<text  x="486.94" y="209.5" ></text>
</g>
<g >
<title>Log_Event_form0_cell_integral_otherwise (2,365 us, 0.02%)</title><rect x="568.2" y="151" width="0.2" height="15.0" fill="rgb(153.331182313438,122.205731069693,122.205731069693)" rx="2" ry="2" />
<text  x="571.22" y="161.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (1,009,082 us, 8.29%)</title><rect x="382.2" y="199" width="97.8" height="15.0" fill="rgb(142.431325369416,142.431325369416,154.986708136016)" rx="2" ry="2" />
<text  x="385.21" y="209.5" >Parloop_Ce..</text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (22,839 us, 0.19%)</title><rect x="130.8" y="119" width="2.2" height="15.0" fill="rgb(153.430198643538,122.964856267124,122.964856267124)" rx="2" ry="2" />
<text  x="133.76" y="129.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalProblem.__init__ (19,358 us, 0.16%)</title><rect x="378.8" y="87" width="1.9" height="15.0" fill="rgb(105.41347271732,144.366455889676,144.366455889676)" rx="2" ry="2" />
<text  x="381.81" y="97.5" ></text>
</g>
<g >
<title>firedrake.assemble.allocate_matrix (7,021 us, 0.06%)</title><rect x="380.8" y="87" width="0.7" height="15.0" fill="rgb(155.879096071858,155.879096071858,147.721773271313)" rx="2" ry="2" />
<text  x="383.84" y="97.5" ></text>
</g>
<g >
<title>all (12,175,494 us, 100%)</title><rect x="10.0" y="39" width="1180.0" height="15.0" fill="rgb(136.696143046716,136.696143046716,153.876672847751)" rx="2" ry="2" />
<text  x="13.00" y="49.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (826,274 us, 6.79%)</title><rect x="487.8" y="167" width="80.1" height="15.0" fill="rgb(115.241228800971,146.914392652104,146.914392652104)" rx="2" ry="2" />
<text  x="490.79" y="177.5" >Parloop_..</text>
</g>
<g >
<title>firedrake.variational_solver.LinearVariationalProblem.__init__ (25,183 us, 0.21%)</title><rect x="378.2" y="71" width="2.5" height="15.0" fill="rgb(147.198333474477,159.758410829736,147.198333474477)" rx="2" ry="2" />
<text  x="381.25" y="81.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (2,246 us, 0.02%)</title><rect x="485.2" y="199" width="0.3" height="15.0" fill="rgb(126.398624518566,126.398624518566,151.883604745529)" rx="2" ry="2" />
<text  x="488.25" y="209.5" ></text>
</g>
<g >
<title>firedrake.functionspace.make_scalar_element (1,589 us, 0.01%)</title><rect x="485.1" y="199" width="0.1" height="15.0" fill="rgb(155.863960842377,141.62369979156,141.62369979156)" rx="2" ry="2" />
<text  x="488.10" y="209.5" ></text>
</g>
<g >
<title>firedrake (12,175,494 us, 100.00%)</title><rect x="10.0" y="55" width="1180.0" height="15.0" fill="rgb(142.866756137508,142.866756137508,155.070985058873)" rx="2" ry="2" />
<text  x="13.00" y="65.5" >firedrake</text>
</g>
<g >
<title>ParLoopExecute (826,274 us, 6.79%)</title><rect x="487.8" y="151" width="80.1" height="15.0" fill="rgb(143.583998541118,160.346790935167,143.583998541118)" rx="2" ry="2" />
<text  x="490.79" y="161.5" >ParLoopE..</text>
</g>
<g >
<title>firedrake.functionspace.MixedFunctionSpace (1,831 us, 0.02%)</title><rect x="483.8" y="151" width="0.1" height="15.0" fill="rgb(118.563352825551,147.775684065884,147.775684065884)" rx="2" ry="2" />
<text  x="486.76" y="161.5" ></text>
</g>
<g >
<title>firedrake.utility_meshes.SquareMesh (2,312 us, 0.02%)</title><rect x="378.0" y="71" width="0.2" height="15.0" fill="rgb(115.313166893896,115.313166893896,149.738032302044)" rx="2" ry="2" />
<text  x="381.02" y="81.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.solve (8,342,048 us, 68.52%)</title><rect x="381.5" y="71" width="808.5" height="15.0" fill="rgb(149.206779214307,149.206779214307,115.386699269332)" rx="2" ry="2" />
<text  x="384.52" y="81.5" >firedrake.variational_solver.NonlinearVariationalSolver.solve</text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.__init__ (8,617 us, 0.07%)</title><rect x="380.7" y="71" width="0.8" height="15.0" fill="rgb(145.311456929537,154.710377722473,154.710377722473)" rx="2" ry="2" />
<text  x="383.69" y="81.5" ></text>
</g>
<g >
<title>ParLoopExecute (5,170,880 us, 42.47%)</title><rect x="568.2" y="119" width="501.2" height="15.0" fill="rgb(153.391493661578,153.391493661578,135.666469283033)" rx="2" ry="2" />
<text  x="571.22" y="129.5" >ParLoopExecute</text>
</g>
<g >
<title>CreateMesh (1,651 us, 0.01%)</title><rect x="133.0" y="71" width="0.1" height="15.0" fill="rgb(150.610562273638,159.202931722896,150.610562273638)" rx="2" ry="2" />
<text  x="135.98" y="81.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (6,379 us, 0.05%)</title><rect x="1189.4" y="135" width="0.6" height="15.0" fill="rgb(110.828533699325,110.828533699325,148.870038780515)" rx="2" ry="2" />
<text  x="1192.38" y="145.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (1,831 us, 0.02%)</title><rect x="483.8" y="215" width="0.1" height="15.0" fill="rgb(154.335045788368,154.335045788368,140.239068051324)" rx="2" ry="2" />
<text  x="486.76" y="225.5" ></text>
</g>
<g >
<title>firedrake.extrusion_utils.make_extruded_coords (1,234,784 us, 10.14%)</title><rect x="10.3" y="87" width="119.7" height="15.0" fill="rgb(156.023730938583,142.848603862473,142.848603862473)" rx="2" ry="2" />
<text  x="13.28" y="97.5" >firedrake.ext..</text>
</g>
<g >
<title>firedrake.parloops.par_loop (832,077 us, 6.83%)</title><rect x="487.2" y="135" width="80.7" height="15.0" fill="rgb(155.197276165772,155.197276165772,144.417569111047)" rx="2" ry="2" />
<text  x="490.22" y="145.5" >firedrak..</text>
</g>
<g >
<title>ParLoopExecute (1,200,137 us, 9.86%)</title><rect x="13.6" y="103" width="116.4" height="15.0" fill="rgb(156.289218217024,144.884006330518,144.884006330518)" rx="2" ry="2" />
<text  x="16.64" y="113.5" >ParLoopExecute</text>
</g>
<g >
<title>CreateFunctionSpace (24,619 us, 0.20%)</title><rect x="130.6" y="71" width="2.4" height="15.0" fill="rgb(114.961301579611,114.961301579611,149.669929337989)" rx="2" ry="2" />
<text  x="133.59" y="81.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (1,200,137 us, 9.86%)</title><rect x="13.6" y="135" width="116.4" height="15.0" fill="rgb(140.620210602165,113.464289668048,140.620210602165)" rx="2" ry="2" />
<text  x="16.64" y="145.5" >pyop2.global_..</text>
</g>
<g >
<title>CreateFunctionSpace (6,622 us, 0.05%)</title><rect x="130.0" y="103" width="0.6" height="15.0" fill="rgb(153.325682949292,122.163569277908,122.163569277908)" rx="2" ry="2" />
<text  x="132.95" y="113.5" ></text>
</g>
<g >
<title>firedrake.parloops.par_loop (1,016,165 us, 8.35%)</title><rect x="381.5" y="167" width="98.5" height="15.0" fill="rgb(153.906356952852,126.615403305202,126.615403305202)" rx="2" ry="2" />
<text  x="384.52" y="177.5" >firedrake...</text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (2,246 us, 0.02%)</title><rect x="485.2" y="231" width="0.3" height="15.0" fill="rgb(148.539123392724,148.539123392724,112.151136441664)" rx="2" ry="2" />
<text  x="488.25" y="241.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (22,839 us, 0.19%)</title><rect x="130.8" y="103" width="2.2" height="15.0" fill="rgb(133.568397670013,133.568397670013,153.271302774841)" rx="2" ry="2" />
<text  x="133.76" y="113.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (6,622 us, 0.05%)</title><rect x="130.0" y="119" width="0.6" height="15.0" fill="rgb(144.788621243764,154.574827729865,154.574827729865)" rx="2" ry="2" />
<text  x="132.95" y="129.5" ></text>
</g>
<g >
<title>CreateExtMesh (1,244,295 us, 10.22%)</title><rect x="10.0" y="71" width="120.6" height="15.0" fill="rgb(129.666565449889,129.666565449889,152.516109441914)" rx="2" ry="2" />
<text  x="13.00" y="81.5" >CreateExtMesh</text>
</g>
<g >
<title>PCSetUp (891,622 us, 7.32%)</title><rect x="481.5" y="103" width="86.4" height="15.0" fill="rgb(131.700309545691,162.281344957678,131.700309545691)" rx="2" ry="2" />
<text  x="484.45" y="113.5" >PCSetUp</text>
</g>
</g>
</svg>
