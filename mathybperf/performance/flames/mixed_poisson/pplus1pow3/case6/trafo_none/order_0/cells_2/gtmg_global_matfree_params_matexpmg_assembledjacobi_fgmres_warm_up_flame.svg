<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="283" onload="init(evt)" viewBox="0 0 1200 283" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:13px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:18px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 13 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (1 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="283.0" fill="url(#background)"  />
<text id="title" x="600.00" y="26" >Firedrake example</text>
<text id="details" x="10.00" y="265" > </text>
<text id="unzoom" x="10.00" y="26" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="26" >Search</text>
<text id="ignorecase" x="1174.00" y="26" >ic</text>
<text id="matched" x="1090.00" y="265" > </text>
<g id="frames">
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (4,488 us, 0.04%)</title><rect x="488.4" y="183" width="0.5" height="15.0" fill="rgb(152.542773744108,116.161265371493,116.161265371493)" rx="2" ry="2" />
<text  x="491.43" y="193.5" ></text>
</g>
<g >
<title>firedrake.assemble.allocate_matrix (6,626 us, 0.06%)</title><rect x="374.3" y="87" width="0.6" height="15.0" fill="rgb(135.516446492252,161.660113361726,135.516446492252)" rx="2" ry="2" />
<text  x="377.28" y="97.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (7,049 us, 0.06%)</title><rect x="124.2" y="103" width="0.7" height="15.0" fill="rgb(126.140265631769,126.140265631769,151.833599799697)" rx="2" ry="2" />
<text  x="127.19" y="113.5" ></text>
</g>
<g >
<title>firedrake.matrix_free.operators.ImplicitMatrixContext.__init__ (6,626 us, 0.06%)</title><rect x="374.3" y="103" width="0.6" height="15.0" fill="rgb(138.665215046868,138.665215046868,154.257783557458)" rx="2" ry="2" />
<text  x="377.28" y="113.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_form0_cell_integral_otherwise (2,810,445 us, 23.34%)</title><rect x="569.1" y="135" width="275.4" height="15.0" fill="rgb(128.647388688257,162.778332074005,128.647388688257)" rx="2" ry="2" />
<text  x="572.10" y="145.5" >Parloop_Cells_wrap_form0_cell_int..</text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (4,488 us, 0.04%)</title><rect x="488.4" y="151" width="0.5" height="15.0" fill="rgb(142.245516220823,142.245516220823,154.950745074998)" rx="2" ry="2" />
<text  x="491.43" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (7,049 us, 0.06%)</title><rect x="124.2" y="151" width="0.7" height="15.0" fill="rgb(120.56728752188,148.295222690858,148.295222690858)" rx="2" ry="2" />
<text  x="127.19" y="161.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.solve (8,318,122 us, 69.07%)</title><rect x="374.9" y="71" width="815.1" height="15.0" fill="rgb(144.970633103486,160.121059727339,144.970633103486)" rx="2" ry="2" />
<text  x="377.93" y="81.5" >firedrake.variational_solver.NonlinearVariationalSolver.solve</text>
</g>
<g >
<title>HybridRHS (15,526 us, 0.13%)</title><rect x="484.9" y="151" width="1.5" height="15.0" fill="rgb(136.327044336201,161.528155573177,136.327044336201)" rx="2" ry="2" />
<text  x="487.86" y="161.5" ></text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (1,078,961 us, 8.96%)</title><rect x="1084.3" y="119" width="105.7" height="15.0" fill="rgb(122.836817856578,122.836817856578,151.194222810951)" rx="2" ry="2" />
<text  x="1087.28" y="129.5" >firedrake.t..</text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (3,424 us, 0.03%)</title><rect x="1189.7" y="151" width="0.3" height="15.0" fill="rgb(146.626729393488,159.851462656874,146.626729393488)" rx="2" ry="2" />
<text  x="1192.66" y="161.5" ></text>
</g>
<g >
<title>ParLoopExecute (5,257,556 us, 43.66%)</title><rect x="569.1" y="119" width="515.2" height="15.0" fill="rgb(113.0246542848,113.0246542848,149.295094377703)" rx="2" ry="2" />
<text  x="572.10" y="129.5" >ParLoopExecute</text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (18,453 us, 0.15%)</title><rect x="125.0" y="87" width="1.8" height="15.0" fill="rgb(131.953679174161,162.24009873909,131.953679174161)" rx="2" ry="2" />
<text  x="128.02" y="97.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (1,130,625 us, 9.39%)</title><rect x="13.4" y="135" width="110.8" height="15.0" fill="rgb(149.001918994733,149.001918994733,114.393915128321)" rx="2" ry="2" />
<text  x="16.40" y="145.5" >pyop2.global..</text>
</g>
<g >
<title>CreateExtMesh (1,172,407 us, 9.74%)</title><rect x="10.0" y="71" width="114.9" height="15.0" fill="rgb(148.13026753703,148.13026753703,110.169758064069)" rx="2" ry="2" />
<text  x="13.00" y="81.5" >CreateExtMesh</text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (1,942 us, 0.02%)</title><rect x="489.6" y="199" width="0.2" height="15.0" fill="rgb(154.320213747722,154.320213747722,140.1671897005)" rx="2" ry="2" />
<text  x="492.61" y="209.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (7,049 us, 0.06%)</title><rect x="124.2" y="119" width="0.7" height="15.0" fill="rgb(132.34758858238,132.34758858238,153.035017144977)" rx="2" ry="2" />
<text  x="127.19" y="129.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.derivative (1,457 us, 0.01%)</title><rect x="374.0" y="103" width="0.1" height="15.0" fill="rgb(147.721572064671,147.721572064671,108.189156928792)" rx="2" ry="2" />
<text  x="376.98" y="113.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (1,467 us, 0.01%)</title><rect x="1189.9" y="167" width="0.1" height="15.0" fill="rgb(148.614517314171,159.527869274437,148.614517314171)" rx="2" ry="2" />
<text  x="1192.86" y="177.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (2,540 us, 0.02%)</title><rect x="374.7" y="119" width="0.2" height="15.0" fill="rgb(153.30580918706,153.30580918706,135.251229137288)" rx="2" ry="2" />
<text  x="377.68" y="129.5" ></text>
</g>
<g >
<title>SNESSolve (8,318,122 us, 69.07%)</title><rect x="374.9" y="87" width="815.1" height="15.0" fill="rgb(141.280410830644,141.280410830644,154.76395048335)" rx="2" ry="2" />
<text  x="377.93" y="97.5" >SNESSolve</text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (1,115,678 us, 9.26%)</title><rect x="375.5" y="199" width="109.4" height="15.0" fill="rgb(144.623235956015,123.722042137289,144.623235956015)" rx="2" ry="2" />
<text  x="378.54" y="209.5" >Parloop_Cell..</text>
</g>
<g >
<title>firedrake.mesh.MeshTopology._facets (3,327 us, 0.03%)</title><rect x="126.5" y="135" width="0.3" height="15.0" fill="rgb(118.717130980759,147.815552476493,147.815552476493)" rx="2" ry="2" />
<text  x="129.51" y="145.5" ></text>
</g>
<g >
<title>FunctionSpaceData: CreateElement (6,621 us, 0.05%)</title><rect x="125.9" y="135" width="0.6" height="15.0" fill="rgb(148.982912878634,159.467897903478,148.982912878634)" rx="2" ry="2" />
<text  x="128.86" y="145.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (5,754 us, 0.05%)</title><rect x="1189.4" y="135" width="0.6" height="15.0" fill="rgb(109.257577599771,109.257577599771,148.565982761246)" rx="2" ry="2" />
<text  x="1192.44" y="145.5" ></text>
</g>
<g >
<title>all (12,042,345 us, 100%)</title><rect x="10.0" y="39" width="1180.0" height="15.0" fill="rgb(111.985732361725,146.070375056744,146.070375056744)" rx="2" ry="2" />
<text  x="13.00" y="49.5" ></text>
</g>
<g >
<title>firedrake.__init__ (2,501,170 us, 20.77%)</title><rect x="127.0" y="71" width="245.1" height="15.0" fill="rgb(141.761435926011,160.643487174835,141.761435926011)" rx="2" ry="2" />
<text  x="130.00" y="81.5" >firedrake.__init__</text>
</g>
<g >
<title>CreateFunctionSpace (4,713 us, 0.04%)</title><rect x="489.3" y="183" width="0.5" height="15.0" fill="rgb(149.288041005076,135.675605075508,149.288041005076)" rx="2" ry="2" />
<text  x="492.33" y="193.5" ></text>
</g>
<g >
<title>ParLoopExecute (1,130,625 us, 9.39%)</title><rect x="13.4" y="103" width="110.8" height="15.0" fill="rgb(122.297596395554,148.743821287736,148.743821287736)" rx="2" ry="2" />
<text  x="16.40" y="113.5" >ParLoopExecute</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (1,115,678 us, 9.26%)</title><rect x="375.5" y="215" width="109.4" height="15.0" fill="rgb(144.304313833674,160.229530306146,144.304313833674)" rx="2" ry="2" />
<text  x="378.54" y="225.5" >pyop2.global..</text>
</g>
<g >
<title>Log_Event_form0_cell_integral_otherwise (2,349 us, 0.02%)</title><rect x="569.1" y="151" width="0.2" height="15.0" fill="rgb(153.11472219617,120.546203503969,120.546203503969)" rx="2" ry="2" />
<text  x="572.10" y="161.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (788,313 us, 6.55%)</title><rect x="491.5" y="167" width="77.2" height="15.0" fill="rgb(149.295395503541,135.694450977824,149.295395503541)" rx="2" ry="2" />
<text  x="494.49" y="177.5" >Parloop_..</text>
</g>
<g >
<title>CreateFunctionSpace (19,901 us, 0.17%)</title><rect x="124.9" y="71" width="1.9" height="15.0" fill="rgb(154.863352757105,154.863352757105,142.799324899815)" rx="2" ry="2" />
<text  x="127.88" y="81.5" ></text>
</g>
<g >
<title>firedrake.utility_meshes.RectangleMesh (1,783 us, 0.01%)</title><rect x="372.1" y="87" width="0.2" height="15.0" fill="rgb(144.762300553806,144.762300553806,155.437864623317)" rx="2" ry="2" />
<text  x="375.08" y="97.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.__init__ (8,173 us, 0.07%)</title><rect x="374.1" y="71" width="0.8" height="15.0" fill="rgb(150.755126099866,150.755126099866,122.890226483967)" rx="2" ry="2" />
<text  x="377.13" y="81.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (18,453 us, 0.15%)</title><rect x="125.0" y="103" width="1.8" height="15.0" fill="rgb(123.779307519974,149.12796861629,149.12796861629)" rx="2" ry="2" />
<text  x="128.02" y="113.5" ></text>
</g>
<g >
<title>PCApply (1,137,439 us, 9.45%)</title><rect x="374.9" y="119" width="111.5" height="15.0" fill="rgb(141.137794679231,160.745010168497,141.137794679231)" rx="2" ry="2" />
<text  x="377.93" y="129.5" >PCApply</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (2,447,111 us, 20.32%)</title><rect x="844.5" y="151" width="239.8" height="15.0" fill="rgb(133.231730070295,133.231730070295,153.206141303928)" rx="2" ry="2" />
<text  x="847.49" y="161.5" >pyop2.global_kernel.GlobalKer..</text>
</g>
<g >
<title>firedrake.functionspace.MixedFunctionSpace (1,887 us, 0.02%)</title><rect x="488.2" y="151" width="0.2" height="15.0" fill="rgb(135.468875194671,152.158597272692,152.158597272692)" rx="2" ry="2" />
<text  x="491.25" y="161.5" ></text>
</g>
<g >
<title>FunctionSpaceData: CreateElement (4,488 us, 0.04%)</title><rect x="488.4" y="199" width="0.5" height="15.0" fill="rgb(135.305937612508,161.694382249127,135.305937612508)" rx="2" ry="2" />
<text  x="491.43" y="209.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (1,942 us, 0.02%)</title><rect x="489.6" y="231" width="0.2" height="15.0" fill="rgb(149.072575759515,149.072575759515,114.736328680728)" rx="2" ry="2" />
<text  x="492.61" y="241.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (9,411 us, 0.08%)</title><rect x="488.9" y="135" width="0.9" height="15.0" fill="rgb(136.318378523896,136.318378523896,153.803557133657)" rx="2" ry="2" />
<text  x="491.87" y="145.5" ></text>
</g>
<g >
<title>KSPSolve (1,137,439 us, 9.45%)</title><rect x="374.9" y="103" width="111.5" height="15.0" fill="rgb(134.365694729615,134.365694729615,153.425618334764)" rx="2" ry="2" />
<text  x="377.93" y="113.5" >KSPSolve</text>
</g>
<g >
<title>CreateMesh (1,730 us, 0.01%)</title><rect x="126.8" y="71" width="0.2" height="15.0" fill="rgb(119.718056297881,148.075051632784,148.075051632784)" rx="2" ry="2" />
<text  x="129.83" y="81.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (1,887 us, 0.02%)</title><rect x="488.2" y="199" width="0.2" height="15.0" fill="rgb(138.145090760149,138.145090760149,154.157114340674)" rx="2" ry="2" />
<text  x="491.25" y="209.5" ></text>
</g>
<g >
<title>HybridBreak (1,121,913 us, 9.32%)</title><rect x="374.9" y="151" width="110.0" height="15.0" fill="rgb(122.007226389895,122.007226389895,151.033656720625)" rx="2" ry="2" />
<text  x="377.93" y="161.5" >HybridBreak</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (2,808,096 us, 23.32%)</title><rect x="569.3" y="151" width="275.2" height="15.0" fill="rgb(151.542234519691,141.451975956707,151.542234519691)" rx="2" ry="2" />
<text  x="572.33" y="161.5" >pyop2.global_kernel.GlobalKernel...</text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalProblem.__init__ (12,663 us, 0.11%)</title><rect x="372.9" y="87" width="1.2" height="15.0" fill="rgb(146.686767480153,159.841689014859,146.686767480153)" rx="2" ry="2" />
<text  x="375.89" y="97.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_pyop2_kernel_uniform_extrusion (1,130,625 us, 9.39%)</title><rect x="13.4" y="119" width="110.8" height="15.0" fill="rgb(129.293293764463,162.673184736018,129.293293764463)" rx="2" ry="2" />
<text  x="16.40" y="129.5" >Parloop_Cell..</text>
</g>
<g >
<title>Parloop_Cells_wrap_form1_cell_integral_otherwise (2,447,111 us, 20.32%)</title><rect x="844.5" y="135" width="239.8" height="15.0" fill="rgb(116.625824565518,147.273361924394,147.273361924394)" rx="2" ry="2" />
<text  x="847.49" y="145.5" >Parloop_Cells_wrap_form1_cell..</text>
</g>
<g >
<title>firedrake.extrusion_utils.make_extruded_coords (1,162,365 us, 9.65%)</title><rect x="10.3" y="87" width="113.9" height="15.0" fill="rgb(113.487448122211,146.459708772425,146.459708772425)" rx="2" ry="2" />
<text  x="13.29" y="97.5" >firedrake.ex..</text>
</g>
<g >
<title>firedrake.slate.slac.optimise.optimise (1,891 us, 0.02%)</title><rect x="486.2" y="167" width="0.2" height="15.0" fill="rgb(125.130029422854,149.478155776296,149.478155776296)" rx="2" ry="2" />
<text  x="489.20" y="177.5" ></text>
</g>
<g >
<title>SNESFunctionEval (6,340,224 us, 52.65%)</title><rect x="568.7" y="103" width="621.3" height="15.0" fill="rgb(156.709549493549,148.106546117213,148.106546117213)" rx="2" ry="2" />
<text  x="571.74" y="113.5" >SNESFunctionEval</text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (1,887 us, 0.02%)</title><rect x="488.2" y="183" width="0.2" height="15.0" fill="rgb(139.758626247115,160.969525959772,139.758626247115)" rx="2" ry="2" />
<text  x="491.25" y="193.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (11,206 us, 0.09%)</title><rect x="372.9" y="103" width="1.1" height="15.0" fill="rgb(114.307626153569,146.672347521296,146.672347521296)" rx="2" ry="2" />
<text  x="375.89" y="113.5" ></text>
</g>
<g >
<title>firedrake.interpolation.make_interpolator (11,729 us, 0.10%)</title><rect x="489.8" y="135" width="1.1" height="15.0" fill="rgb(139.237311168392,161.054391205145,139.237311168392)" rx="2" ry="2" />
<text  x="492.80" y="145.5" ></text>
</g>
<g >
<title>firedrake.parloops.par_loop (793,896 us, 6.59%)</title><rect x="490.9" y="135" width="77.8" height="15.0" fill="rgb(145.652419456439,154.798775414632,154.798775414632)" rx="2" ry="2" />
<text  x="493.94" y="145.5" >firedrak..</text>
</g>
<g >
<title>CreateFunctionSpace (1,887 us, 0.02%)</title><rect x="488.2" y="167" width="0.2" height="15.0" fill="rgb(119.761900099696,119.761900099696,150.599077438651)" rx="2" ry="2" />
<text  x="491.25" y="177.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (6,887 us, 0.06%)</title><rect x="489.1" y="167" width="0.7" height="15.0" fill="rgb(153.235849546138,153.235849546138,134.912193954363)" rx="2" ry="2" />
<text  x="492.12" y="177.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (9,411 us, 0.08%)</title><rect x="488.9" y="151" width="0.9" height="15.0" fill="rgb(136.098812258247,136.098812258247,153.76106043708)" rx="2" ry="2" />
<text  x="491.87" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (1,887 us, 0.02%)</title><rect x="488.2" y="215" width="0.2" height="15.0" fill="rgb(154.601721065552,154.601721065552,141.531417471523)" rx="2" ry="2" />
<text  x="491.25" y="225.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (4,488 us, 0.04%)</title><rect x="488.4" y="167" width="0.5" height="15.0" fill="rgb(140.585574869385,160.834906416612,140.585574869385)" rx="2" ry="2" />
<text  x="491.43" y="177.5" ></text>
</g>
<g >
<title>HybridInit (840,459 us, 6.98%)</title><rect x="486.4" y="119" width="82.3" height="15.0" fill="rgb(155.136447237067,136.046095484184,136.046095484184)" rx="2" ry="2" />
<text  x="489.38" y="129.5" >HybridInit</text>
</g>
<g >
<title>firedrake (12,042,345 us, 100.00%)</title><rect x="10.0" y="55" width="1180.0" height="15.0" fill="rgb(142.21631693801,153.907934020966,153.907934020966)" rx="2" ry="2" />
<text  x="13.00" y="65.5" >firedrake</text>
</g>
<g >
<title>firedrake.ufl_expr.action (4,086 us, 0.03%)</title><rect x="374.3" y="119" width="0.4" height="15.0" fill="rgb(127.814451395923,127.814451395923,152.15763575405)" rx="2" ry="2" />
<text  x="377.28" y="129.5" ></text>
</g>
<g >
<title>firedrake.mesh._Facets.__init__ (1,753 us, 0.01%)</title><rect x="126.7" y="151" width="0.1" height="15.0" fill="rgb(149.315135198609,159.413815200226,149.315135198609)" rx="2" ry="2" />
<text  x="129.66" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspace.VectorFunctionSpace (7,049 us, 0.06%)</title><rect x="124.2" y="87" width="0.7" height="15.0" fill="rgb(143.929525380521,154.352099172728,154.352099172728)" rx="2" ry="2" />
<text  x="127.19" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (18,453 us, 0.15%)</title><rect x="125.0" y="119" width="1.8" height="15.0" fill="rgb(154.363147791693,130.117466402982,130.117466402982)" rx="2" ry="2" />
<text  x="128.02" y="129.5" ></text>
</g>
<g >
<title>firedrake.parloops.par_loop (1,121,913 us, 9.32%)</title><rect x="374.9" y="167" width="110.0" height="15.0" fill="rgb(154.060522422641,127.797338573584,127.797338573584)" rx="2" ry="2" />
<text  x="377.93" y="177.5" >firedrake.pa..</text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (1,942 us, 0.02%)</title><rect x="489.6" y="215" width="0.2" height="15.0" fill="rgb(153.266201166873,121.707542279358,121.707542279358)" rx="2" ry="2" />
<text  x="492.61" y="225.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (6,375 us, 0.05%)</title><rect x="488.2" y="135" width="0.7" height="15.0" fill="rgb(151.319963589899,151.319963589899,125.627515858743)" rx="2" ry="2" />
<text  x="491.25" y="145.5" ></text>
</g>
<g >
<title>SCForwardElim (1,137,439 us, 9.45%)</title><rect x="374.9" y="135" width="111.5" height="15.0" fill="rgb(111.203671787842,111.203671787842,148.942646152486)" rx="2" ry="2" />
<text  x="377.93" y="145.5" >SCForwardElim</text>
</g>
<g >
<title>ParLoopExecute (1,115,678 us, 9.26%)</title><rect x="375.5" y="183" width="109.4" height="15.0" fill="rgb(145.786640827537,126.703267120564,145.786640827537)" rx="2" ry="2" />
<text  x="378.54" y="193.5" >ParLoopExecute</text>
</g>
<g >
<title>firedrake.utility_meshes.SquareMesh (1,783 us, 0.01%)</title><rect x="372.1" y="71" width="0.2" height="15.0" fill="rgb(155.783139178226,155.783139178226,147.256751402171)" rx="2" ry="2" />
<text  x="375.08" y="81.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.LinearVariationalProblem.__init__ (19,059 us, 0.16%)</title><rect x="372.3" y="71" width="1.8" height="15.0" fill="rgb(132.531124766132,162.146095968304,132.531124766132)" rx="2" ry="2" />
<text  x="375.26" y="81.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.action (6,396 us, 0.05%)</title><rect x="372.3" y="87" width="0.6" height="15.0" fill="rgb(134.202586303051,134.202586303051,153.394048961881)" rx="2" ry="2" />
<text  x="375.26" y="97.5" ></text>
</g>
<g >
<title>ParLoopExecute (788,313 us, 6.55%)</title><rect x="491.5" y="151" width="77.2" height="15.0" fill="rgb(126.75530989845,163.086344900252,126.75530989845)" rx="2" ry="2" />
<text  x="494.49" y="161.5" >ParLoopE..</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (788,313 us, 6.55%)</title><rect x="491.5" y="183" width="77.2" height="15.0" fill="rgb(151.54575366973,151.54575366973,126.721729322539)" rx="2" ry="2" />
<text  x="494.49" y="193.5" >pyop2.gl..</text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (7,049 us, 0.06%)</title><rect x="124.2" y="135" width="0.7" height="15.0" fill="rgb(155.419907070666,155.419907070666,145.496472727071)" rx="2" ry="2" />
<text  x="127.19" y="145.5" ></text>
</g>
<g >
<title>PCSetUp (840,459 us, 6.98%)</title><rect x="486.4" y="103" width="82.3" height="15.0" fill="rgb(155.886471076682,155.886471076682,147.757513679307)" rx="2" ry="2" />
<text  x="489.38" y="113.5" >PCSetUp</text>
</g>
</g>
</svg>
