<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="283" onload="init(evt)" viewBox="0 0 1200 283" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:13px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:18px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 13 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (1 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="283.0" fill="url(#background)"  />
<text id="title" x="600.00" y="26" >Firedrake example</text>
<text id="details" x="10.00" y="265" > </text>
<text id="unzoom" x="10.00" y="26" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="26" >Search</text>
<text id="ignorecase" x="1174.00" y="26" >ic</text>
<text id="matched" x="1090.00" y="265" > </text>
<g id="frames">
<g >
<title>firedrake.parloops.par_loop (79,165 us, 2.30%)</title><rect x="1095.0" y="135" width="27.1" height="15.0" fill="rgb(129.0005734338,129.0005734338,152.387207761381)" rx="2" ry="2" />
<text  x="1097.97" y="145.5" >f..</text>
</g>
<g >
<title>firedrake.ufl_expr.derivative (939 us, 0.03%)</title><rect x="1042.2" y="103" width="0.3" height="15.0" fill="rgb(154.748538642745,154.748538642745,142.24291803792)" rx="2" ry="2" />
<text  x="1045.16" y="113.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (2,612 us, 0.08%)</title><rect x="1044.4" y="119" width="0.9" height="15.0" fill="rgb(138.901005730536,138.901005730536,154.303420463975)" rx="2" ry="2" />
<text  x="1047.42" y="129.5" ></text>
</g>
<g >
<title>CreateMesh (783 us, 0.02%)</title><rect x="1036.4" y="103" width="0.2" height="15.0" fill="rgb(137.660796581153,105.880791239204,137.660796581153)" rx="2" ry="2" />
<text  x="1039.36" y="113.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (1,267 us, 0.04%)</title><rect x="1189.6" y="183" width="0.4" height="15.0" fill="rgb(127.530672074488,162.960123150665,127.530672074488)" rx="2" ry="2" />
<text  x="1192.57" y="193.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (17,422 us, 0.51%)</title><rect x="59.6" y="119" width="6.0" height="15.0" fill="rgb(147.689181086293,147.689181086293,108.032185264344)" rx="2" ry="2" />
<text  x="62.61" y="129.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (1,951 us, 0.06%)</title><rect x="1081.6" y="183" width="0.7" height="15.0" fill="rgb(133.022842856603,133.022842856603,153.165711520633)" rx="2" ry="2" />
<text  x="1084.65" y="193.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (1,951 us, 0.06%)</title><rect x="1081.6" y="199" width="0.7" height="15.0" fill="rgb(156.68285680974,147.901902208008,147.901902208008)" rx="2" ry="2" />
<text  x="1084.65" y="209.5" ></text>
</g>
<g >
<title>firedrake.functionspace.MixedFunctionSpace (1,168 us, 0.03%)</title><rect x="1035.8" y="71" width="0.4" height="15.0" fill="rgb(154.435176789795,130.669688721765,130.669688721765)" rx="2" ry="2" />
<text  x="1038.75" y="81.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.WithGeometry.split (739 us, 0.02%)</title><rect x="1088.2" y="183" width="0.2" height="15.0" fill="rgb(153.804998530021,125.838322063495,125.838322063495)" rx="2" ry="2" />
<text  x="1091.15" y="193.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (71,226 us, 2.07%)</title><rect x="1153.2" y="151" width="24.4" height="15.0" fill="rgb(154.8489268169,133.841772262903,133.841772262903)" rx="2" ry="2" />
<text  x="1156.23" y="161.5" >p..</text>
</g>
<g >
<title>PetscBarrier (716 us, 0.02%)</title><rect x="66.2" y="71" width="0.2" height="15.0" fill="rgb(132.677076366295,162.122336405487,132.677076366295)" rx="2" ry="2" />
<text  x="69.15" y="81.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (10,166 us, 0.30%)</title><rect x="1084.9" y="135" width="3.5" height="15.0" fill="rgb(152.618242357009,116.739858070401,116.739858070401)" rx="2" ry="2" />
<text  x="1087.92" y="145.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (6,349 us, 0.18%)</title><rect x="56.1" y="103" width="2.2" height="15.0" fill="rgb(142.913083787912,154.088577278348,154.088577278348)" rx="2" ry="2" />
<text  x="59.08" y="113.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (18,151 us, 0.53%)</title><rect x="59.4" y="87" width="6.2" height="15.0" fill="rgb(151.470233256427,151.470233256427,126.355745781146)" rx="2" ry="2" />
<text  x="62.36" y="97.5" ></text>
</g>
<g >
<title>firedrake.mesh.MeshTopology._facets (3,134 us, 0.09%)</title><rect x="64.5" y="135" width="1.1" height="15.0" fill="rgb(140.342736782768,160.874438198154,140.342736782768)" rx="2" ry="2" />
<text  x="67.50" y="145.5" ></text>
</g>
<g >
<title>FunctionSpaceData: CreateElement (6,211 us, 0.18%)</title><rect x="62.4" y="135" width="2.1" height="15.0" fill="rgb(138.859545192251,161.115887991959,138.859545192251)" rx="2" ry="2" />
<text  x="65.38" y="145.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (102,452 us, 2.98%)</title><rect x="21.0" y="135" width="35.1" height="15.0" fill="rgb(141.683139773204,160.656233060176,141.683139773204)" rx="2" ry="2" />
<text  x="23.97" y="145.5" >py..</text>
</g>
<g >
<title>HybridRHS (14,977 us, 0.44%)</title><rect x="1070.8" y="151" width="5.2" height="15.0" fill="rgb(155.74614463638,140.720442212247,140.720442212247)" rx="2" ry="2" />
<text  x="1073.84" y="161.5" ></text>
</g>
<g >
<title>firedrake.mesh.make_mesh_from_coordinates (942 us, 0.03%)</title><rect x="58.6" y="87" width="0.3" height="15.0" fill="rgb(132.46927545163,162.156164461363,132.46927545163)" rx="2" ry="2" />
<text  x="61.56" y="97.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (10,166 us, 0.30%)</title><rect x="1084.9" y="151" width="3.5" height="15.0" fill="rgb(126.752619308847,163.086782903211,126.752619308847)" rx="2" ry="2" />
<text  x="1087.92" y="161.5" ></text>
</g>
<g >
<title>firedrake.mesh._from_cell_list (803 us, 0.02%)</title><rect x="1036.6" y="103" width="0.3" height="15.0" fill="rgb(154.87718283515,134.058401736151,134.058401736151)" rx="2" ry="2" />
<text  x="1039.63" y="113.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (6,349 us, 0.18%)</title><rect x="56.1" y="135" width="2.2" height="15.0" fill="rgb(135.626300304145,100.667394529371,135.626300304145)" rx="2" ry="2" />
<text  x="59.08" y="145.5" ></text>
</g>
<g >
<title>KSPSolve (89,456 us, 2.60%)</title><rect x="1045.3" y="103" width="30.7" height="15.0" fill="rgb(142.81616330588,160.47178736881,142.81616330588)" rx="2" ry="2" />
<text  x="1048.32" y="113.5" >K..</text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (10,469 us, 0.30%)</title><rect x="1038.6" y="103" width="3.6" height="15.0" fill="rgb(145.253463607325,160.075017552296,145.253463607325)" rx="2" ry="2" />
<text  x="1041.57" y="113.5" ></text>
</g>
<g >
<title>firedrake.interpolation.make_interpolator (17,824 us, 0.52%)</title><rect x="1088.9" y="135" width="6.1" height="15.0" fill="rgb(145.731170708438,159.997251280022,145.731170708438)" rx="2" ry="2" />
<text  x="1091.86" y="145.5" ></text>
</g>
<g >
<title>firedrake.utility_meshes.SquareMesh (2,205 us, 0.06%)</title><rect x="1036.2" y="71" width="0.7" height="15.0" fill="rgb(120.860804758179,148.371319752121,148.371319752121)" rx="2" ry="2" />
<text  x="1039.15" y="81.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (3,398 us, 0.10%)</title><rect x="1188.8" y="151" width="1.2" height="15.0" fill="rgb(123.654715834487,163.59109277113,123.654715834487)" rx="2" ry="2" />
<text  x="1191.84" y="161.5" ></text>
</g>
<g >
<title>firedrake.mesh.ExtrudedMeshTopology.__init__ (883 us, 0.03%)</title><rect x="58.3" y="87" width="0.3" height="15.0" fill="rgb(115.859503558689,115.859503558689,149.843774882327)" rx="2" ry="2" />
<text  x="61.26" y="97.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.solve (422,145 us, 12.26%)</title><rect x="1045.3" y="71" width="144.7" height="15.0" fill="rgb(150.571091866339,150.571091866339,121.998368275334)" rx="2" ry="2" />
<text  x="1048.32" y="81.5" >firedrake.variat..</text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (5,722 us, 0.17%)</title><rect x="1188.0" y="135" width="2.0" height="15.0" fill="rgb(132.527524990117,92.7267827871739,132.527524990117)" rx="2" ry="2" />
<text  x="1191.04" y="145.5" ></text>
</g>
<g >
<title>firedrake.slate.slac.optimise.optimise (1,658 us, 0.05%)</title><rect x="1075.4" y="167" width="0.6" height="15.0" fill="rgb(112.804179009864,146.282564928483,146.282564928483)" rx="2" ry="2" />
<text  x="1078.41" y="177.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (5,613 us, 0.16%)</title><rect x="1082.8" y="167" width="1.9" height="15.0" fill="rgb(104.125262069173,144.032475351267,144.032475351267)" rx="2" ry="2" />
<text  x="1085.80" y="177.5" ></text>
</g>
<g >
<title>PCApply (89,456 us, 2.60%)</title><rect x="1045.3" y="119" width="30.7" height="15.0" fill="rgb(154.889359750619,154.889359750619,142.925358791459)" rx="2" ry="2" />
<text  x="1048.32" y="129.5" >P..</text>
</g>
<g >
<title>firedrake.functionspace.make_scalar_element (1,305 us, 0.04%)</title><rect x="1086.8" y="199" width="0.5" height="15.0" fill="rgb(133.645962412349,161.964610770083,133.645962412349)" rx="2" ry="2" />
<text  x="1089.84" y="209.5" ></text>
</g>
<g >
<title>HybridBreak (74,479 us, 2.16%)</title><rect x="1045.3" y="151" width="25.5" height="15.0" fill="rgb(153.458904601422,123.184935277567,123.184935277567)" rx="2" ry="2" />
<text  x="1048.32" y="161.5" >H..</text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (681 us, 0.02%)</title><rect x="1189.8" y="199" width="0.2" height="15.0" fill="rgb(122.02740005968,148.673770385843,148.673770385843)" rx="2" ry="2" />
<text  x="1192.77" y="209.5" ></text>
</g>
<g >
<title>firedrake.mesh._Facets.__init__ (1,582 us, 0.05%)</title><rect x="65.0" y="151" width="0.6" height="15.0" fill="rgb(145.827986868861,159.98149050972,145.827986868861)" rx="2" ry="2" />
<text  x="68.04" y="161.5" ></text>
</g>
<g >
<title>Log_Event_form0_cell_integral_otherwise (2,463 us, 0.07%)</title><rect x="1123.6" y="151" width="0.9" height="15.0" fill="rgb(151.205323443796,151.205323443796,125.071952073783)" rx="2" ry="2" />
<text  x="1126.63" y="161.5" ></text>
</g>
<g >
<title>firedrake.function.Function.__init__ (1,325 us, 0.04%)</title><rect x="1088.4" y="135" width="0.5" height="15.0" fill="rgb(129.030414511145,150.489366725112,150.489366725112)" rx="2" ry="2" />
<text  x="1091.41" y="145.5" ></text>
</g>
<g >
<title>firedrake.__init__ (2,828,277 us, 82.15%)</title><rect x="66.4" y="71" width="969.4" height="15.0" fill="rgb(116.113606865689,147.140564742956,147.140564742956)" rx="2" ry="2" />
<text  x="69.40" y="81.5" >firedrake.__init__</text>
</g>
<g >
<title>CreateExtMesh (142,629 us, 4.14%)</title><rect x="10.0" y="71" width="48.9" height="15.0" fill="rgb(148.789033706604,148.789033706604,113.362240270468)" rx="2" ry="2" />
<text  x="13.00" y="81.5" >Crea..</text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (1,951 us, 0.06%)</title><rect x="1081.6" y="215" width="0.7" height="15.0" fill="rgb(140.040096864123,160.923705161654,140.040096864123)" rx="2" ry="2" />
<text  x="1084.65" y="225.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.action (4,114 us, 0.12%)</title><rect x="1043.0" y="119" width="1.4" height="15.0" fill="rgb(138.776462704325,161.129413048133,138.776462704325)" rx="2" ry="2" />
<text  x="1046.01" y="129.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (72,248 us, 2.10%)</title><rect x="1097.3" y="167" width="24.8" height="15.0" fill="rgb(152.191622110077,113.469102843922,113.469102843922)" rx="2" ry="2" />
<text  x="1100.34" y="177.5" >P..</text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (5,613 us, 0.16%)</title><rect x="1082.8" y="151" width="1.9" height="15.0" fill="rgb(133.631147898685,133.631147898685,153.283447980391)" rx="2" ry="2" />
<text  x="1085.80" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspace.MixedFunctionSpace (4,104 us, 0.12%)</title><rect x="1081.2" y="151" width="1.4" height="15.0" fill="rgb(155.183474245419,155.183474245419,144.350682881644)" rx="2" ry="2" />
<text  x="1084.16" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (17,422 us, 0.51%)</title><rect x="59.6" y="103" width="6.0" height="15.0" fill="rgb(151.026821652246,151.026821652246,124.206904930116)" rx="2" ry="2" />
<text  x="62.61" y="113.5" ></text>
</g>
<g >
<title>PCSetUp (134,583 us, 3.91%)</title><rect x="1076.0" y="103" width="46.1" height="15.0" fill="rgb(131.41848711946,151.108496660601,151.108496660601)" rx="2" ry="2" />
<text  x="1078.98" y="113.5" >PCSe..</text>
</g>
<g >
<title>Mesh: numbering (700 us, 0.02%)</title><rect x="65.9" y="87" width="0.3" height="15.0" fill="rgb(147.393980822481,159.726561261457,147.393980822481)" rx="2" ry="2" />
<text  x="68.91" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (1,842 us, 0.05%)</title><rect x="1087.5" y="231" width="0.7" height="15.0" fill="rgb(147.79869383595,147.79869383595,108.562900897297)" rx="2" ry="2" />
<text  x="1090.52" y="241.5" ></text>
</g>
<g >
<title>firedrake.functionspace.make_scalar_element (697 us, 0.02%)</title><rect x="1082.6" y="151" width="0.2" height="15.0" fill="rgb(125.008004192916,125.008004192916,151.614452424435)" rx="2" ry="2" />
<text  x="1085.56" y="161.5" ></text>
</g>
<g >
<title>firedrake.matrix_free.operators.ImplicitMatrixContext.__init__ (6,726 us, 0.20%)</title><rect x="1043.0" y="103" width="2.3" height="15.0" fill="rgb(154.643563409586,154.643563409586,141.734191907993)" rx="2" ry="2" />
<text  x="1046.01" y="113.5" ></text>
</g>
<g >
<title>firedrake.assemble.allocate_matrix (6,726 us, 0.20%)</title><rect x="1043.0" y="87" width="2.3" height="15.0" fill="rgb(154.71910585731,132.84647823938,132.84647823938)" rx="2" ry="2" />
<text  x="1046.01" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (2,521 us, 0.07%)</title><rect x="1087.3" y="199" width="0.9" height="15.0" fill="rgb(117.98841843641,117.98841843641,150.255822923176)" rx="2" ry="2" />
<text  x="1090.29" y="209.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_form1_cell_integral_otherwise (71,917 us, 2.09%)</title><rect x="1153.0" y="135" width="24.6" height="15.0" fill="rgb(123.554368972199,123.554368972199,151.333103672039)" rx="2" ry="2" />
<text  x="1155.99" y="145.5" >P..</text>
</g>
<g >
<title>firedrake.ufl_expr.action (4,845 us, 0.14%)</title><rect x="1036.9" y="87" width="1.7" height="15.0" fill="rgb(155.271466253488,137.08124127674,137.08124127674)" rx="2" ry="2" />
<text  x="1039.91" y="97.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_form0_cell_integral_otherwise (85,665 us, 2.49%)</title><rect x="1123.6" y="135" width="29.4" height="15.0" fill="rgb(107.981615341426,145.032270644074,145.032270644074)" rx="2" ry="2" />
<text  x="1126.63" y="145.5" >P..</text>
</g>
<g >
<title>firedrake.extrusion_utils.make_extruded_coords (133,848 us, 3.89%)</title><rect x="10.2" y="87" width="45.9" height="15.0" fill="rgb(137.576327218139,105.664338496481,137.576327218139)" rx="2" ry="2" />
<text  x="13.21" y="97.5" >fir..</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (83,202 us, 2.42%)</title><rect x="1124.5" y="151" width="28.5" height="15.0" fill="rgb(154.872414934211,154.872414934211,142.843241604255)" rx="2" ry="2" />
<text  x="1127.47" y="161.5" >p..</text>
</g>
<g >
<title>firedrake.functionspace.VectorFunctionSpace (6,349 us, 0.18%)</title><rect x="56.1" y="87" width="2.2" height="15.0" fill="rgb(144.10464846724,160.262033970449,144.10464846724)" rx="2" ry="2" />
<text  x="59.08" y="97.5" ></text>
</g>
<g >
<title>HybridInit (134,583 us, 3.91%)</title><rect x="1076.0" y="119" width="46.1" height="15.0" fill="rgb(106.611398169301,144.677029155004,144.677029155004)" rx="2" ry="2" />
<text  x="1078.98" y="129.5" >Hybr..</text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (5,613 us, 0.16%)</title><rect x="1082.8" y="183" width="1.9" height="15.0" fill="rgb(134.652047925029,98.170872807888,134.652047925029)" rx="2" ry="2" />
<text  x="1085.80" y="193.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (67,628 us, 1.96%)</title><rect x="1047.7" y="215" width="23.1" height="15.0" fill="rgb(134.960343582534,98.9608804302422,134.960343582534)" rx="2" ry="2" />
<text  x="1050.66" y="225.5" >p..</text>
</g>
<g >
<title>Parloop_Cells_wrap_pyop2_kernel_uniform_extrusion (102,452 us, 2.98%)</title><rect x="21.0" y="119" width="35.1" height="15.0" fill="rgb(120.939392175708,148.391694267776,148.391694267776)" rx="2" ry="2" />
<text  x="23.97" y="129.5" >Pa..</text>
</g>
<g >
<title>ParLoopExecute (72,248 us, 2.10%)</title><rect x="1097.3" y="151" width="24.8" height="15.0" fill="rgb(153.38187387256,122.594366356295,122.594366356295)" rx="2" ry="2" />
<text  x="1100.34" y="161.5" >P..</text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (67,628 us, 1.96%)</title><rect x="1047.7" y="199" width="23.1" height="15.0" fill="rgb(133.559936109969,133.559936109969,153.269665053542)" rx="2" ry="2" />
<text  x="1050.66" y="209.5" >P..</text>
</g>
<g >
<title>SCForwardElim (89,456 us, 2.60%)</title><rect x="1045.3" y="135" width="30.7" height="15.0" fill="rgb(149.426831762275,149.426831762275,116.453107771025)" rx="2" ry="2" />
<text  x="1048.32" y="145.5" >S..</text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalProblem.__init__ (11,408 us, 0.33%)</title><rect x="1038.6" y="87" width="3.9" height="15.0" fill="rgb(153.533277168423,123.75512495791,123.75512495791)" rx="2" ry="2" />
<text  x="1041.57" y="97.5" ></text>
</g>
<g >
<title>firedrake.mesh._Facets.__init__ (570 us, 0.02%)</title><rect x="58.1" y="167" width="0.2" height="15.0" fill="rgb(150.949161225867,150.949161225867,123.830550556126)" rx="2" ry="2" />
<text  x="61.06" y="177.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (714 us, 0.02%)</title><rect x="1082.3" y="167" width="0.3" height="15.0" fill="rgb(130.638536970181,162.454191656017,130.638536970181)" rx="2" ry="2" />
<text  x="1085.32" y="177.5" ></text>
</g>
<g >
<title>firedrake (3,442,877 us, 100.00%)</title><rect x="10.0" y="55" width="1180.0" height="15.0" fill="rgb(155.112141973966,135.859755133736,135.859755133736)" rx="2" ry="2" />
<text  x="13.00" y="65.5" >firedrake</text>
</g>
<g >
<title>CreateMesh (1,673 us, 0.05%)</title><rect x="65.6" y="71" width="0.6" height="15.0" fill="rgb(151.758805764887,151.758805764887,127.754212552915)" rx="2" ry="2" />
<text  x="68.58" y="81.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.__init__ (8,279 us, 0.24%)</title><rect x="1042.5" y="71" width="2.8" height="15.0" fill="rgb(153.466437567043,123.242688013996,123.242688013996)" rx="2" ry="2" />
<text  x="1045.48" y="81.5" ></text>
</g>
<g >
<title>ParLoopExecute (67,628 us, 1.96%)</title><rect x="1047.7" y="183" width="23.1" height="15.0" fill="rgb(154.957932084567,134.677479315012,134.677479315012)" rx="2" ry="2" />
<text  x="1050.66" y="193.5" >P..</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (72,248 us, 2.10%)</title><rect x="1097.3" y="183" width="24.8" height="15.0" fill="rgb(120.82616515057,148.362339113111,148.362339113111)" rx="2" ry="2" />
<text  x="1100.34" y="193.5" >p..</text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (6,349 us, 0.18%)</title><rect x="56.1" y="119" width="2.2" height="15.0" fill="rgb(151.683017647832,151.683017647832,127.386931677955)" rx="2" ry="2" />
<text  x="59.08" y="129.5" ></text>
</g>
<g >
<title>ParLoopExecute (158,349 us, 4.60%)</title><rect x="1123.4" y="119" width="54.2" height="15.0" fill="rgb(150.432245903024,150.432245903024,121.325499376191)" rx="2" ry="2" />
<text  x="1126.37" y="129.5" >ParLo..</text>
</g>
<g >
<title>SNESSolve (422,145 us, 12.26%)</title><rect x="1045.3" y="87" width="144.7" height="15.0" fill="rgb(141.927617046225,153.833085900873,153.833085900873)" rx="2" ry="2" />
<text  x="1048.32" y="97.5" >SNESSolve</text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (6,349 us, 0.18%)</title><rect x="56.1" y="151" width="2.2" height="15.0" fill="rgb(139.947320781305,111.740009502093,139.947320781305)" rx="2" ry="2" />
<text  x="59.08" y="161.5" ></text>
</g>
<g >
<title>all (3,442,877 us, 100%)</title><rect x="10.0" y="39" width="1180.0" height="15.0" fill="rgb(132.550319570368,92.7851938990677,132.550319570368)" rx="2" ry="2" />
<text  x="13.00" y="49.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (1,267 us, 0.04%)</title><rect x="1189.6" y="167" width="0.4" height="15.0" fill="rgb(113.137365404595,146.368946586376,146.368946586376)" rx="2" ry="2" />
<text  x="1192.57" y="177.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (19,532 us, 0.57%)</title><rect x="58.9" y="71" width="6.7" height="15.0" fill="rgb(156.377090028064,145.557690215154,145.557690215154)" rx="2" ry="2" />
<text  x="61.88" y="81.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (5,196 us, 0.15%)</title><rect x="1086.4" y="183" width="1.8" height="15.0" fill="rgb(127.515756205808,127.515756205808,152.099823781769)" rx="2" ry="2" />
<text  x="1089.37" y="193.5" ></text>
</g>
<g >
<title>firedrake.utility_meshes.RectangleMesh (2,205 us, 0.06%)</title><rect x="1036.2" y="87" width="0.7" height="15.0" fill="rgb(143.841517923576,154.329282424631,154.329282424631)" rx="2" ry="2" />
<text  x="1039.15" y="97.5" ></text>
</g>
<g >
<title>SNESFunctionEval (198,106 us, 5.75%)</title><rect x="1122.1" y="103" width="67.9" height="15.0" fill="rgb(152.698929508161,117.358459562569,117.358459562569)" rx="2" ry="2" />
<text  x="1125.10" y="113.5" >SNESFu..</text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (7,450 us, 0.22%)</title><rect x="1085.9" y="167" width="2.5" height="15.0" fill="rgb(149.708711193371,149.708711193371,117.819138860181)" rx="2" ry="2" />
<text  x="1088.85" y="177.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.LinearVariationalProblem.__init__ (16,253 us, 0.47%)</title><rect x="1036.9" y="71" width="5.6" height="15.0" fill="rgb(129.867760374436,150.706456393372,150.706456393372)" rx="2" ry="2" />
<text  x="1039.91" y="81.5" ></text>
</g>
<g >
<title>FunctionSpaceData: CreateElement (844 us, 0.02%)</title><rect x="57.8" y="167" width="0.3" height="15.0" fill="rgb(136.610019602541,103.188175231511,136.610019602541)" rx="2" ry="2" />
<text  x="60.77" y="177.5" ></text>
</g>
<g >
<title>firedrake.parloops.par_loop (73,751 us, 2.14%)</title><rect x="1045.6" y="167" width="25.2" height="15.0" fill="rgb(149.669002913612,149.669002913612,117.626706427503)" rx="2" ry="2" />
<text  x="1048.56" y="177.5" >f..</text>
</g>
<g >
<title>ParLoopExecute (102,452 us, 2.98%)</title><rect x="21.0" y="103" width="35.1" height="15.0" fill="rgb(131.217668921517,162.359914361614,131.217668921517)" rx="2" ry="2" />
<text  x="23.97" y="113.5" >Pa..</text>
</g>
<g >
<title>FunctionSpaceData: CreateElement (5,613 us, 0.16%)</title><rect x="1082.8" y="199" width="1.9" height="15.0" fill="rgb(146.818812386869,159.82019333237,146.818812386869)" rx="2" ry="2" />
<text  x="1085.80" y="209.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (1,842 us, 0.05%)</title><rect x="1087.5" y="215" width="0.7" height="15.0" fill="rgb(152.534230041281,116.095763649823,116.095763649823)" rx="2" ry="2" />
<text  x="1090.52" y="225.5" ></text>
</g>
<g >
<title>firedrake.functionspace.make_scalar_element (737 us, 0.02%)</title><rect x="59.1" y="87" width="0.3" height="15.0" fill="rgb(127.392124821058,162.982677354712,127.392124821058)" rx="2" ry="2" />
<text  x="62.10" y="97.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (10,414 us, 0.30%)</title><rect x="1081.2" y="135" width="3.5" height="15.0" fill="rgb(149.894045575325,149.894045575325,118.717297788115)" rx="2" ry="2" />
<text  x="1084.16" y="145.5" ></text>
</g>
<g >
<title>firedrake.function.Function.split (939 us, 0.03%)</title><rect x="1042.2" y="119" width="0.3" height="15.0" fill="rgb(135.212935167469,135.212935167469,153.589600354994)" rx="2" ry="2" />
<text  x="1045.16" y="129.5" ></text>
</g>
<g >
<title>firedrake.assemble.allocate_matrix (576 us, 0.02%)</title><rect x="1084.7" y="135" width="0.2" height="15.0" fill="rgb(141.991003501487,153.849519426311,153.849519426311)" rx="2" ry="2" />
<text  x="1087.72" y="145.5" ></text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (36,064 us, 1.05%)</title><rect x="1177.6" y="119" width="12.4" height="15.0" fill="rgb(152.020130113676,152.020130113676,129.020630550891)" rx="2" ry="2" />
<text  x="1180.64" y="129.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (2,567 us, 0.07%)</title><rect x="1081.4" y="167" width="0.9" height="15.0" fill="rgb(127.595550040648,162.94956162129,127.595550040648)" rx="2" ry="2" />
<text  x="1084.44" y="177.5" ></text>
</g>
</g>
</svg>
