<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="411" onload="init(evt)" viewBox="0 0 1200 411" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:13px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:18px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 13 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (1 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="411.0" fill="url(#background)"  />
<text id="title" x="600.00" y="26" >Firedrake example</text>
<text id="details" x="10.00" y="393" > </text>
<text id="unzoom" x="10.00" y="26" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="26" >Search</text>
<text id="ignorecase" x="1174.00" y="26" >ic</text>
<text id="matched" x="1090.00" y="393" > </text>
<g id="frames">
<g >
<title>Parloop_Cells_wrap_expression_kernel (1,523,695 us, 0.25%)</title><rect x="1150.6" y="183" width="3.0" height="15.0" fill="rgb(148.568041255893,148.568041255893,112.29127685548)" rx="2" ry="2" />
<text  x="1153.62" y="193.5" ></text>
</g>
<g >
<title>firedrake (599,395,469 us, 100.00%)</title><rect x="10.0" y="55" width="1180.0" height="15.0" fill="rgb(148.600002663312,159.530232124577,148.600002663312)" rx="2" ry="2" />
<text  x="13.00" y="65.5" >firedrake</text>
</g>
<g >
<title>KSPSetUp (334,866,853 us, 55.87%)</title><rect x="491.4" y="199" width="659.2" height="15.0" fill="rgb(153.004340563705,153.004340563705,133.790265808722)" rx="2" ry="2" />
<text  x="494.38" y="209.5" >KSPSetUp</text>
</g>
<g >
<title>HybridInit (1,164,067 us, 0.19%)</title><rect x="1163.8" y="119" width="2.3" height="15.0" fill="rgb(126.9561853298,149.951603604022,149.951603604022)" rx="2" ry="2" />
<text  x="1166.82" y="129.5" ></text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (1,823,403 us, 0.30%)</title><rect x="1186.4" y="119" width="3.6" height="15.0" fill="rgb(155.983637651501,142.541221994842,142.541221994842)" rx="2" ry="2" />
<text  x="1189.41" y="129.5" ></text>
</g>
<g >
<title>SCSolve (341,574,593 us, 56.99%)</title><rect x="491.4" y="135" width="672.4" height="15.0" fill="rgb(125.335566721457,163.317465882554,125.335566721457)" rx="2" ry="2" />
<text  x="494.38" y="145.5" >SCSolve</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (4,884,078 us, 0.81%)</title><rect x="1176.8" y="151" width="9.6" height="15.0" fill="rgb(154.66340038041,154.66340038041,141.83032492045)" rx="2" ry="2" />
<text  x="1179.80" y="161.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (1,595,890 us, 0.27%)</title><rect x="10.1" y="135" width="3.2" height="15.0" fill="rgb(148.014066431288,159.625617092581,148.014066431288)" rx="2" ry="2" />
<text  x="13.13" y="145.5" ></text>
</g>
<g >
<title>PCSetUp (62,696,220 us, 10.46%)</title><rect x="1027.2" y="215" width="123.4" height="15.0" fill="rgb(140.483551712021,153.458698592005,153.458698592005)" rx="2" ry="2" />
<text  x="1030.19" y="225.5" >PCSetUp</text>
</g>
<g >
<title>ParLoopExecute (145,735,389 us, 24.31%)</title><rect x="83.1" y="167" width="286.9" height="15.0" fill="rgb(148.953802316244,148.953802316244,114.1607343018)" rx="2" ry="2" />
<text  x="86.08" y="177.5" >ParLoopExecute</text>
</g>
<g >
<title>Log_Event_tensorshell_knl_109 (109,560 us, 0.02%)</title><rect x="564.9" y="327" width="0.2" height="15.0" fill="rgb(156.658530157824,147.715397876652,147.715397876652)" rx="2" ry="2" />
<text  x="567.90" y="337.5" ></text>
</g>
<g >
<title>Log_Event_mtf_solve_170 (284,470 us, 0.05%)</title><rect x="564.2" y="343" width="0.6" height="15.0" fill="rgb(145.668504179467,160.007452807994,145.668504179467)" rx="2" ry="2" />
<text  x="567.21" y="353.5" ></text>
</g>
<g >
<title>Log_Event_slate_loopy_knl_0 (69,671 us, 0.01%)</title><rect x="83.1" y="199" width="0.1" height="15.0" fill="rgb(142.00004964173,153.85186472193,153.85186472193)" rx="2" ry="2" />
<text  x="86.08" y="209.5" ></text>
</g>
<g >
<title>firedrake.matrix_free.operators.ImplicitMatrixContext.mult (272,170,633 us, 45.41%)</title><rect x="491.4" y="247" width="535.8" height="15.0" fill="rgb(128.77450461253,128.77450461253,152.343452505651)" rx="2" ry="2" />
<text  x="494.38" y="257.5" >firedrake.matrix_free.operators.ImplicitMatrixContext.mult</text>
</g>
<g >
<title>KSPSolve (334,866,853 us, 55.87%)</title><rect x="491.4" y="151" width="659.2" height="15.0" fill="rgb(155.588721913677,139.513534671521,139.513534671521)" rx="2" ry="2" />
<text  x="494.38" y="161.5" >KSPSolve</text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (11,049,522 us, 1.84%)</title><rect x="1128.9" y="231" width="21.7" height="15.0" fill="rgb(152.431148326338,115.305470501927,115.305470501927)" rx="2" ry="2" />
<text  x="1131.87" y="241.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.solve (594,609,739 us, 99.20%)</title><rect x="19.4" y="71" width="1170.6" height="15.0" fill="rgb(115.26796935405,115.26796935405,149.729284391106)" rx="2" ry="2" />
<text  x="22.42" y="81.5" >firedrake.variational_solver.NonlinearVariationalSolver.solve</text>
</g>
<g >
<title>ParLoopExecute (1,428,460 us, 0.24%)</title><rect x="19.4" y="183" width="2.8" height="15.0" fill="rgb(124.141097692789,149.221766068501,149.221766068501)" rx="2" ry="2" />
<text  x="22.42" y="193.5" ></text>
</g>
<g >
<title>HybridRHS (238,310,607 us, 39.76%)</title><rect x="22.2" y="151" width="469.2" height="15.0" fill="rgb(156.043520378662,143.000322903074,143.000322903074)" rx="2" ry="2" />
<text  x="25.23" y="161.5" >HybridRHS</text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (322,382 us, 0.05%)</title><rect x="1163.2" y="167" width="0.6" height="15.0" fill="rgb(129.038116697518,129.038116697518,152.39447419952)" rx="2" ry="2" />
<text  x="1166.19" y="177.5" ></text>
</g>
<g >
<title>ParLoopExecute (1,061,452 us, 0.18%)</title><rect x="1164.0" y="151" width="2.1" height="15.0" fill="rgb(142.45262626085,142.45262626085,154.990830889197)" rx="2" ry="2" />
<text  x="1167.03" y="161.5" ></text>
</g>
<g >
<title>ParLoopExecute (1,595,890 us, 0.27%)</title><rect x="10.1" y="103" width="3.2" height="15.0" fill="rgb(144.245422071234,144.245422071234,155.33782362669)" rx="2" ry="2" />
<text  x="13.13" y="113.5" ></text>
</g>
<g >
<title>firedrake.parloops.par_loop (1,428,460 us, 0.24%)</title><rect x="19.4" y="167" width="2.8" height="15.0" fill="rgb(146.692063142898,159.840826930226,146.692063142898)" rx="2" ry="2" />
<text  x="22.42" y="177.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (1,428,460 us, 0.24%)</title><rect x="19.4" y="199" width="2.8" height="15.0" fill="rgb(137.133428192848,104.529409744172,137.133428192848)" rx="2" ry="2" />
<text  x="22.42" y="209.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (1,061,452 us, 0.18%)</title><rect x="1164.0" y="183" width="2.1" height="15.0" fill="rgb(153.118387572382,120.574304721593,120.574304721593)" rx="2" ry="2" />
<text  x="1167.03" y="193.5" ></text>
</g>
<g >
<title>ParLoopExecute (6,385,358 us, 1.07%)</title><rect x="1150.6" y="167" width="12.6" height="15.0" fill="rgb(136.024632176317,101.688119951813,136.024632176317)" rx="2" ry="2" />
<text  x="1153.62" y="177.5" ></text>
</g>
<g >
<title>Log_Event_mtf_solve_144 (635,742 us, 0.11%)</title><rect x="563.5" y="311" width="1.3" height="15.0" fill="rgb(124.237568268967,149.246776958621,149.246776958621)" rx="2" ry="2" />
<text  x="566.52" y="321.5" ></text>
</g>
<g >
<title>SCForwardElim (239,739,067 us, 40.00%)</title><rect x="19.4" y="135" width="472.0" height="15.0" fill="rgb(114.25670716117,146.659146301044,146.659146301044)" rx="2" ry="2" />
<text  x="22.42" y="145.5" >SCForwardElim</text>
</g>
<g >
<title>firedrake.__init__ (3,125,066 us, 0.52%)</title><rect x="13.3" y="71" width="6.1" height="15.0" fill="rgb(107.711612706425,144.962269960925,144.962269960925)" rx="2" ry="2" />
<text  x="16.27" y="81.5" ></text>
</g>
<g >
<title>SNESSolve (594,609,739 us, 99.20%)</title><rect x="19.4" y="87" width="1170.6" height="15.0" fill="rgb(155.752798170794,140.771452642753,140.771452642753)" rx="2" ry="2" />
<text  x="22.42" y="97.5" >SNESSolve</text>
</g>
<g >
<title>Parloop_Cells_wrap_wrap_slate_loopy_knl_86 (46,406,306 us, 7.74%)</title><rect x="1037.5" y="247" width="91.4" height="15.0" fill="rgb(135.862028769561,135.862028769561,153.715231374754)" rx="2" ry="2" />
<text  x="1040.51" y="257.5" >Parloop_C..</text>
</g>
<g >
<title>Parloop_Cells_wrap_form00_cell_integral_otherwise (4,861,663 us, 0.81%)</title><rect x="1153.6" y="183" width="9.6" height="15.0" fill="rgb(117.298340175221,117.298340175221,150.122259388752)" rx="2" ry="2" />
<text  x="1156.62" y="193.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_form1_cell_integral_otherwise (4,884,078 us, 0.81%)</title><rect x="1176.8" y="135" width="9.6" height="15.0" fill="rgb(112.784971479046,112.784971479046,149.248704157235)" rx="2" ry="2" />
<text  x="1179.80" y="145.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (1,428,460 us, 0.24%)</title><rect x="19.4" y="215" width="2.8" height="15.0" fill="rgb(125.023752822168,125.023752822168,151.617500546226)" rx="2" ry="2" />
<text  x="22.42" y="225.5" ></text>
</g>
<g >
<title>MatMult (272,170,633 us, 45.41%)</title><rect x="491.4" y="231" width="535.8" height="15.0" fill="rgb(138.382003866201,138.382003866201,154.202968490232)" rx="2" ry="2" />
<text  x="494.38" y="241.5" >MatMult</text>
</g>
<g >
<title>PCApply (581,313,660 us, 96.98%)</title><rect x="19.4" y="119" width="1144.4" height="15.0" fill="rgb(148.405357135167,148.405357135167,111.502884578118)" rx="2" ry="2" />
<text  x="22.42" y="129.5" >PCApply</text>
</g>
<g >
<title>Log_Event_slate_loopy_knl_96 (1,049,521 us, 0.18%)</title><rect x="563.1" y="295" width="2.0" height="15.0" fill="rgb(147.930160971863,147.930160971863,109.200010863643)" rx="2" ry="2" />
<text  x="566.05" y="305.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_form0_cell_integral_otherwise (5,424,531 us, 0.91%)</title><rect x="1166.1" y="135" width="10.7" height="15.0" fill="rgb(156.175557478423,144.012607334579,144.012607334579)" rx="2" ry="2" />
<text  x="1169.12" y="145.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (170,567,124 us, 28.46%)</title><rect x="565.1" y="295" width="335.8" height="15.0" fill="rgb(153.203272617843,153.203272617843,134.754321148008)" rx="2" ry="2" />
<text  x="568.12" y="305.5" >pyop2.global_kernel.GlobalKernel.compile</text>
</g>
<g >
<title>Log_Event_mtf_solve_156 (268,799 us, 0.04%)</title><rect x="563.7" y="343" width="0.5" height="15.0" fill="rgb(119.808319491743,119.808319491743,150.608061837111)" rx="2" ry="2" />
<text  x="566.68" y="353.5" ></text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (61,669,358 us, 10.29%)</title><rect x="370.0" y="167" width="121.4" height="15.0" fill="rgb(155.393205926152,138.014578767163,138.014578767163)" rx="2" ry="2" />
<text  x="372.98" y="177.5" >firedrake.tsf..</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (5,424,531 us, 0.91%)</title><rect x="1166.1" y="151" width="10.7" height="15.0" fill="rgb(133.811669547954,151.728951364284,151.728951364284)" rx="2" ry="2" />
<text  x="1169.12" y="161.5" ></text>
</g>
<g >
<title>Log_Event_tensorshell_knl_169 (284,470 us, 0.05%)</title><rect x="564.2" y="327" width="0.6" height="15.0" fill="rgb(134.930299884747,134.930299884747,153.534896751887)" rx="2" ry="2" />
<text  x="567.21" y="337.5" ></text>
</g>
<g >
<title>PCSetUp (1,164,067 us, 0.19%)</title><rect x="1163.8" y="103" width="2.3" height="15.0" fill="rgb(143.875147678536,154.338001249991,154.338001249991)" rx="2" ry="2" />
<text  x="1166.82" y="113.5" ></text>
</g>
<g >
<title>firedrake.extrusion_utils.make_extruded_coords (1,660,664 us, 0.28%)</title><rect x="10.0" y="87" width="3.3" height="15.0" fill="rgb(150.841978439329,150.841978439329,123.311126282902)" rx="2" ry="2" />
<text  x="13.00" y="97.5" ></text>
</g>
<g >
<title>PCSetUp (334,866,853 us, 55.87%)</title><rect x="491.4" y="183" width="659.2" height="15.0" fill="rgb(155.616503615371,139.726527717844,139.726527717844)" rx="2" ry="2" />
<text  x="494.38" y="193.5" >PCSetUp</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (46,316,209 us, 7.73%)</title><rect x="1037.7" y="263" width="91.2" height="15.0" fill="rgb(155.120524265531,135.92401936907,135.92401936907)" rx="2" ry="2" />
<text  x="1040.69" y="273.5" >pyop2.glo..</text>
</g>
<g >
<title>Log_Event_tensorshell_knl_155 (268,799 us, 0.04%)</title><rect x="563.7" y="327" width="0.5" height="15.0" fill="rgb(147.989160197782,147.989160197782,109.485930189251)" rx="2" ry="2" />
<text  x="566.68" y="337.5" ></text>
</g>
<g >
<title>ParLoopExecute (10,308,609 us, 1.72%)</title><rect x="1166.1" y="119" width="20.3" height="15.0" fill="rgb(153.09969975603,120.431031462898,120.431031462898)" rx="2" ry="2" />
<text  x="1169.12" y="129.5" ></text>
</g>
<g >
<title>all (599,395,469 us, 100%)</title><rect x="10.0" y="39" width="1180.0" height="15.0" fill="rgb(128.942826338328,162.73023757283,128.942826338328)" rx="2" ry="2" />
<text  x="13.00" y="49.5" ></text>
</g>
<g >
<title>firedrake.parloops.par_loop (1,061,452 us, 0.18%)</title><rect x="1164.0" y="135" width="2.1" height="15.0" fill="rgb(154.38668995407,130.297956314535,130.297956314535)" rx="2" ry="2" />
<text  x="1167.03" y="145.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_slate_loopy_knl_96 (171,616,645 us, 28.63%)</title><rect x="563.1" y="279" width="337.8" height="15.0" fill="rgb(126.022388512683,163.205657683982,126.022388512683)" rx="2" ry="2" />
<text  x="566.05" y="289.5" >Parloop_Cells_wrap_slate_loopy_knl_96</text>
</g>
<g >
<title>Log_Event_subkernel172_interior_facet_vert_to__exterior_facet_vert_integral_otherwise (83,682 us, 0.01%)</title><rect x="564.6" y="359" width="0.2" height="15.0" fill="rgb(141.573136848928,141.573136848928,154.820607132051)" rx="2" ry="2" />
<text  x="567.61" y="369.5" ></text>
</g>
<g >
<title>ParLoopExecute (46,406,306 us, 7.74%)</title><rect x="1037.5" y="231" width="91.4" height="15.0" fill="rgb(149.820700705127,149.820700705127,118.361857263308)" rx="2" ry="2" />
<text  x="1040.51" y="241.5" >ParLoopEx..</text>
</g>
<g >
<title>KSPSolve (272,170,633 us, 45.41%)</title><rect x="491.4" y="215" width="535.8" height="15.0" fill="rgb(134.473594754556,97.7135865585504,134.473594754556)" rx="2" ry="2" />
<text  x="494.38" y="225.5" >KSPSolve</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (145,665,718 us, 24.30%)</title><rect x="83.2" y="199" width="286.8" height="15.0" fill="rgb(153.497446650215,153.497446650215,136.179933766427)" rx="2" ry="2" />
<text  x="86.21" y="209.5" >pyop2.global_kernel.GlobalKernel.co..</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (4,861,663 us, 0.81%)</title><rect x="1153.6" y="199" width="9.6" height="15.0" fill="rgb(133.125919991436,94.2601699780539,133.125919991436)" rx="2" ry="2" />
<text  x="1156.62" y="209.5" ></text>
</g>
<g >
<title>Log_Event_mtf_solve_1 (69,671 us, 0.01%)</title><rect x="83.1" y="215" width="0.1" height="15.0" fill="rgb(113.521232078253,146.468467575843,146.468467575843)" rx="2" ry="2" />
<text  x="86.08" y="225.5" ></text>
</g>
<g >
<title>Log_Event_mtf_solve_98 (177,365 us, 0.03%)</title><rect x="564.8" y="311" width="0.3" height="15.0" fill="rgb(121.928545581001,121.928545581001,151.018428176968)" rx="2" ry="2" />
<text  x="567.77" y="321.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_slate_loopy_knl_0 (145,735,389 us, 24.31%)</title><rect x="83.1" y="183" width="286.9" height="15.0" fill="rgb(133.138678875447,162.047191810974,133.138678875447)" rx="2" ry="2" />
<text  x="86.08" y="193.5" >Parloop_Cells_wrap_slate_loopy_knl_0</text>
</g>
<g >
<title>ParLoopExecute (171,616,645 us, 28.63%)</title><rect x="563.1" y="263" width="337.8" height="15.0" fill="rgb(155.41234423592,138.161305808723,138.161305808723)" rx="2" ry="2" />
<text  x="566.05" y="273.5" >ParLoopExecute</text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (64,148,215 us, 10.70%)</title><rect x="900.9" y="263" width="126.3" height="15.0" fill="rgb(146.497108107981,146.497108107981,155.773633827351)" rx="2" ry="2" />
<text  x="903.91" y="273.5" >firedrake.tsfc..</text>
</g>
<g >
<title>SNESFunctionEval (12,132,012 us, 2.02%)</title><rect x="1166.1" y="103" width="23.9" height="15.0" fill="rgb(143.144881027705,143.144881027705,155.124815682782)" rx="2" ry="2" />
<text  x="1169.12" y="113.5" >S..</text>
</g>
<g >
<title>PCSetUp (6,707,740 us, 1.12%)</title><rect x="1150.6" y="151" width="13.2" height="15.0" fill="rgb(119.04585868027,119.04585868027,150.460488776826)" rx="2" ry="2" />
<text  x="1153.62" y="161.5" ></text>
</g>
<g >
<title>HybridBreak (1,428,460 us, 0.24%)</title><rect x="19.4" y="151" width="2.8" height="15.0" fill="rgb(148.271292952474,148.271292952474,110.853188923526)" rx="2" ry="2" />
<text  x="22.42" y="161.5" ></text>
</g>
<g >
<title>Log_Event_subkernel158_interior_facet_vert_to__exterior_facet_vert_integral_otherwise (84,183 us, 0.01%)</title><rect x="564.0" y="359" width="0.2" height="15.0" fill="rgb(140.211749468224,160.895761714475,140.211749468224)" rx="2" ry="2" />
<text  x="567.05" y="369.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (1,061,452 us, 0.18%)</title><rect x="1164.0" y="167" width="2.1" height="15.0" fill="rgb(145.943513210762,127.105252602579,145.943513210762)" rx="2" ry="2" />
<text  x="1167.03" y="177.5" ></text>
</g>
<g >
<title>Log_Event_mtf_solve_110 (109,560 us, 0.02%)</title><rect x="564.9" y="343" width="0.2" height="15.0" fill="rgb(153.188172324816,153.188172324816,134.681142804875)" rx="2" ry="2" />
<text  x="567.90" y="353.5" ></text>
</g>
<g >
<title>PCApply (334,866,853 us, 55.87%)</title><rect x="491.4" y="167" width="659.2" height="15.0" fill="rgb(137.105597084681,104.458092529494,137.105597084681)" rx="2" ry="2" />
<text  x="494.38" y="177.5" >PCApply</text>
</g>
<g >
<title>CreateExtMesh (1,660,664 us, 0.28%)</title><rect x="10.0" y="71" width="3.3" height="15.0" fill="rgb(135.180414421294,135.180414421294,153.583306017025)" rx="2" ry="2" />
<text  x="13.00" y="81.5" ></text>
</g>
<g >
<title>KSPSolve (581,313,660 us, 96.98%)</title><rect x="19.4" y="103" width="1144.4" height="15.0" fill="rgb(127.714898659786,150.148307059944,150.148307059944)" rx="2" ry="2" />
<text  x="22.42" y="113.5" >KSPSolve</text>
</g>
<g >
<title>Parloop_Cells_wrap_pyop2_kernel_uniform_extrusion (1,595,890 us, 0.27%)</title><rect x="10.1" y="119" width="3.2" height="15.0" fill="rgb(145.662493217127,145.662493217127,155.612095461379)" rx="2" ry="2" />
<text  x="13.13" y="129.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (1,523,695 us, 0.25%)</title><rect x="1150.6" y="199" width="3.0" height="15.0" fill="rgb(135.542308912117,152.177635643882,152.177635643882)" rx="2" ry="2" />
<text  x="1153.62" y="209.5" ></text>
</g>
</g>
</svg>
