<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="283" onload="init(evt)" viewBox="0 0 1200 283" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:13px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:18px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 13 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (1 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="283.0" fill="url(#background)"  />
<text id="title" x="600.00" y="26" >Firedrake example</text>
<text id="details" x="10.00" y="265" > </text>
<text id="unzoom" x="10.00" y="26" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="26" >Search</text>
<text id="ignorecase" x="1174.00" y="26" >ic</text>
<text id="matched" x="1090.00" y="265" > </text>
<g id="frames">
<g >
<title>firedrake (14,039,431 us, 100.00%)</title><rect x="10.0" y="55" width="1180.0" height="15.0" fill="rgb(132.718519093321,151.445541987157,151.445541987157)" rx="2" ry="2" />
<text  x="13.00" y="65.5" >firedrake</text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (9,904 us, 0.07%)</title><rect x="452.9" y="151" width="0.9" height="15.0" fill="rgb(118.315743344694,118.315743344694,150.319176131231)" rx="2" ry="2" />
<text  x="455.93" y="161.5" ></text>
</g>
<g >
<title>SNESSolve (10,033,048 us, 71.46%)</title><rect x="346.7" y="87" width="843.3" height="15.0" fill="rgb(155.560426746299,155.560426746299,146.177452693602)" rx="2" ry="2" />
<text  x="349.73" y="97.5" >SNESSolve</text>
</g>
<g >
<title>firedrake.functionspace.VectorFunctionSpace (4,872 us, 0.03%)</title><rect x="113.2" y="87" width="0.4" height="15.0" fill="rgb(127.126948812091,163.025845542218,127.126948812091)" rx="2" ry="2" />
<text  x="116.18" y="97.5" ></text>
</g>
<g >
<title>FunctionSpaceData: CreateElement (11,447 us, 0.08%)</title><rect x="114.6" y="135" width="0.9" height="15.0" fill="rgb(113.795141476674,146.539481123582,146.539481123582)" rx="2" ry="2" />
<text  x="117.59" y="145.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (9,904 us, 0.07%)</title><rect x="452.9" y="167" width="0.9" height="15.0" fill="rgb(153.296789238325,153.296789238325,135.207517078038)" rx="2" ry="2" />
<text  x="455.93" y="177.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (23,288 us, 0.17%)</title><rect x="113.6" y="103" width="1.9" height="15.0" fill="rgb(152.31062665204,152.31062665204,130.428421467576)" rx="2" ry="2" />
<text  x="116.59" y="113.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (3,773 us, 0.03%)</title><rect x="1189.7" y="151" width="0.3" height="15.0" fill="rgb(156.360535417144,145.43077153144,145.43077153144)" rx="2" ry="2" />
<text  x="1192.68" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspace.MixedFunctionSpace (1,731 us, 0.01%)</title><rect x="452.8" y="151" width="0.1" height="15.0" fill="rgb(149.364444662581,135.871389447865,149.364444662581)" rx="2" ry="2" />
<text  x="455.78" y="161.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (2,117 us, 0.02%)</title><rect x="525.7" y="135" width="0.2" height="15.0" fill="rgb(128.196312018371,150.273117930689,150.273117930689)" rx="2" ry="2" />
<text  x="528.71" y="145.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (11,635 us, 0.08%)</title><rect x="452.8" y="135" width="1.0" height="15.0" fill="rgb(153.092758864145,120.377817958442,120.377817958442)" rx="2" ry="2" />
<text  x="455.78" y="145.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_form0_cell_integral_otherwise (3,434,550 us, 24.46%)</title><rect x="526.3" y="135" width="288.7" height="15.0" fill="rgb(154.385559079233,130.28928627412,130.28928627412)" rx="2" ry="2" />
<text  x="529.31" y="145.5" >Parloop_Cells_wrap_form0_cell_integ..</text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalProblem.__init__ (14,106 us, 0.10%)</title><rect x="344.8" y="87" width="1.2" height="15.0" fill="rgb(152.458706136588,152.458706136588,131.146037431159)" rx="2" ry="2" />
<text  x="347.85" y="97.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (770,971 us, 5.49%)</title><rect x="460.9" y="167" width="64.8" height="15.0" fill="rgb(127.710136624729,127.710136624729,152.137445798335)" rx="2" ry="2" />
<text  x="463.91" y="177.5" >Parloo..</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (770,971 us, 5.49%)</title><rect x="460.9" y="183" width="64.8" height="15.0" fill="rgb(139.10283002464,109.576001938139,139.10283002464)" rx="2" ry="2" />
<text  x="463.91" y="193.5" >pyop2...</text>
</g>
<g >
<title>HybridRHS (174,761 us, 1.24%)</title><rect x="435.6" y="151" width="14.7" height="15.0" fill="rgb(114.286808872708,114.286808872708,149.53938236246)" rx="2" ry="2" />
<text  x="438.59" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (23,288 us, 0.17%)</title><rect x="113.6" y="87" width="1.9" height="15.0" fill="rgb(143.022489226715,143.022489226715,155.101126947106)" rx="2" ry="2" />
<text  x="116.59" y="97.5" ></text>
</g>
<g >
<title>firedrake.matrix_free.operators.ImplicitMatrixContext.__init__ (6,335 us, 0.05%)</title><rect x="346.2" y="103" width="0.5" height="15.0" fill="rgb(152.145283056173,113.113836763992,113.113836763992)" rx="2" ry="2" />
<text  x="349.20" y="113.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.solve (10,033,048 us, 71.46%)</title><rect x="346.7" y="71" width="843.3" height="15.0" fill="rgb(153.172417462277,120.988533877455,120.988533877455)" rx="2" ry="2" />
<text  x="349.73" y="81.5" >firedrake.variational_solver.NonlinearVariationalSolver.solve</text>
</g>
<g >
<title>KSPSolve (1,232,021 us, 8.78%)</title><rect x="346.7" y="103" width="103.6" height="15.0" fill="rgb(148.816522698169,148.816522698169,113.495456152664)" rx="2" ry="2" />
<text  x="349.73" y="113.5" >KSPSolve</text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (4,872 us, 0.03%)</title><rect x="113.2" y="135" width="0.4" height="15.0" fill="rgb(120.841972812745,120.841972812745,150.808123770209)" rx="2" ry="2" />
<text  x="116.18" y="145.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.action (6,051 us, 0.04%)</title><rect x="344.3" y="87" width="0.5" height="15.0" fill="rgb(154.563928432953,131.65678465264,131.65678465264)" rx="2" ry="2" />
<text  x="347.34" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (1,731 us, 0.01%)</title><rect x="452.8" y="183" width="0.1" height="15.0" fill="rgb(118.33617013927,118.33617013927,150.323129704375)" rx="2" ry="2" />
<text  x="455.78" y="193.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (3,040 us, 0.02%)</title><rect x="454.6" y="231" width="0.3" height="15.0" fill="rgb(130.839521287376,150.958394407838,150.958394407838)" rx="2" ry="2" />
<text  x="457.61" y="241.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (2,488 us, 0.02%)</title><rect x="346.5" y="119" width="0.2" height="15.0" fill="rgb(150.352469222993,150.352469222993,120.938889311429)" rx="2" ry="2" />
<text  x="349.52" y="129.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (4,872 us, 0.03%)</title><rect x="113.2" y="103" width="0.4" height="15.0" fill="rgb(114.840252119521,114.840252119521,149.64650041023)" rx="2" ry="2" />
<text  x="116.18" y="113.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (4,872 us, 0.03%)</title><rect x="113.2" y="151" width="0.4" height="15.0" fill="rgb(146.417282013348,159.885558742013,146.417282013348)" rx="2" ry="2" />
<text  x="116.18" y="161.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (1,051,547 us, 7.49%)</title><rect x="347.2" y="199" width="88.4" height="15.0" fill="rgb(132.114396399755,151.288917585122,151.288917585122)" rx="2" ry="2" />
<text  x="350.21" y="209.5" >Parloop_C..</text>
</g>
<g >
<title>HybridBreak (1,057,260 us, 7.53%)</title><rect x="346.7" y="151" width="88.9" height="15.0" fill="rgb(152.755924186998,117.795418766986,117.795418766986)" rx="2" ry="2" />
<text  x="349.73" y="161.5" >HybridBreak</text>
</g>
<g >
<title>ParLoopExecute (770,971 us, 5.49%)</title><rect x="460.9" y="151" width="64.8" height="15.0" fill="rgb(148.136516457354,148.136516457354,110.200041293333)" rx="2" ry="2" />
<text  x="463.91" y="161.5" >ParLoo..</text>
</g>
<g >
<title>CreateFunctionSpace (2,011 us, 0.01%)</title><rect x="450.1" y="183" width="0.2" height="15.0" fill="rgb(148.094053200292,159.61259599065,148.094053200292)" rx="2" ry="2" />
<text  x="453.11" y="193.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (1,848 us, 0.01%)</title><rect x="1189.8" y="167" width="0.2" height="15.0" fill="rgb(128.807760238272,162.752225077491,128.807760238272)" rx="2" ry="2" />
<text  x="1192.84" y="177.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_pyop2_kernel_uniform_extrusion (1,202,909 us, 8.57%)</title><rect x="12.1" y="119" width="101.1" height="15.0" fill="rgb(152.68415830709,117.245213687686,117.245213687686)" rx="2" ry="2" />
<text  x="15.08" y="129.5" >Parloop_Cel..</text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (3,040 us, 0.02%)</title><rect x="454.6" y="199" width="0.3" height="15.0" fill="rgb(152.71987513112,152.71987513112,132.411702558506)" rx="2" ry="2" />
<text  x="457.61" y="209.5" ></text>
</g>
<g >
<title>firedrake.__init__ (2,720,210 us, 19.38%)</title><rect x="115.5" y="71" width="228.7" height="15.0" fill="rgb(131.391699642547,162.33158377912,131.391699642547)" rx="2" ry="2" />
<text  x="118.55" y="81.5" >firedrake.__init__</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (1,051,547 us, 7.49%)</title><rect x="347.2" y="215" width="88.4" height="15.0" fill="rgb(150.459398042331,150.459398042331,121.457082820525)" rx="2" ry="2" />
<text  x="350.21" y="225.5" >pyop2.glo..</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (3,432,749 us, 24.45%)</title><rect x="526.5" y="151" width="288.5" height="15.0" fill="rgb(156.17706198166,144.024141859396,144.024141859396)" rx="2" ry="2" />
<text  x="529.46" y="161.5" >pyop2.global_kernel.GlobalKernel.co..</text>
</g>
<g >
<title>firedrake.functionspace.make_scalar_element (1,676 us, 0.01%)</title><rect x="454.5" y="199" width="0.1" height="15.0" fill="rgb(143.819370851872,160.308474512486,143.819370851872)" rx="2" ry="2" />
<text  x="457.47" y="209.5" ></text>
</g>
<g >
<title>ParLoopExecute (6,493,996 us, 46.26%)</title><rect x="526.3" y="119" width="545.8" height="15.0" fill="rgb(131.743902932803,162.274248359776,131.743902932803)" rx="2" ry="2" />
<text  x="529.31" y="129.5" >ParLoopExecute</text>
</g>
<g >
<title>ParLoopExecute (1,051,547 us, 7.49%)</title><rect x="347.2" y="183" width="88.4" height="15.0" fill="rgb(125.388611002566,125.388611002566,151.688118258561)" rx="2" ry="2" />
<text  x="350.21" y="193.5" >ParLoopEx..</text>
</g>
<g >
<title>firedrake.assemble.allocate_matrix (6,335 us, 0.05%)</title><rect x="346.2" y="87" width="0.5" height="15.0" fill="rgb(112.728154214563,112.728154214563,149.237707267335)" rx="2" ry="2" />
<text  x="349.20" y="97.5" ></text>
</g>
<g >
<title>firedrake.interpolation.make_interpolator (64,615 us, 0.46%)</title><rect x="454.9" y="135" width="5.4" height="15.0" fill="rgb(141.65039035166,116.104125276128,141.65039035166)" rx="2" ry="2" />
<text  x="457.87" y="145.5" ></text>
</g>
<g >
<title>firedrake.extrusion_utils.make_extruded_coords (1,225,680 us, 8.73%)</title><rect x="10.2" y="87" width="103.0" height="15.0" fill="rgb(140.908670236539,140.908670236539,154.692000690943)" rx="2" ry="2" />
<text  x="13.17" y="97.5" >firedrake.e..</text>
</g>
<g >
<title>all (14,039,431 us, 100%)</title><rect x="10.0" y="39" width="1180.0" height="15.0" fill="rgb(153.805719086551,153.805719086551,137.673869419439)" rx="2" ry="2" />
<text  x="13.00" y="49.5" ></text>
</g>
<g >
<title>PCApply (1,232,021 us, 8.78%)</title><rect x="346.7" y="119" width="103.6" height="15.0" fill="rgb(152.640564583776,152.640564583776,132.027351444454)" rx="2" ry="2" />
<text  x="349.73" y="129.5" >PCApply</text>
</g>
<g >
<title>CreateFunctionSpace (23,288 us, 0.17%)</title><rect x="113.6" y="71" width="1.9" height="15.0" fill="rgb(148.243979177109,159.588189436285,148.243979177109)" rx="2" ry="2" />
<text  x="116.59" y="81.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.action (3,847 us, 0.03%)</title><rect x="346.2" y="119" width="0.3" height="15.0" fill="rgb(153.333874335054,122.226369902079,122.226369902079)" rx="2" ry="2" />
<text  x="349.20" y="129.5" ></text>
</g>
<g >
<title>firedrake.parloops.par_loop (778,210 us, 5.54%)</title><rect x="460.3" y="135" width="65.4" height="15.0" fill="rgb(153.154416467143,153.154416467143,134.517556725384)" rx="2" ry="2" />
<text  x="463.30" y="145.5" >firedr..</text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (23,288 us, 0.17%)</title><rect x="113.6" y="119" width="1.9" height="15.0" fill="rgb(149.927202667466,159.314176309947,149.927202667466)" rx="2" ry="2" />
<text  x="116.59" y="129.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (12,339 us, 0.09%)</title><rect x="345.0" y="103" width="1.0" height="15.0" fill="rgb(143.813098424006,154.321914406224,154.321914406224)" rx="2" ry="2" />
<text  x="348.00" y="113.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.LinearVariationalProblem.__init__ (20,157 us, 0.14%)</title><rect x="344.3" y="71" width="1.7" height="15.0" fill="rgb(145.51614000561,126.010108764375,145.51614000561)" rx="2" ry="2" />
<text  x="347.34" y="81.5" ></text>
</g>
<g >
<title>FunctionSpaceData: CreateElement (9,904 us, 0.07%)</title><rect x="452.9" y="199" width="0.9" height="15.0" fill="rgb(139.970118161277,111.798427788272,139.970118161277)" rx="2" ry="2" />
<text  x="455.93" y="209.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (1,202,909 us, 8.57%)</title><rect x="12.1" y="135" width="101.1" height="15.0" fill="rgb(135.982051259372,161.584317236846,135.982051259372)" rx="2" ry="2" />
<text  x="15.08" y="145.5" >pyop2.globa..</text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (3,040 us, 0.02%)</title><rect x="454.6" y="215" width="0.3" height="15.0" fill="rgb(142.61099917882,160.505186180192,142.61099917882)" rx="2" ry="2" />
<text  x="457.61" y="225.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (6,811 us, 0.05%)</title><rect x="454.3" y="183" width="0.6" height="15.0" fill="rgb(143.083054047054,160.428340038852,143.083054047054)" rx="2" ry="2" />
<text  x="457.30" y="193.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.__init__ (8,295 us, 0.06%)</title><rect x="346.0" y="71" width="0.7" height="15.0" fill="rgb(142.68535601608,160.493081578778,142.68535601608)" rx="2" ry="2" />
<text  x="349.04" y="81.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (4,872 us, 0.03%)</title><rect x="113.2" y="119" width="0.4" height="15.0" fill="rgb(155.325413319237,155.325413319237,145.038541470146)" rx="2" ry="2" />
<text  x="116.18" y="129.5" ></text>
</g>
<g >
<title>firedrake.utility_meshes.SquareMesh (1,913 us, 0.01%)</title><rect x="344.2" y="71" width="0.1" height="15.0" fill="rgb(152.433694292194,115.324989573488,115.324989573488)" rx="2" ry="2" />
<text  x="347.18" y="81.5" ></text>
</g>
<g >
<title>SNESFunctionEval (7,901,506 us, 56.28%)</title><rect x="525.9" y="103" width="664.1" height="15.0" fill="rgb(135.385088185394,100.049288475071,135.385088185394)" rx="2" ry="2" />
<text  x="528.89" y="113.5" >SNESFunctionEval</text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (9,904 us, 0.07%)</title><rect x="452.9" y="183" width="0.9" height="15.0" fill="rgb(155.022299114687,135.170959879269,135.170959879269)" rx="2" ry="2" />
<text  x="455.93" y="193.5" ></text>
</g>
<g >
<title>firedrake.slate.slac.optimise.optimise (16,609 us, 0.12%)</title><rect x="448.9" y="167" width="1.4" height="15.0" fill="rgb(143.934080074881,143.934080074881,155.277563885461)" rx="2" ry="2" />
<text  x="451.89" y="177.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (1,731 us, 0.01%)</title><rect x="452.8" y="167" width="0.1" height="15.0" fill="rgb(150.93487646628,150.93487646628,123.76132441351)" rx="2" ry="2" />
<text  x="455.78" y="177.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (13,219 us, 0.09%)</title><rect x="453.8" y="135" width="1.1" height="15.0" fill="rgb(143.857460840837,160.302273816608,143.857460840837)" rx="2" ry="2" />
<text  x="456.76" y="145.5" ></text>
</g>
<g >
<title>HybridInit (899,521 us, 6.41%)</title><rect x="450.3" y="119" width="75.6" height="15.0" fill="rgb(145.202524977122,160.083309887445,145.202524977122)" rx="2" ry="2" />
<text  x="453.28" y="129.5" >HybridI..</text>
</g>
<g >
<title>Parloop_Cells_wrap_form1_cell_integral_otherwise (3,059,446 us, 21.79%)</title><rect x="815.0" y="135" width="257.1" height="15.0" fill="rgb(148.066650825564,148.066650825564,109.861461693119)" rx="2" ry="2" />
<text  x="817.98" y="145.5" >Parloop_Cells_wrap_form1_cell_i..</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (3,059,446 us, 21.79%)</title><rect x="815.0" y="151" width="257.1" height="15.0" fill="rgb(141.750997816891,141.750997816891,154.855031835527)" rx="2" ry="2" />
<text  x="817.98" y="161.5" >pyop2.global_kernel.GlobalKerne..</text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (13,219 us, 0.09%)</title><rect x="453.8" y="151" width="1.1" height="15.0" fill="rgb(109.214180798718,109.214180798718,148.557583380397)" rx="2" ry="2" />
<text  x="456.76" y="161.5" ></text>
</g>
<g >
<title>SCForwardElim (1,232,021 us, 8.78%)</title><rect x="346.7" y="135" width="103.6" height="15.0" fill="rgb(151.737511147521,141.952372315524,151.737511147521)" rx="2" ry="2" />
<text  x="349.73" y="145.5" >SCForwardElim</text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (9,577 us, 0.07%)</title><rect x="454.1" y="167" width="0.8" height="15.0" fill="rgb(106.857790476532,144.740908642064,144.740908642064)" rx="2" ry="2" />
<text  x="457.06" y="177.5" ></text>
</g>
<g >
<title>firedrake.parloops.par_loop (1,057,260 us, 7.53%)</title><rect x="346.7" y="167" width="88.9" height="15.0" fill="rgb(123.065390104633,148.942878916016,148.942878916016)" rx="2" ry="2" />
<text  x="349.73" y="177.5" >firedrake..</text>
</g>
<g >
<title>CreateExtMesh (1,232,520 us, 8.78%)</title><rect x="10.0" y="71" width="103.6" height="15.0" fill="rgb(113.496610538283,113.496610538283,149.386440749345)" rx="2" ry="2" />
<text  x="13.00" y="81.5" >CreateExtMesh</text>
</g>
<g >
<title>PCSetUp (899,521 us, 6.41%)</title><rect x="450.3" y="103" width="75.6" height="15.0" fill="rgb(141.79642091976,141.79642091976,154.863823403825)" rx="2" ry="2" />
<text  x="453.28" y="113.5" >PCSetUp</text>
</g>
<g >
<title>ParLoopExecute (1,202,909 us, 8.57%)</title><rect x="12.1" y="103" width="101.1" height="15.0" fill="rgb(145.194146659141,160.084673799675,145.194146659141)" rx="2" ry="2" />
<text  x="15.08" y="113.5" >ParLoopExec..</text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (6,156 us, 0.04%)</title><rect x="1189.5" y="135" width="0.5" height="15.0" fill="rgb(148.919224302838,148.919224302838,113.993163929137)" rx="2" ry="2" />
<text  x="1192.48" y="145.5" ></text>
</g>
<g >
<title>firedrake.utility_meshes.RectangleMesh (1,913 us, 0.01%)</title><rect x="344.2" y="87" width="0.1" height="15.0" fill="rgb(104.497309971454,144.128932214821,144.128932214821)" rx="2" ry="2" />
<text  x="347.18" y="97.5" ></text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (1,402,431 us, 9.99%)</title><rect x="1072.1" y="119" width="117.9" height="15.0" fill="rgb(124.085392394198,149.207323954051,149.207323954051)" rx="2" ry="2" />
<text  x="1075.13" y="129.5" >firedrake.tsf..</text>
</g>
</g>
</svg>
