<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="283" onload="init(evt)" viewBox="0 0 1200 283" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:13px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:18px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 13 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (1 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="283.0" fill="url(#background)"  />
<text id="title" x="600.00" y="26" >Firedrake example</text>
<text id="details" x="10.00" y="265" > </text>
<text id="unzoom" x="10.00" y="26" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="26" >Search</text>
<text id="ignorecase" x="1174.00" y="26" >ic</text>
<text id="matched" x="1090.00" y="265" > </text>
<g id="frames">
<g >
<title>HybridBreak (74,703 us, 1.38%)</title><rect x="657.1" y="151" width="16.3" height="15.0" fill="rgb(155.187941517292,136.440884965905,136.440884965905)" rx="2" ry="2" />
<text  x="660.13" y="161.5" ></text>
</g>
<g >
<title>firedrake (5,431,244 us, 100.00%)</title><rect x="10.0" y="55" width="1180.0" height="15.0" fill="rgb(145.77847131343,126.682332740665,145.77847131343)" rx="2" ry="2" />
<text  x="13.00" y="65.5" >firedrake</text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (1,332 us, 0.02%)</title><rect x="1189.7" y="167" width="0.3" height="15.0" fill="rgb(121.626293269303,121.626293269303,150.959927729542)" rx="2" ry="2" />
<text  x="1192.71" y="177.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_pyop2_kernel_uniform_extrusion (107,604 us, 1.98%)</title><rect x="15.2" y="119" width="23.4" height="15.0" fill="rgb(150.898897310304,150.898897310304,123.586963888396)" rx="2" ry="2" />
<text  x="18.21" y="129.5" >P..</text>
</g>
<g >
<title>Log_Event_form0_cell_integral_otherwise (1,414 us, 0.03%)</title><rect x="1151.0" y="151" width="0.3" height="15.0" fill="rgb(137.08313492603,161.405071058553,137.08313492603)" rx="2" ry="2" />
<text  x="1153.98" y="161.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_form1_cell_integral_otherwise (68,200 us, 1.26%)</title><rect x="1165.7" y="135" width="14.9" height="15.0" fill="rgb(154.471860724815,154.471860724815,140.902094281797)" rx="2" ry="2" />
<text  x="1168.74" y="145.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (11,457 us, 0.21%)</title><rect x="1112.1" y="151" width="2.5" height="15.0" fill="rgb(121.048089379888,148.419875024415,148.419875024415)" rx="2" ry="2" />
<text  x="1115.13" y="161.5" ></text>
</g>
<g >
<title>firedrake.__init__ (2,790,522 us, 51.38%)</title><rect x="44.8" y="71" width="606.3" height="15.0" fill="rgb(152.686344032342,117.261970914625,117.261970914625)" rx="2" ry="2" />
<text  x="47.84" y="81.5" >firedrake.__init__</text>
</g>
<g >
<title>firedrake.functionspace.VectorFunctionSpace (4,817 us, 0.09%)</title><rect x="38.6" y="87" width="1.0" height="15.0" fill="rgb(136.5028388381,161.499537863565,136.5028388381)" rx="2" ry="2" />
<text  x="41.59" y="97.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (67,971 us, 1.25%)</title><rect x="658.6" y="215" width="14.8" height="15.0" fill="rgb(153.819819964226,153.819819964226,137.742204442019)" rx="2" ry="2" />
<text  x="661.59" y="225.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.LinearVariationalProblem.__init__ (15,654 us, 0.29%)</title><rect x="651.8" y="71" width="3.4" height="15.0" fill="rgb(149.958304945265,149.958304945265,119.028708580898)" rx="2" ry="2" />
<text  x="654.83" y="81.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.derivative (841 us, 0.02%)</title><rect x="655.0" y="103" width="0.2" height="15.0" fill="rgb(143.541380233515,160.353728799195,143.541380233515)" rx="2" ry="2" />
<text  x="658.05" y="113.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (4,817 us, 0.09%)</title><rect x="38.6" y="135" width="1.0" height="15.0" fill="rgb(143.467604762314,154.232341975415,154.232341975415)" rx="2" ry="2" />
<text  x="41.59" y="145.5" ></text>
</g>
<g >
<title>ParLoopExecute (136,106 us, 2.51%)</title><rect x="1151.0" y="119" width="29.6" height="15.0" fill="rgb(153.199442130068,121.19572299719,121.19572299719)" rx="2" ry="2" />
<text  x="1153.98" y="129.5" >P..</text>
</g>
<g >
<title>CreateFunctionSpace (1,529 us, 0.03%)</title><rect x="1111.6" y="167" width="0.3" height="15.0" fill="rgb(137.11576353686,152.585568324371,152.585568324371)" rx="2" ry="2" />
<text  x="1114.56" y="177.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (5,489 us, 0.10%)</title><rect x="1188.8" y="135" width="1.2" height="15.0" fill="rgb(150.456224120957,150.456224120957,121.441701509253)" rx="2" ry="2" />
<text  x="1191.81" y="145.5" ></text>
</g>
<g >
<title>CreateExtMesh (136,391 us, 2.51%)</title><rect x="10.0" y="71" width="29.6" height="15.0" fill="rgb(155.355478837901,137.725337757238,137.725337757238)" rx="2" ry="2" />
<text  x="13.00" y="81.5" >C..</text>
</g>
<g >
<title>CreateFunctionSpace (22,804 us, 0.42%)</title><rect x="39.6" y="71" width="5.0" height="15.0" fill="rgb(147.397621595667,159.72596857745,147.397621595667)" rx="2" ry="2" />
<text  x="42.63" y="81.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (21,509 us, 0.40%)</title><rect x="39.9" y="103" width="4.7" height="15.0" fill="rgb(123.339330735835,123.339330735835,151.291483368226)" rx="2" ry="2" />
<text  x="42.91" y="113.5" ></text>
</g>
<g >
<title>KSPSolve (2,060,530 us, 37.94%)</title><rect x="657.1" y="103" width="447.7" height="15.0" fill="rgb(152.995009394651,152.995009394651,133.745045527922)" rx="2" ry="2" />
<text  x="660.13" y="113.5" >KSPSolve</text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (1,529 us, 0.03%)</title><rect x="1111.6" y="215" width="0.3" height="15.0" fill="rgb(131.544217373463,131.544217373463,152.879525943251)" rx="2" ry="2" />
<text  x="1114.56" y="225.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (12,601 us, 0.23%)</title><rect x="1114.6" y="135" width="2.8" height="15.0" fill="rgb(143.479798315748,143.479798315748,155.189638383693)" rx="2" ry="2" />
<text  x="1117.62" y="145.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (11,457 us, 0.21%)</title><rect x="1112.1" y="183" width="2.5" height="15.0" fill="rgb(115.099693152947,115.099693152947,149.696714803796)" rx="2" ry="2" />
<text  x="1115.13" y="193.5" ></text>
</g>
<g >
<title>firedrake.utility_meshes.SquareMesh (2,039 us, 0.04%)</title><rect x="651.4" y="71" width="0.4" height="15.0" fill="rgb(111.612408985081,111.612408985081,149.021756577758)" rx="2" ry="2" />
<text  x="654.39" y="81.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (1,529 us, 0.03%)</title><rect x="1111.6" y="183" width="0.3" height="15.0" fill="rgb(107.946636045699,145.023201937774,145.023201937774)" rx="2" ry="2" />
<text  x="1114.56" y="193.5" ></text>
</g>
<g >
<title>firedrake.utility_meshes.RectangleMesh (2,039 us, 0.04%)</title><rect x="651.4" y="87" width="0.4" height="15.0" fill="rgb(149.594449544672,149.594449544672,117.26540933187)" rx="2" ry="2" />
<text  x="654.39" y="97.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalProblem.__init__ (11,377 us, 0.21%)</title><rect x="652.8" y="87" width="2.4" height="15.0" fill="rgb(147.554308211342,131.232914791564,147.554308211342)" rx="2" ry="2" />
<text  x="655.76" y="97.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_form0_cell_integral_otherwise (67,906 us, 1.25%)</title><rect x="1151.0" y="135" width="14.7" height="15.0" fill="rgb(136.608723813068,161.482300774617,136.608723813068)" rx="2" ry="2" />
<text  x="1153.98" y="145.5" ></text>
</g>
<g >
<title>firedrake.matrix_free.operators.ImplicitMatrixContext.__init__ (6,694 us, 0.12%)</title><rect x="655.7" y="103" width="1.4" height="15.0" fill="rgb(144.099557567624,122.380116267036,144.099557567624)" rx="2" ry="2" />
<text  x="658.67" y="113.5" ></text>
</g>
<g >
<title>firedrake.interpolation.make_interpolator (73,804 us, 1.36%)</title><rect x="1117.6" y="135" width="16.0" height="15.0" fill="rgb(112.091050220175,112.091050220175,149.114396816808)" rx="2" ry="2" />
<text  x="1120.61" y="145.5" ></text>
</g>
<g >
<title>firedrake.parloops.par_loop (73,831 us, 1.36%)</title><rect x="1133.6" y="135" width="16.1" height="15.0" fill="rgb(154.697761852137,132.682840866384,132.682840866384)" rx="2" ry="2" />
<text  x="1136.64" y="145.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (1,917 us, 0.04%)</title><rect x="1149.7" y="135" width="0.4" height="15.0" fill="rgb(146.304129852432,159.903978861232,146.304129852432)" rx="2" ry="2" />
<text  x="1152.68" y="145.5" ></text>
</g>
<g >
<title>HybridInit (208,492 us, 3.84%)</title><rect x="1104.8" y="119" width="45.3" height="15.0" fill="rgb(122.071214774979,122.071214774979,151.046041569351)" rx="2" ry="2" />
<text  x="1107.80" y="129.5" >Hyb..</text>
</g>
<g >
<title>FunctionSpaceData: CreateElement (11,064 us, 0.20%)</title><rect x="41.8" y="135" width="2.4" height="15.0" fill="rgb(152.820356745863,118.289401718284,118.289401718284)" rx="2" ry="2" />
<text  x="44.84" y="145.5" ></text>
</g>
<g >
<title>firedrake.function.Function.split (841 us, 0.02%)</title><rect x="655.0" y="119" width="0.2" height="15.0" fill="rgb(154.599088807472,131.926347523952,131.926347523952)" rx="2" ry="2" />
<text  x="658.05" y="129.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (2,801 us, 0.05%)</title><rect x="1116.8" y="231" width="0.6" height="15.0" fill="rgb(129.472701841571,162.643978769977,129.472701841571)" rx="2" ry="2" />
<text  x="1119.75" y="241.5" ></text>
</g>
<g >
<title>firedrake.parloops.par_loop (73,839 us, 1.36%)</title><rect x="657.3" y="167" width="16.1" height="15.0" fill="rgb(139.21392759947,153.129536785048,153.129536785048)" rx="2" ry="2" />
<text  x="660.32" y="177.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.solve (2,452,670 us, 45.16%)</title><rect x="657.1" y="71" width="532.9" height="15.0" fill="rgb(109.688027666408,145.474673839439,145.474673839439)" rx="2" ry="2" />
<text  x="660.13" y="81.5" >firedrake.variational_solver.NonlinearVariationalSolver.solve</text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (68,624 us, 1.26%)</title><rect x="1134.8" y="167" width="14.9" height="15.0" fill="rgb(139.991566052618,153.331146754382,153.331146754382)" rx="2" ry="2" />
<text  x="1137.77" y="177.5" ></text>
</g>
<g >
<title>firedrake.functionspace.make_scalar_element (1,087 us, 0.02%)</title><rect x="1111.9" y="151" width="0.2" height="15.0" fill="rgb(142.184662399437,160.574589841952,142.184662399437)" rx="2" ry="2" />
<text  x="1114.90" y="161.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (66,492 us, 1.22%)</title><rect x="1151.3" y="151" width="14.4" height="15.0" fill="rgb(111.589680670558,111.589680670558,149.01735754914)" rx="2" ry="2" />
<text  x="1154.29" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspace.make_scalar_element (1,506 us, 0.03%)</title><rect x="1116.2" y="199" width="0.4" height="15.0" fill="rgb(150.732312553985,159.183111909816,150.732312553985)" rx="2" ry="2" />
<text  x="1119.23" y="209.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (12,601 us, 0.23%)</title><rect x="1114.6" y="151" width="2.8" height="15.0" fill="rgb(149.680525467429,149.680525467429,117.682546496002)" rx="2" ry="2" />
<text  x="1117.62" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (2,801 us, 0.05%)</title><rect x="1116.8" y="215" width="0.6" height="15.0" fill="rgb(127.592490286547,150.116571555771,150.116571555771)" rx="2" ry="2" />
<text  x="1119.75" y="225.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (9,266 us, 0.17%)</title><rect x="1115.3" y="167" width="2.1" height="15.0" fill="rgb(155.116128239401,135.890316502076,135.890316502076)" rx="2" ry="2" />
<text  x="1118.35" y="177.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (3,673 us, 0.07%)</title><rect x="1116.6" y="199" width="0.8" height="15.0" fill="rgb(155.164913465389,136.264336567982,136.264336567982)" rx="2" ry="2" />
<text  x="1119.56" y="209.5" ></text>
</g>
<g >
<title>firedrake.extrusion_utils.make_extruded_coords (129,825 us, 2.39%)</title><rect x="10.4" y="87" width="28.2" height="15.0" fill="rgb(146.72712596807,155.077403028759,155.077403028759)" rx="2" ry="2" />
<text  x="13.38" y="97.5" >f..</text>
</g>
<g >
<title>CreateFunctionSpace (6,871 us, 0.13%)</title><rect x="1115.9" y="183" width="1.5" height="15.0" fill="rgb(146.975467644554,159.794691313677,146.975467644554)" rx="2" ry="2" />
<text  x="1118.87" y="193.5" ></text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (43,485 us, 0.80%)</title><rect x="1180.6" y="119" width="9.4" height="15.0" fill="rgb(153.915217628454,153.915217628454,138.204516199431)" rx="2" ry="2" />
<text  x="1183.55" y="129.5" ></text>
</g>
<g >
<title>ParLoopExecute (68,624 us, 1.26%)</title><rect x="1134.8" y="151" width="14.9" height="15.0" fill="rgb(145.015136209027,124.726286535632,145.015136209027)" rx="2" ry="2" />
<text  x="1137.77" y="161.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (3,228 us, 0.06%)</title><rect x="1189.3" y="151" width="0.7" height="15.0" fill="rgb(134.538781560407,161.819268118073,134.538781560407)" rx="2" ry="2" />
<text  x="1192.30" y="161.5" ></text>
</g>
<g >
<title>SCForwardElim (2,060,530 us, 37.94%)</title><rect x="657.1" y="135" width="447.7" height="15.0" fill="rgb(140.66826768477,160.821444795503,140.66826768477)" rx="2" ry="2" />
<text  x="660.13" y="145.5" >SCForwardElim</text>
</g>
<g >
<title>firedrake.ufl_expr.action (3,810 us, 0.07%)</title><rect x="655.7" y="119" width="0.8" height="15.0" fill="rgb(117.980459111212,117.980459111212,150.254282408622)" rx="2" ry="2" />
<text  x="658.67" y="129.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (21,509 us, 0.40%)</title><rect x="39.9" y="87" width="4.7" height="15.0" fill="rgb(119.808763586381,119.808763586381,150.608147790912)" rx="2" ry="2" />
<text  x="42.91" y="97.5" ></text>
</g>
<g >
<title>PCSetUp (208,492 us, 3.84%)</title><rect x="1104.8" y="103" width="45.3" height="15.0" fill="rgb(109.144114096997,109.144114096997,148.54402208329)" rx="2" ry="2" />
<text  x="1107.80" y="113.5" >PCS..</text>
</g>
<g >
<title>SNESSolve (2,452,670 us, 45.16%)</title><rect x="657.1" y="87" width="532.9" height="15.0" fill="rgb(130.354949929354,150.832764796499,150.832764796499)" rx="2" ry="2" />
<text  x="660.13" y="97.5" >SNESSolve</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (67,349 us, 1.24%)</title><rect x="1165.9" y="151" width="14.7" height="15.0" fill="rgb(145.445726833837,154.745188438402,154.745188438402)" rx="2" ry="2" />
<text  x="1168.92" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspace.MixedFunctionSpace (2,723 us, 0.05%)</title><rect x="1111.3" y="151" width="0.6" height="15.0" fill="rgb(148.191371424765,159.596753488992,148.191371424765)" rx="2" ry="2" />
<text  x="1114.30" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (4,817 us, 0.09%)</title><rect x="38.6" y="151" width="1.0" height="15.0" fill="rgb(114.640713052851,146.758703384072,146.758703384072)" rx="2" ry="2" />
<text  x="41.59" y="161.5" ></text>
</g>
<g >
<title>firedrake.function.Function.__init__ (1,149 us, 0.02%)</title><rect x="1117.4" y="135" width="0.2" height="15.0" fill="rgb(153.415438170261,153.415438170261,135.782508055879)" rx="2" ry="2" />
<text  x="1120.36" y="145.5" ></text>
</g>
<g >
<title>FunctionSpaceData: CreateElement (10,035 us, 0.18%)</title><rect x="1112.4" y="199" width="2.2" height="15.0" fill="rgb(151.1608404954,140.474653769461,151.1608404954)" rx="2" ry="2" />
<text  x="1115.44" y="209.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (2,884 us, 0.05%)</title><rect x="656.5" y="119" width="0.6" height="15.0" fill="rgb(156.624270183356,147.452738072392,147.452738072392)" rx="2" ry="2" />
<text  x="659.50" y="129.5" ></text>
</g>
<g >
<title>firedrake.mesh.MeshTopology._facets (1,578 us, 0.03%)</title><rect x="44.2" y="135" width="0.4" height="15.0" fill="rgb(129.420585450166,129.420585450166,152.46850040971)" rx="2" ry="2" />
<text  x="47.24" y="145.5" ></text>
</g>
<g >
<title>PCApply (2,060,530 us, 37.94%)</title><rect x="657.1" y="119" width="447.7" height="15.0" fill="rgb(137.928888943099,106.56777791669,137.928888943099)" rx="2" ry="2" />
<text  x="660.13" y="129.5" >PCApply</text>
</g>
<g >
<title>ParLoopExecute (107,604 us, 1.98%)</title><rect x="15.2" y="103" width="23.4" height="15.0" fill="rgb(148.873876223739,148.873876223739,113.773400161195)" rx="2" ry="2" />
<text  x="18.21" y="113.5" >P..</text>
</g>
<g >
<title>firedrake.ufl_expr.action (4,277 us, 0.08%)</title><rect x="651.8" y="87" width="1.0" height="15.0" fill="rgb(154.419395840914,154.419395840914,140.647841382893)" rx="2" ry="2" />
<text  x="654.83" y="97.5" ></text>
</g>
<g >
<title>HybridRHS (1,985,827 us, 36.56%)</title><rect x="673.4" y="151" width="431.4" height="15.0" fill="rgb(155.225690534423,155.225690534423,144.555269512974)" rx="2" ry="2" />
<text  x="676.36" y="161.5" >HybridRHS</text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (21,509 us, 0.40%)</title><rect x="39.9" y="119" width="4.7" height="15.0" fill="rgb(130.40082670687,130.40082670687,152.65822452391)" rx="2" ry="2" />
<text  x="42.91" y="129.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (4,817 us, 0.09%)</title><rect x="38.6" y="119" width="1.0" height="15.0" fill="rgb(152.85334563151,118.542316508242,118.542316508242)" rx="2" ry="2" />
<text  x="41.59" y="129.5" ></text>
</g>
<g >
<title>SNESFunctionEval (183,648 us, 3.38%)</title><rect x="1150.1" y="103" width="39.9" height="15.0" fill="rgb(122.677626981754,148.84234773601,148.84234773601)" rx="2" ry="2" />
<text  x="1153.10" y="113.5" >SNE..</text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (10,536 us, 0.19%)</title><rect x="652.8" y="103" width="2.2" height="15.0" fill="rgb(155.467730629555,138.585934826585,138.585934826585)" rx="2" ry="2" />
<text  x="655.76" y="113.5" ></text>
</g>
<g >
<title>CreateMesh (1,142 us, 0.02%)</title><rect x="44.6" y="71" width="0.2" height="15.0" fill="rgb(145.173769336302,160.087991038276,145.173769336302)" rx="2" ry="2" />
<text  x="47.59" y="81.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (11,457 us, 0.21%)</title><rect x="1112.1" y="167" width="2.5" height="15.0" fill="rgb(125.307247682576,163.32207595865,125.307247682576)" rx="2" ry="2" />
<text  x="1115.13" y="177.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (107,604 us, 1.98%)</title><rect x="15.2" y="135" width="23.4" height="15.0" fill="rgb(126.19465752477,126.19465752477,151.844127262859)" rx="2" ry="2" />
<text  x="18.21" y="145.5" >p..</text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (1,529 us, 0.03%)</title><rect x="1111.6" y="199" width="0.3" height="15.0" fill="rgb(140.115577528479,153.363297877754,153.363297877754)" rx="2" ry="2" />
<text  x="1114.56" y="209.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.__init__ (8,732 us, 0.16%)</title><rect x="655.2" y="71" width="1.9" height="15.0" fill="rgb(151.184119531489,151.184119531489,124.969194652601)" rx="2" ry="2" />
<text  x="658.23" y="81.5" ></text>
</g>
<g >
<title>firedrake.assemble.allocate_matrix (6,694 us, 0.12%)</title><rect x="655.7" y="87" width="1.4" height="15.0" fill="rgb(148.905491922901,159.480501314877,148.905491922901)" rx="2" ry="2" />
<text  x="658.67" y="97.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (15,267 us, 0.28%)</title><rect x="1111.3" y="135" width="3.3" height="15.0" fill="rgb(152.69111290608,117.298532279945,117.298532279945)" rx="2" ry="2" />
<text  x="1114.30" y="145.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (67,971 us, 1.25%)</title><rect x="658.6" y="199" width="14.8" height="15.0" fill="rgb(118.505828465533,147.760770342916,147.760770342916)" rx="2" ry="2" />
<text  x="661.59" y="209.5" ></text>
</g>
<g >
<title>firedrake.functionspace.MixedFunctionSpace (1,290 us, 0.02%)</title><rect x="651.1" y="71" width="0.3" height="15.0" fill="rgb(135.518889823511,100.392155172746,135.518889823511)" rx="2" ry="2" />
<text  x="654.11" y="81.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (1,332 us, 0.02%)</title><rect x="1189.7" y="183" width="0.3" height="15.0" fill="rgb(132.682995870883,162.121372765205,132.682995870883)" rx="2" ry="2" />
<text  x="1192.71" y="193.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (68,624 us, 1.26%)</title><rect x="1134.8" y="183" width="14.9" height="15.0" fill="rgb(155.292752671316,137.244437146755,137.244437146755)" rx="2" ry="2" />
<text  x="1137.77" y="193.5" ></text>
</g>
<g >
<title>ParLoopExecute (67,971 us, 1.25%)</title><rect x="658.6" y="183" width="14.8" height="15.0" fill="rgb(132.102531686152,151.285841548262,151.285841548262)" rx="2" ry="2" />
<text  x="661.59" y="193.5" ></text>
</g>
<g >
<title>Log_Event_form1_cell_integral_otherwise (851 us, 0.02%)</title><rect x="1165.7" y="151" width="0.2" height="15.0" fill="rgb(137.634086560715,137.634086560715,154.058210302074)" rx="2" ry="2" />
<text  x="1168.74" y="161.5" ></text>
</g>
<g >
<title>all (5,431,244 us, 100%)</title><rect x="10.0" y="39" width="1180.0" height="15.0" fill="rgb(117.14852686246,147.408877334712,147.408877334712)" rx="2" ry="2" />
<text  x="13.00" y="49.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (4,817 us, 0.09%)</title><rect x="38.6" y="103" width="1.0" height="15.0" fill="rgb(151.399678247996,151.399678247996,126.013825355674)" rx="2" ry="2" />
<text  x="41.59" y="113.5" ></text>
</g>
</g>
</svg>
