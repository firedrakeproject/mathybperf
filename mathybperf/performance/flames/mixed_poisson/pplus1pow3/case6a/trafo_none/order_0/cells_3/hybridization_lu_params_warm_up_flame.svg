<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="267" onload="init(evt)" viewBox="0 0 1200 267" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:13px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:18px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 13 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (1 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="267.0" fill="url(#background)"  />
<text id="title" x="600.00" y="26" >Firedrake example</text>
<text id="details" x="10.00" y="249" > </text>
<text id="unzoom" x="10.00" y="26" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="26" >Search</text>
<text id="ignorecase" x="1174.00" y="26" >ic</text>
<text id="matched" x="1090.00" y="249" > </text>
<g id="frames">
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (15,492 us, 0.02%)</title><rect x="1065.3" y="167" width="0.2" height="15.0" fill="rgb(120.542080351486,148.288687498533,148.288687498533)" rx="2" ry="2" />
<text  x="1068.31" y="177.5" ></text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (988,716 us, 1.15%)</title><rect x="1176.5" y="119" width="13.5" height="15.0" fill="rgb(131.052480902344,131.052480902344,152.784351142389)" rx="2" ry="2" />
<text  x="1179.46" y="129.5" ></text>
</g>
<g >
<title>ParLoopExecute (6,472,483 us, 7.51%)</title><rect x="1087.8" y="119" width="88.7" height="15.0" fill="rgb(132.193859636877,132.193859636877,153.005263155525)" rx="2" ry="2" />
<text  x="1090.81" y="129.5" >ParLoopEx..</text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (9,838 us, 0.01%)</title><rect x="641.1" y="167" width="0.1" height="15.0" fill="rgb(135.735287670627,135.735287670627,153.690700839476)" rx="2" ry="2" />
<text  x="644.06" y="177.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (1,565,013 us, 1.82%)</title><rect x="1066.4" y="183" width="21.4" height="15.0" fill="rgb(153.282540669365,153.282540669365,135.138466320769)" rx="2" ry="2" />
<text  x="1069.37" y="193.5" ></text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (2,226,087 us, 2.58%)</title><rect x="397.2" y="167" width="30.4" height="15.0" fill="rgb(150.733913729089,159.182851253404,150.733913729089)" rx="2" ry="2" />
<text  x="400.15" y="177.5" >f..</text>
</g>
<g >
<title>SCSolve (11,944 us, 0.01%)</title><rect x="640.1" y="135" width="0.2" height="15.0" fill="rgb(114.232324830372,146.652824956022,146.652824956022)" rx="2" ry="2" />
<text  x="643.10" y="145.5" ></text>
</g>
<g >
<title>firedrake.utility_meshes.SquareMesh (10,942 us, 0.01%)</title><rect x="78.6" y="71" width="0.2" height="15.0" fill="rgb(148.143328686591,159.604574399857,148.143328686591)" rx="2" ry="2" />
<text  x="81.64" y="81.5" ></text>
</g>
<g >
<title>HybridBreak (1,047,689 us, 1.22%)</title><rect x="449.7" y="151" width="14.4" height="15.0" fill="rgb(150.749695072632,150.749695072632,122.863906890446)" rx="2" ry="2" />
<text  x="452.71" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (17,020 us, 0.02%)</title><rect x="41.9" y="87" width="0.3" height="15.0" fill="rgb(134.949989783902,161.752327244481,134.949989783902)" rx="2" ry="2" />
<text  x="44.92" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (11,045 us, 0.01%)</title><rect x="41.8" y="135" width="0.1" height="15.0" fill="rgb(122.680509619237,148.843095086469,148.843095086469)" rx="2" ry="2" />
<text  x="44.77" y="145.5" ></text>
</g>
<g >
<title>KSPSolve (40,962,642 us, 47.55%)</title><rect x="79.2" y="103" width="561.1" height="15.0" fill="rgb(156.35400477815,145.38070329915,145.38070329915)" rx="2" ry="2" />
<text  x="82.22" y="113.5" >KSPSolve</text>
</g>
<g >
<title>firedrake.variational_solver.LinearVariationalProblem.__init__ (20,521 us, 0.02%)</title><rect x="78.8" y="71" width="0.3" height="15.0" fill="rgb(111.943074810816,111.943074810816,149.085756414997)" rx="2" ry="2" />
<text  x="81.79" y="81.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (19,424 us, 0.02%)</title><rect x="640.9" y="135" width="0.3" height="15.0" fill="rgb(108.565371238345,145.183614765497,145.183614765497)" rx="2" ry="2" />
<text  x="643.92" y="145.5" ></text>
</g>
<g >
<title>ParLoopExecute (20,252,740 us, 23.51%)</title><rect x="690.5" y="151" width="277.4" height="15.0" fill="rgb(153.898677664082,126.556528757965,126.556528757965)" rx="2" ry="2" />
<text  x="693.52" y="161.5" >ParLoopExecute</text>
</g>
<g >
<title>SNESFunctionEval (7,461,199 us, 8.66%)</title><rect x="1087.8" y="103" width="102.2" height="15.0" fill="rgb(129.628843964079,162.618560284917,129.628843964079)" rx="2" ry="2" />
<text  x="1090.81" y="113.5" >SNESFunctio..</text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (11,045 us, 0.01%)</title><rect x="41.8" y="119" width="0.1" height="15.0" fill="rgb(149.068659031666,149.068659031666,114.717347614995)" rx="2" ry="2" />
<text  x="44.77" y="129.5" ></text>
</g>
<g >
<title>PCApply (40,962,642 us, 47.55%)</title><rect x="79.2" y="119" width="561.1" height="15.0" fill="rgb(113.44239084685,146.448027256591,146.448027256591)" rx="2" ry="2" />
<text  x="82.22" y="129.5" >PCApply</text>
</g>
<g >
<title>CreateExtMesh (1,693,468 us, 1.97%)</title><rect x="18.7" y="71" width="23.2" height="15.0" fill="rgb(130.300029241109,162.509297565401,130.300029241109)" rx="2" ry="2" />
<text  x="21.73" y="81.5" >C..</text>
</g>
<g >
<title>firedrake.functionspace.VectorFunctionSpace (11,045 us, 0.01%)</title><rect x="41.8" y="87" width="0.1" height="15.0" fill="rgb(144.665457218769,123.830234123096,144.665457218769)" rx="2" ry="2" />
<text  x="44.77" y="97.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (20,252,740 us, 23.51%)</title><rect x="690.5" y="183" width="277.4" height="15.0" fill="rgb(141.195563830999,141.195563830999,154.747528483419)" rx="2" ry="2" />
<text  x="693.52" y="193.5" >pyop2.global_kernel.GlobalKernel.c..</text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.solve (81,100,652 us, 94.13%)</title><rect x="79.2" y="71" width="1110.8" height="15.0" fill="rgb(138.307932169512,152.894649080985,152.894649080985)" rx="2" ry="2" />
<text  x="82.22" y="81.5" >firedrake.variational_solver.NonlinearVariationalSolver.solve</text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (1,611,363 us, 1.87%)</title><rect x="427.6" y="151" width="22.1" height="15.0" fill="rgb(137.264726116449,104.865860673399,137.264726116449)" rx="2" ry="2" />
<text  x="430.64" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (9,838 us, 0.01%)</title><rect x="641.1" y="183" width="0.1" height="15.0" fill="rgb(151.470399644067,151.470399644067,126.356552121247)" rx="2" ry="2" />
<text  x="644.06" y="193.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (11,045 us, 0.01%)</title><rect x="41.8" y="103" width="0.1" height="15.0" fill="rgb(153.049904736962,120.049269650043,120.049269650043)" rx="2" ry="2" />
<text  x="44.77" y="113.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (8,545,479 us, 9.92%)</title><rect x="108.6" y="183" width="117.0" height="15.0" fill="rgb(126.930206536749,163.057873354483,126.930206536749)" rx="2" ry="2" />
<text  x="111.59" y="193.5" >pyop2.global_..</text>
</g>
<g >
<title>firedrake.parloops.par_loop (1,579,744 us, 1.83%)</title><rect x="1066.2" y="135" width="21.6" height="15.0" fill="rgb(150.911583940053,150.911583940053,123.648445247947)" rx="2" ry="2" />
<text  x="1069.17" y="145.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (1,047,689 us, 1.22%)</title><rect x="449.7" y="199" width="14.4" height="15.0" fill="rgb(145.634901778329,160.012922966318,145.634901778329)" rx="2" ry="2" />
<text  x="452.71" y="209.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.local_to_global_map (13,356 us, 0.02%)</title><rect x="967.9" y="151" width="0.2" height="15.0" fill="rgb(145.75798799136,126.629844227861,145.75798799136)" rx="2" ry="2" />
<text  x="970.91" y="161.5" ></text>
</g>
<g >
<title>ParLoopExecute (9,798,767 us, 11.37%)</title><rect x="480.2" y="167" width="134.2" height="15.0" fill="rgb(106.970856998403,144.770222184771,144.770222184771)" rx="2" ry="2" />
<text  x="483.19" y="177.5" >ParLoopExecute</text>
</g>
<g >
<title>ParLoopExecute (8,545,479 us, 9.92%)</title><rect x="108.6" y="151" width="117.0" height="15.0" fill="rgb(154.106763385906,154.106763385906,139.132776408622)" rx="2" ry="2" />
<text  x="111.59" y="161.5" >ParLoopExecute</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (1,022,450 us, 1.19%)</title><rect x="94.6" y="215" width="14.0" height="15.0" fill="rgb(152.607807983809,152.607807983809,131.868607921536)" rx="2" ry="2" />
<text  x="97.58" y="225.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (9,540 us, 0.01%)</title><rect x="78.9" y="103" width="0.2" height="15.0" fill="rgb(153.682769600823,124.901233606307,124.901233606307)" rx="2" ry="2" />
<text  x="81.94" y="113.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_wrap_slate_loopy_knl_0 (20,252,740 us, 23.51%)</title><rect x="690.5" y="167" width="277.4" height="15.0" fill="rgb(154.60484642967,131.970489294137,131.970489294137)" rx="2" ry="2" />
<text  x="693.52" y="177.5" >Parloop_Cells_wrap_wrap_slate_loop..</text>
</g>
<g >
<title>ParLoopExecute (1,565,013 us, 1.82%)</title><rect x="1066.4" y="151" width="21.4" height="15.0" fill="rgb(142.129177424403,117.331017150032,142.129177424403)" rx="2" ry="2" />
<text  x="1069.37" y="161.5" ></text>
</g>
<g >
<title>SCBackSub (27,050,169 us, 31.40%)</title><rect x="79.2" y="135" width="370.5" height="15.0" fill="rgb(155.663836837044,155.663836837044,146.678593902598)" rx="2" ry="2" />
<text  x="82.22" y="145.5" >SCBackSub</text>
</g>
<g >
<title>firedrake.ufl_expr.action (10,981 us, 0.01%)</title><rect x="78.8" y="87" width="0.1" height="15.0" fill="rgb(125.28642773809,149.518703487653,149.518703487653)" rx="2" ry="2" />
<text  x="81.79" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (17,020 us, 0.02%)</title><rect x="41.9" y="119" width="0.3" height="15.0" fill="rgb(152.393918967898,115.020045420552,115.020045420552)" rx="2" ry="2" />
<text  x="44.92" y="129.5" ></text>
</g>
<g >
<title>ParLoopExecute (1,666,686 us, 1.93%)</title><rect x="18.9" y="103" width="22.9" height="15.0" fill="rgb(151.453069910195,151.453069910195,126.27256956479)" rx="2" ry="2" />
<text  x="21.94" y="113.5" ></text>
</g>
<g >
<title>firedrake.extrusion_utils.make_extruded_coords (1,682,423 us, 1.95%)</title><rect x="18.7" y="87" width="23.1" height="15.0" fill="rgb(139.326029761223,110.147951263134,139.326029761223)" rx="2" ry="2" />
<text  x="21.73" y="97.5" >f..</text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (15,492 us, 0.02%)</title><rect x="1065.3" y="135" width="0.2" height="15.0" fill="rgb(141.471804316102,141.471804316102,154.800994383762)" rx="2" ry="2" />
<text  x="1068.31" y="145.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (15,492 us, 0.02%)</title><rect x="1065.3" y="151" width="0.2" height="15.0" fill="rgb(152.600438758551,152.600438758551,131.832895522209)" rx="2" ry="2" />
<text  x="1068.31" y="161.5" ></text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (7,098,062 us, 8.24%)</title><rect x="968.1" y="151" width="97.2" height="15.0" fill="rgb(154.693528529409,132.650385392138,132.650385392138)" rx="2" ry="2" />
<text  x="971.09" y="161.5" >firedrake...</text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (11,045 us, 0.01%)</title><rect x="41.8" y="151" width="0.1" height="15.0" fill="rgb(138.55360804556,152.958342826627,152.958342826627)" rx="2" ry="2" />
<text  x="44.77" y="161.5" ></text>
</g>
<g >
<title>firedrake.__init__ (2,663,765 us, 3.09%)</title><rect x="42.2" y="71" width="36.4" height="15.0" fill="rgb(155.667387272052,140.116635752398,140.116635752398)" rx="2" ry="2" />
<text  x="45.16" y="81.5" >fi..</text>
</g>
<g >
<title>HybridOperatorAssembly (30,966,035 us, 35.94%)</title><rect x="641.2" y="135" width="424.1" height="15.0" fill="rgb(156.126282718471,143.634834174947,143.634834174947)" rx="2" ry="2" />
<text  x="644.19" y="145.5" >HybridOperatorAssembly</text>
</g>
<g >
<title>firedrake.parloops.par_loop (1,022,450 us, 1.19%)</title><rect x="94.6" y="167" width="14.0" height="15.0" fill="rgb(115.923442098467,147.091262766269,147.091262766269)" rx="2" ry="2" />
<text  x="97.58" y="177.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (1,047,689 us, 1.22%)</title><rect x="449.7" y="215" width="14.4" height="15.0" fill="rgb(131.074835486328,151.019401792752,151.019401792752)" rx="2" ry="2" />
<text  x="452.71" y="225.5" ></text>
</g>
<g >
<title>RecoverFirstElim (14,749,561 us, 17.12%)</title><rect x="225.6" y="151" width="202.0" height="15.0" fill="rgb(149.269971699287,135.629302479422,149.269971699287)" rx="2" ry="2" />
<text  x="228.63" y="161.5" >RecoverFirstElim</text>
</g>
<g >
<title>Parloop_Cells_wrap_wrap_slate_loopy_knl_14 (8,545,479 us, 9.92%)</title><rect x="108.6" y="167" width="117.0" height="15.0" fill="rgb(152.425984006421,143.716584016454,152.425984006421)" rx="2" ry="2" />
<text  x="111.59" y="177.5" >Parloop_Cells..</text>
</g>
<g >
<title>SNESSolve (81,100,652 us, 94.13%)</title><rect x="79.2" y="87" width="1110.8" height="15.0" fill="rgb(118.65818046559,118.65818046559,150.385454283663)" rx="2" ry="2" />
<text  x="82.22" y="97.5" >SNESSolve</text>
</g>
<g >
<title>Parloop_Cells_wrap_pyop2_kernel_uniform_extrusion (1,666,686 us, 1.93%)</title><rect x="18.9" y="119" width="22.9" height="15.0" fill="rgb(152.153613847253,113.177706162272,113.177706162272)" rx="2" ry="2" />
<text  x="21.94" y="129.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (11,071,408 us, 12.85%)</title><rect x="245.5" y="199" width="151.7" height="15.0" fill="rgb(135.262419746425,161.701466552908,135.262419746425)" rx="2" ry="2" />
<text  x="248.52" y="209.5" >pyop2.global_kern..</text>
</g>
<g >
<title>Parloop_Cells_wrap_form1_cell_integral_otherwise (3,575,307 us, 4.15%)</title><rect x="1127.5" y="135" width="49.0" height="15.0" fill="rgb(147.162687125108,147.162687125108,155.902455572602)" rx="2" ry="2" />
<text  x="1130.49" y="145.5" >Parl..</text>
</g>
<g >
<title>HybridInit (32,676,811 us, 37.93%)</title><rect x="640.3" y="119" width="447.5" height="15.0" fill="rgb(153.906166805322,126.613945507472,126.613945507472)" rx="2" ry="2" />
<text  x="643.26" y="129.5" >HybridInit</text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (17,020 us, 0.02%)</title><rect x="41.9" y="103" width="0.3" height="15.0" fill="rgb(139.877325957479,153.301528951939,153.301528951939)" rx="2" ry="2" />
<text  x="44.92" y="113.5" ></text>
</g>
<g >
<title>HybridRHS (12,852,840 us, 14.92%)</title><rect x="464.1" y="151" width="176.0" height="15.0" fill="rgb(122.712755429345,148.851455111312,148.851455111312)" rx="2" ry="2" />
<text  x="467.06" y="161.5" >HybridRHS</text>
</g>
<g >
<title>SCForwardElim (13,900,529 us, 16.13%)</title><rect x="449.7" y="135" width="190.4" height="15.0" fill="rgb(153.405049139741,153.405049139741,135.73216121567)" rx="2" ry="2" />
<text  x="452.71" y="145.5" >SCForwardElim</text>
</g>
<g >
<title>CreateFunctionSpace (15,492 us, 0.02%)</title><rect x="1065.3" y="183" width="0.2" height="15.0" fill="rgb(150.219738663757,138.063080325876,150.219738663757)" rx="2" ry="2" />
<text  x="1068.31" y="193.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_wrap_slate_loopy_knl_4 (9,798,767 us, 11.37%)</title><rect x="480.2" y="183" width="134.2" height="15.0" fill="rgb(152.819491258936,118.28276631851,118.28276631851)" rx="2" ry="2" />
<text  x="483.19" y="193.5" >Parloop_Cells_w..</text>
</g>
<g >
<title>firedrake.interpolation.make_interpolator (47,609 us, 0.06%)</title><rect x="1065.5" y="135" width="0.7" height="15.0" fill="rgb(156.296375063813,144.938875489235,144.938875489235)" rx="2" ry="2" />
<text  x="1068.52" y="145.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (3,575,307 us, 4.15%)</title><rect x="1127.5" y="151" width="49.0" height="15.0" fill="rgb(155.875471017747,141.711944469395,141.711944469395)" rx="2" ry="2" />
<text  x="1130.49" y="161.5" >pyop..</text>
</g>
<g >
<title>ParLoopExecute (1,047,689 us, 1.22%)</title><rect x="449.7" y="183" width="14.4" height="15.0" fill="rgb(135.734511542552,135.734511542552,153.690550621139)" rx="2" ry="2" />
<text  x="452.71" y="193.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (1,666,686 us, 1.93%)</title><rect x="18.9" y="135" width="22.9" height="15.0" fill="rgb(137.78142575046,161.291395808065,137.78142575046)" rx="2" ry="2" />
<text  x="21.94" y="145.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (17,020 us, 0.02%)</title><rect x="41.9" y="71" width="0.3" height="15.0" fill="rgb(152.053511485632,152.053511485632,129.182401814986)" rx="2" ry="2" />
<text  x="44.92" y="81.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_wrap_slate_loopy_knl_7 (11,071,408 us, 12.85%)</title><rect x="245.5" y="183" width="151.7" height="15.0" fill="rgb(149.948721693604,149.948721693604,118.982266669003)" rx="2" ry="2" />
<text  x="248.52" y="193.5" >Parloop_Cells_wra..</text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (1,022,450 us, 1.19%)</title><rect x="94.6" y="199" width="14.0" height="15.0" fill="rgb(119.549498843142,119.549498843142,150.557967518027)" rx="2" ry="2" />
<text  x="97.58" y="209.5" ></text>
</g>
<g >
<title>HybridProject (1,022,450 us, 1.19%)</title><rect x="94.6" y="151" width="14.0" height="15.0" fill="rgb(113.810128461095,146.543366638062,146.543366638062)" rx="2" ry="2" />
<text  x="97.58" y="161.5" ></text>
</g>
<g >
<title>PCSetUp (11,944 us, 0.01%)</title><rect x="640.1" y="151" width="0.2" height="15.0" fill="rgb(155.683652723282,140.241337545165,140.241337545165)" rx="2" ry="2" />
<text  x="643.10" y="161.5" ></text>
</g>
<g >
<title>all (86,154,917 us, 100%)</title><rect x="10.0" y="39" width="1180.0" height="15.0" fill="rgb(142.119677682548,160.585168749353,142.119677682548)" rx="2" ry="2" />
<text  x="13.00" y="49.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_form0_cell_integral_otherwise (2,897,176 us, 3.36%)</title><rect x="1087.8" y="135" width="39.7" height="15.0" fill="rgb(147.978153222873,132.319017633612,147.978153222873)" rx="2" ry="2" />
<text  x="1090.81" y="145.5" >Par..</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (9,798,767 us, 11.37%)</title><rect x="480.2" y="199" width="134.2" height="15.0" fill="rgb(139.002357576977,109.318541291004,139.002357576977)" rx="2" ry="2" />
<text  x="483.19" y="209.5" >pyop2.global_ke..</text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalProblem.__init__ (9,540 us, 0.01%)</title><rect x="78.9" y="87" width="0.2" height="15.0" fill="rgb(111.9790823947,146.068650991219,146.068650991219)" rx="2" ry="2" />
<text  x="81.94" y="97.5" ></text>
</g>
<g >
<title>firedrake.parloops.par_loop (1,047,689 us, 1.22%)</title><rect x="449.7" y="167" width="14.4" height="15.0" fill="rgb(147.993761994119,132.359015109929,147.993761994119)" rx="2" ry="2" />
<text  x="452.71" y="177.5" ></text>
</g>
<g >
<title>ParLoopExecute (11,071,408 us, 12.85%)</title><rect x="245.5" y="167" width="151.7" height="15.0" fill="rgb(123.17584668524,123.17584668524,151.259841293917)" rx="2" ry="2" />
<text  x="248.52" y="177.5" >ParLoopExecute</text>
</g>
<g >
<title>firedrake (86,154,917 us, 100.00%)</title><rect x="10.0" y="55" width="1180.0" height="15.0" fill="rgb(150.775919368894,159.176013125994,150.775919368894)" rx="2" ry="2" />
<text  x="13.00" y="65.5" >firedrake</text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.__init__ (11,229 us, 0.01%)</title><rect x="79.1" y="71" width="0.1" height="15.0" fill="rgb(155.027261465232,135.209004566782,135.209004566782)" rx="2" ry="2" />
<text  x="82.07" y="81.5" ></text>
</g>
<g >
<title>PCSetUp (32,676,811 us, 37.93%)</title><rect x="640.3" y="103" width="447.5" height="15.0" fill="rgb(130.459002850879,150.859741479857,150.859741479857)" rx="2" ry="2" />
<text  x="643.26" y="113.5" >PCSetUp</text>
</g>
<g >
<title>MatLUFactor (11,944 us, 0.01%)</title><rect x="640.1" y="167" width="0.2" height="15.0" fill="rgb(129.731644450301,162.601825322044,129.731644450301)" rx="2" ry="2" />
<text  x="643.10" y="177.5" ></text>
</g>
<g >
<title>ParLoopExecute (1,022,450 us, 1.19%)</title><rect x="94.6" y="183" width="14.0" height="15.0" fill="rgb(154.882431498095,154.882431498095,142.891783413846)" rx="2" ry="2" />
<text  x="97.58" y="193.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (2,897,176 us, 3.36%)</title><rect x="1087.8" y="151" width="39.7" height="15.0" fill="rgb(138.834066530401,108.887295484153,138.834066530401)" rx="2" ry="2" />
<text  x="1090.81" y="161.5" >pyo..</text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (1,565,013 us, 1.82%)</title><rect x="1066.4" y="167" width="21.4" height="15.0" fill="rgb(139.210775088684,139.210775088684,154.363375823616)" rx="2" ry="2" />
<text  x="1069.37" y="177.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (9,838 us, 0.01%)</title><rect x="641.1" y="151" width="0.1" height="15.0" fill="rgb(140.05610540914,140.05610540914,154.526988143705)" rx="2" ry="2" />
<text  x="644.06" y="161.5" ></text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (1,876,340 us, 2.18%)</title><rect x="614.4" y="167" width="25.7" height="15.0" fill="rgb(144.315144031213,160.227767250733,144.315144031213)" rx="2" ry="2" />
<text  x="617.40" y="177.5" >f..</text>
</g>
<g >
<title>firedrake.utility_meshes.RectangleMesh (10,942 us, 0.01%)</title><rect x="78.6" y="87" width="0.2" height="15.0" fill="rgb(126.700709910494,149.885369236054,149.885369236054)" rx="2" ry="2" />
<text  x="81.64" y="97.5" ></text>
</g>
</g>
</svg>
