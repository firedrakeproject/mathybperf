<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="267" onload="init(evt)" viewBox="0 0 1200 267" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:13px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:18px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 13 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (1 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="267.0" fill="url(#background)"  />
<text id="title" x="600.00" y="26" >Firedrake example</text>
<text id="details" x="10.00" y="249" > </text>
<text id="unzoom" x="10.00" y="26" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="26" >Search</text>
<text id="ignorecase" x="1174.00" y="26" >ic</text>
<text id="matched" x="1090.00" y="249" > </text>
<g id="frames">
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (6,445 us, 0.01%)</title><rect x="1070.5" y="151" width="0.1" height="15.0" fill="rgb(152.598940853299,152.598940853299,131.825636442911)" rx="2" ry="2" />
<text  x="1073.47" y="161.5" ></text>
</g>
<g >
<title>firedrake.matrix_free.operators.ImplicitMatrixContext.__init__ (6,645 us, 0.01%)</title><rect x="66.1" y="103" width="0.1" height="15.0" fill="rgb(155.801532605876,141.145083311713,141.145083311713)" rx="2" ry="2" />
<text  x="69.11" y="113.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.LinearVariationalProblem.__init__ (20,134 us, 0.03%)</title><rect x="65.7" y="71" width="0.4" height="15.0" fill="rgb(123.859995056298,123.859995056298,151.392257107671)" rx="2" ry="2" />
<text  x="68.74" y="81.5" ></text>
</g>
<g >
<title>firedrake.utility_meshes.RectangleMesh (10,877 us, 0.02%)</title><rect x="65.5" y="87" width="0.2" height="15.0" fill="rgb(130.942784739271,130.942784739271,152.763119626956)" rx="2" ry="2" />
<text  x="68.54" y="97.5" ></text>
</g>
<g >
<title>HybridInit (15,799,140 us, 24.83%)</title><rect x="790.7" y="119" width="293.0" height="15.0" fill="rgb(155.057689897494,155.057689897494,143.741112580164)" rx="2" ry="2" />
<text  x="793.74" y="129.5" >HybridInit</text>
</g>
<g >
<title>ParLoopExecute (683,431 us, 1.07%)</title><rect x="1071.0" y="151" width="12.7" height="15.0" fill="rgb(152.714417714036,117.477202474277,117.477202474277)" rx="2" ry="2" />
<text  x="1074.04" y="161.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (883,751 us, 1.39%)</title><rect x="557.0" y="215" width="16.4" height="15.0" fill="rgb(144.413586140494,154.477596406795,154.477596406795)" rx="2" ry="2" />
<text  x="560.02" y="225.5" ></text>
</g>
<g >
<title>SNESSolve (60,602,657 us, 95.23%)</title><rect x="66.2" y="87" width="1123.8" height="15.0" fill="rgb(137.400308833821,152.659339327287,152.659339327287)" rx="2" ry="2" />
<text  x="69.24" y="97.5" >SNESSolve</text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (15,082 us, 0.02%)</title><rect x="36.0" y="151" width="0.3" height="15.0" fill="rgb(140.327366080285,160.876940405535,140.327366080285)" rx="2" ry="2" />
<text  x="39.04" y="161.5" ></text>
</g>
<g >
<title>firedrake.parloops.par_loop (683,431 us, 1.07%)</title><rect x="1071.0" y="135" width="12.7" height="15.0" fill="rgb(156.420179376433,145.888041885983,145.888041885983)" rx="2" ry="2" />
<text  x="1074.04" y="145.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (883,751 us, 1.39%)</title><rect x="557.0" y="199" width="16.4" height="15.0" fill="rgb(151.116929577476,159.120499836225,151.116929577476)" rx="2" ry="2" />
<text  x="560.02" y="209.5" ></text>
</g>
<g >
<title>firedrake.functionspace.VectorFunctionSpace (15,082 us, 0.02%)</title><rect x="36.0" y="87" width="0.3" height="15.0" fill="rgb(155.410612499532,138.148029163077,138.148029163077)" rx="2" ry="2" />
<text  x="39.04" y="97.5" ></text>
</g>
<g >
<title>DMPlexInterp (10,877 us, 0.02%)</title><rect x="65.5" y="119" width="0.2" height="15.0" fill="rgb(128.387611138201,162.820621442618,128.387611138201)" rx="2" ry="2" />
<text  x="68.54" y="129.5" ></text>
</g>
<g >
<title>PCSetUp (15,799,140 us, 24.83%)</title><rect x="790.7" y="103" width="293.0" height="15.0" fill="rgb(150.530982952223,159.21588649615,150.530982952223)" rx="2" ry="2" />
<text  x="793.74" y="113.5" >PCSetUp</text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (6,445 us, 0.01%)</title><rect x="1070.5" y="135" width="0.1" height="15.0" fill="rgb(146.003681634796,159.952889036196,146.003681634796)" rx="2" ry="2" />
<text  x="1073.47" y="145.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.action (10,772 us, 0.02%)</title><rect x="65.7" y="87" width="0.2" height="15.0" fill="rgb(143.913344382989,121.90294498141,143.913344382989)" rx="2" ry="2" />
<text  x="68.74" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (14,830 us, 0.02%)</title><rect x="36.3" y="119" width="0.3" height="15.0" fill="rgb(152.222211655789,113.703622694382,113.703622694382)" rx="2" ry="2" />
<text  x="39.32" y="129.5" ></text>
</g>
<g >
<title>HybridRHS (11,713,314 us, 18.41%)</title><rect x="573.4" y="151" width="217.2" height="15.0" fill="rgb(112.245739291491,112.245739291491,149.144336637063)" rx="2" ry="2" />
<text  x="576.41" y="161.5" >HybridRHS</text>
</g>
<g >
<title>PCApply (39,071,480 us, 61.40%)</title><rect x="66.2" y="119" width="724.5" height="15.0" fill="rgb(132.919727296299,151.497707076818,151.497707076818)" rx="2" ry="2" />
<text  x="69.24" y="129.5" >PCApply</text>
</g>
<g >
<title>CreateExtMesh (969,803 us, 1.52%)</title><rect x="18.3" y="71" width="18.0" height="15.0" fill="rgb(113.053107828427,146.347102029592,146.347102029592)" rx="2" ry="2" />
<text  x="21.34" y="81.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.__init__ (6,645 us, 0.01%)</title><rect x="66.1" y="71" width="0.1" height="15.0" fill="rgb(155.631333723945,139.840225216909,139.840225216909)" rx="2" ry="2" />
<text  x="69.11" y="81.5" ></text>
</g>
<g >
<title>SCSolve (7,290 us, 0.01%)</title><rect x="790.6" y="135" width="0.1" height="15.0" fill="rgb(148.256719679964,148.256719679964,110.782564602902)" rx="2" ry="2" />
<text  x="793.61" y="145.5" ></text>
</g>
<g >
<title>firedrake.extrusion_utils.make_extruded_coords (946,773 us, 1.49%)</title><rect x="18.5" y="87" width="17.5" height="15.0" fill="rgb(152.225259880957,113.726992420668,113.726992420668)" rx="2" ry="2" />
<text  x="21.49" y="97.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_wrap_slate_loopy_knl_4 (9,131,382 us, 14.35%)</title><rect x="592.9" y="183" width="169.3" height="15.0" fill="rgb(146.599239386613,155.044247248381,155.044247248381)" rx="2" ry="2" />
<text  x="595.87" y="193.5" >Parloop_Cells_wrap_w..</text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (2,158,839 us, 3.39%)</title><rect x="486.6" y="167" width="40.0" height="15.0" fill="rgb(141.870536920919,160.625726547757,141.870536920919)" rx="2" ry="2" />
<text  x="489.58" y="177.5" >fir..</text>
</g>
<g >
<title>ParLoopExecute (10,629,451 us, 16.70%)</title><rect x="289.5" y="167" width="197.1" height="15.0" fill="rgb(143.08882022967,160.427401357961,143.08882022967)" rx="2" ry="2" />
<text  x="292.48" y="177.5" >ParLoopExecute</text>
</g>
<g >
<title>SNESFunctionEval (5,732,037 us, 9.01%)</title><rect x="1083.7" y="103" width="106.3" height="15.0" fill="rgb(130.596217932054,162.461080801759,130.596217932054)" rx="2" ry="2" />
<text  x="1086.71" y="113.5" >SNESFunctio..</text>
</g>
<g >
<title>CreateFunctionSpace (10,136 us, 0.02%)</title><rect x="791.2" y="135" width="0.2" height="15.0" fill="rgb(150.48688956725,150.48688956725,121.590310979749)" rx="2" ry="2" />
<text  x="794.23" y="145.5" ></text>
</g>
<g >
<title>Log_Event_slate_loopy_knl_7 (17,533 us, 0.03%)</title><rect x="289.7" y="199" width="0.4" height="15.0" fill="rgb(132.544625691531,151.400458512619,151.400458512619)" rx="2" ry="2" />
<text  x="292.74" y="209.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (683,431 us, 1.07%)</title><rect x="1071.0" y="183" width="12.7" height="15.0" fill="rgb(135.779303295056,161.61732271941,135.779303295056)" rx="2" ry="2" />
<text  x="1074.04" y="193.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_form0_cell_integral_otherwise (2,631,170 us, 4.13%)</title><rect x="1083.7" y="135" width="48.8" height="15.0" fill="rgb(126.246490044071,149.767608529944,149.767608529944)" rx="2" ry="2" />
<text  x="1086.71" y="145.5" >Parl..</text>
</g>
<g >
<title>firedrake.parloops.par_loop (890,678 us, 1.40%)</title><rect x="556.9" y="167" width="16.5" height="15.0" fill="rgb(122.328118100097,122.328118100097,151.095764793567)" rx="2" ry="2" />
<text  x="559.89" y="177.5" ></text>
</g>
<g >
<title>firedrake.__init__ (1,560,706 us, 2.45%)</title><rect x="36.6" y="71" width="28.9" height="15.0" fill="rgb(152.548018804417,116.20147750053,116.20147750053)" rx="2" ry="2" />
<text  x="39.60" y="81.5" >f..</text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (15,082 us, 0.02%)</title><rect x="36.0" y="119" width="0.3" height="15.0" fill="rgb(147.719900054206,147.719900054206,108.181054108847)" rx="2" ry="2" />
<text  x="39.04" y="129.5" ></text>
</g>
<g >
<title>firedrake.mesh.MeshTopology._facets (7,001 us, 0.01%)</title><rect x="36.2" y="167" width="0.1" height="15.0" fill="rgb(127.031645276264,149.971167293846,149.971167293846)" rx="2" ry="2" />
<text  x="39.19" y="177.5" ></text>
</g>
<g >
<title>ParLoopExecute (8,629,361 us, 13.56%)</title><rect x="104.2" y="151" width="160.1" height="15.0" fill="rgb(138.331303695418,161.201880793769,138.331303695418)" rx="2" ry="2" />
<text  x="107.25" y="161.5" >ParLoopExecute</text>
</g>
<g >
<title>Parloop_Cells_wrap_pyop2_kernel_uniform_extrusion (931,601 us, 1.46%)</title><rect x="18.8" y="119" width="17.2" height="15.0" fill="rgb(141.748084401661,160.645660678799,141.748084401661)" rx="2" ry="2" />
<text  x="21.77" y="129.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_wrap_slate_loopy_knl_14 (8,629,361 us, 13.56%)</title><rect x="104.2" y="167" width="160.1" height="15.0" fill="rgb(129.915323244688,162.571924122958,129.915323244688)" rx="2" ry="2" />
<text  x="107.25" y="177.5" >Parloop_Cells_wrap..</text>
</g>
<g >
<title>firedrake.utility_meshes.SquareMesh (10,877 us, 0.02%)</title><rect x="65.5" y="71" width="0.2" height="15.0" fill="rgb(113.228198524895,146.392495913862,146.392495913862)" rx="2" ry="2" />
<text  x="68.54" y="81.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (9,362 us, 0.01%)</title><rect x="65.9" y="103" width="0.2" height="15.0" fill="rgb(123.309425328375,123.309425328375,151.285695224847)" rx="2" ry="2" />
<text  x="68.94" y="113.5" ></text>
</g>
<g >
<title>HybridProject (949,702 us, 1.49%)</title><rect x="86.6" y="151" width="17.6" height="15.0" fill="rgb(156.588514697881,147.178612683756,147.178612683756)" rx="2" ry="2" />
<text  x="89.64" y="161.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalProblem.__init__ (9,362 us, 0.01%)</title><rect x="65.9" y="87" width="0.2" height="15.0" fill="rgb(133.854202999077,151.739978555316,151.739978555316)" rx="2" ry="2" />
<text  x="68.94" y="97.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (6,445 us, 0.01%)</title><rect x="1070.5" y="183" width="0.1" height="15.0" fill="rgb(136.186272982341,161.551071840084,136.186272982341)" rx="2" ry="2" />
<text  x="1073.47" y="193.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_wrap_slate_loopy_knl_7 (10,629,451 us, 16.70%)</title><rect x="289.5" y="183" width="197.1" height="15.0" fill="rgb(137.516576131617,105.511226337269,137.516576131617)" rx="2" ry="2" />
<text  x="292.48" y="193.5" >Parloop_Cells_wrap_wrap..</text>
</g>
<g >
<title>Parloop_Cells_wrap_form1_cell_integral_otherwise (2,145,051 us, 3.37%)</title><rect x="1132.5" y="135" width="39.8" height="15.0" fill="rgb(148.017444660427,148.017444660427,109.623001046686)" rx="2" ry="2" />
<text  x="1135.50" y="145.5" >Par..</text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (942,107 us, 1.48%)</title><rect x="86.8" y="199" width="17.4" height="15.0" fill="rgb(135.500807528213,100.345819291047,135.500807528213)" rx="2" ry="2" />
<text  x="89.78" y="209.5" ></text>
</g>
<g >
<title>SCForwardElim (12,603,992 us, 19.81%)</title><rect x="556.9" y="135" width="233.7" height="15.0" fill="rgb(153.086339248058,120.328600901778,120.328600901778)" rx="2" ry="2" />
<text  x="559.89" y="145.5" >SCForwardElim</text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (6,445 us, 0.01%)</title><rect x="1070.5" y="167" width="0.1" height="15.0" fill="rgb(115.913335305071,147.0886424865,147.0886424865)" rx="2" ry="2" />
<text  x="1073.47" y="177.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (8,610,875 us, 13.53%)</title><rect x="104.6" y="183" width="159.7" height="15.0" fill="rgb(151.664796394874,141.766040761864,151.664796394874)" rx="2" ry="2" />
<text  x="107.59" y="193.5" >pyop2.global_kerne..</text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.solve (60,602,657 us, 95.23%)</title><rect x="66.2" y="71" width="1123.8" height="15.0" fill="rgb(131.133449935234,162.373624429148,131.133449935234)" rx="2" ry="2" />
<text  x="69.24" y="81.5" >firedrake.variational_solver.NonlinearVariationalSolver.solve</text>
</g>
<g >
<title>KSPSolve (39,071,480 us, 61.40%)</title><rect x="66.2" y="103" width="724.5" height="15.0" fill="rgb(139.783372751222,160.965497459103,139.783372751222)" rx="2" ry="2" />
<text  x="69.24" y="113.5" >KSPSolve</text>
</g>
<g >
<title>firedrake (63,635,372 us, 100.00%)</title><rect x="10.0" y="55" width="1180.0" height="15.0" fill="rgb(152.078544874248,112.602177369236,112.602177369236)" rx="2" ry="2" />
<text  x="13.00" y="65.5" >firedrake</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (11,299,097 us, 17.76%)</title><rect x="820.4" y="183" width="209.5" height="15.0" fill="rgb(156.040434979854,142.976668178883,142.976668178883)" rx="2" ry="2" />
<text  x="823.41" y="193.5" >pyop2.global_kernel.Globa..</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (931,601 us, 1.46%)</title><rect x="18.8" y="135" width="17.2" height="15.0" fill="rgb(154.269373493197,129.398530114509,129.398530114509)" rx="2" ry="2" />
<text  x="21.77" y="145.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (683,431 us, 1.07%)</title><rect x="1071.0" y="167" width="12.7" height="15.0" fill="rgb(151.07201815207,151.07201815207,124.425934121571)" rx="2" ry="2" />
<text  x="1074.04" y="177.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (15,082 us, 0.02%)</title><rect x="36.0" y="103" width="0.3" height="15.0" fill="rgb(129.319171680791,129.319171680791,152.448871938218)" rx="2" ry="2" />
<text  x="39.04" y="113.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (14,830 us, 0.02%)</title><rect x="36.3" y="103" width="0.3" height="15.0" fill="rgb(150.381346929437,150.381346929437,121.078835119581)" rx="2" ry="2" />
<text  x="39.32" y="113.5" ></text>
</g>
<g >
<title>firedrake.mesh._from_cell_list (10,877 us, 0.02%)</title><rect x="65.5" y="103" width="0.2" height="15.0" fill="rgb(156.541623059994,146.819110126624,146.819110126624)" rx="2" ry="2" />
<text  x="68.54" y="113.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (2,145,051 us, 3.37%)</title><rect x="1132.5" y="151" width="39.8" height="15.0" fill="rgb(139.724141665375,111.168113017525,139.724141665375)" rx="2" ry="2" />
<text  x="1135.50" y="161.5" >pyo..</text>
</g>
<g >
<title>ParLoopExecute (931,601 us, 1.46%)</title><rect x="18.8" y="103" width="17.2" height="15.0" fill="rgb(131.073132497068,131.073132497068,152.788348225239)" rx="2" ry="2" />
<text  x="21.77" y="113.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (10,597,645 us, 16.65%)</title><rect x="290.1" y="199" width="196.5" height="15.0" fill="rgb(151.011850591364,159.137605717685,151.011850591364)" rx="2" ry="2" />
<text  x="293.07" y="209.5" >pyop2.global_kernel.Glo..</text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (955,816 us, 1.50%)</title><rect x="1172.3" y="119" width="17.7" height="15.0" fill="rgb(154.027533053642,154.027533053642,138.748814029189)" rx="2" ry="2" />
<text  x="1175.28" y="129.5" ></text>
</g>
<g >
<title>all (63,635,372 us, 100%)</title><rect x="10.0" y="39" width="1180.0" height="15.0" fill="rgb(146.540450627701,159.865508037351,146.540450627701)" rx="2" ry="2" />
<text  x="13.00" y="49.5" ></text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (1,532,389 us, 2.41%)</title><rect x="762.2" y="167" width="28.4" height="15.0" fill="rgb(123.960890849437,163.541250326836,123.960890849437)" rx="2" ry="2" />
<text  x="765.19" y="177.5" >f..</text>
</g>
<g >
<title>firedrake.assemble.allocate_matrix (6,645 us, 0.01%)</title><rect x="66.1" y="87" width="0.1" height="15.0" fill="rgb(130.137270147536,150.776329297509,150.776329297509)" rx="2" ry="2" />
<text  x="69.11" y="97.5" ></text>
</g>
<g >
<title>ParLoopExecute (9,131,382 us, 14.35%)</title><rect x="592.9" y="167" width="169.3" height="15.0" fill="rgb(144.785476445526,144.785476445526,155.442350279779)" rx="2" ry="2" />
<text  x="595.87" y="177.5" >ParLoopExecute</text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (14,830 us, 0.02%)</title><rect x="36.3" y="87" width="0.3" height="15.0" fill="rgb(153.37211437733,153.37211437733,135.572554290139)" rx="2" ry="2" />
<text  x="39.32" y="97.5" ></text>
</g>
<g >
<title>RecoverFirstElim (14,148,164 us, 22.23%)</title><rect x="264.3" y="151" width="262.3" height="15.0" fill="rgb(149.610532103516,136.50198851526,149.610532103516)" rx="2" ry="2" />
<text  x="267.26" y="161.5" >RecoverFirstElim</text>
</g>
<g >
<title>HybridBreak (890,678 us, 1.40%)</title><rect x="556.9" y="151" width="16.5" height="15.0" fill="rgb(148.182479980211,148.182479980211,110.422787596406)" rx="2" ry="2" />
<text  x="559.89" y="161.5" ></text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (2,186,211 us, 3.44%)</title><rect x="1029.9" y="151" width="40.6" height="15.0" fill="rgb(151.446677667809,151.446677667809,126.241591774764)" rx="2" ry="2" />
<text  x="1032.93" y="161.5" >fir..</text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (1,632,781 us, 2.57%)</title><rect x="526.6" y="151" width="30.3" height="15.0" fill="rgb(143.62122232421,160.340731249547,143.62122232421)" rx="2" ry="2" />
<text  x="529.61" y="161.5" >f..</text>
</g>
<g >
<title>ParLoopExecute (942,107 us, 1.48%)</title><rect x="86.8" y="183" width="17.4" height="15.0" fill="rgb(140.53701218899,160.842811969234,140.53701218899)" rx="2" ry="2" />
<text  x="89.78" y="193.5" ></text>
</g>
<g >
<title>SCBackSub (26,460,198 us, 41.58%)</title><rect x="66.2" y="135" width="490.7" height="15.0" fill="rgb(146.806023878295,155.097858042521,155.097858042521)" rx="2" ry="2" />
<text  x="69.24" y="145.5" >SCBackSub</text>
</g>
<g >
<title>Parloop_Cells_wrap_wrap_slate_loopy_knl_0 (11,322,755 us, 17.79%)</title><rect x="820.0" y="167" width="209.9" height="15.0" fill="rgb(105.961751251825,144.508602176399,144.508602176399)" rx="2" ry="2" />
<text  x="822.97" y="177.5" >Parloop_Cells_wrap_wrap_s..</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (2,631,170 us, 4.13%)</title><rect x="1083.7" y="151" width="48.8" height="15.0" fill="rgb(133.579934362175,151.668871871675,151.668871871675)" rx="2" ry="2" />
<text  x="1086.71" y="161.5" >pyop..</text>
</g>
<g >
<title>HybridOperatorAssembly (15,048,671 us, 23.65%)</title><rect x="791.4" y="135" width="279.1" height="15.0" fill="rgb(145.130734307735,160.094996740601,145.130734307735)" rx="2" ry="2" />
<text  x="794.42" y="145.5" >HybridOperatorAssembly</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (942,107 us, 1.48%)</title><rect x="86.8" y="215" width="17.4" height="15.0" fill="rgb(130.56202122324,150.886449946766,150.886449946766)" rx="2" ry="2" />
<text  x="89.78" y="225.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (15,082 us, 0.02%)</title><rect x="36.0" y="135" width="0.3" height="15.0" fill="rgb(129.129951990091,162.699775257427,129.129951990091)" rx="2" ry="2" />
<text  x="39.04" y="145.5" ></text>
</g>
<g >
<title>ParLoopExecute (4,776,221 us, 7.51%)</title><rect x="1083.7" y="119" width="88.6" height="15.0" fill="rgb(138.678850101704,161.145303471816,138.678850101704)" rx="2" ry="2" />
<text  x="1086.71" y="129.5" >ParLoopEx..</text>
</g>
<g >
<title>ParLoopExecute (11,322,755 us, 17.79%)</title><rect x="820.0" y="151" width="209.9" height="15.0" fill="rgb(122.200430844003,122.200430844003,151.071051131097)" rx="2" ry="2" />
<text  x="822.97" y="161.5" >ParLoopExecute</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (9,115,024 us, 14.32%)</title><rect x="593.2" y="199" width="169.0" height="15.0" fill="rgb(127.190287237844,150.012296691293,150.012296691293)" rx="2" ry="2" />
<text  x="596.17" y="209.5" >pyop2.global_kernel...</text>
</g>
<g >
<title>CreateFunctionSpace (14,830 us, 0.02%)</title><rect x="36.3" y="71" width="0.3" height="15.0" fill="rgb(155.108668644557,155.108668644557,143.988163431313)" rx="2" ry="2" />
<text  x="39.32" y="81.5" ></text>
</g>
<g >
<title>firedrake.interpolation.make_interpolator (24,056 us, 0.04%)</title><rect x="1070.6" y="135" width="0.4" height="15.0" fill="rgb(155.648924322562,139.975086472972,139.975086472972)" rx="2" ry="2" />
<text  x="1073.59" y="145.5" ></text>
</g>
<g >
<title>ParLoopExecute (883,751 us, 1.39%)</title><rect x="557.0" y="183" width="16.4" height="15.0" fill="rgb(144.552923280762,160.189059000806,144.552923280762)" rx="2" ry="2" />
<text  x="560.02" y="193.5" ></text>
</g>
<g >
<title>firedrake.parloops.par_loop (949,702 us, 1.49%)</title><rect x="86.6" y="167" width="17.6" height="15.0" fill="rgb(154.259464932188,154.259464932188,139.872791594451)" rx="2" ry="2" />
<text  x="89.64" y="177.5" ></text>
</g>
</g>
</svg>
