<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="267" onload="init(evt)" viewBox="0 0 1200 267" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:13px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:18px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 13 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (1 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="267.0" fill="url(#background)"  />
<text id="title" x="600.00" y="26" >Firedrake example</text>
<text id="details" x="10.00" y="249" > </text>
<text id="unzoom" x="10.00" y="26" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="26" >Search</text>
<text id="ignorecase" x="1174.00" y="26" >ic</text>
<text id="matched" x="1090.00" y="249" > </text>
<g id="frames">
<g >
<title>firedrake.parloops.par_loop (718,713 us, 0.57%)</title><rect x="1106.7" y="135" width="6.8" height="15.0" fill="rgb(154.627433833124,132.143659387282,132.143659387282)" rx="2" ry="2" />
<text  x="1109.74" y="145.5" ></text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (2,772,418 us, 2.20%)</title><rect x="1079.3" y="151" width="25.9" height="15.0" fill="rgb(152.185590107154,113.422857488179,113.422857488179)" rx="2" ry="2" />
<text  x="1082.26" y="161.5" >f..</text>
</g>
<g >
<title>SNESSolve (122,842,647 us, 97.54%)</title><rect x="39.0" y="87" width="1151.0" height="15.0" fill="rgb(137.414051624469,105.248507287703,137.414051624469)" rx="2" ry="2" />
<text  x="42.05" y="97.5" >SNESSolve</text>
</g>
<g >
<title>ParLoopExecute (6,889,281 us, 5.47%)</title><rect x="1113.5" y="119" width="64.5" height="15.0" fill="rgb(131.469992173231,162.318838483428,131.469992173231)" rx="2" ry="2" />
<text  x="1116.47" y="129.5" >ParLoo..</text>
</g>
<g >
<title>firedrake.utility_meshes.RectangleMesh (13,404 us, 0.01%)</title><rect x="38.7" y="87" width="0.1" height="15.0" fill="rgb(124.186251720095,124.186251720095,151.455403558728)" rx="2" ry="2" />
<text  x="41.70" y="97.5" ></text>
</g>
<g >
<title>PCSetUp (36,445,145 us, 28.94%)</title><rect x="772.0" y="103" width="341.5" height="15.0" fill="rgb(154.055564708852,127.759329434533,127.759329434533)" rx="2" ry="2" />
<text  x="775.01" y="113.5" >PCSetUp</text>
</g>
<g >
<title>SNESFunctionEval (8,167,782 us, 6.49%)</title><rect x="1113.5" y="103" width="76.5" height="15.0" fill="rgb(152.520134987509,115.9877015709,115.9877015709)" rx="2" ry="2" />
<text  x="1116.47" y="113.5" >SNESFun..</text>
</g>
<g >
<title>firedrake.extrusion_utils.make_extruded_coords (964,774 us, 0.77%)</title><rect x="14.2" y="87" width="9.1" height="15.0" fill="rgb(122.478180357619,148.790639351975,148.790639351975)" rx="2" ry="2" />
<text  x="17.24" y="97.5" ></text>
</g>
<g >
<title>HybridProject (939,713 us, 0.75%)</title><rect x="50.4" y="151" width="8.8" height="15.0" fill="rgb(150.031400044908,137.580462615076,150.031400044908)" rx="2" ry="2" />
<text  x="53.44" y="161.5" ></text>
</g>
<g >
<title>HybridRHS (31,986,090 us, 25.40%)</title><rect x="471.8" y="151" width="299.6" height="15.0" fill="rgb(153.014909196964,119.780970510055,119.780970510055)" rx="2" ry="2" />
<text  x="474.75" y="161.5" >HybridRHS</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (718,713 us, 0.57%)</title><rect x="1106.7" y="183" width="6.8" height="15.0" fill="rgb(113.998318201141,113.998318201141,149.483545458285)" rx="2" ry="2" />
<text  x="1109.74" y="193.5" ></text>
</g>
<g >
<title>PCApply (78,229,720 us, 62.12%)</title><rect x="39.0" y="119" width="733.0" height="15.0" fill="rgb(113.761372590214,146.530726227092,146.530726227092)" rx="2" ry="2" />
<text  x="42.05" y="129.5" >PCApply</text>
</g>
<g >
<title>MatLUFactor (60,694 us, 0.05%)</title><rect x="771.4" y="167" width="0.6" height="15.0" fill="rgb(155.503485252615,155.503485252615,145.901505454979)" rx="2" ry="2" />
<text  x="774.44" y="177.5" ></text>
</g>
<g >
<title>ParLoopExecute (939,713 us, 0.75%)</title><rect x="50.4" y="183" width="8.8" height="15.0" fill="rgb(155.161257984003,136.236311210691,136.236311210691)" rx="2" ry="2" />
<text  x="53.44" y="193.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (30,997,955 us, 24.61%)</title><rect x="788.8" y="183" width="290.5" height="15.0" fill="rgb(152.706931386311,117.419807295048,117.419807295048)" rx="2" ry="2" />
<text  x="791.83" y="193.5" >pyop2.global_kernel.GlobalKernel.co..</text>
</g>
<g >
<title>SCBackSub (45,180,297 us, 35.87%)</title><rect x="39.0" y="135" width="423.4" height="15.0" fill="rgb(155.046818041104,155.046818041104,143.688425891503)" rx="2" ry="2" />
<text  x="42.05" y="145.5" >SCBackSub</text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (939,713 us, 0.75%)</title><rect x="50.4" y="199" width="8.8" height="15.0" fill="rgb(109.123236374514,109.123236374514,148.539981233777)" rx="2" ry="2" />
<text  x="53.44" y="209.5" ></text>
</g>
<g >
<title>firedrake.parloops.par_loop (939,713 us, 0.75%)</title><rect x="50.4" y="167" width="8.8" height="15.0" fill="rgb(139.768211374805,111.281041647938,139.768211374805)" rx="2" ry="2" />
<text  x="53.44" y="177.5" ></text>
</g>
<g >
<title>HybridOperatorAssembly (35,529,087 us, 28.21%)</title><rect x="772.4" y="135" width="332.8" height="15.0" fill="rgb(107.430295526153,144.889335877151,144.889335877151)" rx="2" ry="2" />
<text  x="775.36" y="145.5" >HybridOperatorAssembly</text>
</g>
<g >
<title>Log_Event_slate_loopy_knl_7 (26,982 us, 0.02%)</title><rect x="219.7" y="199" width="0.3" height="15.0" fill="rgb(146.279384966821,159.908007098425,146.279384966821)" rx="2" ry="2" />
<text  x="222.73" y="209.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (1,002,639 us, 0.80%)</title><rect x="462.4" y="199" width="9.4" height="15.0" fill="rgb(151.692245172947,151.692245172947,127.431649684281)" rx="2" ry="2" />
<text  x="465.36" y="209.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (13,880 us, 0.01%)</title><rect x="1105.5" y="151" width="0.1" height="15.0" fill="rgb(156.337755542803,145.256125828157,145.256125828157)" rx="2" ry="2" />
<text  x="1108.47" y="161.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (13,384 us, 0.01%)</title><rect x="772.2" y="135" width="0.2" height="15.0" fill="rgb(138.435797911925,138.435797911925,154.213380241018)" rx="2" ry="2" />
<text  x="775.23" y="145.5" ></text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (1,785,429 us, 1.42%)</title><rect x="445.6" y="151" width="16.8" height="15.0" fill="rgb(114.571607637411,146.740787165255,146.740787165255)" rx="2" ry="2" />
<text  x="448.63" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (15,517 us, 0.01%)</title><rect x="23.3" y="119" width="0.1" height="15.0" fill="rgb(125.545986862673,163.28321144096,125.545986862673)" rx="2" ry="2" />
<text  x="26.28" y="129.5" ></text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (1,278,501 us, 1.02%)</title><rect x="1178.0" y="119" width="12.0" height="15.0" fill="rgb(114.10203145959,114.10203145959,149.503618992179)" rx="2" ry="2" />
<text  x="1181.02" y="129.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (17,603 us, 0.01%)</title><rect x="23.4" y="71" width="0.2" height="15.0" fill="rgb(139.285128466622,110.043141695718,139.285128466622)" rx="2" ry="2" />
<text  x="26.42" y="81.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (951,535 us, 0.76%)</title><rect x="14.4" y="135" width="8.9" height="15.0" fill="rgb(150.45885614919,150.45885614919,121.454456723)" rx="2" ry="2" />
<text  x="17.36" y="145.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (15,517 us, 0.01%)</title><rect x="23.3" y="151" width="0.1" height="15.0" fill="rgb(123.907033045017,163.550017876393,123.907033045017)" rx="2" ry="2" />
<text  x="26.28" y="161.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.LinearVariationalProblem.__init__ (23,415 us, 0.02%)</title><rect x="38.8" y="71" width="0.2" height="15.0" fill="rgb(139.287066972216,161.046291423128,139.287066972216)" rx="2" ry="2" />
<text  x="41.83" y="81.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (17,603 us, 0.01%)</title><rect x="23.4" y="87" width="0.2" height="15.0" fill="rgb(135.48669506458,100.309656102985,135.48669506458)" rx="2" ry="2" />
<text  x="26.42" y="97.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.solve (122,842,647 us, 97.54%)</title><rect x="39.0" y="71" width="1151.0" height="15.0" fill="rgb(152.669482949429,152.669482949429,132.167494293387)" rx="2" ry="2" />
<text  x="42.05" y="81.5" >firedrake.variational_solver.NonlinearVariationalSolver.solve</text>
</g>
<g >
<title>firedrake.functionspace.VectorFunctionSpace (15,517 us, 0.01%)</title><rect x="23.3" y="87" width="0.1" height="15.0" fill="rgb(137.581755478219,105.678248412937,137.581755478219)" rx="2" ry="2" />
<text  x="26.28" y="97.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (15,584,902 us, 12.37%)</title><rect x="59.5" y="183" width="146.0" height="15.0" fill="rgb(127.714499221333,127.714499221333,152.138290171871)" rx="2" ry="2" />
<text  x="62.48" y="193.5" >pyop2.global_kern..</text>
</g>
<g >
<title>SCForwardElim (32,988,729 us, 26.19%)</title><rect x="462.4" y="135" width="309.0" height="15.0" fill="rgb(140.052158370003,153.346855873704,153.346855873704)" rx="2" ry="2" />
<text  x="465.36" y="145.5" >SCForwardElim</text>
</g>
<g >
<title>SCSolve (60,694 us, 0.05%)</title><rect x="771.4" y="135" width="0.6" height="15.0" fill="rgb(132.365882944503,132.365882944503,153.038557989259)" rx="2" ry="2" />
<text  x="774.44" y="145.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_wrap_slate_loopy_knl_7 (21,325,337 us, 16.93%)</title><rect x="219.5" y="183" width="199.9" height="15.0" fill="rgb(148.332625714713,159.573758604582,148.332625714713)" rx="2" ry="2" />
<text  x="222.55" y="193.5" >Parloop_Cells_wrap_wrap_..</text>
</g>
<g >
<title>firedrake.interpolation.make_interpolator (121,216 us, 0.10%)</title><rect x="1105.6" y="135" width="1.1" height="15.0" fill="rgb(133.832853511813,161.934186637612,133.832853511813)" rx="2" ry="2" />
<text  x="1108.60" y="145.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_wrap_slate_loopy_knl_14 (15,610,333 us, 12.39%)</title><rect x="59.2" y="167" width="146.3" height="15.0" fill="rgb(116.146592147896,116.146592147896,149.899340415722)" rx="2" ry="2" />
<text  x="62.24" y="177.5" >Parloop_Cells_wra..</text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (2,160,404 us, 1.72%)</title><rect x="751.2" y="167" width="20.2" height="15.0" fill="rgb(148.768024981473,159.502879654179,148.768024981473)" rx="2" ry="2" />
<text  x="754.20" y="177.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (17,603 us, 0.01%)</title><rect x="23.4" y="119" width="0.2" height="15.0" fill="rgb(149.582591490247,159.370275803913,149.582591490247)" rx="2" ry="2" />
<text  x="26.42" y="129.5" ></text>
</g>
<g >
<title>Log_Event_slate_loopy_knl_0 (14,281 us, 0.01%)</title><rect x="788.7" y="183" width="0.1" height="15.0" fill="rgb(119.411958274343,147.995692885941,147.995692885941)" rx="2" ry="2" />
<text  x="791.70" y="193.5" ></text>
</g>
<g >
<title>RecoverFirstElim (25,629,405 us, 20.35%)</title><rect x="205.5" y="151" width="240.1" height="15.0" fill="rgb(156.774212842587,148.602298459837,148.602298459837)" rx="2" ry="2" />
<text  x="208.50" y="161.5" >RecoverFirstElim</text>
</g>
<g >
<title>KSPSolve (78,229,720 us, 62.12%)</title><rect x="39.0" y="103" width="733.0" height="15.0" fill="rgb(148.990399053074,148.990399053074,114.338087718742)" rx="2" ry="2" />
<text  x="42.05" y="113.5" >KSPSolve</text>
</g>
<g >
<title>firedrake.parloops.par_loop (1,002,639 us, 0.80%)</title><rect x="462.4" y="167" width="9.4" height="15.0" fill="rgb(119.730290318571,119.730290318571,150.592959416498)" rx="2" ry="2" />
<text  x="465.36" y="177.5" ></text>
</g>
<g >
<title>all (125,943,111 us, 100%)</title><rect x="10.0" y="39" width="1180.0" height="15.0" fill="rgb(135.238785530098,161.705313983472,135.238785530098)" rx="2" ry="2" />
<text  x="13.00" y="49.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (3,784,951 us, 3.01%)</title><rect x="1113.5" y="151" width="35.4" height="15.0" fill="rgb(111.48077957539,111.48077957539,148.996279917817)" rx="2" ry="2" />
<text  x="1116.47" y="161.5" >py..</text>
</g>
<g >
<title>ParLoopExecute (28,689,597 us, 22.78%)</title><rect x="482.4" y="167" width="268.8" height="15.0" fill="rgb(153.186783460783,153.186783460783,134.674412156104)" rx="2" ry="2" />
<text  x="485.40" y="177.5" >ParLoopExecute</text>
</g>
<g >
<title>firedrake.assemble.allocate_matrix (25,116 us, 0.02%)</title><rect x="1105.2" y="135" width="0.3" height="15.0" fill="rgb(132.200493986735,162.199919583555,132.200493986735)" rx="2" ry="2" />
<text  x="1108.24" y="145.5" ></text>
</g>
<g >
<title>firedrake.utility_meshes.SquareMesh (13,404 us, 0.01%)</title><rect x="38.7" y="71" width="0.1" height="15.0" fill="rgb(111.503901390372,111.503901390372,149.000755107814)" rx="2" ry="2" />
<text  x="41.70" y="81.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_wrap_slate_loopy_knl_0 (31,043,699 us, 24.65%)</title><rect x="788.4" y="167" width="290.9" height="15.0" fill="rgb(154.096946349176,128.076588677018,128.076588677018)" rx="2" ry="2" />
<text  x="791.40" y="177.5" >Parloop_Cells_wrap_wrap_slate_loopy..</text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (2,804,742 us, 2.23%)</title><rect x="419.4" y="167" width="26.2" height="15.0" fill="rgb(146.943050652579,129.666567297235,146.943050652579)" rx="2" ry="2" />
<text  x="422.35" y="177.5" >f..</text>
</g>
<g >
<title>ParLoopExecute (31,043,699 us, 24.65%)</title><rect x="788.4" y="151" width="290.9" height="15.0" fill="rgb(138.982749852912,153.069601813718,153.069601813718)" rx="2" ry="2" />
<text  x="791.40" y="161.5" >ParLoopExecute</text>
</g>
<g >
<title>PCSetUp (60,694 us, 0.05%)</title><rect x="771.4" y="151" width="0.6" height="15.0" fill="rgb(128.097313996872,150.247451776967,150.247451776967)" rx="2" ry="2" />
<text  x="774.44" y="161.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_wrap_slate_loopy_knl_4 (28,689,597 us, 22.78%)</title><rect x="482.4" y="183" width="268.8" height="15.0" fill="rgb(116.260367583869,116.260367583869,149.921361467846)" rx="2" ry="2" />
<text  x="485.40" y="193.5" >Parloop_Cells_wrap_wrap_slate_loo..</text>
</g>
<g >
<title>CreateExtMesh (980,291 us, 0.78%)</title><rect x="14.2" y="71" width="9.2" height="15.0" fill="rgb(149.74908959324,149.74908959324,118.014818798008)" rx="2" ry="2" />
<text  x="17.24" y="81.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (3,104,330 us, 2.46%)</title><rect x="1148.9" y="151" width="29.1" height="15.0" fill="rgb(153.573688949855,124.064948615552,124.064948615552)" rx="2" ry="2" />
<text  x="1151.94" y="161.5" >p..</text>
</g>
<g >
<title>firedrake.__init__ (1,613,184 us, 1.28%)</title><rect x="23.6" y="71" width="15.1" height="15.0" fill="rgb(152.735799205783,152.735799205783,132.488873074181)" rx="2" ry="2" />
<text  x="26.59" y="81.5" ></text>
</g>
<g >
<title>HybridBreak (1,002,639 us, 0.80%)</title><rect x="462.4" y="151" width="9.4" height="15.0" fill="rgb(112.957188170749,146.322233970194,146.322233970194)" rx="2" ry="2" />
<text  x="465.36" y="161.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (718,713 us, 0.57%)</title><rect x="1106.7" y="167" width="6.8" height="15.0" fill="rgb(147.844908520752,147.844908520752,108.786864369796)" rx="2" ry="2" />
<text  x="1109.74" y="177.5" ></text>
</g>
<g >
<title>ParLoopExecute (21,325,337 us, 16.93%)</title><rect x="219.5" y="167" width="199.9" height="15.0" fill="rgb(116.786926693528,147.315129142767,147.315129142767)" rx="2" ry="2" />
<text  x="222.55" y="177.5" >ParLoopExecute</text>
</g>
<g >
<title>Parloop_Cells_wrap_form1_cell_integral_otherwise (3,104,330 us, 2.46%)</title><rect x="1148.9" y="135" width="29.1" height="15.0" fill="rgb(142.484524947226,118.241595177267,142.484524947226)" rx="2" ry="2" />
<text  x="1151.94" y="145.5" >P..</text>
</g>
<g >
<title>ParLoopExecute (1,002,639 us, 0.80%)</title><rect x="462.4" y="183" width="9.4" height="15.0" fill="rgb(125.967318649785,163.214622545384,125.967318649785)" rx="2" ry="2" />
<text  x="465.36" y="193.5" ></text>
</g>
<g >
<title>firedrake (125,943,111 us, 100.00%)</title><rect x="10.0" y="55" width="1180.0" height="15.0" fill="rgb(153.484447454125,123.380763814958,123.380763814958)" rx="2" ry="2" />
<text  x="13.00" y="65.5" >firedrake</text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (17,603 us, 0.01%)</title><rect x="23.4" y="103" width="0.2" height="15.0" fill="rgb(135.808303359098,135.808303359098,153.704832908212)" rx="2" ry="2" />
<text  x="26.42" y="113.5" ></text>
</g>
<g >
<title>ParLoopExecute (15,610,333 us, 12.39%)</title><rect x="59.2" y="151" width="146.3" height="15.0" fill="rgb(155.887880453783,141.807083479006,141.807083479006)" rx="2" ry="2" />
<text  x="62.24" y="161.5" >ParLoopExecute</text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (13,880 us, 0.01%)</title><rect x="1105.5" y="135" width="0.1" height="15.0" fill="rgb(152.401998106529,152.401998106529,130.871221593178)" rx="2" ry="2" />
<text  x="1108.47" y="145.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (1,002,639 us, 0.80%)</title><rect x="462.4" y="215" width="9.4" height="15.0" fill="rgb(146.616410768271,159.853142433072,146.616410768271)" rx="2" ry="2" />
<text  x="465.36" y="225.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (21,278,690 us, 16.90%)</title><rect x="220.0" y="199" width="199.4" height="15.0" fill="rgb(140.198473718682,140.198473718682,154.55454330039)" rx="2" ry="2" />
<text  x="222.98" y="209.5" >pyop2.global_kernel.Glo..</text>
</g>
<g >
<title>ParLoopExecute (951,535 us, 0.76%)</title><rect x="14.4" y="103" width="8.9" height="15.0" fill="rgb(117.677593456242,117.677593456242,150.195663249595)" rx="2" ry="2" />
<text  x="17.36" y="113.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (939,713 us, 0.75%)</title><rect x="50.4" y="215" width="8.8" height="15.0" fill="rgb(140.294433060208,140.294433060208,154.573116076169)" rx="2" ry="2" />
<text  x="53.44" y="225.5" ></text>
</g>
<g >
<title>HybridInit (36,445,145 us, 28.94%)</title><rect x="772.0" y="119" width="341.5" height="15.0" fill="rgb(126.339715593918,126.339715593918,151.872203018178)" rx="2" ry="2" />
<text  x="775.01" y="129.5" >HybridInit</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (28,664,704 us, 22.76%)</title><rect x="482.6" y="199" width="268.6" height="15.0" fill="rgb(123.251989827614,148.991256621974,148.991256621974)" rx="2" ry="2" />
<text  x="485.63" y="209.5" >pyop2.global_kernel.GlobalKernel...</text>
</g>
<g >
<title>Parloop_Cells_wrap_pyop2_kernel_uniform_extrusion (951,535 us, 0.76%)</title><rect x="14.4" y="119" width="8.9" height="15.0" fill="rgb(141.34885923391,141.34885923391,154.777198561402)" rx="2" ry="2" />
<text  x="17.36" y="129.5" ></text>
</g>
<g >
<title>firedrake.mesh._from_cell_list (13,404 us, 0.01%)</title><rect x="38.7" y="103" width="0.1" height="15.0" fill="rgb(149.726045100884,136.797990571016,149.726045100884)" rx="2" ry="2" />
<text  x="41.70" y="113.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_form0_cell_integral_otherwise (3,784,951 us, 3.01%)</title><rect x="1113.5" y="135" width="35.4" height="15.0" fill="rgb(137.086520875065,161.404519857547,137.086520875065)" rx="2" ry="2" />
<text  x="1116.47" y="145.5" >Pa..</text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (15,517 us, 0.01%)</title><rect x="23.3" y="135" width="0.1" height="15.0" fill="rgb(113.547411318652,146.475254786317,146.475254786317)" rx="2" ry="2" />
<text  x="26.28" y="145.5" ></text>
</g>
<g >
<title>ParLoopExecute (718,713 us, 0.57%)</title><rect x="1106.7" y="151" width="6.8" height="15.0" fill="rgb(146.917018845237,159.804206234496,146.917018845237)" rx="2" ry="2" />
<text  x="1109.74" y="161.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (15,517 us, 0.01%)</title><rect x="23.3" y="103" width="0.1" height="15.0" fill="rgb(136.726567705218,136.726567705218,153.882561491333)" rx="2" ry="2" />
<text  x="26.28" y="113.5" ></text>
</g>
<g >
<title>CreateSparsity (25,116 us, 0.02%)</title><rect x="1105.2" y="151" width="0.3" height="15.0" fill="rgb(151.10009995312,159.123239542515,151.10009995312)" rx="2" ry="2" />
<text  x="1108.24" y="161.5" ></text>
</g>
</g>
</svg>
