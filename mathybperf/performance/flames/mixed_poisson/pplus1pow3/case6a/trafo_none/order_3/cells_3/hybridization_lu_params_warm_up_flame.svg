<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="267" onload="init(evt)" viewBox="0 0 1200 267" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:13px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:18px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 13 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (1 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="267.0" fill="url(#background)"  />
<text id="title" x="600.00" y="26" >Firedrake example</text>
<text id="details" x="10.00" y="249" > </text>
<text id="unzoom" x="10.00" y="26" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="26" >Search</text>
<text id="ignorecase" x="1174.00" y="26" >ic</text>
<text id="matched" x="1090.00" y="249" > </text>
<g id="frames">
<g >
<title>firedrake.assemble.allocate_matrix (59,674 us, 0.04%)</title><rect x="1122.8" y="135" width="0.5" height="15.0" fill="rgb(150.528740888415,150.528740888415,121.793128920783)" rx="2" ry="2" />
<text  x="1125.81" y="145.5" ></text>
</g>
<g >
<title>SNESSolve (132,998,419 us, 97.81%)</title><rect x="35.8" y="87" width="1154.2" height="15.0" fill="rgb(146.021183181717,127.304281903149,146.021183181717)" rx="2" ry="2" />
<text  x="38.81" y="97.5" >SNESSolve</text>
</g>
<g >
<title>solve_getrf (22,361 us, 0.02%)</title><rect x="377.7" y="215" width="0.2" height="15.0" fill="rgb(154.630877501409,132.170060844133,132.170060844133)" rx="2" ry="2" />
<text  x="380.75" y="225.5" ></text>
</g>
<g >
<title>HybridInit (69,715,191 us, 51.27%)</title><rect x="525.1" y="119" width="605.0" height="15.0" fill="rgb(134.00926577641,134.00926577641,153.356632085757)" rx="2" ry="2" />
<text  x="528.07" y="129.5" >HybridInit</text>
</g>
<g >
<title>firedrake.extrusion_utils.make_extruded_coords (886,506 us, 0.65%)</title><rect x="14.0" y="87" width="7.7" height="15.0" fill="rgb(150.551098259015,150.551098259015,121.901476178304)" rx="2" ry="2" />
<text  x="17.05" y="97.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (12,755,121 us, 9.38%)</title><rect x="53.5" y="183" width="110.6" height="15.0" fill="rgb(148.229771381489,148.229771381489,110.6519690026)" rx="2" ry="2" />
<text  x="56.45" y="193.5" >pyop2.global..</text>
</g>
<g >
<title>ParLoopExecute (12,786,205 us, 9.40%)</title><rect x="53.2" y="151" width="110.9" height="15.0" fill="rgb(117.767401813645,147.56932639613,147.56932639613)" rx="2" ry="2" />
<text  x="56.18" y="161.5" >ParLoopExecute</text>
</g>
<g >
<title>CreateFunctionSpace (17,019 us, 0.01%)</title><rect x="21.7" y="71" width="0.2" height="15.0" fill="rgb(114.208965743248,114.208965743248,149.524315950306)" rx="2" ry="2" />
<text  x="24.74" y="81.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_wrap_slate_loopy_knl_0 (63,828,431 us, 46.94%)</title><rect x="539.7" y="167" width="553.9" height="15.0" fill="rgb(153.234488156896,153.234488156896,134.905596452648)" rx="2" ry="2" />
<text  x="542.66" y="177.5" >Parloop_Cells_wrap_wrap_slate_loopy_knl_0</text>
</g>
<g >
<title>solve_getrf (25,891 us, 0.02%)</title><rect x="176.8" y="215" width="0.2" height="15.0" fill="rgb(154.398592505285,130.389209207188,130.389209207188)" rx="2" ry="2" />
<text  x="179.76" y="225.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_wrap_slate_loopy_knl_7 (15,847,851 us, 11.66%)</title><rect x="175.8" y="183" width="137.5" height="15.0" fill="rgb(148.704681892311,134.180747349047,148.704681892311)" rx="2" ry="2" />
<text  x="178.81" y="193.5" >Parloop_Cells_w..</text>
</g>
<g >
<title>PCSetUp (59,969 us, 0.04%)</title><rect x="524.5" y="151" width="0.6" height="15.0" fill="rgb(118.389909206182,147.730717201603,147.730717201603)" rx="2" ry="2" />
<text  x="527.55" y="161.5" ></text>
</g>
<g >
<title>all (135,972,281 us, 100%)</title><rect x="10.0" y="39" width="1180.0" height="15.0" fill="rgb(122.952165687082,148.913524437392,148.913524437392)" rx="2" ry="2" />
<text  x="13.00" y="49.5" ></text>
</g>
<g >
<title>PCSetUp (69,715,191 us, 51.27%)</title><rect x="525.1" y="103" width="605.0" height="15.0" fill="rgb(152.575235998372,116.410142654182,116.410142654182)" rx="2" ry="2" />
<text  x="528.07" y="113.5" >PCSetUp</text>
</g>
<g >
<title>ParLoopExecute (5,849,791 us, 4.30%)</title><rect x="1130.1" y="119" width="50.7" height="15.0" fill="rgb(144.594866699298,123.649345916952,144.594866699298)" rx="2" ry="2" />
<text  x="1133.07" y="129.5" >ParL..</text>
</g>
<g >
<title>RecoverFirstElim (20,461,958 us, 15.05%)</title><rect x="164.1" y="151" width="177.6" height="15.0" fill="rgb(153.028604873317,153.028604873317,133.907854386075)" rx="2" ry="2" />
<text  x="167.14" y="161.5" >RecoverFirstElim</text>
</g>
<g >
<title>CreateSparsity (44,808 us, 0.03%)</title><rect x="1122.8" y="151" width="0.4" height="15.0" fill="rgb(152.759515481866,152.759515481866,132.603805796734)" rx="2" ry="2" />
<text  x="1125.81" y="161.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_pyop2_kernel_uniform_extrusion (886,506 us, 0.65%)</title><rect x="14.0" y="119" width="7.7" height="15.0" fill="rgb(155.745921913657,140.718734671369,140.718734671369)" rx="2" ry="2" />
<text  x="17.05" y="129.5" ></text>
</g>
<g >
<title>SNESFunctionEval (6,905,660 us, 5.08%)</title><rect x="1130.1" y="103" width="59.9" height="15.0" fill="rgb(156.724995597792,148.224966249741,148.224966249741)" rx="2" ry="2" />
<text  x="1133.07" y="113.5" >SNESF..</text>
</g>
<g >
<title>inv_getrf (23,662 us, 0.02%)</title><rect x="540.3" y="199" width="0.2" height="15.0" fill="rgb(155.099327244303,135.761508872989,135.761508872989)" rx="2" ry="2" />
<text  x="543.32" y="209.5" ></text>
</g>
<g >
<title>SCForwardElim (18,844,858 us, 13.86%)</title><rect x="361.0" y="135" width="163.5" height="15.0" fill="rgb(156.362315574569,145.444419405027,145.444419405027)" rx="2" ry="2" />
<text  x="364.01" y="145.5" >SCForwardElim</text>
</g>
<g >
<title>SCBackSub (37,472,741 us, 27.56%)</title><rect x="35.8" y="135" width="325.2" height="15.0" fill="rgb(124.187359271349,163.504383374432,124.187359271349)" rx="2" ry="2" />
<text  x="38.81" y="145.5" >SCBackSub</text>
</g>
<g >
<title>SCSolve (59,969 us, 0.04%)</title><rect x="524.5" y="135" width="0.6" height="15.0" fill="rgb(139.165318118689,161.066111003934,139.165318118689)" rx="2" ry="2" />
<text  x="527.55" y="145.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.LinearVariationalProblem.__init__ (21,792 us, 0.02%)</title><rect x="35.6" y="71" width="0.2" height="15.0" fill="rgb(114.246927560861,146.656610849112,146.656610849112)" rx="2" ry="2" />
<text  x="38.62" y="81.5" ></text>
</g>
<g >
<title>Log_Event_slate_loopy_knl_4 (22,361 us, 0.02%)</title><rect x="377.7" y="199" width="0.2" height="15.0" fill="rgb(109.52522841024,145.432466624877,145.432466624877)" rx="2" ry="2" />
<text  x="380.75" y="209.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (3,139,251 us, 2.31%)</title><rect x="1130.1" y="151" width="27.2" height="15.0" fill="rgb(149.066162556508,159.454345630336,149.066162556508)" rx="2" ry="2" />
<text  x="1133.07" y="161.5" >p..</text>
</g>
<g >
<title>inv_getri (36,203 us, 0.03%)</title><rect x="176.4" y="215" width="0.4" height="15.0" fill="rgb(156.651865522642,147.664302340252,147.664302340252)" rx="2" ry="2" />
<text  x="179.45" y="225.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (17,019 us, 0.01%)</title><rect x="21.7" y="87" width="0.2" height="15.0" fill="rgb(153.267917579026,121.720701439202,121.720701439202)" rx="2" ry="2" />
<text  x="24.74" y="97.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (903,350 us, 0.66%)</title><rect x="361.0" y="215" width="7.8" height="15.0" fill="rgb(155.650912512236,139.990329260479,139.990329260479)" rx="2" ry="2" />
<text  x="364.01" y="225.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (2,710,540 us, 1.99%)</title><rect x="1157.3" y="151" width="23.5" height="15.0" fill="rgb(154.81855182215,154.81855182215,142.582212676575)" rx="2" ry="2" />
<text  x="1160.31" y="161.5" >p..</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (912,863 us, 0.67%)</title><rect x="45.3" y="215" width="7.9" height="15.0" fill="rgb(156.721637462982,148.199220549527,148.199220549527)" rx="2" ry="2" />
<text  x="48.26" y="225.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_wrap_slate_loopy_knl_4 (14,661,379 us, 10.78%)</title><rect x="377.7" y="183" width="127.3" height="15.0" fill="rgb(155.886490335571,141.796425906048,141.796425906048)" rx="2" ry="2" />
<text  x="380.75" y="193.5" >Parloop_Cells_..</text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (1,055,869 us, 0.78%)</title><rect x="1180.8" y="119" width="9.2" height="15.0" fill="rgb(151.846032216541,151.846032216541,128.176925357081)" rx="2" ry="2" />
<text  x="1183.84" y="129.5" ></text>
</g>
<g >
<title>HybridRHS (17,941,508 us, 13.19%)</title><rect x="368.8" y="151" width="155.7" height="15.0" fill="rgb(136.893308976782,161.435972957268,136.893308976782)" rx="2" ry="2" />
<text  x="371.84" y="161.5" >HybridRHS</text>
</g>
<g >
<title>firedrake.parloops.par_loop (693,921 us, 0.51%)</title><rect x="1124.0" y="135" width="6.1" height="15.0" fill="rgb(152.933320930321,152.933320930321,133.446093739246)" rx="2" ry="2" />
<text  x="1127.05" y="145.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (15,711,949 us, 11.56%)</title><rect x="177.0" y="199" width="136.3" height="15.0" fill="rgb(132.577600859692,92.8551022029616,132.577600859692)" rx="2" ry="2" />
<text  x="179.99" y="209.5" >pyop2.global_ke..</text>
</g>
<g >
<title>Log_Event_slate_loopy_knl_0 (148,191 us, 0.11%)</title><rect x="539.9" y="183" width="1.3" height="15.0" fill="rgb(140.482457005385,113.1112960763,140.482457005385)" rx="2" ry="2" />
<text  x="542.87" y="193.5" ></text>
</g>
<g >
<title>ParLoopExecute (14,661,379 us, 10.78%)</title><rect x="377.7" y="167" width="127.3" height="15.0" fill="rgb(149.91907968199,159.31549865642,149.91907968199)" rx="2" ry="2" />
<text  x="380.75" y="177.5" >ParLoopExecute</text>
</g>
<g >
<title>HybridBreak (903,350 us, 0.66%)</title><rect x="361.0" y="151" width="7.8" height="15.0" fill="rgb(142.237866088216,117.609531851054,142.237866088216)" rx="2" ry="2" />
<text  x="364.01" y="161.5" ></text>
</g>
<g >
<title>HybridProject (912,863 us, 0.67%)</title><rect x="45.3" y="151" width="7.9" height="15.0" fill="rgb(146.389913590552,146.389913590552,155.752886501397)" rx="2" ry="2" />
<text  x="48.26" y="161.5" ></text>
</g>
<g >
<title>firedrake.parloops.par_loop (912,863 us, 0.67%)</title><rect x="45.3" y="167" width="7.9" height="15.0" fill="rgb(152.098285176978,152.098285176978,129.399382011507)" rx="2" ry="2" />
<text  x="48.26" y="177.5" ></text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (3,369,196 us, 2.48%)</title><rect x="1093.6" y="151" width="29.2" height="15.0" fill="rgb(153.867394329597,126.316689860241,126.316689860241)" rx="2" ry="2" />
<text  x="1096.57" y="161.5" >f..</text>
</g>
<g >
<title>ParLoopExecute (886,506 us, 0.65%)</title><rect x="14.0" y="103" width="7.7" height="15.0" fill="rgb(137.258493895005,137.258493895005,153.98551494742)" rx="2" ry="2" />
<text  x="17.05" y="113.5" ></text>
</g>
<g >
<title>Log_Event_slate_loopy_knl_7 (116,813 us, 0.09%)</title><rect x="176.0" y="199" width="1.0" height="15.0" fill="rgb(148.85467991135,159.488773037687,148.85467991135)" rx="2" ry="2" />
<text  x="178.97" y="209.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.solve (132,998,419 us, 97.81%)</title><rect x="35.8" y="71" width="1154.2" height="15.0" fill="rgb(120.966284668289,120.966284668289,150.832184129346)" rx="2" ry="2" />
<text  x="38.81" y="81.5" >firedrake.variational_solver.NonlinearVariationalSolver.solve</text>
</g>
<g >
<title>Parloop_Cells_wrap_wrap_slate_loopy_knl_14 (12,786,205 us, 9.40%)</title><rect x="53.2" y="167" width="110.9" height="15.0" fill="rgb(144.507712952264,160.196418821724,144.507712952264)" rx="2" ry="2" />
<text  x="56.18" y="177.5" >Parloop_Cell..</text>
</g>
<g >
<title>ParLoopExecute (903,350 us, 0.66%)</title><rect x="361.0" y="183" width="7.8" height="15.0" fill="rgb(111.608535523744,145.972583283934,145.972583283934)" rx="2" ry="2" />
<text  x="364.01" y="193.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (886,506 us, 0.65%)</title><rect x="14.0" y="135" width="7.7" height="15.0" fill="rgb(124.298550647879,149.262587205006,149.262587205006)" rx="2" ry="2" />
<text  x="17.05" y="145.5" ></text>
</g>
<g >
<title>ParLoopExecute (63,828,431 us, 46.94%)</title><rect x="539.7" y="151" width="553.9" height="15.0" fill="rgb(154.498041975971,131.151655149112,131.151655149112)" rx="2" ry="2" />
<text  x="542.66" y="161.5" >ParLoopExecute</text>
</g>
<g >
<title>HybridOperatorAssembly (68,826,469 us, 50.62%)</title><rect x="525.5" y="135" width="597.3" height="15.0" fill="rgb(151.094796795496,151.094796795496,124.536322932018)" rx="2" ry="2" />
<text  x="528.52" y="145.5" >HybridOperatorAssembly</text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (693,921 us, 0.51%)</title><rect x="1124.0" y="167" width="6.1" height="15.0" fill="rgb(139.22830688297,153.133264747437,153.133264747437)" rx="2" ry="2" />
<text  x="1127.05" y="177.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_form0_cell_integral_otherwise (3,139,251 us, 2.31%)</title><rect x="1130.1" y="135" width="27.2" height="15.0" fill="rgb(133.773457134557,161.943855815305,133.773457134557)" rx="2" ry="2" />
<text  x="1133.07" y="145.5" >P..</text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (903,350 us, 0.66%)</title><rect x="361.0" y="199" width="7.8" height="15.0" fill="rgb(134.067447395232,161.89599693566,134.067447395232)" rx="2" ry="2" />
<text  x="364.01" y="209.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (15,020 us, 0.01%)</title><rect x="525.4" y="135" width="0.1" height="15.0" fill="rgb(154.344571732207,154.344571732207,140.285232240696)" rx="2" ry="2" />
<text  x="528.39" y="145.5" ></text>
</g>
<g >
<title>firedrake (135,972,281 us, 100.00%)</title><rect x="10.0" y="55" width="1180.0" height="15.0" fill="rgb(127.328810083034,127.328810083034,152.063640661232)" rx="2" ry="2" />
<text  x="13.00" y="65.5" >firedrake</text>
</g>
<g >
<title>MatZeroInitial (14,866 us, 0.01%)</title><rect x="1123.2" y="151" width="0.1" height="15.0" fill="rgb(152.722655332976,117.540357552814,117.540357552814)" rx="2" ry="2" />
<text  x="1126.20" y="161.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (63,636,192 us, 46.80%)</title><rect x="541.3" y="183" width="552.3" height="15.0" fill="rgb(153.909800693625,153.909800693625,138.178264899874)" rx="2" ry="2" />
<text  x="544.32" y="193.5" >pyop2.global_kernel.GlobalKernel.compile</text>
</g>
<g >
<title>inv_getri (72,823 us, 0.05%)</title><rect x="540.5" y="199" width="0.7" height="15.0" fill="rgb(153.395721832997,122.700534052978,122.700534052978)" rx="2" ry="2" />
<text  x="543.52" y="209.5" ></text>
</g>
<g >
<title>ParLoopExecute (912,863 us, 0.67%)</title><rect x="45.3" y="183" width="7.9" height="15.0" fill="rgb(130.386168886525,130.386168886525,152.655387526424)" rx="2" ry="2" />
<text  x="48.26" y="193.5" ></text>
</g>
<g >
<title>MatLUFactor (59,969 us, 0.04%)</title><rect x="524.5" y="167" width="0.6" height="15.0" fill="rgb(153.386692254918,122.631307287703,122.631307287703)" rx="2" ry="2" />
<text  x="527.55" y="177.5" ></text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (2,222,694 us, 1.63%)</title><rect x="341.7" y="151" width="19.3" height="15.0" fill="rgb(145.525155339331,154.765781013901,154.765781013901)" rx="2" ry="2" />
<text  x="344.72" y="161.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (912,863 us, 0.67%)</title><rect x="45.3" y="199" width="7.9" height="15.0" fill="rgb(132.515213366568,92.695234251831,132.515213366568)" rx="2" ry="2" />
<text  x="48.26" y="209.5" ></text>
</g>
<g >
<title>ParLoopExecute (15,847,851 us, 11.66%)</title><rect x="175.8" y="167" width="137.5" height="15.0" fill="rgb(132.819412734405,162.099165368818,132.819412734405)" rx="2" ry="2" />
<text  x="178.81" y="177.5" >ParLoopExecute</text>
</g>
<g >
<title>Log_Event_subkernel6_cell_to__cell_integral_otherwise (18,917 us, 0.01%)</title><rect x="377.9" y="199" width="0.2" height="15.0" fill="rgb(121.239104698988,148.469397514553,148.469397514553)" rx="2" ry="2" />
<text  x="380.94" y="209.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (17,019 us, 0.01%)</title><rect x="21.7" y="119" width="0.2" height="15.0" fill="rgb(129.039389732533,129.039389732533,152.394720593394)" rx="2" ry="2" />
<text  x="24.74" y="129.5" ></text>
</g>
<g >
<title>CreateExtMesh (903,093 us, 0.66%)</title><rect x="13.9" y="71" width="7.8" height="15.0" fill="rgb(151.866041158883,151.866041158883,128.273891769973)" rx="2" ry="2" />
<text  x="16.91" y="81.5" ></text>
</g>
<g >
<title>ParLoopExecute (693,921 us, 0.51%)</title><rect x="1124.0" y="151" width="6.1" height="15.0" fill="rgb(115.41612577658,115.41612577658,149.757959827725)" rx="2" ry="2" />
<text  x="1127.05" y="161.5" ></text>
</g>
<g >
<title>PCApply (56,377,568 us, 41.46%)</title><rect x="35.8" y="119" width="489.3" height="15.0" fill="rgb(143.074125706315,160.42979348967,143.074125706315)" rx="2" ry="2" />
<text  x="38.81" y="129.5" >PCApply</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (14,620,101 us, 10.75%)</title><rect x="378.1" y="199" width="126.9" height="15.0" fill="rgb(129.185454918961,162.690739896913,129.185454918961)" rx="2" ry="2" />
<text  x="381.11" y="209.5" >pyop2.global_k..</text>
</g>
<g >
<title>firedrake.__init__ (1,581,905 us, 1.16%)</title><rect x="21.9" y="71" width="13.7" height="15.0" fill="rgb(138.713510432273,161.139661092421,138.713510432273)" rx="2" ry="2" />
<text  x="24.89" y="81.5" ></text>
</g>
<g >
<title>firedrake.interpolation.make_interpolator (82,722 us, 0.06%)</title><rect x="1123.3" y="135" width="0.7" height="15.0" fill="rgb(112.557595787725,112.557595787725,149.204695958915)" rx="2" ry="2" />
<text  x="1126.33" y="145.5" ></text>
</g>
<g >
<title>Log_Event_subkernel2_cell_to__cell_integral_otherwise (19,533 us, 0.01%)</title><rect x="541.2" y="183" width="0.1" height="15.0" fill="rgb(143.350737670023,160.384763635113,143.350737670023)" rx="2" ry="2" />
<text  x="544.15" y="193.5" ></text>
</g>
<g >
<title>KSPSolve (56,377,568 us, 41.46%)</title><rect x="35.8" y="103" width="489.3" height="15.0" fill="rgb(132.294321013923,162.184645416338,132.294321013923)" rx="2" ry="2" />
<text  x="38.81" y="113.5" >KSPSolve</text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (2,254,128 us, 1.66%)</title><rect x="505.0" y="167" width="19.5" height="15.0" fill="rgb(126.797243118883,163.079518562042,126.797243118883)" rx="2" ry="2" />
<text  x="507.98" y="177.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (17,019 us, 0.01%)</title><rect x="21.7" y="103" width="0.2" height="15.0" fill="rgb(114.130339404342,146.626384290015,146.626384290015)" rx="2" ry="2" />
<text  x="24.74" y="113.5" ></text>
</g>
<g >
<title>Log_Event_slate_loopy_knl_14 (14,500 us, 0.01%)</title><rect x="53.3" y="183" width="0.2" height="15.0" fill="rgb(139.381692782935,139.381692782935,154.396456667665)" rx="2" ry="2" />
<text  x="56.32" y="193.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_form1_cell_integral_otherwise (2,710,540 us, 1.99%)</title><rect x="1157.3" y="135" width="23.5" height="15.0" fill="rgb(155.726030589085,140.566234516316,140.566234516316)" rx="2" ry="2" />
<text  x="1160.31" y="145.5" >P..</text>
</g>
<g >
<title>firedrake.parloops.par_loop (903,350 us, 0.66%)</title><rect x="361.0" y="167" width="7.8" height="15.0" fill="rgb(154.646193379768,154.646193379768,141.746937148107)" rx="2" ry="2" />
<text  x="364.01" y="177.5" ></text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (3,270,050 us, 2.40%)</title><rect x="313.3" y="167" width="28.4" height="15.0" fill="rgb(119.588729384597,119.588729384597,150.565560526051)" rx="2" ry="2" />
<text  x="316.34" y="177.5" >f..</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (693,921 us, 0.51%)</title><rect x="1124.0" y="183" width="6.1" height="15.0" fill="rgb(137.274973838157,137.274973838157,153.988704613837)" rx="2" ry="2" />
<text  x="1127.05" y="193.5" ></text>
</g>
</g>
</svg>
