<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="267" onload="init(evt)" viewBox="0 0 1200 267" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:13px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:18px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 13 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (1 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="267.0" fill="url(#background)"  />
<text id="title" x="600.00" y="26" >Firedrake example</text>
<text id="details" x="10.00" y="249" > </text>
<text id="unzoom" x="10.00" y="26" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="26" >Search</text>
<text id="ignorecase" x="1174.00" y="26" >ic</text>
<text id="matched" x="1090.00" y="249" > </text>
<g id="frames">
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.solve (37,548,137 us, 92.56%)</title><rect x="97.8" y="71" width="1092.2" height="15.0" fill="rgb(125.032537809239,149.452880172766,149.452880172766)" rx="2" ry="2" />
<text  x="100.84" y="81.5" >firedrake.variational_solver.NonlinearVariationalSolver.solve</text>
</g>
<g >
<title>HybridBreak (984,756 us, 2.43%)</title><rect x="97.8" y="151" width="28.7" height="15.0" fill="rgb(124.322076839628,163.482452607502,124.322076839628)" rx="2" ry="2" />
<text  x="100.84" y="161.5" >H..</text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (4,323 us, 0.01%)</title><rect x="1011.4" y="167" width="0.1" height="15.0" fill="rgb(141.307834179934,153.672401454057,153.672401454057)" rx="2" ry="2" />
<text  x="1014.41" y="177.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (35,501 us, 0.09%)</title><rect x="37.9" y="103" width="1.1" height="15.0" fill="rgb(127.465560021863,127.465560021863,152.090108391328)" rx="2" ry="2" />
<text  x="40.93" y="113.5" ></text>
</g>
<g >
<title>firedrake.matrix_free.operators.ImplicitMatrixContext.__init__ (6,384 us, 0.02%)</title><rect x="97.7" y="103" width="0.1" height="15.0" fill="rgb(124.34046797044,163.479458702487,124.34046797044)" rx="2" ry="2" />
<text  x="100.65" y="113.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_form0_cell_integral_otherwise (2,323,090 us, 5.73%)</title><rect x="1036.3" y="135" width="67.6" height="15.0" fill="rgb(155.058586760021,135.44916516016,135.44916516016)" rx="2" ry="2" />
<text  x="1039.34" y="145.5" >Parloo..</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (2,025,935 us, 4.99%)</title><rect x="1103.9" y="151" width="58.9" height="15.0" fill="rgb(134.268698980863,97.1885411384621,134.268698980863)" rx="2" ry="2" />
<text  x="1106.91" y="161.5" >pyop2..</text>
</g>
<g >
<title>ParLoopExecute (977,833 us, 2.41%)</title><rect x="98.0" y="183" width="28.5" height="15.0" fill="rgb(149.907204081432,149.907204081432,118.781065933092)" rx="2" ry="2" />
<text  x="101.04" y="193.5" >P..</text>
</g>
<g >
<title>PetscBarrier (23,630 us, 0.06%)</title><rect x="39.4" y="71" width="0.7" height="15.0" fill="rgb(149.41770814373,149.41770814373,116.408893311923)" rx="2" ry="2" />
<text  x="42.43" y="81.5" ></text>
</g>
<g >
<title>CreateExtMesh (960,107 us, 2.37%)</title><rect x="10.0" y="71" width="27.9" height="15.0" fill="rgb(132.412516190868,162.165404341022,132.412516190868)" rx="2" ry="2" />
<text  x="13.00" y="81.5" >C..</text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (818,545 us, 2.02%)</title><rect x="1012.3" y="167" width="23.8" height="15.0" fill="rgb(151.606563701714,141.616819485641,151.606563701714)" rx="2" ry="2" />
<text  x="1015.30" y="177.5" >P..</text>
</g>
<g >
<title>firedrake.mesh._from_cell_list (4,852 us, 0.01%)</title><rect x="97.1" y="103" width="0.2" height="15.0" fill="rgb(121.99035561964,148.664166271758,148.664166271758)" rx="2" ry="2" />
<text  x="100.13" y="113.5" ></text>
</g>
<g >
<title>firedrake.functionspace.MixedFunctionSpace (4,797 us, 0.01%)</title><rect x="1011.3" y="151" width="0.1" height="15.0" fill="rgb(128.456402756857,128.456402756857,152.281884404553)" rx="2" ry="2" />
<text  x="1014.27" y="161.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (818,545 us, 2.02%)</title><rect x="1012.3" y="183" width="23.8" height="15.0" fill="rgb(140.78400332197,140.78400332197,154.667871610704)" rx="2" ry="2" />
<text  x="1015.30" y="193.5" >p..</text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (4,323 us, 0.01%)</title><rect x="1011.4" y="183" width="0.1" height="15.0" fill="rgb(152.562197320741,116.310179459011,116.310179459011)" rx="2" ry="2" />
<text  x="1014.41" y="193.5" ></text>
</g>
<g >
<title>SNESFunctionEval (5,290,854 us, 13.04%)</title><rect x="1036.1" y="103" width="153.9" height="15.0" fill="rgb(136.919961012117,136.919961012117,153.919992453958)" rx="2" ry="2" />
<text  x="1039.11" y="113.5" >SNESFunctionEval</text>
</g>
<g >
<title>all (40,568,061 us, 100%)</title><rect x="10.0" y="39" width="1180.0" height="15.0" fill="rgb(129.416251960218,150.589398656353,150.589398656353)" rx="2" ry="2" />
<text  x="13.00" y="49.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (9,064 us, 0.02%)</title><rect x="97.4" y="103" width="0.3" height="15.0" fill="rgb(120.365080153586,148.242798558337,148.242798558337)" rx="2" ry="2" />
<text  x="100.39" y="113.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (35,501 us, 0.09%)</title><rect x="37.9" y="87" width="1.1" height="15.0" fill="rgb(110.010190916625,110.010190916625,148.711649854831)" rx="2" ry="2" />
<text  x="40.93" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (7,922 us, 0.02%)</title><rect x="37.7" y="119" width="0.2" height="15.0" fill="rgb(125.082053988425,125.082053988425,151.628784642921)" rx="2" ry="2" />
<text  x="40.70" y="129.5" ></text>
</g>
<g >
<title>PCApply (31,364,371 us, 77.31%)</title><rect x="97.8" y="119" width="912.3" height="15.0" fill="rgb(152.829778142554,118.361632426245,118.361632426245)" rx="2" ry="2" />
<text  x="100.84" y="129.5" >PCApply</text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (7,633 us, 0.02%)</title><rect x="1011.5" y="151" width="0.3" height="15.0" fill="rgb(141.131117540183,114.773488696719,141.131117540183)" rx="2" ry="2" />
<text  x="1014.53" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (35,501 us, 0.09%)</title><rect x="37.9" y="119" width="1.1" height="15.0" fill="rgb(149.405758566846,149.405758566846,116.350983823947)" rx="2" ry="2" />
<text  x="40.93" y="129.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (922,782 us, 2.27%)</title><rect x="10.9" y="135" width="26.8" height="15.0" fill="rgb(154.215572742952,128.986057695963,128.986057695963)" rx="2" ry="2" />
<text  x="13.86" y="145.5" >p..</text>
</g>
<g >
<title>firedrake.slate.slac.optimise.optimise (33,790 us, 0.08%)</title><rect x="399.2" y="167" width="1.0" height="15.0" fill="rgb(120.554533050768,120.554533050768,150.752490267891)" rx="2" ry="2" />
<text  x="402.20" y="177.5" ></text>
</g>
<g >
<title>firedrake.utility_meshes.RectangleMesh (4,852 us, 0.01%)</title><rect x="97.1" y="87" width="0.2" height="15.0" fill="rgb(106.086973333308,144.541067160487,144.541067160487)" rx="2" ry="2" />
<text  x="100.13" y="97.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.action (4,285 us, 0.01%)</title><rect x="97.3" y="87" width="0.1" height="15.0" fill="rgb(155.65397231571,140.013787753778,140.013787753778)" rx="2" ry="2" />
<text  x="100.27" y="97.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (977,833 us, 2.41%)</title><rect x="98.0" y="215" width="28.5" height="15.0" fill="rgb(131.59980230533,162.297706601458,131.59980230533)" rx="2" ry="2" />
<text  x="101.04" y="225.5" >p..</text>
</g>
<g >
<title>firedrake.variational_solver.LinearVariationalProblem.__init__ (13,349 us, 0.03%)</title><rect x="97.3" y="71" width="0.4" height="15.0" fill="rgb(154.926986473549,154.926986473549,143.107703679508)" rx="2" ry="2" />
<text  x="100.27" y="81.5" ></text>
</g>
<g >
<title>firedrake.functionspace.VectorFunctionSpace (7,922 us, 0.02%)</title><rect x="37.7" y="87" width="0.2" height="15.0" fill="rgb(133.256546894351,162.028003993943,133.256546894351)" rx="2" ry="2" />
<text  x="40.70" y="97.5" ></text>
</g>
<g >
<title>ParLoopExecute (922,782 us, 2.27%)</title><rect x="10.9" y="103" width="26.8" height="15.0" fill="rgb(152.122210581013,112.936947787765,112.936947787765)" rx="2" ry="2" />
<text  x="13.86" y="113.5" >P..</text>
</g>
<g >
<title>CreateFunctionSpace (7,633 us, 0.02%)</title><rect x="1011.5" y="183" width="0.3" height="15.0" fill="rgb(133.751599595326,161.947414019366,133.751599595326)" rx="2" ry="2" />
<text  x="1014.53" y="193.5" ></text>
</g>
<g >
<title>firedrake.interpolation.make_interpolator (12,761 us, 0.03%)</title><rect x="1011.8" y="135" width="0.3" height="15.0" fill="rgb(154.459965987728,130.859739239247,130.859739239247)" rx="2" ry="2" />
<text  x="1014.76" y="145.5" ></text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (20,969,808 us, 51.69%)</title><rect x="400.2" y="167" width="609.9" height="15.0" fill="rgb(138.140831671463,161.232887867436,138.140831671463)" rx="2" ry="2" />
<text  x="403.19" y="177.5" >firedrake.tsfc_interface.compile_form</text>
</g>
<g >
<title>KSPSolve (31,364,371 us, 77.31%)</title><rect x="97.8" y="103" width="912.3" height="15.0" fill="rgb(155.190440817792,155.190440817792,144.384443963145)" rx="2" ry="2" />
<text  x="100.84" y="113.5" >KSPSolve</text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalProblem.__init__ (9,064 us, 0.02%)</title><rect x="97.4" y="87" width="0.3" height="15.0" fill="rgb(145.43812268915,160.044956771534,145.43812268915)" rx="2" ry="2" />
<text  x="100.39" y="97.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (9,120 us, 0.02%)</title><rect x="1011.3" y="135" width="0.2" height="15.0" fill="rgb(155.291790803092,155.291790803092,144.875601584215)" rx="2" ry="2" />
<text  x="1014.27" y="145.5" ></text>
</g>
<g >
<title>PCSetUp (892,912 us, 2.20%)</title><rect x="1010.1" y="103" width="26.0" height="15.0" fill="rgb(147.733132811054,147.733132811054,108.245182084337)" rx="2" ry="2" />
<text  x="1013.13" y="113.5" >P..</text>
</g>
<g >
<title>firedrake.assemble.allocate_matrix (6,384 us, 0.02%)</title><rect x="97.7" y="87" width="0.1" height="15.0" fill="rgb(128.019781960447,162.88050061109,128.019781960447)" rx="2" ry="2" />
<text  x="100.65" y="97.5" ></text>
</g>
<g >
<title>firedrake (40,568,061 us, 100.00%)</title><rect x="10.0" y="55" width="1180.0" height="15.0" fill="rgb(153.765223323458,125.533378813177,125.533378813177)" rx="2" ry="2" />
<text  x="13.00" y="65.5" >firedrake</text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.__init__ (6,384 us, 0.02%)</title><rect x="97.7" y="71" width="0.1" height="15.0" fill="rgb(119.881948483048,119.881948483048,150.622312609622)" rx="2" ry="2" />
<text  x="100.65" y="81.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_pyop2_kernel_uniform_extrusion (922,782 us, 2.27%)</title><rect x="10.9" y="119" width="26.8" height="15.0" fill="rgb(113.779681467912,146.535472973162,146.535472973162)" rx="2" ry="2" />
<text  x="13.86" y="129.5" >P..</text>
</g>
<g >
<title>firedrake.__init__ (1,959,851 us, 4.83%)</title><rect x="40.1" y="71" width="57.0" height="15.0" fill="rgb(143.393930462632,154.213241231053,154.213241231053)" rx="2" ry="2" />
<text  x="43.12" y="81.5" >fired..</text>
</g>
<g >
<title>ParLoopExecute (4,349,025 us, 10.72%)</title><rect x="1036.3" y="119" width="126.5" height="15.0" fill="rgb(109.788012955171,145.500595951341,145.500595951341)" rx="2" ry="2" />
<text  x="1039.34" y="129.5" >ParLoopExecute</text>
</g>
<g >
<title>firedrake.parloops.par_loop (824,377 us, 2.03%)</title><rect x="1012.1" y="135" width="24.0" height="15.0" fill="rgb(128.528170256704,162.797739725653,128.528170256704)" rx="2" ry="2" />
<text  x="1015.13" y="145.5" >f..</text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (7,633 us, 0.02%)</title><rect x="1011.5" y="167" width="0.3" height="15.0" fill="rgb(152.939924510454,152.939924510454,133.478095704506)" rx="2" ry="2" />
<text  x="1014.53" y="177.5" ></text>
</g>
<g >
<title>HybridRHS (30,379,615 us, 74.89%)</title><rect x="126.5" y="151" width="883.6" height="15.0" fill="rgb(144.122538358571,160.259121662558,144.122538358571)" rx="2" ry="2" />
<text  x="129.48" y="161.5" >HybridRHS</text>
</g>
<g >
<title>FunctionSpaceData: CreateElement (4,323 us, 0.01%)</title><rect x="1011.4" y="199" width="0.1" height="15.0" fill="rgb(156.75248689308,148.435732846949,148.435732846949)" rx="2" ry="2" />
<text  x="1014.41" y="209.5" ></text>
</g>
<g >
<title>firedrake.parloops.par_loop (984,756 us, 2.43%)</title><rect x="97.8" y="167" width="28.7" height="15.0" fill="rgb(150.869389333104,150.869389333104,123.443963691196)" rx="2" ry="2" />
<text  x="100.84" y="177.5" >f..</text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (5,691 us, 0.01%)</title><rect x="1189.8" y="135" width="0.2" height="15.0" fill="rgb(113.655733578862,113.655733578862,149.417238757199)" rx="2" ry="2" />
<text  x="1192.83" y="145.5" ></text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (933,821 us, 2.30%)</title><rect x="1162.8" y="119" width="27.2" height="15.0" fill="rgb(138.76993235261,153.014426906232,153.014426906232)" rx="2" ry="2" />
<text  x="1165.84" y="129.5" >f..</text>
</g>
<g >
<title>firedrake.utility_meshes.SquareMesh (4,852 us, 0.01%)</title><rect x="97.1" y="71" width="0.2" height="15.0" fill="rgb(142.396345993067,153.954608220425,153.954608220425)" rx="2" ry="2" />
<text  x="100.13" y="81.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (7,922 us, 0.02%)</title><rect x="37.7" y="135" width="0.2" height="15.0" fill="rgb(118.543452227489,147.770524651571,147.770524651571)" rx="2" ry="2" />
<text  x="40.70" y="145.5" ></text>
</g>
<g >
<title>SCForwardElim (31,364,371 us, 77.31%)</title><rect x="97.8" y="135" width="912.3" height="15.0" fill="rgb(125.160507758193,163.345963853317,125.160507758193)" rx="2" ry="2" />
<text  x="100.84" y="145.5" >SCForwardElim</text>
</g>
<g >
<title>HybridInit (892,912 us, 2.20%)</title><rect x="1010.1" y="119" width="26.0" height="15.0" fill="rgb(150.043043539715,150.043043539715,119.439364846311)" rx="2" ry="2" />
<text  x="1013.13" y="129.5" >H..</text>
</g>
<g >
<title>SNESSolve (37,548,137 us, 92.56%)</title><rect x="97.8" y="87" width="1092.2" height="15.0" fill="rgb(138.024078196821,152.821057310287,152.821057310287)" rx="2" ry="2" />
<text  x="100.84" y="97.5" >SNESSolve</text>
</g>
<g >
<title>Mesh: numbering (5,601 us, 0.01%)</title><rect x="39.3" y="87" width="0.1" height="15.0" fill="rgb(145.818064841616,159.983105723458,145.818064841616)" rx="2" ry="2" />
<text  x="42.27" y="97.5" ></text>
</g>
<g >
<title>CreateMesh (16,250 us, 0.04%)</title><rect x="39.0" y="71" width="0.4" height="15.0" fill="rgb(155.734183996505,140.628743973205,140.628743973205)" rx="2" ry="2" />
<text  x="41.96" y="81.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (7,922 us, 0.02%)</title><rect x="37.7" y="151" width="0.2" height="15.0" fill="rgb(139.943582411683,111.730429929937,139.943582411683)" rx="2" ry="2" />
<text  x="40.70" y="161.5" ></text>
</g>
<g >
<title>FunctionSpaceData: CreateElement (5,867 us, 0.01%)</title><rect x="38.3" y="135" width="0.2" height="15.0" fill="rgb(138.008896695494,161.254365654222,138.008896695494)" rx="2" ry="2" />
<text  x="41.33" y="145.5" ></text>
</g>
<g >
<title>ParLoopExecute (818,545 us, 2.02%)</title><rect x="1012.3" y="151" width="23.8" height="15.0" fill="rgb(154.983414395892,134.872843701839,134.872843701839)" rx="2" ry="2" />
<text  x="1015.30" y="161.5" >P..</text>
</g>
<g >
<title>Parloop_Cells_wrap_form1_cell_integral_otherwise (2,025,935 us, 4.99%)</title><rect x="1103.9" y="135" width="58.9" height="15.0" fill="rgb(128.494007161131,162.803301159816,128.494007161131)" rx="2" ry="2" />
<text  x="1106.91" y="145.5" >Parlo..</text>
</g>
<g >
<title>firedrake.mesh.MeshTopology._facets (15,889 us, 0.04%)</title><rect x="38.5" y="135" width="0.5" height="15.0" fill="rgb(152.691756098337,117.303463420583,117.303463420583)" rx="2" ry="2" />
<text  x="41.50" y="145.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (35,501 us, 0.09%)</title><rect x="37.9" y="71" width="1.1" height="15.0" fill="rgb(142.345185057913,160.548458246386,142.345185057913)" rx="2" ry="2" />
<text  x="40.93" y="81.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (2,317,222 us, 5.71%)</title><rect x="1036.5" y="151" width="67.4" height="15.0" fill="rgb(127.250697897104,163.005700342332,127.250697897104)" rx="2" ry="2" />
<text  x="1039.51" y="161.5" >pyop2...</text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (977,833 us, 2.41%)</title><rect x="98.0" y="199" width="28.5" height="15.0" fill="rgb(124.083066228168,149.20672087397,149.20672087397)" rx="2" ry="2" />
<text  x="101.04" y="209.5" >P..</text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (7,633 us, 0.02%)</title><rect x="1011.5" y="135" width="0.3" height="15.0" fill="rgb(146.462283686609,155.008740215047,155.008740215047)" rx="2" ry="2" />
<text  x="1014.53" y="145.5" ></text>
</g>
<g >
<title>firedrake.extrusion_utils.make_extruded_coords (952,185 us, 2.35%)</title><rect x="10.0" y="87" width="27.7" height="15.0" fill="rgb(128.862242029878,150.445766452191,150.445766452191)" rx="2" ry="2" />
<text  x="13.00" y="97.5" >f..</text>
</g>
<g >
<title>CreateFunctionSpace (7,922 us, 0.02%)</title><rect x="37.7" y="103" width="0.2" height="15.0" fill="rgb(132.215704794676,151.315182724546,151.315182724546)" rx="2" ry="2" />
<text  x="40.70" y="113.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (4,323 us, 0.01%)</title><rect x="1011.4" y="151" width="0.1" height="15.0" fill="rgb(148.676737429786,148.676737429786,112.818035236654)" rx="2" ry="2" />
<text  x="1014.41" y="161.5" ></text>
</g>
</g>
</svg>
