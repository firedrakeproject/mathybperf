<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="283" onload="init(evt)" viewBox="0 0 1200 283" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:13px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:18px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 13 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (1 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="283.0" fill="url(#background)"  />
<text id="title" x="600.00" y="26" >Firedrake example</text>
<text id="details" x="10.00" y="265" > </text>
<text id="unzoom" x="10.00" y="26" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="26" >Search</text>
<text id="ignorecase" x="1174.00" y="26" >ic</text>
<text id="matched" x="1090.00" y="265" > </text>
<g id="frames">
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (2,227 us, 0.02%)</title><rect x="537.9" y="231" width="0.2" height="15.0" fill="rgb(153.379734576882,122.577965089432,122.577965089432)" rx="2" ry="2" />
<text  x="540.89" y="241.5" ></text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (909,443 us, 7.57%)</title><rect x="1100.7" y="119" width="89.3" height="15.0" fill="rgb(113.138840746186,146.369329082345,146.369329082345)" rx="2" ry="2" />
<text  x="1103.71" y="129.5" >firedrake..</text>
</g>
<g >
<title>Mesh: reorder (3,465 us, 0.03%)</title><rect x="132.2" y="87" width="0.3" height="15.0" fill="rgb(143.010136474438,119.588474715748,143.010136474438)" rx="2" ry="2" />
<text  x="135.19" y="97.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.__init__ (9,105 us, 0.08%)</title><rect x="420.5" y="71" width="0.9" height="15.0" fill="rgb(152.100937098834,112.773851091058,112.773851091058)" rx="2" ry="2" />
<text  x="423.50" y="81.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.action (3,663 us, 0.03%)</title><rect x="420.8" y="119" width="0.4" height="15.0" fill="rgb(140.205948296873,112.402742510737,140.205948296873)" rx="2" ry="2" />
<text  x="423.81" y="129.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (2,227 us, 0.02%)</title><rect x="537.9" y="215" width="0.2" height="15.0" fill="rgb(155.345492565504,155.345492565504,145.135848586674)" rx="2" ry="2" />
<text  x="540.89" y="225.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (35,363 us, 0.29%)</title><rect x="127.4" y="119" width="3.5" height="15.0" fill="rgb(127.548777435045,150.105238594271,150.105238594271)" rx="2" ry="2" />
<text  x="130.44" y="129.5" ></text>
</g>
<g >
<title>CreateExtMesh (1,194,570 us, 9.94%)</title><rect x="10.0" y="71" width="117.3" height="15.0" fill="rgb(141.599967041676,141.599967041676,154.825800072582)" rx="2" ry="2" />
<text  x="13.00" y="81.5" >CreateExtMesh</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (1,017,118 us, 8.46%)</title><rect x="421.9" y="215" width="99.9" height="15.0" fill="rgb(145.126548831478,154.662438585939,154.662438585939)" rx="2" ry="2" />
<text  x="424.95" y="225.5" >pyop2.globa..</text>
</g>
<g >
<title>firedrake.ufl_expr.action (4,270 us, 0.04%)</title><rect x="419.0" y="87" width="0.4" height="15.0" fill="rgb(147.708912142973,159.675293372074,147.708912142973)" rx="2" ry="2" />
<text  x="421.99" y="97.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (2,287,642 us, 19.03%)</title><rect x="876.1" y="151" width="224.6" height="15.0" fill="rgb(150.419047973043,159.234108469505,150.419047973043)" rx="2" ry="2" />
<text  x="879.12" y="161.5" >pyop2.global_kernel.GlobalK..</text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (8,051 us, 0.07%)</title><rect x="126.5" y="151" width="0.8" height="15.0" fill="rgb(136.138768695444,152.332273365485,152.332273365485)" rx="2" ry="2" />
<text  x="129.49" y="161.5" ></text>
</g>
<g >
<title>SCForwardElim (1,140,095 us, 9.49%)</title><rect x="421.4" y="135" width="111.9" height="15.0" fill="rgb(132.724677795127,93.231986850012,132.724677795127)" rx="2" ry="2" />
<text  x="424.39" y="145.5" >SCForwardElim</text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (2,408 us, 0.02%)</title><rect x="536.2" y="215" width="0.2" height="15.0" fill="rgb(110.473757837857,110.473757837857,148.801372484746)" rx="2" ry="2" />
<text  x="539.20" y="225.5" ></text>
</g>
<g >
<title>firedrake.parloops.par_loop (742,427 us, 6.18%)</title><rect x="539.2" y="135" width="72.9" height="15.0" fill="rgb(112.235886658002,146.135229874297,146.135229874297)" rx="2" ry="2" />
<text  x="542.22" y="145.5" >firedra..</text>
</g>
<g >
<title>CreateMesh (1,584 us, 0.01%)</title><rect x="418.1" y="119" width="0.2" height="15.0" fill="rgb(149.414955749261,136.000824107482,149.414955749261)" rx="2" ry="2" />
<text  x="421.10" y="129.5" ></text>
</g>
<g >
<title>ParLoopExecute (4,970,887 us, 41.36%)</title><rect x="612.7" y="119" width="488.0" height="15.0" fill="rgb(143.452327390194,154.228381175236,154.228381175236)" rx="2" ry="2" />
<text  x="615.69" y="129.5" >ParLoopExecute</text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (1,017,118 us, 8.46%)</title><rect x="421.9" y="199" width="99.9" height="15.0" fill="rgb(123.853514782728,149.147207536263,149.147207536263)" rx="2" ry="2" />
<text  x="424.95" y="209.5" >Parloop_Cel..</text>
</g>
<g >
<title>Parloop_Cells_wrap_pyop2_kernel_uniform_extrusion (1,153,324 us, 9.60%)</title><rect x="13.3" y="119" width="113.2" height="15.0" fill="rgb(138.12037146267,138.12037146267,154.152329960517)" rx="2" ry="2" />
<text  x="16.26" y="129.5" >Parloop_Cell..</text>
</g>
<g >
<title>firedrake.extrusion_utils.make_extruded_coords (1,183,874 us, 9.85%)</title><rect x="10.3" y="87" width="116.2" height="15.0" fill="rgb(119.126023349691,147.921561609179,147.921561609179)" rx="2" ry="2" />
<text  x="13.26" y="97.5" >firedrake.ext..</text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (11,037 us, 0.09%)</title><rect x="537.0" y="151" width="1.1" height="15.0" fill="rgb(138.210448192689,138.210448192689,154.169764166327)" rx="2" ry="2" />
<text  x="540.02" y="161.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.LinearVariationalProblem.__init__ (15,309 us, 0.13%)</title><rect x="419.0" y="71" width="1.5" height="15.0" fill="rgb(152.201429490555,113.544292760919,113.544292760919)" rx="2" ry="2" />
<text  x="421.99" y="81.5" ></text>
</g>
<g >
<title>CreateMesh (1,584 us, 0.01%)</title><rect x="418.1" y="103" width="0.2" height="15.0" fill="rgb(147.351475150794,130.713155073909,147.351475150794)" rx="2" ry="2" />
<text  x="421.10" y="113.5" ></text>
</g>
<g >
<title>ParLoopExecute (1,017,118 us, 8.46%)</title><rect x="421.9" y="183" width="99.9" height="15.0" fill="rgb(151.742471170713,151.742471170713,127.675052596534)" rx="2" ry="2" />
<text  x="424.95" y="193.5" >ParLoopExec..</text>
</g>
<g >
<title>CreateFunctionSpace (6,838 us, 0.06%)</title><rect x="536.2" y="135" width="0.7" height="15.0" fill="rgb(153.829656930353,126.027369799376,126.027369799376)" rx="2" ry="2" />
<text  x="539.20" y="145.5" ></text>
</g>
<g >
<title>firedrake.assemble.allocate_matrix (5,961 us, 0.05%)</title><rect x="420.8" y="87" width="0.6" height="15.0" fill="rgb(142.944677896849,154.096768343627,154.096768343627)" rx="2" ry="2" />
<text  x="423.81" y="97.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (5,796 us, 0.05%)</title><rect x="1189.4" y="135" width="0.6" height="15.0" fill="rgb(154.038937939782,127.631857538326,127.631857538326)" rx="2" ry="2" />
<text  x="1192.43" y="145.5" ></text>
</g>
<g >
<title>firedrake.parloops.par_loop (1,022,775 us, 8.51%)</title><rect x="421.4" y="167" width="100.4" height="15.0" fill="rgb(155.732910784693,140.618982682645,140.618982682645)" rx="2" ry="2" />
<text  x="424.39" y="177.5" >firedrake.p..</text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (2,298 us, 0.02%)</title><rect x="421.2" y="119" width="0.2" height="15.0" fill="rgb(128.239475613512,162.844736528033,128.239475613512)" rx="2" ry="2" />
<text  x="424.17" y="129.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_form1_cell_integral_otherwise (2,291,617 us, 19.07%)</title><rect x="875.7" y="135" width="225.0" height="15.0" fill="rgb(125.780047143145,125.780047143145,151.763880092222)" rx="2" ry="2" />
<text  x="878.73" y="145.5" >Parloop_Cells_wrap_form1_ce..</text>
</g>
<g >
<title>CreateFunctionSpace (5,329 us, 0.04%)</title><rect x="537.6" y="183" width="0.5" height="15.0" fill="rgb(154.915683726064,134.353575233158,134.353575233158)" rx="2" ry="2" />
<text  x="540.58" y="193.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (12,563 us, 0.10%)</title><rect x="536.9" y="135" width="1.2" height="15.0" fill="rgb(154.56107957412,131.634943401589,131.634943401589)" rx="2" ry="2" />
<text  x="539.87" y="145.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (7,859 us, 0.07%)</title><rect x="537.3" y="167" width="0.8" height="15.0" fill="rgb(113.057672480709,146.348285457962,146.348285457962)" rx="2" ry="2" />
<text  x="540.34" y="177.5" ></text>
</g>
<g >
<title>firedrake.slate.slac.optimise.optimise (15,218 us, 0.13%)</title><rect x="531.8" y="167" width="1.5" height="15.0" fill="rgb(117.698002854087,147.551334073282,147.551334073282)" rx="2" ry="2" />
<text  x="534.83" y="177.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (1,785 us, 0.01%)</title><rect x="1189.8" y="167" width="0.2" height="15.0" fill="rgb(141.91913439178,141.91913439178,154.887574398409)" rx="2" ry="2" />
<text  x="1192.82" y="177.5" ></text>
</g>
<g >
<title>Log_Event_form0_cell_integral_otherwise (3,961 us, 0.03%)</title><rect x="613.0" y="151" width="0.4" height="15.0" fill="rgb(143.907073087058,143.907073087058,155.272336726527)" rx="2" ry="2" />
<text  x="616.03" y="161.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (9,414 us, 0.08%)</title><rect x="419.6" y="103" width="0.9" height="15.0" fill="rgb(144.007279721305,144.007279721305,155.291731558962)" rx="2" ry="2" />
<text  x="422.57" y="113.5" ></text>
</g>
<g >
<title>firedrake (12,019,147 us, 100.00%)</title><rect x="10.0" y="55" width="1180.0" height="15.0" fill="rgb(121.641325601158,121.641325601158,150.962837213127)" rx="2" ry="2" />
<text  x="13.00" y="65.5" >firedrake</text>
</g>
<g >
<title>KSPSolve (1,140,095 us, 9.49%)</title><rect x="421.4" y="103" width="111.9" height="15.0" fill="rgb(153.572863470528,153.572863470528,136.545415280253)" rx="2" ry="2" />
<text  x="424.39" y="113.5" >KSPSolve</text>
</g>
<g >
<title>firedrake.mesh.MeshTopology._facets (16,096 us, 0.13%)</title><rect x="129.3" y="135" width="1.6" height="15.0" fill="rgb(118.662786686539,147.801463215029,147.801463215029)" rx="2" ry="2" />
<text  x="132.33" y="145.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (4,430 us, 0.04%)</title><rect x="536.4" y="183" width="0.5" height="15.0" fill="rgb(138.452989991846,138.452989991846,154.216707740357)" rx="2" ry="2" />
<text  x="539.44" y="193.5" ></text>
</g>
<g >
<title>PCApply (1,140,095 us, 9.49%)</title><rect x="421.4" y="119" width="111.9" height="15.0" fill="rgb(151.527859405099,151.527859405099,126.635010963174)" rx="2" ry="2" />
<text  x="424.39" y="129.5" >PCApply</text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (35,363 us, 0.29%)</title><rect x="127.4" y="87" width="3.5" height="15.0" fill="rgb(141.716423653905,116.273335613131,141.716423653905)" rx="2" ry="2" />
<text  x="130.44" y="97.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (2,093 us, 0.02%)</title><rect x="612.1" y="135" width="0.2" height="15.0" fill="rgb(154.226617047214,154.226617047214,139.713605690343)" rx="2" ry="2" />
<text  x="615.11" y="145.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_form0_cell_integral_otherwise (2,677,829 us, 22.28%)</title><rect x="612.8" y="135" width="262.9" height="15.0" fill="rgb(149.245540514948,149.245540514948,115.574542495518)" rx="2" ry="2" />
<text  x="615.83" y="145.5" >Parloop_Cells_wrap_form0_cell_in..</text>
</g>
<g >
<title>HybridInit (804,570 us, 6.69%)</title><rect x="533.3" y="119" width="79.0" height="15.0" fill="rgb(125.748259129275,125.748259129275,151.757727573408)" rx="2" ry="2" />
<text  x="536.32" y="129.5" >HybridInit</text>
</g>
<g >
<title>firedrake.__init__ (2,879,278 us, 23.96%)</title><rect x="135.2" y="71" width="282.6" height="15.0" fill="rgb(154.244893707994,129.210851761286,129.210851761286)" rx="2" ry="2" />
<text  x="138.15" y="81.5" >firedrake.__init__</text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (2,227 us, 0.02%)</title><rect x="537.9" y="199" width="0.2" height="15.0" fill="rgb(142.289078936363,153.926798242761,153.926798242761)" rx="2" ry="2" />
<text  x="540.89" y="209.5" ></text>
</g>
<g >
<title>firedrake.functionspace.MixedFunctionSpace (2,408 us, 0.02%)</title><rect x="536.2" y="151" width="0.2" height="15.0" fill="rgb(113.006791439121,113.006791439121,149.291637052733)" rx="2" ry="2" />
<text  x="539.20" y="161.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (8,051 us, 0.07%)</title><rect x="126.5" y="103" width="0.8" height="15.0" fill="rgb(147.169400637674,155.19206683199,155.19206683199)" rx="2" ry="2" />
<text  x="129.49" y="113.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (35,363 us, 0.29%)</title><rect x="127.4" y="103" width="3.5" height="15.0" fill="rgb(138.801274571167,161.125373907019,138.801274571167)" rx="2" ry="2" />
<text  x="130.44" y="113.5" ></text>
</g>
<g >
<title>FunctionSpaceData: CreateElement (6,052 us, 0.05%)</title><rect x="128.7" y="135" width="0.6" height="15.0" fill="rgb(148.007638201536,148.007638201536,109.575477438211)" rx="2" ry="2" />
<text  x="131.73" y="145.5" ></text>
</g>
<g >
<title>firedrake.utility_meshes.SquareMesh (11,877 us, 0.10%)</title><rect x="417.8" y="71" width="1.2" height="15.0" fill="rgb(156.017026903687,142.797206261601,142.797206261601)" rx="2" ry="2" />
<text  x="420.83" y="81.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (2,408 us, 0.02%)</title><rect x="536.2" y="183" width="0.2" height="15.0" fill="rgb(134.161287741594,161.880720600206,134.161287741594)" rx="2" ry="2" />
<text  x="539.20" y="193.5" ></text>
</g>
<g >
<title>Mesh: numbering (5,767 us, 0.05%)</title><rect x="131.6" y="87" width="0.6" height="15.0" fill="rgb(134.243290309483,161.867371344968,134.243290309483)" rx="2" ry="2" />
<text  x="134.63" y="97.5" ></text>
</g>
<g >
<title>firedrake.mesh._from_cell_list (7,564 us, 0.06%)</title><rect x="418.3" y="103" width="0.7" height="15.0" fill="rgb(153.055493501373,153.055493501373,134.038160814347)" rx="2" ry="2" />
<text  x="421.25" y="113.5" ></text>
</g>
<g >
<title>DMPlexStratify (3,645 us, 0.03%)</title><rect x="134.6" y="87" width="0.3" height="15.0" fill="rgb(149.004563767082,149.004563767082,114.406732102013)" rx="2" ry="2" />
<text  x="137.58" y="97.5" ></text>
</g>
<g >
<title>HybridRHS (117,320 us, 0.98%)</title><rect x="521.8" y="151" width="11.5" height="15.0" fill="rgb(114.004488184633,114.004488184633,149.484739648639)" rx="2" ry="2" />
<text  x="524.80" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspace.VectorFunctionSpace (8,051 us, 0.07%)</title><rect x="126.5" y="87" width="0.8" height="15.0" fill="rgb(150.074849877898,150.074849877898,119.593503254428)" rx="2" ry="2" />
<text  x="129.49" y="97.5" ></text>
</g>
<g >
<title>FunctionSpaceData: CreateElement (4,430 us, 0.04%)</title><rect x="536.4" y="199" width="0.5" height="15.0" fill="rgb(153.340687187738,153.340687187738,135.420253294422)" rx="2" ry="2" />
<text  x="539.44" y="209.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (737,121 us, 6.13%)</title><rect x="539.7" y="167" width="72.4" height="15.0" fill="rgb(144.833467243765,144.833467243765,155.451638821374)" rx="2" ry="2" />
<text  x="542.74" y="177.5" >Parloop..</text>
</g>
<g >
<title>ParLoopExecute (1,153,324 us, 9.60%)</title><rect x="13.3" y="103" width="113.2" height="15.0" fill="rgb(153.319886556154,153.319886556154,135.31945023367)" rx="2" ry="2" />
<text  x="16.26" y="113.5" >ParLoopExecute</text>
</g>
<g >
<title>ParLoopExecute (737,121 us, 6.13%)</title><rect x="539.7" y="151" width="72.4" height="15.0" fill="rgb(128.436717282766,128.436717282766,152.278074312793)" rx="2" ry="2" />
<text  x="542.74" y="161.5" >ParLoop..</text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalProblem.__init__ (11,039 us, 0.09%)</title><rect x="419.4" y="87" width="1.1" height="15.0" fill="rgb(123.009664688614,148.928431585937,148.928431585937)" rx="2" ry="2" />
<text  x="422.41" y="97.5" ></text>
</g>
<g >
<title>SNESFunctionEval (5,884,162 us, 48.96%)</title><rect x="612.3" y="103" width="577.7" height="15.0" fill="rgb(129.206214227345,150.534944429312,150.534944429312)" rx="2" ry="2" />
<text  x="615.31" y="113.5" >SNESFunctionEval</text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (3,629 us, 0.03%)</title><rect x="1189.6" y="151" width="0.4" height="15.0" fill="rgb(144.28726300679,160.23230602215,144.28726300679)" rx="2" ry="2" />
<text  x="1192.64" y="161.5" ></text>
</g>
<g >
<title>DMPlexInterp (5,084 us, 0.04%)</title><rect x="418.5" y="119" width="0.5" height="15.0" fill="rgb(120.407627818673,148.253829434471,148.253829434471)" rx="2" ry="2" />
<text  x="421.50" y="129.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (8,051 us, 0.07%)</title><rect x="126.5" y="135" width="0.8" height="15.0" fill="rgb(144.574454047323,160.185553992296,144.574454047323)" rx="2" ry="2" />
<text  x="129.49" y="145.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (2,408 us, 0.02%)</title><rect x="536.2" y="199" width="0.2" height="15.0" fill="rgb(153.341931527634,153.341931527634,135.426283556997)" rx="2" ry="2" />
<text  x="539.20" y="209.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (2,671,859 us, 22.23%)</title><rect x="613.4" y="151" width="262.3" height="15.0" fill="rgb(114.751170868259,146.787340595475,146.787340595475)" rx="2" ry="2" />
<text  x="616.42" y="161.5" >pyop2.global_kernel.GlobalKernel..</text>
</g>
<g >
<title>CreateFunctionSpace (36,974 us, 0.31%)</title><rect x="127.3" y="71" width="3.6" height="15.0" fill="rgb(149.235475714795,149.235475714795,115.525766925547)" rx="2" ry="2" />
<text  x="130.28" y="81.5" ></text>
</g>
<g >
<title>CreateMesh (16,551 us, 0.14%)</title><rect x="130.9" y="71" width="1.6" height="15.0" fill="rgb(117.252735039355,147.435894269462,147.435894269462)" rx="2" ry="2" />
<text  x="133.91" y="81.5" ></text>
</g>
<g >
<title>all (12,019,147 us, 100%)</title><rect x="10.0" y="39" width="1180.0" height="15.0" fill="rgb(149.219614506337,149.219614506337,115.448901069174)" rx="2" ry="2" />
<text  x="13.00" y="49.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (4,430 us, 0.04%)</title><rect x="536.4" y="151" width="0.5" height="15.0" fill="rgb(151.185584795544,151.185584795544,124.976295547636)" rx="2" ry="2" />
<text  x="539.44" y="161.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (1,755 us, 0.01%)</title><rect x="533.2" y="183" width="0.1" height="15.0" fill="rgb(155.909456099338,141.97249676159,141.97249676159)" rx="2" ry="2" />
<text  x="536.15" y="193.5" ></text>
</g>
<g >
<title>Log_Event_form1_cell_integral_otherwise (1,970 us, 0.02%)</title><rect x="875.9" y="151" width="0.2" height="15.0" fill="rgb(152.750499069118,152.750499069118,132.560110873417)" rx="2" ry="2" />
<text  x="878.93" y="161.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (2,408 us, 0.02%)</title><rect x="536.2" y="167" width="0.2" height="15.0" fill="rgb(145.721434490902,145.721434490902,155.623503449852)" rx="2" ry="2" />
<text  x="539.20" y="177.5" ></text>
</g>
<g >
<title>CreateMesh (3,134 us, 0.03%)</title><rect x="131.3" y="87" width="0.3" height="15.0" fill="rgb(154.85300003589,154.85300003589,142.749154020084)" rx="2" ry="2" />
<text  x="134.32" y="97.5" ></text>
</g>
<g >
<title>PCSetUp (804,570 us, 6.69%)</title><rect x="533.3" y="103" width="79.0" height="15.0" fill="rgb(126.580354810232,163.114825961125,126.580354810232)" rx="2" ry="2" />
<text  x="536.32" y="113.5" >PCSetUp</text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (8,051 us, 0.07%)</title><rect x="126.5" y="119" width="0.8" height="15.0" fill="rgb(142.417637949163,142.417637949163,154.984058957902)" rx="2" ry="2" />
<text  x="129.49" y="129.5" ></text>
</g>
<g >
<title>firedrake.interpolation.make_interpolator (11,318 us, 0.09%)</title><rect x="538.1" y="135" width="1.1" height="15.0" fill="rgb(152.390274335157,152.390274335157,130.814406393452)" rx="2" ry="2" />
<text  x="541.11" y="145.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (1,153,324 us, 9.60%)</title><rect x="13.3" y="135" width="113.2" height="15.0" fill="rgb(144.014250810759,144.014250810759,155.293080802082)" rx="2" ry="2" />
<text  x="16.26" y="145.5" >pyop2.global..</text>
</g>
<g >
<title>PetscBarrier (26,656 us, 0.22%)</title><rect x="132.5" y="71" width="2.7" height="15.0" fill="rgb(124.032312333311,149.193562456784,149.193562456784)" rx="2" ry="2" />
<text  x="135.53" y="81.5" ></text>
</g>
<g >
<title>DMPlexSymmetrize (2,211 us, 0.02%)</title><rect x="134.9" y="87" width="0.3" height="15.0" fill="rgb(153.576267087881,124.084714340423,124.084714340423)" rx="2" ry="2" />
<text  x="137.93" y="97.5" ></text>
</g>
<g >
<title>firedrake.matrix_free.operators.ImplicitMatrixContext.__init__ (5,961 us, 0.05%)</title><rect x="420.8" y="103" width="0.6" height="15.0" fill="rgb(149.559242269501,149.559242269501,117.094789459889)" rx="2" ry="2" />
<text  x="423.81" y="113.5" ></text>
</g>
<g >
<title>SNESSolve (7,828,827 us, 65.14%)</title><rect x="421.4" y="87" width="768.6" height="15.0" fill="rgb(130.391108624583,162.494470689021,130.391108624583)" rx="2" ry="2" />
<text  x="424.39" y="97.5" >SNESSolve</text>
</g>
<g >
<title>HybridBreak (1,022,775 us, 8.51%)</title><rect x="421.4" y="151" width="100.4" height="15.0" fill="rgb(151.345313139129,151.345313139129,125.750363674239)" rx="2" ry="2" />
<text  x="424.39" y="161.5" >HybridBreak</text>
</g>
<g >
<title>firedrake.utility_meshes.RectangleMesh (11,877 us, 0.10%)</title><rect x="417.8" y="87" width="1.2" height="15.0" fill="rgb(153.05270656107,153.05270656107,134.024654872878)" rx="2" ry="2" />
<text  x="420.83" y="97.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (737,121 us, 6.13%)</title><rect x="539.7" y="183" width="72.4" height="15.0" fill="rgb(135.198410646749,161.711886638901,135.198410646749)" rx="2" ry="2" />
<text  x="542.74" y="193.5" >pyop2.g..</text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.solve (7,828,827 us, 65.14%)</title><rect x="421.4" y="71" width="768.6" height="15.0" fill="rgb(108.677668872016,145.212728966819,145.212728966819)" rx="2" ry="2" />
<text  x="424.39" y="81.5" >firedrake.variational_solver.NonlinearVariationalSolver.solve</text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (4,430 us, 0.04%)</title><rect x="536.4" y="167" width="0.5" height="15.0" fill="rgb(151.317449371404,151.317449371404,125.615331569113)" rx="2" ry="2" />
<text  x="539.44" y="177.5" ></text>
</g>
</g>
</svg>
