<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="283" onload="init(evt)" viewBox="0 0 1200 283" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:13px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:18px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 13 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (1 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="283.0" fill="url(#background)"  />
<text id="title" x="600.00" y="26" >Firedrake example</text>
<text id="details" x="10.00" y="265" > </text>
<text id="unzoom" x="10.00" y="26" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="26" >Search</text>
<text id="ignorecase" x="1174.00" y="26" >ic</text>
<text id="matched" x="1090.00" y="265" > </text>
<g id="frames">
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (775,037 us, 6.47%)</title><rect x="544.5" y="183" width="76.3" height="15.0" fill="rgb(137.676579146315,105.921234062432,137.676579146315)" rx="2" ry="2" />
<text  x="547.45" y="193.5" >pyop2.g..</text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (12,548 us, 0.10%)</title><rect x="541.5" y="135" width="1.2" height="15.0" fill="rgb(106.761525306902,144.715951005493,144.715951005493)" rx="2" ry="2" />
<text  x="544.50" y="145.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (775,037 us, 6.47%)</title><rect x="544.5" y="167" width="76.3" height="15.0" fill="rgb(154.847291300555,133.829233304253,133.829233304253)" rx="2" ry="2" />
<text  x="547.45" y="177.5" >Parloop..</text>
</g>
<g >
<title>firedrake.assemble.allocate_matrix (6,142 us, 0.05%)</title><rect x="424.5" y="87" width="0.7" height="15.0" fill="rgb(132.129300496116,132.129300496116,152.992767837958)" rx="2" ry="2" />
<text  x="427.55" y="97.5" ></text>
</g>
<g >
<title>CreateMesh (3,181 us, 0.03%)</title><rect x="120.9" y="87" width="0.4" height="15.0" fill="rgb(149.19190916173,149.19190916173,115.314636706845)" rx="2" ry="2" />
<text  x="123.94" y="97.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (2,288,257 us, 19.10%)</title><rect x="875.8" y="151" width="225.4" height="15.0" fill="rgb(153.012397487887,153.012397487887,133.829310902838)" rx="2" ry="2" />
<text  x="878.77" y="161.5" >pyop2.global_kernel.GlobalK..</text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (2,325 us, 0.02%)</title><rect x="542.5" y="231" width="0.2" height="15.0" fill="rgb(126.477820929331,126.477820929331,151.898933083096)" rx="2" ry="2" />
<text  x="545.51" y="241.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (2,570,559 us, 21.46%)</title><rect x="622.2" y="151" width="253.2" height="15.0" fill="rgb(113.947142502471,146.578888796937,146.578888796937)" rx="2" ry="2" />
<text  x="625.16" y="161.5" >pyop2.global_kernel.GlobalKerne..</text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (12,548 us, 0.10%)</title><rect x="541.5" y="151" width="1.2" height="15.0" fill="rgb(155.679107643824,155.679107643824,146.752598581606)" rx="2" ry="2" />
<text  x="544.50" y="161.5" ></text>
</g>
<g >
<title>firedrake.parloops.par_loop (1,019,428 us, 8.51%)</title><rect x="425.2" y="167" width="100.4" height="15.0" fill="rgb(153.167055393329,120.947424682189,120.947424682189)" rx="2" ry="2" />
<text  x="428.15" y="177.5" >firedrake.p..</text>
</g>
<g >
<title>SNESSolve (7,764,930 us, 64.82%)</title><rect x="425.2" y="87" width="764.8" height="15.0" fill="rgb(141.751670595245,141.751670595245,154.855162050693)" rx="2" ry="2" />
<text  x="428.15" y="97.5" >SNESSolve</text>
</g>
<g >
<title>CreateExtMesh (1,085,712 us, 9.06%)</title><rect x="10.0" y="71" width="106.9" height="15.0" fill="rgb(146.540854670655,159.865442262917,146.540854670655)" rx="2" ry="2" />
<text  x="13.00" y="81.5" >CreateExtMesh</text>
</g>
<g >
<title>all (11,979,668 us, 100%)</title><rect x="10.0" y="39" width="1180.0" height="15.0" fill="rgb(143.862192162252,160.301503601494,143.862192162252)" rx="2" ry="2" />
<text  x="13.00" y="49.5" ></text>
</g>
<g >
<title>firedrake.mesh._from_cell_list (4,713 us, 0.04%)</title><rect x="422.2" y="103" width="0.5" height="15.0" fill="rgb(133.062467051044,162.059598387039,133.062467051044)" rx="2" ry="2" />
<text  x="425.22" y="113.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (5,618 us, 0.05%)</title><rect x="542.2" y="183" width="0.5" height="15.0" fill="rgb(148.858361747655,148.858361747655,113.69821462325)" rx="2" ry="2" />
<text  x="545.18" y="193.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.solve (7,764,930 us, 64.82%)</title><rect x="425.2" y="71" width="764.8" height="15.0" fill="rgb(126.040239496491,163.202751709874,126.040239496491)" rx="2" ry="2" />
<text  x="428.15" y="81.5" >firedrake.variational_solver.NonlinearVariationalSolver.solve</text>
</g>
<g >
<title>firedrake.ufl_expr.action (3,778 us, 0.03%)</title><rect x="424.5" y="119" width="0.4" height="15.0" fill="rgb(150.299892853773,150.299892853773,120.684096137515)" rx="2" ry="2" />
<text  x="427.55" y="129.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (9,081 us, 0.08%)</title><rect x="540.6" y="151" width="0.9" height="15.0" fill="rgb(132.24949981731,132.24949981731,153.016032222705)" rx="2" ry="2" />
<text  x="543.61" y="161.5" ></text>
</g>
<g >
<title>PetscBarrier (23,329 us, 0.19%)</title><rect x="122.2" y="71" width="2.3" height="15.0" fill="rgb(148.757115174029,148.757115174029,113.207558151065)" rx="2" ry="2" />
<text  x="125.15" y="81.5" ></text>
</g>
<g >
<title>SCForwardElim (1,136,357 us, 9.49%)</title><rect x="425.2" y="135" width="111.9" height="15.0" fill="rgb(121.648579731433,121.648579731433,150.964241238342)" rx="2" ry="2" />
<text  x="428.15" y="145.5" >SCForwardElim</text>
</g>
<g >
<title>ParLoopExecute (1,013,825 us, 8.46%)</title><rect x="425.7" y="183" width="99.9" height="15.0" fill="rgb(125.628278824952,125.628278824952,151.734505579023)" rx="2" ry="2" />
<text  x="428.70" y="193.5" >ParLoopExec..</text>
</g>
<g >
<title>CreateFunctionSpace (8,080 us, 0.07%)</title><rect x="116.1" y="103" width="0.8" height="15.0" fill="rgb(121.079859056488,121.079859056488,150.854166268998)" rx="2" ry="2" />
<text  x="119.15" y="113.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (9,081 us, 0.08%)</title><rect x="540.6" y="167" width="0.9" height="15.0" fill="rgb(150.703531013717,150.703531013717,122.640188758782)" rx="2" ry="2" />
<text  x="543.61" y="177.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.__init__ (9,270 us, 0.08%)</title><rect x="424.2" y="71" width="1.0" height="15.0" fill="rgb(155.220260916816,136.688667028926,136.688667028926)" rx="2" ry="2" />
<text  x="427.24" y="81.5" ></text>
</g>
<g >
<title>FunctionSpaceData: CreateElement (6,130 us, 0.05%)</title><rect x="118.4" y="135" width="0.6" height="15.0" fill="rgb(140.283070258387,140.283070258387,154.570916824204)" rx="2" ry="2" />
<text  x="121.37" y="145.5" ></text>
</g>
<g >
<title>CreateMesh (16,358 us, 0.14%)</title><rect x="120.5" y="71" width="1.7" height="15.0" fill="rgb(156.280128676687,144.8143198546,144.8143198546)" rx="2" ry="2" />
<text  x="123.54" y="81.5" ></text>
</g>
<g >
<title>firedrake.__init__ (3,019,981 us, 25.21%)</title><rect x="124.5" y="71" width="297.4" height="15.0" fill="rgb(154.128923859334,154.128923859334,139.240169472159)" rx="2" ry="2" />
<text  x="127.45" y="81.5" >firedrake.__init__</text>
</g>
<g >
<title>CreateFunctionSpace (2,711 us, 0.02%)</title><rect x="540.3" y="167" width="0.3" height="15.0" fill="rgb(144.243752522058,144.243752522058,155.33750048814)" rx="2" ry="2" />
<text  x="543.34" y="177.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (1,044,870 us, 8.72%)</title><rect x="13.2" y="135" width="102.9" height="15.0" fill="rgb(113.935665392337,146.575913249865,146.575913249865)" rx="2" ry="2" />
<text  x="16.23" y="145.5" >pyop2.globa..</text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (901,906 us, 7.53%)</title><rect x="1101.2" y="119" width="88.8" height="15.0" fill="rgb(147.366710016767,159.731000694945,147.366710016767)" rx="2" ry="2" />
<text  x="1104.16" y="129.5" >firedrake..</text>
</g>
<g >
<title>firedrake.ufl_expr.action (4,307 us, 0.04%)</title><rect x="422.7" y="87" width="0.4" height="15.0" fill="rgb(154.767602511338,133.218285920259,133.218285920259)" rx="2" ry="2" />
<text  x="425.69" y="97.5" ></text>
</g>
<g >
<title>HybridBreak (1,019,428 us, 8.51%)</title><rect x="425.2" y="151" width="100.4" height="15.0" fill="rgb(106.749201252987,144.712755880404,144.712755880404)" rx="2" ry="2" />
<text  x="428.15" y="161.5" >HybridBreak</text>
</g>
<g >
<title>firedrake.extrusion_utils.make_extruded_coords (1,075,090 us, 8.97%)</title><rect x="10.3" y="87" width="105.8" height="15.0" fill="rgb(147.637762440736,159.686875881741,147.637762440736)" rx="2" ry="2" />
<text  x="13.25" y="97.5" >firedrake.e..</text>
</g>
<g >
<title>Parloop_Cells_wrap_form0_cell_integral_otherwise (2,576,536 us, 21.51%)</title><rect x="621.6" y="135" width="253.8" height="15.0" fill="rgb(154.540693381274,131.478649256434,131.478649256434)" rx="2" ry="2" />
<text  x="624.57" y="145.5" >Parloop_Cells_wrap_form0_cell_i..</text>
</g>
<g >
<title>firedrake.utility_meshes.RectangleMesh (7,796 us, 0.07%)</title><rect x="421.9" y="87" width="0.8" height="15.0" fill="rgb(109.099210991844,145.322017664552,145.322017664552)" rx="2" ry="2" />
<text  x="424.92" y="97.5" ></text>
</g>
<g >
<title>firedrake.mesh.MeshTopology._facets (15,923 us, 0.13%)</title><rect x="119.0" y="135" width="1.5" height="15.0" fill="rgb(115.143239379345,146.888987987237,146.888987987237)" rx="2" ry="2" />
<text  x="121.97" y="145.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (35,049 us, 0.29%)</title><rect x="117.1" y="103" width="3.4" height="15.0" fill="rgb(147.988251571462,147.988251571462,156.062242239638)" rx="2" ry="2" />
<text  x="120.09" y="113.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_pyop2_kernel_uniform_extrusion (1,044,870 us, 8.72%)</title><rect x="13.2" y="119" width="102.9" height="15.0" fill="rgb(153.326998164599,122.173652595257,122.173652595257)" rx="2" ry="2" />
<text  x="16.23" y="129.5" >Parloop_Cel..</text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (2,711 us, 0.02%)</title><rect x="540.3" y="199" width="0.3" height="15.0" fill="rgb(131.070930767258,162.383801968121,131.070930767258)" rx="2" ry="2" />
<text  x="543.34" y="209.5" ></text>
</g>
<g >
<title>DMPlexStratify (3,146 us, 0.03%)</title><rect x="124.0" y="87" width="0.3" height="15.0" fill="rgb(143.751704909207,143.751704909207,155.242265466298)" rx="2" ry="2" />
<text  x="126.95" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (8,080 us, 0.07%)</title><rect x="116.1" y="151" width="0.8" height="15.0" fill="rgb(140.431956629255,160.859914037098,140.431956629255)" rx="2" ry="2" />
<text  x="119.15" y="161.5" ></text>
</g>
<g >
<title>DMPlexInterp (3,258 us, 0.03%)</title><rect x="422.4" y="119" width="0.3" height="15.0" fill="rgb(155.753520330798,140.776989202781,140.776989202781)" rx="2" ry="2" />
<text  x="425.37" y="129.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (2,085 us, 0.02%)</title><rect x="620.8" y="135" width="0.2" height="15.0" fill="rgb(156.402663750049,145.75375541704,145.75375541704)" rx="2" ry="2" />
<text  x="623.80" y="145.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (35,049 us, 0.29%)</title><rect x="117.1" y="87" width="3.4" height="15.0" fill="rgb(147.772719906186,159.664906061784,147.772719906186)" rx="2" ry="2" />
<text  x="120.09" y="97.5" ></text>
</g>
<g >
<title>Log_Event_form1_cell_integral_otherwise (2,042 us, 0.02%)</title><rect x="875.6" y="151" width="0.2" height="15.0" fill="rgb(139.905643989275,111.633212722516,139.905643989275)" rx="2" ry="2" />
<text  x="878.57" y="161.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (2,364 us, 0.02%)</title><rect x="424.9" y="119" width="0.3" height="15.0" fill="rgb(129.862673589364,150.705137597243,150.705137597243)" rx="2" ry="2" />
<text  x="427.92" y="129.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (1,013,825 us, 8.46%)</title><rect x="425.7" y="215" width="99.9" height="15.0" fill="rgb(132.460689884144,132.460689884144,153.056907719512)" rx="2" ry="2" />
<text  x="428.70" y="225.5" >pyop2.globa..</text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (8,080 us, 0.07%)</title><rect x="116.1" y="135" width="0.8" height="15.0" fill="rgb(154.535736190818,131.440644129608,131.440644129608)" rx="2" ry="2" />
<text  x="119.15" y="145.5" ></text>
</g>
<g >
<title>firedrake.parloops.par_loop (781,129 us, 6.52%)</title><rect x="543.9" y="135" width="76.9" height="15.0" fill="rgb(149.351463506094,159.407901289706,149.351463506094)" rx="2" ry="2" />
<text  x="546.85" y="145.5" >firedrak..</text>
</g>
<g >
<title>PCSetUp (851,953 us, 7.11%)</title><rect x="537.1" y="103" width="83.9" height="15.0" fill="rgb(152.785115320724,118.019217458881,118.019217458881)" rx="2" ry="2" />
<text  x="540.08" y="113.5" >PCSetUp</text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (1,013,825 us, 8.46%)</title><rect x="425.7" y="199" width="99.9" height="15.0" fill="rgb(155.26461194512,137.028691579253,137.028691579253)" rx="2" ry="2" />
<text  x="428.70" y="209.5" >Parloop_Cel..</text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalProblem.__init__ (11,440 us, 0.10%)</title><rect x="423.1" y="87" width="1.1" height="15.0" fill="rgb(136.06284261961,161.571165154947,136.06284261961)" rx="2" ry="2" />
<text  x="426.11" y="97.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_form1_cell_integral_otherwise (2,292,361 us, 19.14%)</title><rect x="875.4" y="135" width="225.8" height="15.0" fill="rgb(114.677575823544,114.677575823544,149.615014675525)" rx="2" ry="2" />
<text  x="878.36" y="145.5" >Parloop_Cells_wrap_form1_ce..</text>
</g>
<g >
<title>firedrake.functionspace.MixedFunctionSpace (4,230 us, 0.04%)</title><rect x="540.2" y="151" width="0.4" height="15.0" fill="rgb(143.791889333062,160.312948248106,143.791889333062)" rx="2" ry="2" />
<text  x="543.19" y="161.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (1,785 us, 0.01%)</title><rect x="536.9" y="183" width="0.2" height="15.0" fill="rgb(136.49003561241,161.501622109608,136.49003561241)" rx="2" ry="2" />
<text  x="539.91" y="193.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (35,049 us, 0.29%)</title><rect x="117.1" y="119" width="3.4" height="15.0" fill="rgb(115.717853459733,115.717853459733,149.816358734142)" rx="2" ry="2" />
<text  x="120.09" y="129.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (8,080 us, 0.07%)</title><rect x="116.1" y="119" width="0.8" height="15.0" fill="rgb(149.752592368358,149.752592368358,118.031793785119)" rx="2" ry="2" />
<text  x="119.15" y="129.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (2,325 us, 0.02%)</title><rect x="542.5" y="199" width="0.2" height="15.0" fill="rgb(131.666363993703,131.666363993703,152.903167224588)" rx="2" ry="2" />
<text  x="545.51" y="209.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (2,711 us, 0.02%)</title><rect x="540.3" y="183" width="0.3" height="15.0" fill="rgb(150.531544961059,138.862083962713,150.531544961059)" rx="2" ry="2" />
<text  x="543.34" y="193.5" ></text>
</g>
<g >
<title>firedrake.interpolation.make_interpolator (11,353 us, 0.09%)</title><rect x="542.7" y="135" width="1.2" height="15.0" fill="rgb(142.698790712666,118.790651201207,142.698790712666)" rx="2" ry="2" />
<text  x="545.74" y="145.5" ></text>
</g>
<g >
<title>SNESFunctionEval (5,776,620 us, 48.22%)</title><rect x="621.0" y="103" width="569.0" height="15.0" fill="rgb(115.831252389342,147.06736173057,147.06736173057)" rx="2" ry="2" />
<text  x="624.00" y="113.5" >SNESFunctionEval</text>
</g>
<g >
<title>ParLoopExecute (1,044,870 us, 8.72%)</title><rect x="13.2" y="103" width="102.9" height="15.0" fill="rgb(154.839985657721,133.77322337586,133.77322337586)" rx="2" ry="2" />
<text  x="16.23" y="113.5" >ParLoopExec..</text>
</g>
<g >
<title>CreateMesh (1,355 us, 0.01%)</title><rect x="422.1" y="103" width="0.1" height="15.0" fill="rgb(142.643749065892,160.499854803227,142.643749065892)" rx="2" ry="2" />
<text  x="425.09" y="113.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (5,834 us, 0.05%)</title><rect x="1189.4" y="135" width="0.6" height="15.0" fill="rgb(123.172154634259,123.172154634259,151.259126703405)" rx="2" ry="2" />
<text  x="1192.43" y="145.5" ></text>
</g>
<g >
<title>ParLoopExecute (775,037 us, 6.47%)</title><rect x="544.5" y="151" width="76.3" height="15.0" fill="rgb(131.863312279635,131.863312279635,152.941286247671)" rx="2" ry="2" />
<text  x="547.45" y="161.5" >ParLoop..</text>
</g>
<g >
<title>PCApply (1,136,357 us, 9.49%)</title><rect x="425.2" y="119" width="111.9" height="15.0" fill="rgb(143.593907921881,143.593907921881,155.211724113912)" rx="2" ry="2" />
<text  x="428.15" y="129.5" >PCApply</text>
</g>
<g >
<title>firedrake.variational_solver.LinearVariationalProblem.__init__ (15,747 us, 0.13%)</title><rect x="422.7" y="71" width="1.5" height="15.0" fill="rgb(156.598619673739,147.256084165332,147.256084165332)" rx="2" ry="2" />
<text  x="425.69" y="81.5" ></text>
</g>
<g >
<title>KSPSolve (1,136,357 us, 9.49%)</title><rect x="425.2" y="103" width="111.9" height="15.0" fill="rgb(156.517102643321,146.631120265459,146.631120265459)" rx="2" ry="2" />
<text  x="428.15" y="113.5" >KSPSolve</text>
</g>
<g >
<title>firedrake.utility_meshes.SquareMesh (7,796 us, 0.07%)</title><rect x="421.9" y="71" width="0.8" height="15.0" fill="rgb(136.259185169855,102.289161997754,136.259185169855)" rx="2" ry="2" />
<text  x="424.92" y="81.5" ></text>
</g>
<g >
<title>FunctionSpaceData: CreateElement (7,589 us, 0.06%)</title><rect x="540.8" y="199" width="0.7" height="15.0" fill="rgb(127.012378202051,163.044496571759,127.012378202051)" rx="2" ry="2" />
<text  x="543.75" y="209.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (2,325 us, 0.02%)</title><rect x="542.5" y="215" width="0.2" height="15.0" fill="rgb(150.225439056165,150.225439056165,120.323281579878)" rx="2" ry="2" />
<text  x="545.51" y="225.5" ></text>
</g>
<g >
<title>HybridRHS (116,929 us, 0.98%)</title><rect x="525.6" y="151" width="11.5" height="15.0" fill="rgb(154.961323337562,134.703478921306,134.703478921306)" rx="2" ry="2" />
<text  x="528.57" y="161.5" ></text>
</g>
<g >
<title>ParLoopExecute (4,870,409 us, 40.66%)</title><rect x="621.4" y="119" width="479.8" height="15.0" fill="rgb(138.879215343117,109.002989316737,138.879215343117)" rx="2" ry="2" />
<text  x="624.43" y="129.5" >ParLoopExecute</text>
</g>
<g >
<title>Log_Event_form0_cell_integral_otherwise (4,079 us, 0.03%)</title><rect x="621.8" y="151" width="0.4" height="15.0" fill="rgb(155.797795199585,141.116429863488,141.116429863488)" rx="2" ry="2" />
<text  x="624.76" y="161.5" ></text>
</g>
<g >
<title>DMPlexSymmetrize (1,931 us, 0.02%)</title><rect x="124.3" y="87" width="0.2" height="15.0" fill="rgb(127.376910634937,150.060680534984,150.060680534984)" rx="2" ry="2" />
<text  x="127.26" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (9,081 us, 0.08%)</title><rect x="540.6" y="183" width="0.9" height="15.0" fill="rgb(111.918961061073,146.053063978797,146.053063978797)" rx="2" ry="2" />
<text  x="543.61" y="193.5" ></text>
</g>
<g >
<title>HybridInit (851,953 us, 7.11%)</title><rect x="537.1" y="119" width="83.9" height="15.0" fill="rgb(142.944000208781,160.450976710198,142.944000208781)" rx="2" ry="2" />
<text  x="540.08" y="129.5" >HybridInit</text>
</g>
<g >
<title>firedrake.matrix_free.operators.ImplicitMatrixContext.__init__ (6,142 us, 0.05%)</title><rect x="424.5" y="103" width="0.7" height="15.0" fill="rgb(142.053591670216,142.053591670216,154.913598387784)" rx="2" ry="2" />
<text  x="427.55" y="113.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (9,811 us, 0.08%)</title><rect x="423.3" y="103" width="0.9" height="15.0" fill="rgb(131.953222313535,151.247131710917,151.247131710917)" rx="2" ry="2" />
<text  x="426.27" y="113.5" ></text>
</g>
<g >
<title>Mesh: numbering (5,797 us, 0.05%)</title><rect x="121.3" y="87" width="0.5" height="15.0" fill="rgb(133.925925553864,133.925925553864,153.340501720103)" rx="2" ry="2" />
<text  x="124.25" y="97.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (14,770 us, 0.12%)</title><rect x="540.0" y="135" width="1.5" height="15.0" fill="rgb(152.703880071748,117.396413883404,117.396413883404)" rx="2" ry="2" />
<text  x="543.05" y="145.5" ></text>
</g>
<g >
<title>firedrake.functionspace.make_scalar_element (1,522 us, 0.01%)</title><rect x="542.4" y="199" width="0.1" height="15.0" fill="rgb(131.932965568531,151.241879962212,151.241879962212)" rx="2" ry="2" />
<text  x="545.36" y="209.5" ></text>
</g>
<g >
<title>firedrake (11,979,668 us, 100.00%)</title><rect x="10.0" y="55" width="1180.0" height="15.0" fill="rgb(154.781435266272,133.324337041421,133.324337041421)" rx="2" ry="2" />
<text  x="13.00" y="65.5" >firedrake</text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (1,702 us, 0.01%)</title><rect x="1189.8" y="167" width="0.2" height="15.0" fill="rgb(153.196083115463,121.169970551882,121.169970551882)" rx="2" ry="2" />
<text  x="1192.83" y="177.5" ></text>
</g>
<g >
<title>Mesh: reorder (3,362 us, 0.03%)</title><rect x="121.8" y="87" width="0.4" height="15.0" fill="rgb(150.463821636334,150.463821636334,121.47852023762)" rx="2" ry="2" />
<text  x="124.82" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspace.VectorFunctionSpace (8,080 us, 0.07%)</title><rect x="116.1" y="87" width="0.8" height="15.0" fill="rgb(150.092691597513,150.092691597513,119.679966972564)" rx="2" ry="2" />
<text  x="119.15" y="97.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (3,637 us, 0.03%)</title><rect x="1189.6" y="151" width="0.4" height="15.0" fill="rgb(137.942076879509,161.265243298685,137.942076879509)" rx="2" ry="2" />
<text  x="1192.64" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (2,711 us, 0.02%)</title><rect x="540.3" y="215" width="0.3" height="15.0" fill="rgb(115.454200778118,146.969607609142,146.969607609142)" rx="2" ry="2" />
<text  x="543.34" y="225.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (8,153 us, 0.07%)</title><rect x="541.9" y="167" width="0.8" height="15.0" fill="rgb(144.739206738647,154.562016561871,154.562016561871)" rx="2" ry="2" />
<text  x="544.93" y="177.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (36,545 us, 0.31%)</title><rect x="116.9" y="71" width="3.6" height="15.0" fill="rgb(131.240735550685,151.062412920548,151.062412920548)" rx="2" ry="2" />
<text  x="119.94" y="81.5" ></text>
</g>
<g >
<title>firedrake.slate.slac.optimise.optimise (15,667 us, 0.13%)</title><rect x="535.5" y="167" width="1.6" height="15.0" fill="rgb(145.773100644168,126.668570400681,145.773100644168)" rx="2" ry="2" />
<text  x="538.54" y="177.5" ></text>
</g>
</g>
</svg>
