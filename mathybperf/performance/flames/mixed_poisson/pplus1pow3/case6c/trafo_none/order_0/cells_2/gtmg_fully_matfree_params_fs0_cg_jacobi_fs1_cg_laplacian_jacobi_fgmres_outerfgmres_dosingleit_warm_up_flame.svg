<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="283" onload="init(evt)" viewBox="0 0 1200 283" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:13px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:18px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 13 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (1 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="283.0" fill="url(#background)"  />
<text id="title" x="600.00" y="26" >Firedrake example</text>
<text id="details" x="10.00" y="265" > </text>
<text id="unzoom" x="10.00" y="26" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="26" >Search</text>
<text id="ignorecase" x="1174.00" y="26" >ic</text>
<text id="matched" x="1090.00" y="265" > </text>
<g id="frames">
<g >
<title>Mesh: reorder (3,863 us, 0.02%)</title><rect x="182.7" y="87" width="0.2" height="15.0" fill="rgb(121.808759339018,121.808759339018,150.995243743036)" rx="2" ry="2" />
<text  x="185.65" y="97.5" ></text>
</g>
<g >
<title>SNESSolve (11,071,466 us, 67.06%)</title><rect x="398.6" y="87" width="791.4" height="15.0" fill="rgb(153.008523508091,153.008523508091,133.810537000747)" rx="2" ry="2" />
<text  x="401.63" y="97.5" >SNESSolve</text>
</g>
<g >
<title>CreateMesh (3,799 us, 0.02%)</title><rect x="181.9" y="87" width="0.3" height="15.0" fill="rgb(112.860536070969,112.860536070969,149.263329562123)" rx="2" ry="2" />
<text  x="184.92" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (10,430 us, 0.06%)</title><rect x="177.1" y="151" width="0.8" height="15.0" fill="rgb(153.064095825148,153.064095825148,134.079848998796)" rx="2" ry="2" />
<text  x="180.11" y="161.5" ></text>
</g>
<g >
<title>firedrake.interpolation.make_interpolator (15,047 us, 0.09%)</title><rect x="518.7" y="135" width="1.1" height="15.0" fill="rgb(136.394753416689,102.636555630266,136.394753416689)" rx="2" ry="2" />
<text  x="521.71" y="145.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (3,240 us, 0.02%)</title><rect x="516.6" y="215" width="0.3" height="15.0" fill="rgb(155.877196692101,155.877196692101,147.712568584795)" rx="2" ry="2" />
<text  x="519.63" y="225.5" ></text>
</g>
<g >
<title>ParLoopExecute (1,299,246 us, 7.87%)</title><rect x="399.4" y="183" width="92.9" height="15.0" fill="rgb(139.287586207432,139.287586207432,154.378242491761)" rx="2" ry="2" />
<text  x="402.39" y="193.5" >ParLoopExe..</text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (1,130,098 us, 6.85%)</title><rect x="1109.2" y="119" width="80.8" height="15.0" fill="rgb(139.773964394566,160.967029052047,139.773964394566)" rx="2" ry="2" />
<text  x="1112.22" y="129.5" >firedrak..</text>
</g>
<g >
<title>CreateExtMesh (2,348,345 us, 14.22%)</title><rect x="10.0" y="71" width="167.9" height="15.0" fill="rgb(126.451702430247,163.13576937182,126.451702430247)" rx="2" ry="2" />
<text  x="13.00" y="81.5" >CreateExtMesh</text>
</g>
<g >
<title>CreateFunctionSpace (8,929 us, 0.05%)</title><rect x="516.6" y="135" width="0.7" height="15.0" fill="rgb(132.07440913723,162.220445024172,132.07440913723)" rx="2" ry="2" />
<text  x="519.63" y="145.5" ></text>
</g>
<g >
<title>firedrake.parloops.par_loop (1,063,597 us, 6.44%)</title><rect x="519.8" y="135" width="76.0" height="15.0" fill="rgb(151.63808779117,151.63808779117,127.169194680287)" rx="2" ry="2" />
<text  x="522.79" y="145.5" >firedra..</text>
</g>
<g >
<title>Parloop_Cells_wrap_form1_cell_integral_otherwise (3,045,964 us, 18.45%)</title><rect x="891.5" y="135" width="217.7" height="15.0" fill="rgb(131.353195314657,162.337851925521,131.353195314657)" rx="2" ry="2" />
<text  x="894.50" y="145.5" >Parloop_Cells_wrap_form1_c..</text>
</g>
<g >
<title>firedrake.extrusion_utils.make_extruded_coords (2,333,975 us, 14.14%)</title><rect x="10.3" y="87" width="166.8" height="15.0" fill="rgb(152.245397236701,152.245397236701,130.11230968555)" rx="2" ry="2" />
<text  x="13.28" y="97.5" >firedrake.extrusion..</text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (17,150 us, 0.10%)</title><rect x="517.5" y="151" width="1.2" height="15.0" fill="rgb(155.929315143565,142.124749433996,142.124749433996)" rx="2" ry="2" />
<text  x="520.49" y="161.5" ></text>
</g>
<g >
<title>Mesh: numbering (6,505 us, 0.04%)</title><rect x="182.2" y="87" width="0.5" height="15.0" fill="rgb(114.071459454691,114.071459454691,149.49770182994)" rx="2" ry="2" />
<text  x="185.19" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (5,689 us, 0.03%)</title><rect x="516.9" y="167" width="0.4" height="15.0" fill="rgb(115.493260863312,115.493260863312,149.772889199351)" rx="2" ry="2" />
<text  x="519.86" y="177.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (2,287,374 us, 13.86%)</title><rect x="13.6" y="135" width="163.5" height="15.0" fill="rgb(153.347947886401,122.334267129072,122.334267129072)" rx="2" ry="2" />
<text  x="16.61" y="145.5" >pyop2.global_kernel..</text>
</g>
<g >
<title>PCApply (1,603,378 us, 9.71%)</title><rect x="398.6" y="119" width="114.6" height="15.0" fill="rgb(131.272234432756,151.070579297381,151.070579297381)" rx="2" ry="2" />
<text  x="401.63" y="129.5" >PCApply</text>
</g>
<g >
<title>firedrake.ufl_expr.derivative (1,998 us, 0.01%)</title><rect x="394.4" y="103" width="0.2" height="15.0" fill="rgb(123.954229779872,123.954229779872,151.410496086427)" rx="2" ry="2" />
<text  x="397.43" y="113.5" ></text>
</g>
<g >
<title>PetscBarrier (26,794 us, 0.16%)</title><rect x="182.9" y="71" width="1.9" height="15.0" fill="rgb(119.981384240834,119.981384240834,150.641558240161)" rx="2" ry="2" />
<text  x="185.93" y="81.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.action (10,062 us, 0.06%)</title><rect x="392.2" y="87" width="0.7" height="15.0" fill="rgb(142.458801292199,160.52996258034,142.458801292199)" rx="2" ry="2" />
<text  x="395.22" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (3,308 us, 0.02%)</title><rect x="518.5" y="199" width="0.2" height="15.0" fill="rgb(124.90161554791,149.418937364273,149.418937364273)" rx="2" ry="2" />
<text  x="521.48" y="209.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (1,056,537 us, 6.40%)</title><rect x="520.3" y="167" width="75.5" height="15.0" fill="rgb(110.135343120141,110.135343120141,148.735872861963)" rx="2" ry="2" />
<text  x="523.29" y="177.5" >Parloop..</text>
</g>
<g >
<title>all (16,508,582 us, 100%)</title><rect x="10.0" y="39" width="1180.0" height="15.0" fill="rgb(117.918620865052,147.608531335384,147.608531335384)" rx="2" ry="2" />
<text  x="13.00" y="49.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_form0_cell_integral_otherwise (4,128,421 us, 25.01%)</title><rect x="596.4" y="135" width="295.1" height="15.0" fill="rgb(150.332442803278,159.248206985513,150.332442803278)" rx="2" ry="2" />
<text  x="599.41" y="145.5" >Parloop_Cells_wrap_form0_cell_integr..</text>
</g>
<g >
<title>firedrake.functionspace.VectorFunctionSpace (10,430 us, 0.06%)</title><rect x="177.1" y="87" width="0.8" height="15.0" fill="rgb(152.229813838507,113.761906095224,113.761906095224)" rx="2" ry="2" />
<text  x="180.11" y="97.5" ></text>
</g>
<g >
<title>firedrake.function.Function.split (1,998 us, 0.01%)</title><rect x="394.4" y="119" width="0.2" height="15.0" fill="rgb(151.229049319363,151.229049319363,125.186931316913)" rx="2" ry="2" />
<text  x="397.43" y="129.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (5,689 us, 0.03%)</title><rect x="516.9" y="151" width="0.4" height="15.0" fill="rgb(149.606350491172,149.606350491172,117.323083149527)" rx="2" ry="2" />
<text  x="519.86" y="161.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (11,974 us, 0.07%)</title><rect x="517.9" y="167" width="0.8" height="15.0" fill="rgb(155.448207072366,155.448207072366,145.633618889159)" rx="2" ry="2" />
<text  x="520.86" y="177.5" ></text>
</g>
<g >
<title>ParLoopExecute (7,174,385 us, 43.46%)</title><rect x="596.4" y="119" width="512.8" height="15.0" fill="rgb(125.143522983332,149.48165410679,149.48165410679)" rx="2" ry="2" />
<text  x="599.41" y="129.5" >ParLoopExecute</text>
</g>
<g >
<title>firedrake.assemble.allocate_matrix (20,249 us, 0.12%)</title><rect x="397.2" y="87" width="1.4" height="15.0" fill="rgb(140.400479504176,140.400479504176,154.593641194357)" rx="2" ry="2" />
<text  x="400.19" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (3,308 us, 0.02%)</title><rect x="518.5" y="231" width="0.2" height="15.0" fill="rgb(151.47876813764,151.47876813764,126.397107128565)" rx="2" ry="2" />
<text  x="521.48" y="241.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (2,260 us, 0.01%)</title><rect x="1189.8" y="167" width="0.2" height="15.0" fill="rgb(141.748838535415,141.748838535415,154.85461391008)" rx="2" ry="2" />
<text  x="1192.84" y="177.5" ></text>
</g>
<g >
<title>firedrake.functionspace.MixedFunctionSpace (3,240 us, 0.02%)</title><rect x="516.6" y="151" width="0.3" height="15.0" fill="rgb(116.896332709082,116.896332709082,150.04445149208)" rx="2" ry="2" />
<text  x="519.63" y="161.5" ></text>
</g>
<g >
<title>KSPSolve (1,603,378 us, 9.71%)</title><rect x="398.6" y="103" width="114.6" height="15.0" fill="rgb(117.850511249021,147.590873286783,147.590873286783)" rx="2" ry="2" />
<text  x="401.63" y="113.5" >KSPSolve</text>
</g>
<g >
<title>Parloop_Cells_wrap_pyop2_kernel_uniform_extrusion (2,287,374 us, 13.86%)</title><rect x="13.6" y="119" width="163.5" height="15.0" fill="rgb(121.937582691429,148.650484401482,148.650484401482)" rx="2" ry="2" />
<text  x="16.61" y="129.5" >Parloop_Cells_wrap_..</text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (2,555 us, 0.02%)</title><rect x="595.8" y="135" width="0.2" height="15.0" fill="rgb(146.104061862508,154.91586789028,154.91586789028)" rx="2" ry="2" />
<text  x="598.81" y="145.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (49,602 us, 0.30%)</title><rect x="178.0" y="103" width="3.6" height="15.0" fill="rgb(132.125575360241,132.125575360241,152.992046843918)" rx="2" ry="2" />
<text  x="181.04" y="113.5" ></text>
</g>
<g >
<title>CreateMesh (18,851 us, 0.11%)</title><rect x="181.6" y="71" width="1.3" height="15.0" fill="rgb(129.611739917448,129.611739917448,152.505498048538)" rx="2" ry="2" />
<text  x="184.58" y="81.5" ></text>
</g>
<g >
<title>firedrake.matrix_free.operators.ImplicitMatrixContext.__init__ (13,927 us, 0.08%)</title><rect x="397.6" y="103" width="1.0" height="15.0" fill="rgb(142.13364566526,117.342467017229,142.13364566526)" rx="2" ry="2" />
<text  x="400.64" y="113.5" ></text>
</g>
<g >
<title>DMPlexInterp (4,936 us, 0.03%)</title><rect x="391.9" y="119" width="0.3" height="15.0" fill="rgb(139.015862501957,161.090440988053,139.015862501957)" rx="2" ry="2" />
<text  x="394.87" y="129.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (5,689 us, 0.03%)</title><rect x="516.9" y="183" width="0.4" height="15.0" fill="rgb(154.102847051441,154.102847051441,139.113797249289)" rx="2" ry="2" />
<text  x="519.86" y="193.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.action (9,298 us, 0.06%)</title><rect x="397.6" y="119" width="0.7" height="15.0" fill="rgb(111.435467436049,145.927713779716,145.927713779716)" rx="2" ry="2" />
<text  x="400.64" y="129.5" ></text>
</g>
<g >
<title>FunctionSpaceData: CreateElement (12,118 us, 0.07%)</title><rect x="179.4" y="135" width="0.9" height="15.0" fill="rgb(149.455678901053,149.455678901053,116.592905443566)" rx="2" ry="2" />
<text  x="182.40" y="145.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (1,299,246 us, 7.87%)</title><rect x="399.4" y="215" width="92.9" height="15.0" fill="rgb(128.382128727126,150.321292632959,150.321292632959)" rx="2" ry="2" />
<text  x="402.39" y="225.5" >pyop2.glob..</text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (5,762 us, 0.03%)</title><rect x="1189.6" y="151" width="0.4" height="15.0" fill="rgb(109.690770570711,145.475384962777,145.475384962777)" rx="2" ry="2" />
<text  x="1192.59" y="161.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (52,165 us, 0.32%)</title><rect x="177.9" y="71" width="3.7" height="15.0" fill="rgb(147.287769424635,147.287769424635,155.926665049929)" rx="2" ry="2" />
<text  x="180.85" y="81.5" ></text>
</g>
<g >
<title>FunctionSpaceData: CreateElement (5,689 us, 0.03%)</title><rect x="516.9" y="199" width="0.4" height="15.0" fill="rgb(151.720163194942,151.720163194942,127.566944713949)" rx="2" ry="2" />
<text  x="519.86" y="209.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.LinearVariationalProblem.__init__ (32,899 us, 0.20%)</title><rect x="392.2" y="71" width="2.4" height="15.0" fill="rgb(154.586922794108,131.833074754825,131.833074754825)" rx="2" ry="2" />
<text  x="395.22" y="81.5" ></text>
</g>
<g >
<title>SNESFunctionEval (8,310,327 us, 50.34%)</title><rect x="596.0" y="103" width="594.0" height="15.0" fill="rgb(123.606452743329,163.598949553412,123.606452743329)" rx="2" ry="2" />
<text  x="598.99" y="113.5" >SNESFunctionEval</text>
</g>
<g >
<title>firedrake.function.Function.__init__ (2,237 us, 0.01%)</title><rect x="513.1" y="183" width="0.1" height="15.0" fill="rgb(152.66112766943,152.66112766943,132.127003321084)" rx="2" ry="2" />
<text  x="516.08" y="193.5" ></text>
</g>
<g >
<title>firedrake.utility_meshes.SquareMesh (11,058 us, 0.07%)</title><rect x="391.4" y="71" width="0.8" height="15.0" fill="rgb(121.229161048737,121.229161048737,150.883063428788)" rx="2" ry="2" />
<text  x="394.43" y="81.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.__init__ (56,849 us, 0.34%)</title><rect x="394.6" y="71" width="4.0" height="15.0" fill="rgb(155.541306548772,139.150016873922,139.150016873922)" rx="2" ry="2" />
<text  x="397.57" y="81.5" ></text>
</g>
<g >
<title>DMPlexStratify (3,471 us, 0.02%)</title><rect x="184.4" y="87" width="0.3" height="15.0" fill="rgb(141.084512318439,160.753684041184,141.084512318439)" rx="2" ry="2" />
<text  x="187.44" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (3,240 us, 0.02%)</title><rect x="516.6" y="183" width="0.3" height="15.0" fill="rgb(151.909390004495,142.392811886519,151.909390004495)" rx="2" ry="2" />
<text  x="519.63" y="193.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (3,240 us, 0.02%)</title><rect x="516.6" y="199" width="0.3" height="15.0" fill="rgb(123.673733661535,149.100597615953,149.100597615953)" rx="2" ry="2" />
<text  x="519.63" y="209.5" ></text>
</g>
<g >
<title>firedrake.mesh._from_cell_list (7,005 us, 0.04%)</title><rect x="391.7" y="103" width="0.5" height="15.0" fill="rgb(136.545037383137,103.021658294289,136.545037383137)" rx="2" ry="2" />
<text  x="394.72" y="113.5" ></text>
</g>
<g >
<title>ParLoopExecute (2,287,374 us, 13.86%)</title><rect x="13.6" y="103" width="163.5" height="15.0" fill="rgb(156.354518900401,145.384644903074,145.384644903074)" rx="2" ry="2" />
<text  x="16.61" y="113.5" >ParLoopExecute</text>
</g>
<g >
<title>firedrake.__init__ (2,890,155 us, 17.51%)</title><rect x="184.8" y="71" width="206.6" height="15.0" fill="rgb(140.064638336795,140.064638336795,154.528639678089)" rx="2" ry="2" />
<text  x="187.85" y="81.5" >firedrake.__init__</text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (49,602 us, 0.30%)</title><rect x="178.0" y="119" width="3.6" height="15.0" fill="rgb(138.192053117442,107.242136113446,138.192053117442)" rx="2" ry="2" />
<text  x="181.04" y="129.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (10,430 us, 0.06%)</title><rect x="177.1" y="119" width="0.8" height="15.0" fill="rgb(137.919473320101,137.919473320101,154.113446449052)" rx="2" ry="2" />
<text  x="180.11" y="129.5" ></text>
</g>
<g >
<title>PCSetUp (1,157,761 us, 7.01%)</title><rect x="513.2" y="103" width="82.8" height="15.0" fill="rgb(139.891706486812,160.947861734705,139.891706486812)" rx="2" ry="2" />
<text  x="516.24" y="113.5" >PCSetUp</text>
</g>
<g >
<title>Log_Event_form1_cell_integral_otherwise (2,339 us, 0.01%)</title><rect x="891.7" y="151" width="0.1" height="15.0" fill="rgb(116.098025446898,116.098025446898,149.889940409077)" rx="2" ry="2" />
<text  x="894.68" y="161.5" ></text>
</g>
<g >
<title>firedrake.slate.slac.optimise.optimise (26,484 us, 0.16%)</title><rect x="511.3" y="167" width="1.9" height="15.0" fill="rgb(153.966236427635,127.074479278537,127.074479278537)" rx="2" ry="2" />
<text  x="514.35" y="177.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (1,056,537 us, 6.40%)</title><rect x="520.3" y="183" width="75.5" height="15.0" fill="rgb(147.448025386306,159.717763309206,147.448025386306)" rx="2" ry="2" />
<text  x="523.29" y="193.5" >pyop2.g..</text>
</g>
<g >
<title>HybridRHS (293,622 us, 1.78%)</title><rect x="492.3" y="151" width="20.9" height="15.0" fill="rgb(141.972652077049,141.972652077049,154.897932660074)" rx="2" ry="2" />
<text  x="495.25" y="161.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.solve (11,071,466 us, 67.06%)</title><rect x="398.6" y="71" width="791.4" height="15.0" fill="rgb(155.150762447308,136.155845429358,136.155845429358)" rx="2" ry="2" />
<text  x="401.63" y="81.5" >firedrake.variational_solver.NonlinearVariationalSolver.solve</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (3,041,224 us, 18.42%)</title><rect x="891.8" y="151" width="217.4" height="15.0" fill="rgb(155.688015561024,155.688015561024,146.795767718806)" rx="2" ry="2" />
<text  x="894.84" y="161.5" >pyop2.global_kernel.Global..</text>
</g>
<g >
<title>firedrake (16,508,582 us, 100.00%)</title><rect x="10.0" y="55" width="1180.0" height="15.0" fill="rgb(141.458972386937,160.692725425382,141.458972386937)" rx="2" ry="2" />
<text  x="13.00" y="65.5" >firedrake</text>
</g>
<g >
<title>CreateFunctionSpace (3,138 us, 0.02%)</title><rect x="512.9" y="183" width="0.2" height="15.0" fill="rgb(152.469785508578,115.601688899095,115.601688899095)" rx="2" ry="2" />
<text  x="515.86" y="193.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (10,430 us, 0.06%)</title><rect x="177.1" y="135" width="0.8" height="15.0" fill="rgb(140.301899770572,112.648618162091,140.301899770572)" rx="2" ry="2" />
<text  x="180.11" y="145.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (2,260 us, 0.01%)</title><rect x="1189.8" y="183" width="0.2" height="15.0" fill="rgb(153.865635523505,126.303205680204,126.303205680204)" rx="2" ry="2" />
<text  x="1192.84" y="193.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (3,308 us, 0.02%)</title><rect x="518.5" y="215" width="0.2" height="15.0" fill="rgb(106.011560105841,144.521515582996,144.521515582996)" rx="2" ry="2" />
<text  x="521.48" y="225.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (1,299,246 us, 7.87%)</title><rect x="399.4" y="199" width="92.9" height="15.0" fill="rgb(152.305024259555,114.338519323255,114.338519323255)" rx="2" ry="2" />
<text  x="402.39" y="209.5" >Parloop_Ce..</text>
</g>
<g >
<title>DMPlexSymmetrize (2,250 us, 0.01%)</title><rect x="184.7" y="87" width="0.1" height="15.0" fill="rgb(155.617811600632,139.736555604845,139.736555604845)" rx="2" ry="2" />
<text  x="187.69" y="97.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (10,430 us, 0.06%)</title><rect x="177.1" y="103" width="0.8" height="15.0" fill="rgb(136.380785208476,152.395018387383,152.395018387383)" rx="2" ry="2" />
<text  x="180.11" y="113.5" ></text>
</g>
<g >
<title>ParLoopExecute (1,056,537 us, 6.40%)</title><rect x="520.3" y="151" width="75.5" height="15.0" fill="rgb(143.26811225869,143.26811225869,155.148666888779)" rx="2" ry="2" />
<text  x="523.29" y="161.5" >ParLoop..</text>
</g>
<g >
<title>Log_Event_form0_cell_integral_otherwise (6,476 us, 0.04%)</title><rect x="596.6" y="151" width="0.5" height="15.0" fill="rgb(150.893560325512,150.893560325512,123.561100039019)" rx="2" ry="2" />
<text  x="599.62" y="161.5" ></text>
</g>
<g >
<title>HybridInit (1,157,761 us, 7.01%)</title><rect x="513.2" y="119" width="82.8" height="15.0" fill="rgb(122.302226291585,148.745021631152,148.745021631152)" rx="2" ry="2" />
<text  x="516.24" y="129.5" >HybridInit</text>
</g>
<g >
<title>CreateFunctionSpace (3,240 us, 0.02%)</title><rect x="516.6" y="167" width="0.3" height="15.0" fill="rgb(133.182350974386,162.040082399519,133.182350974386)" rx="2" ry="2" />
<text  x="519.63" y="177.5" ></text>
</g>
<g >
<title>firedrake.mesh.MeshTopology._facets (18,498 us, 0.11%)</title><rect x="180.3" y="135" width="1.3" height="15.0" fill="rgb(104.009864533463,144.002557471638,144.002557471638)" rx="2" ry="2" />
<text  x="183.26" y="145.5" ></text>
</g>
<g >
<title>SCForwardElim (1,603,378 us, 9.71%)</title><rect x="398.6" y="135" width="114.6" height="15.0" fill="rgb(136.3726110843,102.57981590352,136.3726110843)" rx="2" ry="2" />
<text  x="401.63" y="145.5" >SCForwardElim</text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalProblem.__init__ (22,837 us, 0.14%)</title><rect x="392.9" y="87" width="1.7" height="15.0" fill="rgb(130.555255947834,130.555255947834,152.688114054419)" rx="2" ry="2" />
<text  x="395.94" y="97.5" ></text>
</g>
<g >
<title>firedrake.utility_meshes.RectangleMesh (11,058 us, 0.07%)</title><rect x="391.4" y="87" width="0.8" height="15.0" fill="rgb(141.864189081623,160.626759916945,141.864189081623)" rx="2" ry="2" />
<text  x="394.43" y="97.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (4,119,013 us, 24.95%)</title><rect x="597.1" y="151" width="294.4" height="15.0" fill="rgb(133.582415818366,161.974955564452,133.582415818366)" rx="2" ry="2" />
<text  x="600.08" y="161.5" >pyop2.global_kernel.GlobalKernel.com..</text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (8,947 us, 0.05%)</title><rect x="1189.4" y="135" width="0.6" height="15.0" fill="rgb(155.124786436689,135.956696014612,135.956696014612)" rx="2" ry="2" />
<text  x="1192.36" y="145.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (20,183 us, 0.12%)</title><rect x="517.3" y="135" width="1.4" height="15.0" fill="rgb(112.409656794076,146.180281391057,146.180281391057)" rx="2" ry="2" />
<text  x="520.27" y="145.5" ></text>
</g>
<g >
<title>firedrake.functionspace.make_scalar_element (1,992 us, 0.01%)</title><rect x="518.3" y="199" width="0.2" height="15.0" fill="rgb(126.758668286392,149.900395481657,149.900395481657)" rx="2" ry="2" />
<text  x="521.33" y="209.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (49,602 us, 0.30%)</title><rect x="178.0" y="87" width="3.6" height="15.0" fill="rgb(131.446608027693,151.115787266439,151.115787266439)" rx="2" ry="2" />
<text  x="181.04" y="97.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (20,839 us, 0.13%)</title><rect x="392.9" y="103" width="1.5" height="15.0" fill="rgb(152.444470445366,115.407606747807,115.407606747807)" rx="2" ry="2" />
<text  x="395.94" y="113.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (4,629 us, 0.03%)</title><rect x="398.3" y="119" width="0.3" height="15.0" fill="rgb(152.811723994427,152.811723994427,132.856816280685)" rx="2" ry="2" />
<text  x="401.30" y="129.5" ></text>
</g>
<g >
<title>firedrake.parloops.par_loop (1,309,756 us, 7.93%)</title><rect x="398.6" y="167" width="93.7" height="15.0" fill="rgb(144.459682689787,144.459682689787,155.37929342383)" rx="2" ry="2" />
<text  x="401.63" y="177.5" >firedrake...</text>
</g>
<g >
<title>CreateFunctionSpace (8,050 us, 0.05%)</title><rect x="518.1" y="183" width="0.6" height="15.0" fill="rgb(126.667435996418,163.100649954071,126.667435996418)" rx="2" ry="2" />
<text  x="521.14" y="193.5" ></text>
</g>
<g >
<title>HybridBreak (1,309,756 us, 7.93%)</title><rect x="398.6" y="151" width="93.7" height="15.0" fill="rgb(150.733328027239,159.182946600217,150.733328027239)" rx="2" ry="2" />
<text  x="401.63" y="161.5" >HybridBreak</text>
</g>
</g>
</svg>
