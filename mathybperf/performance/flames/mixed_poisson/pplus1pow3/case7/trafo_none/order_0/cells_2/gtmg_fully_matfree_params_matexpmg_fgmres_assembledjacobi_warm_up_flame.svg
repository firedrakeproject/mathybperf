<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="283" onload="init(evt)" viewBox="0 0 1200 283" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:13px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:18px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 13 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (1 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="283.0" fill="url(#background)"  />
<text id="title" x="600.00" y="26" >Firedrake example</text>
<text id="details" x="10.00" y="265" > </text>
<text id="unzoom" x="10.00" y="26" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="26" >Search</text>
<text id="ignorecase" x="1174.00" y="26" >ic</text>
<text id="matched" x="1090.00" y="265" > </text>
<g id="frames">
<g >
<title>Parloop_Cells_wrap_slate_loopy_knl_48 (24,157,066 us, 15.28%)</title><rect x="174.0" y="199" width="180.3" height="15.0" fill="rgb(146.271999716813,159.909209348426,146.271999716813)" rx="2" ry="2" />
<text  x="177.03" y="209.5" >Parloop_Cells_wrap_sl..</text>
</g>
<g >
<title>firedrake.parloops.par_loop (1,053,464 us, 0.67%)</title><rect x="1096.6" y="151" width="7.9" height="15.0" fill="rgb(149.223061514716,149.223061514716,115.465605802087)" rx="2" ry="2" />
<text  x="1099.60" y="161.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.solve (153,703,628 us, 97.20%)</title><rect x="43.1" y="87" width="1146.9" height="15.0" fill="rgb(145.706194939707,145.706194939707,155.620553859298)" rx="2" ry="2" />
<text  x="46.05" y="97.5" >firedrake.variational_solver.NonlinearVariationalSolver.solve</text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (1,374,192 us, 0.87%)</title><rect x="51.9" y="215" width="10.3" height="15.0" fill="rgb(139.811805232033,139.811805232033,154.479704238458)" rx="2" ry="2" />
<text  x="54.92" y="225.5" ></text>
</g>
<g >
<title>SCBackSub (54,944,506 us, 34.75%)</title><rect x="43.1" y="151" width="410.0" height="15.0" fill="rgb(142.056665424013,142.056665424013,154.914193307874)" rx="2" ry="2" />
<text  x="46.05" y="161.5" >SCBackSub</text>
</g>
<g >
<title>PCApply (141,096,859 us, 89.23%)</title><rect x="43.1" y="135" width="1052.8" height="15.0" fill="rgb(144.130444556565,154.40418932948,154.40418932948)" rx="2" ry="2" />
<text  x="46.05" y="145.5" >PCApply</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (1,666,519 us, 1.05%)</title><rect x="453.1" y="231" width="12.4" height="15.0" fill="rgb(108.585606796224,145.188861021243,145.188861021243)" rx="2" ry="2" />
<text  x="456.05" y="241.5" ></text>
</g>
<g >
<title>ParLoopExecute (1,374,192 us, 0.87%)</title><rect x="51.9" y="199" width="10.3" height="15.0" fill="rgb(154.135357436522,154.135357436522,139.271347576993)" rx="2" ry="2" />
<text  x="54.92" y="209.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_form00_cell_integral_otherwise (7,891,118 us, 4.99%)</title><rect x="1033.7" y="199" width="58.9" height="15.0" fill="rgb(136.734655268787,161.461800305081,136.734655268787)" rx="2" ry="2" />
<text  x="1036.72" y="209.5" >Parlo..</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (24,157,066 us, 15.28%)</title><rect x="174.0" y="215" width="180.3" height="15.0" fill="rgb(154.773350078519,154.773350078519,142.363158072824)" rx="2" ry="2" />
<text  x="177.03" y="225.5" >pyop2.global_kernel.G..</text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.__init__ (16,294 us, 0.01%)</title><rect x="42.9" y="71" width="0.2" height="15.0" fill="rgb(120.944388116719,148.392989511742,148.392989511742)" rx="2" ry="2" />
<text  x="45.93" y="81.5" ></text>
</g>
<g >
<title>firedrake.slate.slac.optimise.optimise (22,263 us, 0.01%)</title><rect x="883.2" y="183" width="0.2" height="15.0" fill="rgb(116.522349953503,147.24653517313,147.24653517313)" rx="2" ry="2" />
<text  x="886.25" y="193.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (5,479,258 us, 3.46%)</title><rect x="1104.5" y="167" width="40.8" height="15.0" fill="rgb(153.295523466832,121.932346579048,121.932346579048)" rx="2" ry="2" />
<text  x="1107.46" y="177.5" >pyo..</text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (1,976,617 us, 1.25%)</title><rect x="1175.3" y="135" width="14.7" height="15.0" fill="rgb(152.952227689585,119.300412286817,119.300412286817)" rx="2" ry="2" />
<text  x="1178.25" y="145.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (2,110,184 us, 1.33%)</title><rect x="1018.0" y="215" width="15.7" height="15.0" fill="rgb(119.071808259953,147.907505845173,147.907505845173)" rx="2" ry="2" />
<text  x="1020.97" y="225.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (1,053,464 us, 0.67%)</title><rect x="1096.6" y="199" width="7.9" height="15.0" fill="rgb(110.369241856567,145.651284925777,145.651284925777)" rx="2" ry="2" />
<text  x="1099.60" y="209.5" ></text>
</g>
<g >
<title>HybridProject (1,374,192 us, 0.87%)</title><rect x="51.9" y="167" width="10.3" height="15.0" fill="rgb(148.797187890089,148.797187890089,113.401756698123)" rx="2" ry="2" />
<text  x="54.92" y="177.5" ></text>
</g>
<g >
<title>CreateExtMesh (1,520,625 us, 0.96%)</title><rect x="14.9" y="71" width="11.3" height="15.0" fill="rgb(127.086583785595,127.086583785595,152.016758152051)" rx="2" ry="2" />
<text  x="17.89" y="81.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (7,891,118 us, 4.99%)</title><rect x="1033.7" y="215" width="58.9" height="15.0" fill="rgb(128.448278291488,162.810745394409,128.448278291488)" rx="2" ry="2" />
<text  x="1036.72" y="225.5" >pyop2..</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (45,439,360 us, 28.73%)</title><rect x="544.2" y="215" width="339.0" height="15.0" fill="rgb(153.62791477398,124.480679933843,124.480679933843)" rx="2" ry="2" />
<text  x="547.18" y="225.5" >pyop2.global_kernel.GlobalKernel.compile</text>
</g>
<g >
<title>SNESSolve (153,703,628 us, 97.20%)</title><rect x="43.1" y="103" width="1146.9" height="15.0" fill="rgb(151.314068426578,151.314068426578,125.598946990341)" rx="2" ry="2" />
<text  x="46.05" y="113.5" >SNESSolve</text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (1,053,464 us, 0.67%)</title><rect x="1096.6" y="183" width="7.9" height="15.0" fill="rgb(146.381208653972,154.987720762141,154.987720762141)" rx="2" ry="2" />
<text  x="1099.60" y="193.5" ></text>
</g>
<g >
<title>firedrake.interpolation.make_interpolator (29,334 us, 0.02%)</title><rect x="1092.6" y="183" width="0.2" height="15.0" fill="rgb(153.290778374437,121.895967537349,121.895967537349)" rx="2" ry="2" />
<text  x="1095.61" y="193.5" ></text>
</g>
<g >
<title>ParLoopExecute (9,486,834 us, 6.00%)</title><rect x="1104.5" y="135" width="70.8" height="15.0" fill="rgb(143.7943459419,160.31254833504,143.7943459419)" rx="2" ry="2" />
<text  x="1107.46" y="145.5" >ParLoop..</text>
</g>
<g >
<title>Parloop_Cells_wrap_form0_cell_integral_otherwise (5,479,258 us, 3.46%)</title><rect x="1104.5" y="151" width="40.8" height="15.0" fill="rgb(154.592270412593,154.592270412593,141.485618153338)" rx="2" ry="2" />
<text  x="1107.46" y="161.5" >Par..</text>
</g>
<g >
<title>firedrake.parloops.par_loop (1,374,192 us, 0.87%)</title><rect x="51.9" y="183" width="10.3" height="15.0" fill="rgb(136.494103010395,161.500959975052,136.494103010395)" rx="2" ry="2" />
<text  x="54.92" y="193.5" ></text>
</g>
<g >
<title>firedrake.__init__ (2,180,035 us, 1.38%)</title><rect x="26.4" y="71" width="16.2" height="15.0" fill="rgb(134.229476008267,134.229476008267,153.399253420955)" rx="2" ry="2" />
<text  x="29.36" y="81.5" ></text>
</g>
<g >
<title>firedrake.extrusion_utils.make_extruded_coords (1,520,625 us, 0.96%)</title><rect x="14.9" y="87" width="11.3" height="15.0" fill="rgb(148.544514421946,148.544514421946,112.177262198661)" rx="2" ry="2" />
<text  x="17.89" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (16,396 us, 0.01%)</title><rect x="26.2" y="87" width="0.2" height="15.0" fill="rgb(148.05652677561,148.05652677561,109.812398989493)" rx="2" ry="2" />
<text  x="29.24" y="97.5" ></text>
</g>
<g >
<title>firedrake.interpolation.make_interpolator (36,378 us, 0.02%)</title><rect x="1096.3" y="151" width="0.3" height="15.0" fill="rgb(128.498434979876,162.802580352113,128.498434979876)" rx="2" ry="2" />
<text  x="1099.33" y="161.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_slate_loopy_knl_74 (10,325,503 us, 6.53%)</title><rect x="62.2" y="183" width="77.0" height="15.0" fill="rgb(137.087243957214,137.087243957214,153.95236979817)" rx="2" ry="2" />
<text  x="65.17" y="193.5" >Parloop_..</text>
</g>
<g >
<title>ParLoopExecute (10,325,503 us, 6.53%)</title><rect x="62.2" y="167" width="77.0" height="15.0" fill="rgb(154.862007390452,133.94205666013,133.94205666013)" rx="2" ry="2" />
<text  x="65.17" y="177.5" >ParLoopE..</text>
</g>
<g >
<title>ParLoopExecute (1,053,464 us, 0.67%)</title><rect x="1096.6" y="167" width="7.9" height="15.0" fill="rgb(133.092393999999,162.05472655814,133.092393999999)" rx="2" ry="2" />
<text  x="1099.60" y="177.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_pyop2_kernel_uniform_extrusion (1,473,331 us, 0.93%)</title><rect x="15.2" y="119" width="11.0" height="15.0" fill="rgb(141.166244032873,160.74037887837,141.166244032873)" rx="2" ry="2" />
<text  x="18.24" y="129.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (1,666,519 us, 1.05%)</title><rect x="453.1" y="215" width="12.4" height="15.0" fill="rgb(152.080582389303,112.617798317993,112.617798317993)" rx="2" ry="2" />
<text  x="456.05" y="225.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_form1_cell_integral_otherwise (4,007,576 us, 2.53%)</title><rect x="1145.3" y="151" width="30.0" height="15.0" fill="rgb(153.917310462961,153.917310462961,138.214658397427)" rx="2" ry="2" />
<text  x="1148.35" y="161.5" >P..</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (1,473,331 us, 0.93%)</title><rect x="15.2" y="135" width="11.0" height="15.0" fill="rgb(155.409509294612,155.409509294612,145.446083504658)" rx="2" ry="2" />
<text  x="18.24" y="145.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_slate_loopy_knl_0 (45,439,360 us, 28.73%)</title><rect x="544.2" y="199" width="339.0" height="15.0" fill="rgb(149.607918515937,149.607918515937,117.330682038769)" rx="2" ry="2" />
<text  x="547.18" y="209.5" >Parloop_Cells_wrap_slate_loopy_knl_0</text>
</g>
<g >
<title>Parloop_Cells_wrap_expression_kernel (2,110,184 us, 1.33%)</title><rect x="1018.0" y="199" width="15.7" height="15.0" fill="rgb(147.141016395638,147.141016395638,155.898261237865)" rx="2" ry="2" />
<text  x="1020.97" y="209.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (1,374,192 us, 0.87%)</title><rect x="51.9" y="231" width="10.3" height="15.0" fill="rgb(111.525092350065,145.950949868535,145.950949868535)" rx="2" ry="2" />
<text  x="54.92" y="241.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (10,325,503 us, 6.53%)</title><rect x="62.2" y="199" width="77.0" height="15.0" fill="rgb(145.308970075152,160.065981615673,145.308970075152)" rx="2" ry="2" />
<text  x="65.17" y="209.5" >pyop2.gl..</text>
</g>
<g >
<title>PCSetUp (1,143,318 us, 0.72%)</title><rect x="1095.9" y="119" width="8.6" height="15.0" fill="rgb(144.105616274378,154.397752367431,154.397752367431)" rx="2" ry="2" />
<text  x="1098.93" y="129.5" ></text>
</g>
<g >
<title>SNESFunctionEval (11,463,451 us, 7.25%)</title><rect x="1104.5" y="119" width="85.5" height="15.0" fill="rgb(148.295281527605,148.295281527605,110.969441249163)" rx="2" ry="2" />
<text  x="1107.46" y="129.5" >SNESFunct..</text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (16,872 us, 0.01%)</title><rect x="1096.2" y="167" width="0.1" height="15.0" fill="rgb(123.794669047976,163.568309689864,123.794669047976)" rx="2" ry="2" />
<text  x="1099.20" y="177.5" ></text>
</g>
<g >
<title>perfsolve (153,703,628 us, 97.20%)</title><rect x="43.1" y="71" width="1146.9" height="15.0" fill="rgb(155.597358544536,139.579748841446,139.579748841446)" rx="2" ry="2" />
<text  x="46.05" y="81.5" >perfsolve</text>
</g>
<g >
<title>ParLoopExecute (24,157,066 us, 15.28%)</title><rect x="174.0" y="183" width="180.3" height="15.0" fill="rgb(144.510398899086,160.195981574567,144.510398899086)" rx="2" ry="2" />
<text  x="177.03" y="193.5" >ParLoopExecute</text>
</g>
<g >
<title>CreateFunctionSpace (16,396 us, 0.01%)</title><rect x="26.2" y="71" width="0.2" height="15.0" fill="rgb(120.51847324757,120.51847324757,150.745510951143)" rx="2" ry="2" />
<text  x="29.24" y="81.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.action (17,745 us, 0.01%)</title><rect x="42.6" y="87" width="0.2" height="15.0" fill="rgb(154.778639972664,133.302906457092,133.302906457092)" rx="2" ry="2" />
<text  x="45.63" y="97.5" ></text>
</g>
<g >
<title>HybridRHS (74,018,620 us, 46.81%)</title><rect x="465.5" y="167" width="552.3" height="15.0" fill="rgb(144.781793286672,160.151801092867,144.781793286672)" rx="2" ry="2" />
<text  x="468.49" y="177.5" >HybridRHS</text>
</g>
<g >
<title>KSPSolve (141,096,859 us, 89.23%)</title><rect x="43.1" y="119" width="1052.8" height="15.0" fill="rgb(139.00513462342,153.075405272739,153.075405272739)" rx="2" ry="2" />
<text  x="46.05" y="129.5" >KSPSolve</text>
</g>
<g >
<title>RecoverFirstElim (39,213,882 us, 24.80%)</title><rect x="139.2" y="167" width="292.6" height="15.0" fill="rgb(111.235110299695,111.235110299695,148.948731025747)" rx="2" ry="2" />
<text  x="142.22" y="177.5" >RecoverFirstElim</text>
</g>
<g >
<title>ParLoopExecute (10,001,302 us, 6.32%)</title><rect x="1018.0" y="183" width="74.6" height="15.0" fill="rgb(104.27123079815,144.070319095817,144.070319095817)" rx="2" ry="2" />
<text  x="1020.97" y="193.5" >ParLoop..</text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (10,392,276 us, 6.57%)</title><rect x="354.3" y="183" width="77.5" height="15.0" fill="rgb(127.345876248599,127.345876248599,152.066943790051)" rx="2" ry="2" />
<text  x="357.29" y="193.5" >firedrak..</text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (22,659 us, 0.01%)</title><rect x="42.8" y="103" width="0.1" height="15.0" fill="rgb(105.785357448181,144.462870449528,144.462870449528)" rx="2" ry="2" />
<text  x="45.76" y="113.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (16,872 us, 0.01%)</title><rect x="1096.2" y="151" width="0.1" height="15.0" fill="rgb(141.384790975875,160.704801469044,141.384790975875)" rx="2" ry="2" />
<text  x="1099.20" y="161.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalProblem.__init__ (22,659 us, 0.01%)</title><rect x="42.8" y="87" width="0.1" height="15.0" fill="rgb(147.71555251054,159.674212382005,147.71555251054)" rx="2" ry="2" />
<text  x="45.76" y="97.5" ></text>
</g>
<g >
<title>HybridInit (1,143,318 us, 0.72%)</title><rect x="1095.9" y="135" width="8.6" height="15.0" fill="rgb(122.41887927825,122.41887927825,151.11333147321)" rx="2" ry="2" />
<text  x="1098.93" y="145.5" ></text>
</g>
<g >
<title>all (158,132,803 us, 100%)</title><rect x="10.0" y="39" width="1180.0" height="15.0" fill="rgb(148.737592774601,159.507833734367,148.737592774601)" rx="2" ry="2" />
<text  x="13.00" y="49.5" ></text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (2,842,514 us, 1.80%)</title><rect x="431.8" y="167" width="21.3" height="15.0" fill="rgb(148.833225318249,148.833225318249,113.576399619207)" rx="2" ry="2" />
<text  x="434.84" y="177.5" ></text>
</g>
<g >
<title>firedrake.parloops.par_loop (1,666,519 us, 1.05%)</title><rect x="453.1" y="183" width="12.4" height="15.0" fill="rgb(149.206113564544,149.206113564544,115.383473428176)" rx="2" ry="2" />
<text  x="456.05" y="193.5" ></text>
</g>
<g >
<title>ParLoopExecute (1,473,331 us, 0.93%)</title><rect x="15.2" y="103" width="11.0" height="15.0" fill="rgb(147.006727213471,155.14989224053,155.14989224053)" rx="2" ry="2" />
<text  x="18.24" y="113.5" ></text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (18,011,686 us, 11.39%)</title><rect x="883.4" y="183" width="134.4" height="15.0" fill="rgb(152.345390225439,114.647991728368,114.647991728368)" rx="2" ry="2" />
<text  x="886.42" y="193.5" >firedrake.tsfc_..</text>
</g>
<g >
<title>ParLoopExecute (45,439,360 us, 28.73%)</title><rect x="544.2" y="183" width="339.0" height="15.0" fill="rgb(131.747893338206,151.193898272868,151.193898272868)" rx="2" ry="2" />
<text  x="547.18" y="193.5" >ParLoopExecute</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (4,007,576 us, 2.53%)</title><rect x="1145.3" y="167" width="30.0" height="15.0" fill="rgb(148.04826127466,148.04826127466,109.772343100276)" rx="2" ry="2" />
<text  x="1148.35" y="177.5" >p..</text>
</g>
<g >
<title>SCSolve (10,467,214 us, 6.62%)</title><rect x="1017.8" y="151" width="78.1" height="15.0" fill="rgb(154.589597077108,131.853577591165,131.853577591165)" rx="2" ry="2" />
<text  x="1020.82" y="161.5" >SCSolve</text>
</g>
<g >
<title>ParLoopExecute (1,666,519 us, 1.05%)</title><rect x="453.1" y="199" width="12.4" height="15.0" fill="rgb(113.856676858038,113.856676858038,149.456131004782)" rx="2" ry="2" />
<text  x="456.05" y="209.5" ></text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (415,835 us, 0.26%)</title><rect x="1092.8" y="183" width="3.1" height="15.0" fill="rgb(136.737432391257,152.487482471807,152.487482471807)" rx="2" ry="2" />
<text  x="1095.82" y="193.5" ></text>
</g>
<g >
<title>HybridBreak (1,666,519 us, 1.05%)</title><rect x="453.1" y="167" width="12.4" height="15.0" fill="rgb(154.39970412918,154.39970412918,140.552412318335)" rx="2" ry="2" />
<text  x="456.05" y="177.5" ></text>
</g>
<g >
<title>PCSetUp (10,467,214 us, 6.62%)</title><rect x="1017.8" y="167" width="78.1" height="15.0" fill="rgb(154.615864035934,132.054957608828,132.054957608828)" rx="2" ry="2" />
<text  x="1020.82" y="177.5" >PCSetUp</text>
</g>
<g >
<title>firedrake (158,132,803 us, 100.00%)</title><rect x="10.0" y="55" width="1180.0" height="15.0" fill="rgb(150.804748016906,150.804748016906,123.130701928082)" rx="2" ry="2" />
<text  x="13.00" y="65.5" >firedrake</text>
</g>
<g >
<title>firedrake.variational_solver.LinearVariationalProblem.__init__ (40,404 us, 0.03%)</title><rect x="42.6" y="71" width="0.3" height="15.0" fill="rgb(137.661527367153,137.661527367153,154.063521425901)" rx="2" ry="2" />
<text  x="45.63" y="81.5" ></text>
</g>
<g >
<title>SCForwardElim (75,685,139 us, 47.86%)</title><rect x="453.1" y="151" width="564.7" height="15.0" fill="rgb(119.353299275772,119.353299275772,150.519993408214)" rx="2" ry="2" />
<text  x="456.05" y="161.5" >SCForwardElim</text>
</g>
</g>
</svg>
