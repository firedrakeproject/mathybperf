<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="299" onload="init(evt)" viewBox="0 0 1200 299" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:13px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:18px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 13 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (1 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="299.0" fill="url(#background)"  />
<text id="title" x="600.00" y="26" >Firedrake example</text>
<text id="details" x="10.00" y="281" > </text>
<text id="unzoom" x="10.00" y="26" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="26" >Search</text>
<text id="ignorecase" x="1174.00" y="26" >ic</text>
<text id="matched" x="1090.00" y="281" > </text>
<g id="frames">
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (2,087,146 us, 12.00%)</title><rect x="412.0" y="183" width="141.7" height="15.0" fill="rgb(125.853310101194,125.853310101194,151.778060019586)" rx="2" ry="2" />
<text  x="415.04" y="193.5" >pyop2.global_ker..</text>
</g>
<g >
<title>CreateMesh (3,472 us, 0.02%)</title><rect x="107.8" y="87" width="0.3" height="15.0" fill="rgb(129.900377899232,162.574357086172,129.900377899232)" rx="2" ry="2" />
<text  x="110.84" y="97.5" ></text>
</g>
<g >
<title>firedrake.utility_meshes.RectangleMesh (6,858 us, 0.04%)</title><rect x="217.0" y="87" width="0.4" height="15.0" fill="rgb(149.805352482327,159.334012386598,149.805352482327)" rx="2" ry="2" />
<text  x="219.98" y="97.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.solve (14,294,944 us, 82.22%)</title><rect x="219.8" y="71" width="970.2" height="15.0" fill="rgb(147.97680908607,147.97680908607,156.060027565046)" rx="2" ry="2" />
<text  x="222.79" y="81.5" >firedrake.variational_solver.NonlinearVariationalSolver.solve</text>
</g>
<g >
<title>SNESFunctionEval (6,221,774 us, 35.79%)</title><rect x="767.7" y="103" width="422.3" height="15.0" fill="rgb(151.930217484908,151.930217484908,128.584900119169)" rx="2" ry="2" />
<text  x="770.72" y="113.5" >SNESFunctionEval</text>
</g>
<g >
<title>Parloop_Cells_wrap_pyop2_kernel_uniform_extrusion (938,891 us, 5.40%)</title><rect x="42.3" y="119" width="63.7" height="15.0" fill="rgb(139.373742420804,110.270214953311,139.373742420804)" rx="2" ry="2" />
<text  x="45.26" y="129.5" >Parloo..</text>
</g>
<g >
<title>CreateExtMesh (983,779 us, 5.66%)</title><rect x="39.8" y="71" width="66.8" height="15.0" fill="rgb(147.80287349075,159.659997338715,147.80287349075)" rx="2" ry="2" />
<text  x="42.83" y="81.5" >Create..</text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (2,042 us, 0.01%)</title><rect x="767.6" y="215" width="0.1" height="15.0" fill="rgb(144.020430451397,160.275743880005,144.020430451397)" rx="2" ry="2" />
<text  x="770.59" y="225.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (2,275,834 us, 13.09%)</title><rect x="963.1" y="151" width="154.4" height="15.0" fill="rgb(127.801394271741,127.801394271741,152.155108568724)" rx="2" ry="2" />
<text  x="966.06" y="161.5" >pyop2.global_kerne..</text>
</g>
<g >
<title>Log_Event_form0_cell_integral_otherwise (3,941 us, 0.02%)</title><rect x="768.1" y="151" width="0.3" height="15.0" fill="rgb(136.03179534957,136.03179534957,153.748089422497)" rx="2" ry="2" />
<text  x="771.10" y="161.5" ></text>
</g>
<g >
<title>firedrake.utility_meshes.SquareMesh (6,858 us, 0.04%)</title><rect x="217.0" y="71" width="0.4" height="15.0" fill="rgb(152.899107385908,152.899107385908,133.2802896394)" rx="2" ry="2" />
<text  x="219.98" y="81.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (2,686 us, 0.02%)</title><rect x="219.6" y="119" width="0.2" height="15.0" fill="rgb(118.247473583306,118.247473583306,150.305962629027)" rx="2" ry="2" />
<text  x="222.61" y="129.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (9,113 us, 0.05%)</title><rect x="106.0" y="103" width="0.6" height="15.0" fill="rgb(154.663462435537,132.419878672448,132.419878672448)" rx="2" ry="2" />
<text  x="108.98" y="113.5" ></text>
</g>
<g >
<title>ParLoopExecute (5,150,291 us, 29.62%)</title><rect x="768.0" y="119" width="349.5" height="15.0" fill="rgb(153.026834469775,119.872397601606,119.872397601606)" rx="2" ry="2" />
<text  x="770.97" y="129.5" >ParLoopExecute</text>
</g>
<g >
<title>Parloop_Cells_wrap_form0_cell_integral_otherwise (2,717,451 us, 15.63%)</title><rect x="221.7" y="167" width="184.4" height="15.0" fill="rgb(149.264470278231,149.264470278231,115.666279040657)" rx="2" ry="2" />
<text  x="224.69" y="177.5" >Parloop_Cells_wrap_for..</text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.__init__ (11,200 us, 0.06%)</title><rect x="219.0" y="71" width="0.8" height="15.0" fill="rgb(152.290446892439,114.226759508702,114.226759508702)" rx="2" ry="2" />
<text  x="222.03" y="81.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (23,308 us, 0.13%)</title><rect x="215.4" y="103" width="1.6" height="15.0" fill="rgb(123.01375243272,123.01375243272,151.228468212785)" rx="2" ry="2" />
<text  x="218.40" y="113.5" ></text>
</g>
<g >
<title>firedrake.__init__ (1,546,955 us, 8.90%)</title><rect x="110.4" y="71" width="105.0" height="15.0" fill="rgb(155.805277285847,141.173792524829,141.173792524829)" rx="2" ry="2" />
<text  x="113.40" y="81.5" >firedrake._..</text>
</g>
<g >
<title>firedrake.matrix_free.operators.ImplicitMatrixContext.__init__ (7,642 us, 0.04%)</title><rect x="219.3" y="103" width="0.5" height="15.0" fill="rgb(136.957516858245,161.425520511449,136.957516858245)" rx="2" ry="2" />
<text  x="222.28" y="113.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalProblem.__init__ (11,898 us, 0.07%)</title><rect x="218.2" y="87" width="0.8" height="15.0" fill="rgb(156.437733681938,146.022624894861,146.022624894861)" rx="2" ry="2" />
<text  x="221.23" y="97.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (3,995 us, 0.02%)</title><rect x="1189.7" y="151" width="0.3" height="15.0" fill="rgb(137.422698641281,152.665144092184,152.665144092184)" rx="2" ry="2" />
<text  x="1192.73" y="161.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (6,747 us, 0.04%)</title><rect x="767.3" y="151" width="0.4" height="15.0" fill="rgb(148.433033316435,159.557413181046,148.433033316435)" rx="2" ry="2" />
<text  x="770.27" y="161.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.LinearVariationalProblem.__init__ (23,431 us, 0.13%)</title><rect x="217.4" y="71" width="1.6" height="15.0" fill="rgb(156.167774807152,143.952940188164,143.952940188164)" rx="2" ry="2" />
<text  x="220.44" y="81.5" ></text>
</g>
<g >
<title>DMPlexStratify (3,318 us, 0.02%)</title><rect x="110.0" y="87" width="0.3" height="15.0" fill="rgb(142.755537757165,118.936065502734,142.755537757165)" rx="2" ry="2" />
<text  x="113.04" y="97.5" ></text>
</g>
<g >
<title>CreateMesh (17,179 us, 0.10%)</title><rect x="107.6" y="71" width="1.1" height="15.0" fill="rgb(149.714477730542,149.714477730542,117.847084386472)" rx="2" ry="2" />
<text  x="110.56" y="81.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (2,099 us, 0.01%)</title><rect x="614.4" y="183" width="0.2" height="15.0" fill="rgb(109.952547936192,145.543253168642,145.543253168642)" rx="2" ry="2" />
<text  x="617.41" y="193.5" ></text>
</g>
<g >
<title>firedrake.functionspace.VectorFunctionSpace (9,113 us, 0.05%)</title><rect x="106.0" y="87" width="0.6" height="15.0" fill="rgb(147.234047135263,147.234047135263,155.91626718747)" rx="2" ry="2" />
<text  x="108.98" y="97.5" ></text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (1,067,858 us, 6.14%)</title><rect x="1117.5" y="119" width="72.5" height="15.0" fill="rgb(130.948950699467,150.986764996158,150.986764996158)" rx="2" ry="2" />
<text  x="1120.52" y="129.5" >firedra..</text>
</g>
<g >
<title>SNESSolve (14,294,944 us, 82.22%)</title><rect x="219.8" y="87" width="970.2" height="15.0" fill="rgb(152.212227518254,113.627077639948,113.627077639948)" rx="2" ry="2" />
<text  x="222.79" y="97.5" >SNESSolve</text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (2,099 us, 0.01%)</title><rect x="614.4" y="199" width="0.2" height="15.0" fill="rgb(152.877552654397,118.727903683708,118.727903683708)" rx="2" ry="2" />
<text  x="617.41" y="209.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (14,105 us, 0.08%)</title><rect x="106.6" y="87" width="1.0" height="15.0" fill="rgb(118.712114559935,147.814251922946,147.814251922946)" rx="2" ry="2" />
<text  x="109.60" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (23,308 us, 0.13%)</title><rect x="215.4" y="119" width="1.6" height="15.0" fill="rgb(119.49835179306,148.018091205608,148.018091205608)" rx="2" ry="2" />
<text  x="218.40" y="129.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_form0_cell_integral_otherwise (1,938,678 us, 11.15%)</title><rect x="614.8" y="151" width="131.6" height="15.0" fill="rgb(155.409366753473,138.138478443293,138.138478443293)" rx="2" ry="2" />
<text  x="617.80" y="161.5" >Parloop_Cells_w..</text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (314,469 us, 1.81%)</title><rect x="746.4" y="135" width="21.3" height="15.0" fill="rgb(145.696374696396,154.810171217584,154.810171217584)" rx="2" ry="2" />
<text  x="749.38" y="145.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (2,864,505 us, 16.48%)</title><rect x="768.4" y="151" width="194.4" height="15.0" fill="rgb(152.531600002877,116.075600022054,116.075600022054)" rx="2" ry="2" />
<text  x="771.37" y="161.5" >pyop2.global_kernel.Glo..</text>
</g>
<g >
<title>firedrake (17,386,047 us, 100.00%)</title><rect x="10.0" y="55" width="1180.0" height="15.0" fill="rgb(148.829168617358,148.829168617358,113.556740222583)" rx="2" ry="2" />
<text  x="13.00" y="65.5" >firedrake</text>
</g>
<g >
<title>firedrake.mesh._from_cell_list (3,501 us, 0.02%)</title><rect x="217.2" y="103" width="0.2" height="15.0" fill="rgb(132.711709340617,132.711709340617,153.105492130442)" rx="2" ry="2" />
<text  x="220.21" y="113.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_form0_cell_integral_otherwise (2,870,380 us, 16.51%)</title><rect x="768.0" y="135" width="194.8" height="15.0" fill="rgb(121.556326607647,121.556326607647,150.946385795028)" rx="2" ry="2" />
<text  x="770.97" y="145.5" >Parloop_Cells_wrap_form..</text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (9,113 us, 0.05%)</title><rect x="106.0" y="135" width="0.6" height="15.0" fill="rgb(154.454411960688,130.817158365272,130.817158365272)" rx="2" ry="2" />
<text  x="108.98" y="145.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (4,710 us, 0.03%)</title><rect x="767.4" y="183" width="0.3" height="15.0" fill="rgb(145.3770781821,145.3770781821,155.556853841697)" rx="2" ry="2" />
<text  x="770.41" y="193.5" ></text>
</g>
<g >
<title>firedrake.assemble.allocate_matrix (7,642 us, 0.04%)</title><rect x="219.3" y="87" width="0.5" height="15.0" fill="rgb(153.588768488498,124.18055841182,124.18055841182)" rx="2" ry="2" />
<text  x="222.28" y="97.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (1,934,914 us, 11.13%)</title><rect x="615.1" y="167" width="131.3" height="15.0" fill="rgb(120.694345247438,120.694345247438,150.779550693053)" rx="2" ry="2" />
<text  x="618.06" y="177.5" >pyop2.global_ke..</text>
</g>
<g >
<title>CreateFunctionSpace (14,105 us, 0.08%)</title><rect x="106.6" y="71" width="1.0" height="15.0" fill="rgb(128.036039571237,128.036039571237,152.200523787981)" rx="2" ry="2" />
<text  x="109.60" y="81.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (6,747 us, 0.04%)</title><rect x="767.3" y="167" width="0.4" height="15.0" fill="rgb(112.811731539525,112.811731539525,149.253883523779)" rx="2" ry="2" />
<text  x="770.27" y="177.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (9,113 us, 0.05%)</title><rect x="106.0" y="151" width="0.6" height="15.0" fill="rgb(153.498929944269,123.491796239394,123.491796239394)" rx="2" ry="2" />
<text  x="108.98" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (9,113 us, 0.05%)</title><rect x="106.0" y="119" width="0.6" height="15.0" fill="rgb(150.538844189926,138.880788236686,150.538844189926)" rx="2" ry="2" />
<text  x="108.98" y="129.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (2,099 us, 0.01%)</title><rect x="614.4" y="167" width="0.2" height="15.0" fill="rgb(139.380297353265,161.031114384352,139.380297353265)" rx="2" ry="2" />
<text  x="617.41" y="177.5" ></text>
</g>
<g >
<title>KSPSolve (8,071,387 us, 46.42%)</title><rect x="219.9" y="103" width="547.8" height="15.0" fill="rgb(152.897826949798,118.88333994845,118.88333994845)" rx="2" ry="2" />
<text  x="222.92" y="113.5" >KSPSolve</text>
</g>
<g >
<title>firedrake.mesh.MeshTopology._facets (17,012 us, 0.10%)</title><rect x="215.8" y="151" width="1.2" height="15.0" fill="rgb(133.58858249017,151.671113978933,151.671113978933)" rx="2" ry="2" />
<text  x="218.82" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspace.VectorFunctionSpace (23,308 us, 0.13%)</title><rect x="215.4" y="71" width="1.6" height="15.0" fill="rgb(153.313416409236,122.069525804139,122.069525804139)" rx="2" ry="2" />
<text  x="218.40" y="81.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (2,622,859 us, 15.09%)</title><rect x="228.1" y="183" width="178.0" height="15.0" fill="rgb(121.090039957173,148.430751100008,148.430751100008)" rx="2" ry="2" />
<text  x="231.11" y="193.5" >pyop2.global_kernel.G..</text>
</g>
<g >
<title>ParLoopExecute (938,891 us, 5.40%)</title><rect x="42.3" y="103" width="63.7" height="15.0" fill="rgb(153.256335951147,121.631908958791,121.631908958791)" rx="2" ry="2" />
<text  x="45.26" y="113.5" >ParLoo..</text>
</g>
<g >
<title>MatMult (5,805,993 us, 33.39%)</title><rect x="220.5" y="119" width="394.1" height="15.0" fill="rgb(149.898141059737,149.898141059737,118.73714513565)" rx="2" ry="2" />
<text  x="223.50" y="129.5" >MatMult</text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (2,042 us, 0.01%)</title><rect x="767.6" y="231" width="0.1" height="15.0" fill="rgb(129.493506504318,150.60942761223,150.60942761223)" rx="2" ry="2" />
<text  x="770.59" y="241.5" ></text>
</g>
<g >
<title>ParLoopExecute (1,938,678 us, 11.15%)</title><rect x="614.8" y="135" width="131.6" height="15.0" fill="rgb(143.271426342302,160.397674781486,143.271426342302)" rx="2" ry="2" />
<text  x="617.80" y="145.5" >ParLoopExecute</text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (7,186 us, 0.04%)</title><rect x="1189.5" y="135" width="0.5" height="15.0" fill="rgb(105.426008822558,144.369705991034,144.369705991034)" rx="2" ry="2" />
<text  x="1192.51" y="145.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (2,099 us, 0.01%)</title><rect x="614.4" y="215" width="0.2" height="15.0" fill="rgb(138.953224640789,109.192638142021,138.953224640789)" rx="2" ry="2" />
<text  x="617.41" y="225.5" ></text>
</g>
<g >
<title>Mesh: reorder (3,556 us, 0.02%)</title><rect x="108.5" y="87" width="0.2" height="15.0" fill="rgb(124.139459441275,163.512181021188,124.139459441275)" rx="2" ry="2" />
<text  x="111.48" y="97.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_form1_cell_integral_otherwise (2,279,911 us, 13.11%)</title><rect x="962.8" y="135" width="154.7" height="15.0" fill="rgb(122.113137348789,122.113137348789,151.054155615895)" rx="2" ry="2" />
<text  x="965.79" y="145.5" >Parloop_Cells_wrap..</text>
</g>
<g >
<title>all (17,386,047 us, 100%)</title><rect x="10.0" y="39" width="1180.0" height="15.0" fill="rgb(153.321018185788,153.321018185788,135.324934284971)" rx="2" ry="2" />
<text  x="13.00" y="49.5" ></text>
</g>
<g >
<title>DMPlexInterp (3,501 us, 0.02%)</title><rect x="217.2" y="119" width="0.2" height="15.0" fill="rgb(148.049842966261,159.619793005492,148.049842966261)" rx="2" ry="2" />
<text  x="220.21" y="129.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.action (11,533 us, 0.07%)</title><rect x="217.4" y="87" width="0.8" height="15.0" fill="rgb(118.009442199669,147.632077607322,147.632077607322)" rx="2" ry="2" />
<text  x="220.44" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (14,105 us, 0.08%)</title><rect x="106.6" y="103" width="1.0" height="15.0" fill="rgb(149.557586807175,149.557586807175,117.086766834773)" rx="2" ry="2" />
<text  x="109.60" y="113.5" ></text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (896,770 us, 5.16%)</title><rect x="553.7" y="151" width="60.9" height="15.0" fill="rgb(133.573417359331,133.573417359331,153.272274327612)" rx="2" ry="2" />
<text  x="556.69" y="161.5" >fired..</text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (23,308 us, 0.13%)</title><rect x="215.4" y="135" width="1.6" height="15.0" fill="rgb(142.707287651843,142.707287651843,155.040120190679)" rx="2" ry="2" />
<text  x="218.40" y="145.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (1,864 us, 0.01%)</title><rect x="1189.9" y="167" width="0.1" height="15.0" fill="rgb(156.497330881971,146.479536761779,146.479536761779)" rx="2" ry="2" />
<text  x="1192.87" y="177.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (938,891 us, 5.40%)</title><rect x="42.3" y="135" width="63.7" height="15.0" fill="rgb(143.51308767125,160.358334565145,143.51308767125)" rx="2" ry="2" />
<text  x="45.26" y="145.5" >pyop2...</text>
</g>
<g >
<title>Log_Event_form1_cell_integral_otherwise (45,149 us, 0.26%)</title><rect x="409.0" y="183" width="3.0" height="15.0" fill="rgb(153.746477724085,125.389662551318,125.389662551318)" rx="2" ry="2" />
<text  x="411.97" y="193.5" ></text>
</g>
<g >
<title>PCApply (2,256,774 us, 12.98%)</title><rect x="614.6" y="119" width="153.1" height="15.0" fill="rgb(155.035624789148,135.273123383471,135.273123383471)" rx="2" ry="2" />
<text  x="617.56" y="129.5" >PCApply</text>
</g>
<g >
<title>DMPlexSymmetrize (2,051 us, 0.01%)</title><rect x="110.3" y="87" width="0.1" height="15.0" fill="rgb(156.024416908686,142.853862966592,142.853862966592)" rx="2" ry="2" />
<text  x="113.27" y="97.5" ></text>
</g>
<g >
<title>Log_Event_form0_cell_integral_otherwise (52,516 us, 0.30%)</title><rect x="224.5" y="183" width="3.6" height="15.0" fill="rgb(126.23617528184,163.170855186677,126.23617528184)" rx="2" ry="2" />
<text  x="227.55" y="193.5" ></text>
</g>
<g >
<title>firedrake.extrusion_utils.make_extruded_coords (971,904 us, 5.59%)</title><rect x="40.0" y="87" width="66.0" height="15.0" fill="rgb(142.966315078871,142.966315078871,155.090254531394)" rx="2" ry="2" />
<text  x="43.02" y="97.5" >firedr..</text>
</g>
<g >
<title>Parloop_Cells_wrap_form1_cell_integral_otherwise (2,174,214 us, 12.51%)</title><rect x="406.1" y="167" width="147.6" height="15.0" fill="rgb(133.655000808457,133.655000808457,153.288064672604)" rx="2" ry="2" />
<text  x="409.13" y="177.5" >Parloop_Cells_wra..</text>
</g>
<g >
<title>PetscBarrier (24,802 us, 0.14%)</title><rect x="108.7" y="71" width="1.7" height="15.0" fill="rgb(156.007255833613,142.72229472437,142.72229472437)" rx="2" ry="2" />
<text  x="111.72" y="81.5" ></text>
</g>
<g >
<title>Log_Event_form1_cell_integral_otherwise (1,933 us, 0.01%)</title><rect x="962.9" y="151" width="0.2" height="15.0" fill="rgb(136.692158546379,136.692158546379,153.875901654138)" rx="2" ry="2" />
<text  x="965.93" y="161.5" ></text>
</g>
<g >
<title>firedrake.matrix_free.operators.ImplicitMatrixContext.mult (5,805,993 us, 33.39%)</title><rect x="220.5" y="135" width="394.1" height="15.0" fill="rgb(120.256532472836,148.214656567032,148.214656567032)" rx="2" ry="2" />
<text  x="223.50" y="145.5" >firedrake.matrix_free.operators.ImplicitMatrixCon..</text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (14,105 us, 0.08%)</title><rect x="106.6" y="119" width="1.0" height="15.0" fill="rgb(109.160851607256,145.337998564844,145.337998564844)" rx="2" ry="2" />
<text  x="109.60" y="129.5" ></text>
</g>
<g >
<title>KSPGMRESOrthog (3,292 us, 0.02%)</title><rect x="220.3" y="119" width="0.2" height="15.0" fill="rgb(123.681525562228,123.681525562228,151.357714624947)" rx="2" ry="2" />
<text  x="223.28" y="129.5" ></text>
</g>
<g >
<title>ParLoopExecute (4,899,974 us, 28.18%)</title><rect x="221.1" y="151" width="332.6" height="15.0" fill="rgb(151.617004429965,151.617004429965,127.067021468293)" rx="2" ry="2" />
<text  x="224.13" y="161.5" >ParLoopExecute</text>
</g>
<g >
<title>Mesh: numbering (5,899 us, 0.03%)</title><rect x="108.1" y="87" width="0.4" height="15.0" fill="rgb(142.634101660506,154.01624857865,154.01624857865)" rx="2" ry="2" />
<text  x="111.08" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (2,042 us, 0.01%)</title><rect x="767.6" y="247" width="0.1" height="15.0" fill="rgb(139.479622085593,139.479622085593,154.415410726244)" rx="2" ry="2" />
<text  x="770.59" y="257.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (9,997 us, 0.06%)</title><rect x="218.4" y="103" width="0.6" height="15.0" fill="rgb(134.302617492992,97.2754573257916,134.302617492992)" rx="2" ry="2" />
<text  x="221.36" y="113.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (23,308 us, 0.13%)</title><rect x="215.4" y="87" width="1.6" height="15.0" fill="rgb(148.07230671507,132.560285957368,148.07230671507)" rx="2" ry="2" />
<text  x="218.40" y="97.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.action (4,956 us, 0.03%)</title><rect x="219.3" y="119" width="0.3" height="15.0" fill="rgb(131.290112478356,151.07521434624,151.07521434624)" rx="2" ry="2" />
<text  x="222.28" y="129.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (4,710 us, 0.03%)</title><rect x="767.4" y="199" width="0.3" height="15.0" fill="rgb(141.780543612632,160.640376621199,141.780543612632)" rx="2" ry="2" />
<text  x="770.41" y="209.5" ></text>
</g>
</g>
</svg>
