<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="267" onload="init(evt)" viewBox="0 0 1200 267" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:13px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:18px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 13 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (1 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="267.0" fill="url(#background)"  />
<text id="title" x="600.00" y="26" >Firedrake example</text>
<text id="details" x="10.00" y="249" > </text>
<text id="unzoom" x="10.00" y="26" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="26" >Search</text>
<text id="ignorecase" x="1174.00" y="26" >ic</text>
<text id="matched" x="1090.00" y="249" > </text>
<g id="frames">
<g >
<title>Parloop_Cells_wrap_form0_cell_integral_otherwise (2,869,390 us, 14.82%)</title><rect x="818.1" y="135" width="174.8" height="15.0" fill="rgb(126.877649447097,149.931242449247,149.931242449247)" rx="2" ry="2" />
<text  x="821.07" y="145.5" >Parloop_Cells_wrap_f..</text>
</g>
<g >
<title>ParLoopExecute (1,722,055 us, 8.89%)</title><rect x="35.2" y="103" width="105.0" height="15.0" fill="rgb(130.218004403442,130.218004403442,152.622839561957)" rx="2" ry="2" />
<text  x="38.23" y="113.5" >ParLoopExec..</text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (1,010,009 us, 5.22%)</title><rect x="1128.5" y="119" width="61.5" height="15.0" fill="rgb(139.791674856607,153.279323110972,153.279323110972)" rx="2" ry="2" />
<text  x="1131.45" y="129.5" >firedr..</text>
</g>
<g >
<title>CreateFunctionSpace (15,407 us, 0.08%)</title><rect x="140.2" y="103" width="0.9" height="15.0" fill="rgb(155.504235456315,138.865805165081,138.865805165081)" rx="2" ry="2" />
<text  x="143.17" y="113.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (4,939 us, 0.03%)</title><rect x="817.3" y="151" width="0.3" height="15.0" fill="rgb(138.709506623814,161.140312875193,138.709506623814)" rx="2" ry="2" />
<text  x="820.34" y="161.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (7,105 us, 0.04%)</title><rect x="1189.6" y="135" width="0.4" height="15.0" fill="rgb(147.973506783971,147.973506783971,109.410071337704)" rx="2" ry="2" />
<text  x="1192.57" y="145.5" ></text>
</g>
<g >
<title>firedrake.matrix_free.operators.ImplicitMatrixContext.__init__ (6,485 us, 0.03%)</title><rect x="324.1" y="103" width="0.4" height="15.0" fill="rgb(150.463114521206,159.226934845385,150.463114521206)" rx="2" ry="2" />
<text  x="327.12" y="113.5" ></text>
</g>
<g >
<title>firedrake.mesh._from_cell_list (8,615 us, 0.04%)</title><rect x="321.7" y="103" width="0.6" height="15.0" fill="rgb(114.278422546582,146.66477621578,146.66477621578)" rx="2" ry="2" />
<text  x="324.73" y="113.5" ></text>
</g>
<g >
<title>SNESFunctionEval (6,110,328 us, 31.56%)</title><rect x="817.6" y="103" width="372.4" height="15.0" fill="rgb(137.811971896292,161.286423179673,137.811971896292)" rx="2" ry="2" />
<text  x="820.64" y="113.5" >SNESFunctionEval</text>
</g>
<g >
<title>firedrake (19,363,696 us, 100.00%)</title><rect x="10.0" y="55" width="1180.0" height="15.0" fill="rgb(136.809706985812,161.449582583705,136.809706985812)" rx="2" ry="2" />
<text  x="13.00" y="65.5" >firedrake</text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (15,407 us, 0.08%)</title><rect x="140.2" y="119" width="0.9" height="15.0" fill="rgb(152.883440001329,118.773040010186,118.773040010186)" rx="2" ry="2" />
<text  x="143.17" y="129.5" ></text>
</g>
<g >
<title>ParLoopExecute (2,013,644 us, 10.40%)</title><rect x="676.1" y="135" width="122.7" height="15.0" fill="rgb(155.008589275958,155.008589275958,143.50316341426)" rx="2" ry="2" />
<text  x="679.07" y="145.5" >ParLoopExecute</text>
</g>
<g >
<title>all (19,363,696 us, 100%)</title><rect x="10.0" y="39" width="1180.0" height="15.0" fill="rgb(138.362224345184,161.196847199621,138.362224345184)" rx="2" ry="2" />
<text  x="13.00" y="49.5" ></text>
</g>
<g >
<title>SNESSolve (14,202,609 us, 73.35%)</title><rect x="324.5" y="87" width="865.5" height="15.0" fill="rgb(136.415030681246,152.403896843286,152.403896843286)" rx="2" ry="2" />
<text  x="327.51" y="97.5" >SNESSolve</text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (4,939 us, 0.03%)</title><rect x="817.3" y="183" width="0.3" height="15.0" fill="rgb(152.530594774095,152.530594774095,131.494420828305)" rx="2" ry="2" />
<text  x="820.34" y="193.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_form0_cell_integral_otherwise (2,640,927 us, 13.64%)</title><rect x="325.2" y="167" width="161.0" height="15.0" fill="rgb(131.613783958665,131.613783958665,152.892990443613)" rx="2" ry="2" />
<text  x="328.22" y="177.5" >Parloop_Cells_wrap..</text>
</g>
<g >
<title>CreateMesh (4,591 us, 0.02%)</title><rect x="33.8" y="87" width="0.3" height="15.0" fill="rgb(151.69423102113,151.69423102113,127.44127341009)" rx="2" ry="2" />
<text  x="36.80" y="97.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_form0_cell_integral_otherwise (2,013,644 us, 10.40%)</title><rect x="676.1" y="151" width="122.7" height="15.0" fill="rgb(133.606937480329,151.675872680085,151.675872680085)" rx="2" ry="2" />
<text  x="679.07" y="161.5" >Parloop_Cells..</text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (309,554 us, 1.60%)</title><rect x="798.8" y="135" width="18.8" height="15.0" fill="rgb(149.356749508884,149.356749508884,116.113478389205)" rx="2" ry="2" />
<text  x="801.78" y="145.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (2,637,891 us, 13.62%)</title><rect x="325.4" y="183" width="160.8" height="15.0" fill="rgb(138.407038029316,107.793034950122,138.407038029316)" rx="2" ry="2" />
<text  x="328.40" y="193.5" >pyop2.global_kerne..</text>
</g>
<g >
<title>firedrake.matrix_free.operators.ImplicitMatrixContext.mult (5,763,625 us, 29.77%)</title><rect x="324.6" y="135" width="351.3" height="15.0" fill="rgb(109.423737545344,109.423737545344,148.598142750712)" rx="2" ry="2" />
<text  x="327.64" y="145.5" >firedrake.matrix_free.operators.ImplicitMat..</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (2,223,896 us, 11.48%)</title><rect x="992.9" y="151" width="135.6" height="15.0" fill="rgb(129.443062536732,129.443062536732,152.472850813561)" rx="2" ry="2" />
<text  x="995.93" y="161.5" >pyop2.global_ke..</text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (19,250 us, 0.10%)</title><rect x="141.1" y="87" width="1.2" height="15.0" fill="rgb(133.951922735019,133.951922735019,153.345533432584)" rx="2" ry="2" />
<text  x="144.11" y="97.5" ></text>
</g>
<g >
<title>ParLoopExecute (5,093,286 us, 26.30%)</title><rect x="818.1" y="119" width="310.4" height="15.0" fill="rgb(152.228440125453,113.751374295138,113.751374295138)" rx="2" ry="2" />
<text  x="821.07" y="129.5" >ParLoopExecute</text>
</g>
<g >
<title>ParLoopExecute (4,862,555 us, 25.11%)</title><rect x="325.0" y="151" width="296.3" height="15.0" fill="rgb(140.228053231941,160.893107613405,140.228053231941)" rx="2" ry="2" />
<text  x="328.00" y="161.5" >ParLoopExecute</text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (19,250 us, 0.10%)</title><rect x="141.1" y="103" width="1.2" height="15.0" fill="rgb(149.828085450629,159.330311670828,149.828085450629)" rx="2" ry="2" />
<text  x="144.11" y="113.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (4,688 us, 0.02%)</title><rect x="1189.7" y="151" width="0.3" height="15.0" fill="rgb(144.763382813782,144.763382813782,155.43807409299)" rx="2" ry="2" />
<text  x="1192.71" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (19,250 us, 0.10%)</title><rect x="141.1" y="119" width="1.2" height="15.0" fill="rgb(141.403592562734,115.471705942005,141.403592562734)" rx="2" ry="2" />
<text  x="144.11" y="129.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (4,649 us, 0.02%)</title><rect x="675.6" y="183" width="0.3" height="15.0" fill="rgb(133.35308133226,133.35308133226,153.229628644954)" rx="2" ry="2" />
<text  x="678.58" y="193.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (1,722,055 us, 8.89%)</title><rect x="35.2" y="135" width="105.0" height="15.0" fill="rgb(124.540072909633,163.446964875176,124.540072909633)" rx="2" ry="2" />
<text  x="38.23" y="145.5" >pyop2.globa..</text>
</g>
<g >
<title>Parloop_Cells_wrap_form1_cell_integral_otherwise (2,218,127 us, 11.46%)</title><rect x="486.2" y="167" width="135.1" height="15.0" fill="rgb(155.825304789253,141.327336717609,141.327336717609)" rx="2" ry="2" />
<text  x="489.15" y="177.5" >Parloop_Cells_w..</text>
</g>
<g >
<title>Parloop_Cells_wrap_form1_cell_integral_otherwise (2,223,896 us, 11.48%)</title><rect x="992.9" y="135" width="135.6" height="15.0" fill="rgb(122.502806883981,122.502806883981,151.129575525932)" rx="2" ry="2" />
<text  x="995.93" y="145.5" >Parloop_Cells_w..</text>
</g>
<g >
<title>firedrake.ufl_expr.action (13,522 us, 0.07%)</title><rect x="322.3" y="87" width="0.8" height="15.0" fill="rgb(130.581114142234,162.463539558241,130.581114142234)" rx="2" ry="2" />
<text  x="325.25" y="97.5" ></text>
</g>
<g >
<title>firedrake.extrusion_utils.make_extruded_coords (1,740,929 us, 8.99%)</title><rect x="34.1" y="87" width="106.1" height="15.0" fill="rgb(112.726492450722,112.726492450722,149.237385635624)" rx="2" ry="2" />
<text  x="37.08" y="97.5" >firedrake.e..</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (2,013,644 us, 10.40%)</title><rect x="676.1" y="167" width="122.7" height="15.0" fill="rgb(108.620439946885,108.620439946885,148.442665796171)" rx="2" ry="2" />
<text  x="679.07" y="177.5" >pyop2.global_..</text>
</g>
<g >
<title>firedrake.variational_solver.LinearVariationalProblem.__init__ (27,722 us, 0.14%)</title><rect x="322.3" y="71" width="1.6" height="15.0" fill="rgb(144.19804397764,160.246830050152,144.19804397764)" rx="2" ry="2" />
<text  x="325.25" y="81.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalProblem.__init__ (14,200 us, 0.07%)</title><rect x="323.1" y="87" width="0.8" height="15.0" fill="rgb(154.780271185058,154.780271185058,142.396698819894)" rx="2" ry="2" />
<text  x="326.08" y="97.5" ></text>
</g>
<g >
<title>Mesh: numbering (2,267 us, 0.01%)</title><rect x="33.9" y="103" width="0.2" height="15.0" fill="rgb(114.327450168314,114.327450168314,149.547248419674)" rx="2" ry="2" />
<text  x="36.95" y="113.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (4,939 us, 0.03%)</title><rect x="817.3" y="199" width="0.3" height="15.0" fill="rgb(149.74417094105,136.844438036441,149.74417094105)" rx="2" ry="2" />
<text  x="820.34" y="209.5" ></text>
</g>
<g >
<title>DMPlexInterp (6,428 us, 0.03%)</title><rect x="321.9" y="119" width="0.4" height="15.0" fill="rgb(140.209784157693,153.387721818661,153.387721818661)" rx="2" ry="2" />
<text  x="324.86" y="129.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (2,869,390 us, 14.82%)</title><rect x="818.1" y="151" width="174.8" height="15.0" fill="rgb(153.316077050343,153.316077050343,135.300988782432)" rx="2" ry="2" />
<text  x="821.07" y="161.5" >pyop2.global_kernel...</text>
</g>
<g >
<title>CreateExtMesh (1,764,168 us, 9.11%)</title><rect x="33.6" y="71" width="107.5" height="15.0" fill="rgb(114.796307376316,114.796307376316,149.637994976061)" rx="2" ry="2" />
<text  x="36.61" y="81.5" >CreateExtMesh</text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (4,939 us, 0.03%)</title><rect x="817.3" y="167" width="0.3" height="15.0" fill="rgb(145.083531892914,160.102680854642,145.083531892914)" rx="2" ry="2" />
<text  x="820.34" y="177.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (19,250 us, 0.10%)</title><rect x="141.1" y="71" width="1.2" height="15.0" fill="rgb(136.397251501101,152.399287426211,152.399287426211)" rx="2" ry="2" />
<text  x="144.11" y="81.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (2,677 us, 0.01%)</title><rect x="675.7" y="215" width="0.2" height="15.0" fill="rgb(149.822558149932,149.822558149932,118.370858726592)" rx="2" ry="2" />
<text  x="678.71" y="225.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (15,407 us, 0.08%)</title><rect x="140.2" y="135" width="0.9" height="15.0" fill="rgb(136.156071519629,152.336759282867,152.336759282867)" rx="2" ry="2" />
<text  x="143.17" y="145.5" ></text>
</g>
<g >
<title>CreateMesh (2,586 us, 0.01%)</title><rect x="321.6" y="103" width="0.1" height="15.0" fill="rgb(136.784114547997,103.634293529243,136.784114547997)" rx="2" ry="2" />
<text  x="324.57" y="113.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_pyop2_kernel_uniform_extrusion (1,722,055 us, 8.89%)</title><rect x="35.2" y="119" width="105.0" height="15.0" fill="rgb(147.756752286362,147.756752286362,108.359645695447)" rx="2" ry="2" />
<text  x="38.23" y="129.5" >Parloop_Cel..</text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (15,407 us, 0.08%)</title><rect x="140.2" y="151" width="0.9" height="15.0" fill="rgb(149.090169739102,149.090169739102,114.821591812572)" rx="2" ry="2" />
<text  x="143.17" y="161.5" ></text>
</g>
<g >
<title>PCApply (2,326,529 us, 12.01%)</title><rect x="675.9" y="119" width="141.7" height="15.0" fill="rgb(139.572783511342,139.572783511342,154.433441969937)" rx="2" ry="2" />
<text  x="678.87" y="129.5" >PCApply</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (2,215,279 us, 11.44%)</title><rect x="486.3" y="183" width="135.0" height="15.0" fill="rgb(151.603994413829,151.603994413829,127.003972928557)" rx="2" ry="2" />
<text  x="489.33" y="193.5" >pyop2.global_ke..</text>
</g>
<g >
<title>firedrake.ufl_expr.action (3,922 us, 0.02%)</title><rect x="324.1" y="119" width="0.3" height="15.0" fill="rgb(155.167447573188,136.283764727773,136.283764727773)" rx="2" ry="2" />
<text  x="327.12" y="129.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (2,563 us, 0.01%)</title><rect x="324.4" y="119" width="0.1" height="15.0" fill="rgb(140.662793002836,113.573407069766,140.662793002836)" rx="2" ry="2" />
<text  x="327.35" y="129.5" ></text>
</g>
<g >
<title>firedrake.utility_meshes.RectangleMesh (14,598 us, 0.08%)</title><rect x="321.4" y="87" width="0.9" height="15.0" fill="rgb(153.817574897709,125.934740882434,125.934740882434)" rx="2" ry="2" />
<text  x="324.36" y="97.5" ></text>
</g>
<g >
<title>MatMult (5,763,625 us, 29.77%)</title><rect x="324.6" y="119" width="351.3" height="15.0" fill="rgb(149.136002343515,135.286006005257,149.136002343515)" rx="2" ry="2" />
<text  x="327.64" y="129.5" >MatMult</text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (2,594 us, 0.01%)</title><rect x="817.5" y="215" width="0.1" height="15.0" fill="rgb(118.877947003184,147.857245519344,147.857245519344)" rx="2" ry="2" />
<text  x="820.49" y="225.5" ></text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (895,085 us, 4.62%)</title><rect x="621.3" y="151" width="54.6" height="15.0" fill="rgb(154.428413640029,154.428413640029,140.691543024754)" rx="2" ry="2" />
<text  x="624.32" y="161.5" >fired..</text>
</g>
<g >
<title>firedrake.assemble.allocate_matrix (6,485 us, 0.03%)</title><rect x="324.1" y="87" width="0.4" height="15.0" fill="rgb(153.275651734587,153.275651734587,135.105081483)" rx="2" ry="2" />
<text  x="327.12" y="97.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (4,649 us, 0.02%)</title><rect x="675.6" y="167" width="0.3" height="15.0" fill="rgb(145.513212408918,145.513212408918,155.583202401726)" rx="2" ry="2" />
<text  x="678.58" y="177.5" ></text>
</g>
<g >
<title>KSPSolve (8,092,281 us, 41.79%)</title><rect x="324.5" y="103" width="493.1" height="15.0" fill="rgb(136.462793356298,161.506056895486,136.462793356298)" rx="2" ry="2" />
<text  x="327.51" y="113.5" >KSPSolve</text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.__init__ (9,353 us, 0.05%)</title><rect x="323.9" y="71" width="0.6" height="15.0" fill="rgb(112.217946138174,146.130578628416,146.130578628416)" rx="2" ry="2" />
<text  x="326.94" y="81.5" ></text>
</g>
<g >
<title>firedrake.functionspace.VectorFunctionSpace (15,407 us, 0.08%)</title><rect x="140.2" y="87" width="0.9" height="15.0" fill="rgb(120.26221521487,148.216129870522,148.216129870522)" rx="2" ry="2" />
<text  x="143.17" y="97.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.solve (14,202,609 us, 73.35%)</title><rect x="324.5" y="71" width="865.5" height="15.0" fill="rgb(148.995648856596,148.995648856596,114.363529074274)" rx="2" ry="2" />
<text  x="327.51" y="81.5" >firedrake.variational_solver.NonlinearVariationalSolver.solve</text>
</g>
<g >
<title>firedrake.mesh.MeshTopology._facets (4,693 us, 0.02%)</title><rect x="140.8" y="167" width="0.3" height="15.0" fill="rgb(148.155367265308,148.155367265308,110.291395208802)" rx="2" ry="2" />
<text  x="143.83" y="177.5" ></text>
</g>
<g >
<title>firedrake.__init__ (2,938,611 us, 15.18%)</title><rect x="142.3" y="71" width="179.1" height="15.0" fill="rgb(149.58703725857,149.58703725857,117.229488253068)" rx="2" ry="2" />
<text  x="145.29" y="81.5" >firedrake.__init__</text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (2,677 us, 0.01%)</title><rect x="675.7" y="199" width="0.2" height="15.0" fill="rgb(152.890609930603,152.890609930603,133.239109663693)" rx="2" ry="2" />
<text  x="678.71" y="209.5" ></text>
</g>
<g >
<title>firedrake.utility_meshes.SquareMesh (14,598 us, 0.08%)</title><rect x="321.4" y="71" width="0.9" height="15.0" fill="rgb(152.561251271059,152.561251271059,131.642986928976)" rx="2" ry="2" />
<text  x="324.36" y="81.5" ></text>
</g>
<g >
<title>CreateMesh (2,586 us, 0.01%)</title><rect x="321.6" y="119" width="0.1" height="15.0" fill="rgb(156.57330540962,147.062008140419,147.062008140419)" rx="2" ry="2" />
<text  x="324.57" y="129.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (12,004 us, 0.06%)</title><rect x="323.2" y="103" width="0.7" height="15.0" fill="rgb(119.089857158145,119.089857158145,150.469004611254)" rx="2" ry="2" />
<text  x="326.21" y="113.5" ></text>
</g>
</g>
</svg>
