<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="299" onload="init(evt)" viewBox="0 0 1200 299" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:13px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:18px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 13 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (1 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="299.0" fill="url(#background)"  />
<text id="title" x="600.00" y="26" >Firedrake example</text>
<text id="details" x="10.00" y="281" > </text>
<text id="unzoom" x="10.00" y="26" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="26" >Search</text>
<text id="ignorecase" x="1174.00" y="26" >ic</text>
<text id="matched" x="1090.00" y="281" > </text>
<g id="frames">
<g >
<title>firedrake.tsfc_interface.compile_form (316,038 us, 1.87%)</title><rect x="755.8" y="135" width="22.1" height="15.0" fill="rgb(113.810226852732,113.810226852732,149.447140681174)" rx="2" ry="2" />
<text  x="758.85" y="145.5" ></text>
</g>
<g >
<title>KSPSolve (7,772,329 us, 45.94%)</title><rect x="235.8" y="103" width="542.1" height="15.0" fill="rgb(150.545384909134,150.545384909134,121.873788405804)" rx="2" ry="2" />
<text  x="238.79" y="113.5" >KSPSolve</text>
</g>
<g >
<title>CreateFunctionSpace (9,892 us, 0.06%)</title><rect x="102.0" y="103" width="0.7" height="15.0" fill="rgb(142.982670005653,142.982670005653,155.093420001094)" rx="2" ry="2" />
<text  x="105.01" y="113.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (4,555 us, 0.03%)</title><rect x="1189.7" y="151" width="0.3" height="15.0" fill="rgb(129.316440383279,162.669416681792,129.316440383279)" rx="2" ry="2" />
<text  x="1192.68" y="161.5" ></text>
</g>
<g >
<title>ParLoopExecute (4,622,145 us, 27.32%)</title><rect x="236.4" y="151" width="322.3" height="15.0" fill="rgb(151.652073385196,151.652073385196,127.236971020563)" rx="2" ry="2" />
<text  x="239.35" y="161.5" >ParLoopExecute</text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (6,703 us, 0.04%)</title><rect x="777.4" y="167" width="0.5" height="15.0" fill="rgb(109.098853781715,109.098853781715,148.535262022267)" rx="2" ry="2" />
<text  x="780.42" y="177.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (16,251 us, 0.10%)</title><rect x="102.7" y="119" width="1.1" height="15.0" fill="rgb(143.180820484204,143.180820484204,155.13177170662)" rx="2" ry="2" />
<text  x="105.70" y="129.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (2,163 us, 0.01%)</title><rect x="1189.8" y="167" width="0.2" height="15.0" fill="rgb(132.570008452896,162.139766065808,132.570008452896)" rx="2" ry="2" />
<text  x="1192.85" y="177.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (1,992 us, 0.01%)</title><rect x="777.8" y="215" width="0.1" height="15.0" fill="rgb(118.369440960775,118.369440960775,150.329569218214)" rx="2" ry="2" />
<text  x="780.75" y="225.5" ></text>
</g>
<g >
<title>ParLoopExecute (992,441 us, 5.87%)</title><rect x="32.8" y="103" width="69.2" height="15.0" fill="rgb(152.696416130236,117.339190331806,117.339190331806)" rx="2" ry="2" />
<text  x="35.79" y="113.5" >ParLoop..</text>
</g>
<g >
<title>firedrake.ufl_expr.derivative (1,760 us, 0.01%)</title><rect x="234.9" y="103" width="0.1" height="15.0" fill="rgb(155.630643746237,139.834935387818,139.834935387818)" rx="2" ry="2" />
<text  x="237.92" y="113.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (1,992 us, 0.01%)</title><rect x="777.8" y="247" width="0.1" height="15.0" fill="rgb(118.931947384626,147.871245618236,147.871245618236)" rx="2" ry="2" />
<text  x="780.75" y="257.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (2,375 us, 0.01%)</title><rect x="618.6" y="167" width="0.2" height="15.0" fill="rgb(111.160158447338,111.160158447338,148.934224215614)" rx="2" ry="2" />
<text  x="621.62" y="177.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_pyop2_kernel_uniform_extrusion (992,441 us, 5.87%)</title><rect x="32.8" y="119" width="69.2" height="15.0" fill="rgb(123.961104583845,163.541215532862,123.961104583845)" rx="2" ry="2" />
<text  x="35.79" y="129.5" >Parloop..</text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.__init__ (10,759 us, 0.06%)</title><rect x="235.0" y="71" width="0.8" height="15.0" fill="rgb(124.431185239685,163.464690774935,124.431185239685)" rx="2" ry="2" />
<text  x="238.04" y="81.5" ></text>
</g>
<g >
<title>ParLoopExecute (1,962,077 us, 11.60%)</title><rect x="619.0" y="135" width="136.8" height="15.0" fill="rgb(122.409309682778,148.772783991831,148.772783991831)" rx="2" ry="2" />
<text  x="622.00" y="145.5" >ParLoopExecute</text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalProblem.__init__ (11,895 us, 0.07%)</title><rect x="234.2" y="87" width="0.8" height="15.0" fill="rgb(115.201576885326,115.201576885326,149.71643423587)" rx="2" ry="2" />
<text  x="237.21" y="97.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_form0_cell_integral_otherwise (2,620,232 us, 15.49%)</title><rect x="778.1" y="135" width="182.8" height="15.0" fill="rgb(128.935136867703,150.464665113849,150.464665113849)" rx="2" ry="2" />
<text  x="781.14" y="145.5" >Parloop_Cells_wrap_fo..</text>
</g>
<g >
<title>DMPlexInterp (4,950 us, 0.03%)</title><rect x="233.1" y="119" width="0.3" height="15.0" fill="rgb(132.454003462929,92.5383838737544,132.454003462929)" rx="2" ry="2" />
<text  x="236.06" y="129.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (16,251 us, 0.10%)</title><rect x="102.7" y="71" width="1.1" height="15.0" fill="rgb(150.236698940759,150.236698940759,120.377848712908)" rx="2" ry="2" />
<text  x="105.70" y="81.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.action (11,621 us, 0.07%)</title><rect x="233.4" y="87" width="0.8" height="15.0" fill="rgb(134.882685787276,98.7618823298958,134.882685787276)" rx="2" ry="2" />
<text  x="236.40" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (16,251 us, 0.10%)</title><rect x="102.7" y="87" width="1.1" height="15.0" fill="rgb(154.204754443276,128.903117398451,128.903117398451)" rx="2" ry="2" />
<text  x="105.70" y="97.5" ></text>
</g>
<g >
<title>firedrake.__init__ (1,847,065 us, 10.92%)</title><rect x="103.8" y="71" width="128.9" height="15.0" fill="rgb(129.456071604135,162.646686017931,129.456071604135)" rx="2" ry="2" />
<text  x="106.84" y="81.5" >firedrake.__in..</text>
</g>
<g >
<title>CreateExtMesh (1,021,168 us, 6.04%)</title><rect x="31.5" y="71" width="71.2" height="15.0" fill="rgb(150.34130537486,159.246764241302,150.34130537486)" rx="2" ry="2" />
<text  x="34.48" y="81.5" >CreateE..</text>
</g>
<g >
<title>MatMult (5,488,714 us, 32.44%)</title><rect x="236.0" y="119" width="382.8" height="15.0" fill="rgb(151.218362248688,151.218362248688,125.135140128259)" rx="2" ry="2" />
<text  x="238.97" y="129.5" >MatMult</text>
</g>
<g >
<title>SNESFunctionEval (5,908,572 us, 34.92%)</title><rect x="777.9" y="103" width="412.1" height="15.0" fill="rgb(153.435923835513,153.435923835513,135.88178474133)" rx="2" ry="2" />
<text  x="780.89" y="113.5" >SNESFunctionEval</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (2,620,232 us, 15.49%)</title><rect x="778.1" y="151" width="182.8" height="15.0" fill="rgb(150.192818854713,150.192818854713,120.165199065148)" rx="2" ry="2" />
<text  x="781.14" y="161.5" >pyop2.global_kernel.G..</text>
</g>
<g >
<title>all (16,918,161 us, 100%)</title><rect x="10.0" y="39" width="1180.0" height="15.0" fill="rgb(107.471342959505,144.899977804316,144.899977804316)" rx="2" ry="2" />
<text  x="13.00" y="49.5" ></text>
</g>
<g >
<title>SNESSolve (13,680,901 us, 80.87%)</title><rect x="235.8" y="87" width="954.2" height="15.0" fill="rgb(152.974453436441,119.470809679379,119.470809679379)" rx="2" ry="2" />
<text  x="238.79" y="97.5" >SNESSolve</text>
</g>
<g >
<title>firedrake (16,918,161 us, 100.00%)</title><rect x="10.0" y="55" width="1180.0" height="15.0" fill="rgb(141.91511961873,141.91511961873,154.886797345561)" rx="2" ry="2" />
<text  x="13.00" y="65.5" >firedrake</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (1,962,077 us, 11.60%)</title><rect x="619.0" y="167" width="136.8" height="15.0" fill="rgb(148.678041175877,134.112480513185,148.678041175877)" rx="2" ry="2" />
<text  x="622.00" y="177.5" >pyop2.global_ke..</text>
</g>
<g >
<title>Parloop_Cells_wrap_form1_cell_integral_otherwise (2,319,922 us, 13.71%)</title><rect x="960.9" y="135" width="161.8" height="15.0" fill="rgb(133.984492497375,133.984492497375,153.351837257556)" rx="2" ry="2" />
<text  x="963.89" y="145.5" >Parloop_Cells_wrap_..</text>
</g>
<g >
<title>firedrake.assemble.allocate_matrix (7,763 us, 0.05%)</title><rect x="235.2" y="87" width="0.6" height="15.0" fill="rgb(124.800234936608,124.800234936608,151.574239019989)" rx="2" ry="2" />
<text  x="238.25" y="97.5" ></text>
</g>
<g >
<title>firedrake.mesh._from_cell_list (6,679 us, 0.04%)</title><rect x="232.9" y="103" width="0.5" height="15.0" fill="rgb(148.699464066163,134.167376669543,148.699464066163)" rx="2" ry="2" />
<text  x="235.93" y="113.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (2,375 us, 0.01%)</title><rect x="618.6" y="215" width="0.2" height="15.0" fill="rgb(118.077981888289,118.077981888289,150.27315778483)" rx="2" ry="2" />
<text  x="621.62" y="225.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (9,892 us, 0.06%)</title><rect x="102.0" y="151" width="0.7" height="15.0" fill="rgb(116.754232681431,116.754232681431,150.016948260922)" rx="2" ry="2" />
<text  x="105.01" y="161.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (2,902 us, 0.02%)</title><rect x="235.6" y="119" width="0.2" height="15.0" fill="rgb(140.509698935941,140.509698935941,154.614780439214)" rx="2" ry="2" />
<text  x="238.59" y="129.5" ></text>
</g>
<g >
<title>firedrake.utility_meshes.RectangleMesh (10,557 us, 0.06%)</title><rect x="232.7" y="87" width="0.7" height="15.0" fill="rgb(149.581791076525,149.581791076525,117.204064447775)" rx="2" ry="2" />
<text  x="235.66" y="97.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (2,375 us, 0.01%)</title><rect x="618.6" y="199" width="0.2" height="15.0" fill="rgb(111.697192774465,111.697192774465,149.038166343445)" rx="2" ry="2" />
<text  x="621.62" y="209.5" ></text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (964,880 us, 5.70%)</title><rect x="1122.7" y="119" width="67.3" height="15.0" fill="rgb(120.643285229684,148.314925800288,148.314925800288)" rx="2" ry="2" />
<text  x="1125.70" y="129.5" >firedr..</text>
</g>
<g >
<title>firedrake.variational_solver.LinearVariationalProblem.__init__ (23,516 us, 0.14%)</title><rect x="233.4" y="71" width="1.6" height="15.0" fill="rgb(131.923481884584,151.239421229337,151.239421229337)" rx="2" ry="2" />
<text  x="236.40" y="81.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (2,319,922 us, 13.71%)</title><rect x="960.9" y="151" width="161.8" height="15.0" fill="rgb(151.484118459045,151.484118459045,126.423035609217)" rx="2" ry="2" />
<text  x="963.89" y="161.5" >pyop2.global_kernel..</text>
</g>
<g >
<title>CreateMesh (3,115 us, 0.02%)</title><rect x="31.6" y="87" width="0.3" height="15.0" fill="rgb(155.815782975253,141.254336143604,141.254336143604)" rx="2" ry="2" />
<text  x="34.64" y="97.5" ></text>
</g>
<g >
<title>firedrake.utility_meshes.SquareMesh (10,557 us, 0.06%)</title><rect x="232.7" y="71" width="0.7" height="15.0" fill="rgb(156.548574638468,146.872405561588,146.872405561588)" rx="2" ry="2" />
<text  x="235.66" y="81.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_form0_cell_integral_otherwise (1,962,077 us, 11.60%)</title><rect x="619.0" y="151" width="136.8" height="15.0" fill="rgb(154.276575025551,129.453741862554,129.453741862554)" rx="2" ry="2" />
<text  x="622.00" y="161.5" >Parloop_Cells_w..</text>
</g>
<g >
<title>firedrake.extrusion_utils.make_extruded_coords (1,005,866 us, 5.95%)</title><rect x="31.9" y="87" width="70.1" height="15.0" fill="rgb(147.764461340045,147.764461340045,108.3970049556)" rx="2" ry="2" />
<text  x="34.86" y="97.5" >firedra..</text>
</g>
<g >
<title>firedrake.functionspace.VectorFunctionSpace (9,892 us, 0.06%)</title><rect x="102.0" y="87" width="0.7" height="15.0" fill="rgb(140.061458501818,160.920227685751,140.061458501818)" rx="2" ry="2" />
<text  x="105.01" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (1,992 us, 0.01%)</title><rect x="777.8" y="231" width="0.1" height="15.0" fill="rgb(142.804323116917,160.473714841432,142.804323116917)" rx="2" ry="2" />
<text  x="780.75" y="241.5" ></text>
</g>
<g >
<title>ParLoopExecute (4,940,154 us, 29.20%)</title><rect x="778.1" y="119" width="344.6" height="15.0" fill="rgb(148.764553267931,148.764553267931,113.243604298434)" rx="2" ry="2" />
<text  x="781.14" y="129.5" >ParLoopExecute</text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (9,892 us, 0.06%)</title><rect x="102.0" y="119" width="0.7" height="15.0" fill="rgb(115.623407993852,115.623407993852,149.798078966552)" rx="2" ry="2" />
<text  x="105.01" y="129.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (10,135 us, 0.06%)</title><rect x="234.2" y="103" width="0.7" height="15.0" fill="rgb(148.203125385857,148.203125385857,110.522838408384)" rx="2" ry="2" />
<text  x="237.21" y="113.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (992,441 us, 5.87%)</title><rect x="32.8" y="135" width="69.2" height="15.0" fill="rgb(142.428803575826,160.534845929517,142.428803575826)" rx="2" ry="2" />
<text  x="35.79" y="145.5" >pyop2.g..</text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (9,892 us, 0.06%)</title><rect x="102.0" y="135" width="0.7" height="15.0" fill="rgb(151.636633136411,151.636633136411,127.162145199528)" rx="2" ry="2" />
<text  x="105.01" y="145.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (4,533 us, 0.03%)</title><rect x="777.6" y="183" width="0.3" height="15.0" fill="rgb(130.177272032433,162.529281297046,130.177272032433)" rx="2" ry="2" />
<text  x="780.58" y="193.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (6,703 us, 0.04%)</title><rect x="777.4" y="151" width="0.5" height="15.0" fill="rgb(150.517512818152,159.218079308673,150.517512818152)" rx="2" ry="2" />
<text  x="780.42" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (16,251 us, 0.10%)</title><rect x="102.7" y="103" width="1.1" height="15.0" fill="rgb(136.492527743218,152.423988674168,152.423988674168)" rx="2" ry="2" />
<text  x="105.70" y="113.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_form0_cell_integral_otherwise (2,598,503 us, 15.36%)</title><rect x="236.6" y="167" width="181.2" height="15.0" fill="rgb(121.494711977788,121.494711977788,150.934460382798)" rx="2" ry="2" />
<text  x="239.58" y="177.5" >Parloop_Cells_wrap_fo..</text>
</g>
<g >
<title>CreateFunctionSpace (4,533 us, 0.03%)</title><rect x="777.6" y="199" width="0.3" height="15.0" fill="rgb(155.796315600988,155.796315600988,147.320606374019)" rx="2" ry="2" />
<text  x="780.58" y="209.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_form1_cell_integral_otherwise (2,020,299 us, 11.94%)</title><rect x="417.8" y="167" width="140.9" height="15.0" fill="rgb(155.328844934161,137.521144495233,137.521144495233)" rx="2" ry="2" />
<text  x="420.82" y="177.5" >Parloop_Cells_wr..</text>
</g>
<g >
<title>firedrake.matrix_free.operators.ImplicitMatrixContext.__init__ (7,763 us, 0.05%)</title><rect x="235.2" y="103" width="0.6" height="15.0" fill="rgb(156.148074872119,143.801907352915,143.801907352915)" rx="2" ry="2" />
<text  x="238.25" y="113.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.solve (13,680,901 us, 80.87%)</title><rect x="235.8" y="71" width="954.2" height="15.0" fill="rgb(145.748165502458,154.8235984636,154.8235984636)" rx="2" ry="2" />
<text  x="238.79" y="81.5" >firedrake.variational_solver.NonlinearVariationalSolver.solve</text>
</g>
<g >
<title>firedrake.ufl_expr.action (4,861 us, 0.03%)</title><rect x="235.2" y="119" width="0.4" height="15.0" fill="rgb(132.31372589933,162.181486481504,132.31372589933)" rx="2" ry="2" />
<text  x="238.25" y="129.5" ></text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (861,059 us, 5.09%)</title><rect x="558.7" y="151" width="60.1" height="15.0" fill="rgb(142.510628664193,153.984237061087,153.984237061087)" rx="2" ry="2" />
<text  x="561.73" y="161.5" >fired..</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (2,595,325 us, 15.34%)</title><rect x="236.8" y="183" width="181.0" height="15.0" fill="rgb(137.86395142784,106.40137553384,137.86395142784)" rx="2" ry="2" />
<text  x="239.81" y="193.5" >pyop2.global_kernel.G..</text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (6,880 us, 0.04%)</title><rect x="1189.5" y="135" width="0.5" height="15.0" fill="rgb(156.41263424214,145.830195856408,145.830195856408)" rx="2" ry="2" />
<text  x="1192.52" y="145.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (2,017,252 us, 11.92%)</title><rect x="418.0" y="183" width="140.7" height="15.0" fill="rgb(137.870733594269,137.870733594269,154.104012953729)" rx="2" ry="2" />
<text  x="421.04" y="193.5" >pyop2.global_ker..</text>
</g>
<g >
<title>firedrake.mesh.MeshTopology._facets (3,284 us, 0.02%)</title><rect x="102.5" y="167" width="0.2" height="15.0" fill="rgb(110.907784726807,110.907784726807,148.885377689059)" rx="2" ry="2" />
<text  x="105.47" y="177.5" ></text>
</g>
<g >
<title>firedrake.matrix_free.operators.ImplicitMatrixContext.mult (5,488,714 us, 32.44%)</title><rect x="236.0" y="135" width="382.8" height="15.0" fill="rgb(143.997433439851,160.279487579559,143.997433439851)" rx="2" ry="2" />
<text  x="238.97" y="145.5" >firedrake.matrix_free.operators.ImplicitMatrixC..</text>
</g>
<g >
<title>PCApply (2,281,103 us, 13.48%)</title><rect x="618.8" y="119" width="159.1" height="15.0" fill="rgb(149.49075742044,159.385225536207,149.49075742044)" rx="2" ry="2" />
<text  x="621.79" y="129.5" >PCApply</text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (2,375 us, 0.01%)</title><rect x="618.6" y="183" width="0.2" height="15.0" fill="rgb(155.394849683952,155.394849683952,145.375040776076)" rx="2" ry="2" />
<text  x="621.62" y="193.5" ></text>
</g>
</g>
</svg>
