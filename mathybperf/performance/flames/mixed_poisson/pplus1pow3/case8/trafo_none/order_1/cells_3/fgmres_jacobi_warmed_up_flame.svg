<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="315" onload="init(evt)" viewBox="0 0 1200 315" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:13px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:18px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 13 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (1 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="315.0" fill="url(#background)"  />
<text id="title" x="600.00" y="26" >Firedrake example</text>
<text id="details" x="10.00" y="297" > </text>
<text id="unzoom" x="10.00" y="26" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="26" >Search</text>
<text id="ignorecase" x="1174.00" y="26" >ic</text>
<text id="matched" x="1090.00" y="297" > </text>
<g id="frames">
<g >
<title>firedrake.function.Function.split (887 us, 0.04%)</title><rect x="1107.1" y="119" width="0.5" height="15.0" fill="rgb(140.589101939131,113.384573719024,140.589101939131)" rx="2" ry="2" />
<text  x="1110.14" y="129.5" ></text>
</g>
<g >
<title>firedrake.solving_utils._SNESContext.__init__ (277 us, 0.01%)</title><rect x="1113.0" y="87" width="0.1" height="15.0" fill="rgb(155.844465922724,141.474238740885,141.474238740885)" rx="2" ry="2" />
<text  x="1116.00" y="97.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.LinearVariationalProblem.__init__ (21,411 us, 0.91%)</title><rect x="1096.8" y="71" width="10.8" height="15.0" fill="rgb(147.552846948002,147.552846948002,155.977970377033)" rx="2" ry="2" />
<text  x="1099.84" y="81.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (9,664 us, 0.41%)</title><rect x="165.2" y="135" width="4.9" height="15.0" fill="rgb(134.754708185279,161.784117272164,134.754708185279)" rx="2" ry="2" />
<text  x="168.22" y="145.5" ></text>
</g>
<g >
<title>SNESFunctionEval (51,189 us, 2.18%)</title><rect x="1164.3" y="103" width="25.7" height="15.0" fill="rgb(149.858563967279,159.325350051838,149.858563967279)" rx="2" ry="2" />
<text  x="1167.31" y="113.5" >S..</text>
</g>
<g >
<title>firedrake.functionspace.VectorFunctionSpace (10,245 us, 0.44%)</title><rect x="164.9" y="87" width="5.2" height="15.0" fill="rgb(134.872111765844,161.765005061374,134.872111765844)" rx="2" ry="2" />
<text  x="167.93" y="97.5" ></text>
</g>
<g >
<title>VecMAXPY (481 us, 0.02%)</title><rect x="1116.0" y="135" width="0.3" height="15.0" fill="rgb(152.087290906705,152.087290906705,129.346102086339)" rx="2" ry="2" />
<text  x="1119.02" y="145.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.action (4,726 us, 0.20%)</title><rect x="1109.4" y="119" width="2.4" height="15.0" fill="rgb(116.3667696721,116.3667696721,149.941955420406)" rx="2" ry="2" />
<text  x="1112.41" y="129.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (7,182 us, 0.31%)</title><rect x="1160.7" y="167" width="3.6" height="15.0" fill="rgb(119.778199042067,148.090644196091,148.090644196091)" rx="2" ry="2" />
<text  x="1163.71" y="177.5" ></text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (28,938 us, 1.23%)</title><rect x="1149.8" y="135" width="14.5" height="15.0" fill="rgb(131.900459680819,151.233452509842,151.233452509842)" rx="2" ry="2" />
<text  x="1152.79" y="145.5" ></text>
</g>
<g >
<title>Log_Event_form0_cell_integral_otherwise (2,562 us, 0.11%)</title><rect x="1122.7" y="183" width="1.3" height="15.0" fill="rgb(142.49702285775,118.273621072985,142.49702285775)" rx="2" ry="2" />
<text  x="1125.72" y="193.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (8,879 us, 0.38%)</title><rect x="1102.5" y="103" width="4.5" height="15.0" fill="rgb(148.852981706478,134.56076562285,148.852981706478)" rx="2" ry="2" />
<text  x="1105.50" y="113.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (452 us, 0.02%)</title><rect x="1189.8" y="231" width="0.2" height="15.0" fill="rgb(125.636528986382,125.636528986382,151.736102384461)" rx="2" ry="2" />
<text  x="1192.77" y="241.5" ></text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (39,345 us, 1.67%)</title><rect x="1127.5" y="151" width="19.7" height="15.0" fill="rgb(139.651240647489,153.242914241941,153.242914241941)" rx="2" ry="2" />
<text  x="1130.47" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (1,553 us, 0.07%)</title><rect x="1163.5" y="231" width="0.8" height="15.0" fill="rgb(152.282871902195,152.282871902195,130.293917679868)" rx="2" ry="2" />
<text  x="1166.53" y="241.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (1,553 us, 0.07%)</title><rect x="1163.5" y="247" width="0.8" height="15.0" fill="rgb(143.173791462711,154.156168156999,154.156168156999)" rx="2" ry="2" />
<text  x="1166.53" y="257.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (1,053 us, 0.04%)</title><rect x="1189.5" y="183" width="0.5" height="15.0" fill="rgb(156.282581281847,144.83312316083,144.83312316083)" rx="2" ry="2" />
<text  x="1192.47" y="193.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_form0_cell_integral_otherwise (6,318 us, 0.27%)</title><rect x="1121.5" y="167" width="3.2" height="15.0" fill="rgb(147.523940547897,159.705405027086,147.523940547897)" rx="2" ry="2" />
<text  x="1124.48" y="177.5" ></text>
</g>
<g >
<title>CreateMesh (2,941 us, 0.13%)</title><rect x="138.0" y="87" width="1.4" height="15.0" fill="rgb(152.064956706358,112.498001415409,112.498001415409)" rx="2" ry="2" />
<text  x="140.96" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (452 us, 0.02%)</title><rect x="1189.8" y="199" width="0.2" height="15.0" fill="rgb(130.022903784958,130.022903784958,152.585078151927)" rx="2" ry="2" />
<text  x="1192.77" y="209.5" ></text>
</g>
<g >
<title>firedrake.function.Function.__init__ (277 us, 0.01%)</title><rect x="1109.3" y="119" width="0.1" height="15.0" fill="rgb(119.463639020058,119.463639020058,150.541349487753)" rx="2" ry="2" />
<text  x="1112.27" y="129.5" ></text>
</g>
<g >
<title>ParLoopExecute (2,372 us, 0.10%)</title><rect x="1148.6" y="135" width="1.2" height="15.0" fill="rgb(129.045968400224,129.045968400224,152.395993883914)" rx="2" ry="2" />
<text  x="1151.60" y="145.5" ></text>
</g>
<g >
<title>firedrake.utility_meshes.SquareMesh (9,578 us, 0.41%)</title><rect x="1092.0" y="71" width="4.8" height="15.0" fill="rgb(149.454845592369,149.454845592369,116.588867101482)" rx="2" ry="2" />
<text  x="1095.03" y="81.5" ></text>
</g>
<g >
<title>DMPlexStratify (687 us, 0.03%)</title><rect x="1096.5" y="135" width="0.3" height="15.0" fill="rgb(119.553882192192,119.553882192192,150.558815908166)" rx="2" ry="2" />
<text  x="1099.49" y="145.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (1,348 us, 0.06%)</title><rect x="1146.4" y="215" width="0.7" height="15.0" fill="rgb(131.717422290935,162.278559161941,131.717422290935)" rx="2" ry="2" />
<text  x="1149.39" y="225.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_form0_cell_integral_otherwise (1,994 us, 0.08%)</title><rect x="1166.6" y="135" width="1.0" height="15.0" fill="rgb(112.113355769268,146.103462606847,146.103462606847)" rx="2" ry="2" />
<text  x="1169.65" y="145.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (566 us, 0.02%)</title><rect x="1146.8" y="263" width="0.3" height="15.0" fill="rgb(127.222769793123,127.222769793123,152.043116734153)" rx="2" ry="2" />
<text  x="1149.78" y="273.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (3,268 us, 0.14%)</title><rect x="1145.4" y="167" width="1.7" height="15.0" fill="rgb(154.683712968616,132.575132759393,132.575132759393)" rx="2" ry="2" />
<text  x="1148.43" y="177.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (4,325 us, 0.18%)</title><rect x="1162.1" y="199" width="2.2" height="15.0" fill="rgb(155.643896718926,139.936541511764,139.936541511764)" rx="2" ry="2" />
<text  x="1165.14" y="209.5" ></text>
</g>
<g >
<title>CreateExtMesh (66,275 us, 2.82%)</title><rect x="137.2" y="71" width="33.3" height="15.0" fill="rgb(145.390892887751,160.052645343854,145.390892887751)" rx="2" ry="2" />
<text  x="140.20" y="81.5" >Cr..</text>
</g>
<g >
<title>firedrake.utility_meshes.RectangleMesh (9,578 us, 0.41%)</title><rect x="1092.0" y="87" width="4.8" height="15.0" fill="rgb(156.482427325257,146.365276160303,146.365276160303)" rx="2" ry="2" />
<text  x="1095.03" y="97.5" ></text>
</g>
<g >
<title>firedrake.mesh._from_cell_list (5,984 us, 0.25%)</title><rect x="1093.8" y="103" width="3.0" height="15.0" fill="rgb(139.318470059266,153.156640385736,153.156640385736)" rx="2" ry="2" />
<text  x="1096.83" y="113.5" ></text>
</g>
<g >
<title>ParLoopExecute (4,107 us, 0.17%)</title><rect x="1166.3" y="119" width="2.0" height="15.0" fill="rgb(153.692539715991,124.9761378226,124.9761378226)" rx="2" ry="2" />
<text  x="1169.28" y="129.5" ></text>
</g>
<g >
<title>firedrake.matrix_free.operators.ImplicitMatrixContext.__init__ (7,441 us, 0.32%)</title><rect x="1109.3" y="103" width="3.7" height="15.0" fill="rgb(154.784632722865,154.784632722865,142.417835503113)" rx="2" ry="2" />
<text  x="1112.27" y="113.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (1,506 us, 0.06%)</title><rect x="1149.0" y="167" width="0.8" height="15.0" fill="rgb(131.968051303312,151.250976263822,151.250976263822)" rx="2" ry="2" />
<text  x="1152.03" y="177.5" ></text>
</g>
<g >
<title>Mesh: numbering (1,350 us, 0.06%)</title><rect x="138.5" y="103" width="0.7" height="15.0" fill="rgb(151.953299909463,151.953299909463,128.696761099706)" rx="2" ry="2" />
<text  x="141.48" y="113.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (9,664 us, 0.41%)</title><rect x="165.2" y="151" width="4.9" height="15.0" fill="rgb(144.374579223818,160.218091754262,144.374579223818)" rx="2" ry="2" />
<text  x="168.22" y="161.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (1,076 us, 0.05%)</title><rect x="1167.8" y="151" width="0.5" height="15.0" fill="rgb(114.211359111252,114.211359111252,149.524779182823)" rx="2" ry="2" />
<text  x="1170.80" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspace.MixedFunctionSpace (1,091 us, 0.05%)</title><rect x="1091.5" y="71" width="0.5" height="15.0" fill="rgb(114.736847926924,114.736847926924,149.626486695534)" rx="2" ry="2" />
<text  x="1094.48" y="81.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (9,957 us, 0.42%)</title><rect x="165.1" y="103" width="5.0" height="15.0" fill="rgb(150.646858633824,150.646858633824,122.365545686991)" rx="2" ry="2" />
<text  x="168.08" y="113.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_form0_cell_integral_otherwise (2,000 us, 0.09%)</title><rect x="1148.8" y="151" width="1.0" height="15.0" fill="rgb(149.243887872794,159.425413602103,149.243887872794)" rx="2" ry="2" />
<text  x="1151.78" y="161.5" ></text>
</g>
<g >
<title>firedrake.assemble.allocate_matrix (7,795 us, 0.33%)</title><rect x="1109.1" y="87" width="3.9" height="15.0" fill="rgb(124.028786718709,163.530197510908,124.028786718709)" rx="2" ry="2" />
<text  x="1112.09" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (566 us, 0.02%)</title><rect x="1146.8" y="247" width="0.3" height="15.0" fill="rgb(140.926630545523,153.573570882173,153.573570882173)" rx="2" ry="2" />
<text  x="1149.78" y="257.5" ></text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (43,153 us, 1.84%)</title><rect x="1168.3" y="119" width="21.7" height="15.0" fill="rgb(144.212032152379,122.668332390472,144.212032152379)" rx="2" ry="2" />
<text  x="1171.34" y="129.5" ></text>
</g>
<g >
<title>ParLoopExecute (36,365 us, 1.55%)</title><rect x="146.7" y="103" width="18.2" height="15.0" fill="rgb(154.399979680411,130.399844216484,130.399844216484)" rx="2" ry="2" />
<text  x="149.68" y="113.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.action (10,594 us, 0.45%)</title><rect x="1097.0" y="87" width="5.3" height="15.0" fill="rgb(109.23860621579,145.358157167057,145.358157167057)" rx="2" ry="2" />
<text  x="1100.02" y="97.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalProblem.__init__ (10,456 us, 0.44%)</title><rect x="1102.3" y="87" width="5.3" height="15.0" fill="rgb(148.103712358724,148.103712358724,110.041067584583)" rx="2" ry="2" />
<text  x="1105.33" y="97.5" ></text>
</g>
<g >
<title>DMPlexInterp (4,508 us, 0.19%)</title><rect x="1094.6" y="119" width="2.2" height="15.0" fill="rgb(109.857176773727,109.857176773727,148.68203421427)" rx="2" ry="2" />
<text  x="1097.57" y="129.5" ></text>
</g>
<g >
<title>firedrake.functionspace.make_scalar_element (474 us, 0.02%)</title><rect x="170.8" y="87" width="0.2" height="15.0" fill="rgb(132.506881785457,132.506881785457,153.065848087508)" rx="2" ry="2" />
<text  x="173.81" y="97.5" ></text>
</g>
<g >
<title>CreateMesh (1,426 us, 0.06%)</title><rect x="1093.1" y="103" width="0.7" height="15.0" fill="rgb(153.410337289222,153.410337289222,135.757788401617)" rx="2" ry="2" />
<text  x="1096.12" y="113.5" ></text>
</g>
<g >
<title>KSPSolve (99,811 us, 4.24%)</title><rect x="1114.2" y="103" width="50.1" height="15.0" fill="rgb(130.266066076503,162.514826452662,130.266066076503)" rx="2" ry="2" />
<text  x="1117.22" y="113.5" >KSPS..</text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (2,097 us, 0.09%)</title><rect x="1163.3" y="215" width="1.0" height="15.0" fill="rgb(145.104182317172,154.656639860008,154.656639860008)" rx="2" ry="2" />
<text  x="1166.26" y="225.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_pyop2_kernel_uniform_extrusion (35,711 us, 1.52%)</title><rect x="147.0" y="119" width="17.9" height="15.0" fill="rgb(118.440266285418,118.440266285418,150.343277345565)" rx="2" ry="2" />
<text  x="150.01" y="129.5" ></text>
</g>
<g >
<title>DMPlexStratify (498 us, 0.02%)</title><rect x="1094.3" y="135" width="0.3" height="15.0" fill="rgb(153.244854281542,121.543882825159,121.543882825159)" rx="2" ry="2" />
<text  x="1097.32" y="145.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (16,394 us, 0.70%)</title><rect x="171.3" y="103" width="8.2" height="15.0" fill="rgb(129.36090267575,129.36090267575,152.456948904984)" rx="2" ry="2" />
<text  x="174.29" y="113.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (379 us, 0.02%)</title><rect x="1091.8" y="87" width="0.2" height="15.0" fill="rgb(148.68074098473,148.68074098473,112.837437079845)" rx="2" ry="2" />
<text  x="1094.84" y="97.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (35,711 us, 1.52%)</title><rect x="147.0" y="135" width="17.9" height="15.0" fill="rgb(155.731734575397,155.731734575397,147.007636788464)" rx="2" ry="2" />
<text  x="150.01" y="145.5" ></text>
</g>
<g >
<title>firedrake.matrix_free.operators.ImplicitMatrixContext.mult (60,712 us, 2.58%)</title><rect x="1116.7" y="135" width="30.5" height="15.0" fill="rgb(149.85380278695,149.85380278695,118.522275044448)" rx="2" ry="2" />
<text  x="1119.74" y="145.5" >f..</text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (7,182 us, 0.31%)</title><rect x="1160.7" y="151" width="3.6" height="15.0" fill="rgb(133.257545863068,94.5974612741127,133.257545863068)" rx="2" ry="2" />
<text  x="1163.71" y="161.5" ></text>
</g>
<g >
<title>firedrake.mesh.make_mesh_from_coordinates (499 us, 0.02%)</title><rect x="170.2" y="87" width="0.3" height="15.0" fill="rgb(148.466156977587,148.466156977587,111.797529968308)" rx="2" ry="2" />
<text  x="173.21" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspace.make_scalar_element (1,056 us, 0.04%)</title><rect x="1162.7" y="215" width="0.6" height="15.0" fill="rgb(152.551223813749,116.226049238742,116.226049238742)" rx="2" ry="2" />
<text  x="1165.73" y="225.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (5,783 us, 0.25%)</title><rect x="1187.1" y="135" width="2.9" height="15.0" fill="rgb(140.403085728087,153.437837040615,153.437837040615)" rx="2" ry="2" />
<text  x="1190.10" y="145.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (2,438 us, 0.10%)</title><rect x="1111.8" y="119" width="1.2" height="15.0" fill="rgb(155.973022151358,142.459836493744,142.459836493744)" rx="2" ry="2" />
<text  x="1114.78" y="129.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (16,880 us, 0.72%)</title><rect x="171.0" y="87" width="8.5" height="15.0" fill="rgb(128.033160706255,150.230819442362,150.230819442362)" rx="2" ry="2" />
<text  x="174.04" y="97.5" ></text>
</g>
<g >
<title>KSPGMRESOrthog (1,431 us, 0.06%)</title><rect x="1115.8" y="119" width="0.7" height="15.0" fill="rgb(127.967178353614,127.967178353614,152.187195810377)" rx="2" ry="2" />
<text  x="1118.80" y="129.5" ></text>
</g>
<g >
<title>firedrake.mesh._Facets.__init__ (348 us, 0.01%)</title><rect x="169.9" y="183" width="0.2" height="15.0" fill="rgb(153.275522201079,121.779003541607,121.779003541607)" rx="2" ry="2" />
<text  x="172.90" y="193.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (5,533 us, 0.24%)</title><rect x="1161.5" y="183" width="2.8" height="15.0" fill="rgb(144.495241946987,144.495241946987,155.386175860707)" rx="2" ry="2" />
<text  x="1164.53" y="193.5" ></text>
</g>
<g >
<title>PCApply (34,070 us, 1.45%)</title><rect x="1147.2" y="119" width="17.1" height="15.0" fill="rgb(129.221488900542,162.684873899912,129.221488900542)" rx="2" ry="2" />
<text  x="1150.21" y="129.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (566 us, 0.02%)</title><rect x="1146.8" y="231" width="0.3" height="15.0" fill="rgb(153.222286972026,153.222286972026,134.846467633666)" rx="2" ry="2" />
<text  x="1149.78" y="241.5" ></text>
</g>
<g >
<title>Log_Event_form1_cell_integral_otherwise (309 us, 0.01%)</title><rect x="1167.6" y="151" width="0.2" height="15.0" fill="rgb(139.741487324759,111.212561269694,139.741487324759)" rx="2" ry="2" />
<text  x="1170.65" y="161.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.derivative (1,239 us, 0.05%)</title><rect x="1107.0" y="103" width="0.6" height="15.0" fill="rgb(135.668188359061,135.668188359061,153.677713875947)" rx="2" ry="2" />
<text  x="1109.96" y="113.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (16,394 us, 0.70%)</title><rect x="171.3" y="119" width="8.2" height="15.0" fill="rgb(150.18563185639,150.18563185639,120.130369765583)" rx="2" ry="2" />
<text  x="174.29" y="129.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (379 us, 0.02%)</title><rect x="1091.8" y="103" width="0.2" height="15.0" fill="rgb(149.173516090035,135.382134980714,149.173516090035)" rx="2" ry="2" />
<text  x="1094.84" y="113.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (3,268 us, 0.14%)</title><rect x="1145.4" y="183" width="1.7" height="15.0" fill="rgb(132.786259784103,162.104562360727,132.786259784103)" rx="2" ry="2" />
<text  x="1148.43" y="193.5" ></text>
</g>
<g >
<title>SNESSolve (152,359 us, 6.48%)</title><rect x="1113.5" y="87" width="76.5" height="15.0" fill="rgb(143.766399568918,154.309807295645,154.309807295645)" rx="2" ry="2" />
<text  x="1116.54" y="97.5" >SNESSolve</text>
</g>
<g >
<title>ParLoopExecute (15,502 us, 0.66%)</title><rect x="1119.5" y="151" width="7.8" height="15.0" fill="rgb(154.009104352144,127.403133366441,127.403133366441)" rx="2" ry="2" />
<text  x="1122.55" y="161.5" ></text>
</g>
<g >
<title>all (2,351,296 us, 100%)</title><rect x="10.0" y="39" width="1180.0" height="15.0" fill="rgb(131.104838969929,131.104838969929,152.794484961922)" rx="2" ry="2" />
<text  x="13.00" y="49.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.__init__ (11,079 us, 0.47%)</title><rect x="1107.6" y="71" width="5.5" height="15.0" fill="rgb(147.507119332806,131.111993290316,147.507119332806)" rx="2" ry="2" />
<text  x="1110.58" y="81.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (1,456 us, 0.06%)</title><rect x="1189.3" y="167" width="0.7" height="15.0" fill="rgb(135.858023293305,152.259487520486,152.259487520486)" rx="2" ry="2" />
<text  x="1192.27" y="177.5" ></text>
</g>
<g >
<title>CreateMesh (1,426 us, 0.06%)</title><rect x="1093.1" y="119" width="0.7" height="15.0" fill="rgb(137.423321553772,161.349691840084,137.423321553772)" rx="2" ry="2" />
<text  x="1096.12" y="129.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (18,038 us, 0.77%)</title><rect x="170.5" y="71" width="9.0" height="15.0" fill="rgb(113.833057556651,113.833057556651,149.451559527094)" rx="2" ry="2" />
<text  x="173.46" y="81.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (379 us, 0.02%)</title><rect x="1091.8" y="119" width="0.2" height="15.0" fill="rgb(127.409904063515,162.979783059428,127.409904063515)" rx="2" ry="2" />
<text  x="1094.84" y="129.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (996 us, 0.04%)</title><rect x="1126.8" y="183" width="0.5" height="15.0" fill="rgb(126.681221586739,149.880316707673,149.880316707673)" rx="2" ry="2" />
<text  x="1129.83" y="193.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (3,427 us, 0.15%)</title><rect x="1188.3" y="151" width="1.7" height="15.0" fill="rgb(152.940994233315,119.214289122079,119.214289122079)" rx="2" ry="2" />
<text  x="1191.28" y="161.5" ></text>
</g>
<g >
<title>VecMDot (513 us, 0.02%)</title><rect x="1116.3" y="135" width="0.2" height="15.0" fill="rgb(148.784626278385,148.784626278385,113.340881195252)" rx="2" ry="2" />
<text  x="1119.26" y="145.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.solve (153,149 us, 6.51%)</title><rect x="1113.1" y="71" width="76.9" height="15.0" fill="rgb(154.296313217413,129.605068000167,129.605068000167)" rx="2" ry="2" />
<text  x="1116.14" y="81.5" >firedrak..</text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (452 us, 0.02%)</title><rect x="1189.8" y="215" width="0.2" height="15.0" fill="rgb(140.337284112342,160.875325842177,140.337284112342)" rx="2" ry="2" />
<text  x="1192.77" y="225.5" ></text>
</g>
<g >
<title>MatMult (61,166 us, 2.60%)</title><rect x="1116.5" y="119" width="30.7" height="15.0" fill="rgb(144.577024126508,144.577024126508,155.402004669647)" rx="2" ry="2" />
<text  x="1119.52" y="129.5" >Ma..</text>
</g>
<g >
<title>firedrake.__init__ (1,816,852 us, 77.27%)</title><rect x="179.5" y="71" width="911.8" height="15.0" fill="rgb(153.796767755502,153.796767755502,137.63048989205)" rx="2" ry="2" />
<text  x="182.52" y="81.5" >firedrake.__init__</text>
</g>
<g >
<title>firedrake.functionspace.make_scalar_element (272 us, 0.01%)</title><rect x="1189.6" y="199" width="0.2" height="15.0" fill="rgb(153.063009779601,120.149741643607,120.149741643607)" rx="2" ry="2" />
<text  x="1192.64" y="209.5" ></text>
</g>
<g >
<title>firedrake.mesh.ExtrudedMeshTopology.__init__ (280 us, 0.01%)</title><rect x="170.1" y="87" width="0.1" height="15.0" fill="rgb(147.802195213868,159.660107755882,147.802195213868)" rx="2" ry="2" />
<text  x="173.07" y="97.5" ></text>
</g>
<g >
<title>firedrake (2,351,296 us, 100.00%)</title><rect x="10.0" y="55" width="1180.0" height="15.0" fill="rgb(113.369867476106,113.369867476106,149.361909834085)" rx="2" ry="2" />
<text  x="13.00" y="65.5" >firedrake</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (1,295 us, 0.06%)</title><rect x="1124.0" y="183" width="0.7" height="15.0" fill="rgb(151.067993623206,151.067993623206,124.406430635535)" rx="2" ry="2" />
<text  x="1127.00" y="193.5" ></text>
</g>
<g >
<title>VecCopy (280 us, 0.01%)</title><rect x="1127.3" y="151" width="0.2" height="15.0" fill="rgb(140.299391063062,112.642189599097,140.299391063062)" rx="2" ry="2" />
<text  x="1130.33" y="161.5" ></text>
</g>
<g >
<title>firedrake.mesh.MeshTopology._facets (3,149 us, 0.13%)</title><rect x="168.5" y="167" width="1.6" height="15.0" fill="rgb(152.840960696606,118.447365340645,118.447365340645)" rx="2" ry="2" />
<text  x="171.49" y="177.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_form1_cell_integral_otherwise (1,385 us, 0.06%)</title><rect x="1167.6" y="135" width="0.7" height="15.0" fill="rgb(154.323857237387,154.323857237387,140.184846611952)" rx="2" ry="2" />
<text  x="1170.65" y="145.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_form1_cell_integral_otherwise (5,331 us, 0.23%)</title><rect x="1124.7" y="167" width="2.6" height="15.0" fill="rgb(152.770674262611,144.59985279794,152.770674262611)" rx="2" ry="2" />
<text  x="1127.65" y="177.5" ></text>
</g>
<g >
<title>firedrake.functionspace.make_scalar_element (353 us, 0.02%)</title><rect x="1146.6" y="231" width="0.2" height="15.0" fill="rgb(139.331979465389,153.16014282436,153.16014282436)" rx="2" ry="2" />
<text  x="1149.60" y="241.5" ></text>
</g>
<g >
<title>Log_Event_form1_cell_integral_otherwise (1,969 us, 0.08%)</title><rect x="1125.8" y="183" width="1.0" height="15.0" fill="rgb(136.415514707377,102.689756437654,136.415514707377)" rx="2" ry="2" />
<text  x="1128.84" y="193.5" ></text>
</g>
<g >
<title>firedrake.function.Function.__init__ (354 us, 0.02%)</title><rect x="1091.3" y="71" width="0.2" height="15.0" fill="rgb(138.724184842002,153.002566440519,153.002566440519)" rx="2" ry="2" />
<text  x="1094.30" y="81.5" ></text>
</g>
<g >
<title>firedrake.function.Function.split (292 us, 0.01%)</title><rect x="1147.1" y="167" width="0.1" height="15.0" fill="rgb(154.197041248538,128.84398290546,128.84398290546)" rx="2" ry="2" />
<text  x="1150.07" y="177.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (1,788 us, 0.08%)</title><rect x="1146.2" y="199" width="0.9" height="15.0" fill="rgb(137.647799553007,152.723503587817,152.723503587817)" rx="2" ry="2" />
<text  x="1149.17" y="209.5" ></text>
</g>
<g >
<title>firedrake.extrusion_utils.make_extruded_coords (50,809 us, 2.16%)</title><rect x="139.4" y="87" width="25.5" height="15.0" fill="rgb(138.245392829962,161.215866283495,138.245392829962)" rx="2" ry="2" />
<text  x="142.43" y="97.5" >f..</text>
</g>
<g >
<title>Mesh: reorder (549 us, 0.02%)</title><rect x="139.2" y="103" width="0.2" height="15.0" fill="rgb(139.877720494861,111.56165876808,139.877720494861)" rx="2" ry="2" />
<text  x="142.16" y="113.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (9,664 us, 0.41%)</title><rect x="165.2" y="119" width="4.9" height="15.0" fill="rgb(139.550097113441,161.003472562928,139.550097113441)" rx="2" ry="2" />
<text  x="168.22" y="129.5" ></text>
</g>
<g >
<title>DMPlexBuFrCeLi (498 us, 0.02%)</title><rect x="1094.3" y="119" width="0.3" height="15.0" fill="rgb(145.6827915436,126.437153330475,145.6827915436)" rx="2" ry="2" />
<text  x="1097.32" y="129.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (1,447 us, 0.06%)</title><rect x="1166.9" y="151" width="0.7" height="15.0" fill="rgb(155.90545600898,141.941829402183,141.941829402183)" rx="2" ry="2" />
<text  x="1169.92" y="161.5" ></text>
</g>
</g>
</svg>
