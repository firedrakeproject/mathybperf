<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="283" onload="init(evt)" viewBox="0 0 1200 283" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:13px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:18px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 13 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (1 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="283.0" fill="url(#background)"  />
<text id="title" x="600.00" y="26" >Firedrake example</text>
<text id="details" x="10.00" y="265" > </text>
<text id="unzoom" x="10.00" y="26" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="26" >Search</text>
<text id="ignorecase" x="1174.00" y="26" >ic</text>
<text id="matched" x="1090.00" y="265" > </text>
<g id="frames">
<g >
<title>ParLoopExecute (11,231,631 us, 58.63%)</title><rect x="406.5" y="119" width="691.8" height="15.0" fill="rgb(141.041747393538,114.544477695941,141.041747393538)" rx="2" ry="2" />
<text  x="409.48" y="129.5" >ParLoopExecute</text>
</g>
<g >
<title>firedrake.utility_meshes.RectangleMesh (8,016 us, 0.04%)</title><rect x="278.9" y="87" width="0.5" height="15.0" fill="rgb(145.370907043503,125.637949298977,145.370907043503)" rx="2" ry="2" />
<text  x="281.88" y="97.5" ></text>
</g>
<g >
<title>ParLoopExecute (1,109,726 us, 5.79%)</title><rect x="12.1" y="103" width="68.4" height="15.0" fill="rgb(146.467236527298,146.467236527298,155.76785223109)" rx="2" ry="2" />
<text  x="15.15" y="113.5" >ParLoo..</text>
</g>
<g >
<title>firedrake.parloops.par_loop (817,223 us, 4.27%)</title><rect x="355.7" y="135" width="50.3" height="15.0" fill="rgb(154.929120048476,154.929120048476,143.118043311845)" rx="2" ry="2" />
<text  x="358.71" y="145.5" >fire..</text>
</g>
<g >
<title>Parloop_Cells_wrap_form1_cell_integral_otherwise (6,712,078 us, 35.04%)</title><rect x="684.9" y="135" width="413.4" height="15.0" fill="rgb(149.077317314668,149.077317314668,114.759306986467)" rx="2" ry="2" />
<text  x="687.87" y="145.5" >Parloop_Cells_wrap_form1_cell_integral_otherwise</text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (8,165 us, 0.04%)</title><rect x="80.5" y="135" width="0.5" height="15.0" fill="rgb(145.552924357158,160.026268127905,145.552924357158)" rx="2" ry="2" />
<text  x="83.50" y="145.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (2,563 us, 0.01%)</title><rect x="352.4" y="183" width="0.2" height="15.0" fill="rgb(133.012570863147,151.521777631186,151.521777631186)" rx="2" ry="2" />
<text  x="355.43" y="193.5" ></text>
</g>
<g >
<title>CreateMesh (3,213 us, 0.02%)</title><rect x="84.3" y="87" width="0.2" height="15.0" fill="rgb(115.141829772488,146.888622533608,146.888622533608)" rx="2" ry="2" />
<text  x="87.26" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (3,259 us, 0.02%)</title><rect x="354.1" y="231" width="0.2" height="15.0" fill="rgb(154.354752725501,154.354752725501,140.334570900505)" rx="2" ry="2" />
<text  x="357.12" y="241.5" ></text>
</g>
<g >
<title>firedrake.slate.slac.optimise.optimise (4,264 us, 0.02%)</title><rect x="350.5" y="167" width="0.2" height="15.0" fill="rgb(156.030016938278,142.8967965268,142.8967965268)" rx="2" ry="2" />
<text  x="353.46" y="177.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (811,668 us, 4.24%)</title><rect x="356.0" y="183" width="50.0" height="15.0" fill="rgb(153.432374328341,153.432374328341,135.864583283497)" rx="2" ry="2" />
<text  x="359.05" y="193.5" >pyop..</text>
</g>
<g >
<title>DMPlexInterp (4,083 us, 0.02%)</title><rect x="279.1" y="119" width="0.3" height="15.0" fill="rgb(152.890687554893,118.82860458751,118.82860458751)" rx="2" ry="2" />
<text  x="282.12" y="129.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (2,300 us, 0.01%)</title><rect x="1189.9" y="183" width="0.1" height="15.0" fill="rgb(123.339556380199,123.339556380199,151.291527041329)" rx="2" ry="2" />
<text  x="1192.86" y="193.5" ></text>
</g>
<g >
<title>firedrake.__init__ (3,122,026 us, 16.30%)</title><rect x="86.6" y="71" width="192.3" height="15.0" fill="rgb(150.416049991898,150.416049991898,121.247011499196)" rx="2" ry="2" />
<text  x="89.57" y="81.5" >firedrake.__init__</text>
</g>
<g >
<title>Log_Event_form1_cell_integral_otherwise (7,537 us, 0.04%)</title><rect x="685.0" y="151" width="0.5" height="15.0" fill="rgb(154.630541583318,132.167485472107,132.167485472107)" rx="2" ry="2" />
<text  x="688.02" y="161.5" ></text>
</g>
<g >
<title>Mesh: reorder (3,534 us, 0.02%)</title><rect x="84.8" y="87" width="0.2" height="15.0" fill="rgb(154.526678155762,154.526678155762,141.167747985617)" rx="2" ry="2" />
<text  x="87.82" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (8,165 us, 0.04%)</title><rect x="80.5" y="119" width="0.5" height="15.0" fill="rgb(132.407913617237,132.407913617237,153.046692958175)" rx="2" ry="2" />
<text  x="83.50" y="129.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (46,545 us, 0.24%)</title><rect x="81.1" y="87" width="2.9" height="15.0" fill="rgb(153.680054122124,153.680054122124,137.064877668753)" rx="2" ry="2" />
<text  x="84.14" y="97.5" ></text>
</g>
<g >
<title>KSPSolve (1,112,180 us, 5.81%)</title><rect x="282.2" y="103" width="68.5" height="15.0" fill="rgb(156.272307219697,144.754355351008,144.754355351008)" rx="2" ry="2" />
<text  x="285.22" y="113.5" >KSPSolve</text>
</g>
<g >
<title>Parloop_Cells_wrap_form0_cell_integral_otherwise (4,519,553 us, 23.59%)</title><rect x="406.5" y="135" width="278.4" height="15.0" fill="rgb(155.916548244217,142.026869872328,142.026869872328)" rx="2" ry="2" />
<text  x="409.48" y="145.5" >Parloop_Cells_wrap_form0_cell_inte..</text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (1,043,454 us, 5.45%)</title><rect x="282.6" y="199" width="64.3" height="15.0" fill="rgb(155.461624836833,155.461624836833,145.698643440038)" rx="2" ry="2" />
<text  x="285.64" y="209.5" >Parloo..</text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (5,699 us, 0.03%)</title><rect x="1189.6" y="151" width="0.4" height="15.0" fill="rgb(133.436228884443,133.436228884443,153.24572171957)" rx="2" ry="2" />
<text  x="1192.65" y="161.5" ></text>
</g>
<g >
<title>firedrake.parloops.par_loop (1,050,297 us, 5.48%)</title><rect x="282.2" y="167" width="64.7" height="15.0" fill="rgb(147.727192760351,159.672317457617,147.727192760351)" rx="2" ry="2" />
<text  x="285.22" y="177.5" >firedr..</text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (3,980 us, 0.02%)</title><rect x="282.0" y="119" width="0.2" height="15.0" fill="rgb(149.115347818424,149.115347818424,114.943608658517)" rx="2" ry="2" />
<text  x="284.97" y="129.5" ></text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (1,488,668 us, 7.77%)</title><rect x="1098.3" y="119" width="91.7" height="15.0" fill="rgb(135.877664912467,152.264579792121,152.264579792121)" rx="2" ry="2" />
<text  x="1101.30" y="129.5" >firedrake..</text>
</g>
<g >
<title>firedrake (19,157,162 us, 100.00%)</title><rect x="10.0" y="55" width="1180.0" height="15.0" fill="rgb(156.615885901953,147.388458581643,147.388458581643)" rx="2" ry="2" />
<text  x="13.00" y="65.5" >firedrake</text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (46,545 us, 0.24%)</title><rect x="81.1" y="103" width="2.9" height="15.0" fill="rgb(145.699871684164,145.699871684164,155.619330003387)" rx="2" ry="2" />
<text  x="84.14" y="113.5" ></text>
</g>
<g >
<title>DMPlexSymmetrize (2,017 us, 0.01%)</title><rect x="86.4" y="87" width="0.2" height="15.0" fill="rgb(133.323964642514,162.017029011684,133.323964642514)" rx="2" ry="2" />
<text  x="89.45" y="97.5" ></text>
</g>
<g >
<title>firedrake.mesh._from_cell_list (4,083 us, 0.02%)</title><rect x="279.1" y="103" width="0.3" height="15.0" fill="rgb(132.828681647592,132.828681647592,153.128131931792)" rx="2" ry="2" />
<text  x="282.12" y="113.5" ></text>
</g>
<g >
<title>firedrake.assemble.allocate_matrix (8,229 us, 0.04%)</title><rect x="281.7" y="87" width="0.5" height="15.0" fill="rgb(141.851981540283,160.628747191117,141.851981540283)" rx="2" ry="2" />
<text  x="284.71" y="97.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (9,903 us, 0.05%)</title><rect x="1189.4" y="135" width="0.6" height="15.0" fill="rgb(145.788021252347,159.987996540316,145.788021252347)" rx="2" ry="2" />
<text  x="1192.39" y="145.5" ></text>
</g>
<g >
<title>firedrake.functionspace.MixedFunctionSpace (2,563 us, 0.01%)</title><rect x="352.4" y="151" width="0.2" height="15.0" fill="rgb(138.764253011567,161.131400672536,138.764253011567)" rx="2" ry="2" />
<text  x="355.43" y="161.5" ></text>
</g>
<g >
<title>SCForwardElim (1,112,180 us, 5.81%)</title><rect x="282.2" y="135" width="68.5" height="15.0" fill="rgb(152.796367077819,152.796367077819,132.7823943002)" rx="2" ry="2" />
<text  x="285.22" y="145.5" >SCForw..</text>
</g>
<g >
<title>CreateFunctionSpace (16,930 us, 0.09%)</title><rect x="352.4" y="135" width="1.1" height="15.0" fill="rgb(129.790711527957,162.592209751263,129.790711527957)" rx="2" ry="2" />
<text  x="355.43" y="145.5" ></text>
</g>
<g >
<title>firedrake.functionspace.VectorFunctionSpace (8,165 us, 0.04%)</title><rect x="80.5" y="87" width="0.5" height="15.0" fill="rgb(145.304739219184,145.304739219184,155.5428527521)" rx="2" ry="2" />
<text  x="83.50" y="97.5" ></text>
</g>
<g >
<title>HybridInit (900,493 us, 4.70%)</title><rect x="350.7" y="119" width="55.5" height="15.0" fill="rgb(153.716417843315,125.159203465416,125.159203465416)" rx="2" ry="2" />
<text  x="353.72" y="129.5" >Hybri..</text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (10,138 us, 0.05%)</title><rect x="353.7" y="167" width="0.6" height="15.0" fill="rgb(109.919991942922,145.534812725943,145.534812725943)" rx="2" ry="2" />
<text  x="356.70" y="177.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (14,367 us, 0.07%)</title><rect x="352.6" y="151" width="0.9" height="15.0" fill="rgb(152.344633788709,114.642192380106,114.642192380106)" rx="2" ry="2" />
<text  x="355.58" y="161.5" ></text>
</g>
<g >
<title>HybridBreak (1,050,297 us, 5.48%)</title><rect x="282.2" y="151" width="64.7" height="15.0" fill="rgb(154.598870406363,154.598870406363,141.517602738529)" rx="2" ry="2" />
<text  x="285.22" y="161.5" >Hybrid..</text>
</g>
<g >
<title>DMPlexStratify (3,345 us, 0.02%)</title><rect x="86.2" y="87" width="0.2" height="15.0" fill="rgb(137.130457428216,152.58937785176,152.58937785176)" rx="2" ry="2" />
<text  x="89.24" y="97.5" ></text>
</g>
<g >
<title>FunctionSpaceData: CreateElement (11,957 us, 0.06%)</title><rect x="352.7" y="199" width="0.8" height="15.0" fill="rgb(109.388488293828,109.388488293828,148.591320314935)" rx="2" ry="2" />
<text  x="355.73" y="209.5" ></text>
</g>
<g >
<title>CreateExtMesh (1,152,759 us, 6.02%)</title><rect x="10.0" y="71" width="71.0" height="15.0" fill="rgb(155.194994147111,136.494955127851,136.494955127851)" rx="2" ry="2" />
<text  x="13.00" y="81.5" >CreateE..</text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (2,300 us, 0.01%)</title><rect x="1189.9" y="167" width="0.1" height="15.0" fill="rgb(130.655038772803,162.451505316055,130.655038772803)" rx="2" ry="2" />
<text  x="1192.86" y="177.5" ></text>
</g>
<g >
<title>HybridRHS (61,883 us, 0.32%)</title><rect x="346.9" y="151" width="3.8" height="15.0" fill="rgb(156.684404593605,147.91376855097,147.91376855097)" rx="2" ry="2" />
<text  x="349.91" y="161.5" ></text>
</g>
<g >
<title>FunctionSpaceData: CreateElement (10,788 us, 0.06%)</title><rect x="82.2" y="135" width="0.7" height="15.0" fill="rgb(146.640570935518,159.84920938259,146.640570935518)" rx="2" ry="2" />
<text  x="85.23" y="145.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (2,362 us, 0.01%)</title><rect x="406.0" y="135" width="0.2" height="15.0" fill="rgb(107.486105482057,144.903805124978,144.903805124978)" rx="2" ry="2" />
<text  x="409.04" y="145.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (14,367 us, 0.07%)</title><rect x="352.6" y="167" width="0.9" height="15.0" fill="rgb(142.215761340827,117.55288843587,142.215761340827)" rx="2" ry="2" />
<text  x="355.58" y="177.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (48,705 us, 0.25%)</title><rect x="81.0" y="71" width="3.0" height="15.0" fill="rgb(155.753098026954,140.773751539979,140.773751539979)" rx="2" ry="2" />
<text  x="84.01" y="81.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (6,702,068 us, 34.98%)</title><rect x="685.5" y="151" width="412.8" height="15.0" fill="rgb(152.573622375254,116.397771543613,116.397771543613)" rx="2" ry="2" />
<text  x="688.49" y="161.5" >pyop2.global_kernel.GlobalKernel.compile</text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (15,912 us, 0.08%)</title><rect x="280.2" y="103" width="1.0" height="15.0" fill="rgb(155.667182302732,140.115064320945,140.115064320945)" rx="2" ry="2" />
<text  x="283.25" y="113.5" ></text>
</g>
<g >
<title>firedrake.matrix_free.operators.ImplicitMatrixContext.__init__ (8,229 us, 0.04%)</title><rect x="281.7" y="103" width="0.5" height="15.0" fill="rgb(115.54088195502,146.992080506857,146.992080506857)" rx="2" ry="2" />
<text  x="284.71" y="113.5" ></text>
</g>
<g >
<title>ParLoopExecute (811,668 us, 4.24%)</title><rect x="356.0" y="151" width="50.0" height="15.0" fill="rgb(107.387916242396,144.878348655436,144.878348655436)" rx="2" ry="2" />
<text  x="359.05" y="161.5" >ParL..</text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.solve (14,737,767 us, 76.93%)</title><rect x="282.2" y="71" width="907.8" height="15.0" fill="rgb(127.978719799612,162.8871851489,127.978719799612)" rx="2" ry="2" />
<text  x="285.22" y="81.5" >firedrake.variational_solver.NonlinearVariationalSolver.solve</text>
</g>
<g >
<title>firedrake.ufl_expr.derivative (2,383 us, 0.01%)</title><rect x="281.2" y="103" width="0.2" height="15.0" fill="rgb(144.505040932914,154.501306908533,154.501306908533)" rx="2" ry="2" />
<text  x="284.23" y="113.5" ></text>
</g>
<g >
<title>PCSetUp (900,493 us, 4.70%)</title><rect x="350.7" y="103" width="55.5" height="15.0" fill="rgb(144.623815762165,144.623815762165,155.411061115258)" rx="2" ry="2" />
<text  x="353.72" y="113.5" >PCSetUp</text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (8,165 us, 0.04%)</title><rect x="80.5" y="151" width="0.5" height="15.0" fill="rgb(153.977690511055,127.162293918086,127.162293918086)" rx="2" ry="2" />
<text  x="83.50" y="161.5" ></text>
</g>
<g >
<title>PCApply (1,112,180 us, 5.81%)</title><rect x="282.2" y="119" width="68.5" height="15.0" fill="rgb(147.32179140871,147.32179140871,155.933249950073)" rx="2" ry="2" />
<text  x="285.22" y="129.5" >PCApply</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (4,510,511 us, 23.54%)</title><rect x="407.0" y="151" width="277.9" height="15.0" fill="rgb(141.710288295926,141.710288295926,154.847152573405)" rx="2" ry="2" />
<text  x="410.04" y="161.5" >pyop2.global_kernel.GlobalKernel.c..</text>
</g>
<g >
<title>firedrake.utility_meshes.SquareMesh (8,016 us, 0.04%)</title><rect x="278.9" y="71" width="0.5" height="15.0" fill="rgb(149.76932012016,149.76932012016,118.112859043851)" rx="2" ry="2" />
<text  x="281.88" y="81.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (811,668 us, 4.24%)</title><rect x="356.0" y="167" width="50.0" height="15.0" fill="rgb(156.601117967742,147.275237752686,147.275237752686)" rx="2" ry="2" />
<text  x="359.05" y="177.5" >Parl..</text>
</g>
<g >
<title>CreateMesh (16,742 us, 0.09%)</title><rect x="84.0" y="71" width="1.0" height="15.0" fill="rgb(155.215316929675,136.650763127506,136.650763127506)" rx="2" ry="2" />
<text  x="87.01" y="81.5" ></text>
</g>
<g >
<title>ParLoopExecute (1,043,454 us, 5.45%)</title><rect x="282.6" y="183" width="64.3" height="15.0" fill="rgb(151.233550445324,151.233550445324,125.2087444658)" rx="2" ry="2" />
<text  x="285.64" y="193.5" >ParLoo..</text>
</g>
<g >
<title>firedrake.ufl_expr.action (14,247 us, 0.07%)</title><rect x="279.4" y="87" width="0.8" height="15.0" fill="rgb(147.839879659577,147.839879659577,108.762493734874)" rx="2" ry="2" />
<text  x="282.37" y="97.5" ></text>
</g>
<g >
<title>PetscBarrier (24,947 us, 0.13%)</title><rect x="85.0" y="71" width="1.6" height="15.0" fill="rgb(138.738594612275,161.135577621258,138.738594612275)" rx="2" ry="2" />
<text  x="88.04" y="81.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (1,109,726 us, 5.79%)</title><rect x="12.1" y="135" width="68.4" height="15.0" fill="rgb(131.828826205703,162.260423640932,131.828826205703)" rx="2" ry="2" />
<text  x="15.15" y="145.5" >pyop2...</text>
</g>
<g >
<title>firedrake.variational_solver.LinearVariationalProblem.__init__ (32,542 us, 0.17%)</title><rect x="279.4" y="71" width="2.0" height="15.0" fill="rgb(136.286354605717,152.37053637926,152.37053637926)" rx="2" ry="2" />
<text  x="282.37" y="81.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.__init__ (13,658 us, 0.07%)</title><rect x="281.4" y="71" width="0.8" height="15.0" fill="rgb(127.950089020222,150.209282338576,150.209282338576)" rx="2" ry="2" />
<text  x="284.37" y="81.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (46,545 us, 0.24%)</title><rect x="81.1" y="119" width="2.9" height="15.0" fill="rgb(125.766788330945,149.643241419134,149.643241419134)" rx="2" ry="2" />
<text  x="84.14" y="129.5" ></text>
</g>
<g >
<title>firedrake.interpolation.make_interpolator (22,468 us, 0.12%)</title><rect x="354.3" y="135" width="1.4" height="15.0" fill="rgb(110.938754782529,145.7989364251,145.7989364251)" rx="2" ry="2" />
<text  x="357.32" y="145.5" ></text>
</g>
<g >
<title>SNESSolve (14,737,767 us, 76.93%)</title><rect x="282.2" y="87" width="907.8" height="15.0" fill="rgb(145.257650539905,160.07433595862,145.257650539905)" rx="2" ry="2" />
<text  x="285.22" y="97.5" >SNESSolve</text>
</g>
<g >
<title>firedrake.ufl_expr.action (4,249 us, 0.02%)</title><rect x="281.7" y="119" width="0.3" height="15.0" fill="rgb(142.807831361456,160.473143731856,142.807831361456)" rx="2" ry="2" />
<text  x="284.71" y="129.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (13,834 us, 0.07%)</title><rect x="353.5" y="151" width="0.8" height="15.0" fill="rgb(135.102874349993,161.727439059304,135.102874349993)" rx="2" ry="2" />
<text  x="356.47" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (3,259 us, 0.02%)</title><rect x="354.1" y="199" width="0.2" height="15.0" fill="rgb(149.226393242505,149.226393242505,115.481751867523)" rx="2" ry="2" />
<text  x="357.12" y="209.5" ></text>
</g>
<g >
<title>firedrake.extrusion_utils.make_extruded_coords (1,141,837 us, 5.96%)</title><rect x="10.2" y="87" width="70.3" height="15.0" fill="rgb(124.062690126308,149.201438180895,149.201438180895)" rx="2" ry="2" />
<text  x="13.17" y="97.5" >firedra..</text>
</g>
<g >
<title>Mesh: numbering (5,834 us, 0.03%)</title><rect x="84.5" y="87" width="0.3" height="15.0" fill="rgb(142.710951363703,160.488914894281,142.710951363703)" rx="2" ry="2" />
<text  x="87.46" y="97.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (8,165 us, 0.04%)</title><rect x="80.5" y="103" width="0.5" height="15.0" fill="rgb(134.981616163223,161.747178764126,134.981616163223)" rx="2" ry="2" />
<text  x="83.50" y="113.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (13,834 us, 0.07%)</title><rect x="353.5" y="135" width="0.8" height="15.0" fill="rgb(118.104560089332,118.104560089332,150.278301952774)" rx="2" ry="2" />
<text  x="356.47" y="145.5" ></text>
</g>
<g >
<title>firedrake.mesh.MeshTopology._facets (18,094 us, 0.09%)</title><rect x="82.9" y="135" width="1.1" height="15.0" fill="rgb(153.993647748571,127.284632739044,127.284632739044)" rx="2" ry="2" />
<text  x="85.89" y="145.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (3,259 us, 0.02%)</title><rect x="354.1" y="215" width="0.2" height="15.0" fill="rgb(155.561541545062,155.561541545062,146.182855179917)" rx="2" ry="2" />
<text  x="357.12" y="225.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (2,563 us, 0.01%)</title><rect x="352.4" y="199" width="0.2" height="15.0" fill="rgb(138.373613064035,152.911677461046,152.911677461046)" rx="2" ry="2" />
<text  x="355.43" y="209.5" ></text>
</g>
<g >
<title>Log_Event_form0_cell_integral_otherwise (6,643 us, 0.03%)</title><rect x="406.6" y="151" width="0.4" height="15.0" fill="rgb(154.224936293174,129.057844914333,129.057844914333)" rx="2" ry="2" />
<text  x="409.63" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (14,367 us, 0.07%)</title><rect x="352.6" y="183" width="0.9" height="15.0" fill="rgb(129.360583420225,162.66223060601,129.360583420225)" rx="2" ry="2" />
<text  x="355.58" y="193.5" ></text>
</g>
<g >
<title>SNESFunctionEval (12,725,094 us, 66.42%)</title><rect x="406.2" y="103" width="783.8" height="15.0" fill="rgb(155.99649112062,142.63976525809,142.63976525809)" rx="2" ry="2" />
<text  x="409.19" y="113.5" >SNESFunctionEval</text>
</g>
<g >
<title>all (19,157,162 us, 100%)</title><rect x="10.0" y="39" width="1180.0" height="15.0" fill="rgb(118.279528817642,118.279528817642,150.312166867931)" rx="2" ry="2" />
<text  x="13.00" y="49.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (2,563 us, 0.01%)</title><rect x="352.4" y="215" width="0.2" height="15.0" fill="rgb(156.144830643159,143.777034930887,143.777034930887)" rx="2" ry="2" />
<text  x="355.43" y="225.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_pyop2_kernel_uniform_extrusion (1,109,726 us, 5.79%)</title><rect x="12.1" y="119" width="68.4" height="15.0" fill="rgb(138.609925003892,161.156523836576,138.609925003892)" rx="2" ry="2" />
<text  x="15.15" y="129.5" >Parloo..</text>
</g>
<g >
<title>CreateFunctionSpace (7,129 us, 0.04%)</title><rect x="353.9" y="183" width="0.4" height="15.0" fill="rgb(115.977974112039,147.105400695714,147.105400695714)" rx="2" ry="2" />
<text  x="356.88" y="193.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalProblem.__init__ (18,295 us, 0.10%)</title><rect x="280.2" y="87" width="1.2" height="15.0" fill="rgb(134.333463203452,134.333463203452,153.419379974862)" rx="2" ry="2" />
<text  x="283.25" y="97.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (2,563 us, 0.01%)</title><rect x="352.4" y="167" width="0.2" height="15.0" fill="rgb(115.980852738462,115.980852738462,149.867261820347)" rx="2" ry="2" />
<text  x="355.43" y="177.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (1,043,454 us, 5.45%)</title><rect x="282.6" y="215" width="64.3" height="15.0" fill="rgb(150.910458665717,159.15411138,150.910458665717)" rx="2" ry="2" />
<text  x="285.64" y="225.5" >pyop2...</text>
</g>
</g>
</svg>
