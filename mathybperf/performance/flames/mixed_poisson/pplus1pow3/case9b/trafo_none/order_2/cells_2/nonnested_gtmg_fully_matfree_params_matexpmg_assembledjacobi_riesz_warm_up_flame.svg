<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="283" onload="init(evt)" viewBox="0 0 1200 283" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:13px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:18px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 13 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (1 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="283.0" fill="url(#background)"  />
<text id="title" x="600.00" y="26" >Firedrake example</text>
<text id="details" x="10.00" y="265" > </text>
<text id="unzoom" x="10.00" y="26" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="26" >Search</text>
<text id="ignorecase" x="1174.00" y="26" >ic</text>
<text id="matched" x="1090.00" y="265" > </text>
<g id="frames">
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (8,959,253 us, 42.87%)</title><rect x="606.9" y="151" width="505.9" height="15.0" fill="rgb(141.516126828264,115.760074997426,141.516126828264)" rx="2" ry="2" />
<text  x="609.91" y="161.5" >pyop2.global_kernel.GlobalKernel.compile</text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (21,436 us, 0.10%)</title><rect x="263.8" y="167" width="1.2" height="15.0" fill="rgb(141.623845485273,160.665885618677,141.623845485273)" rx="2" ry="2" />
<text  x="266.78" y="177.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_form0_cell_integral_otherwise (4,478,549 us, 21.43%)</title><rect x="353.1" y="135" width="252.8" height="15.0" fill="rgb(142.629436136391,142.629436136391,155.025052155431)" rx="2" ry="2" />
<text  x="356.08" y="145.5" >Parloop_Cells_wrap_form0_cell_..</text>
</g>
<g >
<title>DMPlexInterp (6,555 us, 0.03%)</title><rect x="258.0" y="119" width="0.4" height="15.0" fill="rgb(149.224567125844,149.224567125844,115.472902225245)" rx="2" ry="2" />
<text  x="261.05" y="129.5" ></text>
</g>
<g >
<title>firedrake.__init__ (3,021,686 us, 14.46%)</title><rect x="87.0" y="71" width="170.6" height="15.0" fill="rgb(153.448701697288,123.106713012542,123.106713012542)" rx="2" ry="2" />
<text  x="89.96" y="81.5" >firedrake.__init__</text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (7,608 us, 0.04%)</title><rect x="264.6" y="199" width="0.4" height="15.0" fill="rgb(144.562071201932,123.565307454951,144.562071201932)" rx="2" ry="2" />
<text  x="267.57" y="209.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (9,716 us, 0.05%)</title><rect x="80.8" y="135" width="0.6" height="15.0" fill="rgb(110.594176257472,145.709601251937,145.709601251937)" rx="2" ry="2" />
<text  x="83.83" y="145.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (29,376 us, 0.14%)</title><rect x="263.3" y="151" width="1.7" height="15.0" fill="rgb(127.475802146431,162.969055464534,127.475802146431)" rx="2" ry="2" />
<text  x="266.34" y="161.5" ></text>
</g>
<g >
<title>FunctionSpaceData: CreateElement (13,541 us, 0.06%)</title><rect x="262.6" y="199" width="0.7" height="15.0" fill="rgb(140.004435615539,160.929510481191,140.004435615539)" rx="2" ry="2" />
<text  x="265.57" y="209.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (17,734 us, 0.08%)</title><rect x="262.3" y="151" width="1.0" height="15.0" fill="rgb(153.869720933268,126.334527155053,126.334527155053)" rx="2" ry="2" />
<text  x="265.34" y="161.5" ></text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (1,367,722 us, 6.54%)</title><rect x="1112.8" y="119" width="77.2" height="15.0" fill="rgb(152.313627685343,152.313627685343,130.44296493666)" rx="2" ry="2" />
<text  x="1115.78" y="129.5" >firedrak..</text>
</g>
<g >
<title>all (20,898,879 us, 100%)</title><rect x="10.0" y="39" width="1180.0" height="15.0" fill="rgb(138.956218209351,138.956218209351,154.314106750197)" rx="2" ry="2" />
<text  x="13.00" y="49.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (17,734 us, 0.08%)</title><rect x="262.3" y="183" width="1.0" height="15.0" fill="rgb(143.964747031882,122.034664269198,143.964747031882)" rx="2" ry="2" />
<text  x="265.34" y="193.5" ></text>
</g>
<g >
<title>firedrake.mesh._from_cell_list (9,659 us, 0.05%)</title><rect x="257.9" y="103" width="0.5" height="15.0" fill="rgb(123.489478787338,123.489478787338,151.32054428142)" rx="2" ry="2" />
<text  x="260.87" y="113.5" ></text>
</g>
<g >
<title>firedrake.utility_meshes.RectangleMesh (14,927 us, 0.07%)</title><rect x="257.6" y="87" width="0.8" height="15.0" fill="rgb(115.626236833727,115.626236833727,149.798626483947)" rx="2" ry="2" />
<text  x="260.58" y="97.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (29,376 us, 0.14%)</title><rect x="263.3" y="135" width="1.7" height="15.0" fill="rgb(153.935588142334,126.839509091231,126.839509091231)" rx="2" ry="2" />
<text  x="266.34" y="145.5" ></text>
</g>
<g >
<title>firedrake.matrix_free.operators.ImplicitMatrixContext.__init__ (6,971 us, 0.03%)</title><rect x="260.0" y="103" width="0.4" height="15.0" fill="rgb(146.076618383059,159.94101561206,146.076618383059)" rx="2" ry="2" />
<text  x="262.97" y="113.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (4,545 us, 0.02%)</title><rect x="1189.7" y="151" width="0.3" height="15.0" fill="rgb(119.019311796485,147.893895650941,147.893895650941)" rx="2" ry="2" />
<text  x="1192.74" y="161.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (1,216,909 us, 5.82%)</title><rect x="12.1" y="135" width="68.7" height="15.0" fill="rgb(148.80236917529,159.497288738906,148.80236917529)" rx="2" ry="2" />
<text  x="15.12" y="145.5" >pyop2...</text>
</g>
<g >
<title>firedrake.utility_meshes.SquareMesh (14,927 us, 0.07%)</title><rect x="257.6" y="71" width="0.8" height="15.0" fill="rgb(151.474282573228,151.474282573228,126.375369393336)" rx="2" ry="2" />
<text  x="260.58" y="81.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (45,713 us, 0.22%)</title><rect x="81.4" y="71" width="2.6" height="15.0" fill="rgb(126.103375286321,149.730504703861,149.730504703861)" rx="2" ry="2" />
<text  x="84.38" y="81.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (4,017 us, 0.02%)</title><rect x="352.6" y="135" width="0.2" height="15.0" fill="rgb(124.438004762158,149.298741975374,149.298741975374)" rx="2" ry="2" />
<text  x="355.57" y="145.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (1,501,222 us, 7.18%)</title><rect x="267.8" y="183" width="84.8" height="15.0" fill="rgb(154.641748421778,154.641748421778,141.725396197847)" rx="2" ry="2" />
<text  x="270.81" y="193.5" >pyop2.glo..</text>
</g>
<g >
<title>ParLoopExecute (13,454,921 us, 64.38%)</title><rect x="353.1" y="119" width="759.7" height="15.0" fill="rgb(151.657220984985,151.657220984985,127.261917081083)" rx="2" ry="2" />
<text  x="356.08" y="129.5" >ParLoopExecute</text>
</g>
<g >
<title>firedrake.variational_solver.LinearVariationalProblem.__init__ (22,853 us, 0.11%)</title><rect x="258.4" y="71" width="1.3" height="15.0" fill="rgb(139.405744953521,110.352221443397,139.405744953521)" rx="2" ry="2" />
<text  x="261.42" y="81.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (7,031 us, 0.03%)</title><rect x="1189.6" y="135" width="0.4" height="15.0" fill="rgb(129.152783845416,150.521092108071,150.521092108071)" rx="2" ry="2" />
<text  x="1192.60" y="145.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (5,159 us, 0.02%)</title><rect x="262.0" y="215" width="0.3" height="15.0" fill="rgb(133.706146591115,151.701593560659,151.701593560659)" rx="2" ry="2" />
<text  x="265.04" y="225.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.action (12,383 us, 0.06%)</title><rect x="258.4" y="87" width="0.7" height="15.0" fill="rgb(151.072258324565,140.247661956698,151.072258324565)" rx="2" ry="2" />
<text  x="261.42" y="97.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (5,159 us, 0.02%)</title><rect x="262.0" y="167" width="0.3" height="15.0" fill="rgb(114.250555240923,114.250555240923,149.532365530501)" rx="2" ry="2" />
<text  x="265.04" y="177.5" ></text>
</g>
<g >
<title>FunctionSpaceData: CreateElement (9,350 us, 0.04%)</title><rect x="82.2" y="135" width="0.6" height="15.0" fill="rgb(152.993127469171,119.613977263644,119.613977263644)" rx="2" ry="2" />
<text  x="85.24" y="145.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (25,774 us, 0.12%)</title><rect x="261.9" y="135" width="1.4" height="15.0" fill="rgb(142.705011755898,154.034632677455,154.034632677455)" rx="2" ry="2" />
<text  x="264.88" y="145.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (9,716 us, 0.05%)</title><rect x="80.8" y="103" width="0.6" height="15.0" fill="rgb(111.669418097963,145.988367655028,145.988367655028)" rx="2" ry="2" />
<text  x="83.83" y="113.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (9,716 us, 0.05%)</title><rect x="80.8" y="119" width="0.6" height="15.0" fill="rgb(145.332685153647,125.540005706221,145.332685153647)" rx="2" ry="2" />
<text  x="83.83" y="129.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (10,470 us, 0.05%)</title><rect x="259.1" y="103" width="0.6" height="15.0" fill="rgb(153.010009740448,119.7434080101,119.7434080101)" rx="2" ry="2" />
<text  x="262.12" y="113.5" ></text>
</g>
<g >
<title>firedrake (20,898,879 us, 100.00%)</title><rect x="10.0" y="55" width="1180.0" height="15.0" fill="rgb(130.746778326639,162.436570970082,130.746778326639)" rx="2" ry="2" />
<text  x="13.00" y="65.5" >firedrake</text>
</g>
<g >
<title>DMPlexSymmetrize (2,317 us, 0.01%)</title><rect x="86.8" y="87" width="0.2" height="15.0" fill="rgb(113.201521446226,146.385579634207,146.385579634207)" rx="2" ry="2" />
<text  x="89.83" y="97.5" ></text>
</g>
<g >
<title>CreateMesh (24,422 us, 0.12%)</title><rect x="84.0" y="71" width="1.3" height="15.0" fill="rgb(130.929719075879,150.981779019672,150.981779019672)" rx="2" ry="2" />
<text  x="86.96" y="81.5" ></text>
</g>
<g >
<title>firedrake.functionspace.MixedFunctionSpace (8,040 us, 0.04%)</title><rect x="261.9" y="151" width="0.4" height="15.0" fill="rgb(147.792724977551,147.792724977551,156.024398382752)" rx="2" ry="2" />
<text  x="264.88" y="161.5" ></text>
</g>
<g >
<title>firedrake.interpolation.make_interpolator (38,634 us, 0.18%)</title><rect x="265.0" y="135" width="2.2" height="15.0" fill="rgb(152.206582086239,113.583795994498,113.583795994498)" rx="2" ry="2" />
<text  x="268.00" y="145.5" ></text>
</g>
<g >
<title>CreateMesh (3,311 us, 0.02%)</title><rect x="84.4" y="87" width="0.2" height="15.0" fill="rgb(154.944512627192,154.944512627192,143.192638116391)" rx="2" ry="2" />
<text  x="87.37" y="97.5" ></text>
</g>
<g >
<title>Log_Event_form0_cell_integral_otherwise (8,604 us, 0.04%)</title><rect x="353.2" y="151" width="0.5" height="15.0" fill="rgb(154.496041100249,154.496041100249,141.019276101206)" rx="2" ry="2" />
<text  x="356.23" y="161.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (2,862 us, 0.01%)</title><rect x="260.2" y="119" width="0.2" height="15.0" fill="rgb(154.846279995262,154.846279995262,142.716587669345)" rx="2" ry="2" />
<text  x="263.20" y="129.5" ></text>
</g>
<g >
<title>firedrake.parloops.par_loop (1,512,434 us, 7.24%)</title><rect x="267.2" y="135" width="85.4" height="15.0" fill="rgb(156.696828590926,148.009019197098,148.009019197098)" rx="2" ry="2" />
<text  x="270.18" y="145.5" >firedrake..</text>
</g>
<g >
<title>firedrake.functionspace.VectorFunctionSpace (9,716 us, 0.05%)</title><rect x="80.8" y="87" width="0.6" height="15.0" fill="rgb(133.859834503376,133.859834503376,153.327709903879)" rx="2" ry="2" />
<text  x="83.83" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (45,713 us, 0.22%)</title><rect x="81.4" y="87" width="2.6" height="15.0" fill="rgb(156.681686666973,147.892931113463,147.892931113463)" rx="2" ry="2" />
<text  x="84.38" y="97.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_pyop2_kernel_uniform_extrusion (1,216,909 us, 5.82%)</title><rect x="12.1" y="119" width="68.7" height="15.0" fill="rgb(105.244299759194,144.322596233865,144.322596233865)" rx="2" ry="2" />
<text  x="15.12" y="129.5" >Parloo..</text>
</g>
<g >
<title>firedrake.assemble.allocate_matrix (6,971 us, 0.03%)</title><rect x="260.0" y="87" width="0.4" height="15.0" fill="rgb(106.390518347888,144.619764016119,144.619764016119)" rx="2" ry="2" />
<text  x="262.97" y="97.5" ></text>
</g>
<g >
<title>HybridInit (1,637,139 us, 7.83%)</title><rect x="260.4" y="119" width="92.4" height="15.0" fill="rgb(142.711316936833,160.488855382376,142.711316936833)" rx="2" ry="2" />
<text  x="263.36" y="129.5" >HybridInit</text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (5,277 us, 0.03%)</title><rect x="264.7" y="215" width="0.3" height="15.0" fill="rgb(140.16379552888,160.903568169717,140.16379552888)" rx="2" ry="2" />
<text  x="267.70" y="225.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.action (4,109 us, 0.02%)</title><rect x="260.0" y="119" width="0.2" height="15.0" fill="rgb(150.053203272141,159.293664583605,150.053203272141)" rx="2" ry="2" />
<text  x="262.97" y="129.5" ></text>
</g>
<g >
<title>firedrake.mesh.MeshTopology._facets (21,163 us, 0.10%)</title><rect x="82.8" y="135" width="1.2" height="15.0" fill="rgb(134.154928103578,134.154928103578,153.384824794241)" rx="2" ry="2" />
<text  x="85.76" y="145.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalProblem.__init__ (10,470 us, 0.05%)</title><rect x="259.1" y="87" width="0.6" height="15.0" fill="rgb(146.468277760581,128.449961761489,146.468277760581)" rx="2" ry="2" />
<text  x="262.12" y="97.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (4,467,311 us, 21.38%)</title><rect x="353.7" y="151" width="252.2" height="15.0" fill="rgb(136.065441479776,161.570742084688,136.065441479776)" rx="2" ry="2" />
<text  x="356.71" y="161.5" >pyop2.global_kernel.GlobalKern..</text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.__init__ (11,575 us, 0.06%)</title><rect x="259.7" y="71" width="0.7" height="15.0" fill="rgb(116.810124386451,116.810124386451,150.027766010281)" rx="2" ry="2" />
<text  x="262.71" y="81.5" ></text>
</g>
<g >
<title>ParLoopExecute (1,216,909 us, 5.82%)</title><rect x="12.1" y="103" width="68.7" height="15.0" fill="rgb(153.497509127851,123.480903313523,123.480903313523)" rx="2" ry="2" />
<text  x="15.12" y="113.5" >ParLoo..</text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (5,159 us, 0.02%)</title><rect x="262.0" y="183" width="0.3" height="15.0" fill="rgb(124.779224308369,149.38720630217,149.38720630217)" rx="2" ry="2" />
<text  x="265.04" y="193.5" ></text>
</g>
<g >
<title>firedrake.extrusion_utils.make_extruded_coords (1,251,686 us, 5.99%)</title><rect x="10.2" y="87" width="70.6" height="15.0" fill="rgb(156.521800941439,146.667140551031,146.667140551031)" rx="2" ry="2" />
<text  x="13.16" y="97.5" >firedra..</text>
</g>
<g >
<title>Parloop_Cells_wrap_form1_cell_integral_otherwise (8,976,372 us, 42.95%)</title><rect x="605.9" y="135" width="506.9" height="15.0" fill="rgb(112.017461772146,112.017461772146,149.100153891383)" rx="2" ry="2" />
<text  x="608.95" y="145.5" >Parloop_Cells_wrap_form1_cell_integral_otherwise</text>
</g>
<g >
<title>CreateExtMesh (1,264,148 us, 6.05%)</title><rect x="10.0" y="71" width="71.4" height="15.0" fill="rgb(155.619581205194,139.750122573153,139.750122573153)" rx="2" ry="2" />
<text  x="13.00" y="81.5" >CreateE..</text>
</g>
<g >
<title>Mesh: numbering (8,419 us, 0.04%)</title><rect x="84.6" y="87" width="0.4" height="15.0" fill="rgb(131.063149446727,162.385068694719,131.063149446727)" rx="2" ry="2" />
<text  x="87.56" y="97.5" ></text>
</g>
<g >
<title>Mesh: reorder (5,370 us, 0.03%)</title><rect x="85.0" y="87" width="0.3" height="15.0" fill="rgb(115.699070576574,115.699070576574,149.812723337401)" rx="2" ry="2" />
<text  x="88.03" y="97.5" ></text>
</g>
<g >
<title>PCSetUp (1,637,139 us, 7.83%)</title><rect x="260.4" y="103" width="92.4" height="15.0" fill="rgb(150.167815069443,150.167815069443,120.044026874991)" rx="2" ry="2" />
<text  x="263.36" y="113.5" >PCSetUp</text>
</g>
<g >
<title>SNESFunctionEval (14,827,596 us, 70.95%)</title><rect x="352.8" y="103" width="837.2" height="15.0" fill="rgb(123.904772121803,163.55038593366,123.904772121803)" rx="2" ry="2" />
<text  x="355.80" y="113.5" >SNESFunctionEval</text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (45,713 us, 0.22%)</title><rect x="81.4" y="103" width="2.6" height="15.0" fill="rgb(141.371854771284,153.688999385148,153.688999385148)" rx="2" ry="2" />
<text  x="84.38" y="113.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (45,713 us, 0.22%)</title><rect x="81.4" y="119" width="2.6" height="15.0" fill="rgb(152.261642814242,114.00592824252,114.00592824252)" rx="2" ry="2" />
<text  x="84.38" y="129.5" ></text>
</g>
<g >
<title>firedrake.functionspace.make_scalar_element (3,547 us, 0.02%)</title><rect x="264.4" y="199" width="0.2" height="15.0" fill="rgb(120.407449761063,120.407449761063,150.724022534399)" rx="2" ry="2" />
<text  x="267.37" y="209.5" ></text>
</g>
<g >
<title>SNESSolve (16,464,735 us, 78.78%)</title><rect x="260.4" y="87" width="929.6" height="15.0" fill="rgb(145.187194682609,125.167186374186,145.187194682609)" rx="2" ry="2" />
<text  x="263.36" y="97.5" >SNESSolve</text>
</g>
<g >
<title>DMPlexStratify (3,642 us, 0.02%)</title><rect x="86.6" y="87" width="0.2" height="15.0" fill="rgb(139.967909526809,139.967909526809,154.509917972931)" rx="2" ry="2" />
<text  x="89.63" y="97.5" ></text>
</g>
<g >
<title>ParLoopExecute (1,501,222 us, 7.18%)</title><rect x="267.8" y="151" width="84.8" height="15.0" fill="rgb(152.053708274146,152.053708274146,129.183355482398)" rx="2" ry="2" />
<text  x="270.81" y="161.5" >ParLoopEx..</text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.solve (16,464,735 us, 78.78%)</title><rect x="260.4" y="71" width="929.6" height="15.0" fill="rgb(155.657910409634,140.043979807193,140.043979807193)" rx="2" ry="2" />
<text  x="263.36" y="81.5" >firedrake.variational_solver.NonlinearVariationalSolver.solve</text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (5,277 us, 0.03%)</title><rect x="264.7" y="231" width="0.3" height="15.0" fill="rgb(108.564741497238,145.183451499284,145.183451499284)" rx="2" ry="2" />
<text  x="267.70" y="241.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (5,159 us, 0.02%)</title><rect x="262.0" y="199" width="0.3" height="15.0" fill="rgb(127.670810818807,127.670810818807,152.129834352027)" rx="2" ry="2" />
<text  x="265.04" y="209.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (17,734 us, 0.08%)</title><rect x="262.3" y="167" width="1.0" height="15.0" fill="rgb(134.314899809578,134.314899809578,153.415787059918)" rx="2" ry="2" />
<text  x="265.34" y="177.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (9,716 us, 0.05%)</title><rect x="80.8" y="151" width="0.6" height="15.0" fill="rgb(111.247242290369,145.878914667873,145.878914667873)" rx="2" ry="2" />
<text  x="83.83" y="161.5" ></text>
</g>
<g >
<title>Log_Event_form1_cell_integral_otherwise (13,152 us, 0.06%)</title><rect x="606.2" y="151" width="0.7" height="15.0" fill="rgb(110.857543272903,110.857543272903,148.875653536691)" rx="2" ry="2" />
<text  x="609.17" y="161.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (15,169 us, 0.07%)</title><rect x="264.1" y="183" width="0.9" height="15.0" fill="rgb(154.243343714925,129.198968481089,129.198968481089)" rx="2" ry="2" />
<text  x="267.14" y="193.5" ></text>
</g>
<g >
<title>PetscBarrier (28,820 us, 0.14%)</title><rect x="85.3" y="71" width="1.7" height="15.0" fill="rgb(149.661108179062,149.661108179062,117.5884473293)" rx="2" ry="2" />
<text  x="88.34" y="81.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (1,501,222 us, 7.18%)</title><rect x="267.8" y="167" width="84.8" height="15.0" fill="rgb(148.457673925766,148.457673925766,111.756419794096)" rx="2" ry="2" />
<text  x="270.81" y="177.5" >Parloop_C..</text>
</g>
</g>
</svg>
