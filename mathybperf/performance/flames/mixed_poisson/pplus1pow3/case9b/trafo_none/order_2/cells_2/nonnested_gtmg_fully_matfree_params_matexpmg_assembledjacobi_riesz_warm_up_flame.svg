<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="283" onload="init(evt)" viewBox="0 0 1200 283" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:13px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:18px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 13 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (1 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="283.0" fill="url(#background)"  />
<text id="title" x="600.00" y="26" >Firedrake example</text>
<text id="details" x="10.00" y="265" > </text>
<text id="unzoom" x="10.00" y="26" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="26" >Search</text>
<text id="ignorecase" x="1174.00" y="26" >ic</text>
<text id="matched" x="1090.00" y="265" > </text>
<g id="frames">
<g >
<title>firedrake.slate.slac.optimise.optimise (7,458 us, 0.04%)</title><rect x="349.6" y="167" width="0.4" height="15.0" fill="rgb(132.092376649325,162.217520080342,132.092376649325)" rx="2" ry="2" />
<text  x="352.55" y="177.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (3,292 us, 0.02%)</title><rect x="351.9" y="199" width="0.2" height="15.0" fill="rgb(112.419033277363,112.419033277363,149.177877408522)" rx="2" ry="2" />
<text  x="354.90" y="209.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.action (14,919 us, 0.07%)</title><rect x="263.6" y="87" width="0.9" height="15.0" fill="rgb(155.650625041981,139.988125321856,139.988125321856)" rx="2" ry="2" />
<text  x="266.61" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (4,025 us, 0.02%)</title><rect x="353.9" y="231" width="0.2" height="15.0" fill="rgb(113.967665275281,146.584209515814,146.584209515814)" rx="2" ry="2" />
<text  x="356.91" y="241.5" ></text>
</g>
<g >
<title>ParLoopExecute (1,122,521 us, 5.44%)</title><rect x="12.2" y="103" width="64.2" height="15.0" fill="rgb(135.735136698397,100.946287789642,135.735136698397)" rx="2" ry="2" />
<text  x="15.18" y="113.5" >ParLoo..</text>
</g>
<g >
<title>firedrake.ufl_expr.action (4,234 us, 0.02%)</title><rect x="266.0" y="119" width="0.2" height="15.0" fill="rgb(135.336015459401,161.689485855446,135.336015459401)" rx="2" ry="2" />
<text  x="268.99" y="129.5" ></text>
</g>
<g >
<title>firedrake.mesh.MeshTopology._facets (21,102 us, 0.10%)</title><rect x="78.4" y="135" width="1.2" height="15.0" fill="rgb(156.450375016605,146.119541793974,146.119541793974)" rx="2" ry="2" />
<text  x="81.41" y="145.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (17,900 us, 0.09%)</title><rect x="353.1" y="135" width="1.0" height="15.0" fill="rgb(150.25703481638,159.26048270431,150.25703481638)" rx="2" ry="2" />
<text  x="356.11" y="145.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (47,192 us, 0.23%)</title><rect x="76.9" y="87" width="2.7" height="15.0" fill="rgb(146.100037663926,127.506346513811,146.100037663926)" rx="2" ry="2" />
<text  x="79.92" y="97.5" ></text>
</g>
<g >
<title>DMPlexInterp (4,933 us, 0.02%)</title><rect x="263.3" y="119" width="0.3" height="15.0" fill="rgb(113.502439395226,146.463595398762,146.463595398762)" rx="2" ry="2" />
<text  x="266.32" y="129.5" ></text>
</g>
<g >
<title>firedrake.utility_meshes.RectangleMesh (12,427 us, 0.06%)</title><rect x="262.9" y="87" width="0.7" height="15.0" fill="rgb(148.148149073754,148.148149073754,110.256414742039)" rx="2" ry="2" />
<text  x="265.89" y="97.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (1,117,334 us, 5.42%)</title><rect x="356.1" y="183" width="64.0" height="15.0" fill="rgb(142.891736344944,160.459484781056,142.891736344944)" rx="2" ry="2" />
<text  x="359.13" y="193.5" >pyop2...</text>
</g>
<g >
<title>firedrake.mesh._from_cell_list (7,499 us, 0.04%)</title><rect x="263.2" y="103" width="0.4" height="15.0" fill="rgb(141.884447902396,116.70389774989,141.884447902396)" rx="2" ry="2" />
<text  x="266.18" y="113.5" ></text>
</g>
<g >
<title>DMPlexSymmetrize (2,254 us, 0.01%)</title><rect x="82.4" y="87" width="0.1" height="15.0" fill="rgb(144.181234655625,154.41735713294,154.41735713294)" rx="2" ry="2" />
<text  x="85.40" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (17,967 us, 0.09%)</title><rect x="352.1" y="183" width="1.0" height="15.0" fill="rgb(135.873425963652,161.602000424522,135.873425963652)" rx="2" ry="2" />
<text  x="355.09" y="193.5" ></text>
</g>
<g >
<title>firedrake.functionspace.MixedFunctionSpace (3,292 us, 0.02%)</title><rect x="351.9" y="151" width="0.2" height="15.0" fill="rgb(110.876234238378,145.782727395135,145.782727395135)" rx="2" ry="2" />
<text  x="354.90" y="161.5" ></text>
</g>
<g >
<title>HybridRHS (85,625 us, 0.42%)</title><rect x="345.1" y="151" width="4.9" height="15.0" fill="rgb(155.99705036413,142.644052791664,142.644052791664)" rx="2" ry="2" />
<text  x="348.08" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspace.VectorFunctionSpace (8,671 us, 0.04%)</title><rect x="76.4" y="87" width="0.5" height="15.0" fill="rgb(138.171129220321,161.22795570832,138.171129220321)" rx="2" ry="2" />
<text  x="79.42" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (47,192 us, 0.23%)</title><rect x="76.9" y="119" width="2.7" height="15.0" fill="rgb(156.362340996755,145.444614308454,145.444614308454)" rx="2" ry="2" />
<text  x="79.92" y="129.5" ></text>
</g>
<g >
<title>KSPSolve (1,460,855 us, 7.09%)</title><rect x="266.4" y="103" width="83.6" height="15.0" fill="rgb(124.177696947606,124.177696947606,151.453747796311)" rx="2" ry="2" />
<text  x="269.37" y="113.5" >KSPSolve</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (1,364,327 us, 6.62%)</title><rect x="267.0" y="215" width="78.1" height="15.0" fill="rgb(152.008166473313,142.645926587865,152.008166473313)" rx="2" ry="2" />
<text  x="270.00" y="225.5" >pyop2.gl..</text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (12,863 us, 0.06%)</title><rect x="353.4" y="167" width="0.7" height="15.0" fill="rgb(141.931130943969,153.833996911399,153.833996911399)" rx="2" ry="2" />
<text  x="356.40" y="177.5" ></text>
</g>
<g >
<title>firedrake.assemble.allocate_matrix (6,776 us, 0.03%)</title><rect x="266.0" y="87" width="0.4" height="15.0" fill="rgb(141.256199161798,115.094010352107,141.256199161798)" rx="2" ry="2" />
<text  x="268.99" y="97.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (4,711 us, 0.02%)</title><rect x="1189.7" y="151" width="0.3" height="15.0" fill="rgb(144.158513679323,144.158513679323,155.321002647611)" rx="2" ry="2" />
<text  x="1192.73" y="161.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_pyop2_kernel_uniform_extrusion (1,122,521 us, 5.44%)</title><rect x="12.2" y="119" width="64.2" height="15.0" fill="rgb(127.591380283342,162.950240418991,127.591380283342)" rx="2" ry="2" />
<text  x="15.18" y="129.5" >Parloo..</text>
</g>
<g >
<title>Log_Event_form0_cell_integral_otherwise (6,855 us, 0.03%)</title><rect x="420.7" y="151" width="0.4" height="15.0" fill="rgb(144.33811127164,144.33811127164,155.35576347193)" rx="2" ry="2" />
<text  x="423.69" y="161.5" ></text>
</g>
<g >
<title>firedrake (20,618,271 us, 100.00%)</title><rect x="10.0" y="55" width="1180.0" height="15.0" fill="rgb(138.493962355745,152.942879129267,152.942879129267)" rx="2" ry="2" />
<text  x="13.00" y="65.5" >firedrake</text>
</g>
<g >
<title>firedrake.parloops.par_loop (1,124,471 us, 5.45%)</title><rect x="355.7" y="135" width="64.4" height="15.0" fill="rgb(142.840145519603,160.467883287507,142.840145519603)" rx="2" ry="2" />
<text  x="358.72" y="145.5" >firedr..</text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalProblem.__init__ (22,495 us, 0.11%)</title><rect x="264.5" y="87" width="1.2" height="15.0" fill="rgb(154.716122520572,132.823605991055,132.823605991055)" rx="2" ry="2" />
<text  x="267.46" y="97.5" ></text>
</g>
<g >
<title>firedrake.matrix_free.operators.ImplicitMatrixContext.__init__ (6,776 us, 0.03%)</title><rect x="266.0" y="103" width="0.4" height="15.0" fill="rgb(152.248202157568,113.902883208022,113.902883208022)" rx="2" ry="2" />
<text  x="268.99" y="113.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (3,292 us, 0.02%)</title><rect x="351.9" y="183" width="0.2" height="15.0" fill="rgb(145.635131296806,145.635131296806,155.606799605833)" rx="2" ry="2" />
<text  x="354.90" y="193.5" ></text>
</g>
<g >
<title>FunctionSpaceData: CreateElement (10,217 us, 0.05%)</title><rect x="77.8" y="135" width="0.6" height="15.0" fill="rgb(141.445765727537,160.69487534668,141.445765727537)" rx="2" ry="2" />
<text  x="80.82" y="145.5" ></text>
</g>
<g >
<title>ParLoopExecute (1,117,334 us, 5.42%)</title><rect x="356.1" y="151" width="64.0" height="15.0" fill="rgb(147.443478962476,159.718503424713,147.443478962476)" rx="2" ry="2" />
<text  x="359.13" y="161.5" >ParLoo..</text>
</g>
<g >
<title>SNESSolve (16,138,603 us, 78.27%)</title><rect x="266.4" y="87" width="923.6" height="15.0" fill="rgb(150.280655987134,150.280655987134,120.590871322263)" rx="2" ry="2" />
<text  x="269.37" y="97.5" >SNESSolve</text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (17,900 us, 0.09%)</title><rect x="353.1" y="151" width="1.0" height="15.0" fill="rgb(119.415926548227,147.996721697689,147.996721697689)" rx="2" ry="2" />
<text  x="356.11" y="161.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (1,117,334 us, 5.42%)</title><rect x="356.1" y="167" width="64.0" height="15.0" fill="rgb(115.20445658523,146.904859114689,146.904859114689)" rx="2" ry="2" />
<text  x="359.13" y="177.5" >Parloo..</text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (17,967 us, 0.09%)</title><rect x="352.1" y="151" width="1.0" height="15.0" fill="rgb(149.816077200002,159.332266502325,149.816077200002)" rx="2" ry="2" />
<text  x="355.09" y="161.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_form0_cell_integral_otherwise (4,709,953 us, 22.84%)</title><rect x="420.5" y="135" width="269.6" height="15.0" fill="rgb(156.012973948662,142.766133606409,142.766133606409)" rx="2" ry="2" />
<text  x="423.55" y="145.5" >Parloop_Cells_wrap_form0_cell_int..</text>
</g>
<g >
<title>CreateFunctionSpace (8,847 us, 0.04%)</title><rect x="353.6" y="183" width="0.5" height="15.0" fill="rgb(137.957228152206,137.957228152206,154.120753835911)" rx="2" ry="2" />
<text  x="356.63" y="193.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.LinearVariationalProblem.__init__ (37,414 us, 0.18%)</title><rect x="263.6" y="71" width="2.1" height="15.0" fill="rgb(152.758167791896,152.758167791896,132.597274683802)" rx="2" ry="2" />
<text  x="266.61" y="81.5" ></text>
</g>
<g >
<title>CreateExtMesh (1,169,229 us, 5.67%)</title><rect x="10.0" y="71" width="66.9" height="15.0" fill="rgb(145.401912954352,160.050851379524,145.401912954352)" rx="2" ry="2" />
<text  x="13.00" y="81.5" >Create..</text>
</g>
<g >
<title>CreateMesh (23,928 us, 0.12%)</title><rect x="79.6" y="71" width="1.4" height="15.0" fill="rgb(111.191288963058,145.864408249682,145.864408249682)" rx="2" ry="2" />
<text  x="82.62" y="81.5" ></text>
</g>
<g >
<title>HybridInit (1,227,648 us, 5.95%)</title><rect x="350.0" y="119" width="70.2" height="15.0" fill="rgb(149.798721112642,149.798721112642,118.255340776651)" rx="2" ry="2" />
<text  x="352.98" y="129.5" >HybridI..</text>
</g>
<g >
<title>CreateFunctionSpace (21,259 us, 0.10%)</title><rect x="351.9" y="135" width="1.2" height="15.0" fill="rgb(152.901392693716,118.910677318492,118.910677318492)" rx="2" ry="2" />
<text  x="354.90" y="145.5" ></text>
</g>
<g >
<title>SCForwardElim (1,460,855 us, 7.09%)</title><rect x="266.4" y="135" width="83.6" height="15.0" fill="rgb(148.115393048885,148.115393048885,110.097674006133)" rx="2" ry="2" />
<text  x="269.37" y="145.5" >SCForwar..</text>
</g>
<g >
<title>all (20,618,271 us, 100%)</title><rect x="10.0" y="39" width="1180.0" height="15.0" fill="rgb(125.045221969708,149.456168658813,149.456168658813)" rx="2" ry="2" />
<text  x="13.00" y="49.5" ></text>
</g>
<g >
<title>SNESFunctionEval (13,450,100 us, 65.23%)</title><rect x="420.2" y="103" width="769.8" height="15.0" fill="rgb(155.396093773183,138.036718927737,138.036718927737)" rx="2" ry="2" />
<text  x="423.24" y="113.5" >SNESFunctionEval</text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (8,671 us, 0.04%)</title><rect x="76.4" y="119" width="0.5" height="15.0" fill="rgb(152.567088418745,116.347677877043,116.347677877043)" rx="2" ry="2" />
<text  x="79.42" y="129.5" ></text>
</g>
<g >
<title>PCApply (1,460,855 us, 7.09%)</title><rect x="266.4" y="119" width="83.6" height="15.0" fill="rgb(148.278251426791,148.278251426791,110.886910760603)" rx="2" ry="2" />
<text  x="269.37" y="129.5" >PCApply</text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (2,427 us, 0.01%)</title><rect x="1189.9" y="167" width="0.1" height="15.0" fill="rgb(105.203774773252,144.312089756028,144.312089756028)" rx="2" ry="2" />
<text  x="1192.86" y="177.5" ></text>
</g>
<g >
<title>DMPlexStratify (3,647 us, 0.02%)</title><rect x="82.2" y="87" width="0.2" height="15.0" fill="rgb(111.104124772441,111.104124772441,148.923378988214)" rx="2" ry="2" />
<text  x="85.19" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (8,671 us, 0.04%)</title><rect x="76.4" y="151" width="0.5" height="15.0" fill="rgb(114.656586492871,146.762818720374,146.762818720374)" rx="2" ry="2" />
<text  x="79.42" y="161.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (2,542 us, 0.01%)</title><rect x="266.2" y="119" width="0.2" height="15.0" fill="rgb(149.109593408842,149.109593408842,114.915721904388)" rx="2" ry="2" />
<text  x="269.23" y="129.5" ></text>
</g>
<g >
<title>PCSetUp (1,227,648 us, 5.95%)</title><rect x="350.0" y="103" width="70.2" height="15.0" fill="rgb(134.887821896174,134.887821896174,153.526675205711)" rx="2" ry="2" />
<text  x="352.98" y="113.5" >PCSetUp</text>
</g>
<g >
<title>CreateFunctionSpace (8,671 us, 0.04%)</title><rect x="76.4" y="103" width="0.5" height="15.0" fill="rgb(152.377742747958,114.896027734344,114.896027734344)" rx="2" ry="2" />
<text  x="79.42" y="113.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (4,025 us, 0.02%)</title><rect x="353.9" y="215" width="0.2" height="15.0" fill="rgb(156.404121526473,145.764931702959,145.764931702959)" rx="2" ry="2" />
<text  x="356.91" y="225.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (3,292 us, 0.02%)</title><rect x="351.9" y="167" width="0.2" height="15.0" fill="rgb(143.75960157484,121.508979035528,143.75960157484)" rx="2" ry="2" />
<text  x="354.90" y="177.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (3,292 us, 0.02%)</title><rect x="351.9" y="215" width="0.2" height="15.0" fill="rgb(144.787946015625,160.150799485828,144.787946015625)" rx="2" ry="2" />
<text  x="354.90" y="225.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (7,455,555 us, 36.16%)</title><rect x="690.8" y="151" width="426.7" height="15.0" fill="rgb(128.982448191367,162.723787503731,128.982448191367)" rx="2" ry="2" />
<text  x="693.83" y="161.5" >pyop2.global_kernel.GlobalKernel.compile</text>
</g>
<g >
<title>firedrake.utility_meshes.SquareMesh (12,427 us, 0.06%)</title><rect x="262.9" y="71" width="0.7" height="15.0" fill="rgb(135.878406813141,135.878406813141,153.718401318672)" rx="2" ry="2" />
<text  x="265.89" y="81.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.solve (16,138,603 us, 78.27%)</title><rect x="266.4" y="71" width="923.6" height="15.0" fill="rgb(141.718579354431,141.718579354431,154.848757294406)" rx="2" ry="2" />
<text  x="269.37" y="81.5" >firedrake.variational_solver.NonlinearVariationalSolver.solve</text>
</g>
<g >
<title>CreateMesh (3,221 us, 0.02%)</title><rect x="80.0" y="87" width="0.2" height="15.0" fill="rgb(148.130584618321,159.606649015622,148.130584618321)" rx="2" ry="2" />
<text  x="83.03" y="97.5" ></text>
</g>
<g >
<title>Mesh: numbering (8,290 us, 0.04%)</title><rect x="80.2" y="87" width="0.5" height="15.0" fill="rgb(139.793213880294,139.793213880294,154.476105912315)" rx="2" ry="2" />
<text  x="83.21" y="97.5" ></text>
</g>
<g >
<title>Mesh: reorder (5,283 us, 0.03%)</title><rect x="80.7" y="87" width="0.3" height="15.0" fill="rgb(145.939160925354,159.9633924075,145.939160925354)" rx="2" ry="2" />
<text  x="83.68" y="97.5" ></text>
</g>
<g >
<title>firedrake.extrusion_utils.make_extruded_coords (1,157,660 us, 5.61%)</title><rect x="10.2" y="87" width="66.2" height="15.0" fill="rgb(124.596424779323,163.437791314994,124.596424779323)" rx="2" ry="2" />
<text  x="13.17" y="97.5" >firedr..</text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (4,025 us, 0.02%)</title><rect x="353.9" y="199" width="0.2" height="15.0" fill="rgb(128.528203827365,162.797734260662,128.528203827365)" rx="2" ry="2" />
<text  x="356.91" y="209.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (8,197 us, 0.04%)</title><rect x="1189.5" y="135" width="0.5" height="15.0" fill="rgb(136.320244907527,152.379322753803,152.379322753803)" rx="2" ry="2" />
<text  x="1192.53" y="145.5" ></text>
</g>
<g >
<title>firedrake.interpolation.make_interpolator (27,595 us, 0.13%)</title><rect x="354.1" y="135" width="1.6" height="15.0" fill="rgb(138.489059590362,108.003215200303,138.489059590362)" rx="2" ry="2" />
<text  x="357.14" y="145.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.__init__ (10,974 us, 0.05%)</title><rect x="265.7" y="71" width="0.7" height="15.0" fill="rgb(153.954712102036,153.954712102036,138.395912494482)" rx="2" ry="2" />
<text  x="268.75" y="81.5" ></text>
</g>
<g >
<title>FunctionSpaceData: CreateElement (14,906 us, 0.07%)</title><rect x="352.3" y="199" width="0.8" height="15.0" fill="rgb(142.741629292398,160.483920812865,142.741629292398)" rx="2" ry="2" />
<text  x="355.26" y="209.5" ></text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (1,266,495 us, 6.14%)</title><rect x="1117.5" y="119" width="72.5" height="15.0" fill="rgb(112.27701129488,112.27701129488,149.15038928288)" rx="2" ry="2" />
<text  x="1120.52" y="129.5" >firedra..</text>
</g>
<g >
<title>CreateFunctionSpace (47,192 us, 0.23%)</title><rect x="76.9" y="71" width="2.7" height="15.0" fill="rgb(136.995779515613,104.176685008759,136.995779515613)" rx="2" ry="2" />
<text  x="79.92" y="81.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (8,671 us, 0.04%)</title><rect x="76.4" y="135" width="0.5" height="15.0" fill="rgb(143.608047479174,143.608047479174,155.214460802421)" rx="2" ry="2" />
<text  x="79.42" y="145.5" ></text>
</g>
<g >
<title>PetscBarrier (26,891 us, 0.13%)</title><rect x="81.0" y="71" width="1.5" height="15.0" fill="rgb(153.344123316338,153.344123316338,135.436905302254)" rx="2" ry="2" />
<text  x="83.99" y="81.5" ></text>
</g>
<g >
<title>HybridBreak (1,375,230 us, 6.67%)</title><rect x="266.4" y="151" width="78.7" height="15.0" fill="rgb(112.625460959742,112.625460959742,149.217831153498)" rx="2" ry="2" />
<text  x="269.37" y="161.5" >HybridBr..</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (4,700,620 us, 22.80%)</title><rect x="421.1" y="151" width="269.0" height="15.0" fill="rgb(109.255120127367,145.36243855154,145.36243855154)" rx="2" ry="2" />
<text  x="424.08" y="161.5" >pyop2.global_kernel.GlobalKernel...</text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (2,936 us, 0.01%)</title><rect x="420.1" y="135" width="0.1" height="15.0" fill="rgb(147.769549993903,147.769549993903,108.421665355069)" rx="2" ry="2" />
<text  x="423.07" y="145.5" ></text>
</g>
<g >
<title>firedrake.parloops.par_loop (1,372,747 us, 6.66%)</title><rect x="266.5" y="167" width="78.6" height="15.0" fill="rgb(126.266583643115,163.16590498833,126.266583643115)" rx="2" ry="2" />
<text  x="269.52" y="177.5" >firedrak..</text>
</g>
<g >
<title>Log_Event_form1_cell_integral_otherwise (9,550 us, 0.05%)</title><rect x="690.3" y="151" width="0.5" height="15.0" fill="rgb(125.394213841502,125.394213841502,151.689202679)" rx="2" ry="2" />
<text  x="693.28" y="161.5" ></text>
</g>
<g >
<title>ParLoopExecute (1,364,327 us, 6.62%)</title><rect x="267.0" y="183" width="78.1" height="15.0" fill="rgb(149.56668273359,159.372865601509,149.56668273359)" rx="2" ry="2" />
<text  x="270.00" y="193.5" >ParLoopE..</text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (47,192 us, 0.23%)</title><rect x="76.9" y="103" width="2.7" height="15.0" fill="rgb(153.36437627684,122.460218122439,122.460218122439)" rx="2" ry="2" />
<text  x="79.92" y="113.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (20,113 us, 0.10%)</title><rect x="264.6" y="103" width="1.1" height="15.0" fill="rgb(131.645553983621,162.290258653829,131.645553983621)" rx="2" ry="2" />
<text  x="267.60" y="113.5" ></text>
</g>
<g >
<title>ParLoopExecute (12,178,225 us, 59.07%)</title><rect x="420.5" y="119" width="697.0" height="15.0" fill="rgb(117.762642486567,117.762642486567,150.212124352239)" rx="2" ry="2" />
<text  x="423.55" y="129.5" >ParLoopExecute</text>
</g>
<g >
<title>Parloop_Cells_wrap_form1_cell_integral_otherwise (7,468,272 us, 36.22%)</title><rect x="690.1" y="135" width="427.4" height="15.0" fill="rgb(149.691535968248,149.691535968248,117.735905076896)" rx="2" ry="2" />
<text  x="693.10" y="145.5" >Parloop_Cells_wrap_form1_cell_integral_otherwise</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (1,122,521 us, 5.44%)</title><rect x="12.2" y="135" width="64.2" height="15.0" fill="rgb(116.231652955514,147.171169284763,147.171169284763)" rx="2" ry="2" />
<text  x="15.18" y="145.5" >pyop2...</text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (1,364,327 us, 6.62%)</title><rect x="267.0" y="199" width="78.1" height="15.0" fill="rgb(151.165794103571,151.165794103571,124.880386809613)" rx="2" ry="2" />
<text  x="270.00" y="209.5" >Parloop_..</text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (17,967 us, 0.09%)</title><rect x="352.1" y="167" width="1.0" height="15.0" fill="rgb(128.624336135094,150.384087146136,150.384087146136)" rx="2" ry="2" />
<text  x="355.09" y="177.5" ></text>
</g>
<g >
<title>firedrake.__init__ (3,151,613 us, 15.29%)</title><rect x="82.5" y="71" width="180.4" height="15.0" fill="rgb(126.523162945399,149.8393385414,149.8393385414)" rx="2" ry="2" />
<text  x="85.53" y="81.5" >firedrake.__init__</text>
</g>
</g>
</svg>
