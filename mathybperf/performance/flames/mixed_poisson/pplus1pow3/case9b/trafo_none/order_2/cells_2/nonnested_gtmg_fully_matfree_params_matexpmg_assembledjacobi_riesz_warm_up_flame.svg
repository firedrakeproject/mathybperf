<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="283" onload="init(evt)" viewBox="0 0 1200 283" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:13px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:18px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 13 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (1 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="283.0" fill="url(#background)"  />
<text id="title" x="600.00" y="26" >Firedrake example</text>
<text id="details" x="10.00" y="265" > </text>
<text id="unzoom" x="10.00" y="26" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="26" >Search</text>
<text id="ignorecase" x="1174.00" y="26" >ic</text>
<text id="matched" x="1090.00" y="265" > </text>
<g id="frames">
<g >
<title>Mesh: numbering (7,393 us, 0.03%)</title><rect x="81.8" y="87" width="0.4" height="15.0" fill="rgb(111.539805382266,145.954764358365,145.954764358365)" rx="2" ry="2" />
<text  x="84.80" y="97.5" ></text>
</g>
<g >
<title>ParLoopExecute (1,337,547 us, 5.62%)</title><rect x="12.0" y="103" width="66.4" height="15.0" fill="rgb(151.105873064179,151.105873064179,124.590000234099)" rx="2" ry="2" />
<text  x="15.01" y="113.5" >ParLoo..</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (1,503,715 us, 6.32%)</title><rect x="217.2" y="215" width="74.7" height="15.0" fill="rgb(148.811057986149,159.495874281325,148.811057986149)" rx="2" ry="2" />
<text  x="220.24" y="225.5" >pyop2.g..</text>
</g>
<g >
<title>ParLoopExecute (1,080,567 us, 4.54%)</title><rect x="307.2" y="151" width="53.6" height="15.0" fill="rgb(155.420440857681,138.223379908891,138.223379908891)" rx="2" ry="2" />
<text  x="310.19" y="161.5" >ParL..</text>
</g>
<g >
<title>Mesh: reorder (4,518 us, 0.02%)</title><rect x="82.2" y="87" width="0.2" height="15.0" fill="rgb(146.990071305105,159.792313973588,146.990071305105)" rx="2" ry="2" />
<text  x="85.16" y="97.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.solve (19,613,497 us, 82.47%)</title><rect x="216.8" y="71" width="973.2" height="15.0" fill="rgb(105.947504609913,144.50490860257,144.50490860257)" rx="2" ry="2" />
<text  x="219.84" y="81.5" >firedrake.variational_solver.NonlinearVariationalSolver.solve</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (1,080,567 us, 4.54%)</title><rect x="307.2" y="183" width="53.6" height="15.0" fill="rgb(152.731576518618,152.731576518618,132.468409282531)" rx="2" ry="2" />
<text  x="310.19" y="193.5" >pyop..</text>
</g>
<g >
<title>CreateFunctionSpace (15,878 us, 0.07%)</title><rect x="303.8" y="135" width="0.8" height="15.0" fill="rgb(126.367717997666,163.149441256194,126.367717997666)" rx="2" ry="2" />
<text  x="306.79" y="145.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (9,858 us, 0.04%)</title><rect x="78.4" y="151" width="0.5" height="15.0" fill="rgb(112.658133903851,112.658133903851,149.224154949133)" rx="2" ry="2" />
<text  x="81.38" y="161.5" ></text>
</g>
<g >
<title>DMPlexStratify (4,079 us, 0.02%)</title><rect x="83.6" y="87" width="0.2" height="15.0" fill="rgb(128.673699208049,128.673699208049,152.323941782203)" rx="2" ry="2" />
<text  x="86.57" y="97.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (17,331 us, 0.07%)</title><rect x="304.6" y="135" width="0.8" height="15.0" fill="rgb(155.468064379062,155.468064379062,145.729850452377)" rx="2" ry="2" />
<text  x="307.58" y="145.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalProblem.__init__ (11,962 us, 0.05%)</title><rect x="215.6" y="87" width="0.6" height="15.0" fill="rgb(139.928205877163,111.69102756023,139.928205877163)" rx="2" ry="2" />
<text  x="218.60" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (49,450 us, 0.21%)</title><rect x="78.9" y="119" width="2.4" height="15.0" fill="rgb(137.319790149972,105.006962259304,137.319790149972)" rx="2" ry="2" />
<text  x="81.87" y="129.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (1,080,567 us, 4.54%)</title><rect x="307.2" y="167" width="53.6" height="15.0" fill="rgb(148.714484718156,134.205867090275,148.714484718156)" rx="2" ry="2" />
<text  x="310.19" y="177.5" >Parl..</text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (11,962 us, 0.05%)</title><rect x="215.6" y="103" width="0.6" height="15.0" fill="rgb(154.030215375033,154.030215375033,138.761812971316)" rx="2" ry="2" />
<text  x="218.60" y="113.5" ></text>
</g>
<g >
<title>PCSetUp (1,181,624 us, 4.97%)</title><rect x="302.3" y="103" width="58.6" height="15.0" fill="rgb(154.399039038914,154.399039038914,140.549189188584)" rx="2" ry="2" />
<text  x="305.32" y="113.5" >PCSetUp</text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (3,705 us, 0.02%)</title><rect x="305.3" y="199" width="0.1" height="15.0" fill="rgb(150.85755807308,150.85755807308,123.386627584926)" rx="2" ry="2" />
<text  x="308.25" y="209.5" ></text>
</g>
<g >
<title>FunctionSpaceData: CreateElement (10,979 us, 0.05%)</title><rect x="79.7" y="135" width="0.6" height="15.0" fill="rgb(152.630995068577,116.837628859088,116.837628859088)" rx="2" ry="2" />
<text  x="82.71" y="145.5" ></text>
</g>
<g >
<title>firedrake (23,782,161 us, 100.00%)</title><rect x="10.0" y="55" width="1180.0" height="15.0" fill="rgb(136.052493231559,161.572849939048,136.052493231559)" rx="2" ry="2" />
<text  x="13.00" y="65.5" >firedrake</text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (3,705 us, 0.02%)</title><rect x="305.3" y="215" width="0.1" height="15.0" fill="rgb(148.243421455259,148.243421455259,110.718119360102)" rx="2" ry="2" />
<text  x="308.25" y="225.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.action (13,998 us, 0.06%)</title><rect x="214.9" y="87" width="0.7" height="15.0" fill="rgb(112.375578855435,146.171446369928,146.171446369928)" rx="2" ry="2" />
<text  x="217.90" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (3,705 us, 0.02%)</title><rect x="305.3" y="231" width="0.1" height="15.0" fill="rgb(155.602575534392,139.61974576367,139.61974576367)" rx="2" ry="2" />
<text  x="308.25" y="241.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (12,541 us, 0.05%)</title><rect x="304.0" y="183" width="0.6" height="15.0" fill="rgb(142.654364063531,118.676807912798,142.654364063531)" rx="2" ry="2" />
<text  x="306.95" y="193.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.LinearVariationalProblem.__init__ (25,960 us, 0.11%)</title><rect x="214.9" y="71" width="1.3" height="15.0" fill="rgb(132.884036350959,93.640343149333,132.884036350959)" rx="2" ry="2" />
<text  x="217.90" y="81.5" ></text>
</g>
<g >
<title>CreateMesh (21,520 us, 0.09%)</title><rect x="81.3" y="71" width="1.1" height="15.0" fill="rgb(156.545531785403,146.849077021419,146.849077021419)" rx="2" ry="2" />
<text  x="84.32" y="81.5" ></text>
</g>
<g >
<title>CreateExtMesh (1,387,984 us, 5.84%)</title><rect x="10.0" y="71" width="68.9" height="15.0" fill="rgb(155.792896432672,141.078872650487,141.078872650487)" rx="2" ry="2" />
<text  x="13.00" y="81.5" >Create..</text>
</g>
<g >
<title>Log_Event_form0_cell_integral_otherwise (11,243 us, 0.05%)</title><rect x="361.4" y="151" width="0.6" height="15.0" fill="rgb(154.755763807815,133.127522526579,133.127522526579)" rx="2" ry="2" />
<text  x="364.40" y="161.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.action (5,010 us, 0.02%)</title><rect x="216.4" y="119" width="0.3" height="15.0" fill="rgb(123.835749949586,163.56162210123,123.835749949586)" rx="2" ry="2" />
<text  x="219.44" y="129.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (1,337,547 us, 5.62%)</title><rect x="12.0" y="135" width="66.4" height="15.0" fill="rgb(144.288569465665,122.864459255766,144.288569465665)" rx="2" ry="2" />
<text  x="15.01" y="145.5" >pyop2...</text>
</g>
<g >
<title>CreateFunctionSpace (8,278 us, 0.03%)</title><rect x="305.0" y="183" width="0.4" height="15.0" fill="rgb(139.637263629476,160.989282664969,139.637263629476)" rx="2" ry="2" />
<text  x="308.03" y="193.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (9,858 us, 0.04%)</title><rect x="78.4" y="103" width="0.5" height="15.0" fill="rgb(142.311487921072,160.553943826802,142.311487921072)" rx="2" ry="2" />
<text  x="81.38" y="113.5" ></text>
</g>
<g >
<title>SNESSolve (19,613,497 us, 82.47%)</title><rect x="216.8" y="87" width="973.2" height="15.0" fill="rgb(153.475809120131,123.31453658767,123.31453658767)" rx="2" ry="2" />
<text  x="219.84" y="97.5" >SNESSolve</text>
</g>
<g >
<title>firedrake.parloops.par_loop (1,087,800 us, 4.57%)</title><rect x="306.8" y="135" width="54.0" height="15.0" fill="rgb(144.280525634421,144.280525634421,155.344617864727)" rx="2" ry="2" />
<text  x="309.84" y="145.5" >fired..</text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (12,541 us, 0.05%)</title><rect x="304.0" y="151" width="0.6" height="15.0" fill="rgb(121.408660326801,148.513356381022,148.513356381022)" rx="2" ry="2" />
<text  x="306.95" y="161.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (4,502 us, 0.02%)</title><rect x="1189.8" y="151" width="0.2" height="15.0" fill="rgb(136.494877636938,102.893123944653,136.494877636938)" rx="2" ry="2" />
<text  x="1192.78" y="161.5" ></text>
</g>
<g >
<title>firedrake.mesh.MeshTopology._facets (21,438 us, 0.09%)</title><rect x="80.3" y="135" width="1.0" height="15.0" fill="rgb(152.885065482769,118.785502034559,118.785502034559)" rx="2" ry="2" />
<text  x="83.26" y="145.5" ></text>
</g>
<g >
<title>firedrake.assemble.allocate_matrix (8,030 us, 0.03%)</title><rect x="216.4" y="87" width="0.4" height="15.0" fill="rgb(154.86105097453,133.934724138065,133.934724138065)" rx="2" ry="2" />
<text  x="219.44" y="97.5" ></text>
</g>
<g >
<title>DMPlexInterp (4,386 us, 0.02%)</title><rect x="214.7" y="119" width="0.2" height="15.0" fill="rgb(127.661760987284,162.938783095093,127.661760987284)" rx="2" ry="2" />
<text  x="217.68" y="129.5" ></text>
</g>
<g >
<title>CreateMesh (4,277 us, 0.02%)</title><rect x="81.6" y="87" width="0.2" height="15.0" fill="rgb(142.672915965383,118.724347161294,142.672915965383)" rx="2" ry="2" />
<text  x="84.59" y="97.5" ></text>
</g>
<g >
<title>firedrake.utility_meshes.SquareMesh (8,704 us, 0.04%)</title><rect x="214.5" y="71" width="0.4" height="15.0" fill="rgb(145.001190231297,160.116085311184,145.001190231297)" rx="2" ry="2" />
<text  x="217.47" y="81.5" ></text>
</g>
<g >
<title>PetscBarrier (30,375 us, 0.13%)</title><rect x="82.4" y="71" width="1.5" height="15.0" fill="rgb(156.385442192523,145.62172347601,145.62172347601)" rx="2" ry="2" />
<text  x="85.39" y="81.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_form1_cell_integral_otherwise (7,419,427 us, 31.20%)</title><rect x="748.4" y="135" width="368.2" height="15.0" fill="rgb(108.707368418672,145.220428849285,145.220428849285)" rx="2" ry="2" />
<text  x="751.44" y="145.5" >Parloop_Cells_wrap_form1_cell_integral_otherw..</text>
</g>
<g >
<title>SCForwardElim (1,722,876 us, 7.24%)</title><rect x="216.8" y="135" width="85.5" height="15.0" fill="rgb(154.430139881965,130.631072428397,130.631072428397)" rx="2" ry="2" />
<text  x="219.84" y="145.5" >SCForward..</text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (1,503,715 us, 6.32%)</title><rect x="217.2" y="199" width="74.7" height="15.0" fill="rgb(132.833192354823,162.096922174796,132.833192354823)" rx="2" ry="2" />
<text  x="220.24" y="209.5" >Parloop..</text>
</g>
<g >
<title>DMPlexSymmetrize (2,560 us, 0.01%)</title><rect x="83.8" y="87" width="0.1" height="15.0" fill="rgb(150.386653858064,150.386653858064,121.104553312154)" rx="2" ry="2" />
<text  x="86.77" y="97.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (3,020 us, 0.01%)</title><rect x="216.7" y="119" width="0.1" height="15.0" fill="rgb(119.700898894445,148.070603417078,148.070603417078)" rx="2" ry="2" />
<text  x="219.69" y="129.5" ></text>
</g>
<g >
<title>firedrake.extrusion_utils.make_extruded_coords (1,374,919 us, 5.78%)</title><rect x="10.2" y="87" width="68.2" height="15.0" fill="rgb(149.563889654281,159.373320288838,149.563889654281)" rx="2" ry="2" />
<text  x="13.16" y="97.5" >firedr..</text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (49,450 us, 0.21%)</title><rect x="78.9" y="87" width="2.4" height="15.0" fill="rgb(154.390248938394,154.390248938394,140.506591009141)" rx="2" ry="2" />
<text  x="81.87" y="97.5" ></text>
</g>
<g >
<title>all (23,782,161 us, 100%)</title><rect x="10.0" y="39" width="1180.0" height="15.0" fill="rgb(129.06066768148,150.497210139643,150.497210139643)" rx="2" ry="2" />
<text  x="13.00" y="49.5" ></text>
</g>
<g >
<title>KSPSolve (1,722,876 us, 7.24%)</title><rect x="216.8" y="103" width="85.5" height="15.0" fill="rgb(115.464053140344,115.464053140344,149.767236091679)" rx="2" ry="2" />
<text  x="219.84" y="113.5" >KSPSolve</text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (3,337 us, 0.01%)</title><rect x="303.8" y="215" width="0.2" height="15.0" fill="rgb(150.838929708219,150.838929708219,123.296351662907)" rx="2" ry="2" />
<text  x="306.79" y="225.5" ></text>
</g>
<g >
<title>firedrake.matrix_free.operators.ImplicitMatrixContext.__init__ (8,030 us, 0.03%)</title><rect x="216.4" y="103" width="0.4" height="15.0" fill="rgb(115.928739676866,115.928739676866,149.857175421329)" rx="2" ry="2" />
<text  x="219.44" y="113.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (7,250 us, 0.03%)</title><rect x="1189.6" y="135" width="0.4" height="15.0" fill="rgb(113.118828751324,113.118828751324,149.313321693805)" rx="2" ry="2" />
<text  x="1192.64" y="145.5" ></text>
</g>
<g >
<title>firedrake.interpolation.make_interpolator (28,215 us, 0.12%)</title><rect x="305.4" y="135" width="1.4" height="15.0" fill="rgb(130.411652693086,162.491126305777,130.411652693086)" rx="2" ry="2" />
<text  x="308.44" y="145.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (2,820 us, 0.01%)</title><rect x="360.8" y="135" width="0.1" height="15.0" fill="rgb(143.478366018872,154.235131930819,154.235131930819)" rx="2" ry="2" />
<text  x="363.81" y="145.5" ></text>
</g>
<g >
<title>firedrake.slate.slac.optimise.optimise (5,763 us, 0.02%)</title><rect x="302.0" y="167" width="0.3" height="15.0" fill="rgb(144.763178721081,124.080645472769,144.763178721081)" rx="2" ry="2" />
<text  x="305.03" y="177.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (49,450 us, 0.21%)</title><rect x="78.9" y="71" width="2.4" height="15.0" fill="rgb(154.766351006715,133.208691051482,133.208691051482)" rx="2" ry="2" />
<text  x="81.87" y="81.5" ></text>
</g>
<g >
<title>HybridRHS (210,940 us, 0.89%)</title><rect x="291.9" y="151" width="10.4" height="15.0" fill="rgb(144.285530222835,144.285530222835,155.345586494742)" rx="2" ry="2" />
<text  x="294.85" y="161.5" ></text>
</g>
<g >
<title>ParLoopExecute (1,503,715 us, 6.32%)</title><rect x="217.2" y="183" width="74.7" height="15.0" fill="rgb(132.119056184393,132.119056184393,152.990785067947)" rx="2" ry="2" />
<text  x="220.24" y="193.5" >ParLoop..</text>
</g>
<g >
<title>CreateFunctionSpace (3,337 us, 0.01%)</title><rect x="303.8" y="167" width="0.2" height="15.0" fill="rgb(116.118957984356,147.141952070018,147.141952070018)" rx="2" ry="2" />
<text  x="306.79" y="177.5" ></text>
</g>
<g >
<title>SNESFunctionEval (16,708,997 us, 70.26%)</title><rect x="360.9" y="103" width="829.1" height="15.0" fill="rgb(116.570897941734,116.570897941734,149.981464117755)" rx="2" ry="2" />
<text  x="363.95" y="113.5" >SNESFunctionEval</text>
</g>
<g >
<title>firedrake.functionspace.MixedFunctionSpace (3,337 us, 0.01%)</title><rect x="303.8" y="151" width="0.2" height="15.0" fill="rgb(137.886155972656,137.886155972656,154.106997930192)" rx="2" ry="2" />
<text  x="306.79" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (3,337 us, 0.01%)</title><rect x="303.8" y="199" width="0.2" height="15.0" fill="rgb(142.092221960529,160.589638285495,142.092221960529)" rx="2" ry="2" />
<text  x="306.79" y="209.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_pyop2_kernel_uniform_extrusion (1,337,547 us, 5.62%)</title><rect x="12.0" y="119" width="66.4" height="15.0" fill="rgb(148.870056482349,159.486269874966,148.870056482349)" rx="2" ry="2" />
<text  x="15.01" y="129.5" >Parloo..</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (7,789,311 us, 32.75%)</title><rect x="362.0" y="151" width="386.4" height="15.0" fill="rgb(153.236033000175,153.236033000175,134.91308300085)" rx="2" ry="2" />
<text  x="364.95" y="161.5" >pyop2.global_kernel.GlobalKernel.compile</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (7,406,979 us, 31.15%)</title><rect x="749.1" y="151" width="367.5" height="15.0" fill="rgb(148.057168860586,148.057168860586,109.81551063207)" rx="2" ry="2" />
<text  x="752.05" y="161.5" >pyop2.global_kernel.GlobalKernel.compile</text>
</g>
<g >
<title>HybridInit (1,181,624 us, 4.97%)</title><rect x="302.3" y="119" width="58.6" height="15.0" fill="rgb(148.626432935287,148.626432935287,112.57425191716)" rx="2" ry="2" />
<text  x="305.32" y="129.5" >Hybri..</text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (9,858 us, 0.04%)</title><rect x="78.4" y="135" width="0.5" height="15.0" fill="rgb(129.214845021947,129.214845021947,152.428679681667)" rx="2" ry="2" />
<text  x="81.38" y="145.5" ></text>
</g>
<g >
<title>firedrake.functionspace.VectorFunctionSpace (9,858 us, 0.04%)</title><rect x="78.4" y="87" width="0.5" height="15.0" fill="rgb(135.122415039024,135.122415039024,153.572080330134)" rx="2" ry="2" />
<text  x="81.38" y="97.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_form0_cell_integral_otherwise (7,804,018 us, 32.81%)</title><rect x="361.2" y="135" width="387.2" height="15.0" fill="rgb(150.021980675149,150.021980675149,119.337290964184)" rx="2" ry="2" />
<text  x="364.22" y="145.5" >Parloop_Cells_wrap_form0_cell_integral_otherwise</text>
</g>
<g >
<title>Log_Event_form1_cell_integral_otherwise (9,577 us, 0.04%)</title><rect x="748.6" y="151" width="0.5" height="15.0" fill="rgb(154.996889256246,154.996889256246,143.446463318732)" rx="2" ry="2" />
<text  x="751.58" y="161.5" ></text>
</g>
<g >
<title>HybridBreak (1,511,936 us, 6.36%)</title><rect x="216.8" y="151" width="75.1" height="15.0" fill="rgb(116.398659722744,147.214467335526,147.214467335526)" rx="2" ry="2" />
<text  x="219.84" y="161.5" >HybridB..</text>
</g>
<g >
<title>PCApply (1,722,876 us, 7.24%)</title><rect x="216.8" y="119" width="85.5" height="15.0" fill="rgb(105.872787211399,144.485537425178,144.485537425178)" rx="2" ry="2" />
<text  x="219.84" y="129.5" >PCApply</text>
</g>
<g >
<title>firedrake.parloops.par_loop (1,511,936 us, 6.36%)</title><rect x="216.8" y="167" width="75.1" height="15.0" fill="rgb(125.727088760137,163.253729736722,125.727088760137)" rx="2" ry="2" />
<text  x="219.84" y="177.5" >firedra..</text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (3,337 us, 0.01%)</title><rect x="303.8" y="183" width="0.2" height="15.0" fill="rgb(117.401520284118,147.474468221808,147.474468221808)" rx="2" ry="2" />
<text  x="306.79" y="193.5" ></text>
</g>
<g >
<title>FunctionSpaceData: CreateElement (9,675 us, 0.04%)</title><rect x="304.1" y="199" width="0.5" height="15.0" fill="rgb(154.163463303892,128.586551996504,128.586551996504)" rx="2" ry="2" />
<text  x="307.10" y="209.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.__init__ (13,033 us, 0.05%)</title><rect x="216.2" y="71" width="0.6" height="15.0" fill="rgb(109.762323776262,109.762323776262,148.663675569599)" rx="2" ry="2" />
<text  x="219.19" y="81.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (17,331 us, 0.07%)</title><rect x="304.6" y="151" width="0.8" height="15.0" fill="rgb(121.941797398747,121.941797398747,151.020993044919)" rx="2" ry="2" />
<text  x="307.58" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (9,858 us, 0.04%)</title><rect x="78.4" y="119" width="0.5" height="15.0" fill="rgb(154.902944432697,134.255907317344,134.255907317344)" rx="2" ry="2" />
<text  x="81.38" y="129.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (12,262 us, 0.05%)</title><rect x="304.8" y="167" width="0.6" height="15.0" fill="rgb(156.297248010839,144.945568083099,144.945568083099)" rx="2" ry="2" />
<text  x="307.83" y="177.5" ></text>
</g>
<g >
<title>firedrake.__init__ (2,631,638 us, 11.07%)</title><rect x="83.9" y="71" width="130.6" height="15.0" fill="rgb(152.112453840386,152.112453840386,129.468045534178)" rx="2" ry="2" />
<text  x="86.90" y="81.5" >firedrake.__ini..</text>
</g>
<g >
<title>ParLoopExecute (15,223,445 us, 64.01%)</title><rect x="361.2" y="119" width="755.4" height="15.0" fill="rgb(151.32361251069,151.32361251069,125.645199090269)" rx="2" ry="2" />
<text  x="364.22" y="129.5" >ParLoopExecute</text>
</g>
<g >
<title>firedrake.mesh._from_cell_list (4,386 us, 0.02%)</title><rect x="214.7" y="103" width="0.2" height="15.0" fill="rgb(123.924697119718,123.924697119718,151.404780087687)" rx="2" ry="2" />
<text  x="217.68" y="113.5" ></text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (1,480,003 us, 6.22%)</title><rect x="1116.6" y="119" width="73.4" height="15.0" fill="rgb(153.51501866049,153.51501866049,136.265090431606)" rx="2" ry="2" />
<text  x="1119.57" y="129.5" >firedra..</text>
</g>
<g >
<title>firedrake.utility_meshes.RectangleMesh (8,704 us, 0.04%)</title><rect x="214.5" y="87" width="0.4" height="15.0" fill="rgb(125.917385903803,163.222751131939,125.917385903803)" rx="2" ry="2" />
<text  x="217.47" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (49,450 us, 0.21%)</title><rect x="78.9" y="103" width="2.4" height="15.0" fill="rgb(138.069748362589,138.069748362589,154.142531941146)" rx="2" ry="2" />
<text  x="81.87" y="113.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (12,541 us, 0.05%)</title><rect x="304.0" y="167" width="0.6" height="15.0" fill="rgb(145.513587430411,145.513587430411,155.583274986531)" rx="2" ry="2" />
<text  x="306.95" y="177.5" ></text>
</g>
</g>
</svg>
