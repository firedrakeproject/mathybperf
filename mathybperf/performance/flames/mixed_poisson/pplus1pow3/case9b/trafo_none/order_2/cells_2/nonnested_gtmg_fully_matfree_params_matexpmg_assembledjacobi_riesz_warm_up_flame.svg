<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="283" onload="init(evt)" viewBox="0 0 1200 283" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:13px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:18px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 13 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (1 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="283.0" fill="url(#background)"  />
<text id="title" x="600.00" y="26" >Firedrake example</text>
<text id="details" x="10.00" y="265" > </text>
<text id="unzoom" x="10.00" y="26" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="26" >Search</text>
<text id="ignorecase" x="1174.00" y="26" >ic</text>
<text id="matched" x="1090.00" y="265" > </text>
<g id="frames">
<g >
<title>PCApply (12,840,070 us, 48.67%)</title><rect x="222.1" y="119" width="574.3" height="15.0" fill="rgb(154.420774614633,154.420774614633,140.654523132454)" rx="2" ry="2" />
<text  x="225.07" y="129.5" >PCApply</text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (10,453 us, 0.04%)</title><rect x="221.1" y="103" width="0.4" height="15.0" fill="rgb(119.90990148107,148.12478927287,148.12478927287)" rx="2" ry="2" />
<text  x="224.08" y="113.5" ></text>
</g>
<g >
<title>firedrake.__init__ (3,401,552 us, 12.89%)</title><rect x="68.0" y="71" width="152.1" height="15.0" fill="rgb(156.286016584297,144.859460479608,144.859460479608)" rx="2" ry="2" />
<text  x="70.96" y="81.5" >firedrake.__init__</text>
</g>
<g >
<title>Mesh: numbering (6,430 us, 0.02%)</title><rect x="66.3" y="87" width="0.3" height="15.0" fill="rgb(144.76472042268,154.568631220695,154.568631220695)" rx="2" ry="2" />
<text  x="69.30" y="97.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalProblem.__init__ (10,453 us, 0.04%)</title><rect x="221.1" y="87" width="0.4" height="15.0" fill="rgb(147.72926728957,159.671979743558,147.72926728957)" rx="2" ry="2" />
<text  x="224.08" y="97.5" ></text>
</g>
<g >
<title>HybridBreak (957,596 us, 3.63%)</title><rect x="222.1" y="151" width="42.8" height="15.0" fill="rgb(155.909485884166,141.972725111942,141.972725111942)" rx="2" ry="2" />
<text  x="225.07" y="161.5" >Hyb..</text>
</g>
<g >
<title>HybridInit (835,529 us, 3.17%)</title><rect x="796.4" y="119" width="37.4" height="15.0" fill="rgb(149.207331292574,135.468786437221,149.207331292574)" rx="2" ry="2" />
<text  x="799.38" y="129.5" >Hy..</text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (10,311 us, 0.04%)</title><rect x="63.6" y="119" width="0.5" height="15.0" fill="rgb(152.107158103232,112.821545458115,112.821545458115)" rx="2" ry="2" />
<text  x="66.62" y="129.5" ></text>
</g>
<g >
<title>firedrake.utility_meshes.RectangleMesh (9,496 us, 0.04%)</title><rect x="220.1" y="87" width="0.4" height="15.0" fill="rgb(149.816731733818,149.816731733818,118.342623017734)" rx="2" ry="2" />
<text  x="223.10" y="97.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (10,645 us, 0.04%)</title><rect x="797.4" y="135" width="0.5" height="15.0" fill="rgb(129.140963914256,162.697982618609,129.140963914256)" rx="2" ry="2" />
<text  x="800.42" y="145.5" ></text>
</g>
<g >
<title>DMPlexInterp (4,809 us, 0.02%)</title><rect x="220.3" y="119" width="0.2" height="15.0" fill="rgb(106.149283735277,144.557221709146,144.557221709146)" rx="2" ry="2" />
<text  x="223.31" y="129.5" ></text>
</g>
<g >
<title>firedrake.assemble.allocate_matrix (7,286 us, 0.03%)</title><rect x="221.7" y="87" width="0.4" height="15.0" fill="rgb(114.248891893178,146.657120120453,146.657120120453)" rx="2" ry="2" />
<text  x="224.74" y="97.5" ></text>
</g>
<g >
<title>KSPSolve (12,840,070 us, 48.67%)</title><rect x="222.1" y="103" width="574.3" height="15.0" fill="rgb(124.410695066429,163.468026384535,124.410695066429)" rx="2" ry="2" />
<text  x="225.07" y="113.5" >KSPSolve</text>
</g>
<g >
<title>ParLoopExecute (949,588 us, 3.60%)</title><rect x="222.4" y="183" width="42.5" height="15.0" fill="rgb(140.264076470488,153.40179760346,153.40179760346)" rx="2" ry="2" />
<text  x="225.43" y="193.5" >Par..</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (765,089 us, 2.90%)</title><rect x="799.5" y="183" width="34.3" height="15.0" fill="rgb(154.927954275329,134.447649444187,134.447649444187)" rx="2" ry="2" />
<text  x="802.53" y="193.5" >py..</text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (7,697 us, 0.03%)</title><rect x="797.5" y="167" width="0.4" height="15.0" fill="rgb(141.166520417669,160.740333885496,141.166520417669)" rx="2" ry="2" />
<text  x="800.55" y="177.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_form1_cell_integral_otherwise (3,520,330 us, 13.34%)</title><rect x="973.2" y="135" width="157.4" height="15.0" fill="rgb(156.359754581935,145.424785128168,145.424785128168)" rx="2" ry="2" />
<text  x="976.17" y="145.5" >Parloop_Cells_wrap..</text>
</g>
<g >
<title>SNESFunctionEval (7,964,818 us, 30.19%)</title><rect x="833.8" y="103" width="356.2" height="15.0" fill="rgb(127.350522005974,127.350522005974,152.067842968898)" rx="2" ry="2" />
<text  x="836.75" y="113.5" >SNESFunctionEval</text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (3,218 us, 0.01%)</title><rect x="221.9" y="119" width="0.2" height="15.0" fill="rgb(150.745713216756,150.745713216756,122.844610204278)" rx="2" ry="2" />
<text  x="224.92" y="129.5" ></text>
</g>
<g >
<title>FunctionSpaceData: CreateElement (7,697 us, 0.03%)</title><rect x="797.5" y="199" width="0.4" height="15.0" fill="rgb(152.350187012115,114.68476709288,114.68476709288)" rx="2" ry="2" />
<text  x="800.55" y="209.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.solve (21,640,417 us, 82.03%)</title><rect x="222.1" y="71" width="967.9" height="15.0" fill="rgb(104.991692533056,144.257105471533,144.257105471533)" rx="2" ry="2" />
<text  x="225.07" y="81.5" >firedrake.variational_solver.NonlinearVariationalSolver.solve</text>
</g>
<g >
<title>firedrake.interpolation.make_interpolator (20,377 us, 0.08%)</title><rect x="798.4" y="135" width="0.9" height="15.0" fill="rgb(153.774378821063,125.603570961486,125.603570961486)" rx="2" ry="2" />
<text  x="801.35" y="145.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.action (12,306 us, 0.05%)</title><rect x="220.5" y="87" width="0.6" height="15.0" fill="rgb(156.753426626089,148.442937466686,148.442937466686)" rx="2" ry="2" />
<text  x="223.53" y="97.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (6,978 us, 0.03%)</title><rect x="798.0" y="167" width="0.4" height="15.0" fill="rgb(135.433267236591,161.673654170787,135.433267236591)" rx="2" ry="2" />
<text  x="801.04" y="177.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (4,047 us, 0.02%)</title><rect x="1189.8" y="135" width="0.2" height="15.0" fill="rgb(149.867806614489,149.867806614489,118.590139747139)" rx="2" ry="2" />
<text  x="1192.82" y="145.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (41,747 us, 0.16%)</title><rect x="64.1" y="87" width="1.9" height="15.0" fill="rgb(128.288781952361,162.836709914732,128.288781952361)" rx="2" ry="2" />
<text  x="67.08" y="97.5" ></text>
</g>
<g >
<title>firedrake.parloops.par_loop (770,977 us, 2.92%)</title><rect x="799.3" y="135" width="34.5" height="15.0" fill="rgb(130.332878211787,162.503950058546,130.332878211787)" rx="2" ry="2" />
<text  x="802.27" y="145.5" >fi..</text>
</g>
<g >
<title>PCSetUp (835,529 us, 3.17%)</title><rect x="796.4" y="103" width="37.4" height="15.0" fill="rgb(129.737714021575,162.600837252302,129.737714021575)" rx="2" ry="2" />
<text  x="799.38" y="113.5" >PC..</text>
</g>
<g >
<title>firedrake.ufl_expr.action (4,068 us, 0.02%)</title><rect x="221.7" y="119" width="0.2" height="15.0" fill="rgb(139.214257122553,161.058144189352,139.214257122553)" rx="2" ry="2" />
<text  x="224.74" y="129.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (41,747 us, 0.16%)</title><rect x="64.1" y="103" width="1.9" height="15.0" fill="rgb(143.099987129612,143.099987129612,155.116126541215)" rx="2" ry="2" />
<text  x="67.08" y="113.5" ></text>
</g>
<g >
<title>ParLoopExecute (6,632,599 us, 25.14%)</title><rect x="834.0" y="119" width="296.6" height="15.0" fill="rgb(108.749584744283,108.749584744283,148.46766156341)" rx="2" ry="2" />
<text  x="836.97" y="129.5" >ParLoopExecute</text>
</g>
<g >
<title>Mesh: reorder (3,937 us, 0.01%)</title><rect x="66.6" y="87" width="0.2" height="15.0" fill="rgb(148.669046058112,148.669046058112,112.780761666233)" rx="2" ry="2" />
<text  x="69.59" y="97.5" ></text>
</g>
<g >
<title>Log_Event_mtf_solve_1 (285,144 us, 1.08%)</title><rect x="308.1" y="215" width="12.7" height="15.0" fill="rgb(139.078848045035,109.514548115402,139.078848045035)" rx="2" ry="2" />
<text  x="311.06" y="225.5" ></text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (1,327,361 us, 5.03%)</title><rect x="1130.6" y="119" width="59.4" height="15.0" fill="rgb(144.452703039162,144.452703039162,155.377942523709)" rx="2" ry="2" />
<text  x="1133.63" y="129.5" >fired..</text>
</g>
<g >
<title>firedrake (26,381,725 us, 100.00%)</title><rect x="10.0" y="55" width="1180.0" height="15.0" fill="rgb(116.712760441884,147.295900855303,147.295900855303)" rx="2" ry="2" />
<text  x="13.00" y="65.5" >firedrake</text>
</g>
<g >
<title>Log_Event_subkernel3_cell_to__cell_integral_otherwise (211,921 us, 0.80%)</title><rect x="311.3" y="231" width="9.5" height="15.0" fill="rgb(126.129526838245,149.737284735841,149.737284735841)" rx="2" ry="2" />
<text  x="314.33" y="241.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_form0_cell_integral_otherwise (3,112,269 us, 11.80%)</title><rect x="834.0" y="135" width="139.2" height="15.0" fill="rgb(110.414411118224,110.414411118224,148.789886022882)" rx="2" ry="2" />
<text  x="836.97" y="145.5" >Parloop_Cells_wr..</text>
</g>
<g >
<title>SCForwardElim (12,840,070 us, 48.67%)</title><rect x="222.1" y="135" width="574.3" height="15.0" fill="rgb(126.474393594506,163.132075461359,126.474393594506)" rx="2" ry="2" />
<text  x="225.07" y="145.5" >SCForwardElim</text>
</g>
<g >
<title>CreateFunctionSpace (2,948 us, 0.01%)</title><rect x="797.4" y="167" width="0.1" height="15.0" fill="rgb(152.301761377308,114.313503892697,114.313503892697)" rx="2" ry="2" />
<text  x="800.42" y="177.5" ></text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (2,566,258 us, 9.73%)</title><rect x="681.6" y="167" width="114.8" height="15.0" fill="rgb(131.807371510865,131.807371510865,152.930459002103)" rx="2" ry="2" />
<text  x="684.60" y="177.5" >firedrake.ts..</text>
</g>
<g >
<title>Parloop_Cells_wrap_slate_loopy_knl_0 (8,367,301 us, 31.72%)</title><rect x="307.3" y="183" width="374.3" height="15.0" fill="rgb(112.886277700975,146.303849774327,146.303849774327)" rx="2" ry="2" />
<text  x="310.34" y="193.5" >Parloop_Cells_wrap_slate_loopy_knl_0</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (8,057,049 us, 30.54%)</title><rect x="321.2" y="199" width="360.4" height="15.0" fill="rgb(147.621744483293,147.621744483293,107.705377111344)" rx="2" ry="2" />
<text  x="324.22" y="209.5" >pyop2.global_kernel.GlobalKernel.compile</text>
</g>
<g >
<title>firedrake.parloops.par_loop (957,596 us, 3.63%)</title><rect x="222.1" y="167" width="42.8" height="15.0" fill="rgb(136.688250493352,103.388641889214,136.688250493352)" rx="2" ry="2" />
<text  x="225.07" y="177.5" >fir..</text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (2,948 us, 0.01%)</title><rect x="797.4" y="183" width="0.1" height="15.0" fill="rgb(154.655211001612,154.655211001612,141.790637930887)" rx="2" ry="2" />
<text  x="800.42" y="193.5" ></text>
</g>
<g >
<title>firedrake.extrusion_utils.make_extruded_coords (1,195,857 us, 4.53%)</title><rect x="10.1" y="87" width="53.5" height="15.0" fill="rgb(151.08959230387,151.08959230387,124.511101164909)" rx="2" ry="2" />
<text  x="13.13" y="97.5" >fire..</text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (765,089 us, 2.90%)</title><rect x="799.5" y="167" width="34.3" height="15.0" fill="rgb(144.162687194124,154.41254853181,154.41254853181)" rx="2" ry="2" />
<text  x="802.53" y="177.5" >Pa..</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (949,588 us, 3.60%)</title><rect x="222.4" y="215" width="42.5" height="15.0" fill="rgb(154.407419465433,154.407419465433,140.589802024791)" rx="2" ry="2" />
<text  x="225.43" y="225.5" >pyo..</text>
</g>
<g >
<title>ParLoopExecute (1,161,489 us, 4.40%)</title><rect x="11.7" y="103" width="51.9" height="15.0" fill="rgb(109.899693362797,145.529550131095,145.529550131095)" rx="2" ry="2" />
<text  x="14.67" y="113.5" >ParL..</text>
</g>
<g >
<title>Parloop_Cells_wrap_pyop2_kernel_uniform_extrusion (1,161,489 us, 4.40%)</title><rect x="11.7" y="119" width="51.9" height="15.0" fill="rgb(128.319984930625,162.831630360131,128.319984930625)" rx="2" ry="2" />
<text  x="14.67" y="129.5" >Parl..</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (3,513,470 us, 13.32%)</title><rect x="973.5" y="151" width="157.1" height="15.0" fill="rgb(155.898749168474,141.890410291635,141.890410291635)" rx="2" ry="2" />
<text  x="976.48" y="161.5" >pyop2.global_kerne..</text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (10,299 us, 0.04%)</title><rect x="797.9" y="151" width="0.5" height="15.0" fill="rgb(134.697186002839,134.697186002839,153.489777936033)" rx="2" ry="2" />
<text  x="800.89" y="161.5" ></text>
</g>
<g >
<title>FunctionSpaceData: CreateElement (9,404 us, 0.04%)</title><rect x="64.7" y="135" width="0.5" height="15.0" fill="rgb(154.588155501307,154.588155501307,141.46567666018)" rx="2" ry="2" />
<text  x="67.74" y="145.5" ></text>
</g>
<g >
<title>Log_Event_form0_cell_integral_otherwise (7,303 us, 0.03%)</title><rect x="834.0" y="151" width="0.3" height="15.0" fill="rgb(119.502174222096,148.019082205729,148.019082205729)" rx="2" ry="2" />
<text  x="836.97" y="161.5" ></text>
</g>
<g >
<title>CreateExtMesh (1,209,173 us, 4.58%)</title><rect x="10.0" y="71" width="54.1" height="15.0" fill="rgb(155.178972891273,136.372125499762,136.372125499762)" rx="2" ry="2" />
<text  x="13.00" y="81.5" >Creat..</text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (949,588 us, 3.60%)</title><rect x="222.4" y="199" width="42.5" height="15.0" fill="rgb(154.932563302326,154.932563302326,143.134729849734)" rx="2" ry="2" />
<text  x="225.43" y="209.5" >Par..</text>
</g>
<g >
<title>all (26,381,725 us, 100%)</title><rect x="10.0" y="39" width="1180.0" height="15.0" fill="rgb(144.677297351939,144.677297351939,155.421412390698)" rx="2" ry="2" />
<text  x="13.00" y="49.5" ></text>
</g>
<g >
<title>firedrake.utility_meshes.SquareMesh (9,496 us, 0.04%)</title><rect x="220.1" y="71" width="0.4" height="15.0" fill="rgb(153.613812364428,124.372561460613,124.372561460613)" rx="2" ry="2" />
<text  x="223.10" y="81.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (3,766 us, 0.01%)</title><rect x="798.2" y="199" width="0.2" height="15.0" fill="rgb(139.168760460435,139.168760460435,154.355243960084)" rx="2" ry="2" />
<text  x="801.19" y="209.5" ></text>
</g>
<g >
<title>firedrake.functionspace.VectorFunctionSpace (10,311 us, 0.04%)</title><rect x="63.6" y="87" width="0.5" height="15.0" fill="rgb(124.007414892715,149.187107564778,149.187107564778)" rx="2" ry="2" />
<text  x="66.62" y="97.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (10,299 us, 0.04%)</title><rect x="797.9" y="135" width="0.5" height="15.0" fill="rgb(151.952935241037,151.952935241037,128.69499386041)" rx="2" ry="2" />
<text  x="800.89" y="145.5" ></text>
</g>
<g >
<title>CreateMesh (18,196 us, 0.07%)</title><rect x="66.0" y="71" width="0.8" height="15.0" fill="rgb(148.243274529042,159.588304146435,148.243274529042)" rx="2" ry="2" />
<text  x="68.95" y="81.5" ></text>
</g>
<g >
<title>Log_Event_form1_cell_integral_otherwise (6,860 us, 0.03%)</title><rect x="973.2" y="151" width="0.3" height="15.0" fill="rgb(124.572952187237,124.572952187237,151.530248810433)" rx="2" ry="2" />
<text  x="976.17" y="161.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.__init__ (11,733 us, 0.04%)</title><rect x="221.5" y="71" width="0.6" height="15.0" fill="rgb(116.042175690529,147.122045549396,147.122045549396)" rx="2" ry="2" />
<text  x="224.54" y="81.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (1,161,489 us, 4.40%)</title><rect x="11.7" y="135" width="51.9" height="15.0" fill="rgb(115.911403465531,115.911403465531,149.853820025587)" rx="2" ry="2" />
<text  x="14.67" y="145.5" >pyop..</text>
</g>
<g >
<title>firedrake.mesh._from_cell_list (4,809 us, 0.02%)</title><rect x="220.3" y="103" width="0.2" height="15.0" fill="rgb(127.250771150046,127.250771150046,152.048536351622)" rx="2" ry="2" />
<text  x="223.31" y="113.5" ></text>
</g>
<g >
<title>Log_Event_subkernel2_cell_to__cell_integral_otherwise (5,840 us, 0.02%)</title><rect x="311.1" y="231" width="0.2" height="15.0" fill="rgb(150.857221771629,150.857221771629,123.384997816356)" rx="2" ry="2" />
<text  x="314.07" y="241.5" ></text>
</g>
<g >
<title>CreateMesh (3,304 us, 0.01%)</title><rect x="66.2" y="87" width="0.1" height="15.0" fill="rgb(125.143553092331,163.348723915202,125.143553092331)" rx="2" ry="2" />
<text  x="69.15" y="97.5" ></text>
</g>
<g >
<title>firedrake.mesh.MeshTopology._facets (17,740 us, 0.07%)</title><rect x="65.2" y="135" width="0.8" height="15.0" fill="rgb(121.677671540992,121.677671540992,150.96987191116)" rx="2" ry="2" />
<text  x="68.16" y="145.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (6,978 us, 0.03%)</title><rect x="798.0" y="183" width="0.4" height="15.0" fill="rgb(154.845927930325,133.818780799159,133.818780799159)" rx="2" ry="2" />
<text  x="801.04" y="193.5" ></text>
</g>
<g >
<title>firedrake.functionspace.MixedFunctionSpace (2,948 us, 0.01%)</title><rect x="797.4" y="151" width="0.1" height="15.0" fill="rgb(148.982394192529,148.982394192529,114.299294933024)" rx="2" ry="2" />
<text  x="800.42" y="161.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (4,047 us, 0.02%)</title><rect x="1189.8" y="151" width="0.2" height="15.0" fill="rgb(148.214535114007,159.592982655859,148.214535114007)" rx="2" ry="2" />
<text  x="1192.82" y="161.5" ></text>
</g>
<g >
<title>ParLoopExecute (8,367,301 us, 31.72%)</title><rect x="307.3" y="167" width="374.3" height="15.0" fill="rgb(120.214269046248,148.203699382361,148.203699382361)" rx="2" ry="2" />
<text  x="310.34" y="177.5" >ParLoopExecute</text>
</g>
<g >
<title>Log_Event_subkernel4_interior_facet_vert_to__exterior_facet_vert_integral_otherwise (9,123 us, 0.03%)</title><rect x="320.8" y="215" width="0.4" height="15.0" fill="rgb(130.907273599272,162.410443832677,130.907273599272)" rx="2" ry="2" />
<text  x="323.81" y="225.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (10,311 us, 0.04%)</title><rect x="63.6" y="103" width="0.5" height="15.0" fill="rgb(126.241603360177,163.169971546018,126.241603360177)" rx="2" ry="2" />
<text  x="66.62" y="113.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (41,747 us, 0.16%)</title><rect x="64.1" y="71" width="1.9" height="15.0" fill="rgb(138.539806610605,161.167938458739,138.539806610605)" rx="2" ry="2" />
<text  x="67.08" y="81.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (41,747 us, 0.16%)</title><rect x="64.1" y="119" width="1.9" height="15.0" fill="rgb(154.924981469361,134.424857931768,134.424857931768)" rx="2" ry="2" />
<text  x="67.08" y="129.5" ></text>
</g>
<g >
<title>ParLoopExecute (765,089 us, 2.90%)</title><rect x="799.5" y="151" width="34.3" height="15.0" fill="rgb(149.801461548016,159.334645794509,149.801461548016)" rx="2" ry="2" />
<text  x="802.53" y="161.5" >Pa..</text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (10,311 us, 0.04%)</title><rect x="63.6" y="135" width="0.5" height="15.0" fill="rgb(150.561718379251,150.561718379251,121.95294291483)" rx="2" ry="2" />
<text  x="66.62" y="145.5" ></text>
</g>
<g >
<title>SNESSolve (21,640,417 us, 82.03%)</title><rect x="222.1" y="87" width="967.9" height="15.0" fill="rgb(152.580855174861,116.453223007265,116.453223007265)" rx="2" ry="2" />
<text  x="225.07" y="97.5" >SNESSolve</text>
</g>
<g >
<title>PetscBarrier (26,652 us, 0.10%)</title><rect x="66.8" y="71" width="1.2" height="15.0" fill="rgb(124.677749130433,163.424552467139,124.677749130433)" rx="2" ry="2" />
<text  x="69.76" y="81.5" ></text>
</g>
<g >
<title>firedrake.matrix_free.operators.ImplicitMatrixContext.__init__ (7,286 us, 0.03%)</title><rect x="221.7" y="103" width="0.4" height="15.0" fill="rgb(152.049570962895,112.380044048862,112.380044048862)" rx="2" ry="2" />
<text  x="224.74" y="113.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (10,311 us, 0.04%)</title><rect x="63.6" y="151" width="0.5" height="15.0" fill="rgb(153.184964506402,121.084727882417,121.084727882417)" rx="2" ry="2" />
<text  x="66.62" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (7,697 us, 0.03%)</title><rect x="797.5" y="183" width="0.4" height="15.0" fill="rgb(114.414126361633,146.699958686349,146.699958686349)" rx="2" ry="2" />
<text  x="800.55" y="193.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (3,104,966 us, 11.77%)</title><rect x="834.3" y="151" width="138.9" height="15.0" fill="rgb(144.073395034563,144.073395034563,155.304528071206)" rx="2" ry="2" />
<text  x="837.29" y="161.5" >pyop2.global_ker..</text>
</g>
<g >
<title>firedrake.variational_solver.LinearVariationalProblem.__init__ (22,759 us, 0.09%)</title><rect x="220.5" y="71" width="1.0" height="15.0" fill="rgb(111.366140067891,111.366140067891,148.974091626043)" rx="2" ry="2" />
<text  x="223.53" y="81.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (7,697 us, 0.03%)</title><rect x="797.5" y="151" width="0.4" height="15.0" fill="rgb(153.483547086883,123.373860999436,123.373860999436)" rx="2" ry="2" />
<text  x="800.55" y="161.5" ></text>
</g>
<g >
<title>DMPlexStratify (3,641 us, 0.01%)</title><rect x="67.8" y="87" width="0.2" height="15.0" fill="rgb(154.067654938269,154.067654938269,138.943250854686)" rx="2" ry="2" />
<text  x="70.79" y="97.5" ></text>
</g>
<g >
<title>HybridRHS (11,882,474 us, 45.04%)</title><rect x="264.9" y="151" width="531.5" height="15.0" fill="rgb(149.784757105727,149.784757105727,118.187669050829)" rx="2" ry="2" />
<text  x="267.90" y="161.5" >HybridRHS</text>
</g>
<g >
<title>Log_Event_slate_loopy_knl_0 (310,252 us, 1.18%)</title><rect x="307.3" y="199" width="13.9" height="15.0" fill="rgb(152.209955486411,152.209955486411,129.940553511068)" rx="2" ry="2" />
<text  x="310.34" y="209.5" ></text>
</g>
</g>
</svg>
