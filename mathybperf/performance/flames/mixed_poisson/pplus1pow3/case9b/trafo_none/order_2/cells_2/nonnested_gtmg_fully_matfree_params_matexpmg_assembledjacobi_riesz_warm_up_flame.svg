<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="283" onload="init(evt)" viewBox="0 0 1200 283" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:13px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:18px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 13 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (1 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="283.0" fill="url(#background)"  />
<text id="title" x="600.00" y="26" >Firedrake example</text>
<text id="details" x="10.00" y="265" > </text>
<text id="unzoom" x="10.00" y="26" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="26" >Search</text>
<text id="ignorecase" x="1174.00" y="26" >ic</text>
<text id="matched" x="1090.00" y="265" > </text>
<g id="frames">
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (10,238 us, 0.06%)</title><rect x="383.9" y="183" width="0.7" height="15.0" fill="rgb(152.822289993225,118.304223281392,118.304223281392)" rx="2" ry="2" />
<text  x="386.92" y="193.5" ></text>
</g>
<g >
<title>ParLoopExecute (10,248,138 us, 56.67%)</title><rect x="438.9" y="119" width="668.7" height="15.0" fill="rgb(153.638969275941,124.565431115544,124.565431115544)" rx="2" ry="2" />
<text  x="441.93" y="129.5" >ParLoopExecute</text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalProblem.__init__ (10,588 us, 0.06%)</title><rect x="311.3" y="87" width="0.6" height="15.0" fill="rgb(110.518947654728,145.690097540115,145.690097540115)" rx="2" ry="2" />
<text  x="314.26" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (45,822 us, 0.25%)</title><rect x="94.2" y="103" width="3.0" height="15.0" fill="rgb(148.039385994756,159.621495303179,148.039385994756)" rx="2" ry="2" />
<text  x="97.16" y="113.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.action (3,970 us, 0.02%)</title><rect x="312.3" y="119" width="0.2" height="15.0" fill="rgb(137.108132466955,152.58358989884,152.58358989884)" rx="2" ry="2" />
<text  x="315.29" y="129.5" ></text>
</g>
<g >
<title>firedrake (18,084,898 us, 100.00%)</title><rect x="10.0" y="55" width="1180.0" height="15.0" fill="rgb(135.497223408353,100.336634983905,135.497223408353)" rx="2" ry="2" />
<text  x="13.00" y="65.5" >firedrake</text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (1,262,880 us, 6.98%)</title><rect x="1107.6" y="119" width="82.4" height="15.0" fill="rgb(132.840255576671,162.095772347984,132.840255576671)" rx="2" ry="2" />
<text  x="1110.60" y="129.5" >firedrak..</text>
</g>
<g >
<title>CreateFunctionSpace (10,295 us, 0.06%)</title><rect x="93.4" y="103" width="0.6" height="15.0" fill="rgb(125.332483226593,125.332483226593,151.67725481805)" rx="2" ry="2" />
<text  x="96.37" y="113.5" ></text>
</g>
<g >
<title>SNESFunctionEval (11,515,603 us, 63.68%)</title><rect x="438.6" y="103" width="751.4" height="15.0" fill="rgb(128.430474996676,128.430474996676,152.276866128389)" rx="2" ry="2" />
<text  x="441.63" y="113.5" >SNESFunctionEval</text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (10,238 us, 0.06%)</title><rect x="383.9" y="167" width="0.7" height="15.0" fill="rgb(152.612979313305,116.69950806867,116.69950806867)" rx="2" ry="2" />
<text  x="386.92" y="177.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (1,241,084 us, 6.86%)</title><rect x="12.4" y="135" width="81.0" height="15.0" fill="rgb(110.462452209159,110.462452209159,148.799184298547)" rx="2" ry="2" />
<text  x="15.39" y="145.5" >pyop2.gl..</text>
</g>
<g >
<title>firedrake.__init__ (3,186,480 us, 17.62%)</title><rect x="101.9" y="71" width="207.9" height="15.0" fill="rgb(154.762220519963,133.177023986384,133.177023986384)" rx="2" ry="2" />
<text  x="104.87" y="81.5" >firedrake.__init__</text>
</g>
<g >
<title>Log_Event_form0_cell_integral_otherwise (9,214 us, 0.05%)</title><rect x="439.3" y="151" width="0.6" height="15.0" fill="rgb(136.58561348977,161.48606292027,136.58561348977)" rx="2" ry="2" />
<text  x="442.27" y="161.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (6,026 us, 0.03%)</title><rect x="385.0" y="183" width="0.4" height="15.0" fill="rgb(132.556635106956,132.556635106956,153.075477762637)" rx="2" ry="2" />
<text  x="388.04" y="193.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (10,238 us, 0.06%)</title><rect x="383.9" y="151" width="0.7" height="15.0" fill="rgb(155.031131187659,135.238672438717,135.238672438717)" rx="2" ry="2" />
<text  x="386.92" y="161.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (5,167,867 us, 28.58%)</title><rect x="770.4" y="151" width="337.2" height="15.0" fill="rgb(140.418824379929,140.418824379929,154.59719181547)" rx="2" ry="2" />
<text  x="773.41" y="161.5" >pyop2.global_kernel.GlobalKernel.compile</text>
</g>
<g >
<title>ParLoopExecute (785,384 us, 4.34%)</title><rect x="387.1" y="151" width="51.3" height="15.0" fill="rgb(150.863675247752,150.863675247752,123.416272354492)" rx="2" ry="2" />
<text  x="390.12" y="161.5" >ParL..</text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (10,588 us, 0.06%)</title><rect x="311.3" y="103" width="0.6" height="15.0" fill="rgb(144.077649327932,144.077649327932,155.305351482826)" rx="2" ry="2" />
<text  x="314.26" y="113.5" ></text>
</g>
<g >
<title>all (18,084,898 us, 100%)</title><rect x="10.0" y="39" width="1180.0" height="15.0" fill="rgb(114.418557882971,146.701107599289,146.701107599289)" rx="2" ry="2" />
<text  x="13.00" y="49.5" ></text>
</g>
<g >
<title>SNESSolve (13,445,337 us, 74.35%)</title><rect x="312.7" y="87" width="877.3" height="15.0" fill="rgb(132.34763911411,132.34763911411,153.035026925312)" rx="2" ry="2" />
<text  x="315.72" y="97.5" >SNESSolve</text>
</g>
<g >
<title>HybridBreak (1,003,392 us, 5.55%)</title><rect x="312.7" y="151" width="65.5" height="15.0" fill="rgb(145.954248493119,127.132761763618,145.954248493119)" rx="2" ry="2" />
<text  x="315.72" y="161.5" >Hybrid..</text>
</g>
<g >
<title>PCApply (1,063,258 us, 5.88%)</title><rect x="312.7" y="119" width="69.4" height="15.0" fill="rgb(124.375873744787,163.473694971779,124.375873744787)" rx="2" ry="2" />
<text  x="315.72" y="129.5" >PCApply</text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (785,384 us, 4.34%)</title><rect x="387.1" y="167" width="51.3" height="15.0" fill="rgb(141.576666688082,160.673565887987,141.576666688082)" rx="2" ry="2" />
<text  x="390.12" y="177.5" >Parl..</text>
</g>
<g >
<title>ParLoopExecute (997,203 us, 5.51%)</title><rect x="313.1" y="183" width="65.1" height="15.0" fill="rgb(125.573530038777,125.573530038777,151.723909039763)" rx="2" ry="2" />
<text  x="316.13" y="193.5" >ParLoo..</text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (2,763 us, 0.02%)</title><rect x="383.7" y="215" width="0.2" height="15.0" fill="rgb(146.361592659466,146.361592659466,155.747405030864)" rx="2" ry="2" />
<text  x="386.74" y="225.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (2,763 us, 0.02%)</title><rect x="383.7" y="183" width="0.2" height="15.0" fill="rgb(126.417204895993,126.417204895993,151.887200947612)" rx="2" ry="2" />
<text  x="386.74" y="193.5" ></text>
</g>
<g >
<title>firedrake.functionspace.VectorFunctionSpace (10,295 us, 0.06%)</title><rect x="93.4" y="87" width="0.6" height="15.0" fill="rgb(154.580478380699,131.783667585356,131.783667585356)" rx="2" ry="2" />
<text  x="96.37" y="97.5" ></text>
</g>
<g >
<title>firedrake.slate.slac.optimise.optimise (3,866 us, 0.02%)</title><rect x="381.8" y="167" width="0.3" height="15.0" fill="rgb(117.390563386268,117.390563386268,150.140109042503)" rx="2" ry="2" />
<text  x="384.84" y="177.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (4,039 us, 0.02%)</title><rect x="438.4" y="135" width="0.2" height="15.0" fill="rgb(138.340000225095,107.621250576805,138.340000225095)" rx="2" ry="2" />
<text  x="441.37" y="145.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (2,736 us, 0.02%)</title><rect x="385.3" y="231" width="0.1" height="15.0" fill="rgb(139.155196828286,161.06775865586,139.155196828286)" rx="2" ry="2" />
<text  x="388.25" y="241.5" ></text>
</g>
<g >
<title>firedrake.extrusion_utils.make_extruded_coords (1,274,822 us, 7.05%)</title><rect x="10.2" y="87" width="83.2" height="15.0" fill="rgb(155.648008328088,139.968063848677,139.968063848677)" rx="2" ry="2" />
<text  x="13.19" y="97.5" >firedrak..</text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (45,822 us, 0.25%)</title><rect x="94.2" y="119" width="3.0" height="15.0" fill="rgb(139.964657677787,160.93598595943,139.964657677787)" rx="2" ry="2" />
<text  x="97.16" y="129.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (10,295 us, 0.06%)</title><rect x="93.4" y="135" width="0.6" height="15.0" fill="rgb(141.476975385254,160.689794704726,141.476975385254)" rx="2" ry="2" />
<text  x="96.37" y="145.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (2,763 us, 0.02%)</title><rect x="383.7" y="199" width="0.2" height="15.0" fill="rgb(150.418369181881,150.418369181881,121.258250650656)" rx="2" ry="2" />
<text  x="386.74" y="209.5" ></text>
</g>
<g >
<title>PetscBarrier (44,192 us, 0.24%)</title><rect x="99.0" y="71" width="2.9" height="15.0" fill="rgb(149.693791551274,149.693791551274,117.746835979249)" rx="2" ry="2" />
<text  x="101.99" y="81.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.solve (13,445,337 us, 74.35%)</title><rect x="312.7" y="71" width="877.3" height="15.0" fill="rgb(141.036612467052,153.60208471368,153.60208471368)" rx="2" ry="2" />
<text  x="315.72" y="81.5" >firedrake.variational_solver.NonlinearVariationalSolver.solve</text>
</g>
<g >
<title>ParLoopExecute (1,241,084 us, 6.86%)</title><rect x="12.4" y="103" width="81.0" height="15.0" fill="rgb(110.180596295317,145.602376817304,145.602376817304)" rx="2" ry="2" />
<text  x="15.39" y="113.5" >ParLoopE..</text>
</g>
<g >
<title>firedrake.matrix_free.operators.ImplicitMatrixContext.__init__ (6,603 us, 0.04%)</title><rect x="312.3" y="103" width="0.4" height="15.0" fill="rgb(134.606646460476,134.606646460476,153.47225415364)" rx="2" ry="2" />
<text  x="315.29" y="113.5" ></text>
</g>
<g >
<title>firedrake.functionspace.MixedFunctionSpace (4,681 us, 0.03%)</title><rect x="383.6" y="151" width="0.3" height="15.0" fill="rgb(115.742152426062,147.04426174009,147.04426174009)" rx="2" ry="2" />
<text  x="386.61" y="161.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_form1_cell_integral_otherwise (5,178,705 us, 28.64%)</title><rect x="769.7" y="135" width="337.9" height="15.0" fill="rgb(136.359864859436,161.522812697301,136.359864859436)" rx="2" ry="2" />
<text  x="772.70" y="145.5" >Parloop_Cells_wrap_form1_cell_integral_oth..</text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (12,970 us, 0.07%)</title><rect x="384.6" y="151" width="0.8" height="15.0" fill="rgb(152.313211851983,114.4012908652,114.4012908652)" rx="2" ry="2" />
<text  x="387.59" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (45,822 us, 0.25%)</title><rect x="94.2" y="87" width="3.0" height="15.0" fill="rgb(113.245484821596,146.39697754634,146.39697754634)" rx="2" ry="2" />
<text  x="97.16" y="97.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (6,746 us, 0.04%)</title><rect x="1189.6" y="135" width="0.4" height="15.0" fill="rgb(129.201930846642,129.201930846642,152.426180163866)" rx="2" ry="2" />
<text  x="1192.56" y="145.5" ></text>
</g>
<g >
<title>firedrake.utility_meshes.RectangleMesh (11,618 us, 0.06%)</title><rect x="309.8" y="87" width="0.7" height="15.0" fill="rgb(113.118525925435,113.118525925435,149.313263082342)" rx="2" ry="2" />
<text  x="312.78" y="97.5" ></text>
</g>
<g >
<title>FunctionSpaceData: CreateElement (7,855 us, 0.04%)</title><rect x="384.1" y="199" width="0.5" height="15.0" fill="rgb(154.579070019486,154.579070019486,141.421647017507)" rx="2" ry="2" />
<text  x="387.07" y="209.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (2,736 us, 0.02%)</title><rect x="385.3" y="215" width="0.1" height="15.0" fill="rgb(155.655491032013,140.025431245431,140.025431245431)" rx="2" ry="2" />
<text  x="388.25" y="225.5" ></text>
</g>
<g >
<title>HybridInit (866,476 us, 4.79%)</title><rect x="382.1" y="119" width="56.5" height="15.0" fill="rgb(137.515609310536,152.689232043472,152.689232043472)" rx="2" ry="2" />
<text  x="385.10" y="129.5" >Hybri..</text>
</g>
<g >
<title>CreateMesh (9,053 us, 0.05%)</title><rect x="97.6" y="87" width="0.6" height="15.0" fill="rgb(139.18742196542,139.18742196542,154.358855864275)" rx="2" ry="2" />
<text  x="100.56" y="97.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (2,763 us, 0.02%)</title><rect x="383.7" y="167" width="0.2" height="15.0" fill="rgb(147.058487050598,147.058487050598,155.882287816245)" rx="2" ry="2" />
<text  x="386.74" y="177.5" ></text>
</g>
<g >
<title>firedrake.interpolation.make_interpolator (19,833 us, 0.11%)</title><rect x="385.4" y="135" width="1.3" height="15.0" fill="rgb(154.874645793695,134.038951084995,134.038951084995)" rx="2" ry="2" />
<text  x="388.43" y="145.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (997,203 us, 5.51%)</title><rect x="313.1" y="199" width="65.1" height="15.0" fill="rgb(150.035728290462,150.035728290462,119.403914023009)" rx="2" ry="2" />
<text  x="316.13" y="209.5" >Parloo..</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (997,203 us, 5.51%)</title><rect x="313.1" y="215" width="65.1" height="15.0" fill="rgb(146.899797025529,146.899797025529,155.851573617844)" rx="2" ry="2" />
<text  x="316.13" y="225.5" >pyop2...</text>
</g>
<g >
<title>Mesh: numbering (7,968 us, 0.04%)</title><rect x="98.2" y="87" width="0.5" height="15.0" fill="rgb(136.066416075136,161.570583429629,136.066416075136)" rx="2" ry="2" />
<text  x="101.15" y="97.5" ></text>
</g>
<g >
<title>HybridRHS (59,866 us, 0.33%)</title><rect x="378.2" y="151" width="3.9" height="15.0" fill="rgb(136.288690246364,152.371141915724,152.371141915724)" rx="2" ry="2" />
<text  x="381.19" y="161.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (2,633 us, 0.01%)</title><rect x="312.5" y="119" width="0.2" height="15.0" fill="rgb(140.736739400265,140.736739400265,154.65872375489)" rx="2" ry="2" />
<text  x="315.55" y="129.5" ></text>
</g>
<g >
<title>DMPlexStratify (3,707 us, 0.02%)</title><rect x="101.5" y="87" width="0.2" height="15.0" fill="rgb(143.921343746798,143.921343746798,155.275098789703)" rx="2" ry="2" />
<text  x="104.48" y="97.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.LinearVariationalProblem.__init__ (21,591 us, 0.12%)</title><rect x="310.5" y="71" width="1.4" height="15.0" fill="rgb(141.936637889159,160.614965925021,141.936637889159)" rx="2" ry="2" />
<text  x="313.54" y="81.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.action (11,003 us, 0.06%)</title><rect x="310.5" y="87" width="0.8" height="15.0" fill="rgb(155.613965692636,155.613965692636,146.436910664313)" rx="2" ry="2" />
<text  x="313.54" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (10,295 us, 0.06%)</title><rect x="93.4" y="119" width="0.6" height="15.0" fill="rgb(119.99371097793,148.146517660945,148.146517660945)" rx="2" ry="2" />
<text  x="96.37" y="129.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (10,295 us, 0.06%)</title><rect x="93.4" y="151" width="0.6" height="15.0" fill="rgb(133.585111736063,133.585111736063,153.274537755367)" rx="2" ry="2" />
<text  x="96.37" y="161.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (785,384 us, 4.34%)</title><rect x="387.1" y="183" width="51.3" height="15.0" fill="rgb(116.541409154986,116.541409154986,149.975756610642)" rx="2" ry="2" />
<text  x="390.12" y="193.5" >pyop..</text>
</g>
<g >
<title>Parloop_Cells_wrap_form0_cell_integral_otherwise (5,067,328 us, 28.02%)</title><rect x="439.1" y="135" width="330.6" height="15.0" fill="rgb(153.171115297587,120.978550614831,120.978550614831)" rx="2" ry="2" />
<text  x="442.07" y="145.5" >Parloop_Cells_wrap_form0_cell_integral_ot..</text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.__init__ (11,855 us, 0.07%)</title><rect x="311.9" y="71" width="0.8" height="15.0" fill="rgb(105.4733666715,144.38198395187,144.38198395187)" rx="2" ry="2" />
<text  x="314.95" y="81.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (2,154 us, 0.01%)</title><rect x="1189.9" y="167" width="0.1" height="15.0" fill="rgb(153.502427523171,153.502427523171,136.204071843061)" rx="2" ry="2" />
<text  x="1192.86" y="177.5" ></text>
</g>
<g >
<title>firedrake.mesh._from_cell_list (6,926 us, 0.04%)</title><rect x="310.1" y="103" width="0.4" height="15.0" fill="rgb(120.286333128757,120.286333128757,150.700580605566)" rx="2" ry="2" />
<text  x="313.09" y="113.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (12,970 us, 0.07%)</title><rect x="384.6" y="135" width="0.8" height="15.0" fill="rgb(118.414766221672,118.414766221672,150.338341849356)" rx="2" ry="2" />
<text  x="387.59" y="145.5" ></text>
</g>
<g >
<title>FunctionSpaceData: CreateElement (10,589 us, 0.06%)</title><rect x="95.2" y="135" width="0.7" height="15.0" fill="rgb(153.645876114677,153.645876114677,136.899245786511)" rx="2" ry="2" />
<text  x="98.18" y="145.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (5,055,068 us, 27.95%)</title><rect x="439.9" y="151" width="329.8" height="15.0" fill="rgb(140.06872436045,140.06872436045,154.529430521377)" rx="2" ry="2" />
<text  x="442.87" y="161.5" >pyop2.global_kernel.GlobalKernel.compile</text>
</g>
<g >
<title>CreateFunctionSpace (14,919 us, 0.08%)</title><rect x="383.6" y="135" width="1.0" height="15.0" fill="rgb(112.782715200701,112.782715200701,149.2482674582)" rx="2" ry="2" />
<text  x="386.61" y="145.5" ></text>
</g>
<g >
<title>KSPSolve (1,063,258 us, 5.88%)</title><rect x="312.7" y="103" width="69.4" height="15.0" fill="rgb(138.786045691948,153.018604438653,153.018604438653)" rx="2" ry="2" />
<text  x="315.72" y="113.5" >KSPSolve</text>
</g>
<g >
<title>CreateFunctionSpace (47,728 us, 0.26%)</title><rect x="94.0" y="71" width="3.2" height="15.0" fill="rgb(109.69784278969,145.477218501031,145.477218501031)" rx="2" ry="2" />
<text  x="97.04" y="81.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_pyop2_kernel_uniform_extrusion (1,241,084 us, 6.86%)</title><rect x="12.4" y="119" width="81.0" height="15.0" fill="rgb(154.441748560139,154.441748560139,140.756166099134)" rx="2" ry="2" />
<text  x="15.39" y="129.5" >Parloop_..</text>
</g>
<g >
<title>firedrake.assemble.allocate_matrix (6,603 us, 0.04%)</title><rect x="312.3" y="87" width="0.4" height="15.0" fill="rgb(133.687426888507,151.696740304428,151.696740304428)" rx="2" ry="2" />
<text  x="315.29" y="97.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (4,402 us, 0.02%)</title><rect x="1189.7" y="151" width="0.3" height="15.0" fill="rgb(115.319240266139,115.319240266139,149.739207793446)" rx="2" ry="2" />
<text  x="1192.71" y="161.5" ></text>
</g>
<g >
<title>DMPlexInterp (4,541 us, 0.03%)</title><rect x="310.2" y="119" width="0.3" height="15.0" fill="rgb(108.779866437981,108.779866437981,148.473522536383)" rx="2" ry="2" />
<text  x="313.24" y="129.5" ></text>
</g>
<g >
<title>firedrake.mesh.MeshTopology._facets (19,621 us, 0.11%)</title><rect x="95.9" y="135" width="1.3" height="15.0" fill="rgb(147.316607499154,159.739156918742,147.316607499154)" rx="2" ry="2" />
<text  x="98.87" y="145.5" ></text>
</g>
<g >
<title>firedrake.parloops.par_loop (791,473 us, 4.38%)</title><rect x="386.7" y="135" width="51.7" height="15.0" fill="rgb(153.046323828955,120.021816021986,120.021816021986)" rx="2" ry="2" />
<text  x="389.73" y="145.5" >fire..</text>
</g>
<g >
<title>PCSetUp (866,476 us, 4.79%)</title><rect x="382.1" y="103" width="56.5" height="15.0" fill="rgb(153.007947021384,119.727593830609,119.727593830609)" rx="2" ry="2" />
<text  x="385.10" y="113.5" >PCSetUp</text>
</g>
<g >
<title>SCForwardElim (1,063,258 us, 5.88%)</title><rect x="312.7" y="135" width="69.4" height="15.0" fill="rgb(115.367639563966,146.94716581288,146.94716581288)" rx="2" ry="2" />
<text  x="315.72" y="145.5" >SCForwa..</text>
</g>
<g >
<title>Mesh: reorder (4,816 us, 0.03%)</title><rect x="98.7" y="87" width="0.3" height="15.0" fill="rgb(151.260429176734,140.72984976538,151.260429176734)" rx="2" ry="2" />
<text  x="101.67" y="97.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (9,029 us, 0.05%)</title><rect x="384.8" y="167" width="0.6" height="15.0" fill="rgb(148.771855319316,159.502256110809,148.771855319316)" rx="2" ry="2" />
<text  x="387.84" y="177.5" ></text>
</g>
<g >
<title>DMPlexSymmetrize (2,229 us, 0.01%)</title><rect x="101.7" y="87" width="0.2" height="15.0" fill="rgb(136.344921087794,161.525245404313,136.344921087794)" rx="2" ry="2" />
<text  x="104.72" y="97.5" ></text>
</g>
<g >
<title>CreateMesh (28,119 us, 0.16%)</title><rect x="97.2" y="71" width="1.8" height="15.0" fill="rgb(132.921898954491,162.082481565548,132.921898954491)" rx="2" ry="2" />
<text  x="100.15" y="81.5" ></text>
</g>
<g >
<title>firedrake.utility_meshes.SquareMesh (11,618 us, 0.06%)</title><rect x="309.8" y="71" width="0.7" height="15.0" fill="rgb(151.911659957107,151.911659957107,128.49496748444)" rx="2" ry="2" />
<text  x="312.78" y="81.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (2,736 us, 0.02%)</title><rect x="385.3" y="199" width="0.1" height="15.0" fill="rgb(120.695452705222,148.328450701354,148.328450701354)" rx="2" ry="2" />
<text  x="388.25" y="209.5" ></text>
</g>
<g >
<title>firedrake.parloops.par_loop (1,003,392 us, 5.55%)</title><rect x="312.7" y="167" width="65.5" height="15.0" fill="rgb(135.403675434826,100.096918301742,135.403675434826)" rx="2" ry="2" />
<text  x="315.72" y="177.5" >firedr..</text>
</g>
<g >
<title>Log_Event_form1_cell_integral_otherwise (8,206 us, 0.05%)</title><rect x="769.9" y="151" width="0.5" height="15.0" fill="rgb(118.025760171109,118.025760171109,150.263050355698)" rx="2" ry="2" />
<text  x="772.87" y="161.5" ></text>
</g>
<g >
<title>CreateExtMesh (1,287,978 us, 7.12%)</title><rect x="10.0" y="71" width="84.0" height="15.0" fill="rgb(147.928215488214,147.928215488214,109.190582750575)" rx="2" ry="2" />
<text  x="13.00" y="81.5" >CreateEx..</text>
</g>
</g>
</svg>
