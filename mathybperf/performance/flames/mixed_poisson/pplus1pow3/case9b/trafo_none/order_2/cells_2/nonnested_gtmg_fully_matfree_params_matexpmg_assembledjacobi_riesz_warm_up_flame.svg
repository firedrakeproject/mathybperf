<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="283" onload="init(evt)" viewBox="0 0 1200 283" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:13px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:18px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 13 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (1 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="283.0" fill="url(#background)"  />
<text id="title" x="600.00" y="26" >Firedrake example</text>
<text id="details" x="10.00" y="265" > </text>
<text id="unzoom" x="10.00" y="26" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="26" >Search</text>
<text id="ignorecase" x="1174.00" y="26" >ic</text>
<text id="matched" x="1090.00" y="265" > </text>
<g id="frames">
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (4,063 us, 0.02%)</title><rect x="339.5" y="215" width="0.3" height="15.0" fill="rgb(127.220140910373,150.020036532319,150.020036532319)" rx="2" ry="2" />
<text  x="342.55" y="225.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.__init__ (10,548 us, 0.05%)</title><rect x="220.0" y="71" width="0.5" height="15.0" fill="rgb(121.514230481587,148.540726421152,148.540726421152)" rx="2" ry="2" />
<text  x="222.96" y="81.5" ></text>
</g>
<g >
<title>firedrake.assemble.allocate_matrix (6,496 us, 0.03%)</title><rect x="220.2" y="87" width="0.3" height="15.0" fill="rgb(156.323571237068,145.147379484186,145.147379484186)" rx="2" ry="2" />
<text  x="223.17" y="97.5" ></text>
</g>
<g >
<title>DMPlexInterp (4,312 us, 0.02%)</title><rect x="218.6" y="119" width="0.2" height="15.0" fill="rgb(130.711488822753,150.925200805899,150.925200805899)" rx="2" ry="2" />
<text  x="221.56" y="129.5" ></text>
</g>
<g >
<title>ParLoopExecute (1,573,425 us, 6.87%)</title><rect x="344.6" y="151" width="81.0" height="15.0" fill="rgb(142.179036997469,117.458782306015,142.179036997469)" rx="2" ry="2" />
<text  x="347.56" y="161.5" >ParLoopE..</text>
</g>
<g >
<title>CreateFunctionSpace (8,569 us, 0.04%)</title><rect x="67.8" y="103" width="0.4" height="15.0" fill="rgb(153.762767030143,125.514547231097,125.514547231097)" rx="2" ry="2" />
<text  x="70.77" y="113.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (1,573,425 us, 6.87%)</title><rect x="344.6" y="167" width="81.0" height="15.0" fill="rgb(126.347932275236,163.152662187752,126.347932275236)" rx="2" ry="2" />
<text  x="347.56" y="177.5" >Parloop_..</text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (5,622 us, 0.02%)</title><rect x="425.6" y="135" width="0.3" height="15.0" fill="rgb(124.265057594244,124.265057594244,151.470656308563)" rx="2" ry="2" />
<text  x="428.63" y="145.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (18,203 us, 0.08%)</title><rect x="339.8" y="167" width="0.9" height="15.0" fill="rgb(146.247833924889,159.913143314553,146.247833924889)" rx="2" ry="2" />
<text  x="342.76" y="177.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (1,085,453 us, 4.74%)</title><rect x="11.8" y="135" width="56.0" height="15.0" fill="rgb(152.018416352144,112.141192033101,112.141192033101)" rx="2" ry="2" />
<text  x="14.84" y="145.5" >pyop2..</text>
</g>
<g >
<title>CreateMesh (16,677 us, 0.07%)</title><rect x="70.3" y="71" width="0.9" height="15.0" fill="rgb(116.966317292289,116.966317292289,150.057996895282)" rx="2" ry="2" />
<text  x="73.32" y="81.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_pyop2_kernel_uniform_extrusion (1,085,453 us, 4.74%)</title><rect x="11.8" y="119" width="56.0" height="15.0" fill="rgb(153.124926276323,120.624434785142,120.624434785142)" rx="2" ry="2" />
<text  x="14.84" y="129.5" >Parlo..</text>
</g>
<g >
<title>Mesh: reorder (3,480 us, 0.02%)</title><rect x="71.0" y="87" width="0.2" height="15.0" fill="rgb(151.006983194109,151.006983194109,124.110764709912)" rx="2" ry="2" />
<text  x="74.00" y="97.5" ></text>
</g>
<g >
<title>Log_Event_form0_cell_integral_otherwise (12,079 us, 0.05%)</title><rect x="426.5" y="151" width="0.6" height="15.0" fill="rgb(156.324783356747,145.156672401725,145.156672401725)" rx="2" ry="2" />
<text  x="429.49" y="161.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (11,898 us, 0.05%)</title><rect x="341.3" y="183" width="0.7" height="15.0" fill="rgb(155.300173669251,155.300173669251,144.916226243295)" rx="2" ry="2" />
<text  x="344.35" y="193.5" ></text>
</g>
<g >
<title>firedrake.parloops.par_loop (1,582,056 us, 6.91%)</title><rect x="344.1" y="135" width="81.5" height="15.0" fill="rgb(141.145112342605,153.630214311046,153.630214311046)" rx="2" ry="2" />
<text  x="347.11" y="145.5" >firedrak..</text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (2,054,008 us, 8.97%)</title><rect x="221.2" y="199" width="105.8" height="15.0" fill="rgb(135.981455701769,152.291488515273,152.291488515273)" rx="2" ry="2" />
<text  x="224.16" y="209.5" >Parloop_Cel..</text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalProblem.__init__ (11,614 us, 0.05%)</title><rect x="219.4" y="87" width="0.6" height="15.0" fill="rgb(154.980758424971,134.852481258109,134.852481258109)" rx="2" ry="2" />
<text  x="222.36" y="97.5" ></text>
</g>
<g >
<title>SNESSolve (18,815,327 us, 82.16%)</title><rect x="220.5" y="87" width="969.5" height="15.0" fill="rgb(146.689056250485,146.689056250485,155.810785080739)" rx="2" ry="2" />
<text  x="223.50" y="97.5" >SNESSolve</text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (4,850 us, 0.02%)</title><rect x="341.7" y="231" width="0.3" height="15.0" fill="rgb(153.641650527277,124.585987375793,124.585987375793)" rx="2" ry="2" />
<text  x="344.71" y="241.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (5,221 us, 0.02%)</title><rect x="1189.7" y="135" width="0.3" height="15.0" fill="rgb(148.635392543762,148.635392543762,112.617671558232)" rx="2" ry="2" />
<text  x="1192.73" y="145.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.action (11,178 us, 0.05%)</title><rect x="218.8" y="87" width="0.6" height="15.0" fill="rgb(145.286725306495,145.286725306495,155.539366188354)" rx="2" ry="2" />
<text  x="221.78" y="97.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.LinearVariationalProblem.__init__ (22,792 us, 0.10%)</title><rect x="218.8" y="71" width="1.2" height="15.0" fill="rgb(143.951874916795,160.286904083312,143.951874916795)" rx="2" ry="2" />
<text  x="221.78" y="81.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_form0_cell_integral_otherwise (5,892,275 us, 25.73%)</title><rect x="426.3" y="135" width="303.6" height="15.0" fill="rgb(148.239447199414,148.239447199414,110.698859504854)" rx="2" ry="2" />
<text  x="429.30" y="145.5" >Parloop_Cells_wrap_form0_cell_integra..</text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (11,614 us, 0.05%)</title><rect x="219.4" y="103" width="0.6" height="15.0" fill="rgb(137.310404622064,161.368073666176,137.310404622064)" rx="2" ry="2" />
<text  x="222.36" y="113.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (4,850 us, 0.02%)</title><rect x="341.7" y="199" width="0.3" height="15.0" fill="rgb(154.790532531616,154.790532531616,142.446426883983)" rx="2" ry="2" />
<text  x="344.71" y="209.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (40,889 us, 0.18%)</title><rect x="68.2" y="87" width="2.1" height="15.0" fill="rgb(155.322368933893,155.322368933893,145.023787910403)" rx="2" ry="2" />
<text  x="71.22" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (4,063 us, 0.02%)</title><rect x="339.5" y="199" width="0.3" height="15.0" fill="rgb(153.962056501382,153.962056501382,138.431504583622)" rx="2" ry="2" />
<text  x="342.55" y="209.5" ></text>
</g>
<g >
<title>FunctionSpaceData: CreateElement (9,573 us, 0.04%)</title><rect x="68.9" y="135" width="0.5" height="15.0" fill="rgb(148.224228227388,148.224228227388,110.625106025035)" rx="2" ry="2" />
<text  x="71.95" y="145.5" ></text>
</g>
<g >
<title>CreateExtMesh (1,129,811 us, 4.93%)</title><rect x="10.0" y="71" width="58.2" height="15.0" fill="rgb(137.110343661348,161.400641729548,137.110343661348)" rx="2" ry="2" />
<text  x="13.00" y="81.5" >Creat..</text>
</g>
<g >
<title>firedrake.__init__ (2,830,699 us, 12.36%)</title><rect x="72.5" y="71" width="145.8" height="15.0" fill="rgb(152.944012858561,119.237431915638,119.237431915638)" rx="2" ry="2" />
<text  x="75.49" y="81.5" >firedrake.__init__</text>
</g>
<g >
<title>firedrake.functionspace.MixedFunctionSpace (6,665 us, 0.03%)</title><rect x="339.4" y="151" width="0.4" height="15.0" fill="rgb(131.121696391771,151.031550916385,151.031550916385)" rx="2" ry="2" />
<text  x="342.41" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspace.VectorFunctionSpace (8,569 us, 0.04%)</title><rect x="67.8" y="87" width="0.4" height="15.0" fill="rgb(141.430413672792,141.430413672792,154.792983291508)" rx="2" ry="2" />
<text  x="70.77" y="97.5" ></text>
</g>
<g >
<title>firedrake.utility_meshes.SquareMesh (8,503 us, 0.04%)</title><rect x="218.3" y="71" width="0.5" height="15.0" fill="rgb(133.305862490996,94.7212726331782,133.305862490996)" rx="2" ry="2" />
<text  x="221.35" y="81.5" ></text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (1,286,377 us, 5.62%)</title><rect x="1123.7" y="119" width="66.3" height="15.0" fill="rgb(130.637254095085,162.454400496149,130.637254095085)" rx="2" ry="2" />
<text  x="1126.72" y="129.5" >firedr..</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (1,573,425 us, 6.87%)</title><rect x="344.6" y="183" width="81.0" height="15.0" fill="rgb(143.899591015003,160.295415416162,143.899591015003)" rx="2" ry="2" />
<text  x="347.56" y="193.5" >pyop2.gl..</text>
</g>
<g >
<title>ParLoopExecute (13,537,891 us, 59.12%)</title><rect x="426.1" y="119" width="697.6" height="15.0" fill="rgb(153.119690876407,120.584296719118,120.584296719118)" rx="2" ry="2" />
<text  x="429.15" y="129.5" >ParLoopExecute</text>
</g>
<g >
<title>firedrake.utility_meshes.RectangleMesh (8,503 us, 0.04%)</title><rect x="218.3" y="87" width="0.5" height="15.0" fill="rgb(152.8159207738,118.25539259913,118.25539259913)" rx="2" ry="2" />
<text  x="221.35" y="97.5" ></text>
</g>
<g >
<title>PCApply (2,265,245 us, 9.89%)</title><rect x="220.5" y="119" width="116.7" height="15.0" fill="rgb(141.250752623279,160.726621665978,141.250752623279)" rx="2" ry="2" />
<text  x="223.50" y="129.5" >PCApply</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (5,876,411 us, 25.66%)</title><rect x="427.1" y="151" width="302.8" height="15.0" fill="rgb(119.383158304097,119.383158304097,150.525772574986)" rx="2" ry="2" />
<text  x="430.11" y="161.5" >pyop2.global_kernel.GlobalKernel.comp..</text>
</g>
<g >
<title>Log_Event_form1_cell_integral_otherwise (10,932 us, 0.05%)</title><rect x="730.1" y="151" width="0.6" height="15.0" fill="rgb(154.094417501657,128.057200846033,128.057200846033)" rx="2" ry="2" />
<text  x="733.11" y="161.5" ></text>
</g>
<g >
<title>firedrake.slate.slac.optimise.optimise (5,615 us, 0.02%)</title><rect x="336.9" y="167" width="0.3" height="15.0" fill="rgb(136.816450483339,161.448484805038,136.816450483339)" rx="2" ry="2" />
<text  x="339.93" y="177.5" ></text>
</g>
<g >
<title>CreateMesh (3,227 us, 0.01%)</title><rect x="70.5" y="87" width="0.2" height="15.0" fill="rgb(124.975843078424,124.975843078424,151.608227692598)" rx="2" ry="2" />
<text  x="73.54" y="97.5" ></text>
</g>
<g >
<title>ParLoopExecute (1,085,453 us, 4.74%)</title><rect x="11.8" y="103" width="56.0" height="15.0" fill="rgb(155.723435275358,140.546337111078,140.546337111078)" rx="2" ry="2" />
<text  x="14.84" y="113.5" >ParLo..</text>
</g>
<g >
<title>SNESFunctionEval (14,828,727 us, 64.75%)</title><rect x="425.9" y="103" width="764.1" height="15.0" fill="rgb(115.002581255448,146.852521066227,146.852521066227)" rx="2" ry="2" />
<text  x="428.92" y="113.5" >SNESFunctionEval</text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (24,545 us, 0.11%)</title><rect x="340.7" y="151" width="1.3" height="15.0" fill="rgb(110.641683698644,110.641683698644,148.833874264254)" rx="2" ry="2" />
<text  x="343.69" y="161.5" ></text>
</g>
<g >
<title>ParLoopExecute (2,054,008 us, 8.97%)</title><rect x="221.2" y="183" width="105.8" height="15.0" fill="rgb(108.929032946545,108.929032946545,148.502393473525)" rx="2" ry="2" />
<text  x="224.16" y="193.5" >ParLoopExec..</text>
</g>
<g >
<title>DMPlexStratify (3,246 us, 0.01%)</title><rect x="72.3" y="87" width="0.2" height="15.0" fill="rgb(155.132929331519,136.019124874975,136.019124874975)" rx="2" ry="2" />
<text  x="75.32" y="97.5" ></text>
</g>
<g >
<title>HybridRHS (198,511 us, 0.87%)</title><rect x="327.0" y="151" width="10.2" height="15.0" fill="rgb(138.30848094589,138.30848094589,154.188738247592)" rx="2" ry="2" />
<text  x="330.00" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (18,203 us, 0.08%)</title><rect x="339.8" y="183" width="0.9" height="15.0" fill="rgb(154.950942434114,134.62389199487,134.62389199487)" rx="2" ry="2" />
<text  x="342.76" y="193.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (8,569 us, 0.04%)</title><rect x="67.8" y="135" width="0.4" height="15.0" fill="rgb(155.577592173783,139.428206665666,139.428206665666)" rx="2" ry="2" />
<text  x="70.77" y="145.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_form1_cell_integral_otherwise (7,642,763 us, 33.37%)</title><rect x="729.9" y="135" width="393.8" height="15.0" fill="rgb(131.659464845848,162.287994094862,131.659464845848)" rx="2" ry="2" />
<text  x="732.91" y="145.5" >Parloop_Cells_wrap_form1_cell_integral_otherwise</text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (8,569 us, 0.04%)</title><rect x="67.8" y="151" width="0.4" height="15.0" fill="rgb(150.163286558848,150.163286558848,120.022081015953)" rx="2" ry="2" />
<text  x="70.77" y="161.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (2,727 us, 0.01%)</title><rect x="1189.9" y="167" width="0.1" height="15.0" fill="rgb(148.586056080385,148.586056080385,112.378579466481)" rx="2" ry="2" />
<text  x="1192.86" y="177.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (24,868 us, 0.11%)</title><rect x="339.4" y="135" width="1.3" height="15.0" fill="rgb(141.960335221118,160.611108219818,141.960335221118)" rx="2" ry="2" />
<text  x="342.41" y="145.5" ></text>
</g>
<g >
<title>firedrake.interpolation.make_interpolator (41,777 us, 0.18%)</title><rect x="342.0" y="135" width="2.1" height="15.0" fill="rgb(135.913672715942,161.595448627637,135.913672715942)" rx="2" ry="2" />
<text  x="344.96" y="145.5" ></text>
</g>
<g >
<title>firedrake (22,900,613 us, 100.00%)</title><rect x="10.0" y="55" width="1180.0" height="15.0" fill="rgb(141.679767059696,160.656782106561,141.679767059696)" rx="2" ry="2" />
<text  x="13.00" y="65.5" >firedrake</text>
</g>
<g >
<title>FunctionSpaceData: CreateElement (14,408 us, 0.06%)</title><rect x="340.0" y="199" width="0.7" height="15.0" fill="rgb(147.526576532096,159.70497591338,147.526576532096)" rx="2" ry="2" />
<text  x="342.95" y="209.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (2,583 us, 0.01%)</title><rect x="220.4" y="119" width="0.1" height="15.0" fill="rgb(151.739217783157,151.739217783157,127.659286179915)" rx="2" ry="2" />
<text  x="223.37" y="129.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (4,063 us, 0.02%)</title><rect x="339.5" y="183" width="0.3" height="15.0" fill="rgb(153.526360439582,123.70209670346,123.70209670346)" rx="2" ry="2" />
<text  x="342.55" y="193.5" ></text>
</g>
<g >
<title>firedrake.functionspace.make_scalar_element (3,406 us, 0.01%)</title><rect x="341.5" y="199" width="0.2" height="15.0" fill="rgb(123.027849716995,123.027849716995,151.231196719418)" rx="2" ry="2" />
<text  x="344.53" y="209.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (18,203 us, 0.08%)</title><rect x="339.8" y="151" width="0.9" height="15.0" fill="rgb(153.761856491356,125.507566433731,125.507566433731)" rx="2" ry="2" />
<text  x="342.76" y="161.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (2,054,008 us, 8.97%)</title><rect x="221.2" y="215" width="105.8" height="15.0" fill="rgb(156.259315236277,144.654750144793,144.654750144793)" rx="2" ry="2" />
<text  x="224.16" y="225.5" >pyop2.globa..</text>
</g>
<g >
<title>KSPSolve (2,265,245 us, 9.89%)</title><rect x="220.5" y="103" width="116.7" height="15.0" fill="rgb(152.348341088206,114.670615009578,114.670615009578)" rx="2" ry="2" />
<text  x="223.50" y="113.5" >KSPSolve</text>
</g>
<g >
<title>firedrake.parloops.par_loop (2,063,935 us, 9.01%)</title><rect x="220.6" y="167" width="106.4" height="15.0" fill="rgb(152.239283228851,113.834504754528,113.834504754528)" rx="2" ry="2" />
<text  x="223.65" y="177.5" >firedrake.p..</text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.solve (18,815,327 us, 82.16%)</title><rect x="220.5" y="71" width="969.5" height="15.0" fill="rgb(145.192031185073,125.179579911751,145.192031185073)" rx="2" ry="2" />
<text  x="223.50" y="81.5" >firedrake.variational_solver.NonlinearVariationalSolver.solve</text>
</g>
<g >
<title>CreateFunctionSpace (4,063 us, 0.02%)</title><rect x="339.5" y="167" width="0.3" height="15.0" fill="rgb(152.201469210873,113.544597283361,113.544597283361)" rx="2" ry="2" />
<text  x="342.55" y="177.5" ></text>
</g>
<g >
<title>firedrake.matrix_free.operators.ImplicitMatrixContext.__init__ (6,496 us, 0.03%)</title><rect x="220.2" y="103" width="0.3" height="15.0" fill="rgb(155.254572711507,155.254572711507,144.695236986532)" rx="2" ry="2" />
<text  x="223.17" y="113.5" ></text>
</g>
<g >
<title>firedrake.mesh.MeshTopology._facets (17,119 us, 0.07%)</title><rect x="69.4" y="135" width="0.9" height="15.0" fill="rgb(126.30956366554,149.783960950325,149.783960950325)" rx="2" ry="2" />
<text  x="72.44" y="145.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (24,545 us, 0.11%)</title><rect x="340.7" y="135" width="1.3" height="15.0" fill="rgb(152.284446381097,114.180755588408,114.180755588408)" rx="2" ry="2" />
<text  x="343.69" y="145.5" ></text>
</g>
<g >
<title>HybridBreak (2,066,734 us, 9.02%)</title><rect x="220.5" y="151" width="106.5" height="15.0" fill="rgb(140.063021818326,112.03649340946,140.063021818326)" rx="2" ry="2" />
<text  x="223.50" y="161.5" >HybridBreak</text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (2,727 us, 0.01%)</title><rect x="1189.9" y="151" width="0.1" height="15.0" fill="rgb(122.328163670241,148.751746136729,148.751746136729)" rx="2" ry="2" />
<text  x="1192.86" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (40,889 us, 0.18%)</title><rect x="68.2" y="119" width="2.1" height="15.0" fill="rgb(148.811387659285,148.811387659285,113.470570964227)" rx="2" ry="2" />
<text  x="71.22" y="129.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.action (3,913 us, 0.02%)</title><rect x="220.2" y="119" width="0.2" height="15.0" fill="rgb(156.522265655565,146.670703359331,146.670703359331)" rx="2" ry="2" />
<text  x="223.17" y="129.5" ></text>
</g>
<g >
<title>all (22,900,613 us, 100%)</title><rect x="10.0" y="39" width="1180.0" height="15.0" fill="rgb(112.62360917919,112.62360917919,149.217472744359)" rx="2" ry="2" />
<text  x="13.00" y="49.5" ></text>
</g>
<g >
<title>firedrake.mesh._from_cell_list (4,312 us, 0.02%)</title><rect x="218.6" y="103" width="0.2" height="15.0" fill="rgb(149.884208654792,159.321175335266,149.884208654792)" rx="2" ry="2" />
<text  x="221.56" y="113.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (40,889 us, 0.18%)</title><rect x="68.2" y="103" width="2.1" height="15.0" fill="rgb(154.99540880676,134.964800851829,134.964800851829)" rx="2" ry="2" />
<text  x="71.22" y="113.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (7,627,999 us, 33.31%)</title><rect x="730.7" y="151" width="393.0" height="15.0" fill="rgb(148.747713312947,159.506186204869,148.747713312947)" rx="2" ry="2" />
<text  x="733.67" y="161.5" >pyop2.global_kernel.GlobalKernel.compile</text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (17,836 us, 0.08%)</title><rect x="341.0" y="167" width="1.0" height="15.0" fill="rgb(132.81863183034,162.099292492735,132.81863183034)" rx="2" ry="2" />
<text  x="344.04" y="177.5" ></text>
</g>
<g >
<title>Mesh: numbering (5,837 us, 0.03%)</title><rect x="70.7" y="87" width="0.3" height="15.0" fill="rgb(154.166644848382,128.610943837592,128.610943837592)" rx="2" ry="2" />
<text  x="73.70" y="97.5" ></text>
</g>
<g >
<title>PetscBarrier (25,367 us, 0.11%)</title><rect x="71.2" y="71" width="1.3" height="15.0" fill="rgb(111.48835857322,111.48835857322,148.997746820623)" rx="2" ry="2" />
<text  x="74.18" y="81.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (8,569 us, 0.04%)</title><rect x="67.8" y="119" width="0.4" height="15.0" fill="rgb(154.744581951627,154.744581951627,142.22374330404)" rx="2" ry="2" />
<text  x="70.77" y="129.5" ></text>
</g>
<g >
<title>firedrake.extrusion_utils.make_extruded_coords (1,118,405 us, 4.88%)</title><rect x="10.1" y="87" width="57.7" height="15.0" fill="rgb(134.792311685557,134.792311685557,153.508189358495)" rx="2" ry="2" />
<text  x="13.15" y="97.5" >fired..</text>
</g>
<g >
<title>SCForwardElim (2,265,245 us, 9.89%)</title><rect x="220.5" y="135" width="116.7" height="15.0" fill="rgb(140.633121227514,140.633121227514,154.63866862468)" rx="2" ry="2" />
<text  x="223.50" y="145.5" >SCForwardElim</text>
</g>
<g >
<title>HybridInit (1,721,355 us, 7.52%)</title><rect x="337.2" y="119" width="88.7" height="15.0" fill="rgb(128.317257149714,150.304474075852,150.304474075852)" rx="2" ry="2" />
<text  x="340.22" y="129.5" >HybridInit</text>
</g>
<g >
<title>PCSetUp (1,721,355 us, 7.52%)</title><rect x="337.2" y="103" width="88.7" height="15.0" fill="rgb(154.56910762949,131.696491826086,131.696491826086)" rx="2" ry="2" />
<text  x="340.22" y="113.5" >PCSetUp</text>
</g>
<g >
<title>CreateFunctionSpace (40,889 us, 0.18%)</title><rect x="68.2" y="71" width="2.1" height="15.0" fill="rgb(143.511677312558,154.243768192145,154.243768192145)" rx="2" ry="2" />
<text  x="71.22" y="81.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (4,850 us, 0.02%)</title><rect x="341.7" y="215" width="0.3" height="15.0" fill="rgb(152.381174787295,114.92234003593,114.92234003593)" rx="2" ry="2" />
<text  x="344.71" y="225.5" ></text>
</g>
</g>
</svg>
