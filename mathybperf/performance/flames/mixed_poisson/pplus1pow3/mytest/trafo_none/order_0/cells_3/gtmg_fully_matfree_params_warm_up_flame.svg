<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="283" onload="init(evt)" viewBox="0 0 1200 283" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:13px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:18px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 13 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (1 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="283.0" fill="url(#background)"  />
<text id="title" x="600.00" y="26" >Firedrake example</text>
<text id="details" x="10.00" y="265" > </text>
<text id="unzoom" x="10.00" y="26" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="26" >Search</text>
<text id="ignorecase" x="1174.00" y="26" >ic</text>
<text id="matched" x="1090.00" y="265" > </text>
<g id="frames">
<g >
<title>CreateFunctionSpace (9,373 us, 0.02%)</title><rect x="1053.1" y="151" width="0.2" height="15.0" fill="rgb(152.46109256369,152.46109256369,131.157602424036)" rx="2" ry="2" />
<text  x="1056.06" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (6,781 us, 0.01%)</title><rect x="94.8" y="103" width="0.1" height="15.0" fill="rgb(134.022311355867,151.783562203373,151.783562203373)" rx="2" ry="2" />
<text  x="97.78" y="113.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (690,024 us, 1.18%)</title><rect x="1053.9" y="199" width="14.0" height="15.0" fill="rgb(154.831529031058,133.70838923811,133.70838923811)" rx="2" ry="2" />
<text  x="1056.93" y="209.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_pyop2_kernel_uniform_extrusion (1,093,092 us, 1.87%)</title><rect x="10.7" y="119" width="22.1" height="15.0" fill="rgb(134.622052294746,134.622052294746,153.475235928015)" rx="2" ry="2" />
<text  x="13.74" y="129.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (6,648 us, 0.01%)</title><rect x="1189.9" y="151" width="0.1" height="15.0" fill="rgb(150.031897870234,159.297132904846,150.031897870234)" rx="2" ry="2" />
<text  x="1192.87" y="161.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (11,387 us, 0.02%)</title><rect x="33.0" y="71" width="0.2" height="15.0" fill="rgb(142.629940512881,142.629940512881,155.025149776687)" rx="2" ry="2" />
<text  x="35.99" y="81.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (1,093,092 us, 1.87%)</title><rect x="10.7" y="135" width="22.1" height="15.0" fill="rgb(140.837621277613,140.837621277613,154.678249279538)" rx="2" ry="2" />
<text  x="13.74" y="145.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (7,391 us, 0.01%)</title><rect x="32.8" y="151" width="0.2" height="15.0" fill="rgb(140.142439729288,112.240001806302,140.142439729288)" rx="2" ry="2" />
<text  x="35.84" y="161.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (690,024 us, 1.18%)</title><rect x="1053.9" y="183" width="14.0" height="15.0" fill="rgb(152.291211403151,152.291211403151,130.334332184499)" rx="2" ry="2" />
<text  x="1056.93" y="193.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (7,391 us, 0.01%)</title><rect x="32.8" y="103" width="0.2" height="15.0" fill="rgb(114.924498369657,146.832277355096,146.832277355096)" rx="2" ry="2" />
<text  x="35.84" y="113.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_form0_cell_integral_otherwise (2,805,456 us, 4.81%)</title><rect x="1067.9" y="151" width="56.7" height="15.0" fill="rgb(148.142190784778,148.142190784778,110.227539957)" rx="2" ry="2" />
<text  x="1070.88" y="161.5" >Parlo..</text>
</g>
<g >
<title>HybridInit (750,548 us, 1.29%)</title><rect x="1052.7" y="135" width="15.2" height="15.0" fill="rgb(154.742502499935,133.0258524995,133.0258524995)" rx="2" ry="2" />
<text  x="1055.70" y="145.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_form1_cell_integral_otherwise (2,265,152 us, 3.88%)</title><rect x="1124.6" y="151" width="45.8" height="15.0" fill="rgb(137.902568849302,161.271674838486,137.902568849302)" rx="2" ry="2" />
<text  x="1127.60" y="161.5" >Par..</text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (10,700 us, 0.02%)</title><rect x="95.2" y="103" width="0.2" height="15.0" fill="rgb(153.625949775525,153.625949775525,136.802679681391)" rx="2" ry="2" />
<text  x="98.16" y="113.5" ></text>
</g>
<g >
<title>HybridBreak (893,104 us, 1.53%)</title><rect x="95.5" y="167" width="18.1" height="15.0" fill="rgb(146.754708858264,159.830628790515,146.754708858264)" rx="2" ry="2" />
<text  x="98.53" y="177.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (29,283,355 us, 50.17%)</title><rect x="237.5" y="215" width="592.1" height="15.0" fill="rgb(132.460120558998,162.157654792721,132.460120558998)" rx="2" ry="2" />
<text  x="240.50" y="225.5" >pyop2.global_kernel.GlobalKernel.compile</text>
</g>
<g >
<title>firedrake.functionspace.VectorFunctionSpace (6,781 us, 0.01%)</title><rect x="94.8" y="71" width="0.1" height="15.0" fill="rgb(147.600591984587,131.351516960503,147.600591984587)" rx="2" ry="2" />
<text  x="97.78" y="81.5" ></text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (11,018,355 us, 18.88%)</title><rect x="829.9" y="183" width="222.8" height="15.0" fill="rgb(129.546652040242,150.623206084507,150.623206084507)" rx="2" ry="2" />
<text  x="832.94" y="193.5" >firedrake.tsfc_interface.co..</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (2,253,808 us, 3.86%)</title><rect x="1124.8" y="167" width="45.6" height="15.0" fill="rgb(131.01166188634,151.003023452014,151.003023452014)" rx="2" ry="2" />
<text  x="1127.83" y="177.5" >pyo..</text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (893,104 us, 1.53%)</title><rect x="95.5" y="215" width="18.1" height="15.0" fill="rgb(109.075027414191,145.315747848124,145.315747848124)" rx="2" ry="2" />
<text  x="98.53" y="225.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (11,387 us, 0.02%)</title><rect x="33.0" y="103" width="0.2" height="15.0" fill="rgb(143.455609660727,160.367691450579,143.455609660727)" rx="2" ry="2" />
<text  x="35.99" y="113.5" ></text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (969,706 us, 1.66%)</title><rect x="1170.4" y="135" width="19.6" height="15.0" fill="rgb(155.805889111948,141.178483191599,141.178483191599)" rx="2" ry="2" />
<text  x="1173.39" y="145.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (7,391 us, 0.01%)</title><rect x="32.8" y="135" width="0.2" height="15.0" fill="rgb(127.277670383212,163.0013094725,127.277670383212)" rx="2" ry="2" />
<text  x="35.84" y="145.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (7,391 us, 0.01%)</title><rect x="32.8" y="119" width="0.2" height="15.0" fill="rgb(119.720608150954,148.075713224321,148.075713224321)" rx="2" ry="2" />
<text  x="35.84" y="129.5" ></text>
</g>
<g >
<title>ParLoopExecute (5,070,608 us, 8.69%)</title><rect x="1067.9" y="135" width="102.5" height="15.0" fill="rgb(146.615173903219,146.615173903219,155.796485271591)" rx="2" ry="2" />
<text  x="1070.88" y="145.5" >ParLoopExec..</text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.solve (54,133,756 us, 92.75%)</title><rect x="95.5" y="87" width="1094.5" height="15.0" fill="rgb(138.034783507429,106.839132737787,138.034783507429)" rx="2" ry="2" />
<text  x="98.53" y="97.5" >firedrake.variational_solver.NonlinearVariationalSolver.solve</text>
</g>
<g >
<title>CreateExtMesh (1,137,168 us, 1.95%)</title><rect x="10.0" y="71" width="23.0" height="15.0" fill="rgb(115.863623652607,115.863623652607,149.844572319859)" rx="2" ry="2" />
<text  x="13.00" y="81.5" ></text>
</g>
<g >
<title>firedrake.extrusion_utils.make_extruded_coords (1,129,777 us, 1.94%)</title><rect x="10.0" y="87" width="22.8" height="15.0" fill="rgb(124.11797984559,124.11797984559,151.442189647534)" rx="2" ry="2" />
<text  x="13.00" y="97.5" ></text>
</g>
<g >
<title>all (58,364,126 us, 100%)</title><rect x="10.0" y="39" width="1180.0" height="15.0" fill="rgb(153.578650051958,124.102983731677,124.102983731677)" rx="2" ry="2" />
<text  x="13.00" y="49.5" ></text>
</g>
<g >
<title>firedrake.assemble.allocate_matrix (7,801 us, 0.01%)</title><rect x="95.4" y="87" width="0.1" height="15.0" fill="rgb(156.406335431885,145.781904977784,145.781904977784)" rx="2" ry="2" />
<text  x="98.37" y="97.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.LinearVariationalProblem.__init__ (22,584 us, 0.04%)</title><rect x="94.9" y="71" width="0.5" height="15.0" fill="rgb(154.135701266833,128.373709712389,128.373709712389)" rx="2" ry="2" />
<text  x="97.91" y="81.5" ></text>
</g>
<g >
<title>Log_Event_form0_cell_integral_otherwise (8,594 us, 0.01%)</title><rect x="1068.1" y="167" width="0.1" height="15.0" fill="rgb(127.636145447424,127.636145447424,152.123124925308)" rx="2" ry="2" />
<text  x="1071.07" y="177.5" ></text>
</g>
<g >
<title>ParLoopExecute (1,093,092 us, 1.87%)</title><rect x="10.7" y="103" width="22.1" height="15.0" fill="rgb(148.517300071112,148.517300071112,112.045377267696)" rx="2" ry="2" />
<text  x="13.74" y="113.5" ></text>
</g>
<g >
<title>firedrake (58,364,126 us, 100.00%)</title><rect x="10.0" y="55" width="1180.0" height="15.0" fill="rgb(148.332382840981,148.332382840981,111.149239921678)" rx="2" ry="2" />
<text  x="13.00" y="65.5" >firedrake</text>
</g>
<g >
<title>Parloop_Cells_wrap_slate_loopy_knl_0 (29,283,355 us, 50.17%)</title><rect x="237.5" y="199" width="592.1" height="15.0" fill="rgb(127.803713209621,162.915674593783,127.803713209621)" rx="2" ry="2" />
<text  x="240.50" y="209.5" >Parloop_Cells_wrap_slate_loopy_knl_0</text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.__init__ (7,801 us, 0.01%)</title><rect x="95.4" y="71" width="0.1" height="15.0" fill="rgb(124.81382894937,124.81382894937,151.576870119233)" rx="2" ry="2" />
<text  x="98.37" y="81.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.action (11,884 us, 0.02%)</title><rect x="94.9" y="87" width="0.3" height="15.0" fill="rgb(148.554090569598,148.554090569598,112.223669683438)" rx="2" ry="2" />
<text  x="97.91" y="97.5" ></text>
</g>
<g >
<title>PCApply (47,342,894 us, 81.12%)</title><rect x="95.5" y="135" width="957.2" height="15.0" fill="rgb(146.895122766314,146.895122766314,155.850668922512)" rx="2" ry="2" />
<text  x="98.53" y="145.5" >PCApply</text>
</g>
<g >
<title>ParLoopExecute (893,104 us, 1.53%)</title><rect x="95.5" y="199" width="18.1" height="15.0" fill="rgb(120.970847536208,148.399849361239,148.399849361239)" rx="2" ry="2" />
<text  x="98.53" y="209.5" ></text>
</g>
<g >
<title>SNESSolve (54,133,756 us, 92.75%)</title><rect x="95.5" y="103" width="1094.5" height="15.0" fill="rgb(120.672001631854,120.672001631854,150.775226122294)" rx="2" ry="2" />
<text  x="98.53" y="113.5" >SNESSolve</text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (6,781 us, 0.01%)</title><rect x="94.8" y="135" width="0.1" height="15.0" fill="rgb(148.803421397026,134.433767329878,148.803421397026)" rx="2" ry="2" />
<text  x="97.78" y="145.5" ></text>
</g>
<g >
<title>perfsolve (54,133,756 us, 92.75%)</title><rect x="95.5" y="71" width="1094.5" height="15.0" fill="rgb(156.343074086298,145.296901328282,145.296901328282)" rx="2" ry="2" />
<text  x="98.53" y="81.5" >perfsolve</text>
</g>
<g >
<title>SCForwardElim (47,342,894 us, 81.12%)</title><rect x="95.5" y="151" width="957.2" height="15.0" fill="rgb(136.987038241084,104.154285492779,136.987038241084)" rx="2" ry="2" />
<text  x="98.53" y="161.5" >SCForwardElim</text>
</g>
<g >
<title>ParLoopExecute (29,283,355 us, 50.17%)</title><rect x="237.5" y="183" width="592.1" height="15.0" fill="rgb(130.353533030135,150.832397452257,150.832397452257)" rx="2" ry="2" />
<text  x="240.50" y="193.5" >ParLoopExecute</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (893,104 us, 1.53%)</title><rect x="95.5" y="231" width="18.1" height="15.0" fill="rgb(110.883175717604,145.784527037897,145.784527037897)" rx="2" ry="2" />
<text  x="98.53" y="241.5" ></text>
</g>
<g >
<title>firedrake.__init__ (3,044,649 us, 5.22%)</title><rect x="33.2" y="71" width="61.6" height="15.0" fill="rgb(139.795132866868,160.963583021673,139.795132866868)" rx="2" ry="2" />
<text  x="36.22" y="81.5" >firedr..</text>
</g>
<g >
<title>CreateFunctionSpace (6,781 us, 0.01%)</title><rect x="94.8" y="87" width="0.1" height="15.0" fill="rgb(134.458522653549,151.89665402129,151.89665402129)" rx="2" ry="2" />
<text  x="97.78" y="97.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (2,787,119 us, 4.78%)</title><rect x="1068.2" y="167" width="56.4" height="15.0" fill="rgb(145.884030230266,159.972367171817,145.884030230266)" rx="2" ry="2" />
<text  x="1071.25" y="177.5" >pyop2..</text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (11,387 us, 0.02%)</title><rect x="33.0" y="119" width="0.2" height="15.0" fill="rgb(153.203296979245,121.225276840875,121.225276840875)" rx="2" ry="2" />
<text  x="35.99" y="129.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (11,387 us, 0.02%)</title><rect x="33.0" y="87" width="0.2" height="15.0" fill="rgb(154.280121474019,154.280121474019,139.972896374094)" rx="2" ry="2" />
<text  x="35.99" y="97.5" ></text>
</g>
<g >
<title>firedrake.matrix_free.operators.ImplicitMatrixContext.__init__ (7,801 us, 0.01%)</title><rect x="95.4" y="103" width="0.1" height="15.0" fill="rgb(155.160559775862,136.230958281606,136.230958281606)" rx="2" ry="2" />
<text  x="98.37" y="113.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalProblem.__init__ (10,700 us, 0.02%)</title><rect x="95.2" y="87" width="0.2" height="15.0" fill="rgb(153.294290489376,153.294290489376,135.195407756209)" rx="2" ry="2" />
<text  x="98.16" y="97.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (7,579 us, 0.01%)</title><rect x="1053.3" y="151" width="0.1" height="15.0" fill="rgb(149.859771543283,149.859771543283,118.551200555912)" rx="2" ry="2" />
<text  x="1056.25" y="161.5" ></text>
</g>
<g >
<title>SNESFunctionEval (6,040,314 us, 10.35%)</title><rect x="1067.9" y="119" width="122.1" height="15.0" fill="rgb(127.943779524883,150.207646543488,150.207646543488)" rx="2" ry="2" />
<text  x="1070.88" y="129.5" >SNESFunctionE..</text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (7,579 us, 0.01%)</title><rect x="1053.3" y="167" width="0.1" height="15.0" fill="rgb(153.237318039942,153.237318039942,134.919310501256)" rx="2" ry="2" />
<text  x="1056.25" y="177.5" ></text>
</g>
<g >
<title>firedrake.parloops.par_loop (690,024 us, 1.18%)</title><rect x="1053.9" y="151" width="14.0" height="15.0" fill="rgb(132.681917366306,162.121548335718,132.681917366306)" rx="2" ry="2" />
<text  x="1056.93" y="161.5" ></text>
</g>
<g >
<title>KSPSolve (47,342,894 us, 81.12%)</title><rect x="95.5" y="119" width="957.2" height="15.0" fill="rgb(142.096729022912,142.096729022912,154.921947552822)" rx="2" ry="2" />
<text  x="98.53" y="129.5" >KSPSolve</text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (7,579 us, 0.01%)</title><rect x="1053.3" y="183" width="0.1" height="15.0" fill="rgb(140.915391195452,114.220689938346,140.915391195452)" rx="2" ry="2" />
<text  x="1056.25" y="193.5" ></text>
</g>
<g >
<title>HybridRHS (46,449,790 us, 79.59%)</title><rect x="113.6" y="167" width="939.1" height="15.0" fill="rgb(139.180369928159,161.06366070937,139.180369928159)" rx="2" ry="2" />
<text  x="116.59" y="177.5" >HybridRHS</text>
</g>
<g >
<title>firedrake.functionspace.VectorFunctionSpace (7,391 us, 0.01%)</title><rect x="32.8" y="87" width="0.2" height="15.0" fill="rgb(127.292333257194,127.292333257194,152.056580630425)" rx="2" ry="2" />
<text  x="35.84" y="97.5" ></text>
</g>
<g >
<title>PCSetUp (750,548 us, 1.29%)</title><rect x="1052.7" y="119" width="15.2" height="15.0" fill="rgb(128.83844201201,162.747230370138,128.83844201201)" rx="2" ry="2" />
<text  x="1055.70" y="129.5" ></text>
</g>
<g >
<title>ParLoopExecute (690,024 us, 1.18%)</title><rect x="1053.9" y="167" width="14.0" height="15.0" fill="rgb(150.769877883017,139.472812075232,150.769877883017)" rx="2" ry="2" />
<text  x="1056.93" y="177.5" ></text>
</g>
<g >
<title>firedrake.parloops.par_loop (893,104 us, 1.53%)</title><rect x="95.5" y="183" width="18.1" height="15.0" fill="rgb(153.654573391013,124.685062664436,124.685062664436)" rx="2" ry="2" />
<text  x="98.53" y="193.5" ></text>
</g>
<g >
<title>firedrake.slate.slac.optimise.optimise (18,958 us, 0.03%)</title><rect x="829.6" y="183" width="0.3" height="15.0" fill="rgb(152.074765579604,142.816586797735,152.074765579604)" rx="2" ry="2" />
<text  x="832.55" y="193.5" ></text>
</g>
<g >
<title>firedrake.interpolation.make_interpolator (25,869 us, 0.04%)</title><rect x="1053.4" y="151" width="0.5" height="15.0" fill="rgb(138.513636341128,152.947979792144,152.947979792144)" rx="2" ry="2" />
<text  x="1056.40" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (6,781 us, 0.01%)</title><rect x="94.8" y="119" width="0.1" height="15.0" fill="rgb(140.027185780435,140.027185780435,154.521390796213)" rx="2" ry="2" />
<text  x="97.78" y="129.5" ></text>
</g>
</g>
</svg>
