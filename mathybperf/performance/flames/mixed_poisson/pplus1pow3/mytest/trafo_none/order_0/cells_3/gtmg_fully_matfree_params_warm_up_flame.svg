<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="283" onload="init(evt)" viewBox="0 0 1200 283" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:13px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:18px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 13 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (1 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="283.0" fill="url(#background)"  />
<text id="title" x="600.00" y="26" >Firedrake example</text>
<text id="details" x="10.00" y="265" > </text>
<text id="unzoom" x="10.00" y="26" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="26" >Search</text>
<text id="ignorecase" x="1174.00" y="26" >ic</text>
<text id="matched" x="1090.00" y="265" > </text>
<g id="frames">
<g >
<title>all (39,300,318 us, 100%)</title><rect x="10.0" y="39" width="1180.0" height="15.0" fill="rgb(138.189645503705,161.224941429629,138.189645503705)" rx="2" ry="2" />
<text  x="13.00" y="49.5" ></text>
</g>
<g >
<title>ParLoopExecute (893,855 us, 2.27%)</title><rect x="139.7" y="199" width="26.8" height="15.0" fill="rgb(136.193575120769,152.346482438718,152.346482438718)" rx="2" ry="2" />
<text  x="142.69" y="209.5" >P..</text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (4,872 us, 0.01%)</title><rect x="984.7" y="167" width="0.1" height="15.0" fill="rgb(138.877129198846,153.042218681182,153.042218681182)" rx="2" ry="2" />
<text  x="987.70" y="177.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (676,986 us, 1.72%)</title><rect x="985.9" y="183" width="20.3" height="15.0" fill="rgb(156.536635641185,146.780873249083,146.780873249083)" rx="2" ry="2" />
<text  x="988.89" y="193.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (9,107 us, 0.02%)</title><rect x="984.6" y="151" width="0.2" height="15.0" fill="rgb(147.828416933945,159.655839103776,147.828416933945)" rx="2" ry="2" />
<text  x="987.57" y="161.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.__init__ (7,454 us, 0.02%)</title><rect x="139.3" y="71" width="0.2" height="15.0" fill="rgb(143.6789097525,121.302206240781,143.6789097525)" rx="2" ry="2" />
<text  x="142.28" y="81.5" ></text>
</g>
<g >
<title>KSPSolve (28,126,880 us, 71.57%)</title><rect x="139.5" y="119" width="844.5" height="15.0" fill="rgb(138.374737069552,107.710263740726,138.374737069552)" rx="2" ry="2" />
<text  x="142.51" y="129.5" >KSPSolve</text>
</g>
<g >
<title>ParLoopExecute (10,418,053 us, 26.51%)</title><rect x="346.2" y="183" width="312.8" height="15.0" fill="rgb(147.149843382303,147.149843382303,155.899969686897)" rx="2" ry="2" />
<text  x="349.17" y="193.5" >ParLoopExecute</text>
</g>
<g >
<title>firedrake.extrusion_utils.make_extruded_coords (1,134,240 us, 2.89%)</title><rect x="10.0" y="87" width="34.1" height="15.0" fill="rgb(153.606817486847,124.31893406583,124.31893406583)" rx="2" ry="2" />
<text  x="13.00" y="97.5" >fi..</text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (9,955 us, 0.03%)</title><rect x="139.0" y="103" width="0.3" height="15.0" fill="rgb(129.920621032155,150.720161008337,150.720161008337)" rx="2" ry="2" />
<text  x="141.98" y="113.5" ></text>
</g>
<g >
<title>ParLoopExecute (1,095,282 us, 2.79%)</title><rect x="11.2" y="103" width="32.9" height="15.0" fill="rgb(123.659951767212,163.590240409989,123.659951767212)" rx="2" ry="2" />
<text  x="14.17" y="113.5" >Pa..</text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (5,961 us, 0.02%)</title><rect x="138.5" y="119" width="0.2" height="15.0" fill="rgb(144.659351926663,123.814589312073,144.659351926663)" rx="2" ry="2" />
<text  x="141.48" y="129.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_pyop2_kernel_uniform_extrusion (1,095,282 us, 2.79%)</title><rect x="11.2" y="119" width="32.9" height="15.0" fill="rgb(128.091965706038,128.091965706038,152.211348201169)" rx="2" ry="2" />
<text  x="14.17" y="129.5" >Pa..</text>
</g>
<g >
<title>firedrake.parloops.par_loop (682,412 us, 1.74%)</title><rect x="985.7" y="151" width="20.5" height="15.0" fill="rgb(136.558189790403,136.558189790403,153.849972217497)" rx="2" ry="2" />
<text  x="988.73" y="161.5" ></text>
</g>
<g >
<title>HybridRHS (27,226,988 us, 69.28%)</title><rect x="166.5" y="167" width="817.5" height="15.0" fill="rgb(104.59967551602,144.155471430079,144.155471430079)" rx="2" ry="2" />
<text  x="169.53" y="177.5" >HybridRHS</text>
</g>
<g >
<title>firedrake.__init__ (3,126,646 us, 7.96%)</title><rect x="44.6" y="71" width="93.9" height="15.0" fill="rgb(152.500368143677,115.836155768189,115.836155768189)" rx="2" ry="2" />
<text  x="47.60" y="81.5" >firedrake...</text>
</g>
<g >
<title>Parloop_Cells_wrap_form0_cell_integral_otherwise (2,777,581 us, 7.07%)</title><rect x="1006.2" y="151" width="83.4" height="15.0" fill="rgb(153.50286686588,123.52197930508,123.52197930508)" rx="2" ry="2" />
<text  x="1009.22" y="161.5" >Parloop_..</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (1,095,282 us, 2.79%)</title><rect x="11.2" y="135" width="32.9" height="15.0" fill="rgb(118.21358315313,147.6850030397,147.6850030397)" rx="2" ry="2" />
<text  x="14.17" y="145.5" >py..</text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (5,961 us, 0.02%)</title><rect x="138.5" y="103" width="0.2" height="15.0" fill="rgb(136.266289324197,136.266289324197,153.79347535307)" rx="2" ry="2" />
<text  x="141.48" y="113.5" ></text>
</g>
<g >
<title>firedrake.interpolation.make_interpolator (24,215 us, 0.06%)</title><rect x="985.0" y="151" width="0.7" height="15.0" fill="rgb(120.68405807689,120.68405807689,150.777559627785)" rx="2" ry="2" />
<text  x="988.00" y="161.5" ></text>
</g>
<g >
<title>perfsolve (34,987,025 us, 89.02%)</title><rect x="139.5" y="71" width="1050.5" height="15.0" fill="rgb(145.699559944077,126.480122356698,145.699559944077)" rx="2" ry="2" />
<text  x="142.51" y="81.5" >perfsolve</text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (893,855 us, 2.27%)</title><rect x="139.7" y="215" width="26.8" height="15.0" fill="rgb(143.455462997855,160.367715325931,143.455462997855)" rx="2" ry="2" />
<text  x="142.69" y="225.5" >P..</text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (5,961 us, 0.02%)</title><rect x="138.5" y="135" width="0.2" height="15.0" fill="rgb(132.857184237284,132.857184237284,153.133648562055)" rx="2" ry="2" />
<text  x="141.48" y="145.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (11,589 us, 0.03%)</title><rect x="44.3" y="87" width="0.3" height="15.0" fill="rgb(127.823156235037,127.823156235037,152.15932056162)" rx="2" ry="2" />
<text  x="47.25" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (6,555 us, 0.02%)</title><rect x="44.1" y="135" width="0.2" height="15.0" fill="rgb(110.734218069141,145.745908388296,145.745908388296)" rx="2" ry="2" />
<text  x="47.06" y="145.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (11,589 us, 0.03%)</title><rect x="44.3" y="71" width="0.3" height="15.0" fill="rgb(119.692041558078,148.068307070613,148.068307070613)" rx="2" ry="2" />
<text  x="47.25" y="81.5" ></text>
</g>
<g >
<title>firedrake.matrix_free.operators.ImplicitMatrixContext.__init__ (7,454 us, 0.02%)</title><rect x="139.3" y="103" width="0.2" height="15.0" fill="rgb(149.923890291191,149.923890291191,118.861929872692)" rx="2" ry="2" />
<text  x="142.28" y="113.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (6,555 us, 0.02%)</title><rect x="44.1" y="103" width="0.2" height="15.0" fill="rgb(131.901529397596,162.248588237601,131.901529397596)" rx="2" ry="2" />
<text  x="47.06" y="113.5" ></text>
</g>
<g >
<title>firedrake.functionspace.VectorFunctionSpace (6,555 us, 0.02%)</title><rect x="44.1" y="87" width="0.2" height="15.0" fill="rgb(126.853789540254,163.070313330656,126.853789540254)" rx="2" ry="2" />
<text  x="47.06" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (4,872 us, 0.01%)</title><rect x="984.7" y="183" width="0.1" height="15.0" fill="rgb(155.142915746022,136.095687386169,136.095687386169)" rx="2" ry="2" />
<text  x="987.70" y="193.5" ></text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (10,806,037 us, 27.50%)</title><rect x="659.6" y="183" width="324.4" height="15.0" fill="rgb(152.093115951195,152.093115951195,129.374331148097)" rx="2" ry="2" />
<text  x="662.57" y="193.5" >firedrake.tsfc_interface.compile_form</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (893,855 us, 2.27%)</title><rect x="139.7" y="231" width="26.8" height="15.0" fill="rgb(152.112205912662,112.860245330407,112.860245330407)" rx="2" ry="2" />
<text  x="142.69" y="241.5" >p..</text>
</g>
<g >
<title>firedrake (39,300,318 us, 100.00%)</title><rect x="10.0" y="55" width="1180.0" height="15.0" fill="rgb(148.891070635906,148.891070635906,113.856726927854)" rx="2" ry="2" />
<text  x="13.00" y="65.5" >firedrake</text>
</g>
<g >
<title>firedrake.functionspace.VectorFunctionSpace (5,961 us, 0.02%)</title><rect x="138.5" y="71" width="0.2" height="15.0" fill="rgb(132.964913800247,132.964913800247,153.154499445209)" rx="2" ry="2" />
<text  x="141.48" y="81.5" ></text>
</g>
<g >
<title>Log_Event_form0_cell_integral_otherwise (8,077 us, 0.02%)</title><rect x="1006.5" y="167" width="0.3" height="15.0" fill="rgb(138.760993403188,161.131931306458,138.760993403188)" rx="2" ry="2" />
<text  x="1009.51" y="177.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (5,310 us, 0.01%)</title><rect x="984.8" y="183" width="0.2" height="15.0" fill="rgb(139.849851688764,160.95467530648,139.849851688764)" rx="2" ry="2" />
<text  x="987.84" y="193.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (2,281,292 us, 5.80%)</title><rect x="1090.0" y="167" width="68.5" height="15.0" fill="rgb(136.272343826467,161.537060307319,136.272343826467)" rx="2" ry="2" />
<text  x="1092.96" y="177.5" >pyop2...</text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (5,310 us, 0.01%)</title><rect x="984.8" y="151" width="0.2" height="15.0" fill="rgb(113.062715489683,113.062715489683,149.302461062519)" rx="2" ry="2" />
<text  x="987.84" y="161.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalProblem.__init__ (9,955 us, 0.03%)</title><rect x="139.0" y="87" width="0.3" height="15.0" fill="rgb(149.218293124636,159.429580189013,149.218293124636)" rx="2" ry="2" />
<text  x="141.98" y="97.5" ></text>
</g>
<g >
<title>SNESFunctionEval (6,120,855 us, 15.57%)</title><rect x="1006.2" y="119" width="183.8" height="15.0" fill="rgb(110.942522265136,145.79991317985,145.79991317985)" rx="2" ry="2" />
<text  x="1009.22" y="129.5" >SNESFunctionEval</text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (6,555 us, 0.02%)</title><rect x="44.1" y="151" width="0.2" height="15.0" fill="rgb(118.440660588428,147.74387496737,147.74387496737)" rx="2" ry="2" />
<text  x="47.06" y="161.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (5,961 us, 0.02%)</title><rect x="138.5" y="87" width="0.2" height="15.0" fill="rgb(148.25070824073,159.587094007323,148.25070824073)" rx="2" ry="2" />
<text  x="141.48" y="97.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_slate_loopy_knl_0 (10,418,053 us, 26.51%)</title><rect x="346.2" y="199" width="312.8" height="15.0" fill="rgb(108.540040684413,108.540040684413,148.427104648596)" rx="2" ry="2" />
<text  x="349.17" y="209.5" >Parloop_Cells_wrap_slate_loopy_knl_0</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (10,418,053 us, 26.51%)</title><rect x="346.2" y="215" width="312.8" height="15.0" fill="rgb(116.001855931722,116.001855931722,149.871326954527)" rx="2" ry="2" />
<text  x="349.17" y="225.5" >pyop2.global_kernel.GlobalKernel.compile</text>
</g>
<g >
<title>firedrake.parloops.par_loop (899,892 us, 2.29%)</title><rect x="139.5" y="183" width="27.0" height="15.0" fill="rgb(154.721980853013,132.868519873101,132.868519873101)" rx="2" ry="2" />
<text  x="142.51" y="193.5" >f..</text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (5,310 us, 0.01%)</title><rect x="984.8" y="167" width="0.2" height="15.0" fill="rgb(148.562939582799,148.562939582799,112.266553362797)" rx="2" ry="2" />
<text  x="987.84" y="177.5" ></text>
</g>
<g >
<title>SCForwardElim (28,126,880 us, 71.57%)</title><rect x="139.5" y="151" width="844.5" height="15.0" fill="rgb(146.144288197129,154.926296939996,154.926296939996)" rx="2" ry="2" />
<text  x="142.51" y="161.5" >SCForwardElim</text>
</g>
<g >
<title>Parloop_Cells_wrap_form1_cell_integral_otherwise (2,292,583 us, 5.83%)</title><rect x="1089.6" y="151" width="68.9" height="15.0" fill="rgb(153.314486759114,153.314486759114,135.293281986474)" rx="2" ry="2" />
<text  x="1092.62" y="161.5" >Parloo..</text>
</g>
<g >
<title>PCApply (28,126,880 us, 71.57%)</title><rect x="139.5" y="135" width="844.5" height="15.0" fill="rgb(128.391976608166,162.819910784717,128.391976608166)" rx="2" ry="2" />
<text  x="142.51" y="145.5" >PCApply</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (2,759,844 us, 7.02%)</title><rect x="1006.8" y="167" width="82.8" height="15.0" fill="rgb(154.543947843066,154.543947843066,141.251439547168)" rx="2" ry="2" />
<text  x="1009.75" y="177.5" >pyop2.gl..</text>
</g>
<g >
<title>ParLoopExecute (676,986 us, 1.72%)</title><rect x="985.9" y="167" width="20.3" height="15.0" fill="rgb(109.427202868354,109.427202868354,148.598813458391)" rx="2" ry="2" />
<text  x="988.89" y="177.5" ></text>
</g>
<g >
<title>HybridInit (739,290 us, 1.88%)</title><rect x="984.0" y="135" width="22.2" height="15.0" fill="rgb(151.762701782762,151.762701782762,127.773093254924)" rx="2" ry="2" />
<text  x="987.02" y="145.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (4,872 us, 0.01%)</title><rect x="984.7" y="199" width="0.1" height="15.0" fill="rgb(128.311657887008,162.832985925371,128.311657887008)" rx="2" ry="2" />
<text  x="987.70" y="209.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (6,347 us, 0.02%)</title><rect x="1189.8" y="151" width="0.2" height="15.0" fill="rgb(120.795179824731,120.795179824731,150.799067062851)" rx="2" ry="2" />
<text  x="1192.81" y="161.5" ></text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (1,050,691 us, 2.67%)</title><rect x="1158.5" y="135" width="31.5" height="15.0" fill="rgb(114.007260935049,146.594475057235,146.594475057235)" rx="2" ry="2" />
<text  x="1161.45" y="145.5" >fi..</text>
</g>
<g >
<title>CreateExtMesh (1,140,795 us, 2.90%)</title><rect x="10.0" y="71" width="34.3" height="15.0" fill="rgb(137.447822145899,161.345703371598,137.447822145899)" rx="2" ry="2" />
<text  x="13.00" y="81.5" >Cr..</text>
</g>
<g >
<title>firedrake.variational_solver.LinearVariationalProblem.__init__ (20,848 us, 0.05%)</title><rect x="138.7" y="71" width="0.6" height="15.0" fill="rgb(155.68105604791,155.68105604791,146.762040847564)" rx="2" ry="2" />
<text  x="141.66" y="81.5" ></text>
</g>
<g >
<title>SNESSolve (34,987,025 us, 89.02%)</title><rect x="139.5" y="103" width="1050.5" height="15.0" fill="rgb(126.695631873579,163.096059927557,126.695631873579)" rx="2" ry="2" />
<text  x="142.51" y="113.5" >SNESSolve</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (676,986 us, 1.72%)</title><rect x="985.9" y="199" width="20.3" height="15.0" fill="rgb(156.273311002011,144.762051015421,144.762051015421)" rx="2" ry="2" />
<text  x="988.89" y="209.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (5,310 us, 0.01%)</title><rect x="984.8" y="199" width="0.2" height="15.0" fill="rgb(156.233080186767,144.453614765217,144.453614765217)" rx="2" ry="2" />
<text  x="987.84" y="209.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (6,555 us, 0.02%)</title><rect x="44.1" y="119" width="0.2" height="15.0" fill="rgb(125.233903447597,149.505086079007,149.505086079007)" rx="2" ry="2" />
<text  x="47.06" y="129.5" ></text>
</g>
<g >
<title>firedrake.assemble.allocate_matrix (7,454 us, 0.02%)</title><rect x="139.3" y="87" width="0.2" height="15.0" fill="rgb(123.57190673361,149.074198042047,149.074198042047)" rx="2" ry="2" />
<text  x="142.28" y="97.5" ></text>
</g>
<g >
<title>PCSetUp (739,290 us, 1.88%)</title><rect x="984.0" y="119" width="22.2" height="15.0" fill="rgb(112.014245818255,146.077767434362,146.077767434362)" rx="2" ry="2" />
<text  x="987.02" y="129.5" ></text>
</g>
<g >
<title>HybridBreak (899,892 us, 2.29%)</title><rect x="139.5" y="167" width="27.0" height="15.0" fill="rgb(111.863409515825,146.038661726325,146.038661726325)" rx="2" ry="2" />
<text  x="142.51" y="177.5" >H..</text>
</g>
<g >
<title>firedrake.ufl_expr.action (10,893 us, 0.03%)</title><rect x="138.7" y="87" width="0.3" height="15.0" fill="rgb(134.887938933996,161.762428545629,134.887938933996)" rx="2" ry="2" />
<text  x="141.66" y="97.5" ></text>
</g>
<g >
<title>firedrake.slate.slac.optimise.optimise (19,815 us, 0.05%)</title><rect x="659.0" y="183" width="0.6" height="15.0" fill="rgb(155.337240243274,137.585508531768,137.585508531768)" rx="2" ry="2" />
<text  x="661.97" y="193.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (11,589 us, 0.03%)</title><rect x="44.3" y="119" width="0.3" height="15.0" fill="rgb(113.880333190969,113.880333190969,149.460709649865)" rx="2" ry="2" />
<text  x="47.25" y="129.5" ></text>
</g>
<g >
<title>ParLoopExecute (5,070,164 us, 12.90%)</title><rect x="1006.2" y="135" width="152.3" height="15.0" fill="rgb(111.762832068221,111.762832068221,149.050870722882)" rx="2" ry="2" />
<text  x="1009.22" y="145.5" >ParLoopExecute</text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.solve (34,987,025 us, 89.02%)</title><rect x="139.5" y="87" width="1050.5" height="15.0" fill="rgb(113.385457128963,113.385457128963,149.364927186251)" rx="2" ry="2" />
<text  x="142.51" y="97.5" >firedrake.variational_solver.NonlinearVariationalSolver.solve</text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (11,589 us, 0.03%)</title><rect x="44.3" y="103" width="0.3" height="15.0" fill="rgb(115.413597651403,146.959080872586,146.959080872586)" rx="2" ry="2" />
<text  x="47.25" y="113.5" ></text>
</g>
</g>
</svg>
