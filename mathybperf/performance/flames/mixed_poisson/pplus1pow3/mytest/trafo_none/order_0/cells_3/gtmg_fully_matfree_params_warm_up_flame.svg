<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="299" onload="init(evt)" viewBox="0 0 1200 299" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:13px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:18px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 13 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (1 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="299.0" fill="url(#background)"  />
<text id="title" x="600.00" y="26" >Firedrake example</text>
<text id="details" x="10.00" y="281" > </text>
<text id="unzoom" x="10.00" y="26" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="26" >Search</text>
<text id="ignorecase" x="1174.00" y="26" >ic</text>
<text id="matched" x="1090.00" y="281" > </text>
<g id="frames">
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (7,164 us, 0.06%)</title><rect x="512.0" y="183" width="0.7" height="15.0" fill="rgb(132.748426836954,151.453295846618,151.453295846618)" rx="2" ry="2" />
<text  x="515.02" y="193.5" ></text>
</g>
<g >
<title>firedrake.parloops.par_loop (936,610 us, 7.93%)</title><rect x="409.1" y="183" width="93.6" height="15.0" fill="rgb(144.987549612102,160.1183058771,144.987549612102)" rx="2" ry="2" />
<text  x="412.05" y="193.5" >firedrake...</text>
</g>
<g >
<title>CreateExtMesh (1,170,445 us, 9.91%)</title><rect x="10.0" y="71" width="117.0" height="15.0" fill="rgb(148.105424305133,132.645149781904,148.105424305133)" rx="2" ry="2" />
<text  x="13.00" y="81.5" >CreateExtMesh</text>
</g>
<g >
<title>ParLoopExecute (5,019,923 us, 42.52%)</title><rect x="586.1" y="135" width="501.8" height="15.0" fill="rgb(154.36187699345,130.107723616452,130.107723616452)" rx="2" ry="2" />
<text  x="589.13" y="145.5" >ParLoopExecute</text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (1,725 us, 0.01%)</title><rect x="511.1" y="199" width="0.1" height="15.0" fill="rgb(154.126156023817,154.126156023817,139.226756115421)" rx="2" ry="2" />
<text  x="514.05" y="209.5" ></text>
</g>
<g >
<title>perfsolve (7,813,014 us, 66.18%)</title><rect x="409.1" y="71" width="780.9" height="15.0" fill="rgb(155.910992650843,141.984276989798,141.984276989798)" rx="2" ry="2" />
<text  x="412.05" y="81.5" >perfsolve</text>
</g>
<g >
<title>CreateMesh (3,491 us, 0.03%)</title><rect x="128.2" y="71" width="0.3" height="15.0" fill="rgb(144.469775920809,160.202594617543,144.469775920809)" rx="2" ry="2" />
<text  x="131.19" y="81.5" ></text>
</g>
<g >
<title>firedrake.matrix_free.operators.ImplicitMatrixContext.__init__ (7,754 us, 0.07%)</title><rect x="408.3" y="103" width="0.8" height="15.0" fill="rgb(129.184718090956,129.184718090956,152.422848662766)" rx="2" ry="2" />
<text  x="411.28" y="113.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (12,011 us, 0.10%)</title><rect x="127.0" y="71" width="1.2" height="15.0" fill="rgb(154.607065510785,131.987502249349,131.987502249349)" rx="2" ry="2" />
<text  x="129.99" y="81.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (9,783 us, 0.08%)</title><rect x="511.8" y="151" width="0.9" height="15.0" fill="rgb(121.60607344553,121.60607344553,150.956014215264)" rx="2" ry="2" />
<text  x="514.76" y="161.5" ></text>
</g>
<g >
<title>PCSetUp (764,744 us, 6.48%)</title><rect x="509.4" y="119" width="76.4" height="15.0" fill="rgb(108.557618955537,108.557618955537,148.43050689462)" rx="2" ry="2" />
<text  x="512.37" y="129.5" >PCSetUp</text>
</g>
<g >
<title>SNESFunctionEval (6,044,649 us, 51.20%)</title><rect x="585.8" y="119" width="604.2" height="15.0" fill="rgb(145.777178776611,159.989761594505,145.777178776611)" rx="2" ry="2" />
<text  x="588.81" y="129.5" >SNESFunctionEval</text>
</g>
<g >
<title>Parloop_Cells_wrap_form1_cell_integral_otherwise (2,257,603 us, 19.12%)</title><rect x="862.2" y="151" width="225.7" height="15.0" fill="rgb(136.628111792826,161.479144591865,136.628111792826)" rx="2" ry="2" />
<text  x="865.23" y="161.5" >Parloop_Cells_wrap_form1_ce..</text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (10,125 us, 0.09%)</title><rect x="407.0" y="103" width="1.0" height="15.0" fill="rgb(153.029290769735,119.891229234637,119.891229234637)" rx="2" ry="2" />
<text  x="409.96" y="113.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (9,697 us, 0.08%)</title><rect x="404.6" y="135" width="0.9" height="15.0" fill="rgb(148.965711738673,148.965711738673,114.218449195109)" rx="2" ry="2" />
<text  x="407.55" y="145.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (9,697 us, 0.08%)</title><rect x="404.6" y="119" width="0.9" height="15.0" fill="rgb(154.911325682641,134.320163566914,134.320163566914)" rx="2" ry="2" />
<text  x="407.55" y="129.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.__init__ (9,397 us, 0.08%)</title><rect x="408.1" y="71" width="1.0" height="15.0" fill="rgb(154.396121550524,154.396121550524,140.535050591)" rx="2" ry="2" />
<text  x="411.12" y="81.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (3,467 us, 0.03%)</title><rect x="1189.7" y="167" width="0.3" height="15.0" fill="rgb(147.636655603137,147.636655603137,107.777638692126)" rx="2" ry="2" />
<text  x="1192.65" y="177.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (2,245,758 us, 19.02%)</title><rect x="863.4" y="167" width="224.5" height="15.0" fill="rgb(153.850472493874,126.18695578637,126.18695578637)" rx="2" ry="2" />
<text  x="866.42" y="177.5" >pyop2.global_kernel.GlobalK..</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (930,772 us, 7.88%)</title><rect x="409.6" y="231" width="93.1" height="15.0" fill="rgb(143.964484301922,122.033991023675,143.964484301922)" rx="2" ry="2" />
<text  x="412.64" y="241.5" >pyop2.glob..</text>
</g>
<g >
<title>CreateFunctionSpace (9,697 us, 0.08%)</title><rect x="404.6" y="87" width="0.9" height="15.0" fill="rgb(150.681151151079,159.19144051029,150.681151151079)" rx="2" ry="2" />
<text  x="407.55" y="97.5" ></text>
</g>
<g >
<title>firedrake.extrusion_utils.make_extruded_coords (1,158,654 us, 9.81%)</title><rect x="10.3" y="87" width="115.8" height="15.0" fill="rgb(152.313178415763,152.313178415763,130.44078770716)" rx="2" ry="2" />
<text  x="13.27" y="97.5" >firedrake.ext..</text>
</g>
<g >
<title>CreateFunctionSpace (7,082 us, 0.06%)</title><rect x="511.1" y="151" width="0.7" height="15.0" fill="rgb(151.953971687545,151.953971687545,128.700016639641)" rx="2" ry="2" />
<text  x="514.05" y="161.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalProblem.__init__ (11,536 us, 0.10%)</title><rect x="407.0" y="87" width="1.1" height="15.0" fill="rgb(152.473523245918,115.630344885372,115.630344885372)" rx="2" ry="2" />
<text  x="409.96" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (5,357 us, 0.05%)</title><rect x="511.2" y="183" width="0.6" height="15.0" fill="rgb(152.925716447745,119.097159432709,119.097159432709)" rx="2" ry="2" />
<text  x="514.22" y="193.5" ></text>
</g>
<g >
<title>firedrake.function.Function.__init__ (1,262 us, 0.01%)</title><rect x="512.7" y="151" width="0.2" height="15.0" fill="rgb(156.786457627024,148.696175140517,148.696175140517)" rx="2" ry="2" />
<text  x="515.74" y="161.5" ></text>
</g>
<g >
<title>firedrake.mesh._Facets.__init__ (1,338 us, 0.01%)</title><rect x="405.4" y="167" width="0.1" height="15.0" fill="rgb(105.32135467757,144.342573434926,144.342573434926)" rx="2" ry="2" />
<text  x="408.39" y="177.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (12,011 us, 0.10%)</title><rect x="127.0" y="87" width="1.2" height="15.0" fill="rgb(140.465792928565,160.854405802327,140.465792928565)" rx="2" ry="2" />
<text  x="129.99" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (2,076 us, 0.02%)</title><rect x="512.5" y="247" width="0.2" height="15.0" fill="rgb(142.616161608158,154.011597453967,154.011597453967)" rx="2" ry="2" />
<text  x="515.53" y="257.5" ></text>
</g>
<g >
<title>Mesh: numbering (1,654 us, 0.01%)</title><rect x="128.4" y="87" width="0.1" height="15.0" fill="rgb(152.964887695158,152.964887695158,133.599071138074)" rx="2" ry="2" />
<text  x="131.38" y="97.5" ></text>
</g>
<g >
<title>ParLoopExecute (1,118,458 us, 9.47%)</title><rect x="14.3" y="103" width="111.8" height="15.0" fill="rgb(141.993680578875,160.605679905765,141.993680578875)" rx="2" ry="2" />
<text  x="17.28" y="113.5" >ParLoopExecute</text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.solve (7,813,014 us, 66.18%)</title><rect x="409.1" y="87" width="780.9" height="15.0" fill="rgb(131.43656310909,131.43656310909,152.858689634018)" rx="2" ry="2" />
<text  x="412.05" y="97.5" >firedrake.variational_solver.NonlinearVariationalSolver.solve</text>
</g>
<g >
<title>firedrake.functionspace.VectorFunctionSpace (9,137 us, 0.08%)</title><rect x="126.1" y="87" width="0.9" height="15.0" fill="rgb(153.095498730018,120.398823596804,120.398823596804)" rx="2" ry="2" />
<text  x="129.08" y="97.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (1,510 us, 0.01%)</title><rect x="1189.8" y="183" width="0.2" height="15.0" fill="rgb(115.627803541817,147.014615733064,147.014615733064)" rx="2" ry="2" />
<text  x="1192.85" y="193.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (2,076 us, 0.02%)</title><rect x="512.5" y="231" width="0.2" height="15.0" fill="rgb(117.334336981789,147.457050328612,147.457050328612)" rx="2" ry="2" />
<text  x="515.53" y="241.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (4,757 us, 0.04%)</title><rect x="512.3" y="199" width="0.4" height="15.0" fill="rgb(156.559118760911,146.953243833647,146.953243833647)" rx="2" ry="2" />
<text  x="515.26" y="209.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_pyop2_kernel_uniform_extrusion (1,118,458 us, 9.47%)</title><rect x="14.3" y="119" width="111.8" height="15.0" fill="rgb(150.931101457053,159.150750925596,150.931101457053)" rx="2" ry="2" />
<text  x="17.28" y="129.5" >Parloop_Cell..</text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (696,660 us, 5.90%)</title><rect x="516.2" y="183" width="69.6" height="15.0" fill="rgb(148.557584985956,148.557584985956,112.240604162708)" rx="2" ry="2" />
<text  x="519.18" y="193.5" >Parloop..</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (2,744,329 us, 23.25%)</title><rect x="587.9" y="167" width="274.3" height="15.0" fill="rgb(144.664282855789,160.170930697895,144.664282855789)" rx="2" ry="2" />
<text  x="590.93" y="177.5" >pyop2.global_kernel.GlobalKernel...</text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (9,783 us, 0.08%)</title><rect x="511.8" y="167" width="0.9" height="15.0" fill="rgb(152.901651100165,118.9126584346,118.9126584346)" rx="2" ry="2" />
<text  x="514.76" y="177.5" ></text>
</g>
<g >
<title>firedrake.mesh.MeshTopology._facets (4,874 us, 0.04%)</title><rect x="405.0" y="151" width="0.5" height="15.0" fill="rgb(153.244706415758,153.244706415758,134.955115707133)" rx="2" ry="2" />
<text  x="408.04" y="161.5" ></text>
</g>
<g >
<title>ParLoopExecute (696,660 us, 5.90%)</title><rect x="516.2" y="167" width="69.6" height="15.0" fill="rgb(152.106260552992,112.814664239601,112.814664239601)" rx="2" ry="2" />
<text  x="519.18" y="177.5" >ParLoop..</text>
</g>
<g >
<title>HybridInit (764,744 us, 6.48%)</title><rect x="509.4" y="135" width="76.4" height="15.0" fill="rgb(154.16695644084,154.16695644084,139.4244812133)" rx="2" ry="2" />
<text  x="512.37" y="145.5" >HybridI..</text>
</g>
<g >
<title>CreateFunctionSpace (1,725 us, 0.01%)</title><rect x="511.1" y="183" width="0.1" height="15.0" fill="rgb(144.549347103452,160.189641169206,144.549347103452)" rx="2" ry="2" />
<text  x="514.05" y="193.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (2,076 us, 0.02%)</title><rect x="512.5" y="215" width="0.2" height="15.0" fill="rgb(147.901481815666,159.643944820706,147.901481815666)" rx="2" ry="2" />
<text  x="515.53" y="225.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (5,357 us, 0.05%)</title><rect x="511.2" y="199" width="0.6" height="15.0" fill="rgb(153.731867093154,125.277647714182,125.277647714182)" rx="2" ry="2" />
<text  x="514.22" y="209.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.LinearVariationalProblem.__init__ (23,016 us, 0.19%)</title><rect x="405.8" y="71" width="2.3" height="15.0" fill="rgb(151.177974400868,151.177974400868,124.939414404204)" rx="2" ry="2" />
<text  x="408.81" y="81.5" ></text>
</g>
<g >
<title>firedrake.assemble.allocate_matrix (7,754 us, 0.07%)</title><rect x="408.3" y="87" width="0.8" height="15.0" fill="rgb(155.399381288695,155.399381288695,145.397001629828)" rx="2" ry="2" />
<text  x="411.28" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (9,137 us, 0.08%)</title><rect x="126.1" y="119" width="0.9" height="15.0" fill="rgb(144.433600957265,160.208483565096,144.433600957265)" rx="2" ry="2" />
<text  x="129.08" y="129.5" ></text>
</g>
<g >
<title>firedrake.functionspace.VectorFunctionSpace (9,697 us, 0.08%)</title><rect x="404.6" y="71" width="0.9" height="15.0" fill="rgb(155.744017298263,140.704132620014,140.704132620014)" rx="2" ry="2" />
<text  x="407.55" y="81.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (12,011 us, 0.10%)</title><rect x="127.0" y="119" width="1.2" height="15.0" fill="rgb(130.176546082787,150.786511947389,150.786511947389)" rx="2" ry="2" />
<text  x="129.99" y="129.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (1,725 us, 0.01%)</title><rect x="511.1" y="215" width="0.1" height="15.0" fill="rgb(142.873525510225,142.873525510225,155.072295260043)" rx="2" ry="2" />
<text  x="514.05" y="225.5" ></text>
</g>
<g >
<title>firedrake.parloops.par_loop (702,658 us, 5.95%)</title><rect x="515.6" y="151" width="70.2" height="15.0" fill="rgb(143.296832427756,154.188067666455,154.188067666455)" rx="2" ry="2" />
<text  x="518.58" y="161.5" >firedra..</text>
</g>
<g >
<title>Log_Event_form0_cell_integral_otherwise (8,159 us, 0.07%)</title><rect x="587.1" y="167" width="0.8" height="15.0" fill="rgb(152.120538062157,112.924125143207,112.924125143207)" rx="2" ry="2" />
<text  x="590.11" y="177.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_form0_cell_integral_otherwise (2,762,320 us, 23.40%)</title><rect x="586.1" y="151" width="276.1" height="15.0" fill="rgb(104.252232374292,144.06539357852,144.06539357852)" rx="2" ry="2" />
<text  x="589.13" y="161.5" >Parloop_Cells_wrap_form0_cell_int..</text>
</g>
<g >
<title>firedrake (11,805,379 us, 100.00%)</title><rect x="10.0" y="55" width="1180.0" height="15.0" fill="rgb(147.089219294173,147.089219294173,155.888235992421)" rx="2" ry="2" />
<text  x="13.00" y="65.5" >firedrake</text>
</g>
<g >
<title>firedrake.slate.slac.optimise.optimise (7,215 us, 0.06%)</title><rect x="508.6" y="183" width="0.8" height="15.0" fill="rgb(150.082133482087,159.288955014544,150.082133482087)" rx="2" ry="2" />
<text  x="511.65" y="193.5" ></text>
</g>
<g >
<title>ParLoopExecute (930,772 us, 7.88%)</title><rect x="409.6" y="199" width="93.1" height="15.0" fill="rgb(155.290578849796,155.290578849796,144.869728272087)" rx="2" ry="2" />
<text  x="412.64" y="209.5" >ParLoopExe..</text>
</g>
<g >
<title>firedrake.functionspace.MixedFunctionSpace (1,455 us, 0.01%)</title><rect x="404.4" y="71" width="0.2" height="15.0" fill="rgb(154.879493246432,134.076114889308,134.076114889308)" rx="2" ry="2" />
<text  x="407.41" y="81.5" ></text>
</g>
<g >
<title>all (11,805,379 us, 100%)</title><rect x="10.0" y="39" width="1180.0" height="15.0" fill="rgb(148.983313658661,148.983313658661,114.303750807359)" rx="2" ry="2" />
<text  x="13.00" y="49.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (930,772 us, 7.88%)</title><rect x="409.6" y="215" width="93.1" height="15.0" fill="rgb(123.805829519837,149.134844690328,149.134844690328)" rx="2" ry="2" />
<text  x="412.64" y="225.5" >Parloop_Ce..</text>
</g>
<g >
<title>firedrake.functionspace.MixedFunctionSpace (1,725 us, 0.01%)</title><rect x="511.1" y="167" width="0.1" height="15.0" fill="rgb(152.463758849115,115.555484509882,115.555484509882)" rx="2" ry="2" />
<text  x="514.05" y="177.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (9,697 us, 0.08%)</title><rect x="404.6" y="103" width="0.9" height="15.0" fill="rgb(119.481851876014,119.481851876014,150.544874556648)" rx="2" ry="2" />
<text  x="407.55" y="113.5" ></text>
</g>
<g >
<title>firedrake.utility_meshes.SquareMesh (2,920 us, 0.02%)</title><rect x="405.5" y="71" width="0.3" height="15.0" fill="rgb(138.949527494648,138.949527494648,154.312811773158)" rx="2" ry="2" />
<text  x="408.52" y="81.5" ></text>
</g>
<g >
<title>firedrake.utility_meshes.RectangleMesh (2,920 us, 0.02%)</title><rect x="405.5" y="87" width="0.3" height="15.0" fill="rgb(155.014959510986,155.014959510986,143.534034553241)" rx="2" ry="2" />
<text  x="408.52" y="97.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.derivative (1,411 us, 0.01%)</title><rect x="408.0" y="103" width="0.1" height="15.0" fill="rgb(154.657598762663,154.657598762663,141.802209388288)" rx="2" ry="2" />
<text  x="410.97" y="113.5" ></text>
</g>
<g >
<title>PCApply (1,003,621 us, 8.50%)</title><rect x="409.1" y="135" width="100.3" height="15.0" fill="rgb(149.304363187264,149.304363187264,115.859606215202)" rx="2" ry="2" />
<text  x="412.05" y="145.5" >PCApply</text>
</g>
<g >
<title>SCForwardElim (1,003,621 us, 8.50%)</title><rect x="409.1" y="151" width="100.3" height="15.0" fill="rgb(135.433806167857,135.433806167857,153.632349580876)" rx="2" ry="2" />
<text  x="412.05" y="161.5" >SCForwardElim</text>
</g>
<g >
<title>CreateFunctionSpace (9,137 us, 0.08%)</title><rect x="126.1" y="103" width="0.9" height="15.0" fill="rgb(152.193166289707,152.193166289707,129.859190480887)" rx="2" ry="2" />
<text  x="129.08" y="113.5" ></text>
</g>
<g >
<title>SNESSolve (7,813,014 us, 66.18%)</title><rect x="409.1" y="103" width="780.9" height="15.0" fill="rgb(143.836495633692,160.305686757306,143.836495633692)" rx="2" ry="2" />
<text  x="412.05" y="113.5" >SNESSolve</text>
</g>
<g >
<title>HybridRHS (67,011 us, 0.57%)</title><rect x="502.7" y="167" width="6.7" height="15.0" fill="rgb(118.035433616123,118.035433616123,150.264922635379)" rx="2" ry="2" />
<text  x="505.67" y="177.5" ></text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (1,021,561 us, 8.65%)</title><rect x="1087.9" y="135" width="102.1" height="15.0" fill="rgb(154.145932863883,154.145932863883,139.322597724971)" rx="2" ry="2" />
<text  x="1090.89" y="145.5" >firedrake.t..</text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (9,137 us, 0.08%)</title><rect x="126.1" y="135" width="0.9" height="15.0" fill="rgb(147.931590271358,159.639043444197,147.931590271358)" rx="2" ry="2" />
<text  x="129.08" y="145.5" ></text>
</g>
<g >
<title>HybridBreak (936,610 us, 7.93%)</title><rect x="409.1" y="167" width="93.6" height="15.0" fill="rgb(147.692728339435,159.677927944743,147.692728339435)" rx="2" ry="2" />
<text  x="412.05" y="177.5" >HybridBreak</text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (1,725 us, 0.01%)</title><rect x="511.1" y="231" width="0.1" height="15.0" fill="rgb(136.266539226839,136.266539226839,153.793523721324)" rx="2" ry="2" />
<text  x="514.05" y="241.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.action (11,480 us, 0.10%)</title><rect x="405.8" y="87" width="1.2" height="15.0" fill="rgb(129.364496073429,129.364496073429,152.457644401309)" rx="2" ry="2" />
<text  x="408.81" y="97.5" ></text>
</g>
<g >
<title>firedrake.__init__ (2,758,541 us, 23.37%)</title><rect x="128.7" y="71" width="275.7" height="15.0" fill="rgb(153.542886888415,153.542886888415,136.400144151551)" rx="2" ry="2" />
<text  x="131.68" y="81.5" >firedrake.__init__</text>
</g>
<g >
<title>PetscBarrier (1,392 us, 0.01%)</title><rect x="128.5" y="71" width="0.2" height="15.0" fill="rgb(122.323105830372,122.323105830372,151.094794676846)" rx="2" ry="2" />
<text  x="131.54" y="81.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (5,357 us, 0.05%)</title><rect x="511.2" y="167" width="0.6" height="15.0" fill="rgb(126.928952267295,163.058077537882,126.928952267295)" rx="2" ry="2" />
<text  x="514.22" y="177.5" ></text>
</g>
<g >
<title>firedrake.interpolation.make_interpolator (27,136 us, 0.23%)</title><rect x="512.9" y="151" width="2.7" height="15.0" fill="rgb(136.104326432771,136.104326432771,153.762127696665)" rx="2" ry="2" />
<text  x="515.86" y="161.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (696,660 us, 5.90%)</title><rect x="516.2" y="199" width="69.6" height="15.0" fill="rgb(138.558589623148,161.164880759022,138.558589623148)" rx="2" ry="2" />
<text  x="519.18" y="209.5" >pyop2.g..</text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (3,654 us, 0.03%)</title><rect x="408.7" y="119" width="0.4" height="15.0" fill="rgb(151.847353649455,142.23384372673,151.847353649455)" rx="2" ry="2" />
<text  x="411.69" y="129.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (6,370 us, 0.05%)</title><rect x="1189.4" y="151" width="0.6" height="15.0" fill="rgb(148.634383868539,148.634383868539,112.612783362922)" rx="2" ry="2" />
<text  x="1192.36" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (9,137 us, 0.08%)</title><rect x="126.1" y="151" width="0.9" height="15.0" fill="rgb(138.012092170795,152.817949822058,152.817949822058)" rx="2" ry="2" />
<text  x="129.08" y="161.5" ></text>
</g>
<g >
<title>KSPSolve (1,003,621 us, 8.50%)</title><rect x="409.1" y="119" width="100.3" height="15.0" fill="rgb(152.080821123201,112.619628611205,112.619628611205)" rx="2" ry="2" />
<text  x="412.05" y="129.5" >KSPSolve</text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (12,011 us, 0.10%)</title><rect x="127.0" y="103" width="1.2" height="15.0" fill="rgb(104.048690286592,144.012623407635,144.012623407635)" rx="2" ry="2" />
<text  x="129.99" y="113.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (1,118,458 us, 9.47%)</title><rect x="14.3" y="135" width="111.8" height="15.0" fill="rgb(138.675287622444,161.1458834103,138.675287622444)" rx="2" ry="2" />
<text  x="17.28" y="145.5" >pyop2.global..</text>
</g>
<g >
<title>Log_Event_form1_cell_integral_otherwise (1,621 us, 0.01%)</title><rect x="863.3" y="167" width="0.1" height="15.0" fill="rgb(153.654792103755,124.686739462123,124.686739462123)" rx="2" ry="2" />
<text  x="866.25" y="177.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.action (4,100 us, 0.03%)</title><rect x="408.3" y="119" width="0.4" height="15.0" fill="rgb(152.638121790866,116.89226706331,116.89226706331)" rx="2" ry="2" />
<text  x="411.28" y="129.5" ></text>
</g>
</g>
</svg>
