<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="299" onload="init(evt)" viewBox="0 0 1200 299" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:13px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:18px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 13 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (1 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="299.0" fill="url(#background)"  />
<text id="title" x="600.00" y="26" >Firedrake example</text>
<text id="details" x="10.00" y="281" > </text>
<text id="unzoom" x="10.00" y="26" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="26" >Search</text>
<text id="ignorecase" x="1174.00" y="26" >ic</text>
<text id="matched" x="1090.00" y="281" > </text>
<g id="frames">
<g >
<title>firedrake.functionspacedata.get_shared_data (1,704 us, 0.01%)</title><rect x="501.4" y="215" width="0.1" height="15.0" fill="rgb(151.894426554619,151.894426554619,128.411451764692)" rx="2" ry="2" />
<text  x="504.38" y="225.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (2,397,174 us, 19.40%)</title><rect x="863.7" y="167" width="229.0" height="15.0" fill="rgb(130.968514621678,162.400474363913,130.968514621678)" rx="2" ry="2" />
<text  x="866.73" y="177.5" >pyop2.global_kernel.GlobalK..</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (814,254 us, 6.59%)</title><rect x="506.5" y="199" width="77.7" height="15.0" fill="rgb(153.005972439955,153.005972439955,133.798174132088)" rx="2" ry="2" />
<text  x="509.45" y="209.5" >pyop2.gl..</text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (986,431 us, 7.98%)</title><rect x="396.9" y="215" width="94.2" height="15.0" fill="rgb(147.247313674009,159.750437308882,147.247313674009)" rx="2" ry="2" />
<text  x="399.88" y="225.5" >Parloop_Ce..</text>
</g>
<g >
<title>firedrake.__init__ (2,689,176 us, 21.77%)</title><rect x="135.1" y="71" width="256.8" height="15.0" fill="rgb(154.974012593107,154.974012593107,143.335599489673)" rx="2" ry="2" />
<text  x="138.08" y="81.5" >firedrake.__init__</text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (7,038 us, 0.06%)</title><rect x="391.9" y="135" width="0.7" height="15.0" fill="rgb(143.427826105848,143.427826105848,155.179579246293)" rx="2" ry="2" />
<text  x="394.94" y="145.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (11,800 us, 0.10%)</title><rect x="133.6" y="71" width="1.1" height="15.0" fill="rgb(134.171404767931,161.87907364243,134.171404767931)" rx="2" ry="2" />
<text  x="136.58" y="81.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (6,855 us, 0.06%)</title><rect x="501.4" y="151" width="0.6" height="15.0" fill="rgb(110.159519974653,110.159519974653,148.740552253159)" rx="2" ry="2" />
<text  x="504.38" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (7,250 us, 0.06%)</title><rect x="132.9" y="135" width="0.7" height="15.0" fill="rgb(154.147659905691,154.147659905691,139.330967235273)" rx="2" ry="2" />
<text  x="135.88" y="145.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (7,038 us, 0.06%)</title><rect x="391.9" y="87" width="0.7" height="15.0" fill="rgb(150.881612553367,139.759132168002,150.881612553367)" rx="2" ry="2" />
<text  x="394.94" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspace.MixedFunctionSpace (1,704 us, 0.01%)</title><rect x="501.4" y="167" width="0.1" height="15.0" fill="rgb(108.680499135135,145.213462738739,145.213462738739)" rx="2" ry="2" />
<text  x="504.38" y="177.5" ></text>
</g>
<g >
<title>firedrake.matrix_free.operators.ImplicitMatrixContext.__init__ (7,676 us, 0.06%)</title><rect x="395.4" y="103" width="0.7" height="15.0" fill="rgb(134.634076115738,161.803755050926,134.634076115738)" rx="2" ry="2" />
<text  x="398.37" y="113.5" ></text>
</g>
<g >
<title>firedrake.extrusion_utils.make_extruded_coords (1,283,875 us, 10.39%)</title><rect x="10.3" y="87" width="122.6" height="15.0" fill="rgb(153.914985074765,126.681552239868,126.681552239868)" rx="2" ry="2" />
<text  x="13.25" y="97.5" >firedrake.ext..</text>
</g>
<g >
<title>firedrake.parloops.par_loop (819,782 us, 6.64%)</title><rect x="505.9" y="151" width="78.3" height="15.0" fill="rgb(121.45814036513,148.526184539108,148.526184539108)" rx="2" ry="2" />
<text  x="508.92" y="161.5" >firedrak..</text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (7,829 us, 0.06%)</title><rect x="502.3" y="183" width="0.7" height="15.0" fill="rgb(152.833314408939,118.388743801868,118.388743801868)" rx="2" ry="2" />
<text  x="505.30" y="193.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (5,151 us, 0.04%)</title><rect x="501.5" y="199" width="0.5" height="15.0" fill="rgb(140.95518798422,140.95518798422,154.701004125978)" rx="2" ry="2" />
<text  x="504.54" y="209.5" ></text>
</g>
<g >
<title>firedrake.functionspace.VectorFunctionSpace (7,250 us, 0.06%)</title><rect x="132.9" y="87" width="0.7" height="15.0" fill="rgb(127.998227401247,162.88400949282,127.998227401247)" rx="2" ry="2" />
<text  x="135.88" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (5,151 us, 0.04%)</title><rect x="501.5" y="167" width="0.5" height="15.0" fill="rgb(154.38874902961,130.313742560341,130.313742560341)" rx="2" ry="2" />
<text  x="504.54" y="177.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (6,034 us, 0.05%)</title><rect x="1189.4" y="151" width="0.6" height="15.0" fill="rgb(150.418758135531,150.418758135531,121.260135579882)" rx="2" ry="2" />
<text  x="1192.42" y="161.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (7,250 us, 0.06%)</title><rect x="132.9" y="103" width="0.7" height="15.0" fill="rgb(150.827934351797,150.827934351797,123.243066474093)" rx="2" ry="2" />
<text  x="135.88" y="113.5" ></text>
</g>
<g >
<title>ParLoopExecute (5,320,132 us, 43.06%)</title><rect x="584.5" y="135" width="508.2" height="15.0" fill="rgb(134.59896501599,161.809470811351,134.59896501599)" rx="2" ry="2" />
<text  x="587.54" y="145.5" >ParLoopExecute</text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.solve (8,311,720 us, 67.28%)</title><rect x="396.1" y="87" width="793.9" height="15.0" fill="rgb(153.539973420095,123.806462887396,123.806462887396)" rx="2" ry="2" />
<text  x="399.10" y="97.5" >firedrake.variational_solver.NonlinearVariationalSolver.solve</text>
</g>
<g >
<title>Log_Event_form1_cell_integral_otherwise (1,571 us, 0.01%)</title><rect x="863.6" y="167" width="0.1" height="15.0" fill="rgb(139.555023770573,161.002670548976,139.555023770573)" rx="2" ry="2" />
<text  x="866.58" y="177.5" ></text>
</g>
<g >
<title>all (12,353,986 us, 100%)</title><rect x="10.0" y="39" width="1180.0" height="15.0" fill="rgb(150.537013458322,150.537013458322,121.833219067251)" rx="2" ry="2" />
<text  x="13.00" y="49.5" ></text>
</g>
<g >
<title>ParLoopExecute (1,240,867 us, 10.04%)</title><rect x="14.4" y="103" width="118.5" height="15.0" fill="rgb(105.622821211044,144.420731425086,144.420731425086)" rx="2" ry="2" />
<text  x="17.36" y="113.5" >ParLoopExecute</text>
</g>
<g >
<title>HybridRHS (87,299 us, 0.71%)</title><rect x="491.1" y="167" width="8.3" height="15.0" fill="rgb(155.168273718153,136.290098505838,136.290098505838)" rx="2" ry="2" />
<text  x="494.10" y="177.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (11,800 us, 0.10%)</title><rect x="133.6" y="103" width="1.1" height="15.0" fill="rgb(120.902992338986,120.902992338986,150.819934001094)" rx="2" ry="2" />
<text  x="136.58" y="113.5" ></text>
</g>
<g >
<title>PetscBarrier (1,375 us, 0.01%)</title><rect x="134.9" y="71" width="0.2" height="15.0" fill="rgb(140.925006012093,160.779650184078,140.925006012093)" rx="2" ry="2" />
<text  x="137.95" y="81.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.LinearVariationalProblem.__init__ (24,238 us, 0.20%)</title><rect x="392.9" y="71" width="2.3" height="15.0" fill="rgb(153.312722997915,153.312722997915,135.284734528357)" rx="2" ry="2" />
<text  x="395.90" y="81.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (7,038 us, 0.06%)</title><rect x="391.9" y="119" width="0.7" height="15.0" fill="rgb(135.283706031592,99.7894967059557,135.283706031592)" rx="2" ry="2" />
<text  x="394.94" y="129.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (1,704 us, 0.01%)</title><rect x="501.4" y="199" width="0.1" height="15.0" fill="rgb(148.081359676396,132.583484170765,148.081359676396)" rx="2" ry="2" />
<text  x="504.38" y="209.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_form0_cell_integral_otherwise (2,909,835 us, 23.55%)</title><rect x="584.7" y="151" width="277.9" height="15.0" fill="rgb(154.698353446179,154.698353446179,141.999712854559)" rx="2" ry="2" />
<text  x="587.67" y="161.5" >Parloop_Cells_wrap_form0_cell_inte..</text>
</g>
<g >
<title>HybridBreak (994,605 us, 8.05%)</title><rect x="396.1" y="167" width="95.0" height="15.0" fill="rgb(142.23896412121,142.23896412121,154.949476926686)" rx="2" ry="2" />
<text  x="399.10" y="177.5" >HybridBreak</text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (3,640 us, 0.03%)</title><rect x="1189.7" y="167" width="0.3" height="15.0" fill="rgb(151.717708611359,151.717708611359,127.555049424279)" rx="2" ry="2" />
<text  x="1192.65" y="177.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (11,800 us, 0.10%)</title><rect x="133.6" y="119" width="1.1" height="15.0" fill="rgb(150.973812868603,159.143797905111,150.973812868603)" rx="2" ry="2" />
<text  x="136.58" y="129.5" ></text>
</g>
<g >
<title>PCSetUp (887,676 us, 7.19%)</title><rect x="499.4" y="119" width="84.8" height="15.0" fill="rgb(153.407132826957,122.788018340006,122.788018340006)" rx="2" ry="2" />
<text  x="502.44" y="129.5" >PCSetUp</text>
</g>
<g >
<title>SCForwardElim (1,081,904 us, 8.76%)</title><rect x="396.1" y="151" width="103.3" height="15.0" fill="rgb(156.061112164659,143.135193262382,143.135193262382)" rx="2" ry="2" />
<text  x="399.10" y="161.5" >SCForwardElim</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (2,891,773 us, 23.41%)</title><rect x="586.4" y="167" width="276.2" height="15.0" fill="rgb(153.998358158334,153.998358158334,138.607427998081)" rx="2" ry="2" />
<text  x="589.39" y="177.5" >pyop2.global_kernel.GlobalKernel.c..</text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (10,420 us, 0.08%)</title><rect x="394.2" y="103" width="1.0" height="15.0" fill="rgb(131.70904352958,131.70904352958,152.911427779919)" rx="2" ry="2" />
<text  x="397.22" y="113.5" ></text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (1,018,697 us, 8.25%)</title><rect x="1092.7" y="135" width="97.3" height="15.0" fill="rgb(153.834327643447,153.834327643447,137.812510887473)" rx="2" ry="2" />
<text  x="1095.70" y="145.5" >firedrake...</text>
</g>
<g >
<title>firedrake.utility_meshes.RectangleMesh (2,984 us, 0.02%)</title><rect x="392.6" y="87" width="0.3" height="15.0" fill="rgb(153.784557538064,125.681607791824,125.681607791824)" rx="2" ry="2" />
<text  x="395.61" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (5,151 us, 0.04%)</title><rect x="501.5" y="183" width="0.5" height="15.0" fill="rgb(111.896069270065,111.896069270065,149.0766585684)" rx="2" ry="2" />
<text  x="504.54" y="193.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (1,704 us, 0.01%)</title><rect x="501.4" y="231" width="0.1" height="15.0" fill="rgb(128.183048015218,162.853922416127,128.183048015218)" rx="2" ry="2" />
<text  x="504.38" y="241.5" ></text>
</g>
<g >
<title>firedrake.parloops.par_loop (994,605 us, 8.05%)</title><rect x="396.1" y="183" width="95.0" height="15.0" fill="rgb(154.582916857201,131.802362571873,131.802362571873)" rx="2" ry="2" />
<text  x="399.10" y="193.5" >firedrake...</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (986,431 us, 7.98%)</title><rect x="396.9" y="231" width="94.2" height="15.0" fill="rgb(153.385423986248,122.621583894569,122.621583894569)" rx="2" ry="2" />
<text  x="399.88" y="241.5" >pyop2.glob..</text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.__init__ (9,310 us, 0.08%)</title><rect x="395.2" y="71" width="0.9" height="15.0" fill="rgb(124.218539968499,163.499307446989,124.218539968499)" rx="2" ry="2" />
<text  x="398.21" y="81.5" ></text>
</g>
<g >
<title>firedrake.functionspace.VectorFunctionSpace (7,038 us, 0.06%)</title><rect x="391.9" y="71" width="0.7" height="15.0" fill="rgb(133.226334816811,162.032922239124,133.226334816811)" rx="2" ry="2" />
<text  x="394.94" y="81.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (7,250 us, 0.06%)</title><rect x="132.9" y="119" width="0.7" height="15.0" fill="rgb(123.303241904462,149.004544197453,149.004544197453)" rx="2" ry="2" />
<text  x="135.88" y="129.5" ></text>
</g>
<g >
<title>firedrake.slate.slac.optimise.optimise (8,021 us, 0.06%)</title><rect x="498.7" y="183" width="0.7" height="15.0" fill="rgb(156.078544398125,143.268840385625,143.268840385625)" rx="2" ry="2" />
<text  x="501.67" y="193.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (2,170 us, 0.02%)</title><rect x="502.8" y="231" width="0.2" height="15.0" fill="rgb(126.830009222113,163.074184545237,126.830009222113)" rx="2" ry="2" />
<text  x="505.84" y="241.5" ></text>
</g>
<g >
<title>firedrake.assemble.allocate_matrix (7,676 us, 0.06%)</title><rect x="395.4" y="87" width="0.7" height="15.0" fill="rgb(128.400481316699,162.818526297281,128.400481316699)" rx="2" ry="2" />
<text  x="398.37" y="97.5" ></text>
</g>
<g >
<title>CreateMesh (2,556 us, 0.02%)</title><rect x="134.7" y="71" width="0.2" height="15.0" fill="rgb(113.353340940858,146.424940243926,146.424940243926)" rx="2" ry="2" />
<text  x="137.70" y="81.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalProblem.__init__ (11,987 us, 0.10%)</title><rect x="394.1" y="87" width="1.1" height="15.0" fill="rgb(147.618685818453,147.618685818453,107.690554350963)" rx="2" ry="2" />
<text  x="397.07" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (7,038 us, 0.06%)</title><rect x="391.9" y="103" width="0.7" height="15.0" fill="rgb(156.785077958999,148.685597685658,148.685597685658)" rx="2" ry="2" />
<text  x="394.94" y="113.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (10,548 us, 0.09%)</title><rect x="502.0" y="151" width="1.0" height="15.0" fill="rgb(141.742188940902,153.785011947641,153.785011947641)" rx="2" ry="2" />
<text  x="505.04" y="161.5" ></text>
</g>
<g >
<title>perfsolve (8,311,720 us, 67.28%)</title><rect x="396.1" y="71" width="793.9" height="15.0" fill="rgb(113.705966725411,146.516361743625,146.516361743625)" rx="2" ry="2" />
<text  x="399.10" y="81.5" >perfsolve</text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (11,800 us, 0.10%)</title><rect x="133.6" y="87" width="1.1" height="15.0" fill="rgb(123.460421947045,149.045294578863,149.045294578863)" rx="2" ry="2" />
<text  x="136.58" y="97.5" ></text>
</g>
<g >
<title>firedrake.mesh.MeshTopology._facets (3,086 us, 0.02%)</title><rect x="392.3" y="151" width="0.3" height="15.0" fill="rgb(144.575675307483,160.185355182503,144.575675307483)" rx="2" ry="2" />
<text  x="395.32" y="161.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_pyop2_kernel_uniform_extrusion (1,240,867 us, 10.04%)</title><rect x="14.4" y="119" width="118.5" height="15.0" fill="rgb(149.434593716915,149.434593716915,116.490723397359)" rx="2" ry="2" />
<text  x="17.36" y="129.5" >Parloop_Cells..</text>
</g>
<g >
<title>PCApply (1,081,904 us, 8.76%)</title><rect x="396.1" y="135" width="103.3" height="15.0" fill="rgb(135.375189297203,135.375189297203,153.621004380104)" rx="2" ry="2" />
<text  x="399.10" y="145.5" >PCApply</text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (3,251 us, 0.03%)</title><rect x="395.8" y="119" width="0.3" height="15.0" fill="rgb(151.19966314605,151.19966314605,125.044521400089)" rx="2" ry="2" />
<text  x="398.79" y="129.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (1,513 us, 0.01%)</title><rect x="1189.9" y="183" width="0.1" height="15.0" fill="rgb(153.271510292082,121.74824557263,121.74824557263)" rx="2" ry="2" />
<text  x="1192.86" y="193.5" ></text>
</g>
<g >
<title>firedrake.functionspace.make_scalar_element (1,406 us, 0.01%)</title><rect x="502.7" y="215" width="0.1" height="15.0" fill="rgb(155.991971669727,142.605116134571,142.605116134571)" rx="2" ry="2" />
<text  x="505.70" y="225.5" ></text>
</g>
<g >
<title>Log_Event_form0_cell_integral_otherwise (8,321 us, 0.07%)</title><rect x="585.6" y="167" width="0.8" height="15.0" fill="rgb(112.008069312963,146.076166118175,146.076166118175)" rx="2" ry="2" />
<text  x="588.60" y="177.5" ></text>
</g>
<g >
<title>ParLoopExecute (986,431 us, 7.98%)</title><rect x="396.9" y="199" width="94.2" height="15.0" fill="rgb(153.749424820207,125.412256954924,125.412256954924)" rx="2" ry="2" />
<text  x="399.88" y="209.5" >ParLoopExe..</text>
</g>
<g >
<title>firedrake.ufl_expr.action (4,425 us, 0.04%)</title><rect x="395.4" y="119" width="0.4" height="15.0" fill="rgb(109.612489831311,145.455089956266,145.455089956266)" rx="2" ry="2" />
<text  x="398.37" y="129.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (814,254 us, 6.59%)</title><rect x="506.5" y="183" width="77.7" height="15.0" fill="rgb(123.630521420091,163.595031396729,123.630521420091)" rx="2" ry="2" />
<text  x="509.45" y="193.5" >Parloop_..</text>
</g>
<g >
<title>CreateFunctionSpace (1,704 us, 0.01%)</title><rect x="501.4" y="183" width="0.1" height="15.0" fill="rgb(150.158862565079,150.158862565079,120.000641661539)" rx="2" ry="2" />
<text  x="504.38" y="193.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (1,240,867 us, 10.04%)</title><rect x="14.4" y="135" width="118.5" height="15.0" fill="rgb(141.640361695509,160.663196933289,141.640361695509)" rx="2" ry="2" />
<text  x="17.36" y="145.5" >pyop2.global_..</text>
</g>
<g >
<title>firedrake.ufl_expr.action (12,251 us, 0.10%)</title><rect x="392.9" y="87" width="1.2" height="15.0" fill="rgb(153.963584716554,127.05414949358,127.05414949358)" rx="2" ry="2" />
<text  x="395.90" y="97.5" ></text>
</g>
<g >
<title>SNESSolve (8,311,720 us, 67.28%)</title><rect x="396.1" y="103" width="793.9" height="15.0" fill="rgb(154.432520281069,154.432520281069,140.711444439027)" rx="2" ry="2" />
<text  x="399.10" y="113.5" >SNESSolve</text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (7,250 us, 0.06%)</title><rect x="132.9" y="151" width="0.7" height="15.0" fill="rgb(131.209111176864,131.209111176864,152.814666679393)" rx="2" ry="2" />
<text  x="135.88" y="161.5" ></text>
</g>
<g >
<title>ParLoopExecute (814,254 us, 6.59%)</title><rect x="506.5" y="167" width="77.7" height="15.0" fill="rgb(154.924865377163,134.423967891586,134.423967891586)" rx="2" ry="2" />
<text  x="509.45" y="177.5" >ParLoopE..</text>
</g>
<g >
<title>CreateFunctionSpace (5,238 us, 0.04%)</title><rect x="502.5" y="199" width="0.5" height="15.0" fill="rgb(155.511979175377,138.925173677887,138.925173677887)" rx="2" ry="2" />
<text  x="505.54" y="209.5" ></text>
</g>
<g >
<title>firedrake.interpolation.make_interpolator (30,149 us, 0.24%)</title><rect x="503.0" y="151" width="2.9" height="15.0" fill="rgb(135.006263951359,152.038661024426,152.038661024426)" rx="2" ry="2" />
<text  x="506.04" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (2,170 us, 0.02%)</title><rect x="502.8" y="247" width="0.2" height="15.0" fill="rgb(153.928885685229,153.928885685229,138.270753705339)" rx="2" ry="2" />
<text  x="505.84" y="257.5" ></text>
</g>
<g >
<title>KSPSolve (1,081,904 us, 8.76%)</title><rect x="396.1" y="119" width="103.3" height="15.0" fill="rgb(113.183652624113,113.183652624113,149.325868249828)" rx="2" ry="2" />
<text  x="399.10" y="129.5" >KSPSolve</text>
</g>
<g >
<title>HybridInit (887,676 us, 7.19%)</title><rect x="499.4" y="135" width="84.8" height="15.0" fill="rgb(147.638991640552,131.449916078914,147.638991640552)" rx="2" ry="2" />
<text  x="502.44" y="145.5" >HybridInit</text>
</g>
<g >
<title>firedrake (12,353,986 us, 100.00%)</title><rect x="10.0" y="55" width="1180.0" height="15.0" fill="rgb(143.00210643584,143.00210643584,155.097181890808)" rx="2" ry="2" />
<text  x="13.00" y="65.5" >firedrake</text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (10,548 us, 0.09%)</title><rect x="502.0" y="167" width="1.0" height="15.0" fill="rgb(151.780478104874,151.780478104874,127.859240046699)" rx="2" ry="2" />
<text  x="505.04" y="177.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (2,170 us, 0.02%)</title><rect x="502.8" y="215" width="0.2" height="15.0" fill="rgb(124.272641713446,163.490500186183,124.272641713446)" rx="2" ry="2" />
<text  x="505.84" y="225.5" ></text>
</g>
<g >
<title>CreateExtMesh (1,293,789 us, 10.47%)</title><rect x="10.0" y="71" width="123.6" height="15.0" fill="rgb(152.749572379961,117.746721579702,117.746721579702)" rx="2" ry="2" />
<text  x="13.00" y="81.5" >CreateExtMesh</text>
</g>
<g >
<title>Parloop_Cells_wrap_form1_cell_integral_otherwise (2,408,962 us, 19.50%)</title><rect x="862.6" y="151" width="230.1" height="15.0" fill="rgb(118.236466280843,147.690935702441,147.690935702441)" rx="2" ry="2" />
<text  x="865.60" y="161.5" >Parloop_Cells_wrap_form1_ce..</text>
</g>
<g >
<title>SNESFunctionEval (6,342,140 us, 51.34%)</title><rect x="584.2" y="119" width="605.8" height="15.0" fill="rgb(113.672794356267,146.507761499773,146.507761499773)" rx="2" ry="2" />
<text  x="587.23" y="129.5" >SNESFunctionEval</text>
</g>
<g >
<title>firedrake.utility_meshes.SquareMesh (2,984 us, 0.02%)</title><rect x="392.6" y="71" width="0.3" height="15.0" fill="rgb(120.992608342868,148.405491051855,148.405491051855)" rx="2" ry="2" />
<text  x="395.61" y="81.5" ></text>
</g>
</g>
</svg>
