<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="299" onload="init(evt)" viewBox="0 0 1200 299" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:13px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:18px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 13 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (1 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="299.0" fill="url(#background)"  />
<text id="title" x="600.00" y="26" >Firedrake example</text>
<text id="details" x="10.00" y="281" > </text>
<text id="unzoom" x="10.00" y="26" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="26" >Search</text>
<text id="ignorecase" x="1174.00" y="26" >ic</text>
<text id="matched" x="1090.00" y="281" > </text>
<g id="frames">
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (1,554 us, 0.01%)</title><rect x="1189.8" y="183" width="0.2" height="15.0" fill="rgb(149.940191985191,149.940191985191,118.940930389773)" rx="2" ry="2" />
<text  x="1192.85" y="193.5" ></text>
</g>
<g >
<title>Log_Event_form0_cell_integral_otherwise (8,579 us, 0.07%)</title><rect x="567.6" y="167" width="0.8" height="15.0" fill="rgb(105.327316083708,144.344118984665,144.344118984665)" rx="2" ry="2" />
<text  x="570.58" y="177.5" ></text>
</g>
<g >
<title>CreateMesh (2,539 us, 0.02%)</title><rect x="123.3" y="71" width="0.3" height="15.0" fill="rgb(128.90527863973,150.456924091782,150.456924091782)" rx="2" ry="2" />
<text  x="126.30" y="81.5" ></text>
</g>
<g >
<title>firedrake.extrusion_utils.make_extruded_coords (1,125,638 us, 9.42%)</title><rect x="10.3" y="87" width="111.2" height="15.0" fill="rgb(133.167464020765,162.042505857085,133.167464020765)" rx="2" ry="2" />
<text  x="13.26" y="97.5" >firedrake.ex..</text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (6,970 us, 0.06%)</title><rect x="121.5" y="151" width="0.6" height="15.0" fill="rgb(154.193328856306,154.193328856306,139.552285995944)" rx="2" ry="2" />
<text  x="124.46" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (7,277 us, 0.06%)</title><rect x="383.5" y="103" width="0.7" height="15.0" fill="rgb(153.933137531423,126.820721074243,126.820721074243)" rx="2" ry="2" />
<text  x="386.52" y="113.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (7,277 us, 0.06%)</title><rect x="383.5" y="135" width="0.7" height="15.0" fill="rgb(139.140314390714,109.672055626205,139.140314390714)" rx="2" ry="2" />
<text  x="386.52" y="145.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.__init__ (9,188 us, 0.08%)</title><rect x="386.9" y="71" width="0.9" height="15.0" fill="rgb(151.35840784134,151.35840784134,125.813822615726)" rx="2" ry="2" />
<text  x="389.87" y="81.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (6,325 us, 0.05%)</title><rect x="1189.4" y="151" width="0.6" height="15.0" fill="rgb(116.801188932767,116.801188932767,150.026036567632)" rx="2" ry="2" />
<text  x="1192.38" y="161.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (9,280 us, 0.08%)</title><rect x="493.0" y="151" width="1.0" height="15.0" fill="rgb(137.02427886509,104.249714591794,137.02427886509)" rx="2" ry="2" />
<text  x="496.04" y="161.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_form1_cell_integral_otherwise (2,443,944 us, 20.46%)</title><rect x="852.0" y="151" width="241.4" height="15.0" fill="rgb(151.551568345393,151.551568345393,126.749908135368)" rx="2" ry="2" />
<text  x="854.96" y="161.5" >Parloop_Cells_wrap_form1_cell..</text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (3,615 us, 0.03%)</title><rect x="1189.6" y="167" width="0.4" height="15.0" fill="rgb(152.282534278747,114.166096137062,114.166096137062)" rx="2" ry="2" />
<text  x="1192.64" y="177.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (3,365 us, 0.03%)</title><rect x="387.4" y="119" width="0.4" height="15.0" fill="rgb(130.820969519926,130.820969519926,152.739542487728)" rx="2" ry="2" />
<text  x="390.44" y="129.5" ></text>
</g>
<g >
<title>firedrake.function.Function.__init__ (1,278 us, 0.01%)</title><rect x="494.0" y="151" width="0.1" height="15.0" fill="rgb(138.027051139032,138.027051139032,154.134267962393)" rx="2" ry="2" />
<text  x="496.96" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspace.MixedFunctionSpace (1,685 us, 0.01%)</title><rect x="492.4" y="167" width="0.1" height="15.0" fill="rgb(132.406442656124,132.406442656124,153.046408256024)" rx="2" ry="2" />
<text  x="495.38" y="177.5" ></text>
</g>
<g >
<title>HybridBreak (961,797 us, 8.05%)</title><rect x="387.8" y="167" width="95.0" height="15.0" fill="rgb(152.458367800015,152.458367800015,131.144397800072)" rx="2" ry="2" />
<text  x="390.77" y="177.5" >HybridBreak</text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (9,280 us, 0.08%)</title><rect x="493.0" y="167" width="1.0" height="15.0" fill="rgb(156.192583178169,144.143137699297,144.143137699297)" rx="2" ry="2" />
<text  x="496.04" y="177.5" ></text>
</g>
<g >
<title>firedrake.utility_meshes.RectangleMesh (3,541 us, 0.03%)</title><rect x="384.2" y="87" width="0.4" height="15.0" fill="rgb(124.304421570541,149.264109296066,149.264109296066)" rx="2" ry="2" />
<text  x="387.24" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (1,685 us, 0.01%)</title><rect x="492.4" y="199" width="0.1" height="15.0" fill="rgb(149.274839343335,149.274839343335,115.716529125394)" rx="2" ry="2" />
<text  x="495.38" y="209.5" ></text>
</g>
<g >
<title>SNESSolve (8,120,705 us, 67.99%)</title><rect x="387.8" y="103" width="802.2" height="15.0" fill="rgb(128.707271853417,162.768583651769,128.707271853417)" rx="2" ry="2" />
<text  x="390.77" y="113.5" >SNESSolve</text>
</g>
<g >
<title>firedrake.matrix_free.operators.ImplicitMatrixContext.__init__ (7,456 us, 0.06%)</title><rect x="387.0" y="103" width="0.8" height="15.0" fill="rgb(147.65016776511,147.65016776511,107.84312070784)" rx="2" ry="2" />
<text  x="390.04" y="113.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (11,708 us, 0.10%)</title><rect x="122.1" y="103" width="1.2" height="15.0" fill="rgb(155.899197282326,155.899197282326,147.819186829736)" rx="2" ry="2" />
<text  x="125.15" y="113.5" ></text>
</g>
<g >
<title>firedrake.functionspace.VectorFunctionSpace (6,970 us, 0.06%)</title><rect x="121.5" y="87" width="0.6" height="15.0" fill="rgb(151.613442989578,151.613442989578,127.04976218026)" rx="2" ry="2" />
<text  x="124.46" y="97.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.action (11,574 us, 0.10%)</title><rect x="384.6" y="87" width="1.1" height="15.0" fill="rgb(127.992889337183,162.884878479993,127.992889337183)" rx="2" ry="2" />
<text  x="387.59" y="97.5" ></text>
</g>
<g >
<title>ParLoopExecute (696,953 us, 5.83%)</title><rect x="497.3" y="167" width="68.9" height="15.0" fill="rgb(126.958430785425,126.958430785425,151.991954345566)" rx="2" ry="2" />
<text  x="500.30" y="177.5" >ParLoo..</text>
</g>
<g >
<title>KSPSolve (1,042,110 us, 8.72%)</title><rect x="387.8" y="119" width="102.9" height="15.0" fill="rgb(152.680160849299,117.21456651129,117.21456651129)" rx="2" ry="2" />
<text  x="390.77" y="129.5" >KSPSolve</text>
</g>
<g >
<title>Parloop_Cells_wrap_pyop2_kernel_uniform_extrusion (1,089,034 us, 9.12%)</title><rect x="13.9" y="119" width="107.6" height="15.0" fill="rgb(153.857501301504,153.857501301504,137.924813999594)" rx="2" ry="2" />
<text  x="16.87" y="129.5" >Parloop_Cell..</text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (9,866 us, 0.08%)</title><rect x="385.9" y="103" width="1.0" height="15.0" fill="rgb(149.495493787896,159.384454499645,149.495493787896)" rx="2" ry="2" />
<text  x="388.89" y="113.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.action (4,091 us, 0.03%)</title><rect x="387.0" y="119" width="0.4" height="15.0" fill="rgb(132.022393991672,162.228912606007,132.022393991672)" rx="2" ry="2" />
<text  x="390.04" y="129.5" ></text>
</g>
<g >
<title>perfsolve (8,120,705 us, 67.99%)</title><rect x="387.8" y="71" width="802.2" height="15.0" fill="rgb(154.653782558287,154.653782558287,141.783715474774)" rx="2" ry="2" />
<text  x="390.77" y="81.5" >perfsolve</text>
</g>
<g >
<title>firedrake.utility_meshes.SquareMesh (3,541 us, 0.03%)</title><rect x="384.2" y="71" width="0.4" height="15.0" fill="rgb(114.050382423707,114.050382423707,149.493622404588)" rx="2" ry="2" />
<text  x="387.24" y="81.5" ></text>
</g>
<g >
<title>firedrake.interpolation.make_interpolator (26,907 us, 0.23%)</title><rect x="494.1" y="151" width="2.6" height="15.0" fill="rgb(146.427046665648,128.344307080724,146.427046665648)" rx="2" ry="2" />
<text  x="497.08" y="161.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (4,501 us, 0.04%)</title><rect x="493.5" y="199" width="0.5" height="15.0" fill="rgb(125.061213586462,125.061213586462,151.624751016735)" rx="2" ry="2" />
<text  x="496.51" y="209.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (955,942 us, 8.00%)</title><rect x="388.4" y="231" width="94.4" height="15.0" fill="rgb(153.639067885434,124.566187121664,124.566187121664)" rx="2" ry="2" />
<text  x="391.35" y="241.5" >pyop2.glob..</text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (977,898 us, 8.19%)</title><rect x="1093.4" y="135" width="96.6" height="15.0" fill="rgb(129.664070305839,150.65364785707,150.65364785707)" rx="2" ry="2" />
<text  x="1096.40" y="145.5" >firedrake...</text>
</g>
<g >
<title>Log_Event_form1_cell_integral_otherwise (1,582 us, 0.01%)</title><rect x="852.9" y="167" width="0.2" height="15.0" fill="rgb(142.903434391925,119.315050629308,142.903434391925)" rx="2" ry="2" />
<text  x="855.94" y="177.5" ></text>
</g>
<g >
<title>firedrake.mesh.MeshTopology._facets (2,997 us, 0.03%)</title><rect x="383.9" y="151" width="0.3" height="15.0" fill="rgb(154.068668901341,154.068668901341,138.948164675731)" rx="2" ry="2" />
<text  x="386.95" y="161.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (7,277 us, 0.06%)</title><rect x="383.5" y="87" width="0.7" height="15.0" fill="rgb(123.823668976011,123.823668976011,151.385226253422)" rx="2" ry="2" />
<text  x="386.52" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (4,988 us, 0.04%)</title><rect x="492.5" y="199" width="0.5" height="15.0" fill="rgb(111.094053472163,145.839199048339,145.839199048339)" rx="2" ry="2" />
<text  x="495.55" y="209.5" ></text>
</g>
<g >
<title>firedrake.parloops.par_loop (702,652 us, 5.88%)</title><rect x="496.7" y="151" width="69.5" height="15.0" fill="rgb(155.118264491029,155.118264491029,144.034666379602)" rx="2" ry="2" />
<text  x="499.74" y="161.5" >firedra..</text>
</g>
<g >
<title>PCApply (1,042,110 us, 8.72%)</title><rect x="387.8" y="135" width="102.9" height="15.0" fill="rgb(148.629867272749,148.629867272749,112.590895244863)" rx="2" ry="2" />
<text  x="390.77" y="145.5" >PCApply</text>
</g>
<g >
<title>Parloop_Cells_wrap_form0_cell_integral_otherwise (2,888,530 us, 24.18%)</title><rect x="566.6" y="151" width="285.4" height="15.0" fill="rgb(154.252568927396,129.269695110039,129.269695110039)" rx="2" ry="2" />
<text  x="569.61" y="161.5" >Parloop_Cells_wrap_form0_cell_integ..</text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (1,929 us, 0.02%)</title><rect x="493.8" y="247" width="0.2" height="15.0" fill="rgb(133.698395205196,95.727137713314,133.698395205196)" rx="2" ry="2" />
<text  x="496.77" y="257.5" ></text>
</g>
<g >
<title>all (11,944,790 us, 100%)</title><rect x="10.0" y="39" width="1180.0" height="15.0" fill="rgb(150.115047037625,150.115047037625,119.788304874642)" rx="2" ry="2" />
<text  x="13.00" y="49.5" ></text>
</g>
<g >
<title>PetscBarrier (1,348 us, 0.01%)</title><rect x="123.6" y="71" width="0.1" height="15.0" fill="rgb(125.823701525915,149.657996691904,149.657996691904)" rx="2" ry="2" />
<text  x="126.55" y="81.5" ></text>
</g>
<g >
<title>PCSetUp (763,591 us, 6.39%)</title><rect x="490.7" y="119" width="75.5" height="15.0" fill="rgb(147.84364351299,147.84364351299,108.780733947565)" rx="2" ry="2" />
<text  x="493.72" y="129.5" >PCSetUp</text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (6,675 us, 0.06%)</title><rect x="493.3" y="183" width="0.7" height="15.0" fill="rgb(141.900152456729,153.825965451745,153.825965451745)" rx="2" ry="2" />
<text  x="496.30" y="193.5" ></text>
</g>
<g >
<title>HybridRHS (80,313 us, 0.67%)</title><rect x="482.8" y="167" width="7.9" height="15.0" fill="rgb(141.722994085371,141.722994085371,154.849611758459)" rx="2" ry="2" />
<text  x="485.79" y="177.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (4,988 us, 0.04%)</title><rect x="492.5" y="167" width="0.5" height="15.0" fill="rgb(113.488711415594,113.488711415594,149.384911886889)" rx="2" ry="2" />
<text  x="495.55" y="177.5" ></text>
</g>
<g >
<title>firedrake.functionspace.VectorFunctionSpace (7,277 us, 0.06%)</title><rect x="383.5" y="71" width="0.7" height="15.0" fill="rgb(144.408069587411,144.408069587411,155.369303791112)" rx="2" ry="2" />
<text  x="386.52" y="81.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (11,708 us, 0.10%)</title><rect x="122.1" y="87" width="1.2" height="15.0" fill="rgb(110.367771742236,110.367771742236,148.780859046884)" rx="2" ry="2" />
<text  x="125.15" y="97.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (6,673 us, 0.06%)</title><rect x="492.4" y="151" width="0.6" height="15.0" fill="rgb(144.057496220875,160.269709917532,144.057496220875)" rx="2" ry="2" />
<text  x="495.38" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (4,988 us, 0.04%)</title><rect x="492.5" y="183" width="0.5" height="15.0" fill="rgb(151.949954882402,151.949954882402,128.68055058395)" rx="2" ry="2" />
<text  x="495.55" y="193.5" ></text>
</g>
<g >
<title>firedrake.parloops.par_loop (961,797 us, 8.05%)</title><rect x="387.8" y="183" width="95.0" height="15.0" fill="rgb(139.82138098783,160.959310071749,139.82138098783)" rx="2" ry="2" />
<text  x="390.77" y="193.5" >firedrake...</text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (7,277 us, 0.06%)</title><rect x="383.5" y="119" width="0.7" height="15.0" fill="rgb(152.746688412125,117.724611159628,117.724611159628)" rx="2" ry="2" />
<text  x="386.52" y="129.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (2,432,475 us, 20.36%)</title><rect x="853.1" y="167" width="240.3" height="15.0" fill="rgb(154.876842298501,134.055790955173,134.055790955173)" rx="2" ry="2" />
<text  x="856.10" y="177.5" >pyop2.global_kernel.GlobalKer..</text>
</g>
<g >
<title>firedrake.assemble.allocate_matrix (7,456 us, 0.06%)</title><rect x="387.0" y="87" width="0.8" height="15.0" fill="rgb(143.365551320923,160.382352110548,143.365551320923)" rx="2" ry="2" />
<text  x="390.04" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (1,929 us, 0.02%)</title><rect x="493.8" y="231" width="0.2" height="15.0" fill="rgb(132.498056622715,162.151479154442,132.498056622715)" rx="2" ry="2" />
<text  x="496.77" y="241.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (6,970 us, 0.06%)</title><rect x="121.5" y="103" width="0.6" height="15.0" fill="rgb(149.675259848511,136.667853361811,149.675259848511)" rx="2" ry="2" />
<text  x="124.46" y="113.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (1,685 us, 0.01%)</title><rect x="492.4" y="215" width="0.1" height="15.0" fill="rgb(133.232787766575,162.03187175893,133.232787766575)" rx="2" ry="2" />
<text  x="495.38" y="225.5" ></text>
</g>
<g >
<title>ParLoopExecute (5,333,804 us, 44.65%)</title><rect x="566.5" y="135" width="526.9" height="15.0" fill="rgb(147.373342771675,147.373342771675,155.943227633227)" rx="2" ry="2" />
<text  x="569.48" y="145.5" >ParLoopExecute</text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (955,942 us, 8.00%)</title><rect x="388.4" y="215" width="94.4" height="15.0" fill="rgb(148.480409134805,133.606048407938,148.480409134805)" rx="2" ry="2" />
<text  x="391.35" y="225.5" >Parloop_Ce..</text>
</g>
<g >
<title>firedrake (11,944,790 us, 100.00%)</title><rect x="10.0" y="55" width="1180.0" height="15.0" fill="rgb(142.686303527123,142.686303527123,155.036058747185)" rx="2" ry="2" />
<text  x="13.00" y="65.5" >firedrake</text>
</g>
<g >
<title>SCForwardElim (1,042,110 us, 8.72%)</title><rect x="387.8" y="151" width="102.9" height="15.0" fill="rgb(116.494210017118,147.239239634068,147.239239634068)" rx="2" ry="2" />
<text  x="390.77" y="161.5" >SCForwardElim</text>
</g>
<g >
<title>HybridInit (763,591 us, 6.39%)</title><rect x="490.7" y="135" width="75.5" height="15.0" fill="rgb(132.814490749869,151.470423527744,151.470423527744)" rx="2" ry="2" />
<text  x="493.72" y="145.5" >HybridI..</text>
</g>
<g >
<title>ParLoopExecute (955,942 us, 8.00%)</title><rect x="388.4" y="199" width="94.4" height="15.0" fill="rgb(154.320788783877,154.320788783877,140.169976414172)" rx="2" ry="2" />
<text  x="391.35" y="209.5" >ParLoopExe..</text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (6,970 us, 0.06%)</title><rect x="121.5" y="119" width="0.6" height="15.0" fill="rgb(131.444045885652,162.323062297685,131.444045885652)" rx="2" ry="2" />
<text  x="124.46" y="129.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (6,970 us, 0.06%)</title><rect x="121.5" y="135" width="0.6" height="15.0" fill="rgb(131.701332227945,162.281178474521,131.701332227945)" rx="2" ry="2" />
<text  x="124.46" y="145.5" ></text>
</g>
<g >
<title>CreateExtMesh (1,135,216 us, 9.50%)</title><rect x="10.0" y="71" width="112.1" height="15.0" fill="rgb(148.005031543155,148.005031543155,109.562845170676)" rx="2" ry="2" />
<text  x="13.00" y="81.5" >CreateExtMesh</text>
</g>
<g >
<title>firedrake.__init__ (2,630,259 us, 22.02%)</title><rect x="123.7" y="71" width="259.8" height="15.0" fill="rgb(139.687029833514,153.2521929198,153.2521929198)" rx="2" ry="2" />
<text  x="126.69" y="81.5" >firedrake.__init__</text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (1,685 us, 0.01%)</title><rect x="492.4" y="231" width="0.1" height="15.0" fill="rgb(107.482239880661,144.902802932023,144.902802932023)" rx="2" ry="2" />
<text  x="495.38" y="241.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (1,685 us, 0.01%)</title><rect x="492.4" y="183" width="0.1" height="15.0" fill="rgb(127.470635510818,127.470635510818,152.091090744029)" rx="2" ry="2" />
<text  x="495.38" y="193.5" ></text>
</g>
<g >
<title>SNESFunctionEval (6,315,004 us, 52.87%)</title><rect x="566.2" y="119" width="623.8" height="15.0" fill="rgb(138.483753306984,107.989617849147,138.483753306984)" rx="2" ry="2" />
<text  x="569.15" y="129.5" >SNESFunctionEval</text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.solve (8,120,705 us, 67.99%)</title><rect x="387.8" y="87" width="802.2" height="15.0" fill="rgb(154.176331185532,128.685205755745,128.685205755745)" rx="2" ry="2" />
<text  x="390.77" y="97.5" >firedrake.variational_solver.NonlinearVariationalSolver.solve</text>
</g>
<g >
<title>firedrake.variational_solver.LinearVariationalProblem.__init__ (23,009 us, 0.19%)</title><rect x="384.6" y="71" width="2.3" height="15.0" fill="rgb(132.072885296086,162.220693091335,132.072885296086)" rx="2" ry="2" />
<text  x="387.59" y="81.5" ></text>
</g>
<g >
<title>ParLoopExecute (1,089,034 us, 9.12%)</title><rect x="13.9" y="103" width="107.6" height="15.0" fill="rgb(146.798799168038,155.095984969491,155.095984969491)" rx="2" ry="2" />
<text  x="16.87" y="113.5" >ParLoopExecute</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (2,870,195 us, 24.03%)</title><rect x="568.4" y="167" width="283.6" height="15.0" fill="rgb(152.9851178914,152.9851178914,133.697109781401)" rx="2" ry="2" />
<text  x="571.42" y="177.5" >pyop2.global_kernel.GlobalKernel.c..</text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (696,953 us, 5.83%)</title><rect x="497.3" y="183" width="68.9" height="15.0" fill="rgb(140.304387695945,160.880681072753,140.304387695945)" rx="2" ry="2" />
<text  x="500.30" y="193.5" >Parloo..</text>
</g>
<g >
<title>firedrake.slate.slac.optimise.optimise (7,437 us, 0.06%)</title><rect x="490.0" y="183" width="0.7" height="15.0" fill="rgb(128.730939552909,162.764730770457,128.730939552909)" rx="2" ry="2" />
<text  x="492.99" y="193.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (11,708 us, 0.10%)</title><rect x="122.1" y="119" width="1.2" height="15.0" fill="rgb(154.022043473517,127.502333296964,127.502333296964)" rx="2" ry="2" />
<text  x="125.15" y="129.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (696,953 us, 5.83%)</title><rect x="497.3" y="199" width="68.9" height="15.0" fill="rgb(152.063114140641,152.063114140641,129.228937758489)" rx="2" ry="2" />
<text  x="500.30" y="209.5" >pyop2...</text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (1,929 us, 0.02%)</title><rect x="493.8" y="215" width="0.2" height="15.0" fill="rgb(148.86849757863,148.86849757863,113.747334419515)" rx="2" ry="2" />
<text  x="496.77" y="225.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (1,089,034 us, 9.12%)</title><rect x="13.9" y="135" width="107.6" height="15.0" fill="rgb(153.725386348502,125.227962005182,125.227962005182)" rx="2" ry="2" />
<text  x="16.87" y="145.5" >pyop2.global..</text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalProblem.__init__ (11,435 us, 0.10%)</title><rect x="385.7" y="87" width="1.2" height="15.0" fill="rgb(139.297828569333,153.151288888346,153.151288888346)" rx="2" ry="2" />
<text  x="388.74" y="97.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (11,708 us, 0.10%)</title><rect x="122.1" y="71" width="1.2" height="15.0" fill="rgb(137.367914901093,137.367914901093,154.006693206663)" rx="2" ry="2" />
<text  x="125.15" y="81.5" ></text>
</g>
</g>
</svg>
