<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="299" onload="init(evt)" viewBox="0 0 1200 299" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:13px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:18px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 13 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (1 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="299.0" fill="url(#background)"  />
<text id="title" x="600.00" y="26" >Firedrake example</text>
<text id="details" x="10.00" y="281" > </text>
<text id="unzoom" x="10.00" y="26" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="26" >Search</text>
<text id="ignorecase" x="1174.00" y="26" >ic</text>
<text id="matched" x="1090.00" y="281" > </text>
<g id="frames">
<g >
<title>firedrake.utility_meshes.RectangleMesh (4,029 us, 0.03%)</title><rect x="466.6" y="87" width="0.4" height="15.0" fill="rgb(107.370806248711,144.873912731147,144.873912731147)" rx="2" ry="2" />
<text  x="469.62" y="97.5" ></text>
</g>
<g >
<title>firedrake.extrusion_utils.make_extruded_coords (1,314,590 us, 10.23%)</title><rect x="10.2" y="87" width="120.7" height="15.0" fill="rgb(155.039814479571,155.039814479571,143.654485554843)" rx="2" ry="2" />
<text  x="13.23" y="97.5" >firedrake.ext..</text>
</g>
<g >
<title>firedrake.mesh.MeshTopology._facets (3,473 us, 0.03%)</title><rect x="466.3" y="151" width="0.3" height="15.0" fill="rgb(153.467902723591,123.253920880864,123.253920880864)" rx="2" ry="2" />
<text  x="469.30" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (1,718 us, 0.01%)</title><rect x="560.7" y="231" width="0.2" height="15.0" fill="rgb(139.787390928185,160.964843337272,139.787390928185)" rx="2" ry="2" />
<text  x="563.73" y="241.5" ></text>
</g>
<g >
<title>firedrake.functionspace.VectorFunctionSpace (7,262 us, 0.06%)</title><rect x="130.9" y="87" width="0.7" height="15.0" fill="rgb(150.869671212522,139.728532482089,150.869671212522)" rx="2" ry="2" />
<text  x="133.90" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (11,956 us, 0.09%)</title><rect x="131.6" y="103" width="1.1" height="15.0" fill="rgb(146.885051773399,155.118346756066,155.118346756066)" rx="2" ry="2" />
<text  x="134.56" y="113.5" ></text>
</g>
<g >
<title>HybridInit (753,588 us, 5.86%)</title><rect x="559.2" y="135" width="69.1" height="15.0" fill="rgb(148.257296533786,148.257296533786,110.785360125269)" rx="2" ry="2" />
<text  x="562.16" y="145.5" >HybridI..</text>
</g>
<g >
<title>CreateFunctionSpace (8,153 us, 0.06%)</title><rect x="465.9" y="87" width="0.7" height="15.0" fill="rgb(135.169704607412,99.4973680564932,135.169704607412)" rx="2" ry="2" />
<text  x="468.87" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (4,883 us, 0.04%)</title><rect x="560.9" y="199" width="0.4" height="15.0" fill="rgb(145.39195108533,160.052473079132,145.39195108533)" rx="2" ry="2" />
<text  x="563.89" y="209.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.LinearVariationalProblem.__init__ (23,774 us, 0.18%)</title><rect x="467.0" y="71" width="2.2" height="15.0" fill="rgb(128.866356460314,162.742686157623,128.866356460314)" rx="2" ry="2" />
<text  x="469.99" y="81.5" ></text>
</g>
<g >
<title>Log_Event_form1_cell_integral_otherwise (1,517 us, 0.01%)</title><rect x="890.9" y="167" width="0.1" height="15.0" fill="rgb(153.243211710433,121.531289779989,121.531289779989)" rx="2" ry="2" />
<text  x="893.89" y="177.5" ></text>
</g>
<g >
<title>Log_Event_form0_cell_integral_otherwise (8,126 us, 0.06%)</title><rect x="629.5" y="167" width="0.8" height="15.0" fill="rgb(116.751950495094,147.306061239469,147.306061239469)" rx="2" ry="2" />
<text  x="632.51" y="177.5" ></text>
</g>
<g >
<title>firedrake.slate.slac.optimise.optimise (7,218 us, 0.06%)</title><rect x="558.5" y="183" width="0.7" height="15.0" fill="rgb(123.804970958827,149.134622100437,149.134622100437)" rx="2" ry="2" />
<text  x="561.50" y="193.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (1,568 us, 0.01%)</title><rect x="1189.9" y="183" width="0.1" height="15.0" fill="rgb(154.754990682265,133.121595230697,133.121595230697)" rx="2" ry="2" />
<text  x="1192.86" y="193.5" ></text>
</g>
<g >
<title>PCSetUp (753,588 us, 5.86%)</title><rect x="559.2" y="119" width="69.1" height="15.0" fill="rgb(133.278115328158,133.278115328158,153.215119095772)" rx="2" ry="2" />
<text  x="562.16" y="129.5" >PCSetUp</text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (10,633 us, 0.08%)</title><rect x="468.2" y="103" width="1.0" height="15.0" fill="rgb(155.061629598242,155.061629598242,143.760204976098)" rx="2" ry="2" />
<text  x="471.20" y="113.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (1,718 us, 0.01%)</title><rect x="560.7" y="199" width="0.2" height="15.0" fill="rgb(149.938949908889,149.938949908889,118.934911096922)" rx="2" ry="2" />
<text  x="563.73" y="209.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (6,878 us, 0.05%)</title><rect x="561.6" y="183" width="0.6" height="15.0" fill="rgb(116.228851309599,116.228851309599,149.915261543793)" rx="2" ry="2" />
<text  x="564.56" y="193.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.action (4,114 us, 0.03%)</title><rect x="469.3" y="119" width="0.4" height="15.0" fill="rgb(121.580778310927,121.580778310927,150.95111838276)" rx="2" ry="2" />
<text  x="472.32" y="129.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (4,883 us, 0.04%)</title><rect x="560.9" y="167" width="0.4" height="15.0" fill="rgb(148.312303474277,159.57706687628,148.312303474277)" rx="2" ry="2" />
<text  x="563.89" y="177.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (1,267,849 us, 9.86%)</title><rect x="14.5" y="135" width="116.4" height="15.0" fill="rgb(152.292249012274,114.240575760765,114.240575760765)" rx="2" ry="2" />
<text  x="17.52" y="145.5" >pyop2.global_..</text>
</g>
<g >
<title>PetscBarrier (1,767 us, 0.01%)</title><rect x="133.0" y="71" width="0.1" height="15.0" fill="rgb(152.683410503161,117.239480524231,117.239480524231)" rx="2" ry="2" />
<text  x="135.96" y="81.5" ></text>
</g>
<g >
<title>CreateExtMesh (1,324,337 us, 10.30%)</title><rect x="10.0" y="71" width="121.6" height="15.0" fill="rgb(152.169903240863,113.302591513281,113.302591513281)" rx="2" ry="2" />
<text  x="13.00" y="81.5" >CreateExtMesh</text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (1,016,054 us, 7.90%)</title><rect x="1096.7" y="135" width="93.3" height="15.0" fill="rgb(125.227751182078,163.335017249429,125.227751182078)" rx="2" ry="2" />
<text  x="1099.73" y="145.5" >firedrake...</text>
</g>
<g >
<title>CreateFunctionSpace (7,262 us, 0.06%)</title><rect x="130.9" y="103" width="0.7" height="15.0" fill="rgb(148.415838168965,159.560212391099,148.415838168965)" rx="2" ry="2" />
<text  x="133.90" y="113.5" ></text>
</g>
<g >
<title>KSPSolve (970,245 us, 7.55%)</title><rect x="470.1" y="119" width="89.1" height="15.0" fill="rgb(155.275666389372,137.113442318516,137.113442318516)" rx="2" ry="2" />
<text  x="473.10" y="129.5" >KSPSolve</text>
</g>
<g >
<title>perfsolve (7,842,627 us, 61.01%)</title><rect x="470.1" y="71" width="719.9" height="15.0" fill="rgb(152.768320544142,117.89045750509,117.89045750509)" rx="2" ry="2" />
<text  x="473.10" y="81.5" >perfsolve</text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (4,883 us, 0.04%)</title><rect x="560.9" y="183" width="0.4" height="15.0" fill="rgb(154.670490751057,132.473762424767,132.473762424767)" rx="2" ry="2" />
<text  x="563.89" y="193.5" ></text>
</g>
<g >
<title>firedrake (12,855,038 us, 100.00%)</title><rect x="10.0" y="55" width="1180.0" height="15.0" fill="rgb(114.911542593481,146.828918450162,146.828918450162)" rx="2" ry="2" />
<text  x="13.00" y="65.5" >firedrake</text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (3,520 us, 0.03%)</title><rect x="1189.7" y="167" width="0.3" height="15.0" fill="rgb(137.751332548304,137.751332548304,154.080903073865)" rx="2" ry="2" />
<text  x="1192.68" y="177.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (688,309 us, 5.35%)</title><rect x="565.2" y="183" width="63.1" height="15.0" fill="rgb(154.782894120208,133.335521588263,133.335521588263)" rx="2" ry="2" />
<text  x="568.16" y="193.5" >Parloo..</text>
</g>
<g >
<title>firedrake.__init__ (3,625,056 us, 28.20%)</title><rect x="133.1" y="71" width="332.8" height="15.0" fill="rgb(146.654858577627,159.846883487363,146.654858577627)" rx="2" ry="2" />
<text  x="136.12" y="81.5" >firedrake.__init__</text>
</g>
<g >
<title>HybridRHS (66,971 us, 0.52%)</title><rect x="553.0" y="167" width="6.2" height="15.0" fill="rgb(128.766866408718,128.766866408718,152.341974143623)" rx="2" ry="2" />
<text  x="556.02" y="177.5" ></text>
</g>
<g >
<title>SNESFunctionEval (6,118,794 us, 47.60%)</title><rect x="628.3" y="119" width="561.7" height="15.0" fill="rgb(121.957608047239,121.957608047239,151.024053170433)" rx="2" ry="2" />
<text  x="631.34" y="129.5" >SNESFunctionEval</text>
</g>
<g >
<title>firedrake.interpolation.make_interpolator (26,928 us, 0.21%)</title><rect x="562.2" y="151" width="2.5" height="15.0" fill="rgb(148.084497341234,148.084497341234,109.947948653672)" rx="2" ry="2" />
<text  x="565.19" y="161.5" ></text>
</g>
<g >
<title>all (12,855,038 us, 100%)</title><rect x="10.0" y="39" width="1180.0" height="15.0" fill="rgb(142.570710127332,160.511744862992,142.570710127332)" rx="2" ry="2" />
<text  x="13.00" y="49.5" ></text>
</g>
<g >
<title>firedrake.parloops.par_loop (693,722 us, 5.40%)</title><rect x="564.7" y="151" width="63.6" height="15.0" fill="rgb(152.261772013408,114.006918769463,114.006918769463)" rx="2" ry="2" />
<text  x="567.66" y="161.5" >firedr..</text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.solve (7,842,627 us, 61.01%)</title><rect x="470.1" y="87" width="719.9" height="15.0" fill="rgb(142.435185001908,142.435185001908,154.98745516166)" rx="2" ry="2" />
<text  x="473.10" y="97.5" >firedrake.variational_solver.NonlinearVariationalSolver.solve</text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (897,714 us, 6.98%)</title><rect x="470.6" y="215" width="82.4" height="15.0" fill="rgb(149.10731944659,149.10731944659,114.904701933473)" rx="2" ry="2" />
<text  x="473.61" y="225.5" >Parloop_..</text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.__init__ (10,113 us, 0.08%)</title><rect x="469.2" y="71" width="0.9" height="15.0" fill="rgb(147.896224287815,147.896224287815,109.03554847172)" rx="2" ry="2" />
<text  x="472.17" y="81.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (8,153 us, 0.06%)</title><rect x="465.9" y="103" width="0.7" height="15.0" fill="rgb(116.949830192342,147.3573633832,147.3573633832)" rx="2" ry="2" />
<text  x="468.87" y="113.5" ></text>
</g>
<g >
<title>SNESSolve (7,842,627 us, 61.01%)</title><rect x="470.1" y="103" width="719.9" height="15.0" fill="rgb(135.473444120748,161.667113747785,135.473444120748)" rx="2" ry="2" />
<text  x="473.10" y="113.5" >SNESSolve</text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (11,956 us, 0.09%)</title><rect x="131.6" y="119" width="1.1" height="15.0" fill="rgb(151.712886532512,151.712886532512,127.531680888326)" rx="2" ry="2" />
<text  x="134.56" y="129.5" ></text>
</g>
<g >
<title>firedrake.parloops.par_loop (903,274 us, 7.03%)</title><rect x="470.1" y="183" width="82.9" height="15.0" fill="rgb(122.230286858834,122.230286858834,151.076829714613)" rx="2" ry="2" />
<text  x="473.10" y="193.5" >firedrak..</text>
</g>
<g >
<title>firedrake.matrix_free.operators.ImplicitMatrixContext.__init__ (8,509 us, 0.07%)</title><rect x="469.3" y="103" width="0.8" height="15.0" fill="rgb(156.277972036966,144.797785616737,144.797785616737)" rx="2" ry="2" />
<text  x="472.32" y="113.5" ></text>
</g>
<g >
<title>ParLoopExecute (5,099,561 us, 39.67%)</title><rect x="628.6" y="135" width="468.1" height="15.0" fill="rgb(140.09604751562,140.09604751562,154.534718873991)" rx="2" ry="2" />
<text  x="631.63" y="145.5" >ParLoopExecute</text>
</g>
<g >
<title>ParLoopExecute (897,714 us, 6.98%)</title><rect x="470.6" y="199" width="82.4" height="15.0" fill="rgb(138.005750614434,106.764735949487,138.005750614434)" rx="2" ry="2" />
<text  x="473.61" y="209.5" >ParLoopE..</text>
</g>
<g >
<title>HybridBreak (903,274 us, 7.03%)</title><rect x="470.1" y="167" width="82.9" height="15.0" fill="rgb(120.465252510095,148.268769169284,148.268769169284)" rx="2" ry="2" />
<text  x="473.10" y="177.5" >HybridBr..</text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (2,012 us, 0.02%)</title><rect x="562.0" y="247" width="0.2" height="15.0" fill="rgb(139.904367279578,111.629941153919,139.904367279578)" rx="2" ry="2" />
<text  x="565.00" y="257.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (9,308 us, 0.07%)</title><rect x="561.3" y="151" width="0.9" height="15.0" fill="rgb(150.931350447289,150.931350447289,123.744236783015)" rx="2" ry="2" />
<text  x="564.33" y="161.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (4,395 us, 0.03%)</title><rect x="469.7" y="119" width="0.4" height="15.0" fill="rgb(153.869025193834,153.869025193834,137.980660554734)" rx="2" ry="2" />
<text  x="472.70" y="129.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (2,241,010 us, 17.43%)</title><rect x="891.0" y="167" width="205.7" height="15.0" fill="rgb(146.814108200479,159.820959130155,146.814108200479)" rx="2" ry="2" />
<text  x="894.02" y="177.5" >pyop2.global_kernel.Glob..</text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (8,153 us, 0.06%)</title><rect x="465.9" y="119" width="0.7" height="15.0" fill="rgb(153.778959778409,153.778959778409,137.544189695367)" rx="2" ry="2" />
<text  x="468.87" y="129.5" ></text>
</g>
<g >
<title>firedrake.functionspace.VectorFunctionSpace (8,153 us, 0.06%)</title><rect x="465.9" y="71" width="0.7" height="15.0" fill="rgb(146.642888233728,159.848832147998,146.642888233728)" rx="2" ry="2" />
<text  x="468.87" y="81.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (8,153 us, 0.06%)</title><rect x="465.9" y="135" width="0.7" height="15.0" fill="rgb(151.826531924796,151.826531924796,128.082423943243)" rx="2" ry="2" />
<text  x="468.87" y="145.5" ></text>
</g>
<g >
<title>SCForwardElim (970,245 us, 7.55%)</title><rect x="470.1" y="151" width="89.1" height="15.0" fill="rgb(147.147396642925,155.18636209261,155.18636209261)" rx="2" ry="2" />
<text  x="473.10" y="161.5" >SCForward..</text>
</g>
<g >
<title>CreateMesh (1,428 us, 0.01%)</title><rect x="466.9" y="103" width="0.1" height="15.0" fill="rgb(145.810760765972,126.765074462803,145.810760765972)" rx="2" ry="2" />
<text  x="469.86" y="113.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (2,012 us, 0.02%)</title><rect x="562.0" y="215" width="0.2" height="15.0" fill="rgb(105.554368833481,144.402984512384,144.402984512384)" rx="2" ry="2" />
<text  x="565.00" y="225.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (9,308 us, 0.07%)</title><rect x="561.3" y="167" width="0.9" height="15.0" fill="rgb(117.585049461228,117.585049461228,150.177751508625)" rx="2" ry="2" />
<text  x="564.33" y="177.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (2,829,497 us, 22.01%)</title><rect x="630.3" y="167" width="259.7" height="15.0" fill="rgb(142.494139529471,142.494139529471,154.998865715381)" rx="2" ry="2" />
<text  x="633.26" y="177.5" >pyop2.global_kernel.GlobalKerne..</text>
</g>
<g >
<title>Parloop_Cells_wrap_form1_cell_integral_otherwise (2,252,357 us, 17.52%)</title><rect x="890.0" y="151" width="206.7" height="15.0" fill="rgb(132.731310726549,132.731310726549,153.109285947074)" rx="2" ry="2" />
<text  x="892.98" y="161.5" >Parloop_Cells_wrap_form1..</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (688,309 us, 5.35%)</title><rect x="565.2" y="199" width="63.1" height="15.0" fill="rgb(147.912628018728,159.642130322533,147.912628018728)" rx="2" ry="2" />
<text  x="568.16" y="209.5" >pyop2...</text>
</g>
<g >
<title>CreateFunctionSpace (4,671 us, 0.04%)</title><rect x="561.8" y="199" width="0.4" height="15.0" fill="rgb(153.611574196451,124.355402172791,124.355402172791)" rx="2" ry="2" />
<text  x="564.76" y="209.5" ></text>
</g>
<g >
<title>firedrake.utility_meshes.SquareMesh (4,029 us, 0.03%)</title><rect x="466.6" y="71" width="0.4" height="15.0" fill="rgb(132.339759806899,151.347345135122,151.347345135122)" rx="2" ry="2" />
<text  x="469.62" y="81.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_form0_cell_integral_otherwise (2,847,204 us, 22.15%)</title><rect x="628.6" y="151" width="261.4" height="15.0" fill="rgb(135.042804416087,152.048134478245,152.048134478245)" rx="2" ry="2" />
<text  x="631.63" y="161.5" >Parloop_Cells_wrap_form0_cell_in..</text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (11,956 us, 0.09%)</title><rect x="131.6" y="87" width="1.1" height="15.0" fill="rgb(124.617329633861,124.617329633861,151.538837993651)" rx="2" ry="2" />
<text  x="134.56" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (2,012 us, 0.02%)</title><rect x="562.0" y="231" width="0.2" height="15.0" fill="rgb(134.218654604703,161.871381808537,134.218654604703)" rx="2" ry="2" />
<text  x="565.00" y="241.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (1,718 us, 0.01%)</title><rect x="560.7" y="183" width="0.2" height="15.0" fill="rgb(131.77015926865,151.199670921502,151.199670921502)" rx="2" ry="2" />
<text  x="563.73" y="193.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (7,262 us, 0.06%)</title><rect x="130.9" y="119" width="0.7" height="15.0" fill="rgb(155.392433113079,155.392433113079,145.363329701842)" rx="2" ry="2" />
<text  x="133.90" y="129.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (7,262 us, 0.06%)</title><rect x="130.9" y="135" width="0.7" height="15.0" fill="rgb(153.177930235927,121.03079847544,121.03079847544)" rx="2" ry="2" />
<text  x="133.90" y="145.5" ></text>
</g>
<g >
<title>ParLoopExecute (1,267,849 us, 9.86%)</title><rect x="14.5" y="103" width="116.4" height="15.0" fill="rgb(143.812531200809,160.309587944054,143.812531200809)" rx="2" ry="2" />
<text  x="17.52" y="113.5" >ParLoopExecute</text>
</g>
<g >
<title>firedrake.functionspace.MixedFunctionSpace (1,718 us, 0.01%)</title><rect x="560.7" y="167" width="0.2" height="15.0" fill="rgb(137.160596572716,161.392461023046,137.160596572716)" rx="2" ry="2" />
<text  x="563.73" y="177.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (11,956 us, 0.09%)</title><rect x="131.6" y="71" width="1.1" height="15.0" fill="rgb(133.871972206671,151.744585386915,151.744585386915)" rx="2" ry="2" />
<text  x="134.56" y="81.5" ></text>
</g>
<g >
<title>PCApply (970,245 us, 7.55%)</title><rect x="470.1" y="135" width="89.1" height="15.0" fill="rgb(138.372905567938,138.372905567938,154.201207529278)" rx="2" ry="2" />
<text  x="473.10" y="145.5" >PCApply</text>
</g>
<g >
<title>ParLoopExecute (688,309 us, 5.35%)</title><rect x="565.2" y="167" width="63.1" height="15.0" fill="rgb(147.21079937716,130.352673403972,147.21079937716)" rx="2" ry="2" />
<text  x="568.16" y="177.5" >ParLoo..</text>
</g>
<g >
<title>CreateFunctionSpace (6,601 us, 0.05%)</title><rect x="560.7" y="151" width="0.6" height="15.0" fill="rgb(147.966799159623,147.966799159623,109.377565158172)" rx="2" ry="2" />
<text  x="563.73" y="161.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_pyop2_kernel_uniform_extrusion (1,267,849 us, 9.86%)</title><rect x="14.5" y="119" width="116.4" height="15.0" fill="rgb(153.610405697484,124.346443680711,124.346443680711)" rx="2" ry="2" />
<text  x="17.52" y="129.5" >Parloop_Cells..</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (897,714 us, 6.98%)</title><rect x="470.6" y="231" width="82.4" height="15.0" fill="rgb(156.321959927339,145.1350261096,145.1350261096)" rx="2" ry="2" />
<text  x="473.61" y="241.5" >pyop2.gl..</text>
</g>
<g >
<title>firedrake.assemble.allocate_matrix (8,509 us, 0.07%)</title><rect x="469.3" y="87" width="0.8" height="15.0" fill="rgb(150.311732608801,159.251578412521,150.311732608801)" rx="2" ry="2" />
<text  x="472.32" y="97.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalProblem.__init__ (12,149 us, 0.09%)</title><rect x="468.1" y="87" width="1.1" height="15.0" fill="rgb(136.40997567981,161.514655121891,136.40997567981)" rx="2" ry="2" />
<text  x="471.06" y="97.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (5,916 us, 0.05%)</title><rect x="1189.5" y="151" width="0.5" height="15.0" fill="rgb(130.3513117223,130.3513117223,152.64864097851)" rx="2" ry="2" />
<text  x="1192.46" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (7,262 us, 0.06%)</title><rect x="130.9" y="151" width="0.7" height="15.0" fill="rgb(131.198330437525,131.198330437525,152.812580084682)" rx="2" ry="2" />
<text  x="133.90" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (1,718 us, 0.01%)</title><rect x="560.7" y="215" width="0.2" height="15.0" fill="rgb(149.076285233462,149.076285233462,114.754305362162)" rx="2" ry="2" />
<text  x="563.73" y="225.5" ></text>
</g>
<g >
<title>CreateMesh (3,226 us, 0.03%)</title><rect x="132.7" y="71" width="0.3" height="15.0" fill="rgb(151.986026039187,151.986026039187,128.855356959139)" rx="2" ry="2" />
<text  x="135.66" y="81.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.action (11,625 us, 0.09%)</title><rect x="467.0" y="87" width="1.1" height="15.0" fill="rgb(134.457489480093,134.457489480093,153.443385060663)" rx="2" ry="2" />
<text  x="469.99" y="97.5" ></text>
</g>
</g>
</svg>
