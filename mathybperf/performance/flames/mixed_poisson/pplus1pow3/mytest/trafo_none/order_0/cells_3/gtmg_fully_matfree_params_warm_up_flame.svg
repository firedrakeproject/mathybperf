<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="299" onload="init(evt)" viewBox="0 0 1200 299" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:13px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:18px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 13 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (1 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="299.0" fill="url(#background)"  />
<text id="title" x="600.00" y="26" >Firedrake example</text>
<text id="details" x="10.00" y="281" > </text>
<text id="unzoom" x="10.00" y="26" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="26" >Search</text>
<text id="ignorecase" x="1174.00" y="26" >ic</text>
<text id="matched" x="1090.00" y="281" > </text>
<g id="frames">
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (702,826 us, 5.82%)</title><rect x="512.6" y="199" width="68.7" height="15.0" fill="rgb(126.552743809874,163.119320775137,126.552743809874)" rx="2" ry="2" />
<text  x="515.57" y="209.5" >pyop2...</text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (1,930 us, 0.02%)</title><rect x="509.2" y="247" width="0.2" height="15.0" fill="rgb(153.991854977388,153.991854977388,138.575912582727)" rx="2" ry="2" />
<text  x="512.17" y="257.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (1,716 us, 0.01%)</title><rect x="507.8" y="231" width="0.2" height="15.0" fill="rgb(147.363622678425,147.363622678425,155.941346324856)" rx="2" ry="2" />
<text  x="510.84" y="241.5" ></text>
</g>
<g >
<title>firedrake.functionspace.MixedFunctionSpace (2,238 us, 0.02%)</title><rect x="399.4" y="71" width="0.2" height="15.0" fill="rgb(138.020195709819,152.820050739583,152.820050739583)" rx="2" ry="2" />
<text  x="402.36" y="81.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (1,716 us, 0.01%)</title><rect x="507.8" y="199" width="0.2" height="15.0" fill="rgb(108.950875979943,145.283560439244,145.283560439244)" rx="2" ry="2" />
<text  x="510.84" y="209.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (4,452 us, 0.04%)</title><rect x="508.9" y="199" width="0.5" height="15.0" fill="rgb(135.508158150214,161.661462626709,135.508158150214)" rx="2" ry="2" />
<text  x="511.92" y="209.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (1,194,700 us, 9.90%)</title><rect x="14.3" y="135" width="116.7" height="15.0" fill="rgb(148.94890805503,148.94890805503,114.137015958991)" rx="2" ry="2" />
<text  x="17.26" y="145.5" >pyop2.global_..</text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (9,020 us, 0.07%)</title><rect x="508.5" y="167" width="0.9" height="15.0" fill="rgb(112.343532494839,112.343532494839,149.16326435384)" rx="2" ry="2" />
<text  x="511.48" y="177.5" ></text>
</g>
<g >
<title>Log_Event_form1_cell_integral_otherwise (1,536 us, 0.01%)</title><rect x="854.3" y="167" width="0.2" height="15.0" fill="rgb(136.915053801552,152.533532467069,152.533532467069)" rx="2" ry="2" />
<text  x="857.32" y="177.5" ></text>
</g>
<g >
<title>firedrake.mesh.make_mesh_from_coordinates (1,324 us, 0.01%)</title><rect x="132.0" y="87" width="0.1" height="15.0" fill="rgb(156.435175573399,146.003012729396,146.003012729396)" rx="2" ry="2" />
<text  x="135.01" y="97.5" ></text>
</g>
<g >
<title>ParLoopExecute (1,194,700 us, 9.90%)</title><rect x="14.3" y="103" width="116.7" height="15.0" fill="rgb(133.892644781052,151.749944943236,151.749944943236)" rx="2" ry="2" />
<text  x="17.26" y="113.5" >ParLoopExecute</text>
</g>
<g >
<title>firedrake.utility_meshes.RectangleMesh (2,277 us, 0.02%)</title><rect x="400.4" y="87" width="0.2" height="15.0" fill="rgb(143.821803041317,121.668370293375,143.821803041317)" rx="2" ry="2" />
<text  x="403.37" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (6,917 us, 0.06%)</title><rect x="131.0" y="135" width="0.7" height="15.0" fill="rgb(132.32136016903,162.180243693414,132.32136016903)" rx="2" ry="2" />
<text  x="134.04" y="145.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (1,930 us, 0.02%)</title><rect x="509.2" y="215" width="0.2" height="15.0" fill="rgb(114.173537856494,114.173537856494,149.517458939967)" rx="2" ry="2" />
<text  x="512.17" y="225.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (20,536 us, 0.17%)</title><rect x="132.3" y="87" width="2.0" height="15.0" fill="rgb(132.99088433491,162.07125138734,132.99088433491)" rx="2" ry="2" />
<text  x="135.28" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (1,716 us, 0.01%)</title><rect x="507.8" y="215" width="0.2" height="15.0" fill="rgb(144.588698968402,144.588698968402,155.404264316465)" rx="2" ry="2" />
<text  x="510.84" y="225.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (2,762,056 us, 22.88%)</title><rect x="583.3" y="167" width="270.0" height="15.0" fill="rgb(134.620765441527,161.805921904868,134.620765441527)" rx="2" ry="2" />
<text  x="586.34" y="177.5" >pyop2.global_kernel.GlobalKernel...</text>
</g>
<g >
<title>SCForwardElim (1,043,132 us, 8.64%)</title><rect x="404.3" y="151" width="102.0" height="15.0" fill="rgb(130.988506297411,150.997020151181,150.997020151181)" rx="2" ry="2" />
<text  x="407.32" y="161.5" >SCForwardElim</text>
</g>
<g >
<title>firedrake.__init__ (2,709,585 us, 22.45%)</title><rect x="134.5" y="71" width="264.9" height="15.0" fill="rgb(156.105565405297,143.476001440607,143.476001440607)" rx="2" ry="2" />
<text  x="137.51" y="81.5" >firedrake.__init__</text>
</g>
<g >
<title>Parloop_Cells_wrap_form1_cell_integral_otherwise (2,343,889 us, 19.42%)</title><rect x="853.3" y="151" width="229.1" height="15.0" fill="rgb(147.511714864524,147.511714864524,155.970009328618)" rx="2" ry="2" />
<text  x="856.33" y="161.5" >Parloop_Cells_wrap_form1_ce..</text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (8,077 us, 0.07%)</title><rect x="399.6" y="119" width="0.8" height="15.0" fill="rgb(143.139405305403,160.41916657819,143.139405305403)" rx="2" ry="2" />
<text  x="402.58" y="129.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (946,230 us, 7.84%)</title><rect x="404.9" y="215" width="92.5" height="15.0" fill="rgb(152.894293625843,118.856251131464,118.856251131464)" rx="2" ry="2" />
<text  x="407.88" y="225.5" >Parloop_Ce..</text>
</g>
<g >
<title>PCSetUp (767,159 us, 6.35%)</title><rect x="506.3" y="119" width="75.0" height="15.0" fill="rgb(143.659094667477,143.659094667477,155.224340903383)" rx="2" ry="2" />
<text  x="509.28" y="129.5" >PCSetUp</text>
</g>
<g >
<title>CreateFunctionSpace (8,077 us, 0.07%)</title><rect x="399.6" y="87" width="0.8" height="15.0" fill="rgb(120.010804806644,148.150949394315,148.150949394315)" rx="2" ry="2" />
<text  x="402.58" y="97.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.solve (8,037,835 us, 66.58%)</title><rect x="404.3" y="87" width="785.7" height="15.0" fill="rgb(148.582659567489,159.533055419246,148.582659567489)" rx="2" ry="2" />
<text  x="407.32" y="97.5" >firedrake.variational_solver.NonlinearVariationalSolver.solve</text>
</g>
<g >
<title>firedrake.function.Function.__init__ (1,378 us, 0.01%)</title><rect x="509.4" y="151" width="0.1" height="15.0" fill="rgb(129.353410184482,162.663398342061,129.353410184482)" rx="2" ry="2" />
<text  x="512.36" y="161.5" ></text>
</g>
<g >
<title>firedrake.mesh.ExtrudedMeshTopology.__init__ (3,015 us, 0.02%)</title><rect x="131.7" y="87" width="0.3" height="15.0" fill="rgb(152.671521823072,152.671521823072,132.177374988734)" rx="2" ry="2" />
<text  x="134.71" y="97.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (6,541 us, 0.05%)</title><rect x="507.8" y="151" width="0.7" height="15.0" fill="rgb(140.396858229695,112.891949213594,140.396858229695)" rx="2" ry="2" />
<text  x="510.84" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (20,536 us, 0.17%)</title><rect x="132.3" y="103" width="2.0" height="15.0" fill="rgb(153.090387155718,120.359634860505,120.359634860505)" rx="2" ry="2" />
<text  x="135.28" y="113.5" ></text>
</g>
<g >
<title>CreateExtMesh (1,249,512 us, 10.35%)</title><rect x="10.0" y="71" width="122.1" height="15.0" fill="rgb(156.407681064855,145.792221497224,145.792221497224)" rx="2" ry="2" />
<text  x="13.00" y="81.5" >CreateExtMesh</text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (4,825 us, 0.04%)</title><rect x="508.0" y="183" width="0.5" height="15.0" fill="rgb(146.707139450038,129.062044840723,146.707139450038)" rx="2" ry="2" />
<text  x="511.00" y="193.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (1,930 us, 0.02%)</title><rect x="509.2" y="231" width="0.2" height="15.0" fill="rgb(144.789755168336,160.150504972596,144.789755168336)" rx="2" ry="2" />
<text  x="512.17" y="241.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (6,917 us, 0.06%)</title><rect x="131.0" y="103" width="0.7" height="15.0" fill="rgb(137.017286784346,161.415790523479,137.017286784346)" rx="2" ry="2" />
<text  x="134.04" y="113.5" ></text>
</g>
<g >
<title>firedrake.utility_meshes.SquareMesh (2,277 us, 0.02%)</title><rect x="400.4" y="71" width="0.2" height="15.0" fill="rgb(149.741117735376,149.741117735376,117.97618594836)" rx="2" ry="2" />
<text  x="403.37" y="81.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (2,332,251 us, 19.32%)</title><rect x="854.5" y="167" width="227.9" height="15.0" fill="rgb(156.697640938989,148.015247198915,148.015247198915)" rx="2" ry="2" />
<text  x="857.47" y="177.5" >pyop2.global_kernel.GlobalK..</text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (3,278 us, 0.03%)</title><rect x="404.0" y="119" width="0.3" height="15.0" fill="rgb(123.899134926818,163.551303616565,123.899134926818)" rx="2" ry="2" />
<text  x="407.00" y="129.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.action (17,237 us, 0.14%)</title><rect x="400.6" y="87" width="1.7" height="15.0" fill="rgb(106.042664754073,144.529579751056,144.529579751056)" rx="2" ry="2" />
<text  x="403.59" y="97.5" ></text>
</g>
<g >
<title>HybridRHS (91,164 us, 0.76%)</title><rect x="497.4" y="167" width="8.9" height="15.0" fill="rgb(155.151493040566,136.161446644341,136.161446644341)" rx="2" ry="2" />
<text  x="500.37" y="177.5" ></text>
</g>
<g >
<title>firedrake.interpolation.make_interpolator (25,780 us, 0.21%)</title><rect x="509.5" y="151" width="2.5" height="15.0" fill="rgb(150.838602760966,139.648919574975,150.838602760966)" rx="2" ry="2" />
<text  x="512.49" y="161.5" ></text>
</g>
<g >
<title>SNESFunctionEval (6,227,544 us, 51.59%)</title><rect x="581.3" y="119" width="608.7" height="15.0" fill="rgb(145.305464398476,125.470252521094,145.305464398476)" rx="2" ry="2" />
<text  x="584.27" y="129.5" >SNESFunctionEval</text>
</g>
<g >
<title>firedrake.assemble.allocate_matrix (7,765 us, 0.06%)</title><rect x="403.6" y="87" width="0.7" height="15.0" fill="rgb(132.993218293374,93.92012187677,132.993218293374)" rx="2" ry="2" />
<text  x="406.56" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (8,077 us, 0.07%)</title><rect x="399.6" y="103" width="0.8" height="15.0" fill="rgb(132.229425732694,151.318740004772,151.318740004772)" rx="2" ry="2" />
<text  x="402.58" y="113.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (6,917 us, 0.06%)</title><rect x="131.0" y="151" width="0.7" height="15.0" fill="rgb(135.834961386379,101.202088552595,135.834961386379)" rx="2" ry="2" />
<text  x="134.04" y="161.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (1,716 us, 0.01%)</title><rect x="507.8" y="183" width="0.2" height="15.0" fill="rgb(153.935549671077,153.935549671077,138.303048405988)" rx="2" ry="2" />
<text  x="510.84" y="193.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.derivative (1,549 us, 0.01%)</title><rect x="403.2" y="103" width="0.2" height="15.0" fill="rgb(147.292444049547,130.561887876964,147.292444049547)" rx="2" ry="2" />
<text  x="406.25" y="113.5" ></text>
</g>
<g >
<title>firedrake.extrusion_utils.make_extruded_coords (1,238,256 us, 10.26%)</title><rect x="10.0" y="87" width="121.0" height="15.0" fill="rgb(156.228754978188,144.420454832777,144.420454832777)" rx="2" ry="2" />
<text  x="13.00" y="97.5" >firedrake.ext..</text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalProblem.__init__ (11,496 us, 0.10%)</title><rect x="402.3" y="87" width="1.1" height="15.0" fill="rgb(146.753187164066,159.830876508175,146.753187164066)" rx="2" ry="2" />
<text  x="405.28" y="97.5" ></text>
</g>
<g >
<title>HybridBreak (951,968 us, 7.89%)</title><rect x="404.3" y="167" width="93.1" height="15.0" fill="rgb(136.878283450783,136.878283450783,153.911925829184)" rx="2" ry="2" />
<text  x="407.32" y="177.5" >HybridBreak</text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (20,536 us, 0.17%)</title><rect x="132.3" y="119" width="2.0" height="15.0" fill="rgb(154.973871167873,154.973871167873,143.334914121232)" rx="2" ry="2" />
<text  x="135.28" y="129.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (702,826 us, 5.82%)</title><rect x="512.6" y="183" width="68.7" height="15.0" fill="rgb(152.377872613329,114.897023368859,114.897023368859)" rx="2" ry="2" />
<text  x="515.57" y="193.5" >Parloo..</text>
</g>
<g >
<title>firedrake.functionspace.MixedFunctionSpace (1,716 us, 0.01%)</title><rect x="507.8" y="167" width="0.2" height="15.0" fill="rgb(154.23375590351,129.125461926908,129.125461926908)" rx="2" ry="2" />
<text  x="510.84" y="177.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (6,917 us, 0.06%)</title><rect x="131.0" y="119" width="0.7" height="15.0" fill="rgb(131.16318193308,151.042306427095,151.042306427095)" rx="2" ry="2" />
<text  x="134.04" y="129.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (4,290 us, 0.04%)</title><rect x="1189.6" y="167" width="0.4" height="15.0" fill="rgb(139.13137567114,109.649150157296,139.13137567114)" rx="2" ry="2" />
<text  x="1192.58" y="177.5" ></text>
</g>
<g >
<title>firedrake.functionspace.VectorFunctionSpace (8,077 us, 0.07%)</title><rect x="399.6" y="71" width="0.8" height="15.0" fill="rgb(146.946751763204,155.13434304972,155.13434304972)" rx="2" ry="2" />
<text  x="402.58" y="81.5" ></text>
</g>
<g >
<title>firedrake.parloops.par_loop (951,968 us, 7.89%)</title><rect x="404.3" y="183" width="93.1" height="15.0" fill="rgb(141.645128159946,160.662420997218,141.645128159946)" rx="2" ry="2" />
<text  x="407.32" y="193.5" >firedrake...</text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (4,825 us, 0.04%)</title><rect x="508.0" y="199" width="0.5" height="15.0" fill="rgb(112.825364302633,146.288057411794,146.288057411794)" rx="2" ry="2" />
<text  x="511.00" y="209.5" ></text>
</g>
<g >
<title>CreateMesh (2,254 us, 0.02%)</title><rect x="134.3" y="71" width="0.2" height="15.0" fill="rgb(138.203781185162,161.222640272183,138.203781185162)" rx="2" ry="2" />
<text  x="137.29" y="81.5" ></text>
</g>
<g >
<title>all (12,071,912 us, 100%)</title><rect x="10.0" y="39" width="1180.0" height="15.0" fill="rgb(129.283995745359,150.555110008056,150.555110008056)" rx="2" ry="2" />
<text  x="13.00" y="49.5" ></text>
</g>
<g >
<title>firedrake.matrix_free.operators.ImplicitMatrixContext.__init__ (7,765 us, 0.06%)</title><rect x="403.6" y="103" width="0.7" height="15.0" fill="rgb(153.881507167276,153.881507167276,138.041150118336)" rx="2" ry="2" />
<text  x="406.56" y="113.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (1,715 us, 0.01%)</title><rect x="1189.8" y="183" width="0.2" height="15.0" fill="rgb(120.644129215089,148.315144611319,148.315144611319)" rx="2" ry="2" />
<text  x="1192.83" y="193.5" ></text>
</g>
<g >
<title>perfsolve (8,037,835 us, 66.58%)</title><rect x="404.3" y="71" width="785.7" height="15.0" fill="rgb(122.555296183319,148.810632343823,148.810632343823)" rx="2" ry="2" />
<text  x="407.32" y="81.5" >perfsolve</text>
</g>
<g >
<title>ParLoopExecute (946,230 us, 7.84%)</title><rect x="404.9" y="199" width="92.5" height="15.0" fill="rgb(150.483584394583,159.223602540417,150.483584394583)" rx="2" ry="2" />
<text  x="407.88" y="209.5" >ParLoopExe..</text>
</g>
<g >
<title>SNESSolve (8,037,835 us, 66.58%)</title><rect x="404.3" y="103" width="785.7" height="15.0" fill="rgb(153.003952187664,119.696966772093,119.696966772093)" rx="2" ry="2" />
<text  x="407.32" y="113.5" >SNESSolve</text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.__init__ (9,413 us, 0.08%)</title><rect x="403.4" y="71" width="0.9" height="15.0" fill="rgb(154.675606790816,154.675606790816,141.889479063187)" rx="2" ry="2" />
<text  x="406.40" y="81.5" ></text>
</g>
<g >
<title>KSPSolve (1,043,132 us, 8.64%)</title><rect x="404.3" y="119" width="102.0" height="15.0" fill="rgb(107.525946162078,144.914134190168,144.914134190168)" rx="2" ry="2" />
<text  x="407.32" y="129.5" >KSPSolve</text>
</g>
<g >
<title>ParLoopExecute (5,123,848 us, 42.44%)</title><rect x="581.6" y="135" width="500.8" height="15.0" fill="rgb(154.899140597564,134.226744581323,134.226744581323)" rx="2" ry="2" />
<text  x="584.59" y="145.5" >ParLoopExecute</text>
</g>
<g >
<title>PCApply (1,043,132 us, 8.64%)</title><rect x="404.3" y="135" width="102.0" height="15.0" fill="rgb(148.362510854314,148.362510854314,111.295244909369)" rx="2" ry="2" />
<text  x="407.32" y="145.5" >PCApply</text>
</g>
<g >
<title>firedrake.mesh.MeshTopology._facets (2,716 us, 0.02%)</title><rect x="400.1" y="151" width="0.3" height="15.0" fill="rgb(155.380059077372,137.913786259855,137.913786259855)" rx="2" ry="2" />
<text  x="403.10" y="161.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (8,130 us, 0.07%)</title><rect x="1189.2" y="151" width="0.8" height="15.0" fill="rgb(109.577678387842,109.577678387842,148.627937752485)" rx="2" ry="2" />
<text  x="1192.21" y="161.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (9,020 us, 0.07%)</title><rect x="508.5" y="151" width="0.9" height="15.0" fill="rgb(156.38946537369,145.652567864959,145.652567864959)" rx="2" ry="2" />
<text  x="511.48" y="161.5" ></text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (1,100,408 us, 9.12%)</title><rect x="1082.4" y="135" width="107.6" height="15.0" fill="rgb(129.624136398236,150.643294621765,150.643294621765)" rx="2" ry="2" />
<text  x="1085.44" y="145.5" >firedrake.ts..</text>
</g>
<g >
<title>Parloop_Cells_wrap_pyop2_kernel_uniform_extrusion (1,194,700 us, 9.90%)</title><rect x="14.3" y="119" width="116.7" height="15.0" fill="rgb(139.287868397101,139.287868397101,154.378297109116)" rx="2" ry="2" />
<text  x="17.26" y="129.5" >Parloop_Cells..</text>
</g>
<g >
<title>HybridInit (767,159 us, 6.35%)</title><rect x="506.3" y="135" width="75.0" height="15.0" fill="rgb(155.766344289268,140.875306217718,140.875306217718)" rx="2" ry="2" />
<text  x="509.28" y="145.5" >HybridI..</text>
</g>
<g >
<title>firedrake.ufl_expr.action (4,487 us, 0.04%)</title><rect x="403.6" y="119" width="0.4" height="15.0" fill="rgb(151.890321490834,151.890321490834,128.39155799404)" rx="2" ry="2" />
<text  x="406.56" y="129.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (4,825 us, 0.04%)</title><rect x="508.0" y="167" width="0.5" height="15.0" fill="rgb(149.150000873203,149.150000873203,115.111542693216)" rx="2" ry="2" />
<text  x="511.00" y="177.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (6,598 us, 0.05%)</title><rect x="508.7" y="183" width="0.7" height="15.0" fill="rgb(116.511881611216,147.243821158463,147.243821158463)" rx="2" ry="2" />
<text  x="511.71" y="193.5" ></text>
</g>
<g >
<title>ParLoopExecute (702,826 us, 5.82%)</title><rect x="512.6" y="167" width="68.7" height="15.0" fill="rgb(111.961258911557,146.064030088182,146.064030088182)" rx="2" ry="2" />
<text  x="515.57" y="177.5" >ParLoo..</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (946,230 us, 7.84%)</title><rect x="404.9" y="231" width="92.5" height="15.0" fill="rgb(154.967851113669,154.967851113669,143.305740012394)" rx="2" ry="2" />
<text  x="407.88" y="241.5" >pyop2.glob..</text>
</g>
<g >
<title>firedrake.slate.slac.optimise.optimise (7,673 us, 0.06%)</title><rect x="505.5" y="183" width="0.8" height="15.0" fill="rgb(137.548350180928,137.548350180928,154.041616164051)" rx="2" ry="2" />
<text  x="508.53" y="193.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (9,947 us, 0.08%)</title><rect x="402.3" y="103" width="0.9" height="15.0" fill="rgb(142.814717483348,142.814717483348,155.060913061293)" rx="2" ry="2" />
<text  x="405.28" y="113.5" ></text>
</g>
<g >
<title>firedrake (12,071,912 us, 100.00%)</title><rect x="10.0" y="55" width="1180.0" height="15.0" fill="rgb(134.123099523013,161.886937286951,134.123099523013)" rx="2" ry="2" />
<text  x="13.00" y="65.5" >firedrake</text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (8,077 us, 0.07%)</title><rect x="399.6" y="135" width="0.8" height="15.0" fill="rgb(131.499903705049,151.129604664272,151.129604664272)" rx="2" ry="2" />
<text  x="402.58" y="145.5" ></text>
</g>
<g >
<title>firedrake.functionspace.VectorFunctionSpace (6,917 us, 0.06%)</title><rect x="131.0" y="87" width="0.7" height="15.0" fill="rgb(136.134995819907,161.559419285131,136.134995819907)" rx="2" ry="2" />
<text  x="134.04" y="97.5" ></text>
</g>
<g >
<title>firedrake.parloops.par_loop (708,570 us, 5.87%)</title><rect x="512.0" y="151" width="69.3" height="15.0" fill="rgb(115.619756034831,147.012529342364,147.012529342364)" rx="2" ry="2" />
<text  x="515.01" y="161.5" >firedra..</text>
</g>
<g >
<title>firedrake.variational_solver.LinearVariationalProblem.__init__ (28,733 us, 0.24%)</title><rect x="400.6" y="71" width="2.8" height="15.0" fill="rgb(149.886559384361,149.886559384361,118.681018554981)" rx="2" ry="2" />
<text  x="403.59" y="81.5" ></text>
</g>
<g >
<title>Log_Event_form0_cell_integral_otherwise (8,195 us, 0.07%)</title><rect x="582.5" y="167" width="0.8" height="15.0" fill="rgb(146.123284993752,154.920851665047,154.920851665047)" rx="2" ry="2" />
<text  x="585.54" y="177.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (1,715 us, 0.01%)</title><rect x="1189.8" y="199" width="0.2" height="15.0" fill="rgb(153.452068284021,123.132523510827,123.132523510827)" rx="2" ry="2" />
<text  x="1192.83" y="209.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (21,988 us, 0.18%)</title><rect x="132.1" y="71" width="2.2" height="15.0" fill="rgb(140.628740831583,160.82787939951,140.628740831583)" rx="2" ry="2" />
<text  x="135.14" y="81.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_form0_cell_integral_otherwise (2,779,959 us, 23.03%)</title><rect x="581.6" y="151" width="271.7" height="15.0" fill="rgb(136.919248812365,161.431750193336,136.919248812365)" rx="2" ry="2" />
<text  x="584.59" y="161.5" >Parloop_Cells_wrap_form0_cell_int..</text>
</g>
</g>
</svg>
