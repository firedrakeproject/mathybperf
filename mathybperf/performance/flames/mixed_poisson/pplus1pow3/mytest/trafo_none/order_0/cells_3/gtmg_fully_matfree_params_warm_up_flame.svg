<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="299" onload="init(evt)" viewBox="0 0 1200 299" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:13px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:18px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 13 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (1 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="299.0" fill="url(#background)"  />
<text id="title" x="600.00" y="26" >Firedrake example</text>
<text id="details" x="10.00" y="281" > </text>
<text id="unzoom" x="10.00" y="26" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="26" >Search</text>
<text id="ignorecase" x="1174.00" y="26" >ic</text>
<text id="matched" x="1090.00" y="281" > </text>
<g id="frames">
<g >
<title>firedrake.ufl_expr.action (11,124 us, 0.10%)</title><rect x="449.8" y="87" width="1.3" height="15.0" fill="rgb(114.503482165708,146.723125005924,146.723125005924)" rx="2" ry="2" />
<text  x="452.83" y="97.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (9,428 us, 0.09%)</title><rect x="451.1" y="103" width="1.0" height="15.0" fill="rgb(152.175585469823,152.175585469823,129.773991122989)" rx="2" ry="2" />
<text  x="454.05" y="113.5" ></text>
</g>
<g >
<title>firedrake.functionspace.VectorFunctionSpace (6,875 us, 0.06%)</title><rect x="448.8" y="71" width="0.7" height="15.0" fill="rgb(150.329707259228,150.329707259228,120.828581333181)" rx="2" ry="2" />
<text  x="451.78" y="81.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (1,941 us, 0.02%)</title><rect x="456.3" y="215" width="0.2" height="15.0" fill="rgb(155.039455838608,155.039455838608,143.652747525562)" rx="2" ry="2" />
<text  x="459.32" y="225.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (6,875 us, 0.06%)</title><rect x="448.8" y="87" width="0.7" height="15.0" fill="rgb(133.578617237227,151.668530394837,151.668530394837)" rx="2" ry="2" />
<text  x="451.78" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (1,941 us, 0.02%)</title><rect x="456.3" y="231" width="0.2" height="15.0" fill="rgb(155.596357701563,139.572075711985,139.572075711985)" rx="2" ry="2" />
<text  x="459.32" y="241.5" ></text>
</g>
<g >
<title>firedrake.mesh.MeshTopology._facets (2,953 us, 0.03%)</title><rect x="449.2" y="151" width="0.3" height="15.0" fill="rgb(136.329529060083,136.329529060083,153.805715301952)" rx="2" ry="2" />
<text  x="452.20" y="161.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (1,672 us, 0.02%)</title><rect x="454.8" y="183" width="0.2" height="15.0" fill="rgb(132.97389238679,162.074017518429,132.97389238679)" rx="2" ry="2" />
<text  x="457.80" y="193.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (688,912 us, 6.39%)</title><rect x="460.0" y="183" width="75.4" height="15.0" fill="rgb(153.322893825139,122.142185992729,122.142185992729)" rx="2" ry="2" />
<text  x="463.01" y="193.5" >Parloop..</text>
</g>
<g >
<title>firedrake.matrix_free.operators.ImplicitMatrixContext.__init__ (7,309 us, 0.07%)</title><rect x="452.4" y="103" width="0.8" height="15.0" fill="rgb(149.026411271233,159.460816769799,149.026411271233)" rx="2" ry="2" />
<text  x="455.39" y="113.5" ></text>
</g>
<g >
<title>HybridInit (751,249 us, 6.96%)</title><rect x="453.2" y="135" width="82.2" height="15.0" fill="rgb(117.920534785823,117.920534785823,150.242684152095)" rx="2" ry="2" />
<text  x="456.19" y="145.5" >HybridInit</text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.solve (6,735,557 us, 62.44%)</title><rect x="453.2" y="87" width="736.8" height="15.0" fill="rgb(132.260681215178,162.190121662645,132.260681215178)" rx="2" ry="2" />
<text  x="456.19" y="97.5" >firedrake.variational_solver.NonlinearVariationalSolver.solve</text>
</g>
<g >
<title>perfsolve (6,735,557 us, 62.44%)</title><rect x="453.2" y="71" width="736.8" height="15.0" fill="rgb(131.871713469005,162.253441993418,131.871713469005)" rx="2" ry="2" />
<text  x="456.19" y="81.5" >perfsolve</text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (6,975 us, 0.06%)</title><rect x="143.6" y="135" width="0.7" height="15.0" fill="rgb(138.312982971358,107.552018864105,138.312982971358)" rx="2" ry="2" />
<text  x="146.56" y="145.5" ></text>
</g>
<g >
<title>PetscBarrier (1,381 us, 0.01%)</title><rect x="145.8" y="71" width="0.2" height="15.0" fill="rgb(142.229602328669,153.911378381507,153.911378381507)" rx="2" ry="2" />
<text  x="148.84" y="81.5" ></text>
</g>
<g >
<title>firedrake.utility_meshes.RectangleMesh (2,801 us, 0.03%)</title><rect x="449.5" y="87" width="0.3" height="15.0" fill="rgb(125.340118767508,125.340118767508,151.678732664679)" rx="2" ry="2" />
<text  x="452.53" y="97.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (1,182,156 us, 10.96%)</title><rect x="14.2" y="135" width="129.4" height="15.0" fill="rgb(152.69588688401,152.69588688401,132.295451822511)" rx="2" ry="2" />
<text  x="17.24" y="145.5" >pyop2.global_k..</text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (6,875 us, 0.06%)</title><rect x="448.8" y="119" width="0.7" height="15.0" fill="rgb(125.281829669891,125.281829669891,151.66745090385)" rx="2" ry="2" />
<text  x="451.78" y="129.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (4,524 us, 0.04%)</title><rect x="456.0" y="199" width="0.5" height="15.0" fill="rgb(144.552284880644,154.513555339426,154.513555339426)" rx="2" ry="2" />
<text  x="459.03" y="209.5" ></text>
</g>
<g >
<title>firedrake.utility_meshes.SquareMesh (2,801 us, 0.03%)</title><rect x="449.5" y="71" width="0.3" height="15.0" fill="rgb(146.85990630123,159.813503625381,146.85990630123)" rx="2" ry="2" />
<text  x="452.53" y="81.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (1,174 us, 0.01%)</title><rect x="1189.9" y="183" width="0.1" height="15.0" fill="rgb(125.098667740208,163.356030832989,125.098667740208)" rx="2" ry="2" />
<text  x="1192.87" y="193.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.derivative (1,185 us, 0.01%)</title><rect x="452.1" y="103" width="0.1" height="15.0" fill="rgb(130.258246272505,162.516099444011,130.258246272505)" rx="2" ry="2" />
<text  x="455.08" y="113.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (6,975 us, 0.06%)</title><rect x="143.6" y="119" width="0.7" height="15.0" fill="rgb(147.393522740361,159.726635832964,147.393522740361)" rx="2" ry="2" />
<text  x="146.56" y="129.5" ></text>
</g>
<g >
<title>SNESSolve (6,735,557 us, 62.44%)</title><rect x="453.2" y="103" width="736.8" height="15.0" fill="rgb(124.296679428459,163.486587069786,124.296679428459)" rx="2" ry="2" />
<text  x="456.19" y="113.5" >SNESSolve</text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (11,552 us, 0.11%)</title><rect x="144.3" y="87" width="1.3" height="15.0" fill="rgb(149.243014882312,159.425555716833,149.243014882312)" rx="2" ry="2" />
<text  x="147.32" y="97.5" ></text>
</g>
<g >
<title>firedrake.extrusion_utils.make_extruded_coords (1,218,346 us, 11.29%)</title><rect x="10.3" y="87" width="133.3" height="15.0" fill="rgb(154.476587333287,130.987169555204,130.987169555204)" rx="2" ry="2" />
<text  x="13.28" y="97.5" >firedrake.extru..</text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (5,577 us, 0.05%)</title><rect x="1189.4" y="151" width="0.6" height="15.0" fill="rgb(118.891210148186,118.891210148186,150.430556802875)" rx="2" ry="2" />
<text  x="1192.39" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspace.make_scalar_element (1,190 us, 0.01%)</title><rect x="456.2" y="215" width="0.1" height="15.0" fill="rgb(112.004831344884,146.07532664497,146.07532664497)" rx="2" ry="2" />
<text  x="459.18" y="225.5" ></text>
</g>
<g >
<title>ParLoopExecute (688,912 us, 6.39%)</title><rect x="460.0" y="167" width="75.4" height="15.0" fill="rgb(153.625783815377,124.464342584561,124.464342584561)" rx="2" ry="2" />
<text  x="463.01" y="177.5" >ParLoop..</text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (1,941 us, 0.02%)</title><rect x="456.3" y="247" width="0.2" height="15.0" fill="rgb(132.841501013001,162.095569602535,132.841501013001)" rx="2" ry="2" />
<text  x="459.32" y="257.5" ></text>
</g>
<g >
<title>firedrake.assemble.allocate_matrix (7,309 us, 0.07%)</title><rect x="452.4" y="87" width="0.8" height="15.0" fill="rgb(152.164702259592,113.262717323539,113.262717323539)" rx="2" ry="2" />
<text  x="455.39" y="97.5" ></text>
</g>
<g >
<title>Log_Event_form1_cell_integral_otherwise (1,520 us, 0.01%)</title><rect x="839.7" y="167" width="0.2" height="15.0" fill="rgb(123.292356611421,123.292356611421,151.282391602211)" rx="2" ry="2" />
<text  x="842.72" y="177.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (3,326 us, 0.03%)</title><rect x="452.8" y="119" width="0.4" height="15.0" fill="rgb(130.520104619331,150.875582679086,150.875582679086)" rx="2" ry="2" />
<text  x="455.82" y="129.5" ></text>
</g>
<g >
<title>firedrake.interpolation.make_interpolator (25,132 us, 0.23%)</title><rect x="456.7" y="151" width="2.7" height="15.0" fill="rgb(122.087240406982,122.087240406982,151.049143304577)" rx="2" ry="2" />
<text  x="459.67" y="161.5" ></text>
</g>
<g >
<title>all (10,786,948 us, 100%)</title><rect x="10.0" y="39" width="1180.0" height="15.0" fill="rgb(134.582864277868,97.9935897120362,134.582864277868)" rx="2" ry="2" />
<text  x="13.00" y="49.5" ></text>
</g>
<g >
<title>firedrake.__init__ (2,766,667 us, 25.65%)</title><rect x="146.0" y="71" width="302.6" height="15.0" fill="rgb(141.764556714008,116.396676579645,141.764556714008)" rx="2" ry="2" />
<text  x="148.99" y="81.5" >firedrake.__init__</text>
</g>
<g >
<title>Log_Event_form0_cell_integral_otherwise (8,074 us, 0.07%)</title><rect x="536.9" y="167" width="0.9" height="15.0" fill="rgb(140.180391249829,160.900866540725,140.180391249829)" rx="2" ry="2" />
<text  x="539.94" y="177.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (6,875 us, 0.06%)</title><rect x="448.8" y="103" width="0.7" height="15.0" fill="rgb(113.335067227068,113.335067227068,149.355174302013)" rx="2" ry="2" />
<text  x="451.78" y="113.5" ></text>
</g>
<g >
<title>PCSetUp (751,249 us, 6.96%)</title><rect x="453.2" y="119" width="82.2" height="15.0" fill="rgb(119.332866122244,147.975187513174,147.975187513174)" rx="2" ry="2" />
<text  x="456.19" y="129.5" >PCSetUp</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (688,912 us, 6.39%)</title><rect x="460.0" y="199" width="75.4" height="15.0" fill="rgb(141.744563279746,141.744563279746,154.853786441241)" rx="2" ry="2" />
<text  x="463.01" y="209.5" >pyop2.g..</text>
</g>
<g >
<title>CreateFunctionSpace (6,533 us, 0.06%)</title><rect x="454.8" y="151" width="0.7" height="15.0" fill="rgb(110.757442899063,145.751929640498,145.751929640498)" rx="2" ry="2" />
<text  x="457.80" y="161.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.LinearVariationalProblem.__init__ (21,737 us, 0.20%)</title><rect x="449.8" y="71" width="2.4" height="15.0" fill="rgb(122.096997100213,148.691814063018,148.691814063018)" rx="2" ry="2" />
<text  x="452.83" y="81.5" ></text>
</g>
<g >
<title>firedrake (10,786,948 us, 100.00%)</title><rect x="10.0" y="55" width="1180.0" height="15.0" fill="rgb(149.24901698051,159.42457863108,149.24901698051)" rx="2" ry="2" />
<text  x="13.00" y="65.5" >firedrake</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (2,223,342 us, 20.61%)</title><rect x="839.9" y="167" width="243.2" height="15.0" fill="rgb(143.948139396888,154.356925028823,154.356925028823)" rx="2" ry="2" />
<text  x="842.89" y="177.5" >pyop2.global_kernel.GlobalKer..</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (2,749,902 us, 25.49%)</title><rect x="537.8" y="167" width="300.8" height="15.0" fill="rgb(154.44576105363,130.750834744495,130.750834744495)" rx="2" ry="2" />
<text  x="540.83" y="177.5" >pyop2.global_kernel.GlobalKernel.comp..</text>
</g>
<g >
<title>ParLoopExecute (1,182,156 us, 10.96%)</title><rect x="14.2" y="103" width="129.4" height="15.0" fill="rgb(153.962498799299,153.962498799299,138.433648027371)" rx="2" ry="2" />
<text  x="17.24" y="113.5" >ParLoopExecute</text>
</g>
<g >
<title>ParLoopExecute (5,003,779 us, 46.39%)</title><rect x="535.7" y="135" width="547.4" height="15.0" fill="rgb(117.818813603836,117.818813603836,150.222996181388)" rx="2" ry="2" />
<text  x="538.73" y="145.5" >ParLoopExecute</text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (6,753 us, 0.06%)</title><rect x="455.8" y="183" width="0.7" height="15.0" fill="rgb(155.203830137395,136.562697720025,136.562697720025)" rx="2" ry="2" />
<text  x="458.79" y="193.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (1,672 us, 0.02%)</title><rect x="454.8" y="231" width="0.2" height="15.0" fill="rgb(120.327453735256,148.233043560992,148.233043560992)" rx="2" ry="2" />
<text  x="457.80" y="241.5" ></text>
</g>
<g >
<title>CreateExtMesh (1,227,910 us, 11.38%)</title><rect x="10.0" y="71" width="134.3" height="15.0" fill="rgb(114.805783823955,146.801499509914,146.801499509914)" rx="2" ry="2" />
<text  x="13.00" y="81.5" >CreateExtMesh</text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (1,672 us, 0.02%)</title><rect x="454.8" y="215" width="0.2" height="15.0" fill="rgb(153.218029612518,153.218029612518,134.825835814509)" rx="2" ry="2" />
<text  x="457.80" y="225.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (11,552 us, 0.11%)</title><rect x="144.3" y="103" width="1.3" height="15.0" fill="rgb(143.682470873404,160.330760555492,143.682470873404)" rx="2" ry="2" />
<text  x="147.32" y="113.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalProblem.__init__ (10,613 us, 0.10%)</title><rect x="451.1" y="87" width="1.1" height="15.0" fill="rgb(131.044811111315,151.011617695526,151.011617695526)" rx="2" ry="2" />
<text  x="454.05" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (4,861 us, 0.05%)</title><rect x="455.0" y="167" width="0.5" height="15.0" fill="rgb(150.3481055265,159.245657239872,150.3481055265)" rx="2" ry="2" />
<text  x="457.98" y="177.5" ></text>
</g>
<g >
<title>CreateMesh (2,295 us, 0.02%)</title><rect x="145.6" y="71" width="0.2" height="15.0" fill="rgb(155.093038336937,135.713293916518,135.713293916518)" rx="2" ry="2" />
<text  x="148.59" y="81.5" ></text>
</g>
<g >
<title>SNESFunctionEval (5,984,308 us, 55.48%)</title><rect x="535.4" y="119" width="654.6" height="15.0" fill="rgb(142.86381985007,142.86381985007,155.070416745175)" rx="2" ry="2" />
<text  x="538.37" y="129.5" >SNESFunctionEval</text>
</g>
<g >
<title>CreateFunctionSpace (1,174 us, 0.01%)</title><rect x="1189.9" y="199" width="0.1" height="15.0" fill="rgb(122.123035506658,122.123035506658,151.056071388385)" rx="2" ry="2" />
<text  x="1192.87" y="209.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_form0_cell_integral_otherwise (2,767,819 us, 25.66%)</title><rect x="535.9" y="151" width="302.7" height="15.0" fill="rgb(111.785754748462,146.018529008861,146.018529008861)" rx="2" ry="2" />
<text  x="538.87" y="161.5" >Parloop_Cells_wrap_form0_cell_integra..</text>
</g>
<g >
<title>firedrake.parloops.par_loop (694,325 us, 6.44%)</title><rect x="459.4" y="151" width="76.0" height="15.0" fill="rgb(148.861271684225,148.861271684225,113.712316623554)" rx="2" ry="2" />
<text  x="462.41" y="161.5" >firedra..</text>
</g>
<g >
<title>firedrake.functionspace.MixedFunctionSpace (1,250 us, 0.01%)</title><rect x="448.6" y="71" width="0.2" height="15.0" fill="rgb(155.131144155688,155.131144155688,144.097083216025)" rx="2" ry="2" />
<text  x="451.64" y="81.5" ></text>
</g>
<g >
<title>firedrake.functionspace.VectorFunctionSpace (6,975 us, 0.06%)</title><rect x="143.6" y="87" width="0.7" height="15.0" fill="rgb(127.813983376171,127.813983376171,152.157545169581)" rx="2" ry="2" />
<text  x="146.56" y="97.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (3,146 us, 0.03%)</title><rect x="1189.7" y="167" width="0.3" height="15.0" fill="rgb(154.68665609756,132.597696747962,132.597696747962)" rx="2" ry="2" />
<text  x="1192.66" y="177.5" ></text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (977,184 us, 9.06%)</title><rect x="1083.1" y="135" width="106.9" height="15.0" fill="rgb(127.366843709714,127.366843709714,152.071002008332)" rx="2" ry="2" />
<text  x="1086.10" y="145.5" >firedrake.t..</text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (9,249 us, 0.09%)</title><rect x="455.5" y="151" width="1.0" height="15.0" fill="rgb(150.714171069229,150.714171069229,122.691752104726)" rx="2" ry="2" />
<text  x="458.52" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (6,975 us, 0.06%)</title><rect x="143.6" y="151" width="0.7" height="15.0" fill="rgb(148.388871204432,148.388871204432,111.422991221476)" rx="2" ry="2" />
<text  x="146.56" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (11,552 us, 0.11%)</title><rect x="144.3" y="119" width="1.3" height="15.0" fill="rgb(127.028774404748,163.041827422483,127.028774404748)" rx="2" ry="2" />
<text  x="147.32" y="129.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (4,861 us, 0.05%)</title><rect x="455.0" y="199" width="0.5" height="15.0" fill="rgb(108.767330310554,145.235974524958,145.235974524958)" rx="2" ry="2" />
<text  x="457.98" y="209.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.__init__ (8,923 us, 0.08%)</title><rect x="452.2" y="71" width="1.0" height="15.0" fill="rgb(155.154650273999,155.154650273999,144.21099748169)" rx="2" ry="2" />
<text  x="455.21" y="81.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (6,875 us, 0.06%)</title><rect x="448.8" y="135" width="0.7" height="15.0" fill="rgb(147.854319084505,147.854319084505,108.832469409527)" rx="2" ry="2" />
<text  x="451.78" y="145.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_form1_cell_integral_otherwise (2,234,749 us, 20.72%)</title><rect x="838.6" y="151" width="244.5" height="15.0" fill="rgb(133.320229575113,94.7580882862272,133.320229575113)" rx="2" ry="2" />
<text  x="841.64" y="161.5" >Parloop_Cells_wrap_form1_cell..</text>
</g>
<g >
<title>firedrake.ufl_expr.action (3,983 us, 0.04%)</title><rect x="452.4" y="119" width="0.4" height="15.0" fill="rgb(154.892344410607,134.174640481321,134.174640481321)" rx="2" ry="2" />
<text  x="455.39" y="129.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (4,861 us, 0.05%)</title><rect x="455.0" y="183" width="0.5" height="15.0" fill="rgb(136.072529126514,101.810855886692,136.072529126514)" rx="2" ry="2" />
<text  x="457.98" y="193.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_pyop2_kernel_uniform_extrusion (1,182,156 us, 10.96%)</title><rect x="14.2" y="119" width="129.4" height="15.0" fill="rgb(148.589788099165,159.531894960601,148.589788099165)" rx="2" ry="2" />
<text  x="17.24" y="129.5" >Parloop_Cells_..</text>
</g>
<g >
<title>CreateFunctionSpace (11,552 us, 0.11%)</title><rect x="144.3" y="71" width="1.3" height="15.0" fill="rgb(155.081586214137,135.625494308387,135.625494308387)" rx="2" ry="2" />
<text  x="147.32" y="81.5" ></text>
</g>
<g >
<title>firedrake.functionspace.MixedFunctionSpace (1,672 us, 0.02%)</title><rect x="454.8" y="167" width="0.2" height="15.0" fill="rgb(148.482524602408,148.482524602408,111.876849996287)" rx="2" ry="2" />
<text  x="457.80" y="177.5" ></text>
</g>
<g >
<title>firedrake.function.Function.__init__ (1,261 us, 0.01%)</title><rect x="456.5" y="151" width="0.2" height="15.0" fill="rgb(154.393600619284,130.35093808118,130.35093808118)" rx="2" ry="2" />
<text  x="459.53" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (1,672 us, 0.02%)</title><rect x="454.8" y="199" width="0.2" height="15.0" fill="rgb(139.72456331753,153.261923823063,153.261923823063)" rx="2" ry="2" />
<text  x="457.80" y="209.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (9,249 us, 0.09%)</title><rect x="455.5" y="167" width="1.0" height="15.0" fill="rgb(140.494864675061,113.143090729844,140.494864675061)" rx="2" ry="2" />
<text  x="458.52" y="177.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (6,975 us, 0.06%)</title><rect x="143.6" y="103" width="0.7" height="15.0" fill="rgb(141.615265769418,141.615265769418,154.828761116662)" rx="2" ry="2" />
<text  x="146.56" y="113.5" ></text>
</g>
</g>
</svg>
