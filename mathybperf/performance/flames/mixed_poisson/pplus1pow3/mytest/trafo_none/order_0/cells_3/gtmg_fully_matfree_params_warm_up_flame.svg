<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="299" onload="init(evt)" viewBox="0 0 1200 299" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:13px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:18px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 13 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (1 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="299.0" fill="url(#background)"  />
<text id="title" x="600.00" y="26" >Firedrake example</text>
<text id="details" x="10.00" y="281" > </text>
<text id="unzoom" x="10.00" y="26" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="26" >Search</text>
<text id="ignorecase" x="1174.00" y="26" >ic</text>
<text id="matched" x="1090.00" y="281" > </text>
<g id="frames">
<g >
<title>firedrake.matrix_free.operators.ImplicitMatrixContext.__init__ (8,108 us, 0.06%)</title><rect x="417.3" y="103" width="0.7" height="15.0" fill="rgb(150.383185504256,150.383185504256,121.087745136012)" rx="2" ry="2" />
<text  x="420.31" y="113.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (1,226,269 us, 9.34%)</title><rect x="13.8" y="135" width="110.2" height="15.0" fill="rgb(147.711091733843,147.711091733843,156.008598400099)" rx="2" ry="2" />
<text  x="16.84" y="145.5" >pyop2.global..</text>
</g>
<g >
<title>firedrake.functionspace.VectorFunctionSpace (7,537 us, 0.06%)</title><rect x="124.0" y="87" width="0.7" height="15.0" fill="rgb(123.965967312958,123.965967312958,151.412767867024)" rx="2" ry="2" />
<text  x="127.04" y="97.5" ></text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (996,679 us, 7.59%)</title><rect x="1100.4" y="135" width="89.6" height="15.0" fill="rgb(142.440268911585,142.440268911585,154.988439144178)" rx="2" ry="2" />
<text  x="1103.44" y="145.5" >firedrake..</text>
</g>
<g >
<title>ParLoopExecute (4,996,729 us, 38.05%)</title><rect x="651.4" y="135" width="449.0" height="15.0" fill="rgb(154.617038732095,154.617038732095,141.605649240152)" rx="2" ry="2" />
<text  x="654.44" y="145.5" >ParLoopExecute</text>
</g>
<g >
<title>firedrake.variational_solver.LinearVariationalProblem.__init__ (28,270 us, 0.22%)</title><rect x="414.6" y="71" width="2.6" height="15.0" fill="rgb(154.097388244995,154.097388244995,139.087343033437)" rx="2" ry="2" />
<text  x="417.63" y="81.5" ></text>
</g>
<g >
<title>KSPSolve (1,866,916 us, 14.22%)</title><rect x="418.0" y="119" width="167.8" height="15.0" fill="rgb(140.8385094976,140.8385094976,154.678421193084)" rx="2" ry="2" />
<text  x="421.04" y="129.5" >KSPSolve</text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (880,414 us, 6.70%)</title><rect x="418.6" y="215" width="79.1" height="15.0" fill="rgb(154.57737926124,154.57737926124,141.413453342931)" rx="2" ry="2" />
<text  x="421.57" y="225.5" >Parloop_..</text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (1,728 us, 0.01%)</title><rect x="1189.8" y="183" width="0.2" height="15.0" fill="rgb(136.893954016582,152.528062152447,152.528062152447)" rx="2" ry="2" />
<text  x="1192.84" y="193.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (2,759,040 us, 21.01%)</title><rect x="653.2" y="167" width="247.9" height="15.0" fill="rgb(143.736976261597,160.321887585321,143.736976261597)" rx="2" ry="2" />
<text  x="656.20" y="177.5" >pyop2.global_kernel.GlobalKern..</text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (3,261 us, 0.02%)</title><rect x="417.7" y="119" width="0.3" height="15.0" fill="rgb(137.400781433419,137.400781433419,154.013054470984)" rx="2" ry="2" />
<text  x="420.75" y="129.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (1,635 us, 0.01%)</title><rect x="587.4" y="183" width="0.1" height="15.0" fill="rgb(130.140894408673,150.777268920767,150.777268920767)" rx="2" ry="2" />
<text  x="590.40" y="193.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (2,206,846 us, 16.81%)</title><rect x="902.1" y="167" width="198.3" height="15.0" fill="rgb(137.988647374487,161.257662055316,137.988647374487)" rx="2" ry="2" />
<text  x="905.13" y="177.5" >pyop2.global_kernel.Glo..</text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (13,307 us, 0.10%)</title><rect x="124.7" y="119" width="1.2" height="15.0" fill="rgb(155.188206988625,155.188206988625,144.373618483335)" rx="2" ry="2" />
<text  x="127.71" y="129.5" ></text>
</g>
<g >
<title>perfsolve (8,590,725 us, 65.42%)</title><rect x="418.0" y="71" width="772.0" height="15.0" fill="rgb(118.959741540979,147.878451510624,147.878451510624)" rx="2" ry="2" />
<text  x="421.04" y="81.5" >perfsolve</text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (6,247 us, 0.05%)</title><rect x="1189.4" y="151" width="0.6" height="15.0" fill="rgb(104.613377240828,144.159023729104,144.159023729104)" rx="2" ry="2" />
<text  x="1192.44" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (6,249 us, 0.05%)</title><rect x="413.9" y="119" width="0.5" height="15.0" fill="rgb(154.754851973927,154.754851973927,142.27351341211)" rx="2" ry="2" />
<text  x="416.87" y="129.5" ></text>
</g>
<g >
<title>firedrake.parloops.par_loop (668,830 us, 5.09%)</title><rect x="591.0" y="151" width="60.1" height="15.0" fill="rgb(153.096099563751,153.096099563751,134.234944039717)" rx="2" ry="2" />
<text  x="594.04" y="161.5" >fired..</text>
</g>
<g >
<title>CreateMesh (2,163 us, 0.02%)</title><rect x="125.9" y="71" width="0.2" height="15.0" fill="rgb(153.295596521999,153.295596521999,135.201736991228)" rx="2" ry="2" />
<text  x="128.91" y="81.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (1,870 us, 0.01%)</title><rect x="588.6" y="231" width="0.2" height="15.0" fill="rgb(142.901214206744,154.085499979526,154.085499979526)" rx="2" ry="2" />
<text  x="591.62" y="241.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (4,882 us, 0.04%)</title><rect x="587.5" y="183" width="0.5" height="15.0" fill="rgb(117.466687265965,117.466687265965,150.154842696638)" rx="2" ry="2" />
<text  x="590.54" y="193.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (6,517 us, 0.05%)</title><rect x="587.4" y="151" width="0.6" height="15.0" fill="rgb(154.031870558131,154.031870558131,138.769834243248)" rx="2" ry="2" />
<text  x="590.40" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (7,537 us, 0.06%)</title><rect x="124.0" y="119" width="0.7" height="15.0" fill="rgb(141.540660293311,115.822942001609,141.540660293311)" rx="2" ry="2" />
<text  x="127.04" y="129.5" ></text>
</g>
<g >
<title>firedrake.assemble.allocate_matrix (8,108 us, 0.06%)</title><rect x="417.3" y="87" width="0.7" height="15.0" fill="rgb(146.59415076995,159.856766153729,146.59415076995)" rx="2" ry="2" />
<text  x="420.31" y="97.5" ></text>
</g>
<g >
<title>firedrake.extrusion_utils.make_extruded_coords (1,265,888 us, 9.64%)</title><rect x="10.3" y="87" width="113.7" height="15.0" fill="rgb(143.457231283908,154.229652555087,154.229652555087)" rx="2" ry="2" />
<text  x="13.28" y="97.5" >firedrake.ex..</text>
</g>
<g >
<title>CreateFunctionSpace (6,249 us, 0.05%)</title><rect x="413.9" y="87" width="0.5" height="15.0" fill="rgb(136.469417370714,102.827882012456,136.469417370714)" rx="2" ry="2" />
<text  x="416.87" y="97.5" ></text>
</g>
<g >
<title>ParLoopExecute (1,226,269 us, 9.34%)</title><rect x="13.8" y="103" width="110.2" height="15.0" fill="rgb(113.447738348651,146.449413645947,146.449413645947)" rx="2" ry="2" />
<text  x="16.84" y="113.5" >ParLoopExecute</text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.__init__ (9,704 us, 0.07%)</title><rect x="417.2" y="71" width="0.8" height="15.0" fill="rgb(155.841826879592,141.454006076872,141.454006076872)" rx="2" ry="2" />
<text  x="420.17" y="81.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (3,810 us, 0.03%)</title><rect x="1189.7" y="167" width="0.3" height="15.0" fill="rgb(154.601045174294,131.941346336256,131.941346336256)" rx="2" ry="2" />
<text  x="1192.66" y="177.5" ></text>
</g>
<g >
<title>SNESFunctionEval (5,996,651 us, 45.67%)</title><rect x="651.1" y="119" width="538.9" height="15.0" fill="rgb(152.092679629672,112.710543827488,112.710543827488)" rx="2" ry="2" />
<text  x="654.14" y="129.5" >SNESFunctionEval</text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (8,946 us, 0.07%)</title><rect x="588.0" y="151" width="0.8" height="15.0" fill="rgb(143.944757635402,160.288062710516,143.944757635402)" rx="2" ry="2" />
<text  x="590.98" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (1,635 us, 0.01%)</title><rect x="587.4" y="199" width="0.1" height="15.0" fill="rgb(145.377849168847,145.377849168847,155.557003064938)" rx="2" ry="2" />
<text  x="590.40" y="209.5" ></text>
</g>
<g >
<title>all (13,131,613 us, 100%)</title><rect x="10.0" y="39" width="1180.0" height="15.0" fill="rgb(149.060733261117,149.060733261117,114.678938111566)" rx="2" ry="2" />
<text  x="13.00" y="49.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (1,635 us, 0.01%)</title><rect x="587.4" y="231" width="0.1" height="15.0" fill="rgb(119.614861675985,119.614861675985,150.5706183889)" rx="2" ry="2" />
<text  x="590.40" y="241.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (663,426 us, 5.05%)</title><rect x="591.5" y="199" width="59.6" height="15.0" fill="rgb(108.153443427995,145.076818666517,145.076818666517)" rx="2" ry="2" />
<text  x="594.53" y="209.5" >pyop2..</text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (6,543 us, 0.05%)</title><rect x="588.2" y="183" width="0.6" height="15.0" fill="rgb(155.627885156658,139.813786201046,139.813786201046)" rx="2" ry="2" />
<text  x="591.20" y="193.5" ></text>
</g>
<g >
<title>PCSetUp (727,158 us, 5.54%)</title><rect x="585.8" y="119" width="65.3" height="15.0" fill="rgb(147.985589139479,147.985589139479,109.468624291319)" rx="2" ry="2" />
<text  x="588.80" y="129.5" >PCSetUp</text>
</g>
<g >
<title>firedrake.functionspace.MixedFunctionSpace (1,440 us, 0.01%)</title><rect x="413.7" y="71" width="0.2" height="15.0" fill="rgb(152.003692610129,152.003692610129,128.940971879855)" rx="2" ry="2" />
<text  x="416.74" y="81.5" ></text>
</g>
<g >
<title>firedrake (13,131,613 us, 100.00%)</title><rect x="10.0" y="55" width="1180.0" height="15.0" fill="rgb(129.213519308386,150.536838339211,150.536838339211)" rx="2" ry="2" />
<text  x="13.00" y="65.5" >firedrake</text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalProblem.__init__ (15,502 us, 0.12%)</title><rect x="415.8" y="87" width="1.4" height="15.0" fill="rgb(153.637370710306,153.637370710306,136.858027288406)" rx="2" ry="2" />
<text  x="418.78" y="97.5" ></text>
</g>
<g >
<title>ParLoopExecute (663,426 us, 5.05%)</title><rect x="591.5" y="167" width="59.6" height="15.0" fill="rgb(141.391390099709,115.440437130505,141.391390099709)" rx="2" ry="2" />
<text  x="594.53" y="177.5" >ParLo..</text>
</g>
<g >
<title>firedrake.ufl_expr.derivative (1,756 us, 0.01%)</title><rect x="417.0" y="103" width="0.2" height="15.0" fill="rgb(154.78066801566,154.78066801566,142.398621922044)" rx="2" ry="2" />
<text  x="420.01" y="113.5" ></text>
</g>
<g >
<title>Log_Event_form0_cell_integral_otherwise (8,532 us, 0.06%)</title><rect x="652.4" y="167" width="0.8" height="15.0" fill="rgb(146.60436676078,146.60436676078,155.794393566602)" rx="2" ry="2" />
<text  x="655.43" y="177.5" ></text>
</g>
<g >
<title>firedrake.functionspace.MixedFunctionSpace (1,635 us, 0.01%)</title><rect x="587.4" y="167" width="0.1" height="15.0" fill="rgb(155.284619814259,137.182085242651,137.182085242651)" rx="2" ry="2" />
<text  x="590.40" y="177.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_form1_cell_integral_otherwise (2,218,067 us, 16.89%)</title><rect x="901.1" y="151" width="199.3" height="15.0" fill="rgb(138.444793690016,107.889783830666,138.444793690016)" rx="2" ry="2" />
<text  x="904.12" y="161.5" >Parloop_Cells_wrap_form..</text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (13,307 us, 0.10%)</title><rect x="124.7" y="103" width="1.2" height="15.0" fill="rgb(150.040969001387,150.040969001387,119.429311314414)" rx="2" ry="2" />
<text  x="127.71" y="113.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (4,882 us, 0.04%)</title><rect x="587.5" y="199" width="0.5" height="15.0" fill="rgb(149.380519718181,149.380519718181,116.228672480414)" rx="2" ry="2" />
<text  x="590.54" y="209.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (13,307 us, 0.10%)</title><rect x="124.7" y="87" width="1.2" height="15.0" fill="rgb(151.104830992413,151.104830992413,124.584950194003)" rx="2" ry="2" />
<text  x="127.71" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (1,635 us, 0.01%)</title><rect x="587.4" y="215" width="0.1" height="15.0" fill="rgb(126.203933603699,126.203933603699,151.845922632974)" rx="2" ry="2" />
<text  x="590.40" y="225.5" ></text>
</g>
<g >
<title>HybridRHS (980,582 us, 7.47%)</title><rect x="497.7" y="167" width="88.1" height="15.0" fill="rgb(137.670361032415,152.729352860256,152.729352860256)" rx="2" ry="2" />
<text  x="500.69" y="177.5" >HybridRHS</text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (8,946 us, 0.07%)</title><rect x="588.0" y="167" width="0.8" height="15.0" fill="rgb(156.19118214455,144.13239644155,144.13239644155)" rx="2" ry="2" />
<text  x="590.98" y="177.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (1,870 us, 0.01%)</title><rect x="588.6" y="215" width="0.2" height="15.0" fill="rgb(117.019483980331,117.019483980331,150.068287221999)" rx="2" ry="2" />
<text  x="591.62" y="225.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_pyop2_kernel_uniform_extrusion (1,226,269 us, 9.34%)</title><rect x="13.8" y="119" width="110.2" height="15.0" fill="rgb(131.937298033144,162.242765436465,131.937298033144)" rx="2" ry="2" />
<text  x="16.84" y="129.5" >Parloop_Cell..</text>
</g>
<g >
<title>Log_Event_form1_cell_integral_otherwise (1,499 us, 0.01%)</title><rect x="902.0" y="167" width="0.1" height="15.0" fill="rgb(156.64761607528,147.63172324381,147.63172324381)" rx="2" ry="2" />
<text  x="905.00" y="177.5" ></text>
</g>
<g >
<title>firedrake.slate.slac.optimise.optimise (9,213 us, 0.07%)</title><rect x="516.3" y="183" width="0.8" height="15.0" fill="rgb(119.288954976437,119.288954976437,150.507539672859)" rx="2" ry="2" />
<text  x="519.29" y="193.5" ></text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (764,335 us, 5.82%)</title><rect x="517.1" y="183" width="68.7" height="15.0" fill="rgb(149.042910773806,149.042910773806,114.592567596136)" rx="2" ry="2" />
<text  x="520.12" y="193.5" >firedr..</text>
</g>
<g >
<title>firedrake.parloops.par_loop (886,334 us, 6.75%)</title><rect x="418.0" y="183" width="79.7" height="15.0" fill="rgb(147.860921946776,159.65054759006,147.860921946776)" rx="2" ry="2" />
<text  x="421.04" y="193.5" >firedrak..</text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (6,249 us, 0.05%)</title><rect x="413.9" y="135" width="0.5" height="15.0" fill="rgb(152.181399204248,113.390727232566,113.390727232566)" rx="2" ry="2" />
<text  x="416.87" y="145.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (4,413 us, 0.03%)</title><rect x="588.4" y="199" width="0.4" height="15.0" fill="rgb(142.820073587794,154.064463522761,154.064463522761)" rx="2" ry="2" />
<text  x="591.39" y="209.5" ></text>
</g>
<g >
<title>PCApply (1,866,916 us, 14.22%)</title><rect x="418.0" y="135" width="167.8" height="15.0" fill="rgb(151.950236558605,142.497481181424,151.950236558605)" rx="2" ry="2" />
<text  x="421.04" y="145.5" >PCApply</text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (663,426 us, 5.05%)</title><rect x="591.5" y="183" width="59.6" height="15.0" fill="rgb(133.951148218061,133.951148218061,153.345383526076)" rx="2" ry="2" />
<text  x="594.53" y="193.5" >Parlo..</text>
</g>
<g >
<title>firedrake.utility_meshes.RectangleMesh (2,227 us, 0.02%)</title><rect x="414.4" y="87" width="0.2" height="15.0" fill="rgb(156.087550168722,143.337884626868,143.337884626868)" rx="2" ry="2" />
<text  x="417.43" y="97.5" ></text>
</g>
<g >
<title>firedrake.utility_meshes.SquareMesh (2,227 us, 0.02%)</title><rect x="414.4" y="71" width="0.2" height="15.0" fill="rgb(124.635407376186,163.431445310853,124.635407376186)" rx="2" ry="2" />
<text  x="417.43" y="81.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (7,537 us, 0.06%)</title><rect x="124.0" y="135" width="0.7" height="15.0" fill="rgb(148.238681485618,148.238681485618,110.695148737993)" rx="2" ry="2" />
<text  x="127.04" y="145.5" ></text>
</g>
<g >
<title>CreateExtMesh (1,276,579 us, 9.72%)</title><rect x="10.0" y="71" width="114.7" height="15.0" fill="rgb(133.956644408054,133.956644408054,153.346447304785)" rx="2" ry="2" />
<text  x="13.00" y="81.5" >CreateExtMesh</text>
</g>
<g >
<title>firedrake.__init__ (3,200,949 us, 24.38%)</title><rect x="126.1" y="71" width="287.6" height="15.0" fill="rgb(151.231642724721,151.231642724721,125.199499358265)" rx="2" ry="2" />
<text  x="129.10" y="81.5" >firedrake.__init__</text>
</g>
<g >
<title>firedrake.interpolation.make_interpolator (25,122 us, 0.19%)</title><rect x="588.8" y="151" width="2.2" height="15.0" fill="rgb(131.243695710152,162.355677442533,131.243695710152)" rx="2" ry="2" />
<text  x="591.79" y="161.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (13,307 us, 0.10%)</title><rect x="124.7" y="71" width="1.2" height="15.0" fill="rgb(153.549975980291,123.883149182235,123.883149182235)" rx="2" ry="2" />
<text  x="127.71" y="81.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (7,537 us, 0.06%)</title><rect x="124.0" y="103" width="0.7" height="15.0" fill="rgb(145.957537484846,145.957537484846,155.669200803519)" rx="2" ry="2" />
<text  x="127.04" y="113.5" ></text>
</g>
<g >
<title>firedrake.functionspace.VectorFunctionSpace (6,249 us, 0.05%)</title><rect x="413.9" y="71" width="0.5" height="15.0" fill="rgb(147.44149789092,159.718825924734,147.44149789092)" rx="2" ry="2" />
<text  x="416.87" y="81.5" ></text>
</g>
<g >
<title>firedrake.mesh.MeshTopology._facets (2,769 us, 0.02%)</title><rect x="414.2" y="151" width="0.2" height="15.0" fill="rgb(109.094404984514,145.320771662652,145.320771662652)" rx="2" ry="2" />
<text  x="417.18" y="161.5" ></text>
</g>
<g >
<title>SCForwardElim (1,866,916 us, 14.22%)</title><rect x="418.0" y="151" width="167.8" height="15.0" fill="rgb(152.6540184576,152.6540184576,132.092550986829)" rx="2" ry="2" />
<text  x="421.04" y="161.5" >SCForwardElim</text>
</g>
<g >
<title>Parloop_Cells_wrap_form0_cell_integral_otherwise (2,777,245 us, 21.15%)</title><rect x="651.6" y="151" width="249.5" height="15.0" fill="rgb(116.216487252276,147.167237435775,147.167237435775)" rx="2" ry="2" />
<text  x="654.56" y="161.5" >Parloop_Cells_wrap_form0_cell_..</text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (13,746 us, 0.10%)</title><rect x="415.8" y="103" width="1.2" height="15.0" fill="rgb(111.62578218042,145.977054639368,145.977054639368)" rx="2" ry="2" />
<text  x="418.78" y="113.5" ></text>
</g>
<g >
<title>HybridInit (727,158 us, 5.54%)</title><rect x="585.8" y="135" width="65.3" height="15.0" fill="rgb(155.652515502577,155.652515502577,146.623728974026)" rx="2" ry="2" />
<text  x="588.80" y="145.5" >Hybrid..</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (880,414 us, 6.70%)</title><rect x="418.6" y="231" width="79.1" height="15.0" fill="rgb(131.628985112441,151.163070214337,151.163070214337)" rx="2" ry="2" />
<text  x="421.57" y="241.5" >pyop2.gl..</text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (6,249 us, 0.05%)</title><rect x="413.9" y="103" width="0.5" height="15.0" fill="rgb(133.249277900265,162.029187318562,133.249277900265)" rx="2" ry="2" />
<text  x="416.87" y="113.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.action (12,768 us, 0.10%)</title><rect x="414.6" y="87" width="1.2" height="15.0" fill="rgb(143.168725603045,143.168725603045,155.12943076188)" rx="2" ry="2" />
<text  x="417.63" y="97.5" ></text>
</g>
<g >
<title>SNESSolve (8,590,725 us, 65.42%)</title><rect x="418.0" y="103" width="772.0" height="15.0" fill="rgb(137.700375126129,161.304590095746,137.700375126129)" rx="2" ry="2" />
<text  x="421.04" y="113.5" >SNESSolve</text>
</g>
<g >
<title>HybridBreak (886,334 us, 6.75%)</title><rect x="418.0" y="167" width="79.7" height="15.0" fill="rgb(152.707899355387,117.427228391299,117.427228391299)" rx="2" ry="2" />
<text  x="421.04" y="177.5" >HybridBr..</text>
</g>
<g >
<title>firedrake.ufl_expr.action (4,847 us, 0.04%)</title><rect x="417.3" y="119" width="0.4" height="15.0" fill="rgb(156.444488038014,146.074408291443,146.074408291443)" rx="2" ry="2" />
<text  x="420.31" y="129.5" ></text>
</g>
<g >
<title>ParLoopExecute (880,414 us, 6.70%)</title><rect x="418.6" y="199" width="79.1" height="15.0" fill="rgb(147.255619940333,159.749085125992,147.255619940333)" rx="2" ry="2" />
<text  x="421.57" y="209.5" >ParLoopE..</text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (7,537 us, 0.06%)</title><rect x="124.0" y="151" width="0.7" height="15.0" fill="rgb(153.495282822883,153.495282822883,136.169447526279)" rx="2" ry="2" />
<text  x="127.04" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (1,870 us, 0.01%)</title><rect x="588.6" y="247" width="0.2" height="15.0" fill="rgb(105.412341051479,144.366162494828,144.366162494828)" rx="2" ry="2" />
<text  x="591.62" y="257.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (4,882 us, 0.04%)</title><rect x="587.5" y="167" width="0.5" height="15.0" fill="rgb(147.58681082575,147.58681082575,155.98454403079)" rx="2" ry="2" />
<text  x="590.54" y="177.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.solve (8,590,725 us, 65.42%)</title><rect x="418.0" y="87" width="772.0" height="15.0" fill="rgb(147.801818054008,147.801818054008,156.026158333034)" rx="2" ry="2" />
<text  x="421.04" y="97.5" >firedrake.variational_solver.NonlinearVariationalSolver.solve</text>
</g>
</g>
</svg>
