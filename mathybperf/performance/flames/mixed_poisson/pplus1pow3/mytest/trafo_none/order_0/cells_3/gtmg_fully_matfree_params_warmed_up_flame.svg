<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="299" onload="init(evt)" viewBox="0 0 1200 299" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:13px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:18px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 13 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (1 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="299.0" fill="url(#background)"  />
<text id="title" x="600.00" y="26" >Firedrake example</text>
<text id="details" x="10.00" y="281" > </text>
<text id="unzoom" x="10.00" y="26" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="26" >Search</text>
<text id="ignorecase" x="1174.00" y="26" >ic</text>
<text id="matched" x="1090.00" y="281" > </text>
<g id="frames">
<g >
<title>CreateFunctionSpace (8,421 us, 0.24%)</title><rect x="1106.1" y="87" width="2.8" height="15.0" fill="rgb(154.066957521795,127.846674333759,127.846674333759)" rx="2" ry="2" />
<text  x="1109.07" y="97.5" ></text>
</g>
<g >
<title>firedrake.parloops.par_loop (6,703 us, 0.19%)</title><rect x="1119.8" y="183" width="2.2" height="15.0" fill="rgb(146.23651234704,159.91498636211,146.23651234704)" rx="2" ry="2" />
<text  x="1122.80" y="193.5" ></text>
</g>
<g >
<title>SNESSolve (212,837 us, 5.96%)</title><rect x="1119.6" y="103" width="70.4" height="15.0" fill="rgb(135.478575916163,161.666278339229,135.478575916163)" rx="2" ry="2" />
<text  x="1122.64" y="113.5" >SNESSolve</text>
</g>
<g >
<title>CreateMesh (653 us, 0.02%)</title><rect x="54.3" y="87" width="0.2" height="15.0" fill="rgb(152.932770821644,152.932770821644,133.443427827965)" rx="2" ry="2" />
<text  x="57.26" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (1,314 us, 0.04%)</title><rect x="1146.6" y="199" width="0.4" height="15.0" fill="rgb(151.294629788323,151.294629788323,125.504744358794)" rx="2" ry="2" />
<text  x="1149.57" y="209.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (1,314 us, 0.04%)</title><rect x="1146.6" y="215" width="0.4" height="15.0" fill="rgb(126.444484441382,163.136944393263,126.444484441382)" rx="2" ry="2" />
<text  x="1149.57" y="225.5" ></text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (43,859 us, 1.23%)</title><rect x="1175.5" y="135" width="14.5" height="15.0" fill="rgb(156.196518658673,144.173309716495,144.173309716495)" rx="2" ry="2" />
<text  x="1178.50" y="145.5" ></text>
</g>
<g >
<title>firedrake.functionspace.make_scalar_element (484 us, 0.01%)</title><rect x="49.0" y="87" width="0.1" height="15.0" fill="rgb(143.965557118293,160.284676748185,143.965557118293)" rx="2" ry="2" />
<text  x="51.98" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (6,810 us, 0.19%)</title><rect x="45.9" y="151" width="2.3" height="15.0" fill="rgb(147.554539934646,131.233508582529,147.554539934646)" rx="2" ry="2" />
<text  x="48.91" y="161.5" ></text>
</g>
<g >
<title>firedrake.assemble.allocate_matrix (6,619 us, 0.19%)</title><rect x="1117.4" y="87" width="2.2" height="15.0" fill="rgb(144.681099702568,144.681099702568,155.422148329529)" rx="2" ry="2" />
<text  x="1120.45" y="97.5" ></text>
</g>
<g >
<title>CreateExtMesh (117,317 us, 3.29%)</title><rect x="10.0" y="71" width="38.8" height="15.0" fill="rgb(154.038618643602,127.629409600945,127.629409600945)" rx="2" ry="2" />
<text  x="13.00" y="81.5" >Cre..</text>
</g>
<g >
<title>firedrake.ufl_expr.derivative (990 us, 0.03%)</title><rect x="1116.6" y="103" width="0.3" height="15.0" fill="rgb(132.085763675321,162.218596610994,132.085763675321)" rx="2" ry="2" />
<text  x="1119.59" y="113.5" ></text>
</g>
<g >
<title>Log_Event_form1_cell_integral_otherwise (1,386 us, 0.04%)</title><rect x="1174.6" y="167" width="0.5" height="15.0" fill="rgb(150.262925105072,159.259523820105,150.262925105072)" rx="2" ry="2" />
<text  x="1177.64" y="177.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (1,368 us, 0.04%)</title><rect x="1163.1" y="199" width="0.4" height="15.0" fill="rgb(117.213024943029,117.213024943029,150.105746763167)" rx="2" ry="2" />
<text  x="1166.06" y="209.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_pyop2_kernel_uniform_extrusion (71,424 us, 2.00%)</title><rect x="22.3" y="119" width="23.6" height="15.0" fill="rgb(152.811523313243,118.221678734863,118.221678734863)" rx="2" ry="2" />
<text  x="25.30" y="129.5" >P..</text>
</g>
<g >
<title>PCApply (66,907 us, 1.87%)</title><rect x="1119.6" y="135" width="22.2" height="15.0" fill="rgb(139.591919561258,153.227534701067,153.227534701067)" rx="2" ry="2" />
<text  x="1122.64" y="145.5" ></text>
</g>
<g >
<title>firedrake.__init__ (3,177,344 us, 89.02%)</title><rect x="55.3" y="71" width="1050.4" height="15.0" fill="rgb(154.313827316278,129.739342758128,129.739342758128)" rx="2" ry="2" />
<text  x="58.26" y="81.5" >firedrake.__init__</text>
</g>
<g >
<title>ParLoopExecute (71,933 us, 2.02%)</title><rect x="22.1" y="103" width="23.8" height="15.0" fill="rgb(135.703854202821,161.629605129773,135.703854202821)" rx="2" ry="2" />
<text  x="25.13" y="113.5" >P..</text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (1,368 us, 0.04%)</title><rect x="1163.1" y="183" width="0.4" height="15.0" fill="rgb(130.100884387726,150.766895952373,150.766895952373)" rx="2" ry="2" />
<text  x="1166.06" y="193.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (2,386 us, 0.07%)</title><rect x="1118.8" y="119" width="0.8" height="15.0" fill="rgb(139.625353119105,160.991221585262,139.625353119105)" rx="2" ry="2" />
<text  x="1121.85" y="129.5" ></text>
</g>
<g >
<title>firedrake.matrix_free.operators.ImplicitMatrixContext.__init__ (451 us, 0.01%)</title><rect x="1148.2" y="167" width="0.1" height="15.0" fill="rgb(141.893498745295,141.893498745295,154.88261266038)" rx="2" ry="2" />
<text  x="1151.15" y="177.5" ></text>
</g>
<g >
<title>firedrake.matrix_free.operators.ImplicitMatrixContext.__init__ (6,619 us, 0.19%)</title><rect x="1117.4" y="103" width="2.2" height="15.0" fill="rgb(156.236493960213,144.479787028302,144.479787028302)" rx="2" ry="2" />
<text  x="1120.45" y="113.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (5,356 us, 0.15%)</title><rect x="1188.2" y="151" width="1.8" height="15.0" fill="rgb(154.153157624837,128.507541790421,128.507541790421)" rx="2" ry="2" />
<text  x="1191.23" y="161.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (9,172 us, 0.26%)</title><rect x="1113.6" y="103" width="3.0" height="15.0" fill="rgb(149.135518292545,159.443055161679,149.135518292545)" rx="2" ry="2" />
<text  x="1116.56" y="113.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (4,378 us, 0.12%)</title><rect x="1149.5" y="199" width="1.4" height="15.0" fill="rgb(128.407341230623,128.407341230623,152.272388625282)" rx="2" ry="2" />
<text  x="1152.47" y="209.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (6,810 us, 0.19%)</title><rect x="45.9" y="103" width="2.3" height="15.0" fill="rgb(147.686557642099,147.686557642099,108.019471650171)" rx="2" ry="2" />
<text  x="48.91" y="113.5" ></text>
</g>
<g >
<title>perfsolve (212,837 us, 5.96%)</title><rect x="1119.6" y="71" width="70.4" height="15.0" fill="rgb(143.291658375725,120.309874587794,143.291658375725)" rx="2" ry="2" />
<text  x="1122.64" y="81.5" >perfsolve</text>
</g>
<g >
<title>SNESFunctionEval (80,111 us, 2.24%)</title><rect x="1163.5" y="119" width="26.5" height="15.0" fill="rgb(149.857598013156,149.857598013156,118.540667294527)" rx="2" ry="2" />
<text  x="1166.52" y="129.5" >S..</text>
</g>
<g >
<title>firedrake.functionspace.MixedFunctionSpace (2,757 us, 0.08%)</title><rect x="1146.1" y="167" width="0.9" height="15.0" fill="rgb(129.838472415024,129.838472415024,152.549381757747)" rx="2" ry="2" />
<text  x="1149.09" y="177.5" ></text>
</g>
<g >
<title>firedrake.utility_meshes.RectangleMesh (2,925 us, 0.08%)</title><rect x="1108.9" y="87" width="0.9" height="15.0" fill="rgb(152.056345722627,112.431983873472,112.431983873472)" rx="2" ry="2" />
<text  x="1111.85" y="97.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (1,825 us, 0.05%)</title><rect x="1146.4" y="183" width="0.6" height="15.0" fill="rgb(109.210569670506,109.210569670506,148.556884452356)" rx="2" ry="2" />
<text  x="1149.40" y="193.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.solve (212,837 us, 5.96%)</title><rect x="1119.6" y="87" width="70.4" height="15.0" fill="rgb(154.59830816586,131.92036260493,131.92036260493)" rx="2" ry="2" />
<text  x="1122.64" y="97.5" >firedra..</text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (1,314 us, 0.04%)</title><rect x="1146.6" y="231" width="0.4" height="15.0" fill="rgb(129.7270356968,162.602575584242,129.7270356968)" rx="2" ry="2" />
<text  x="1149.57" y="241.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (8,421 us, 0.24%)</title><rect x="1106.1" y="119" width="2.8" height="15.0" fill="rgb(125.961091390358,163.215636285291,125.961091390358)" rx="2" ry="2" />
<text  x="1109.07" y="129.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.action (4,233 us, 0.12%)</title><rect x="1117.4" y="119" width="1.4" height="15.0" fill="rgb(154.920778308827,154.920778308827,143.077617958163)" rx="2" ry="2" />
<text  x="1120.45" y="129.5" ></text>
</g>
<g >
<title>Log_Event_form0_cell_integral_otherwise (8,690 us, 0.24%)</title><rect x="1168.2" y="167" width="2.9" height="15.0" fill="rgb(143.560514572678,154.256429704028,154.256429704028)" rx="2" ry="2" />
<text  x="1171.21" y="177.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (1,424 us, 0.04%)</title><rect x="1121.5" y="215" width="0.5" height="15.0" fill="rgb(154.339166530174,129.933610064669,129.933610064669)" rx="2" ry="2" />
<text  x="1124.55" y="225.5" ></text>
</g>
<g >
<title>firedrake.mesh.ExtrudedMeshTopology.__init__ (862 us, 0.02%)</title><rect x="48.2" y="87" width="0.2" height="15.0" fill="rgb(138.884899680374,161.111760517148,138.884899680374)" rx="2" ry="2" />
<text  x="51.16" y="97.5" ></text>
</g>
<g >
<title>CreateMesh (652 us, 0.02%)</title><rect x="1109.3" y="119" width="0.2" height="15.0" fill="rgb(142.120682171519,117.309248064517,142.120682171519)" rx="2" ry="2" />
<text  x="1112.33" y="129.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.LinearVariationalProblem.__init__ (21,485 us, 0.60%)</title><rect x="1109.8" y="71" width="7.1" height="15.0" fill="rgb(140.060820349004,160.920331571092,140.060820349004)" rx="2" ry="2" />
<text  x="1112.82" y="81.5" ></text>
</g>
<g >
<title>firedrake.assemble.allocate_matrix (451 us, 0.01%)</title><rect x="1148.2" y="151" width="0.1" height="15.0" fill="rgb(152.669764895255,144.341272544092,152.669764895255)" rx="2" ry="2" />
<text  x="1151.15" y="161.5" ></text>
</g>
<g >
<title>firedrake.function.Function.__init__ (748 us, 0.02%)</title><rect x="1141.5" y="199" width="0.3" height="15.0" fill="rgb(146.431995689771,155.000887771422,155.000887771422)" rx="2" ry="2" />
<text  x="1144.51" y="209.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_form0_cell_integral_otherwise (20,429 us, 0.57%)</title><rect x="1164.9" y="151" width="6.7" height="15.0" fill="rgb(143.448941938263,160.368776893771,143.448941938263)" rx="2" ry="2" />
<text  x="1167.87" y="161.5" ></text>
</g>
<g >
<title>firedrake.function.Function.__init__ (999 us, 0.03%)</title><rect x="1151.1" y="151" width="0.4" height="15.0" fill="rgb(126.967034327602,163.051878132716,126.967034327602)" rx="2" ry="2" />
<text  x="1154.14" y="161.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (1,424 us, 0.04%)</title><rect x="1121.5" y="231" width="0.5" height="15.0" fill="rgb(112.05691438333,112.05691438333,149.107789880644)" rx="2" ry="2" />
<text  x="1124.55" y="241.5" ></text>
</g>
<g >
<title>CreateMesh (2,420 us, 0.07%)</title><rect x="54.0" y="71" width="0.8" height="15.0" fill="rgb(124.904198694006,149.419607068816,149.419607068816)" rx="2" ry="2" />
<text  x="57.00" y="81.5" ></text>
</g>
<g >
<title>HybridBreak (7,200 us, 0.20%)</title><rect x="1119.6" y="167" width="2.4" height="15.0" fill="rgb(135.217378500135,152.093394425961,152.093394425961)" rx="2" ry="2" />
<text  x="1122.64" y="177.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (3,478 us, 0.10%)</title><rect x="1147.0" y="183" width="1.2" height="15.0" fill="rgb(148.6852170233,148.6852170233,112.859128651379)" rx="2" ry="2" />
<text  x="1150.00" y="193.5" ></text>
</g>
<g >
<title>firedrake.mesh._Facets.__init__ (597 us, 0.02%)</title><rect x="48.0" y="167" width="0.2" height="15.0" fill="rgb(128.301592639556,162.834624454026,128.301592639556)" rx="2" ry="2" />
<text  x="50.96" y="177.5" ></text>
</g>
<g >
<title>ParLoopExecute (1,368 us, 0.04%)</title><rect x="1163.1" y="167" width="0.4" height="15.0" fill="rgb(152.076016965405,142.819793473851,152.076016965405)" rx="2" ry="2" />
<text  x="1166.06" y="177.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (1,073 us, 0.03%)</title><rect x="1189.6" y="183" width="0.4" height="15.0" fill="rgb(152.955251484546,119.323594714849,119.323594714849)" rx="2" ry="2" />
<text  x="1192.65" y="193.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (2,855 us, 0.08%)</title><rect x="1189.1" y="167" width="0.9" height="15.0" fill="rgb(107.453704222227,144.895404798355,144.895404798355)" rx="2" ry="2" />
<text  x="1192.06" y="177.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (8,421 us, 0.24%)</title><rect x="1106.1" y="103" width="2.8" height="15.0" fill="rgb(137.719519077054,106.031267634952,137.719519077054)" rx="2" ry="2" />
<text  x="1109.07" y="113.5" ></text>
</g>
<g >
<title>firedrake (3,569,301 us, 100.00%)</title><rect x="10.0" y="55" width="1180.0" height="15.0" fill="rgb(136.04006679663,101.727671166365,136.04006679663)" rx="2" ry="2" />
<text  x="13.00" y="65.5" >firedrake</text>
</g>
<g >
<title>Parloop_Cells_wrap_form1_cell_integral_otherwise (11,727 us, 0.33%)</title><rect x="1171.6" y="151" width="3.9" height="15.0" fill="rgb(126.658727242012,149.874484840522,149.874484840522)" rx="2" ry="2" />
<text  x="1174.62" y="161.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (70,728 us, 1.98%)</title><rect x="22.5" y="135" width="23.4" height="15.0" fill="rgb(153.920159224919,153.920159224919,138.228463936148)" rx="2" ry="2" />
<text  x="25.53" y="145.5" >p..</text>
</g>
<g >
<title>firedrake.function.Function.split (990 us, 0.03%)</title><rect x="1116.6" y="119" width="0.3" height="15.0" fill="rgb(149.401578678477,159.399743005829,149.401578678477)" rx="2" ry="2" />
<text  x="1119.59" y="129.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (8,582 us, 0.24%)</title><rect x="1148.3" y="151" width="2.8" height="15.0" fill="rgb(151.625849259612,151.625849259612,127.109884873503)" rx="2" ry="2" />
<text  x="1151.30" y="161.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (6,666 us, 0.19%)</title><rect x="1145.9" y="151" width="2.3" height="15.0" fill="rgb(125.700500210799,163.258058105219,125.700500210799)" rx="2" ry="2" />
<text  x="1148.95" y="161.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalProblem.__init__ (10,162 us, 0.28%)</title><rect x="1113.6" y="87" width="3.3" height="15.0" fill="rgb(150.960054387737,139.960139368575,150.960054387737)" rx="2" ry="2" />
<text  x="1116.56" y="97.5" ></text>
</g>
<g >
<title>PetscBarrier (1,396 us, 0.04%)</title><rect x="54.8" y="71" width="0.5" height="15.0" fill="rgb(139.430351342947,153.185646644468,153.185646644468)" rx="2" ry="2" />
<text  x="57.80" y="81.5" ></text>
</g>
<g >
<title>firedrake.slate.slac.optimise.optimise (6,038 us, 0.17%)</title><rect x="1139.8" y="183" width="2.0" height="15.0" fill="rgb(155.063765337081,135.488867584285,135.488867584285)" rx="2" ry="2" />
<text  x="1142.76" y="193.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.WithGeometry.split (670 us, 0.02%)</title><rect x="1150.9" y="199" width="0.2" height="15.0" fill="rgb(131.292170768016,131.292170768016,152.830742729293)" rx="2" ry="2" />
<text  x="1153.92" y="209.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (1,206 us, 0.03%)</title><rect x="1175.1" y="167" width="0.4" height="15.0" fill="rgb(152.059415068066,152.059415068066,129.211011483703)" rx="2" ry="2" />
<text  x="1178.10" y="177.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (553 us, 0.02%)</title><rect x="1189.8" y="215" width="0.2" height="15.0" fill="rgb(124.219178180152,124.219178180152,151.461776421965)" rx="2" ry="2" />
<text  x="1192.82" y="225.5" ></text>
</g>
<g >
<title>firedrake.mesh._from_cell_list (838 us, 0.02%)</title><rect x="1109.5" y="103" width="0.3" height="15.0" fill="rgb(105.034684929115,144.268251648289,144.268251648289)" rx="2" ry="2" />
<text  x="1112.54" y="113.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (1,547 us, 0.04%)</title><rect x="1150.4" y="231" width="0.5" height="15.0" fill="rgb(125.546624986976,163.28310756026,125.546624986976)" rx="2" ry="2" />
<text  x="1153.41" y="241.5" ></text>
</g>
<g >
<title>firedrake.functionspace.make_scalar_element (1,036 us, 0.03%)</title><rect x="1149.9" y="215" width="0.3" height="15.0" fill="rgb(137.537130154632,105.563896021245,137.537130154632)" rx="2" ry="2" />
<text  x="1152.89" y="225.5" ></text>
</g>
<g >
<title>firedrake.functionspace.MixedFunctionSpace (1,179 us, 0.03%)</title><rect x="1105.7" y="71" width="0.4" height="15.0" fill="rgb(152.886139907022,152.886139907022,133.217447241722)" rx="2" ry="2" />
<text  x="1108.68" y="81.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (6,370 us, 0.18%)</title><rect x="1149.0" y="183" width="2.1" height="15.0" fill="rgb(132.075799728896,132.075799728896,152.982412850754)" rx="2" ry="2" />
<text  x="1152.03" y="193.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (1,073 us, 0.03%)</title><rect x="1189.6" y="199" width="0.4" height="15.0" fill="rgb(152.36471040488,152.36471040488,130.69051965442)" rx="2" ry="2" />
<text  x="1192.65" y="209.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (1,642 us, 0.05%)</title><rect x="1171.1" y="167" width="0.5" height="15.0" fill="rgb(126.610212628306,149.861906977709,149.861906977709)" rx="2" ry="2" />
<text  x="1174.08" y="177.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (499 us, 0.01%)</title><rect x="1105.9" y="87" width="0.2" height="15.0" fill="rgb(137.308478100181,104.977975131715,137.308478100181)" rx="2" ry="2" />
<text  x="1108.90" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (2,075 us, 0.06%)</title><rect x="1150.2" y="215" width="0.7" height="15.0" fill="rgb(152.322886802984,114.475465489541,114.475465489541)" rx="2" ry="2" />
<text  x="1153.23" y="225.5" ></text>
</g>
<g >
<title>firedrake.utility_meshes.SquareMesh (2,925 us, 0.08%)</title><rect x="1108.9" y="71" width="0.9" height="15.0" fill="rgb(117.340317586729,117.340317586729,150.130384049044)" rx="2" ry="2" />
<text  x="1111.85" y="81.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (15,761 us, 0.44%)</title><rect x="48.8" y="71" width="5.2" height="15.0" fill="rgb(111.51269744664,111.51269744664,149.002457570318)" rx="2" ry="2" />
<text  x="51.78" y="81.5" ></text>
</g>
<g >
<title>firedrake.extrusion_utils.make_extruded_coords (107,990 us, 3.03%)</title><rect x="10.2" y="87" width="35.7" height="15.0" fill="rgb(147.455570248769,159.716535075782,147.455570248769)" rx="2" ry="2" />
<text  x="13.21" y="97.5" >fi..</text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (8,582 us, 0.24%)</title><rect x="1148.3" y="167" width="2.8" height="15.0" fill="rgb(132.732267400281,93.2514352132193,132.732267400281)" rx="2" ry="2" />
<text  x="1151.30" y="177.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (6,810 us, 0.19%)</title><rect x="45.9" y="119" width="2.3" height="15.0" fill="rgb(110.234618330014,145.616382530004,145.616382530004)" rx="2" ry="2" />
<text  x="48.91" y="129.5" ></text>
</g>
<g >
<title>firedrake.parloops.par_loop (5,555 us, 0.16%)</title><rect x="1161.7" y="151" width="1.8" height="15.0" fill="rgb(131.303614585107,162.345923207076,131.303614585107)" rx="2" ry="2" />
<text  x="1164.68" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (8,421 us, 0.24%)</title><rect x="1106.1" y="135" width="2.8" height="15.0" fill="rgb(134.174673219854,96.9476001258767,134.174673219854)" rx="2" ry="2" />
<text  x="1109.07" y="145.5" ></text>
</g>
<g >
<title>firedrake.mesh.make_mesh_from_coordinates (1,028 us, 0.03%)</title><rect x="48.4" y="87" width="0.4" height="15.0" fill="rgb(156.534857483134,146.767240704028,146.767240704028)" rx="2" ry="2" />
<text  x="51.44" y="97.5" ></text>
</g>
<g >
<title>HybridInit (65,819 us, 1.84%)</title><rect x="1141.8" y="135" width="21.7" height="15.0" fill="rgb(153.857864427431,126.243627276973,126.243627276973)" rx="2" ry="2" />
<text  x="1144.76" y="145.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (6,810 us, 0.19%)</title><rect x="45.9" y="135" width="2.3" height="15.0" fill="rgb(135.642725098809,152.203669470061,152.203669470061)" rx="2" ry="2" />
<text  x="48.91" y="145.5" ></text>
</g>
<g >
<title>PCSetUp (65,819 us, 1.84%)</title><rect x="1141.8" y="119" width="21.7" height="15.0" fill="rgb(133.10876264365,133.10876264365,153.182341156836)" rx="2" ry="2" />
<text  x="1144.76" y="129.5" ></text>
</g>
<g >
<title>HybridRHS (59,707 us, 1.67%)</title><rect x="1122.0" y="167" width="19.8" height="15.0" fill="rgb(145.072059160227,160.1045485088,145.072059160227)" rx="2" ry="2" />
<text  x="1125.02" y="177.5" ></text>
</g>
<g >
<title>firedrake.mesh.MeshTopology._facets (2,930 us, 0.08%)</title><rect x="1107.9" y="151" width="1.0" height="15.0" fill="rgb(148.574112291765,148.574112291765,112.320698029324)" rx="2" ry="2" />
<text  x="1110.88" y="161.5" ></text>
</g>
<g >
<title>firedrake.interpolation.make_interpolator (30,885 us, 0.87%)</title><rect x="1151.5" y="151" width="10.2" height="15.0" fill="rgb(133.719953117997,161.952565771489,133.719953117997)" rx="2" ry="2" />
<text  x="1154.47" y="161.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.__init__ (8,216 us, 0.23%)</title><rect x="1116.9" y="71" width="2.7" height="15.0" fill="rgb(117.283638174691,117.283638174691,150.119413840263)" rx="2" ry="2" />
<text  x="1119.92" y="81.5" ></text>
</g>
<g >
<title>Mesh: numbering (979 us, 0.03%)</title><rect x="54.5" y="87" width="0.3" height="15.0" fill="rgb(138.411628014537,138.411628014537,154.208702196362)" rx="2" ry="2" />
<text  x="57.47" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (14,672 us, 0.41%)</title><rect x="49.1" y="119" width="4.9" height="15.0" fill="rgb(144.369197369387,144.369197369387,155.36178013601)" rx="2" ry="2" />
<text  x="52.14" y="129.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (1,547 us, 0.04%)</title><rect x="1150.4" y="247" width="0.5" height="15.0" fill="rgb(110.082672666413,145.576989209811,145.576989209811)" rx="2" ry="2" />
<text  x="1153.41" y="257.5" ></text>
</g>
<g >
<title>firedrake.mesh._Facets.__init__ (862 us, 0.02%)</title><rect x="1108.6" y="167" width="0.3" height="15.0" fill="rgb(143.950380421661,154.357506035245,154.357506035245)" rx="2" ry="2" />
<text  x="1111.57" y="177.5" ></text>
</g>
<g >
<title>firedrake.functionspace.VectorFunctionSpace (6,810 us, 0.19%)</title><rect x="45.9" y="87" width="2.3" height="15.0" fill="rgb(150.946411544578,150.946411544578,123.81722517757)" rx="2" ry="2" />
<text  x="48.91" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (3,478 us, 0.10%)</title><rect x="1147.0" y="167" width="1.2" height="15.0" fill="rgb(130.791417039347,150.945922936127,150.945922936127)" rx="2" ry="2" />
<text  x="1150.00" y="177.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (3,478 us, 0.10%)</title><rect x="1147.0" y="199" width="1.2" height="15.0" fill="rgb(129.456753026519,150.599898932801,150.599898932801)" rx="2" ry="2" />
<text  x="1150.00" y="209.5" ></text>
</g>
<g >
<title>all (3,569,301 us, 100%)</title><rect x="10.0" y="39" width="1180.0" height="15.0" fill="rgb(154.650075863806,132.317248289182,132.317248289182)" rx="2" ry="2" />
<text  x="13.00" y="49.5" ></text>
</g>
<g >
<title>ParLoopExecute (1,424 us, 0.04%)</title><rect x="1121.5" y="199" width="0.5" height="15.0" fill="rgb(152.746455862209,152.746455862209,132.540516870707)" rx="2" ry="2" />
<text  x="1124.55" y="209.5" ></text>
</g>
<g >
<title>KSPSolve (66,907 us, 1.87%)</title><rect x="1119.6" y="119" width="22.2" height="15.0" fill="rgb(150.416899100321,150.416899100321,121.251126409246)" rx="2" ry="2" />
<text  x="1122.64" y="129.5" ></text>
</g>
<g >
<title>SCForwardElim (66,907 us, 1.87%)</title><rect x="1119.6" y="151" width="22.2" height="15.0" fill="rgb(130.443083286355,130.443083286355,152.666403216714)" rx="2" ry="2" />
<text  x="1122.64" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspace.VectorFunctionSpace (8,421 us, 0.24%)</title><rect x="1106.1" y="71" width="2.8" height="15.0" fill="rgb(155.189835368906,155.189835368906,144.381509864697)" rx="2" ry="2" />
<text  x="1109.07" y="81.5" ></text>
</g>
<g >
<title>ParLoopExecute (32,619 us, 0.91%)</title><rect x="1164.7" y="135" width="10.8" height="15.0" fill="rgb(107.780745491356,144.980193275537,144.980193275537)" rx="2" ry="2" />
<text  x="1167.72" y="145.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (14,672 us, 0.41%)</title><rect x="49.1" y="103" width="4.9" height="15.0" fill="rgb(149.215453809168,149.215453809168,115.428737690583)" rx="2" ry="2" />
<text  x="52.14" y="113.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.action (11,323 us, 0.32%)</title><rect x="1109.8" y="87" width="3.8" height="15.0" fill="rgb(120.009765396395,148.150679917584,148.150679917584)" rx="2" ry="2" />
<text  x="1112.82" y="97.5" ></text>
</g>
<g >
<title>CreateMesh (1,128 us, 0.03%)</title><rect x="1109.2" y="103" width="0.3" height="15.0" fill="rgb(154.488933086501,131.08182032984,131.08182032984)" rx="2" ry="2" />
<text  x="1112.17" y="113.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (14,672 us, 0.41%)</title><rect x="49.1" y="87" width="4.9" height="15.0" fill="rgb(155.435152469809,138.336168935202,138.336168935202)" rx="2" ry="2" />
<text  x="52.14" y="97.5" ></text>
</g>
</g>
</svg>
