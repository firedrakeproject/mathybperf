<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="299" onload="init(evt)" viewBox="0 0 1200 299" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:13px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:18px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 13 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (1 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="299.0" fill="url(#background)"  />
<text id="title" x="600.00" y="26" >Firedrake example</text>
<text id="details" x="10.00" y="281" > </text>
<text id="unzoom" x="10.00" y="26" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="26" >Search</text>
<text id="ignorecase" x="1174.00" y="26" >ic</text>
<text id="matched" x="1090.00" y="281" > </text>
<g id="frames">
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (12,213 us, 0.30%)</title><rect x="50.2" y="119" width="3.6" height="15.0" fill="rgb(126.884602114992,126.884602114992,151.977664925482)" rx="2" ry="2" />
<text  x="53.24" y="129.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (3,633 us, 0.09%)</title><rect x="1151.9" y="183" width="1.0" height="15.0" fill="rgb(154.037064876567,127.617497387015,127.617497387015)" rx="2" ry="2" />
<text  x="1154.85" y="193.5" ></text>
</g>
<g >
<title>HybridRHS (593,486 us, 14.64%)</title><rect x="974.8" y="167" width="172.7" height="15.0" fill="rgb(144.643958686657,123.77514413456,144.643958686657)" rx="2" ry="2" />
<text  x="977.81" y="177.5" >HybridRHS</text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (9,114 us, 0.22%)</title><rect x="967.7" y="103" width="2.6" height="15.0" fill="rgb(134.959475769158,98.9586566584685,134.959475769158)" rx="2" ry="2" />
<text  x="970.69" y="113.5" ></text>
</g>
<g >
<title>ParLoopExecute (87,428 us, 2.16%)</title><rect x="21.8" y="103" width="25.4" height="15.0" fill="rgb(135.704420373345,135.704420373345,153.684726523873)" rx="2" ry="2" />
<text  x="24.78" y="113.5" >P..</text>
</g>
<g >
<title>firedrake.mesh.make_mesh_from_coordinates (1,243 us, 0.03%)</title><rect x="49.6" y="87" width="0.4" height="15.0" fill="rgb(138.636036299962,161.152273160471,138.636036299962)" rx="2" ry="2" />
<text  x="52.59" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspace.MixedFunctionSpace (2,776 us, 0.07%)</title><rect x="1151.0" y="167" width="0.9" height="15.0" fill="rgb(107.557059115987,144.922200511552,144.922200511552)" rx="2" ry="2" />
<text  x="1154.04" y="177.5" ></text>
</g>
<g >
<title>firedrake.assemble.allocate_matrix (6,612 us, 0.16%)</title><rect x="971.0" y="87" width="1.9" height="15.0" fill="rgb(142.189916419025,160.573734536438,142.189916419025)" rx="2" ry="2" />
<text  x="974.02" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (1,522 us, 0.04%)</title><rect x="1154.9" y="247" width="0.4" height="15.0" fill="rgb(154.346532298659,129.990080956388,129.990080956388)" rx="2" ry="2" />
<text  x="1157.90" y="257.5" ></text>
</g>
<g >
<title>CreateMesh (866 us, 0.02%)</title><rect x="964.1" y="103" width="0.3" height="15.0" fill="rgb(155.194352546761,136.490036191832,136.490036191832)" rx="2" ry="2" />
<text  x="967.13" y="113.5" ></text>
</g>
<g >
<title>firedrake.parloops.par_loop (5,454 us, 0.13%)</title><rect x="1164.7" y="151" width="1.6" height="15.0" fill="rgb(142.929194679344,119.38106136582,142.929194679344)" rx="2" ry="2" />
<text  x="1167.75" y="161.5" ></text>
</g>
<g >
<title>firedrake.mesh._from_cell_list (617 us, 0.02%)</title><rect x="964.4" y="103" width="0.2" height="15.0" fill="rgb(129.2970966529,129.2970966529,152.444599352174)" rx="2" ry="2" />
<text  x="967.38" y="113.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.solve (745,870 us, 18.39%)</title><rect x="972.9" y="87" width="217.1" height="15.0" fill="rgb(107.888153249023,145.008039731228,145.008039731228)" rx="2" ry="2" />
<text  x="975.94" y="97.5" >firedrake.variational_solv..</text>
</g>
<g >
<title>Mesh: numbering (877 us, 0.02%)</title><rect x="54.1" y="87" width="0.3" height="15.0" fill="rgb(150.491079515167,150.491079515167,121.610616111964)" rx="2" ry="2" />
<text  x="57.14" y="97.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (6,211 us, 0.15%)</title><rect x="1153.7" y="183" width="1.8" height="15.0" fill="rgb(106.519661537577,144.653245583816,144.653245583816)" rx="2" ry="2" />
<text  x="1156.73" y="193.5" ></text>
</g>
<g >
<title>firedrake.function.Function.split (870 us, 0.02%)</title><rect x="970.3" y="119" width="0.3" height="15.0" fill="rgb(150.543630138534,150.543630138534,121.865284517511)" rx="2" ry="2" />
<text  x="973.34" y="129.5" ></text>
</g>
<g >
<title>HybridBreak (6,419 us, 0.16%)</title><rect x="972.9" y="167" width="1.9" height="15.0" fill="rgb(124.012166595588,163.532903112346,124.012166595588)" rx="2" ry="2" />
<text  x="975.94" y="177.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (12,213 us, 0.30%)</title><rect x="50.2" y="87" width="3.6" height="15.0" fill="rgb(136.092024127661,136.092024127661,153.759746605354)" rx="2" ry="2" />
<text  x="53.24" y="97.5" ></text>
</g>
<g >
<title>firedrake.matrix_free.operators.ImplicitMatrixContext.__init__ (6,612 us, 0.16%)</title><rect x="971.0" y="103" width="1.9" height="15.0" fill="rgb(120.058661831087,148.163356771023,148.163356771023)" rx="2" ry="2" />
<text  x="974.02" y="113.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (559 us, 0.01%)</title><rect x="1189.8" y="215" width="0.2" height="15.0" fill="rgb(112.709979247522,146.258142767876,146.258142767876)" rx="2" ry="2" />
<text  x="1192.84" y="225.5" ></text>
</g>
<g >
<title>firedrake.assemble.allocate_matrix (556 us, 0.01%)</title><rect x="1152.9" y="151" width="0.2" height="15.0" fill="rgb(155.184447357339,136.414096406265,136.414096406265)" rx="2" ry="2" />
<text  x="1155.91" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspace.VectorFunctionSpace (7,235 us, 0.18%)</title><rect x="47.2" y="87" width="2.1" height="15.0" fill="rgb(107.356053400263,144.870087918587,144.870087918587)" rx="2" ry="2" />
<text  x="50.23" y="97.5" ></text>
</g>
<g >
<title>SCForwardElim (599,905 us, 14.79%)</title><rect x="972.9" y="151" width="174.6" height="15.0" fill="rgb(137.444207807424,161.34629175228,137.444207807424)" rx="2" ry="2" />
<text  x="975.94" y="161.5" >SCForwardElim</text>
</g>
<g >
<title>ParLoopExecute (1,335 us, 0.03%)</title><rect x="1165.9" y="167" width="0.4" height="15.0" fill="rgb(152.485638752746,115.723230437718,115.723230437718)" rx="2" ry="2" />
<text  x="1168.95" y="177.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (86,134 us, 2.12%)</title><rect x="22.2" y="135" width="25.0" height="15.0" fill="rgb(129.514417405234,162.637187864264,129.514417405234)" rx="2" ry="2" />
<text  x="25.16" y="145.5" >p..</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (45,677 us, 1.13%)</title><rect x="1134.2" y="215" width="13.3" height="15.0" fill="rgb(155.134972128149,155.134972128149,144.115634159493)" rx="2" ry="2" />
<text  x="1137.23" y="225.5" ></text>
</g>
<g >
<title>firedrake.mesh.ExtrudedMeshTopology.__init__ (906 us, 0.02%)</title><rect x="49.3" y="87" width="0.3" height="15.0" fill="rgb(128.57916842565,128.57916842565,152.305645501739)" rx="2" ry="2" />
<text  x="52.33" y="97.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.action (4,151 us, 0.10%)</title><rect x="971.0" y="119" width="1.2" height="15.0" fill="rgb(127.512229348194,162.963125454945,127.512229348194)" rx="2" ry="2" />
<text  x="974.02" y="129.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (1,471 us, 0.04%)</title><rect x="1172.7" y="167" width="0.4" height="15.0" fill="rgb(151.849794569861,151.849794569861,128.195158300096)" rx="2" ry="2" />
<text  x="1175.72" y="177.5" ></text>
</g>
<g >
<title>PCSetUp (64,641 us, 1.59%)</title><rect x="1147.5" y="119" width="18.8" height="15.0" fill="rgb(126.985852275534,126.985852275534,151.997261730749)" rx="2" ry="2" />
<text  x="1150.52" y="129.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.action (10,754 us, 0.27%)</title><rect x="964.6" y="87" width="3.1" height="15.0" fill="rgb(152.934306413523,119.163015837011,119.163015837011)" rx="2" ry="2" />
<text  x="967.56" y="97.5" ></text>
</g>
<g >
<title>CreateExtMesh (137,302 us, 3.39%)</title><rect x="10.0" y="71" width="40.0" height="15.0" fill="rgb(153.767555457407,153.767555457407,137.488922601278)" rx="2" ry="2" />
<text  x="13.00" y="81.5" >Cre..</text>
</g>
<g >
<title>firedrake.extrusion_utils.make_extruded_coords (127,228 us, 3.14%)</title><rect x="10.2" y="87" width="37.0" height="15.0" fill="rgb(143.601807647812,143.601807647812,155.213253093125)" rx="2" ry="2" />
<text  x="13.20" y="97.5" >fi..</text>
</g>
<g >
<title>CreateFunctionSpace (6,409 us, 0.16%)</title><rect x="1151.0" y="151" width="1.9" height="15.0" fill="rgb(138.062730809344,161.24560196127,138.062730809344)" rx="2" ry="2" />
<text  x="1154.04" y="161.5" ></text>
</g>
<g >
<title>SNESSolve (745,870 us, 18.39%)</title><rect x="972.9" y="103" width="217.1" height="15.0" fill="rgb(152.384733194988,152.384733194988,130.787553175713)" rx="2" ry="2" />
<text  x="975.94" y="113.5" >SNESSolve</text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (3,633 us, 0.09%)</title><rect x="1151.9" y="199" width="1.0" height="15.0" fill="rgb(110.910963280914,145.791731220978,145.791731220978)" rx="2" ry="2" />
<text  x="1154.85" y="209.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (1,318 us, 0.03%)</title><rect x="1151.5" y="199" width="0.4" height="15.0" fill="rgb(134.896916405731,161.760967096741,134.896916405731)" rx="2" ry="2" />
<text  x="1154.47" y="209.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (13,205 us, 0.33%)</title><rect x="50.0" y="71" width="3.8" height="15.0" fill="rgb(154.640939156874,154.640939156874,141.72147437562)" rx="2" ry="2" />
<text  x="52.96" y="81.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (1,522 us, 0.04%)</title><rect x="1154.9" y="231" width="0.4" height="15.0" fill="rgb(121.835717178037,121.835717178037,151.000461389298)" rx="2" ry="2" />
<text  x="1157.90" y="241.5" ></text>
</g>
<g >
<title>ParLoopExecute (45,677 us, 1.13%)</title><rect x="1134.2" y="183" width="13.3" height="15.0" fill="rgb(152.208573384352,152.208573384352,129.933855631859)" rx="2" ry="2" />
<text  x="1137.23" y="193.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (1,063 us, 0.03%)</title><rect x="1189.7" y="183" width="0.3" height="15.0" fill="rgb(150.396944798329,159.237706660737,150.396944798329)" rx="2" ry="2" />
<text  x="1192.69" y="193.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalProblem.__init__ (9,984 us, 0.25%)</title><rect x="967.7" y="87" width="2.9" height="15.0" fill="rgb(137.054468792541,161.409737638424,137.054468792541)" rx="2" ry="2" />
<text  x="970.69" y="97.5" ></text>
</g>
<g >
<title>firedrake.mesh._Facets.__init__ (718 us, 0.02%)</title><rect x="49.1" y="167" width="0.2" height="15.0" fill="rgb(141.678164185826,116.175295726179,141.678164185826)" rx="2" ry="2" />
<text  x="52.12" y="177.5" ></text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (46,364 us, 1.14%)</title><rect x="1176.5" y="135" width="13.5" height="15.0" fill="rgb(156.26436844458,144.693491408446,144.693491408446)" rx="2" ry="2" />
<text  x="1179.51" y="145.5" ></text>
</g>
<g >
<title>ParLoopExecute (31,677 us, 0.78%)</title><rect x="1167.3" y="135" width="9.2" height="15.0" fill="rgb(127.439531249315,162.974960029181,127.439531249315)" rx="2" ry="2" />
<text  x="1170.29" y="145.5" ></text>
</g>
<g >
<title>KSPSolve (599,905 us, 14.79%)</title><rect x="972.9" y="119" width="174.6" height="15.0" fill="rgb(138.14344981753,161.232461657611,138.14344981753)" rx="2" ry="2" />
<text  x="975.94" y="129.5" >KSPSolve</text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (6,055 us, 0.15%)</title><rect x="962.1" y="119" width="1.8" height="15.0" fill="rgb(106.369551573663,144.614328185764,144.614328185764)" rx="2" ry="2" />
<text  x="965.15" y="129.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.LinearVariationalProblem.__init__ (20,738 us, 0.51%)</title><rect x="964.6" y="71" width="6.0" height="15.0" fill="rgb(156.098963443481,143.425386400018,143.425386400018)" rx="2" ry="2" />
<text  x="967.56" y="81.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.derivative (870 us, 0.02%)</title><rect x="970.3" y="103" width="0.3" height="15.0" fill="rgb(139.23907002681,139.23907002681,154.368852263254)" rx="2" ry="2" />
<text  x="973.34" y="113.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (6,055 us, 0.15%)</title><rect x="962.1" y="103" width="1.8" height="15.0" fill="rgb(152.915031265955,119.015239705659,119.015239705659)" rx="2" ry="2" />
<text  x="965.15" y="113.5" ></text>
</g>
<g >
<title>CreateMesh (493 us, 0.01%)</title><rect x="54.0" y="87" width="0.1" height="15.0" fill="rgb(156.46926682386,146.26437898293,146.26437898293)" rx="2" ry="2" />
<text  x="57.00" y="97.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (1,335 us, 0.03%)</title><rect x="1165.9" y="183" width="0.4" height="15.0" fill="rgb(151.721935595452,151.721935595452,127.575534039498)" rx="2" ry="2" />
<text  x="1168.95" y="193.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (7,235 us, 0.18%)</title><rect x="47.2" y="119" width="2.1" height="15.0" fill="rgb(155.265864715714,155.265864715714,144.749959776154)" rx="2" ry="2" />
<text  x="50.23" y="129.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (7,235 us, 0.18%)</title><rect x="47.2" y="103" width="2.1" height="15.0" fill="rgb(147.395452154941,159.726321742219,147.395452154941)" rx="2" ry="2" />
<text  x="50.23" y="113.5" ></text>
</g>
<g >
<title>firedrake.functionspace.MixedFunctionSpace (1,040 us, 0.03%)</title><rect x="961.8" y="71" width="0.3" height="15.0" fill="rgb(115.945045181873,115.945045181873,149.860331325524)" rx="2" ry="2" />
<text  x="964.85" y="81.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (1,318 us, 0.03%)</title><rect x="1151.5" y="231" width="0.4" height="15.0" fill="rgb(134.210282065509,151.832295350317,151.832295350317)" rx="2" ry="2" />
<text  x="1154.47" y="241.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (1,168 us, 0.03%)</title><rect x="1176.2" y="167" width="0.3" height="15.0" fill="rgb(153.953711497994,126.978454817952,126.978454817952)" rx="2" ry="2" />
<text  x="1179.17" y="177.5" ></text>
</g>
<g >
<title>firedrake.utility_meshes.RectangleMesh (2,219 us, 0.05%)</title><rect x="963.9" y="87" width="0.7" height="15.0" fill="rgb(138.012185609972,106.781225625554,138.012185609972)" rx="2" ry="2" />
<text  x="966.91" y="97.5" ></text>
</g>
<g >
<title>Log_Event_form0_cell_integral_otherwise (9,283 us, 0.23%)</title><rect x="1170.0" y="167" width="2.7" height="15.0" fill="rgb(126.567203063864,149.850756349891,149.850756349891)" rx="2" ry="2" />
<text  x="1173.02" y="177.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (1,335 us, 0.03%)</title><rect x="1165.9" y="199" width="0.4" height="15.0" fill="rgb(148.434635386295,148.434635386295,111.644771487428)" rx="2" ry="2" />
<text  x="1168.95" y="209.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (1,841 us, 0.05%)</title><rect x="1151.3" y="183" width="0.6" height="15.0" fill="rgb(152.726990213252,117.57359163493,117.57359163493)" rx="2" ry="2" />
<text  x="1154.31" y="193.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_form1_cell_integral_otherwise (11,550 us, 0.28%)</title><rect x="1173.1" y="151" width="3.4" height="15.0" fill="rgb(154.430945188315,130.637246443745,130.637246443745)" rx="2" ry="2" />
<text  x="1176.15" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (3,633 us, 0.09%)</title><rect x="1151.9" y="167" width="1.0" height="15.0" fill="rgb(149.320701698228,149.320701698228,115.938785152949)" rx="2" ry="2" />
<text  x="1154.85" y="177.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (6,055 us, 0.15%)</title><rect x="962.1" y="135" width="1.8" height="15.0" fill="rgb(154.994153407425,134.955176123592,134.955176123592)" rx="2" ry="2" />
<text  x="965.15" y="145.5" ></text>
</g>
<g >
<title>firedrake.functionspace.make_scalar_element (1,052 us, 0.03%)</title><rect x="1154.4" y="215" width="0.3" height="15.0" fill="rgb(155.654393677537,155.654393677537,146.632830898833)" rx="2" ry="2" />
<text  x="1157.44" y="225.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (1,318 us, 0.03%)</title><rect x="1151.5" y="215" width="0.4" height="15.0" fill="rgb(154.198472474199,128.854955635529,128.854955635529)" rx="2" ry="2" />
<text  x="1154.47" y="225.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (2,819 us, 0.07%)</title><rect x="1189.2" y="167" width="0.8" height="15.0" fill="rgb(154.783893719723,133.343185184541,133.343185184541)" rx="2" ry="2" />
<text  x="1192.18" y="177.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.WithGeometry.split (669 us, 0.02%)</title><rect x="1155.3" y="199" width="0.2" height="15.0" fill="rgb(152.78760902978,118.038335894977,118.038335894977)" rx="2" ry="2" />
<text  x="1158.34" y="209.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_form0_cell_integral_otherwise (20,127 us, 0.50%)</title><rect x="1167.3" y="151" width="5.8" height="15.0" fill="rgb(155.373963927179,137.867056775042,137.867056775042)" rx="2" ry="2" />
<text  x="1170.29" y="161.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (1,271 us, 0.03%)</title><rect x="974.4" y="215" width="0.4" height="15.0" fill="rgb(130.807126333743,162.426746875902,130.807126333743)" rx="2" ry="2" />
<text  x="977.44" y="225.5" ></text>
</g>
<g >
<title>firedrake.mesh.MeshTopology._facets (2,590 us, 0.06%)</title><rect x="963.2" y="151" width="0.7" height="15.0" fill="rgb(120.016538711271,120.016538711271,150.648362331214)" rx="2" ry="2" />
<text  x="966.16" y="161.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (2,461 us, 0.06%)</title><rect x="972.2" y="119" width="0.7" height="15.0" fill="rgb(152.893391313844,118.849333406138,118.849333406138)" rx="2" ry="2" />
<text  x="975.23" y="129.5" ></text>
</g>
<g >
<title>firedrake (4,054,850 us, 100.00%)</title><rect x="10.0" y="55" width="1180.0" height="15.0" fill="rgb(147.799595153549,147.799595153549,156.025728094235)" rx="2" ry="2" />
<text  x="13.00" y="65.5" >firedrake</text>
</g>
<g >
<title>firedrake.function.Function.__init__ (852 us, 0.02%)</title><rect x="1155.5" y="151" width="0.3" height="15.0" fill="rgb(134.179889739147,151.824415858297,151.824415858297)" rx="2" ry="2" />
<text  x="1158.53" y="161.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (1,063 us, 0.03%)</title><rect x="1189.7" y="199" width="0.3" height="15.0" fill="rgb(148.151746863718,148.151746863718,110.27385018571)" rx="2" ry="2" />
<text  x="1192.69" y="209.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (7,235 us, 0.18%)</title><rect x="47.2" y="151" width="2.1" height="15.0" fill="rgb(134.084655984346,134.084655984346,153.371223738906)" rx="2" ry="2" />
<text  x="50.23" y="161.5" ></text>
</g>
<g >
<title>CreateMesh (2,052 us, 0.05%)</title><rect x="53.8" y="71" width="0.6" height="15.0" fill="rgb(145.977441481159,159.957160689114,145.977441481159)" rx="2" ry="2" />
<text  x="56.80" y="81.5" ></text>
</g>
<g >
<title>Log_Event_form1_cell_integral_otherwise (1,432 us, 0.04%)</title><rect x="1175.8" y="167" width="0.4" height="15.0" fill="rgb(144.776240548562,154.571617919998,154.571617919998)" rx="2" ry="2" />
<text  x="1178.75" y="177.5" ></text>
</g>
<g >
<title>firedrake.utility_meshes.SquareMesh (2,219 us, 0.05%)</title><rect x="963.9" y="71" width="0.7" height="15.0" fill="rgb(153.900932309299,153.900932309299,138.135287345063)" rx="2" ry="2" />
<text  x="966.91" y="81.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (2,041 us, 0.05%)</title><rect x="1154.7" y="215" width="0.6" height="15.0" fill="rgb(132.72312649037,151.446736497503,151.446736497503)" rx="2" ry="2" />
<text  x="1157.75" y="225.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (6,055 us, 0.15%)</title><rect x="962.1" y="87" width="1.8" height="15.0" fill="rgb(121.100775482156,121.100775482156,150.85821460945)" rx="2" ry="2" />
<text  x="965.15" y="97.5" ></text>
</g>
<g >
<title>firedrake.interpolation.make_interpolator (30,807 us, 0.76%)</title><rect x="1155.8" y="151" width="8.9" height="15.0" fill="rgb(118.048707222272,147.642257427996,147.642257427996)" rx="2" ry="2" />
<text  x="1158.78" y="161.5" ></text>
</g>
<g >
<title>firedrake.parloops.par_loop (6,419 us, 0.16%)</title><rect x="972.9" y="183" width="1.9" height="15.0" fill="rgb(147.762689765656,147.762689765656,108.388419633564)" rx="2" ry="2" />
<text  x="975.94" y="193.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_pyop2_kernel_uniform_extrusion (86,810 us, 2.14%)</title><rect x="22.0" y="119" width="25.2" height="15.0" fill="rgb(143.115747666149,119.859103394508,143.115747666149)" rx="2" ry="2" />
<text  x="24.96" y="129.5" >P..</text>
</g>
<g >
<title>firedrake.mesh._Facets.__init__ (752 us, 0.02%)</title><rect x="963.7" y="167" width="0.2" height="15.0" fill="rgb(153.376972829324,122.556791691484,122.556791691484)" rx="2" ry="2" />
<text  x="966.69" y="177.5" ></text>
</g>
<g >
<title>SNESFunctionEval (81,324 us, 2.01%)</title><rect x="1166.3" y="119" width="23.7" height="15.0" fill="rgb(137.376352064323,137.376352064323,154.008326205998)" rx="2" ry="2" />
<text  x="1169.33" y="129.5" >S..</text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (8,468 us, 0.21%)</title><rect x="1153.1" y="151" width="2.4" height="15.0" fill="rgb(156.19015421258,144.124515629782,144.124515629782)" rx="2" ry="2" />
<text  x="1156.07" y="161.5" ></text>
</g>
<g >
<title>perfsolve (745,870 us, 18.39%)</title><rect x="972.9" y="71" width="217.1" height="15.0" fill="rgb(107.666368705818,144.950540034842,144.950540034842)" rx="2" ry="2" />
<text  x="975.94" y="81.5" >perfsolve</text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (12,213 us, 0.30%)</title><rect x="50.2" y="103" width="3.6" height="15.0" fill="rgb(152.063365333955,112.485800893654,112.485800893654)" rx="2" ry="2" />
<text  x="53.24" y="113.5" ></text>
</g>
<g >
<title>PCApply (599,905 us, 14.79%)</title><rect x="972.9" y="135" width="174.6" height="15.0" fill="rgb(151.563910456675,151.563910456675,126.809719905424)" rx="2" ry="2" />
<text  x="975.94" y="145.5" >PCApply</text>
</g>
<g >
<title>CreateFunctionSpace (4,350 us, 0.11%)</title><rect x="1154.1" y="199" width="1.2" height="15.0" fill="rgb(155.807932254435,141.194147284004,141.194147284004)" rx="2" ry="2" />
<text  x="1157.07" y="209.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (5,057 us, 0.12%)</title><rect x="1188.5" y="151" width="1.5" height="15.0" fill="rgb(124.538113502383,124.538113502383,151.523505839171)" rx="2" ry="2" />
<text  x="1191.53" y="161.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.__init__ (8,084 us, 0.20%)</title><rect x="970.6" y="71" width="2.3" height="15.0" fill="rgb(154.000920212456,154.000920212456,138.619844106518)" rx="2" ry="2" />
<text  x="973.59" y="81.5" ></text>
</g>
<g >
<title>all (4,054,850 us, 100%)</title><rect x="10.0" y="39" width="1180.0" height="15.0" fill="rgb(127.024591044894,163.042508434552,127.024591044894)" rx="2" ry="2" />
<text  x="13.00" y="49.5" ></text>
</g>
<g >
<title>firedrake.functionspace.VectorFunctionSpace (6,055 us, 0.15%)</title><rect x="962.1" y="71" width="1.8" height="15.0" fill="rgb(128.344094655501,150.311431947723,150.311431947723)" rx="2" ry="2" />
<text  x="965.15" y="81.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (7,235 us, 0.18%)</title><rect x="47.2" y="135" width="2.1" height="15.0" fill="rgb(146.074999601219,154.908333229946,154.908333229946)" rx="2" ry="2" />
<text  x="50.23" y="145.5" ></text>
</g>
<g >
<title>PetscBarrier (1,039 us, 0.03%)</title><rect x="54.4" y="71" width="0.3" height="15.0" fill="rgb(114.292274700034,146.668367514824,146.668367514824)" rx="2" ry="2" />
<text  x="57.40" y="81.5" ></text>
</g>
<g >
<title>ParLoopExecute (1,271 us, 0.03%)</title><rect x="974.4" y="199" width="0.4" height="15.0" fill="rgb(118.166729742863,118.166729742863,150.290334788941)" rx="2" ry="2" />
<text  x="977.44" y="209.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (1,271 us, 0.03%)</title><rect x="974.4" y="231" width="0.4" height="15.0" fill="rgb(147.731211110728,147.731211110728,108.235869228913)" rx="2" ry="2" />
<text  x="977.44" y="241.5" ></text>
</g>
<g >
<title>HybridInit (64,641 us, 1.59%)</title><rect x="1147.5" y="135" width="18.8" height="15.0" fill="rgb(138.90730362345,153.050041680154,153.050041680154)" rx="2" ry="2" />
<text  x="1150.52" y="145.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_slate_loopy_knl_0 (45,677 us, 1.13%)</title><rect x="1134.2" y="199" width="13.3" height="15.0" fill="rgb(152.645968387268,116.952424302386,116.952424302386)" rx="2" ry="2" />
<text  x="1137.23" y="209.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (8,468 us, 0.21%)</title><rect x="1153.1" y="167" width="2.4" height="15.0" fill="rgb(153.080203443266,120.281559731703,120.281559731703)" rx="2" ry="2" />
<text  x="1156.07" y="177.5" ></text>
</g>
<g >
<title>firedrake.__init__ (3,117,246 us, 76.88%)</title><rect x="54.7" y="71" width="907.1" height="15.0" fill="rgb(147.095039987481,130.05603996792,147.095039987481)" rx="2" ry="2" />
<text  x="57.70" y="81.5" >firedrake.__init__</text>
</g>
</g>
</svg>
