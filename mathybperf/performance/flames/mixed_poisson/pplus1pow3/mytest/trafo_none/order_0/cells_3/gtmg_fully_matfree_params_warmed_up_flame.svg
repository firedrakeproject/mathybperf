<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="299" onload="init(evt)" viewBox="0 0 1200 299" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:13px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:18px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 13 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (1 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="299.0" fill="url(#background)"  />
<text id="title" x="600.00" y="26" >Firedrake example</text>
<text id="details" x="10.00" y="281" > </text>
<text id="unzoom" x="10.00" y="26" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="26" >Search</text>
<text id="ignorecase" x="1174.00" y="26" >ic</text>
<text id="matched" x="1090.00" y="281" > </text>
<g id="frames">
<g >
<title>SNESSolve (141,570 us, 4.07%)</title><rect x="1141.9" y="103" width="48.1" height="15.0" fill="rgb(152.324334501086,114.486564508327,114.486564508327)" rx="2" ry="2" />
<text  x="1144.94" y="113.5" >SNES..</text>
</g>
<g >
<title>PCSetUp (70,067 us, 2.02%)</title><rect x="1141.9" y="119" width="23.8" height="15.0" fill="rgb(126.796311628125,149.910154866551,149.910154866551)" rx="2" ry="2" />
<text  x="1144.94" y="129.5" >P..</text>
</g>
<g >
<title>Log_Event_form0_cell_integral_otherwise (8,409 us, 0.24%)</title><rect x="1170.4" y="167" width="2.9" height="15.0" fill="rgb(120.402367326852,148.252465603258,148.252465603258)" rx="2" ry="2" />
<text  x="1173.40" y="177.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.solve (141,570 us, 4.07%)</title><rect x="1141.9" y="87" width="48.1" height="15.0" fill="rgb(154.77779051323,154.77779051323,142.384677102577)" rx="2" ry="2" />
<text  x="1144.94" y="97.5" >fire..</text>
</g>
<g >
<title>CreateFunctionSpace (11,825 us, 0.34%)</title><rect x="51.8" y="103" width="4.0" height="15.0" fill="rgb(117.69241424231,147.549885173932,147.549885173932)" rx="2" ry="2" />
<text  x="54.81" y="113.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.action (4,310 us, 0.12%)</title><rect x="1139.6" y="119" width="1.5" height="15.0" fill="rgb(130.201161890521,130.201161890521,152.619579720746)" rx="2" ry="2" />
<text  x="1142.64" y="129.5" ></text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (35,260 us, 1.01%)</title><rect x="1178.0" y="135" width="12.0" height="15.0" fill="rgb(133.446936883707,151.634391043924,151.634391043924)" rx="2" ry="2" />
<text  x="1181.03" y="145.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (1,919 us, 0.06%)</title><rect x="1146.5" y="183" width="0.7" height="15.0" fill="rgb(147.507543896969,147.507543896969,155.969202044575)" rx="2" ry="2" />
<text  x="1149.54" y="193.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalProblem.__init__ (10,477 us, 0.30%)</title><rect x="1135.6" y="87" width="3.5" height="15.0" fill="rgb(145.681477478744,160.005340875553,145.681477478744)" rx="2" ry="2" />
<text  x="1138.55" y="97.5" ></text>
</g>
<g >
<title>firedrake.matrix_free.operators.ImplicitMatrixContext.__init__ (481 us, 0.01%)</title><rect x="1148.5" y="167" width="0.1" height="15.0" fill="rgb(149.048570096548,149.048570096548,114.619993544811)" rx="2" ry="2" />
<text  x="1151.48" y="177.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_form1_cell_integral_otherwise (12,319 us, 0.35%)</title><rect x="1173.8" y="151" width="4.2" height="15.0" fill="rgb(152.48529202344,115.720572179707,115.720572179707)" rx="2" ry="2" />
<text  x="1176.85" y="161.5" ></text>
</g>
<g >
<title>firedrake.extrusion_utils.make_extruded_coords (122,484 us, 3.52%)</title><rect x="10.2" y="87" width="41.6" height="15.0" fill="rgb(152.371302506211,152.371302506211,130.722465991637)" rx="2" ry="2" />
<text  x="13.23" y="97.5" >fir..</text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (1,383 us, 0.04%)</title><rect x="1146.7" y="231" width="0.5" height="15.0" fill="rgb(154.999836084909,134.998743317637,134.998743317637)" rx="2" ry="2" />
<text  x="1149.73" y="241.5" ></text>
</g>
<g >
<title>CreateMesh (5,226 us, 0.15%)</title><rect x="61.4" y="71" width="1.8" height="15.0" fill="rgb(134.119984425411,161.887444395863,134.119984425411)" rx="2" ry="2" />
<text  x="64.44" y="81.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (1,752 us, 0.05%)</title><rect x="1173.3" y="167" width="0.5" height="15.0" fill="rgb(155.386570186,137.963704759335,137.963704759335)" rx="2" ry="2" />
<text  x="1176.25" y="177.5" ></text>
</g>
<g >
<title>firedrake.mesh.make_mesh_from_coordinates (983 us, 0.03%)</title><rect x="56.1" y="87" width="0.4" height="15.0" fill="rgb(152.938063941104,152.938063941104,133.469079099194)" rx="2" ry="2" />
<text  x="59.12" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (3,776 us, 0.11%)</title><rect x="1147.2" y="199" width="1.3" height="15.0" fill="rgb(152.516191051328,152.516191051328,131.424618171819)" rx="2" ry="2" />
<text  x="1150.20" y="209.5" ></text>
</g>
<g >
<title>firedrake.mesh.ExtrudedMeshTopology.__init__ (882 us, 0.03%)</title><rect x="55.8" y="87" width="0.3" height="15.0" fill="rgb(111.448648170771,145.931131007237,145.931131007237)" rx="2" ry="2" />
<text  x="58.82" y="97.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.derivative (955 us, 0.03%)</title><rect x="1138.8" y="103" width="0.3" height="15.0" fill="rgb(110.060357128945,110.060357128945,148.721359444312)" rx="2" ry="2" />
<text  x="1141.78" y="113.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (9,371 us, 0.27%)</title><rect x="1148.6" y="151" width="3.2" height="15.0" fill="rgb(154.848740043407,154.848740043407,142.728509441124)" rx="2" ry="2" />
<text  x="1151.64" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (15,781 us, 0.45%)</title><rect x="1124.5" y="135" width="5.3" height="15.0" fill="rgb(135.301187700364,135.301187700364,153.606681490393)" rx="2" ry="2" />
<text  x="1127.46" y="145.5" ></text>
</g>
<g >
<title>firedrake.functionspace.VectorFunctionSpace (11,825 us, 0.34%)</title><rect x="51.8" y="87" width="4.0" height="15.0" fill="rgb(137.867567083463,152.780480354972,152.780480354972)" rx="2" ry="2" />
<text  x="54.81" y="97.5" ></text>
</g>
<g >
<title>firedrake.mesh._Facets.__init__ (1,612 us, 0.05%)</title><rect x="1129.3" y="167" width="0.5" height="15.0" fill="rgb(154.980105796467,154.980105796467,143.365128090569)" rx="2" ry="2" />
<text  x="1132.27" y="177.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (2,465 us, 0.07%)</title><rect x="1141.1" y="119" width="0.8" height="15.0" fill="rgb(140.589647053299,140.589647053299,154.63025426838)" rx="2" ry="2" />
<text  x="1144.10" y="129.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (1,615 us, 0.05%)</title><rect x="1151.0" y="231" width="0.6" height="15.0" fill="rgb(133.924595884208,151.758228562573,151.758228562573)" rx="2" ry="2" />
<text  x="1154.03" y="241.5" ></text>
</g>
<g >
<title>Log_Event_form1_cell_integral_otherwise (1,483 us, 0.04%)</title><rect x="1177.1" y="167" width="0.5" height="15.0" fill="rgb(152.53582691798,116.108006371183,116.108006371183)" rx="2" ry="2" />
<text  x="1180.06" y="177.5" ></text>
</g>
<g >
<title>all (3,475,859 us, 100%)</title><rect x="10.0" y="39" width="1180.0" height="15.0" fill="rgb(152.954064033847,119.314490926163,119.314490926163)" rx="2" ry="2" />
<text  x="13.00" y="49.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (1,371 us, 0.04%)</title><rect x="1177.6" y="167" width="0.4" height="15.0" fill="rgb(134.082337046451,134.082337046451,153.370774912216)" rx="2" ry="2" />
<text  x="1180.56" y="177.5" ></text>
</g>
<g >
<title>firedrake.functionspace.make_scalar_element (457 us, 0.01%)</title><rect x="56.6" y="87" width="0.2" height="15.0" fill="rgb(155.169167435516,155.169167435516,144.281349879807)" rx="2" ry="2" />
<text  x="59.65" y="97.5" ></text>
</g>
<g >
<title>ParLoopExecute (77,347 us, 2.23%)</title><rect x="25.5" y="103" width="26.3" height="15.0" fill="rgb(137.075071389036,137.075071389036,153.950013817233)" rx="2" ry="2" />
<text  x="28.55" y="113.5" >P..</text>
</g>
<g >
<title>firedrake.ufl_expr.action (11,823 us, 0.34%)</title><rect x="1131.5" y="87" width="4.1" height="15.0" fill="rgb(111.10218955905,111.10218955905,148.923004430784)" rx="2" ry="2" />
<text  x="1134.54" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (13,644 us, 0.39%)</title><rect x="56.8" y="87" width="4.6" height="15.0" fill="rgb(144.305271659394,122.907258627198,144.305271659394)" rx="2" ry="2" />
<text  x="59.80" y="97.5" ></text>
</g>
<g >
<title>SNESFunctionEval (71,503 us, 2.06%)</title><rect x="1165.7" y="119" width="24.3" height="15.0" fill="rgb(140.601203114683,160.832362283656,140.601203114683)" rx="2" ry="2" />
<text  x="1168.73" y="129.5" >S..</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (75,883 us, 2.18%)</title><rect x="26.0" y="135" width="25.8" height="15.0" fill="rgb(133.258484295108,151.585532965398,151.585532965398)" rx="2" ry="2" />
<text  x="29.05" y="145.5" >p..</text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (1,383 us, 0.04%)</title><rect x="1146.7" y="199" width="0.5" height="15.0" fill="rgb(156.576500777968,147.086505964422,147.086505964422)" rx="2" ry="2" />
<text  x="1149.73" y="209.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (1,938 us, 0.06%)</title><rect x="1165.1" y="183" width="0.6" height="15.0" fill="rgb(155.017891111758,135.137165190146,135.137165190146)" rx="2" ry="2" />
<text  x="1168.07" y="193.5" ></text>
</g>
<g >
<title>firedrake.mesh._from_cell_list (939 us, 0.03%)</title><rect x="1131.2" y="103" width="0.3" height="15.0" fill="rgb(145.357595103556,160.058065913375,145.357595103556)" rx="2" ry="2" />
<text  x="1134.22" y="113.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (11,825 us, 0.34%)</title><rect x="51.8" y="135" width="4.0" height="15.0" fill="rgb(122.012125507774,122.012125507774,151.034604936989)" rx="2" ry="2" />
<text  x="54.81" y="145.5" ></text>
</g>
<g >
<title>firedrake.assemble.allocate_matrix (6,775 us, 0.19%)</title><rect x="1139.6" y="87" width="2.3" height="15.0" fill="rgb(109.202206757715,109.202206757715,148.555265824074)" rx="2" ry="2" />
<text  x="1142.64" y="97.5" ></text>
</g>
<g >
<title>perfsolve (141,570 us, 4.07%)</title><rect x="1141.9" y="71" width="48.1" height="15.0" fill="rgb(132.866051310895,132.866051310895,153.135364769851)" rx="2" ry="2" />
<text  x="1144.94" y="81.5" >perf..</text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (3,776 us, 0.11%)</title><rect x="1147.2" y="183" width="1.3" height="15.0" fill="rgb(153.82412432529,153.82412432529,137.763064037945)" rx="2" ry="2" />
<text  x="1150.20" y="193.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (11,825 us, 0.34%)</title><rect x="51.8" y="119" width="4.0" height="15.0" fill="rgb(133.423499221665,162.000825708101,133.423499221665)" rx="2" ry="2" />
<text  x="54.81" y="129.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (4,565 us, 0.13%)</title><rect x="1150.0" y="199" width="1.6" height="15.0" fill="rgb(152.997642598454,119.648593254813,119.648593254813)" rx="2" ry="2" />
<text  x="1153.03" y="209.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (8,890 us, 0.26%)</title><rect x="1148.8" y="167" width="3.0" height="15.0" fill="rgb(151.680568540669,151.680568540669,127.375062927859)" rx="2" ry="2" />
<text  x="1151.80" y="177.5" ></text>
</g>
<g >
<title>HybridInit (70,067 us, 2.02%)</title><rect x="1141.9" y="135" width="23.8" height="15.0" fill="rgb(106.253547164488,144.584252968571,144.584252968571)" rx="2" ry="2" />
<text  x="1144.94" y="145.5" >H..</text>
</g>
<g >
<title>CreateMesh (894 us, 0.03%)</title><rect x="1130.9" y="119" width="0.3" height="15.0" fill="rgb(131.973400292645,131.973400292645,152.962593605028)" rx="2" ry="2" />
<text  x="1133.92" y="129.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (2,174 us, 0.06%)</title><rect x="1150.8" y="215" width="0.8" height="15.0" fill="rgb(114.27736747715,146.664502679261,146.664502679261)" rx="2" ry="2" />
<text  x="1153.84" y="225.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (5,122 us, 0.15%)</title><rect x="1188.3" y="151" width="1.7" height="15.0" fill="rgb(148.743143842596,159.506930072136,148.743143842596)" rx="2" ry="2" />
<text  x="1191.26" y="161.5" ></text>
</g>
<g >
<title>firedrake.utility_meshes.SquareMesh (5,062 us, 0.15%)</title><rect x="1129.8" y="71" width="1.7" height="15.0" fill="rgb(128.686036579525,150.400083557655,150.400083557655)" rx="2" ry="2" />
<text  x="1132.82" y="81.5" ></text>
</g>
<g >
<title>Mesh: reorder (435 us, 0.01%)</title><rect x="63.1" y="87" width="0.1" height="15.0" fill="rgb(137.342098680036,105.064127867591,137.342098680036)" rx="2" ry="2" />
<text  x="66.06" y="97.5" ></text>
</g>
<g >
<title>CreateMesh (2,384 us, 0.07%)</title><rect x="1130.4" y="103" width="0.8" height="15.0" fill="rgb(135.280223926198,135.280223926198,153.602623985716)" rx="2" ry="2" />
<text  x="1133.41" y="113.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (514 us, 0.01%)</title><rect x="1189.8" y="215" width="0.2" height="15.0" fill="rgb(110.504783424054,145.686425332162,145.686425332162)" rx="2" ry="2" />
<text  x="1192.83" y="225.5" ></text>
</g>
<g >
<title>CreateMesh (1,401 us, 0.04%)</title><rect x="62.0" y="87" width="0.4" height="15.0" fill="rgb(105.619589557127,144.419893588885,144.419893588885)" rx="2" ry="2" />
<text  x="64.96" y="97.5" ></text>
</g>
<g >
<title>firedrake (3,475,859 us, 100.00%)</title><rect x="10.0" y="55" width="1180.0" height="15.0" fill="rgb(154.1907526809,128.795770553566,128.795770553566)" rx="2" ry="2" />
<text  x="13.00" y="65.5" >firedrake</text>
</g>
<g >
<title>Parloop_Cells_wrap_form0_cell_integral_otherwise (19,909 us, 0.57%)</title><rect x="1167.1" y="151" width="6.7" height="15.0" fill="rgb(140.782106861645,160.802912836476,140.782106861645)" rx="2" ry="2" />
<text  x="1170.09" y="161.5" ></text>
</g>
<g >
<title>firedrake.assemble.allocate_matrix (481 us, 0.01%)</title><rect x="1148.5" y="151" width="0.1" height="15.0" fill="rgb(153.277503196292,121.794191171574,121.794191171574)" rx="2" ry="2" />
<text  x="1151.48" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspace.MixedFunctionSpace (2,875 us, 0.08%)</title><rect x="1146.2" y="167" width="1.0" height="15.0" fill="rgb(135.048377493916,99.1864673281595,135.048377493916)" rx="2" ry="2" />
<text  x="1149.22" y="177.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (3,776 us, 0.11%)</title><rect x="1147.2" y="167" width="1.3" height="15.0" fill="rgb(155.167527853366,155.167527853366,144.273404212468)" rx="2" ry="2" />
<text  x="1150.20" y="177.5" ></text>
</g>
<g >
<title>firedrake.utility_meshes.RectangleMesh (5,062 us, 0.15%)</title><rect x="1129.8" y="87" width="1.7" height="15.0" fill="rgb(130.13229328205,150.77503899905,150.77503899905)" rx="2" ry="2" />
<text  x="1132.82" y="97.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (14,673 us, 0.42%)</title><rect x="56.5" y="71" width="4.9" height="15.0" fill="rgb(121.557191572992,148.551864481887,148.551864481887)" rx="2" ry="2" />
<text  x="59.46" y="81.5" ></text>
</g>
<g >
<title>firedrake.mesh.MeshTopology._facets (6,611 us, 0.19%)</title><rect x="1127.6" y="151" width="2.2" height="15.0" fill="rgb(152.968082433851,152.968082433851,133.614553333278)" rx="2" ry="2" />
<text  x="1130.57" y="161.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.LinearVariationalProblem.__init__ (22,300 us, 0.64%)</title><rect x="1131.5" y="71" width="7.6" height="15.0" fill="rgb(137.622704410425,161.317234165745,137.622704410425)" rx="2" ry="2" />
<text  x="1134.54" y="81.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.__init__ (8,339 us, 0.24%)</title><rect x="1139.1" y="71" width="2.8" height="15.0" fill="rgb(135.017625511653,135.017625511653,153.551798486126)" rx="2" ry="2" />
<text  x="1142.11" y="81.5" ></text>
</g>
<g >
<title>firedrake.parloops.par_loop (6,837 us, 0.20%)</title><rect x="1163.4" y="151" width="2.3" height="15.0" fill="rgb(117.514283301326,147.503703078122,147.503703078122)" rx="2" ry="2" />
<text  x="1166.40" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (1,383 us, 0.04%)</title><rect x="1146.7" y="215" width="0.5" height="15.0" fill="rgb(148.523944226329,148.523944226329,112.077575866055)" rx="2" ry="2" />
<text  x="1149.73" y="225.5" ></text>
</g>
<g >
<title>ParLoopExecute (32,842 us, 0.94%)</title><rect x="1166.9" y="135" width="11.1" height="15.0" fill="rgb(153.376563764793,122.553655530076,122.553655530076)" rx="2" ry="2" />
<text  x="1169.88" y="145.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (11,825 us, 0.34%)</title><rect x="51.8" y="151" width="4.0" height="15.0" fill="rgb(143.983073092948,122.08162480068,143.983073092948)" rx="2" ry="2" />
<text  x="54.81" y="161.5" ></text>
</g>
<g >
<title>firedrake.matrix_free.operators.ImplicitMatrixContext.__init__ (6,775 us, 0.19%)</title><rect x="1139.6" y="103" width="2.3" height="15.0" fill="rgb(129.309600650907,162.670530126597,129.309600650907)" rx="2" ry="2" />
<text  x="1142.64" y="113.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (1,025 us, 0.03%)</title><rect x="1189.7" y="183" width="0.3" height="15.0" fill="rgb(152.354386435002,114.71696266835,114.71696266835)" rx="2" ry="2" />
<text  x="1192.65" y="193.5" ></text>
</g>
<g >
<title>firedrake.function.Function.split (955 us, 0.03%)</title><rect x="1138.8" y="119" width="0.3" height="15.0" fill="rgb(156.674509161647,147.837903572624,147.837903572624)" rx="2" ry="2" />
<text  x="1141.78" y="129.5" ></text>
</g>
<g >
<title>firedrake.functionspace.VectorFunctionSpace (17,679 us, 0.51%)</title><rect x="1123.8" y="71" width="6.0" height="15.0" fill="rgb(146.428494874754,146.428494874754,155.760353846727)" rx="2" ry="2" />
<text  x="1126.82" y="81.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (13,644 us, 0.39%)</title><rect x="56.8" y="103" width="4.6" height="15.0" fill="rgb(153.022648227743,153.022648227743,133.878987565217)" rx="2" ry="2" />
<text  x="59.80" y="113.5" ></text>
</g>
<g >
<title>firedrake.functionspace.MixedFunctionSpace (1,093 us, 0.03%)</title><rect x="1123.4" y="71" width="0.4" height="15.0" fill="rgb(123.230518732288,123.230518732288,151.270422980443)" rx="2" ry="2" />
<text  x="1126.45" y="81.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (13,644 us, 0.39%)</title><rect x="56.8" y="119" width="4.6" height="15.0" fill="rgb(128.854325826763,162.744644632853,128.854325826763)" rx="2" ry="2" />
<text  x="59.80" y="129.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (479 us, 0.01%)</title><rect x="1123.7" y="87" width="0.1" height="15.0" fill="rgb(137.167692506382,137.167692506382,153.967940485106)" rx="2" ry="2" />
<text  x="1126.65" y="97.5" ></text>
</g>
<g >
<title>PetscBarrier (2,560 us, 0.07%)</title><rect x="63.2" y="71" width="0.9" height="15.0" fill="rgb(156.691918314548,147.97137374487,147.97137374487)" rx="2" ry="2" />
<text  x="66.21" y="81.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (2,807 us, 0.08%)</title><rect x="1189.0" y="167" width="1.0" height="15.0" fill="rgb(140.307874243481,140.307874243481,154.575717595512)" rx="2" ry="2" />
<text  x="1192.05" y="177.5" ></text>
</g>
<g >
<title>firedrake.functionspace.make_scalar_element (1,084 us, 0.03%)</title><rect x="1150.5" y="215" width="0.3" height="15.0" fill="rgb(146.454101547777,146.454101547777,155.765309976989)" rx="2" ry="2" />
<text  x="1153.48" y="225.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (16,454 us, 0.47%)</title><rect x="1124.2" y="103" width="5.6" height="15.0" fill="rgb(155.053125386932,135.407294633147,135.407294633147)" rx="2" ry="2" />
<text  x="1127.23" y="113.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_pyop2_kernel_uniform_extrusion (76,763 us, 2.21%)</title><rect x="25.7" y="119" width="26.1" height="15.0" fill="rgb(132.774325390204,151.460010286349,151.460010286349)" rx="2" ry="2" />
<text  x="28.75" y="129.5" >P..</text>
</g>
<g >
<title>CreateFunctionSpace (17,010 us, 0.49%)</title><rect x="1124.0" y="87" width="5.8" height="15.0" fill="rgb(117.326260379472,147.454956394678,147.454956394678)" rx="2" ry="2" />
<text  x="1127.04" y="97.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (9,522 us, 0.27%)</title><rect x="1135.6" y="103" width="3.2" height="15.0" fill="rgb(141.566016902156,160.675299574068,141.566016902156)" rx="2" ry="2" />
<text  x="1138.55" y="113.5" ></text>
</g>
<g >
<title>firedrake.interpolation.make_interpolator (33,172 us, 0.95%)</title><rect x="1152.1" y="151" width="11.3" height="15.0" fill="rgb(129.152189237351,129.152189237351,152.416552755616)" rx="2" ry="2" />
<text  x="1155.14" y="161.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (1,938 us, 0.06%)</title><rect x="1165.1" y="199" width="0.6" height="15.0" fill="rgb(136.559340670597,136.559340670597,153.850194968503)" rx="2" ry="2" />
<text  x="1168.07" y="209.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (1,025 us, 0.03%)</title><rect x="1189.7" y="199" width="0.3" height="15.0" fill="rgb(137.718866152373,161.301579928683,137.718866152373)" rx="2" ry="2" />
<text  x="1192.65" y="209.5" ></text>
</g>
<g >
<title>firedrake.function.Function.__init__ (948 us, 0.03%)</title><rect x="1151.8" y="151" width="0.3" height="15.0" fill="rgb(111.076112475109,111.076112475109,148.917957253247)" rx="2" ry="2" />
<text  x="1154.82" y="161.5" ></text>
</g>
<g >
<title>ParLoopExecute (1,938 us, 0.06%)</title><rect x="1165.1" y="167" width="0.6" height="15.0" fill="rgb(112.380789723092,112.380789723092,149.170475430276)" rx="2" ry="2" />
<text  x="1168.07" y="177.5" ></text>
</g>
<g >
<title>Mesh: numbering (1,842 us, 0.05%)</title><rect x="62.4" y="87" width="0.7" height="15.0" fill="rgb(134.54486302307,97.8962114966167,134.54486302307)" rx="2" ry="2" />
<text  x="65.44" y="97.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (6,524 us, 0.19%)</title><rect x="1149.6" y="183" width="2.2" height="15.0" fill="rgb(134.996826842866,134.996826842866,153.547772937329)" rx="2" ry="2" />
<text  x="1152.61" y="193.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (1,615 us, 0.05%)</title><rect x="1151.0" y="247" width="0.6" height="15.0" fill="rgb(150.765954446572,150.765954446572,122.942702318001)" rx="2" ry="2" />
<text  x="1154.03" y="257.5" ></text>
</g>
<g >
<title>firedrake.__init__ (3,120,517 us, 89.78%)</title><rect x="64.1" y="71" width="1059.3" height="15.0" fill="rgb(122.431067030857,122.431067030857,151.115690393069)" rx="2" ry="2" />
<text  x="67.08" y="81.5" >firedrake.__init__</text>
</g>
<g >
<title>CreateFunctionSpace (7,141 us, 0.21%)</title><rect x="1146.1" y="151" width="2.4" height="15.0" fill="rgb(155.280791010746,137.152731082386,137.152731082386)" rx="2" ry="2" />
<text  x="1149.05" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.WithGeometry.split (705 us, 0.02%)</title><rect x="1151.6" y="199" width="0.2" height="15.0" fill="rgb(126.189079012953,149.752724188543,149.752724188543)" rx="2" ry="2" />
<text  x="1154.58" y="209.5" ></text>
</g>
<g >
<title>CreateExtMesh (136,840 us, 3.94%)</title><rect x="10.0" y="71" width="46.5" height="15.0" fill="rgb(145.002436284313,160.115882465344,145.002436284313)" rx="2" ry="2" />
<text  x="13.00" y="81.5" >Crea..</text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (15,781 us, 0.45%)</title><rect x="1124.5" y="119" width="5.3" height="15.0" fill="rgb(130.146722520375,130.146722520375,152.60904306846)" rx="2" ry="2" />
<text  x="1127.46" y="129.5" ></text>
</g>
<g >
<title>firedrake.mesh._Facets.__init__ (996 us, 0.03%)</title><rect x="55.5" y="167" width="0.3" height="15.0" fill="rgb(149.091088462782,149.091088462782,114.826044088865)" rx="2" ry="2" />
<text  x="58.48" y="177.5" ></text>
</g>
</g>
</svg>
