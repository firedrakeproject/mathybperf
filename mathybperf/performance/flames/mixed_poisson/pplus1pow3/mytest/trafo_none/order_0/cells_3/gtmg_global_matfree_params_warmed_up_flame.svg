<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="299" onload="init(evt)" viewBox="0 0 1200 299" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:13px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:18px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 13 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (1 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="299.0" fill="url(#background)"  />
<text id="title" x="600.00" y="26" >Firedrake example</text>
<text id="details" x="10.00" y="281" > </text>
<text id="unzoom" x="10.00" y="26" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="26" >Search</text>
<text id="ignorecase" x="1174.00" y="26" >ic</text>
<text id="matched" x="1090.00" y="281" > </text>
<g id="frames">
<g >
<title>firedrake.functionspacedata.get_shared_data (12,925 us, 0.47%)</title><rect x="55.7" y="103" width="5.5" height="15.0" fill="rgb(153.362395564078,122.445032657929,122.445032657929)" rx="2" ry="2" />
<text  x="58.69" y="113.5" ></text>
</g>
<g >
<title>CreateMesh (1,875 us, 0.07%)</title><rect x="61.2" y="71" width="0.8" height="15.0" fill="rgb(152.881665602546,152.881665602546,133.195764073877)" rx="2" ry="2" />
<text  x="64.21" y="81.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (5,988 us, 0.22%)</title><rect x="51.9" y="119" width="2.5" height="15.0" fill="rgb(141.76879338732,141.76879338732,154.858476139481)" rx="2" ry="2" />
<text  x="54.86" y="129.5" ></text>
</g>
<g >
<title>all (2,763,284 us, 100%)</title><rect x="10.0" y="39" width="1180.0" height="15.0" fill="rgb(144.424890682752,154.480527214047,154.480527214047)" rx="2" ry="2" />
<text  x="13.00" y="49.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (5,380 us, 0.19%)</title><rect x="850.4" y="87" width="2.3" height="15.0" fill="rgb(104.251911128777,144.065310292646,144.065310292646)" rx="2" ry="2" />
<text  x="853.37" y="97.5" ></text>
</g>
<g >
<title>Mesh: numbering (820 us, 0.03%)</title><rect x="61.7" y="87" width="0.3" height="15.0" fill="rgb(148.029104587308,148.029104587308,109.679506846185)" rx="2" ry="2" />
<text  x="64.66" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (381 us, 0.01%)</title><rect x="1189.8" y="231" width="0.2" height="15.0" fill="rgb(156.379141221369,145.573416030494,145.573416030494)" rx="2" ry="2" />
<text  x="1192.84" y="241.5" ></text>
</g>
<g >
<title>firedrake.extrusion_utils.make_extruded_coords (97,175 us, 3.52%)</title><rect x="10.2" y="87" width="41.5" height="15.0" fill="rgb(156.561431598311,146.970975587047,146.970975587047)" rx="2" ry="2" />
<text  x="13.23" y="97.5" >fir..</text>
</g>
<g >
<title>CreateMesh (444 us, 0.02%)</title><rect x="61.5" y="87" width="0.2" height="15.0" fill="rgb(153.600757670368,124.272475472819,124.272475472819)" rx="2" ry="2" />
<text  x="64.47" y="97.5" ></text>
</g>
<g >
<title>firedrake.mesh._Facets.__init__ (671 us, 0.02%)</title><rect x="852.4" y="167" width="0.3" height="15.0" fill="rgb(114.389819636308,146.693656942747,146.693656942747)" rx="2" ry="2" />
<text  x="855.39" y="177.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (5,988 us, 0.22%)</title><rect x="51.9" y="135" width="2.5" height="15.0" fill="rgb(137.137582460479,137.137582460479,153.962112734286)" rx="2" ry="2" />
<text  x="54.86" y="145.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (6,324 us, 0.23%)</title><rect x="51.7" y="103" width="2.7" height="15.0" fill="rgb(153.548545442704,123.872181727395,123.872181727395)" rx="2" ry="2" />
<text  x="54.72" y="113.5" ></text>
</g>
<g >
<title>firedrake.matrix_free.operators.ImplicitMatrixContext.__init__ (6,497 us, 0.24%)</title><rect x="863.0" y="103" width="2.7" height="15.0" fill="rgb(149.984319675211,149.984319675211,119.154779964485)" rx="2" ry="2" />
<text  x="865.97" y="113.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.action (10,639 us, 0.39%)</title><rect x="853.6" y="87" width="4.5" height="15.0" fill="rgb(137.593975209698,161.321911012375,137.593975209698)" rx="2" ry="2" />
<text  x="856.57" y="97.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (1,307 us, 0.05%)</title><rect x="1189.4" y="183" width="0.6" height="15.0" fill="rgb(152.756863246281,117.802618221486,117.802618221486)" rx="2" ry="2" />
<text  x="1192.44" y="193.5" ></text>
</g>
<g >
<title>firedrake.function.Function.split (826 us, 0.03%)</title><rect x="862.0" y="119" width="0.4" height="15.0" fill="rgb(138.795632027618,153.021089784938,153.021089784938)" rx="2" ry="2" />
<text  x="865.01" y="129.5" ></text>
</g>
<g >
<title>firedrake.mesh.ExtrudedMeshTopology.__init__ (731 us, 0.03%)</title><rect x="54.4" y="87" width="0.3" height="15.0" fill="rgb(154.158202697151,128.546220678159,128.546220678159)" rx="2" ry="2" />
<text  x="57.42" y="97.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.LinearVariationalProblem.__init__ (20,591 us, 0.75%)</title><rect x="853.6" y="71" width="8.8" height="15.0" fill="rgb(141.376047092273,160.706224891956,141.376047092273)" rx="2" ry="2" />
<text  x="856.57" y="81.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.action (4,136 us, 0.15%)</title><rect x="863.0" y="119" width="1.7" height="15.0" fill="rgb(141.094626650947,114.679980793053,141.094626650947)" rx="2" ry="2" />
<text  x="865.97" y="129.5" ></text>
</g>
<g >
<title>firedrake (2,763,284 us, 100.00%)</title><rect x="10.0" y="55" width="1180.0" height="15.0" fill="rgb(134.504914330512,161.824781388056,134.504914330512)" rx="2" ry="2" />
<text  x="13.00" y="65.5" >firedrake</text>
</g>
<g >
<title>Parloop_Cells_wrap_pyop2_kernel_uniform_extrusion (65,581 us, 2.37%)</title><rect x="23.7" y="119" width="28.0" height="15.0" fill="rgb(124.775059830812,124.775059830812,151.569366418867)" rx="2" ry="2" />
<text  x="26.72" y="129.5" >P..</text>
</g>
<g >
<title>firedrake.ufl_expr.derivative (826 us, 0.03%)</title><rect x="862.0" y="103" width="0.4" height="15.0" fill="rgb(122.549028882965,122.549028882965,151.138521719284)" rx="2" ry="2" />
<text  x="865.01" y="113.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (5,988 us, 0.22%)</title><rect x="51.9" y="151" width="2.5" height="15.0" fill="rgb(145.828511437135,145.828511437135,155.644228020091)" rx="2" ry="2" />
<text  x="54.86" y="161.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.solve (759,337 us, 27.48%)</title><rect x="865.7" y="87" width="324.3" height="15.0" fill="rgb(152.357348321984,152.357348321984,130.654841868078)" rx="2" ry="2" />
<text  x="868.74" y="97.5" >firedrake.variational_solver.NonlinearVa..</text>
</g>
<g >
<title>firedrake.functionspace.MixedFunctionSpace (919 us, 0.03%)</title><rect x="849.8" y="71" width="0.4" height="15.0" fill="rgb(119.710339545496,119.710339545496,150.589097976548)" rx="2" ry="2" />
<text  x="852.83" y="81.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (329 us, 0.01%)</title><rect x="850.1" y="119" width="0.1" height="15.0" fill="rgb(140.337965139798,153.420953925133,153.420953925133)" rx="2" ry="2" />
<text  x="853.09" y="129.5" ></text>
</g>
<g >
<title>PetscBarrier (917 us, 0.03%)</title><rect x="62.0" y="71" width="0.4" height="15.0" fill="rgb(154.59651930042,131.906647969885,131.906647969885)" rx="2" ry="2" />
<text  x="65.01" y="81.5" ></text>
</g>
<g >
<title>ParLoopExecute (65,970 us, 2.39%)</title><rect x="23.6" y="103" width="28.1" height="15.0" fill="rgb(110.572689289636,110.572689289636,148.820520507671)" rx="2" ry="2" />
<text  x="26.55" y="113.5" >P..</text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (13,312 us, 0.48%)</title><rect x="55.5" y="87" width="5.7" height="15.0" fill="rgb(131.725102411694,131.725102411694,152.91453595065)" rx="2" ry="2" />
<text  x="58.53" y="97.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (729,688 us, 26.41%)</title><rect x="865.7" y="167" width="311.6" height="15.0" fill="rgb(118.982580684583,147.884372770077,147.884372770077)" rx="2" ry="2" />
<text  x="868.74" y="177.5" >pyop2.global_kernel.GlobalKernel.compile</text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (3,069 us, 0.11%)</title><rect x="1188.7" y="167" width="1.3" height="15.0" fill="rgb(107.483558405266,144.903144771736,144.903144771736)" rx="2" ry="2" />
<text  x="1191.69" y="177.5" ></text>
</g>
<g >
<title>ParLoopExecute (729,688 us, 26.41%)</title><rect x="865.7" y="135" width="311.6" height="15.0" fill="rgb(131.788093873331,131.788093873331,152.926727846451)" rx="2" ry="2" />
<text  x="868.74" y="145.5" >ParLoopExecute</text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (5,380 us, 0.19%)</title><rect x="850.4" y="119" width="2.3" height="15.0" fill="rgb(126.626963511412,163.107238498142,126.626963511412)" rx="2" ry="2" />
<text  x="853.37" y="129.5" ></text>
</g>
<g >
<title>firedrake.assemble.allocate_matrix (6,497 us, 0.24%)</title><rect x="863.0" y="87" width="2.7" height="15.0" fill="rgb(154.302651694262,129.653662989344,129.653662989344)" rx="2" ry="2" />
<text  x="865.97" y="97.5" ></text>
</g>
<g >
<title>firedrake.utility_meshes.RectangleMesh (2,101 us, 0.08%)</title><rect x="852.7" y="87" width="0.9" height="15.0" fill="rgb(106.086306633934,144.540894312501,144.540894312501)" rx="2" ry="2" />
<text  x="855.67" y="97.5" ></text>
</g>
<g >
<title>firedrake.mesh.make_mesh_from_coordinates (897 us, 0.03%)</title><rect x="54.7" y="87" width="0.4" height="15.0" fill="rgb(153.200883773794,153.200883773794,134.742744442234)" rx="2" ry="2" />
<text  x="57.73" y="97.5" ></text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (29,649 us, 1.07%)</title><rect x="1177.3" y="135" width="12.7" height="15.0" fill="rgb(116.758892440602,116.758892440602,150.017850149794)" rx="2" ry="2" />
<text  x="1180.34" y="145.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (329 us, 0.01%)</title><rect x="850.1" y="103" width="0.1" height="15.0" fill="rgb(121.46790119153,121.46790119153,150.929271198361)" rx="2" ry="2" />
<text  x="853.09" y="113.5" ></text>
</g>
<g >
<title>firedrake.mesh._Facets.__init__ (537 us, 0.02%)</title><rect x="54.2" y="167" width="0.2" height="15.0" fill="rgb(152.612090287063,116.692692200817,116.692692200817)" rx="2" ry="2" />
<text  x="57.19" y="177.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_form0_cell_integral_otherwise (729,688 us, 26.41%)</title><rect x="865.7" y="151" width="311.6" height="15.0" fill="rgb(152.168742271417,113.293690747529,113.293690747529)" rx="2" ry="2" />
<text  x="868.74" y="161.5" >Parloop_Cells_wrap_form0_cell_integral..</text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (9,126 us, 0.33%)</title><rect x="858.1" y="103" width="3.9" height="15.0" fill="rgb(144.569945520856,160.186287938465,144.569945520856)" rx="2" ry="2" />
<text  x="861.11" y="113.5" ></text>
</g>
<g >
<title>firedrake.__init__ (1,843,977 us, 66.73%)</title><rect x="62.4" y="71" width="787.4" height="15.0" fill="rgb(144.946017006943,144.946017006943,155.473422646505)" rx="2" ry="2" />
<text  x="65.40" y="81.5" >firedrake.__init__</text>
</g>
<g >
<title>firedrake.utility_meshes.SquareMesh (2,101 us, 0.08%)</title><rect x="852.7" y="71" width="0.9" height="15.0" fill="rgb(122.793035551835,122.793035551835,151.185748816484)" rx="2" ry="2" />
<text  x="855.67" y="81.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (5,380 us, 0.19%)</title><rect x="850.4" y="135" width="2.3" height="15.0" fill="rgb(155.056053483463,155.056053483463,143.733182266014)" rx="2" ry="2" />
<text  x="853.37" y="145.5" ></text>
</g>
<g >
<title>CreateExtMesh (105,654 us, 3.82%)</title><rect x="10.0" y="71" width="45.1" height="15.0" fill="rgb(153.936642846229,153.936642846229,138.308346100955)" rx="2" ry="2" />
<text  x="13.00" y="81.5" >Cre..</text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (12,925 us, 0.47%)</title><rect x="55.7" y="119" width="5.5" height="15.0" fill="rgb(155.828684359483,141.353246756033,141.353246756033)" rx="2" ry="2" />
<text  x="58.69" y="129.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (65,038 us, 2.35%)</title><rect x="23.9" y="135" width="27.8" height="15.0" fill="rgb(156.646283572253,147.621507387276,147.621507387276)" rx="2" ry="2" />
<text  x="26.95" y="145.5" >p..</text>
</g>
<g >
<title>CreateMesh (795 us, 0.03%)</title><rect x="853.0" y="103" width="0.3" height="15.0" fill="rgb(133.796659700425,95.9789404823381,133.796659700425)" rx="2" ry="2" />
<text  x="855.97" y="113.5" ></text>
</g>
<g >
<title>firedrake.functionspace.VectorFunctionSpace (5,725 us, 0.21%)</title><rect x="850.2" y="71" width="2.5" height="15.0" fill="rgb(155.674104400452,140.168133736799,140.168133736799)" rx="2" ry="2" />
<text  x="853.23" y="81.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (14,273 us, 0.52%)</title><rect x="55.1" y="71" width="6.1" height="15.0" fill="rgb(126.207453937448,163.175530754369,126.207453937448)" rx="2" ry="2" />
<text  x="58.12" y="81.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.__init__ (7,915 us, 0.29%)</title><rect x="862.4" y="71" width="3.3" height="15.0" fill="rgb(152.445994078898,152.445994078898,131.084432843891)" rx="2" ry="2" />
<text  x="865.36" y="81.5" ></text>
</g>
<g >
<title>CreateMesh (454 us, 0.02%)</title><rect x="853.1" y="119" width="0.2" height="15.0" fill="rgb(118.802266726104,118.802266726104,150.413341946988)" rx="2" ry="2" />
<text  x="856.11" y="129.5" ></text>
</g>
<g >
<title>firedrake.mesh.MeshTopology._facets (2,306 us, 0.08%)</title><rect x="851.7" y="151" width="1.0" height="15.0" fill="rgb(114.284513079404,114.284513079404,149.538938015368)" rx="2" ry="2" />
<text  x="854.69" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (381 us, 0.01%)</title><rect x="1189.8" y="215" width="0.2" height="15.0" fill="rgb(139.12543183393,161.072604120058,139.12543183393)" rx="2" ry="2" />
<text  x="1192.84" y="225.5" ></text>
</g>
<g >
<title>SNESFunctionEval (759,337 us, 27.48%)</title><rect x="865.7" y="119" width="324.3" height="15.0" fill="rgb(142.195535264869,153.902546179781,153.902546179781)" rx="2" ry="2" />
<text  x="868.74" y="129.5" >SNESFunctionEval</text>
</g>
<g >
<title>CreateFunctionSpace (908 us, 0.03%)</title><rect x="1189.6" y="199" width="0.4" height="15.0" fill="rgb(133.830399714095,133.830399714095,153.322012847889)" rx="2" ry="2" />
<text  x="1192.61" y="209.5" ></text>
</g>
<g >
<title>firedrake.functionspace.make_scalar_element (431 us, 0.02%)</title><rect x="55.3" y="87" width="0.2" height="15.0" fill="rgb(112.272957542939,146.144840844466,146.144840844466)" rx="2" ry="2" />
<text  x="58.34" y="97.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (5,323 us, 0.19%)</title><rect x="1187.7" y="151" width="2.3" height="15.0" fill="rgb(155.012228843981,135.093754470517,135.093754470517)" rx="2" ry="2" />
<text  x="1190.73" y="161.5" ></text>
</g>
<g >
<title>firedrake.mesh._from_cell_list (609 us, 0.02%)</title><rect x="853.3" y="103" width="0.3" height="15.0" fill="rgb(141.012696463269,153.595884268255,153.595884268255)" rx="2" ry="2" />
<text  x="856.31" y="113.5" ></text>
</g>
<g >
<title>perfsolve (759,337 us, 27.48%)</title><rect x="865.7" y="71" width="324.3" height="15.0" fill="rgb(127.455498511787,127.455498511787,152.088161002281)" rx="2" ry="2" />
<text  x="868.74" y="81.5" >perfsolve</text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalProblem.__init__ (9,952 us, 0.36%)</title><rect x="858.1" y="87" width="4.3" height="15.0" fill="rgb(152.695344359367,152.695344359367,132.292822664623)" rx="2" ry="2" />
<text  x="861.11" y="97.5" ></text>
</g>
<g >
<title>SNESSolve (759,337 us, 27.48%)</title><rect x="865.7" y="103" width="324.3" height="15.0" fill="rgb(155.885952759772,141.792304491583,141.792304491583)" rx="2" ry="2" />
<text  x="868.74" y="113.5" >SNESSolve</text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (5,380 us, 0.19%)</title><rect x="850.4" y="103" width="2.3" height="15.0" fill="rgb(132.01752100468,151.263801741954,151.263801741954)" rx="2" ry="2" />
<text  x="853.37" y="113.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (2,361 us, 0.09%)</title><rect x="864.7" y="119" width="1.0" height="15.0" fill="rgb(153.944401096016,126.90707506946,126.90707506946)" rx="2" ry="2" />
<text  x="867.73" y="129.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (381 us, 0.01%)</title><rect x="1189.8" y="247" width="0.2" height="15.0" fill="rgb(151.0323201521,151.0323201521,124.233551506329)" rx="2" ry="2" />
<text  x="1192.84" y="257.5" ></text>
</g>
<g >
<title>firedrake.functionspace.VectorFunctionSpace (6,324 us, 0.23%)</title><rect x="51.7" y="87" width="2.7" height="15.0" fill="rgb(151.324395255892,151.324395255892,125.648992393939)" rx="2" ry="2" />
<text  x="54.72" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (329 us, 0.01%)</title><rect x="850.1" y="87" width="0.1" height="15.0" fill="rgb(114.041258166841,114.041258166841,149.491856419389)" rx="2" ry="2" />
<text  x="853.09" y="97.5" ></text>
</g>
</g>
</svg>
