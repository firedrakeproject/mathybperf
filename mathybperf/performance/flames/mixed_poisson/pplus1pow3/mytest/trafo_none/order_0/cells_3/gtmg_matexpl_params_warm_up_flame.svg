<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="251" onload="init(evt)" viewBox="0 0 1200 251" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:13px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:18px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 13 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (1 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="251.0" fill="url(#background)"  />
<text id="title" x="600.00" y="26" >Firedrake example</text>
<text id="details" x="10.00" y="233" > </text>
<text id="unzoom" x="10.00" y="26" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="26" >Search</text>
<text id="ignorecase" x="1174.00" y="26" >ic</text>
<text id="matched" x="1090.00" y="233" > </text>
<g id="frames">
<g >
<title>firedrake.mesh.MeshTopology._facets (2,963 us, 0.01%)</title><rect x="218.4" y="151" width="0.1" height="15.0" fill="rgb(126.072168263035,126.072168263035,151.820419663813)" rx="2" ry="2" />
<text  x="221.39" y="161.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalProblem.__init__ (10,717 us, 0.04%)</title><rect x="219.2" y="87" width="0.5" height="15.0" fill="rgb(153.15205563106,153.15205563106,134.506115750523)" rx="2" ry="2" />
<text  x="222.19" y="97.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (2,687,495 us, 9.88%)</title><rect x="935.8" y="167" width="116.6" height="15.0" fill="rgb(128.504694936369,128.504694936369,152.291231278007)" rx="2" ry="2" />
<text  x="938.81" y="177.5" >pyop2.global_..</text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (4,662 us, 0.02%)</title><rect x="220.7" y="167" width="0.2" height="15.0" fill="rgb(152.219122429299,152.219122429299,129.984977926601)" rx="2" ry="2" />
<text  x="223.70" y="177.5" ></text>
</g>
<g >
<title>SNESFunctionEval (5,880,211 us, 21.62%)</title><rect x="934.9" y="119" width="255.1" height="15.0" fill="rgb(145.332946857309,145.332946857309,155.548312294963)" rx="2" ry="2" />
<text  x="937.89" y="129.5" >SNESFunctionEval</text>
</g>
<g >
<title>CreateExtMesh (1,119,004 us, 4.11%)</title><rect x="10.0" y="71" width="48.5" height="15.0" fill="rgb(140.370218425498,140.370218425498,154.587784211387)" rx="2" ry="2" />
<text  x="13.00" y="81.5" >Crea..</text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (5,251 us, 0.02%)</title><rect x="903.8" y="151" width="0.2" height="15.0" fill="rgb(129.310036863046,129.310036863046,152.447103908977)" rx="2" ry="2" />
<text  x="906.80" y="161.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (3,526 us, 0.01%)</title><rect x="1189.8" y="167" width="0.2" height="15.0" fill="rgb(154.641183428184,154.641183428184,141.722658151967)" rx="2" ry="2" />
<text  x="1192.85" y="177.5" ></text>
</g>
<g >
<title>firedrake.utility_meshes.SquareMesh (3,292 us, 0.01%)</title><rect x="218.5" y="71" width="0.2" height="15.0" fill="rgb(110.851976701931,145.776438404204,145.776438404204)" rx="2" ry="2" />
<text  x="221.52" y="81.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.action (12,199 us, 0.04%)</title><rect x="218.7" y="87" width="0.5" height="15.0" fill="rgb(148.545642479118,148.545642479118,112.182728937263)" rx="2" ry="2" />
<text  x="221.67" y="97.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (680,989 us, 2.50%)</title><rect x="905.3" y="183" width="29.6" height="15.0" fill="rgb(143.179675659424,160.412610939163,143.179675659424)" rx="2" ry="2" />
<text  x="908.35" y="193.5" >P..</text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (11,964 us, 0.04%)</title><rect x="58.5" y="87" width="0.6" height="15.0" fill="rgb(146.87959930786,146.87959930786,155.847664382166)" rx="2" ry="2" />
<text  x="61.55" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (7,249 us, 0.03%)</title><rect x="218.2" y="119" width="0.3" height="15.0" fill="rgb(148.504128819462,148.504128819462,111.981547355852)" rx="2" ry="2" />
<text  x="221.21" y="129.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.solve (22,358,336 us, 82.20%)</title><rect x="220.0" y="87" width="970.0" height="15.0" fill="rgb(149.11557829564,149.11557829564,114.944725586563)" rx="2" ry="2" />
<text  x="222.99" y="97.5" >firedrake.variational_solver.NonlinearVariationalSolver.solve</text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (2,164,676 us, 7.96%)</title><rect x="809.6" y="167" width="93.9" height="15.0" fill="rgb(144.853701267707,160.140095142466,144.853701267707)" rx="2" ry="2" />
<text  x="812.59" y="177.5" >firedrake...</text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (7,027 us, 0.03%)</title><rect x="58.2" y="151" width="0.3" height="15.0" fill="rgb(129.031250795386,162.715842893774,129.031250795386)" rx="2" ry="2" />
<text  x="61.24" y="161.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (1,072,848 us, 3.94%)</title><rect x="11.7" y="135" width="46.5" height="15.0" fill="rgb(114.929844291551,114.929844291551,149.663840830623)" rx="2" ry="2" />
<text  x="14.70" y="145.5" >pyop..</text>
</g>
<g >
<title>Log_Event_form0_cell_integral_otherwise (8,327 us, 0.03%)</title><rect x="935.4" y="167" width="0.4" height="15.0" fill="rgb(142.771677749993,154.051916453702,154.051916453702)" rx="2" ry="2" />
<text  x="938.45" y="177.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (5,251 us, 0.02%)</title><rect x="903.8" y="199" width="0.2" height="15.0" fill="rgb(144.483929814363,160.200290495336,144.483929814363)" rx="2" ry="2" />
<text  x="906.80" y="209.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.LinearVariationalProblem.__init__ (22,916 us, 0.08%)</title><rect x="218.7" y="71" width="1.0" height="15.0" fill="rgb(120.012967396748,148.151510065823,148.151510065823)" rx="2" ry="2" />
<text  x="221.67" y="81.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (5,251 us, 0.02%)</title><rect x="903.8" y="183" width="0.2" height="15.0" fill="rgb(153.750297878402,125.418950401084,125.418950401084)" rx="2" ry="2" />
<text  x="906.80" y="193.5" ></text>
</g>
<g >
<title>firedrake.assemble.allocate_matrix (7,713 us, 0.03%)</title><rect x="219.7" y="87" width="0.3" height="15.0" fill="rgb(130.353263442532,130.353263442532,152.649018730813)" rx="2" ry="2" />
<text  x="222.66" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (7,249 us, 0.03%)</title><rect x="218.2" y="135" width="0.3" height="15.0" fill="rgb(153.362891843309,153.362891843309,135.527860471419)" rx="2" ry="2" />
<text  x="221.21" y="145.5" ></text>
</g>
<g >
<title>firedrake.utility_meshes.RectangleMesh (3,292 us, 0.01%)</title><rect x="218.5" y="87" width="0.2" height="15.0" fill="rgb(155.815208587338,155.815208587338,147.412164692486)" rx="2" ry="2" />
<text  x="221.52" y="97.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (10,717 us, 0.04%)</title><rect x="219.2" y="103" width="0.5" height="15.0" fill="rgb(155.087146292777,155.087146292777,143.883862803455)" rx="2" ry="2" />
<text  x="222.19" y="113.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (11,912,090 us, 43.80%)</title><rect x="292.8" y="199" width="516.8" height="15.0" fill="rgb(145.157159416178,160.090694978762,145.157159416178)" rx="2" ry="2" />
<text  x="295.79" y="209.5" >pyop2.global_kernel.GlobalKernel.compile</text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (7,249 us, 0.03%)</title><rect x="218.2" y="103" width="0.3" height="15.0" fill="rgb(153.8014806091,125.811351336436,125.811351336436)" rx="2" ry="2" />
<text  x="221.21" y="113.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_slate_wrapper (11,912,090 us, 43.80%)</title><rect x="292.8" y="183" width="516.8" height="15.0" fill="rgb(138.309452166616,107.542971176952,138.309452166616)" rx="2" ry="2" />
<text  x="295.79" y="193.5" >Parloop_Cells_wrap_slate_wrapper</text>
</g>
<g >
<title>ParLoopExecute (1,072,848 us, 3.94%)</title><rect x="11.7" y="103" width="46.5" height="15.0" fill="rgb(118.097085926475,147.654800055012,147.654800055012)" rx="2" ry="2" />
<text  x="14.70" y="113.5" >ParL..</text>
</g>
<g >
<title>CreateSparsity (6,697 us, 0.02%)</title><rect x="903.5" y="167" width="0.3" height="15.0" fill="rgb(126.039459925251,126.039459925251,151.81408901779)" rx="2" ry="2" />
<text  x="906.51" y="177.5" ></text>
</g>
<g >
<title>firedrake.__init__ (3,668,172 us, 13.49%)</title><rect x="59.1" y="71" width="159.1" height="15.0" fill="rgb(154.2285738834,154.2285738834,139.723088819554)" rx="2" ry="2" />
<text  x="62.07" y="81.5" >firedrake.__init__</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (2,193,687 us, 8.07%)</title><rect x="1052.9" y="167" width="95.2" height="15.0" fill="rgb(153.660509064741,153.660509064741,136.970159313743)" rx="2" ry="2" />
<text  x="1055.89" y="177.5" >pyop2.glob..</text>
</g>
<g >
<title>HybridInit (16,478,125 us, 60.58%)</title><rect x="220.0" y="135" width="714.9" height="15.0" fill="rgb(148.740648043743,148.740648043743,113.127755904294)" rx="2" ry="2" />
<text  x="222.99" y="145.5" >HybridInit</text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (11,964 us, 0.04%)</title><rect x="58.5" y="119" width="0.6" height="15.0" fill="rgb(119.220520007126,119.220520007126,150.494294194928)" rx="2" ry="2" />
<text  x="61.55" y="129.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_form1_cell_integral_otherwise (2,204,960 us, 8.11%)</title><rect x="1052.4" y="151" width="95.7" height="15.0" fill="rgb(116.189725115533,116.189725115533,149.907688732039)" rx="2" ry="2" />
<text  x="1055.40" y="161.5" >Parloop_Ce..</text>
</g>
<g >
<title>perfsolve (22,358,336 us, 82.20%)</title><rect x="220.0" y="71" width="970.0" height="15.0" fill="rgb(153.262798242059,121.681453189121,121.681453189121)" rx="2" ry="2" />
<text  x="222.99" y="81.5" >perfsolve</text>
</g>
<g >
<title>firedrake.functionspace.VectorFunctionSpace (7,027 us, 0.03%)</title><rect x="58.2" y="87" width="0.3" height="15.0" fill="rgb(130.501892737726,150.870861080151,150.870861080151)" rx="2" ry="2" />
<text  x="61.24" y="97.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_pyop2_kernel_uniform_extrusion (1,072,848 us, 3.94%)</title><rect x="11.7" y="119" width="46.5" height="15.0" fill="rgb(153.723192079528,153.723192079528,137.273930846944)" rx="2" ry="2" />
<text  x="14.70" y="129.5" >Parl..</text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (7,027 us, 0.03%)</title><rect x="58.2" y="119" width="0.3" height="15.0" fill="rgb(152.895951860693,118.868964265309,118.868964265309)" rx="2" ry="2" />
<text  x="61.24" y="129.5" ></text>
</g>
<g >
<title>firedrake.functionspace.VectorFunctionSpace (7,249 us, 0.03%)</title><rect x="218.2" y="71" width="0.3" height="15.0" fill="rgb(156.261645383484,144.672614606709,144.672614606709)" rx="2" ry="2" />
<text  x="221.21" y="81.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.action (4,329 us, 0.02%)</title><rect x="219.7" y="119" width="0.1" height="15.0" fill="rgb(148.279816954956,148.279816954956,110.894497550938)" rx="2" ry="2" />
<text  x="222.66" y="129.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (680,989 us, 2.50%)</title><rect x="905.3" y="199" width="29.6" height="15.0" fill="rgb(124.09756014674,124.09756014674,151.438237447756)" rx="2" ry="2" />
<text  x="908.35" y="209.5" >p..</text>
</g>
<g >
<title>firedrake.parloops.par_loop (686,448 us, 2.52%)</title><rect x="905.1" y="151" width="29.8" height="15.0" fill="rgb(142.505129948329,142.505129948329,155.000992893225)" rx="2" ry="2" />
<text  x="908.11" y="161.5" >f..</text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (7,027 us, 0.03%)</title><rect x="58.2" y="135" width="0.3" height="15.0" fill="rgb(132.492621207619,162.152363989457,132.492621207619)" rx="2" ry="2" />
<text  x="61.24" y="145.5" ></text>
</g>
<g >
<title>firedrake.matrix_free.operators.ImplicitMatrixContext.__init__ (7,713 us, 0.03%)</title><rect x="219.7" y="103" width="0.3" height="15.0" fill="rgb(155.204226298265,136.565734953362,136.565734953362)" rx="2" ry="2" />
<text  x="222.66" y="113.5" ></text>
</g>
<g >
<title>all (27,198,646 us, 100%)</title><rect x="10.0" y="39" width="1180.0" height="15.0" fill="rgb(153.346655538985,122.324359132215,122.324359132215)" rx="2" ry="2" />
<text  x="13.00" y="49.5" ></text>
</g>
<g >
<title>firedrake.functionspace.MixedFunctionSpace (3,479 us, 0.01%)</title><rect x="220.5" y="167" width="0.2" height="15.0" fill="rgb(123.924449028375,163.547182716311,123.924449028375)" rx="2" ry="2" />
<text  x="223.55" y="177.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (4,662 us, 0.02%)</title><rect x="220.7" y="183" width="0.2" height="15.0" fill="rgb(125.240246678811,163.332983098798,125.240246678811)" rx="2" ry="2" />
<text  x="223.70" y="193.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (7,249 us, 0.03%)</title><rect x="218.2" y="87" width="0.3" height="15.0" fill="rgb(155.628694559161,139.819991620233,139.819991620233)" rx="2" ry="2" />
<text  x="221.21" y="97.5" ></text>
</g>
<g >
<title>SNESSolve (22,358,336 us, 82.20%)</title><rect x="220.0" y="103" width="970.0" height="15.0" fill="rgb(110.017333594787,145.5600494505,145.5600494505)" rx="2" ry="2" />
<text  x="222.99" y="113.5" >SNESSolve</text>
</g>
<g >
<title>firedrake.extrusion_utils.make_extruded_coords (1,111,977 us, 4.09%)</title><rect x="10.0" y="87" width="48.2" height="15.0" fill="rgb(139.041630206,139.041630206,154.330638104387)" rx="2" ry="2" />
<text  x="13.00" y="97.5" >fire..</text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (4,662 us, 0.02%)</title><rect x="220.7" y="199" width="0.2" height="15.0" fill="rgb(138.108917870308,152.843052781191,152.843052781191)" rx="2" ry="2" />
<text  x="223.70" y="209.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (11,964 us, 0.04%)</title><rect x="58.5" y="103" width="0.6" height="15.0" fill="rgb(154.614549245479,132.044877548668,132.044877548668)" rx="2" ry="2" />
<text  x="61.55" y="113.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (7,027 us, 0.03%)</title><rect x="58.2" y="103" width="0.3" height="15.0" fill="rgb(147.87417112656,147.87417112656,108.928675459485)" rx="2" ry="2" />
<text  x="61.24" y="113.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (5,251 us, 0.02%)</title><rect x="903.8" y="167" width="0.2" height="15.0" fill="rgb(154.926733584698,134.438290816014,134.438290816014)" rx="2" ry="2" />
<text  x="906.80" y="177.5" ></text>
</g>
<g >
<title>ParLoopExecute (11,912,090 us, 43.80%)</title><rect x="292.8" y="167" width="516.8" height="15.0" fill="rgb(153.514496972016,153.514496972016,136.262562249003)" rx="2" ry="2" />
<text  x="295.79" y="177.5" >ParLoopExecute</text>
</g>
<g >
<title>firedrake.assemble.allocate_matrix (6,697 us, 0.02%)</title><rect x="903.5" y="151" width="0.3" height="15.0" fill="rgb(140.405773142872,112.91479367861,140.405773142872)" rx="2" ry="2" />
<text  x="906.51" y="161.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (11,964 us, 0.04%)</title><rect x="58.5" y="71" width="0.6" height="15.0" fill="rgb(152.824398505277,118.320388540457,118.320388540457)" rx="2" ry="2" />
<text  x="61.55" y="81.5" ></text>
</g>
<g >
<title>firedrake (27,198,646 us, 100.00%)</title><rect x="10.0" y="55" width="1180.0" height="15.0" fill="rgb(155.419485895877,138.216058535055,138.216058535055)" rx="2" ry="2" />
<text  x="13.00" y="65.5" >firedrake</text>
</g>
<g >
<title>firedrake.interpolation.make_interpolator (24,996 us, 0.09%)</title><rect x="904.0" y="151" width="1.1" height="15.0" fill="rgb(117.366797380451,117.366797380451,150.13550917041)" rx="2" ry="2" />
<text  x="907.02" y="161.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (3,384 us, 0.01%)</title><rect x="219.8" y="119" width="0.2" height="15.0" fill="rgb(142.809309861515,142.809309861515,155.059866424809)" rx="2" ry="2" />
<text  x="222.85" y="129.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_form0_cell_integral_otherwise (2,705,447 us, 9.95%)</title><rect x="935.0" y="151" width="117.4" height="15.0" fill="rgb(139.815870244678,139.815870244678,154.480491015099)" rx="2" ry="2" />
<text  x="938.03" y="161.5" >Parloop_Cells..</text>
</g>
<g >
<title>HybridOperatorAssembly (15,733,885 us, 57.85%)</title><rect x="220.9" y="151" width="682.6" height="15.0" fill="rgb(129.319353463056,150.564276823755,150.564276823755)" rx="2" ry="2" />
<text  x="223.90" y="161.5" >HybridOperatorAssembly</text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (966,622 us, 3.55%)</title><rect x="1148.1" y="135" width="41.9" height="15.0" fill="rgb(153.85012680825,153.85012680825,137.889076070752)" rx="2" ry="2" />
<text  x="1151.06" y="145.5" >fir..</text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.__init__ (7,713 us, 0.03%)</title><rect x="219.7" y="71" width="0.3" height="15.0" fill="rgb(155.364959408902,137.798022134916,137.798022134916)" rx="2" ry="2" />
<text  x="222.66" y="81.5" ></text>
</g>
<g >
<title>PCSetUp (16,478,125 us, 60.58%)</title><rect x="220.0" y="119" width="714.9" height="15.0" fill="rgb(141.347478076952,153.682679501432,153.682679501432)" rx="2" ry="2" />
<text  x="222.99" y="129.5" >PCSetUp</text>
</g>
<g >
<title>ParLoopExecute (680,989 us, 2.50%)</title><rect x="905.3" y="167" width="29.6" height="15.0" fill="rgb(126.42559574625,149.81404334162,149.81404334162)" rx="2" ry="2" />
<text  x="908.35" y="177.5" >P..</text>
</g>
<g >
<title>CreateFunctionSpace (8,141 us, 0.03%)</title><rect x="220.5" y="151" width="0.4" height="15.0" fill="rgb(153.365172892293,153.365172892293,135.538914785729)" rx="2" ry="2" />
<text  x="223.55" y="161.5" ></text>
</g>
<g >
<title>ParLoopExecute (4,910,407 us, 18.05%)</title><rect x="935.0" y="135" width="213.1" height="15.0" fill="rgb(123.705152962654,149.108743360688,149.108743360688)" rx="2" ry="2" />
<text  x="938.03" y="145.5" >ParLoopExecute</text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (3,526 us, 0.01%)</title><rect x="1189.8" y="151" width="0.2" height="15.0" fill="rgb(135.345033148263,135.345033148263,153.615167706115)" rx="2" ry="2" />
<text  x="1192.85" y="161.5" ></text>
</g>
</g>
</svg>
