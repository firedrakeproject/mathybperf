<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="251" onload="init(evt)" viewBox="0 0 1200 251" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:13px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:18px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 13 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (1 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="251.0" fill="url(#background)"  />
<text id="title" x="600.00" y="26" >Firedrake example</text>
<text id="details" x="10.00" y="233" > </text>
<text id="unzoom" x="10.00" y="26" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="26" >Search</text>
<text id="ignorecase" x="1174.00" y="26" >ic</text>
<text id="matched" x="1090.00" y="233" > </text>
<g id="frames">
<g >
<title>firedrake.assemble.allocate_matrix (7,052 us, 0.11%)</title><rect x="872.4" y="87" width="1.4" height="15.0" fill="rgb(146.206564288069,127.779320988177,146.206564288069)" rx="2" ry="2" />
<text  x="875.43" y="97.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.derivative (874 us, 0.01%)</title><rect x="872.0" y="103" width="0.1" height="15.0" fill="rgb(145.245560421846,154.693293442701,154.693293442701)" rx="2" ry="2" />
<text  x="874.97" y="113.5" ></text>
</g>
<g >
<title>firedrake.utility_meshes.RectangleMesh (2,974 us, 0.05%)</title><rect x="867.6" y="87" width="0.5" height="15.0" fill="rgb(129.671594895218,129.671594895218,152.517082882945)" rx="2" ry="2" />
<text  x="870.56" y="97.5" ></text>
</g>
<g >
<title>SNESFunctionEval (1,672,520 us, 26.80%)</title><rect x="873.8" y="119" width="316.2" height="15.0" fill="rgb(143.899683513398,154.344362392362,154.344362392362)" rx="2" ry="2" />
<text  x="876.76" y="129.5" >SNESFunctionEval</text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (987,527 us, 15.82%)</title><rect x="1003.3" y="135" width="186.7" height="15.0" fill="rgb(126.597161218455,163.112090034205,126.597161218455)" rx="2" ry="2" />
<text  x="1006.28" y="145.5" >firedrake.tsfc_interfa..</text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (3,281 us, 0.05%)</title><rect x="873.1" y="119" width="0.7" height="15.0" fill="rgb(147.895803004009,159.644869278417,147.895803004009)" rx="2" ry="2" />
<text  x="876.14" y="129.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.LinearVariationalProblem.__init__ (21,271 us, 0.34%)</title><rect x="868.1" y="71" width="4.0" height="15.0" fill="rgb(146.136518635707,146.136518635707,155.703842316589)" rx="2" ry="2" />
<text  x="871.12" y="81.5" ></text>
</g>
<g >
<title>CreateMesh (1,097 us, 0.02%)</title><rect x="867.8" y="103" width="0.2" height="15.0" fill="rgb(138.082548552517,161.242375817032,138.082548552517)" rx="2" ry="2" />
<text  x="870.76" y="113.5" ></text>
</g>
<g >
<title>firedrake.utility_meshes.SquareMesh (2,974 us, 0.05%)</title><rect x="867.6" y="71" width="0.5" height="15.0" fill="rgb(133.132447401534,94.2768964664309,133.132447401534)" rx="2" ry="2" />
<text  x="870.56" y="81.5" ></text>
</g>
<g >
<title>firedrake.extrusion_utils.make_extruded_coords (1,674,838 us, 26.84%)</title><rect x="10.0" y="87" width="316.7" height="15.0" fill="rgb(110.324077577256,145.639575668178,145.639575668178)" rx="2" ry="2" />
<text  x="13.00" y="97.5" >firedrake.extrusion_utils.make_extruded..</text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (7,459 us, 0.12%)</title><rect x="866.1" y="135" width="1.5" height="15.0" fill="rgb(155.688778702055,155.688778702055,146.79946601765)" rx="2" ry="2" />
<text  x="869.15" y="145.5" ></text>
</g>
<g >
<title>CreateExtMesh (1,684,706 us, 27.00%)</title><rect x="10.0" y="71" width="318.5" height="15.0" fill="rgb(140.721124878014,140.721124878014,154.655701589293)" rx="2" ry="2" />
<text  x="13.00" y="81.5" >CreateExtMesh</text>
</g>
<g >
<title>all (6,240,744 us, 100%)</title><rect x="10.0" y="39" width="1180.0" height="15.0" fill="rgb(153.653972409125,153.653972409125,136.938481674991)" rx="2" ry="2" />
<text  x="13.00" y="49.5" ></text>
</g>
<g >
<title>firedrake.mesh.MeshTopology._facets (3,418 us, 0.05%)</title><rect x="866.9" y="151" width="0.7" height="15.0" fill="rgb(132.414412662673,92.4369324480988,132.414412662673)" rx="2" ry="2" />
<text  x="869.91" y="161.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (5,263 us, 0.08%)</title><rect x="1189.0" y="151" width="1.0" height="15.0" fill="rgb(150.907333599535,150.907333599535,123.627847443901)" rx="2" ry="2" />
<text  x="1192.00" y="161.5" ></text>
</g>
<g >
<title>firedrake.__init__ (2,825,642 us, 45.28%)</title><rect x="331.7" y="71" width="534.2" height="15.0" fill="rgb(135.938298138448,152.280299517375,152.280299517375)" rx="2" ry="2" />
<text  x="334.65" y="81.5" >firedrake.__init__</text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (7,370 us, 0.12%)</title><rect x="326.7" y="151" width="1.4" height="15.0" fill="rgb(117.912334241016,117.912334241016,150.241096949874)" rx="2" ry="2" />
<text  x="329.68" y="161.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.solve (1,672,520 us, 26.80%)</title><rect x="873.8" y="87" width="316.2" height="15.0" fill="rgb(121.040669448317,148.417951338453,148.417951338453)" rx="2" ry="2" />
<text  x="876.76" y="97.5" >firedrake.variational_solver.NonlinearV..</text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (2,959 us, 0.05%)</title><rect x="1189.4" y="167" width="0.6" height="15.0" fill="rgb(140.122279679114,153.365035472363,153.365035472363)" rx="2" ry="2" />
<text  x="1192.44" y="177.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (1,084 us, 0.02%)</title><rect x="1189.8" y="199" width="0.2" height="15.0" fill="rgb(131.537274740489,131.537274740489,152.878182207837)" rx="2" ry="2" />
<text  x="1192.80" y="209.5" ></text>
</g>
<g >
<title>perfsolve (1,672,520 us, 26.80%)</title><rect x="873.8" y="71" width="316.2" height="15.0" fill="rgb(129.378702377099,162.659281008379,129.378702377099)" rx="2" ry="2" />
<text  x="876.76" y="81.5" >perfsolve</text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (11,451 us, 0.18%)</title><rect x="328.7" y="87" width="2.2" height="15.0" fill="rgb(144.121170933546,160.259344266632,144.121170933546)" rx="2" ry="2" />
<text  x="331.75" y="97.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (1,084 us, 0.02%)</title><rect x="1189.8" y="183" width="0.2" height="15.0" fill="rgb(152.46055360907,115.530911002869,115.530911002869)" rx="2" ry="2" />
<text  x="1192.80" y="193.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalProblem.__init__ (10,304 us, 0.17%)</title><rect x="870.2" y="87" width="1.9" height="15.0" fill="rgb(141.082802260161,160.753962422764,141.082802260161)" rx="2" ry="2" />
<text  x="873.19" y="97.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (12,532 us, 0.20%)</title><rect x="328.5" y="71" width="2.4" height="15.0" fill="rgb(154.134785224412,128.36668672049,128.36668672049)" rx="2" ry="2" />
<text  x="331.54" y="81.5" ></text>
</g>
<g >
<title>firedrake.function.Function.split (874 us, 0.01%)</title><rect x="872.0" y="119" width="0.1" height="15.0" fill="rgb(135.632427323958,161.641232761216,135.632427323958)" rx="2" ry="2" />
<text  x="874.97" y="129.5" ></text>
</g>
<g >
<title>firedrake.mesh.ExtrudedMeshTopology.__init__ (897 us, 0.01%)</title><rect x="328.1" y="87" width="0.1" height="15.0" fill="rgb(152.983027182598,119.536541733248,119.536541733248)" rx="2" ry="2" />
<text  x="331.07" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspace.MixedFunctionSpace (1,157 us, 0.02%)</title><rect x="865.9" y="71" width="0.2" height="15.0" fill="rgb(145.006883950175,124.705140122324,145.006883950175)" rx="2" ry="2" />
<text  x="868.93" y="81.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (7,459 us, 0.12%)</title><rect x="866.1" y="103" width="1.5" height="15.0" fill="rgb(154.196625845737,128.840798150648,128.840798150648)" rx="2" ry="2" />
<text  x="869.15" y="113.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (11,451 us, 0.18%)</title><rect x="328.7" y="119" width="2.2" height="15.0" fill="rgb(131.099642444213,162.379127974198,131.099642444213)" rx="2" ry="2" />
<text  x="331.75" y="129.5" ></text>
</g>
<g >
<title>firedrake.mesh._from_cell_list (792 us, 0.01%)</title><rect x="868.0" y="103" width="0.1" height="15.0" fill="rgb(151.821105437055,151.821105437055,128.056126348803)" rx="2" ry="2" />
<text  x="870.97" y="113.5" ></text>
</g>
<g >
<title>firedrake.mesh._Facets.__init__ (995 us, 0.02%)</title><rect x="867.4" y="167" width="0.2" height="15.0" fill="rgb(134.537840438386,97.8782161233646,134.537840438386)" rx="2" ry="2" />
<text  x="870.37" y="177.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (1,634,657 us, 26.19%)</title><rect x="17.6" y="135" width="309.1" height="15.0" fill="rgb(136.077135230071,152.316294318907,152.316294318907)" rx="2" ry="2" />
<text  x="20.60" y="145.5" >pyop2.global_kernel.GlobalKernel.compile</text>
</g>
<g >
<title>Mesh: numbering (1,035 us, 0.02%)</title><rect x="331.2" y="87" width="0.2" height="15.0" fill="rgb(132.874007345923,132.874007345923,153.136904647598)" rx="2" ry="2" />
<text  x="334.21" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (7,370 us, 0.12%)</title><rect x="326.7" y="135" width="1.4" height="15.0" fill="rgb(155.29300922839,155.29300922839,144.881506260659)" rx="2" ry="2" />
<text  x="329.68" y="145.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.__init__ (8,569 us, 0.14%)</title><rect x="872.1" y="71" width="1.7" height="15.0" fill="rgb(154.335652500603,129.906669171288,129.906669171288)" rx="2" ry="2" />
<text  x="875.14" y="81.5" ></text>
</g>
<g >
<title>firedrake (6,240,744 us, 100.00%)</title><rect x="10.0" y="55" width="1180.0" height="15.0" fill="rgb(135.341725226919,152.125632466238,152.125632466238)" rx="2" ry="2" />
<text  x="13.00" y="65.5" >firedrake</text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (9,430 us, 0.15%)</title><rect x="870.2" y="103" width="1.8" height="15.0" fill="rgb(141.05008740385,114.565848972366,141.05008740385)" rx="2" ry="2" />
<text  x="873.19" y="113.5" ></text>
</g>
<g >
<title>CreateMesh (2,591 us, 0.04%)</title><rect x="330.9" y="71" width="0.5" height="15.0" fill="rgb(135.611254848788,135.611254848788,153.666694486862)" rx="2" ry="2" />
<text  x="333.91" y="81.5" ></text>
</g>
<g >
<title>ParLoopExecute (1,634,657 us, 26.19%)</title><rect x="17.6" y="103" width="309.1" height="15.0" fill="rgb(137.541359548423,161.330476352582,137.541359548423)" rx="2" ry="2" />
<text  x="20.60" y="113.5" >ParLoopExecute</text>
</g>
<g >
<title>ParLoopExecute (684,993 us, 10.98%)</title><rect x="873.8" y="135" width="129.5" height="15.0" fill="rgb(135.684579790888,135.684579790888,153.68088641114)" rx="2" ry="2" />
<text  x="876.76" y="145.5" >ParLoopExecute</text>
</g>
<g >
<title>firedrake.mesh.make_mesh_from_coordinates (1,601 us, 0.03%)</title><rect x="328.2" y="87" width="0.3" height="15.0" fill="rgb(155.718396482288,155.718396482288,146.942998337241)" rx="2" ry="2" />
<text  x="331.24" y="97.5" ></text>
</g>
<g >
<title>PetscBarrier (1,323 us, 0.02%)</title><rect x="331.4" y="71" width="0.3" height="15.0" fill="rgb(143.304238130782,154.189987663536,154.189987663536)" rx="2" ry="2" />
<text  x="334.40" y="81.5" ></text>
</g>
<g >
<title>firedrake.functionspace.VectorFunctionSpace (7,370 us, 0.12%)</title><rect x="326.7" y="87" width="1.4" height="15.0" fill="rgb(154.164254760123,154.164254760123,139.411388452904)" rx="2" ry="2" />
<text  x="329.68" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspace.VectorFunctionSpace (7,459 us, 0.12%)</title><rect x="866.1" y="71" width="1.5" height="15.0" fill="rgb(112.471577174507,112.471577174507,149.188047195066)" rx="2" ry="2" />
<text  x="869.15" y="81.5" ></text>
</g>
<g >
<title>firedrake.matrix_free.operators.ImplicitMatrixContext.__init__ (7,052 us, 0.11%)</title><rect x="872.4" y="103" width="1.4" height="15.0" fill="rgb(135.818668703206,161.610914397152,135.818668703206)" rx="2" ry="2" />
<text  x="875.43" y="113.5" ></text>
</g>
<g >
<title>firedrake.mesh._Facets.__init__ (736 us, 0.01%)</title><rect x="327.9" y="167" width="0.2" height="15.0" fill="rgb(153.173245341417,120.994880950864,120.994880950864)" rx="2" ry="2" />
<text  x="330.93" y="177.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (7,370 us, 0.12%)</title><rect x="326.7" y="103" width="1.4" height="15.0" fill="rgb(146.927838544029,159.802444888181,146.927838544029)" rx="2" ry="2" />
<text  x="329.68" y="113.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_form0_cell_integral_otherwise (684,993 us, 10.98%)</title><rect x="873.8" y="151" width="129.5" height="15.0" fill="rgb(143.048449041164,154.123671973635,154.123671973635)" rx="2" ry="2" />
<text  x="876.76" y="161.5" >Parloop_Cells_..</text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (11,451 us, 0.18%)</title><rect x="328.7" y="103" width="2.2" height="15.0" fill="rgb(130.639549300742,150.906549818711,150.906549818711)" rx="2" ry="2" />
<text  x="331.75" y="113.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (684,993 us, 10.98%)</title><rect x="873.8" y="167" width="129.5" height="15.0" fill="rgb(116.688776432864,147.289682778891,147.289682778891)" rx="2" ry="2" />
<text  x="876.76" y="177.5" >pyop2.global_k..</text>
</g>
<g >
<title>firedrake.ufl_expr.action (3,771 us, 0.06%)</title><rect x="872.4" y="119" width="0.7" height="15.0" fill="rgb(105.140695440089,144.295735854838,144.295735854838)" rx="2" ry="2" />
<text  x="875.43" y="129.5" ></text>
</g>
<g >
<title>SNESSolve (1,672,520 us, 26.80%)</title><rect x="873.8" y="103" width="316.2" height="15.0" fill="rgb(129.571273186682,129.571273186682,152.497665778068)" rx="2" ry="2" />
<text  x="876.76" y="113.5" >SNESSolve</text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (7,459 us, 0.12%)</title><rect x="866.1" y="119" width="1.5" height="15.0" fill="rgb(128.791865145066,128.791865145066,152.346812608722)" rx="2" ry="2" />
<text  x="869.15" y="129.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_pyop2_kernel_uniform_extrusion (1,634,657 us, 26.19%)</title><rect x="17.6" y="119" width="309.1" height="15.0" fill="rgb(139.736654950804,160.973102682427,139.736654950804)" rx="2" ry="2" />
<text  x="20.60" y="129.5" >Parloop_Cells_wrap_pyop2_kernel_unifor..</text>
</g>
<g >
<title>CreateFunctionSpace (7,459 us, 0.12%)</title><rect x="866.1" y="87" width="1.5" height="15.0" fill="rgb(144.049746885906,122.252476395135,144.049746885906)" rx="2" ry="2" />
<text  x="869.15" y="97.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.action (10,967 us, 0.18%)</title><rect x="868.1" y="87" width="2.1" height="15.0" fill="rgb(127.043552066632,127.043552066632,152.008429432251)" rx="2" ry="2" />
<text  x="871.12" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (7,370 us, 0.12%)</title><rect x="326.7" y="119" width="1.4" height="15.0" fill="rgb(142.597052872748,160.507456509088,142.597052872748)" rx="2" ry="2" />
<text  x="329.68" y="129.5" ></text>
</g>
</g>
</svg>
