<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="251" onload="init(evt)" viewBox="0 0 1200 251" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:13px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:18px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 13 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (1 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="251.0" fill="url(#background)"  />
<text id="title" x="600.00" y="26" >Firedrake example</text>
<text id="details" x="10.00" y="233" > </text>
<text id="unzoom" x="10.00" y="26" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="26" >Search</text>
<text id="ignorecase" x="1174.00" y="26" >ic</text>
<text id="matched" x="1090.00" y="233" > </text>
<g id="frames">
<g >
<title>Parloop_Cells_wrap_form1_cell_integral_otherwise (2,340,362 us, 8.92%)</title><rect x="1038.1" y="151" width="105.2" height="15.0" fill="rgb(133.071999393179,151.537185027861,151.537185027861)" rx="2" ry="2" />
<text  x="1041.06" y="161.5" >Parloop_Cel..</text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (8,121 us, 0.03%)</title><rect x="72.0" y="151" width="0.4" height="15.0" fill="rgb(148.073898835402,148.073898835402,109.89658666387)" rx="2" ry="2" />
<text  x="75.01" y="161.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (11,328 us, 0.04%)</title><rect x="198.3" y="103" width="0.5" height="15.0" fill="rgb(156.538244917353,146.793211033037,146.793211033037)" rx="2" ry="2" />
<text  x="201.26" y="113.5" ></text>
</g>
<g >
<title>HybridInit (15,806,300 us, 60.26%)</title><rect x="199.1" y="135" width="711.1" height="15.0" fill="rgb(147.631383528518,147.631383528518,107.752089407433)" rx="2" ry="2" />
<text  x="202.11" y="145.5" >HybridInit</text>
</g>
<g >
<title>Parloop_Cells_wrap_slate_wrapper (11,041,398 us, 42.09%)</title><rect x="278.2" y="183" width="496.7" height="15.0" fill="rgb(136.698999860814,161.467604673821,136.698999860814)" rx="2" ry="2" />
<text  x="281.22" y="193.5" >Parloop_Cells_wrap_slate_wrapper</text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (4,924 us, 0.02%)</title><rect x="876.6" y="183" width="0.2" height="15.0" fill="rgb(150.534180571905,150.534180571905,121.819490463848)" rx="2" ry="2" />
<text  x="879.55" y="193.5" ></text>
</g>
<g >
<title>firedrake.__init__ (2,759,099 us, 10.52%)</title><rect x="73.1" y="71" width="124.1" height="15.0" fill="rgb(142.765210001524,118.960850628904,142.765210001524)" rx="2" ry="2" />
<text  x="76.11" y="81.5" >firedrake.__in..</text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (7,676 us, 0.03%)</title><rect x="197.2" y="103" width="0.4" height="15.0" fill="rgb(132.16339761949,162.20595852706,132.16339761949)" rx="2" ry="2" />
<text  x="200.23" y="113.5" ></text>
</g>
<g >
<title>firedrake (26,230,168 us, 100.00%)</title><rect x="10.0" y="55" width="1180.0" height="15.0" fill="rgb(151.686465530257,151.686465530257,127.403640646631)" rx="2" ry="2" />
<text  x="13.00" y="65.5" >firedrake</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (2,329,115 us, 8.88%)</title><rect x="1038.6" y="167" width="104.7" height="15.0" fill="rgb(132.549572976566,151.401741142073,151.401741142073)" rx="2" ry="2" />
<text  x="1041.56" y="177.5" >pyop2.globa..</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (1,335,103 us, 5.09%)</title><rect x="12.0" y="135" width="60.0" height="15.0" fill="rgb(155.144273787717,136.106099039165,136.106099039165)" rx="2" ry="2" />
<text  x="14.95" y="145.5" >pyop2..</text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (711,406 us, 2.71%)</title><rect x="878.2" y="183" width="32.0" height="15.0" fill="rgb(148.19432173085,148.19432173085,110.480174541811)" rx="2" ry="2" />
<text  x="881.18" y="193.5" >Pa..</text>
</g>
<g >
<title>CreateSparsity (6,635 us, 0.03%)</title><rect x="876.3" y="167" width="0.3" height="15.0" fill="rgb(146.553894907547,146.553894907547,155.784624820816)" rx="2" ry="2" />
<text  x="879.25" y="177.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.action (3,948 us, 0.02%)</title><rect x="198.8" y="119" width="0.1" height="15.0" fill="rgb(151.778278248259,151.778278248259,127.848579203099)" rx="2" ry="2" />
<text  x="201.77" y="129.5" ></text>
</g>
<g >
<title>firedrake.parloops.par_loop (718,116 us, 2.74%)</title><rect x="877.9" y="151" width="32.3" height="15.0" fill="rgb(133.566978556311,133.566978556311,153.271028107673)" rx="2" ry="2" />
<text  x="880.88" y="161.5" >fi..</text>
</g>
<g >
<title>ParLoopExecute (1,335,103 us, 5.09%)</title><rect x="12.0" y="103" width="60.0" height="15.0" fill="rgb(148.947181306222,159.47371467108,148.947181306222)" rx="2" ry="2" />
<text  x="14.95" y="113.5" >ParLo..</text>
</g>
<g >
<title>SNESFunctionEval (6,220,039 us, 23.71%)</title><rect x="910.2" y="119" width="279.8" height="15.0" fill="rgb(118.765566905022,147.828109938339,147.828109938339)" rx="2" ry="2" />
<text  x="913.18" y="129.5" >SNESFunctionEval</text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (5,325 us, 0.02%)</title><rect x="199.8" y="183" width="0.3" height="15.0" fill="rgb(141.295799537359,153.669281361538,153.669281361538)" rx="2" ry="2" />
<text  x="202.84" y="193.5" ></text>
</g>
<g >
<title>firedrake.functionspace.VectorFunctionSpace (7,676 us, 0.03%)</title><rect x="197.2" y="71" width="0.4" height="15.0" fill="rgb(154.223088781927,154.223088781927,139.696507173954)" rx="2" ry="2" />
<text  x="200.23" y="81.5" ></text>
</g>
<g >
<title>perfsolve (22,026,339 us, 83.97%)</title><rect x="199.1" y="71" width="990.9" height="15.0" fill="rgb(145.546187692436,145.546187692436,155.589584714665)" rx="2" ry="2" />
<text  x="202.11" y="81.5" >perfsolve</text>
</g>
<g >
<title>firedrake.extrusion_utils.make_extruded_coords (1,375,589 us, 5.24%)</title><rect x="10.1" y="87" width="61.9" height="15.0" fill="rgb(127.812468059081,162.914249385731,127.812468059081)" rx="2" ry="2" />
<text  x="13.13" y="97.5" >firedr..</text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.__init__ (7,673 us, 0.03%)</title><rect x="198.8" y="71" width="0.3" height="15.0" fill="rgb(148.121212735953,132.68560763588,148.121212735953)" rx="2" ry="2" />
<text  x="201.77" y="81.5" ></text>
</g>
<g >
<title>firedrake.functionspace.MixedFunctionSpace (3,765 us, 0.01%)</title><rect x="199.7" y="167" width="0.1" height="15.0" fill="rgb(111.728291068107,146.003631017658,146.003631017658)" rx="2" ry="2" />
<text  x="202.67" y="177.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_form0_cell_integral_otherwise (2,839,222 us, 10.82%)</title><rect x="910.3" y="151" width="127.8" height="15.0" fill="rgb(134.217911518631,134.217911518631,153.397015132638)" rx="2" ry="2" />
<text  x="913.33" y="161.5" >Parloop_Cells_..</text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.solve (22,026,339 us, 83.97%)</title><rect x="199.1" y="87" width="990.9" height="15.0" fill="rgb(133.618052234284,95.5212588503538,133.618052234284)" rx="2" ry="2" />
<text  x="202.11" y="97.5" >firedrake.variational_solver.NonlinearVariationalSolver.solve</text>
</g>
<g >
<title>firedrake.assemble.allocate_matrix (7,673 us, 0.03%)</title><rect x="198.8" y="87" width="0.3" height="15.0" fill="rgb(156.283374449108,144.839204109831,144.839204109831)" rx="2" ry="2" />
<text  x="201.77" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (8,121 us, 0.03%)</title><rect x="72.0" y="119" width="0.4" height="15.0" fill="rgb(156.644910956997,147.610984003646,147.610984003646)" rx="2" ry="2" />
<text  x="75.01" y="129.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (8,121 us, 0.03%)</title><rect x="72.0" y="135" width="0.4" height="15.0" fill="rgb(154.660075277215,154.660075277215,141.814210958813)" rx="2" ry="2" />
<text  x="75.01" y="145.5" ></text>
</g>
<g >
<title>firedrake.mesh.MeshTopology._facets (3,257 us, 0.01%)</title><rect x="197.4" y="151" width="0.2" height="15.0" fill="rgb(144.839077037784,124.275134909321,144.839077037784)" rx="2" ry="2" />
<text  x="200.43" y="161.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (13,232 us, 0.05%)</title><rect x="72.4" y="71" width="0.6" height="15.0" fill="rgb(154.23518632487,154.23518632487,139.755133728216)" rx="2" ry="2" />
<text  x="75.38" y="81.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (2,820,690 us, 10.75%)</title><rect x="911.2" y="167" width="126.9" height="15.0" fill="rgb(127.595931638288,162.949499500744,127.595931638288)" rx="2" ry="2" />
<text  x="914.16" y="177.5" >pyop2.global_k..</text>
</g>
<g >
<title>firedrake.variational_solver.LinearVariationalProblem.__init__ (23,161 us, 0.09%)</title><rect x="197.7" y="71" width="1.1" height="15.0" fill="rgb(155.666651118291,140.110991906895,140.110991906895)" rx="2" ry="2" />
<text  x="200.73" y="81.5" ></text>
</g>
<g >
<title>HybridOperatorAssembly (15,030,621 us, 57.30%)</title><rect x="200.1" y="151" width="676.2" height="15.0" fill="rgb(148.593149327048,148.593149327048,112.412954431079)" rx="2" ry="2" />
<text  x="203.08" y="161.5" >HybridOperatorAssembly</text>
</g>
<g >
<title>ParLoopExecute (11,041,398 us, 42.09%)</title><rect x="278.2" y="167" width="496.7" height="15.0" fill="rgb(155.784439937616,141.01403952172,141.01403952172)" rx="2" ry="2" />
<text  x="281.22" y="177.5" >ParLoopExecute</text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalProblem.__init__ (11,328 us, 0.04%)</title><rect x="198.3" y="87" width="0.5" height="15.0" fill="rgb(106.222304838017,144.576153106153,144.576153106153)" rx="2" ry="2" />
<text  x="201.26" y="97.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (3,725 us, 0.01%)</title><rect x="198.9" y="119" width="0.2" height="15.0" fill="rgb(143.056931990943,143.056931990943,155.10779328857)" rx="2" ry="2" />
<text  x="201.95" y="129.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (3,478 us, 0.01%)</title><rect x="1189.8" y="167" width="0.2" height="15.0" fill="rgb(155.565898197906,155.565898197906,146.203968189854)" rx="2" ry="2" />
<text  x="1192.84" y="177.5" ></text>
</g>
<g >
<title>firedrake.matrix_free.operators.ImplicitMatrixContext.__init__ (7,673 us, 0.03%)</title><rect x="198.8" y="103" width="0.3" height="15.0" fill="rgb(145.177823444786,145.177823444786,155.518288408668)" rx="2" ry="2" />
<text  x="201.77" y="113.5" ></text>
</g>
<g >
<title>PCSetUp (15,806,300 us, 60.26%)</title><rect x="199.1" y="119" width="711.1" height="15.0" fill="rgb(144.110459626515,160.261087967777,144.110459626515)" rx="2" ry="2" />
<text  x="202.11" y="129.5" >PCSetUp</text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (4,924 us, 0.02%)</title><rect x="876.6" y="151" width="0.2" height="15.0" fill="rgb(155.520975326233,155.520975326233,145.986265042512)" rx="2" ry="2" />
<text  x="879.55" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (13,232 us, 0.05%)</title><rect x="72.4" y="103" width="0.6" height="15.0" fill="rgb(151.314014255032,151.314014255032,125.598684466694)" rx="2" ry="2" />
<text  x="75.38" y="113.5" ></text>
</g>
<g >
<title>firedrake.utility_meshes.RectangleMesh (3,292 us, 0.01%)</title><rect x="197.6" y="87" width="0.1" height="15.0" fill="rgb(108.521166243246,108.521166243246,148.423451530951)" rx="2" ry="2" />
<text  x="200.58" y="97.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (8,121 us, 0.03%)</title><rect x="72.0" y="103" width="0.4" height="15.0" fill="rgb(154.594910731014,131.89431560444,131.89431560444)" rx="2" ry="2" />
<text  x="75.01" y="113.5" ></text>
</g>
<g >
<title>CreateExtMesh (1,386,588 us, 5.29%)</title><rect x="10.0" y="71" width="62.4" height="15.0" fill="rgb(151.07331894102,151.07331894102,124.432237944944)" rx="2" ry="2" />
<text  x="13.00" y="81.5" >Create..</text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (5,325 us, 0.02%)</title><rect x="199.8" y="167" width="0.3" height="15.0" fill="rgb(133.300755511949,94.7081859993699,133.300755511949)" rx="2" ry="2" />
<text  x="202.84" y="177.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (7,676 us, 0.03%)</title><rect x="197.2" y="87" width="0.4" height="15.0" fill="rgb(154.198994307526,128.858956357702,128.858956357702)" rx="2" ry="2" />
<text  x="200.23" y="97.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (11,041,398 us, 42.09%)</title><rect x="278.2" y="199" width="496.7" height="15.0" fill="rgb(152.972870924238,119.458677085821,119.458677085821)" rx="2" ry="2" />
<text  x="281.22" y="209.5" >pyop2.global_kernel.GlobalKernel.compile</text>
</g>
<g >
<title>ParLoopExecute (5,179,584 us, 19.75%)</title><rect x="910.3" y="135" width="233.0" height="15.0" fill="rgb(148.902527183103,148.902527183103,113.912247118114)" rx="2" ry="2" />
<text  x="913.33" y="145.5" >ParLoopExecute</text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (3,478 us, 0.01%)</title><rect x="1189.8" y="151" width="0.2" height="15.0" fill="rgb(141.801018725166,160.637043463345,141.801018725166)" rx="2" ry="2" />
<text  x="1192.84" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspace.VectorFunctionSpace (8,121 us, 0.03%)</title><rect x="72.0" y="87" width="0.4" height="15.0" fill="rgb(132.256842315732,132.256842315732,153.017453351432)" rx="2" ry="2" />
<text  x="75.01" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (7,676 us, 0.03%)</title><rect x="197.2" y="119" width="0.4" height="15.0" fill="rgb(149.387985250971,135.931712205613,149.387985250971)" rx="2" ry="2" />
<text  x="200.23" y="129.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (4,924 us, 0.02%)</title><rect x="876.6" y="199" width="0.2" height="15.0" fill="rgb(110.106748592052,110.106748592052,148.730338437171)" rx="2" ry="2" />
<text  x="879.55" y="209.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (9,090 us, 0.03%)</title><rect x="199.7" y="151" width="0.4" height="15.0" fill="rgb(125.298769516469,125.298769516469,151.670729583833)" rx="2" ry="2" />
<text  x="202.67" y="161.5" ></text>
</g>
<g >
<title>all (26,230,168 us, 100%)</title><rect x="10.0" y="39" width="1180.0" height="15.0" fill="rgb(130.395529451304,162.493751019555,130.395529451304)" rx="2" ry="2" />
<text  x="13.00" y="49.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (13,232 us, 0.05%)</title><rect x="72.4" y="87" width="0.6" height="15.0" fill="rgb(122.889577552717,148.897297884038,148.897297884038)" rx="2" ry="2" />
<text  x="75.38" y="97.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_pyop2_kernel_uniform_extrusion (1,335,103 us, 5.09%)</title><rect x="12.0" y="119" width="60.0" height="15.0" fill="rgb(143.268807000507,120.2513179388,143.268807000507)" rx="2" ry="2" />
<text  x="14.95" y="129.5" >Parlo..</text>
</g>
<g >
<title>firedrake.assemble.allocate_matrix (6,635 us, 0.03%)</title><rect x="876.3" y="151" width="0.3" height="15.0" fill="rgb(136.04924805706,136.04924805706,153.751467365883)" rx="2" ry="2" />
<text  x="879.25" y="161.5" ></text>
</g>
<g >
<title>CreateMesh (3,108 us, 0.01%)</title><rect x="73.0" y="71" width="0.1" height="15.0" fill="rgb(155.216990936882,136.66359718276,136.66359718276)" rx="2" ry="2" />
<text  x="75.97" y="81.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (7,676 us, 0.03%)</title><rect x="197.2" y="135" width="0.4" height="15.0" fill="rgb(153.54143100733,123.817637722865,123.817637722865)" rx="2" ry="2" />
<text  x="200.23" y="145.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (711,406 us, 2.71%)</title><rect x="878.2" y="199" width="32.0" height="15.0" fill="rgb(114.543262205926,146.733438349685,146.733438349685)" rx="2" ry="2" />
<text  x="881.18" y="209.5" >py..</text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (5,325 us, 0.02%)</title><rect x="199.8" y="199" width="0.3" height="15.0" fill="rgb(148.841646649071,134.531719538243,148.841646649071)" rx="2" ry="2" />
<text  x="202.84" y="209.5" ></text>
</g>
<g >
<title>ParLoopExecute (711,406 us, 2.71%)</title><rect x="878.2" y="167" width="32.0" height="15.0" fill="rgb(141.350462436548,160.710389835911,141.350462436548)" rx="2" ry="2" />
<text  x="881.18" y="177.5" >Pa..</text>
</g>
<g >
<title>firedrake.interpolation.make_interpolator (24,554 us, 0.09%)</title><rect x="876.8" y="151" width="1.1" height="15.0" fill="rgb(137.391532720224,161.354866766475,137.391532720224)" rx="2" ry="2" />
<text  x="879.77" y="161.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.action (11,833 us, 0.05%)</title><rect x="197.7" y="87" width="0.6" height="15.0" fill="rgb(129.794353972933,129.794353972933,152.540842704439)" rx="2" ry="2" />
<text  x="200.73" y="97.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (4,924 us, 0.02%)</title><rect x="876.6" y="167" width="0.2" height="15.0" fill="rgb(154.178420123036,154.178420123036,139.480035980869)" rx="2" ry="2" />
<text  x="879.55" y="177.5" ></text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (1,037,197 us, 3.95%)</title><rect x="1143.3" y="135" width="46.7" height="15.0" fill="rgb(152.018701051492,112.143374728102,112.143374728102)" rx="2" ry="2" />
<text  x="1146.34" y="145.5" >fire..</text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (2,252,225 us, 8.59%)</title><rect x="774.9" y="167" width="101.4" height="15.0" fill="rgb(154.415136378596,130.516045569238,130.516045569238)" rx="2" ry="2" />
<text  x="777.93" y="177.5" >firedrake.t..</text>
</g>
<g >
<title>SNESSolve (22,026,339 us, 83.97%)</title><rect x="199.1" y="103" width="990.9" height="15.0" fill="rgb(127.095103514211,127.095103514211,152.018407131783)" rx="2" ry="2" />
<text  x="202.11" y="113.5" >SNESSolve</text>
</g>
<g >
<title>Log_Event_form0_cell_integral_otherwise (8,800 us, 0.03%)</title><rect x="910.8" y="167" width="0.4" height="15.0" fill="rgb(148.701541701774,148.701541701774,112.938240554751)" rx="2" ry="2" />
<text  x="913.77" y="177.5" ></text>
</g>
<g >
<title>firedrake.utility_meshes.SquareMesh (3,292 us, 0.01%)</title><rect x="197.6" y="71" width="0.1" height="15.0" fill="rgb(131.365251527995,162.33588928614,131.365251527995)" rx="2" ry="2" />
<text  x="200.58" y="81.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (13,232 us, 0.05%)</title><rect x="72.4" y="119" width="0.6" height="15.0" fill="rgb(152.947236153594,119.262143844219,119.262143844219)" rx="2" ry="2" />
<text  x="75.38" y="129.5" ></text>
</g>
</g>
</svg>
