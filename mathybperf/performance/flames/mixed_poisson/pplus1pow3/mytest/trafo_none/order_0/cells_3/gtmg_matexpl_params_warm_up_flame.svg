<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="267" onload="init(evt)" viewBox="0 0 1200 267" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:13px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:18px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 13 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (1 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="267.0" fill="url(#background)"  />
<text id="title" x="600.00" y="26" >Firedrake example</text>
<text id="details" x="10.00" y="249" > </text>
<text id="unzoom" x="10.00" y="26" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="26" >Search</text>
<text id="ignorecase" x="1174.00" y="26" >ic</text>
<text id="matched" x="1090.00" y="249" > </text>
<g id="frames">
<g >
<title>firedrake.assemble.allocate_matrix (13,104 us, 0.05%)</title><rect x="207.3" y="87" width="0.6" height="15.0" fill="rgb(152.7374892022,152.7374892022,132.497063056816)" rx="2" ry="2" />
<text  x="210.33" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspace.VectorFunctionSpace (8,115 us, 0.03%)</title><rect x="205.5" y="71" width="0.4" height="15.0" fill="rgb(138.332685436295,107.602506430506,138.332685436295)" rx="2" ry="2" />
<text  x="208.51" y="81.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (9,937 us, 0.04%)</title><rect x="208.5" y="151" width="0.4" height="15.0" fill="rgb(138.0512516929,161.247470654644,138.0512516929)" rx="2" ry="2" />
<text  x="211.51" y="161.5" ></text>
</g>
<g >
<title>HybridInit (15,459,308 us, 58.40%)</title><rect x="207.9" y="135" width="689.1" height="15.0" fill="rgb(147.953231308056,147.953231308056,109.311813262116)" rx="2" ry="2" />
<text  x="210.91" y="145.5" >HybridInit</text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (5,802 us, 0.02%)</title><rect x="1189.7" y="167" width="0.3" height="15.0" fill="rgb(133.197403314045,162.037632018644,133.197403314045)" rx="2" ry="2" />
<text  x="1192.74" y="177.5" ></text>
</g>
<g >
<title>CreateSparsity (6,487 us, 0.02%)</title><rect x="863.4" y="167" width="0.3" height="15.0" fill="rgb(112.657000222892,146.244407465194,146.244407465194)" rx="2" ry="2" />
<text  x="866.41" y="177.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_pyop2_kernel_uniform_extrusion (1,235,726 us, 4.67%)</title><rect x="12.4" y="119" width="55.1" height="15.0" fill="rgb(147.50980168466,147.50980168466,155.969639035741)" rx="2" ry="2" />
<text  x="15.39" y="129.5" >Parlo..</text>
</g>
<g >
<title>CreateFunctionSpace (12,445 us, 0.05%)</title><rect x="67.8" y="71" width="0.6" height="15.0" fill="rgb(149.072073199168,149.072073199168,114.73389319597)" rx="2" ry="2" />
<text  x="70.82" y="81.5" ></text>
</g>
<g >
<title>PCSetUp (15,459,308 us, 58.40%)</title><rect x="207.9" y="119" width="689.1" height="15.0" fill="rgb(148.003129983406,148.003129983406,109.553629919583)" rx="2" ry="2" />
<text  x="210.91" y="129.5" >PCSetUp</text>
</g>
<g >
<title>firedrake.ufl_expr.action (13,398 us, 0.05%)</title><rect x="206.0" y="87" width="0.6" height="15.0" fill="rgb(152.320953337422,114.460642253567,114.460642253567)" rx="2" ry="2" />
<text  x="209.02" y="97.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (2,940,745 us, 11.11%)</title><rect x="898.0" y="167" width="131.1" height="15.0" fill="rgb(132.084688822514,162.218771587033,132.084688822514)" rx="2" ry="2" />
<text  x="900.98" y="177.5" >pyop2.global_ke..</text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (8,115 us, 0.03%)</title><rect x="205.5" y="103" width="0.4" height="15.0" fill="rgb(108.562999190176,108.562999190176,148.431548230357)" rx="2" ry="2" />
<text  x="208.51" y="113.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (5,709 us, 0.02%)</title><rect x="207.7" y="119" width="0.2" height="15.0" fill="rgb(131.025647668862,162.391173635302,131.025647668862)" rx="2" ry="2" />
<text  x="210.66" y="129.5" ></text>
</g>
<g >
<title>HybridOperatorAssembly (14,682,366 us, 55.46%)</title><rect x="208.9" y="151" width="654.5" height="15.0" fill="rgb(141.181330363596,141.181330363596,154.744773618761)" rx="2" ry="2" />
<text  x="211.95" y="161.5" >HybridOperatorAssembly</text>
</g>
<g >
<title>firedrake (26,472,309 us, 100.00%)</title><rect x="10.0" y="55" width="1180.0" height="15.0" fill="rgb(132.938398073184,162.079795662505,132.938398073184)" rx="2" ry="2" />
<text  x="13.00" y="65.5" >firedrake</text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (15,929 us, 0.06%)</title><rect x="206.6" y="103" width="0.7" height="15.0" fill="rgb(156.204224439024,144.232387365851,144.232387365851)" rx="2" ry="2" />
<text  x="209.62" y="113.5" ></text>
</g>
<g >
<title>firedrake.utility_meshes.SquareMesh (3,344 us, 0.01%)</title><rect x="205.9" y="71" width="0.1" height="15.0" fill="rgb(147.09418489377,130.053848790287,147.09418489377)" rx="2" ry="2" />
<text  x="208.87" y="81.5" ></text>
</g>
<g >
<title>all (26,472,309 us, 100%)</title><rect x="10.0" y="39" width="1180.0" height="15.0" fill="rgb(129.250829992698,162.680097443049,129.250829992698)" rx="2" ry="2" />
<text  x="13.00" y="49.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (12,445 us, 0.05%)</title><rect x="67.8" y="103" width="0.6" height="15.0" fill="rgb(150.502077272441,150.502077272441,121.663912935676)" rx="2" ry="2" />
<text  x="70.82" y="113.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (6,020 us, 0.02%)</title><rect x="863.7" y="183" width="0.3" height="15.0" fill="rgb(141.625155990351,153.754670071572,153.754670071572)" rx="2" ry="2" />
<text  x="866.70" y="193.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (6,644 us, 0.03%)</title><rect x="208.7" y="167" width="0.2" height="15.0" fill="rgb(144.330308045904,154.456005789679,154.456005789679)" rx="2" ry="2" />
<text  x="211.65" y="177.5" ></text>
</g>
<g >
<title>perfsolve (22,032,349 us, 83.23%)</title><rect x="207.9" y="71" width="982.1" height="15.0" fill="rgb(152.856485456693,152.856485456693,133.073737213204)" rx="2" ry="2" />
<text  x="210.91" y="81.5" >perfsolve</text>
</g>
<g >
<title>firedrake.functionspace.MixedFunctionSpace (3,293 us, 0.01%)</title><rect x="208.5" y="167" width="0.2" height="15.0" fill="rgb(155.006360265848,135.048762038166,135.048762038166)" rx="2" ry="2" />
<text  x="211.51" y="177.5" ></text>
</g>
<g >
<title>firedrake.extrusion_utils.make_extruded_coords (1,289,300 us, 4.87%)</title><rect x="10.0" y="87" width="57.5" height="15.0" fill="rgb(153.862075324523,126.275910821341,126.275910821341)" rx="2" ry="2" />
<text  x="13.00" y="97.5" >fired..</text>
</g>
<g >
<title>ParLoopExecute (710,352 us, 2.68%)</title><rect x="865.3" y="167" width="31.7" height="15.0" fill="rgb(155.628003055006,155.628003055006,146.50493788195)" rx="2" ry="2" />
<text  x="868.34" y="177.5" >Pa..</text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (1,295,159 us, 4.89%)</title><rect x="1132.3" y="135" width="57.7" height="15.0" fill="rgb(151.985011988756,151.985011988756,128.850442714739)" rx="2" ry="2" />
<text  x="1135.27" y="145.5" >fired..</text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (9,989 us, 0.04%)</title><rect x="1189.6" y="151" width="0.4" height="15.0" fill="rgb(154.237640356939,129.155242736535,129.155242736535)" rx="2" ry="2" />
<text  x="1192.55" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (7,921 us, 0.03%)</title><rect x="67.5" y="119" width="0.3" height="15.0" fill="rgb(140.434569799531,160.859488637286,140.434569799531)" rx="2" ry="2" />
<text  x="70.47" y="129.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.solve (22,032,349 us, 83.23%)</title><rect x="207.9" y="87" width="982.1" height="15.0" fill="rgb(154.011455582131,154.011455582131,138.670900128787)" rx="2" ry="2" />
<text  x="210.91" y="97.5" >firedrake.variational_solver.NonlinearVariationalSolver.solve</text>
</g>
<g >
<title>Parloop_Cells_wrap_slate_wrapper (10,712,845 us, 40.47%)</title><rect x="285.4" y="183" width="477.5" height="15.0" fill="rgb(119.815250725193,119.815250725193,150.609403366166)" rx="2" ry="2" />
<text  x="288.36" y="193.5" >Parloop_Cells_wrap_slate_wrapper</text>
</g>
<g >
<title>SNESFunctionEval (6,573,041 us, 24.83%)</title><rect x="897.0" y="119" width="293.0" height="15.0" fill="rgb(154.735469788685,154.735469788685,142.179584360549)" rx="2" ry="2" />
<text  x="900.01" y="129.5" >SNESFunctionEval</text>
</g>
<g >
<title>SNESSolve (22,032,349 us, 83.23%)</title><rect x="207.9" y="103" width="982.1" height="15.0" fill="rgb(137.454738061207,161.34457752492,137.454738061207)" rx="2" ry="2" />
<text  x="210.91" y="113.5" >SNESSolve</text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.__init__ (13,104 us, 0.05%)</title><rect x="207.3" y="71" width="0.6" height="15.0" fill="rgb(155.746139025101,155.746139025101,147.077442967795)" rx="2" ry="2" />
<text  x="210.33" y="81.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (7,921 us, 0.03%)</title><rect x="67.5" y="135" width="0.3" height="15.0" fill="rgb(144.501160307633,160.197485531316,144.501160307633)" rx="2" ry="2" />
<text  x="70.47" y="145.5" ></text>
</g>
<g >
<title>ParLoopExecute (1,235,726 us, 4.67%)</title><rect x="12.4" y="103" width="55.1" height="15.0" fill="rgb(140.973032696014,140.973032696014,154.704457941164)" rx="2" ry="2" />
<text  x="15.39" y="113.5" >ParLo..</text>
</g>
<g >
<title>Parloop_Cells_wrap_form0_cell_integral_otherwise (2,959,149 us, 11.18%)</title><rect x="897.2" y="151" width="131.9" height="15.0" fill="rgb(128.708938767336,162.76831229369,128.708938767336)" rx="2" ry="2" />
<text  x="900.16" y="161.5" >Parloop_Cells_w..</text>
</g>
<g >
<title>CreateFunctionSpace (6,020 us, 0.02%)</title><rect x="863.7" y="199" width="0.3" height="15.0" fill="rgb(136.188171942407,161.55076270705,136.188171942407)" rx="2" ry="2" />
<text  x="866.70" y="209.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (6,644 us, 0.03%)</title><rect x="208.7" y="183" width="0.2" height="15.0" fill="rgb(128.589332789082,150.375012204577,150.375012204577)" rx="2" ry="2" />
<text  x="211.65" y="193.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (8,115 us, 0.03%)</title><rect x="205.5" y="135" width="0.4" height="15.0" fill="rgb(149.571411705826,149.571411705826,117.153764420539)" rx="2" ry="2" />
<text  x="208.51" y="145.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (8,115 us, 0.03%)</title><rect x="205.5" y="119" width="0.4" height="15.0" fill="rgb(153.521086661153,153.521086661153,136.294496896355)" rx="2" ry="2" />
<text  x="208.51" y="129.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (6,020 us, 0.02%)</title><rect x="863.7" y="151" width="0.3" height="15.0" fill="rgb(155.91553736511,142.01911979918,142.01911979918)" rx="2" ry="2" />
<text  x="866.70" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (12,445 us, 0.05%)</title><rect x="67.8" y="87" width="0.6" height="15.0" fill="rgb(150.182512248295,159.272614285161,150.182512248295)" rx="2" ry="2" />
<text  x="70.82" y="97.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (7,921 us, 0.03%)</title><rect x="67.5" y="103" width="0.3" height="15.0" fill="rgb(149.233271653038,159.427141823924,149.233271653038)" rx="2" ry="2" />
<text  x="70.47" y="113.5" ></text>
</g>
<g >
<title>firedrake.utility_meshes.RectangleMesh (3,344 us, 0.01%)</title><rect x="205.9" y="87" width="0.1" height="15.0" fill="rgb(113.080693750822,113.080693750822,149.305940725965)" rx="2" ry="2" />
<text  x="208.87" y="97.5" ></text>
</g>
<g >
<title>ParLoopExecute (5,274,514 us, 19.92%)</title><rect x="897.2" y="135" width="235.1" height="15.0" fill="rgb(142.2325269951,142.2325269951,154.94823103131)" rx="2" ry="2" />
<text  x="900.16" y="145.5" >ParLoopExecute</text>
</g>
<g >
<title>firedrake.matrix_free.operators.ImplicitMatrixContext.__init__ (13,104 us, 0.05%)</title><rect x="207.3" y="103" width="0.6" height="15.0" fill="rgb(112.475352681626,112.475352681626,149.188777938379)" rx="2" ry="2" />
<text  x="210.33" y="113.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (7,921 us, 0.03%)</title><rect x="67.5" y="151" width="0.3" height="15.0" fill="rgb(126.620451387732,149.864561470893,149.864561470893)" rx="2" ry="2" />
<text  x="70.47" y="161.5" ></text>
</g>
<g >
<title>firedrake.mesh.MeshTopology._facets (3,475 us, 0.01%)</title><rect x="205.7" y="151" width="0.2" height="15.0" fill="rgb(150.081784738523,159.289011786752,150.081784738523)" rx="2" ry="2" />
<text  x="208.72" y="161.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalProblem.__init__ (15,929 us, 0.06%)</title><rect x="206.6" y="87" width="0.7" height="15.0" fill="rgb(109.898671010797,109.898671010797,148.690065356928)" rx="2" ry="2" />
<text  x="209.62" y="97.5" ></text>
</g>
<g >
<title>firedrake.assemble.allocate_matrix (6,487 us, 0.02%)</title><rect x="863.4" y="151" width="0.3" height="15.0" fill="rgb(153.436180011671,123.010713422812,123.010713422812)" rx="2" ry="2" />
<text  x="866.41" y="161.5" ></text>
</g>
<g >
<title>firedrake.parloops.par_loop (715,560 us, 2.70%)</title><rect x="865.1" y="151" width="31.9" height="15.0" fill="rgb(152.17648369076,143.077239457572,152.17648369076)" rx="2" ry="2" />
<text  x="868.11" y="161.5" >fi..</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (710,352 us, 2.68%)</title><rect x="865.3" y="199" width="31.7" height="15.0" fill="rgb(132.046362418127,162.225010769142,132.046362418127)" rx="2" ry="2" />
<text  x="868.34" y="209.5" >py..</text>
</g>
<g >
<title>firedrake.__init__ (3,073,472 us, 11.61%)</title><rect x="68.5" y="71" width="137.0" height="15.0" fill="rgb(153.239165214656,121.500266645696,121.500266645696)" rx="2" ry="2" />
<text  x="71.51" y="81.5" >firedrake.__ini..</text>
</g>
<g >
<title>CreateMesh (2,932 us, 0.01%)</title><rect x="68.4" y="71" width="0.1" height="15.0" fill="rgb(155.832444295212,155.832444295212,147.495691584487)" rx="2" ry="2" />
<text  x="71.38" y="81.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.LinearVariationalProblem.__init__ (29,327 us, 0.11%)</title><rect x="206.0" y="71" width="1.3" height="15.0" fill="rgb(137.513595587393,105.503588692695,137.513595587393)" rx="2" ry="2" />
<text  x="209.02" y="81.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (3,011 us, 0.01%)</title><rect x="863.8" y="215" width="0.2" height="15.0" fill="rgb(124.145042151747,149.222788706008,149.222788706008)" rx="2" ry="2" />
<text  x="866.84" y="225.5" ></text>
</g>
<g >
<title>Log_Event_form0_cell_integral_otherwise (8,276 us, 0.03%)</title><rect x="897.6" y="167" width="0.4" height="15.0" fill="rgb(132.364238738406,162.17326346119,132.364238738406)" rx="2" ry="2" />
<text  x="900.61" y="177.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_form1_cell_integral_otherwise (2,315,365 us, 8.75%)</title><rect x="1029.1" y="151" width="103.2" height="15.0" fill="rgb(137.602349235,137.602349235,154.052067593871)" rx="2" ry="2" />
<text  x="1032.06" y="161.5" >Parloop_Cel..</text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (6,020 us, 0.02%)</title><rect x="863.7" y="167" width="0.3" height="15.0" fill="rgb(147.927075286828,159.639778441679,147.927075286828)" rx="2" ry="2" />
<text  x="866.70" y="177.5" ></text>
</g>
<g >
<title>CreateExtMesh (1,297,221 us, 4.90%)</title><rect x="10.0" y="71" width="57.8" height="15.0" fill="rgb(148.59237401647,148.59237401647,112.409197156741)" rx="2" ry="2" />
<text  x="13.00" y="81.5" >Creat..</text>
</g>
<g >
<title>firedrake.ufl_expr.action (7,395 us, 0.03%)</title><rect x="207.3" y="119" width="0.4" height="15.0" fill="rgb(130.600129983633,150.896329995757,150.896329995757)" rx="2" ry="2" />
<text  x="210.33" y="129.5" ></text>
</g>
<g >
<title>firedrake.interpolation.make_interpolator (25,605 us, 0.10%)</title><rect x="864.0" y="151" width="1.1" height="15.0" fill="rgb(150.01977919448,150.01977919448,119.326622250171)" rx="2" ry="2" />
<text  x="866.97" y="161.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (2,303,820 us, 8.70%)</title><rect x="1029.6" y="167" width="102.7" height="15.0" fill="rgb(110.9549319408,110.9549319408,148.894502956284)" rx="2" ry="2" />
<text  x="1032.58" y="177.5" >pyop2.globa..</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (10,712,845 us, 40.47%)</title><rect x="285.4" y="199" width="477.5" height="15.0" fill="rgb(142.329705359731,160.550978197253,142.329705359731)" rx="2" ry="2" />
<text  x="288.36" y="209.5" >pyop2.global_kernel.GlobalKernel.compile</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (1,235,726 us, 4.67%)</title><rect x="12.4" y="135" width="55.1" height="15.0" fill="rgb(135.975469089351,101.562139541462,135.975469089351)" rx="2" ry="2" />
<text  x="15.39" y="145.5" >pyop2..</text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (6,644 us, 0.03%)</title><rect x="208.7" y="199" width="0.2" height="15.0" fill="rgb(118.628061442942,118.628061442942,150.379624795408)" rx="2" ry="2" />
<text  x="211.65" y="209.5" ></text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (2,255,299 us, 8.52%)</title><rect x="762.9" y="167" width="100.5" height="15.0" fill="rgb(140.526537598122,113.224252595188,140.526537598122)" rx="2" ry="2" />
<text  x="765.88" y="177.5" >firedrake.t..</text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (12,445 us, 0.05%)</title><rect x="67.8" y="119" width="0.6" height="15.0" fill="rgb(153.213377041151,121.302557315494,121.302557315494)" rx="2" ry="2" />
<text  x="70.82" y="129.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (710,352 us, 2.68%)</title><rect x="865.3" y="183" width="31.7" height="15.0" fill="rgb(138.006472064337,106.766584664863,138.006472064337)" rx="2" ry="2" />
<text  x="868.34" y="193.5" >Pa..</text>
</g>
<g >
<title>firedrake.functionspace.VectorFunctionSpace (7,921 us, 0.03%)</title><rect x="67.5" y="87" width="0.3" height="15.0" fill="rgb(141.68578644462,116.194827764338,141.68578644462)" rx="2" ry="2" />
<text  x="70.47" y="97.5" ></text>
</g>
<g >
<title>ParLoopExecute (10,712,845 us, 40.47%)</title><rect x="285.4" y="167" width="477.5" height="15.0" fill="rgb(152.974205063394,119.468905486019,119.468905486019)" rx="2" ry="2" />
<text  x="288.36" y="177.5" >ParLoopExecute</text>
</g>
<g >
<title>CreateFunctionSpace (8,115 us, 0.03%)</title><rect x="205.5" y="87" width="0.4" height="15.0" fill="rgb(140.479549500983,160.852166360305,140.479549500983)" rx="2" ry="2" />
<text  x="208.51" y="97.5" ></text>
</g>
</g>
</svg>
