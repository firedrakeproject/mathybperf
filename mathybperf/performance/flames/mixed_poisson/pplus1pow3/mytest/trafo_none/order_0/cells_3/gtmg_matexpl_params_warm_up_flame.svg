<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="267" onload="init(evt)" viewBox="0 0 1200 267" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:13px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:18px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 13 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (1 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="267.0" fill="url(#background)"  />
<text id="title" x="600.00" y="26" >Firedrake example</text>
<text id="details" x="10.00" y="249" > </text>
<text id="unzoom" x="10.00" y="26" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="26" >Search</text>
<text id="ignorecase" x="1174.00" y="26" >ic</text>
<text id="matched" x="1090.00" y="249" > </text>
<g id="frames">
<g >
<title>firedrake.functionspacedata.get_shared_data (6,808 us, 0.03%)</title><rect x="198.3" y="119" width="0.3" height="15.0" fill="rgb(138.488149154411,152.941372002995,152.941372002995)" rx="2" ry="2" />
<text  x="201.27" y="129.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (4,731 us, 0.02%)</title><rect x="200.8" y="167" width="0.2" height="15.0" fill="rgb(152.323534668397,114.480432457709,114.480432457709)" rx="2" ry="2" />
<text  x="203.76" y="177.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.__init__ (7,962 us, 0.03%)</title><rect x="199.7" y="71" width="0.3" height="15.0" fill="rgb(129.679174245659,150.657563693319,150.657563693319)" rx="2" ry="2" />
<text  x="202.66" y="81.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (4,731 us, 0.02%)</title><rect x="200.8" y="199" width="0.2" height="15.0" fill="rgb(112.418224779422,146.182502720591,146.182502720591)" rx="2" ry="2" />
<text  x="203.76" y="209.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (6,917 us, 0.03%)</title><rect x="60.4" y="151" width="0.3" height="15.0" fill="rgb(118.206788640005,147.683241499261,147.683241499261)" rx="2" ry="2" />
<text  x="63.37" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (2,825 us, 0.01%)</title><rect x="876.3" y="215" width="0.2" height="15.0" fill="rgb(153.52259086237,123.673196611504,123.673196611504)" rx="2" ry="2" />
<text  x="879.33" y="225.5" ></text>
</g>
<g >
<title>perfsolve (21,670,887 us, 83.90%)</title><rect x="200.0" y="71" width="990.0" height="15.0" fill="rgb(131.586997219282,131.586997219282,152.887805913409)" rx="2" ry="2" />
<text  x="203.03" y="81.5" >perfsolve</text>
</g>
<g >
<title>ParLoopExecute (10,980,724 us, 42.51%)</title><rect x="275.3" y="167" width="501.6" height="15.0" fill="rgb(153.922510093803,126.739244052492,126.739244052492)" rx="2" ry="2" />
<text  x="278.28" y="177.5" >ParLoopExecute</text>
</g>
<g >
<title>firedrake.ufl_expr.action (4,758 us, 0.02%)</title><rect x="199.7" y="119" width="0.2" height="15.0" fill="rgb(155.020108801161,135.15416747557,135.15416747557)" rx="2" ry="2" />
<text  x="202.66" y="129.5" ></text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (2,164,424 us, 8.38%)</title><rect x="776.9" y="167" width="98.9" height="15.0" fill="rgb(155.520056962426,155.520056962426,145.981814510221)" rx="2" ry="2" />
<text  x="779.90" y="177.5" >firedrake...</text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (8,314 us, 0.03%)</title><rect x="876.1" y="167" width="0.4" height="15.0" fill="rgb(142.369982730859,160.544421415907,142.369982730859)" rx="2" ry="2" />
<text  x="879.08" y="177.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.action (11,031 us, 0.04%)</title><rect x="198.7" y="87" width="0.5" height="15.0" fill="rgb(155.555055849436,139.255428179011,139.255428179011)" rx="2" ry="2" />
<text  x="201.71" y="97.5" ></text>
</g>
<g >
<title>firedrake.utility_meshes.RectangleMesh (2,898 us, 0.01%)</title><rect x="198.6" y="87" width="0.1" height="15.0" fill="rgb(118.577505876126,147.779353375292,147.779353375292)" rx="2" ry="2" />
<text  x="201.58" y="97.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.LinearVariationalProblem.__init__ (20,785 us, 0.08%)</title><rect x="198.7" y="71" width="1.0" height="15.0" fill="rgb(137.033812644792,104.274144902279,137.033812644792)" rx="2" ry="2" />
<text  x="201.71" y="81.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (6,917 us, 0.03%)</title><rect x="60.4" y="119" width="0.3" height="15.0" fill="rgb(152.00301027337,152.00301027337,128.937665170946)" rx="2" ry="2" />
<text  x="63.37" y="129.5" ></text>
</g>
<g >
<title>firedrake.parloops.par_loop (673,789 us, 2.61%)</title><rect x="877.6" y="151" width="30.7" height="15.0" fill="rgb(115.144287987463,115.144287987463,149.70534606209)" rx="2" ry="2" />
<text  x="880.57" y="161.5" >fi..</text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (988,686 us, 3.83%)</title><rect x="1144.8" y="135" width="45.2" height="15.0" fill="rgb(150.406607338465,150.406607338465,121.201250947944)" rx="2" ry="2" />
<text  x="1147.83" y="145.5" >fir..</text>
</g>
<g >
<title>firedrake.assemble.allocate_matrix (7,962 us, 0.03%)</title><rect x="199.7" y="87" width="0.3" height="15.0" fill="rgb(154.407676140097,130.458850407407,130.458850407407)" rx="2" ry="2" />
<text  x="202.66" y="97.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.solve (21,670,887 us, 83.90%)</title><rect x="200.0" y="87" width="990.0" height="15.0" fill="rgb(154.707696269048,132.759004729367,132.759004729367)" rx="2" ry="2" />
<text  x="203.03" y="97.5" >firedrake.variational_solver.NonlinearVariationalSolver.solve</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (2,836,568 us, 10.98%)</title><rect x="909.3" y="167" width="129.6" height="15.0" fill="rgb(139.774391016515,139.774391016515,154.47246277739)" rx="2" ry="2" />
<text  x="912.33" y="177.5" >pyop2.global_k..</text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (6,917 us, 0.03%)</title><rect x="60.4" y="135" width="0.3" height="15.0" fill="rgb(142.21267603143,153.906990082223,153.906990082223)" rx="2" ry="2" />
<text  x="63.37" y="145.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (668,479 us, 2.59%)</title><rect x="877.8" y="199" width="30.5" height="15.0" fill="rgb(113.956289057747,113.956289057747,149.47541078537)" rx="2" ry="2" />
<text  x="880.81" y="209.5" >p..</text>
</g>
<g >
<title>ParLoopExecute (1,065,979 us, 4.13%)</title><rect x="11.7" y="103" width="48.7" height="15.0" fill="rgb(110.306518463164,145.635023305265,145.635023305265)" rx="2" ry="2" />
<text  x="14.67" y="113.5" >ParL..</text>
</g>
<g >
<title>Log_Event_form0_cell_integral_otherwise (8,279 us, 0.03%)</title><rect x="909.0" y="167" width="0.3" height="15.0" fill="rgb(152.744377414296,152.744377414296,132.530444392358)" rx="2" ry="2" />
<text  x="911.95" y="177.5" ></text>
</g>
<g >
<title>ParLoopExecute (5,173,536 us, 20.03%)</title><rect x="908.5" y="135" width="236.3" height="15.0" fill="rgb(139.774566531889,139.774566531889,154.472496748108)" rx="2" ry="2" />
<text  x="911.50" y="145.5" >ParLoopExecute</text>
</g>
<g >
<title>firedrake.extrusion_utils.make_extruded_coords (1,102,542 us, 4.27%)</title><rect x="10.0" y="87" width="50.4" height="15.0" fill="rgb(114.474880032321,114.474880032321,149.575783232062)" rx="2" ry="2" />
<text  x="13.00" y="97.5" >fire..</text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (11,663 us, 0.05%)</title><rect x="60.7" y="103" width="0.5" height="15.0" fill="rgb(147.911132266783,147.911132266783,109.107794831335)" rx="2" ry="2" />
<text  x="63.68" y="113.5" ></text>
</g>
<g >
<title>firedrake.utility_meshes.SquareMesh (2,898 us, 0.01%)</title><rect x="198.6" y="71" width="0.1" height="15.0" fill="rgb(145.049660026204,160.108194879455,145.049660026204)" rx="2" ry="2" />
<text  x="201.58" y="81.5" ></text>
</g>
<g >
<title>all (25,830,645 us, 100%)</title><rect x="10.0" y="39" width="1180.0" height="15.0" fill="rgb(136.200334971605,152.348234992638,152.348234992638)" rx="2" ry="2" />
<text  x="13.00" y="49.5" ></text>
</g>
<g >
<title>firedrake.__init__ (3,000,183 us, 11.61%)</title><rect x="61.2" y="71" width="137.1" height="15.0" fill="rgb(136.57032049195,152.44415716458,152.44415716458)" rx="2" ry="2" />
<text  x="64.22" y="81.5" >firedrake.__ini..</text>
</g>
<g >
<title>HybridOperatorAssembly (14,771,777 us, 57.19%)</title><rect x="201.0" y="151" width="674.8" height="15.0" fill="rgb(108.00992255889,145.039609552305,145.039609552305)" rx="2" ry="2" />
<text  x="203.97" y="161.5" >HybridOperatorAssembly</text>
</g>
<g >
<title>firedrake (25,830,645 us, 100.00%)</title><rect x="10.0" y="55" width="1180.0" height="15.0" fill="rgb(144.865420756837,124.342640689395,144.865420756837)" rx="2" ry="2" />
<text  x="13.00" y="65.5" >firedrake</text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (9,754 us, 0.04%)</title><rect x="199.2" y="103" width="0.5" height="15.0" fill="rgb(136.856725027693,136.856725027693,153.907753231166)" rx="2" ry="2" />
<text  x="202.22" y="113.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (6,808 us, 0.03%)</title><rect x="198.3" y="87" width="0.3" height="15.0" fill="rgb(131.541523007951,151.140394853913,151.140394853913)" rx="2" ry="2" />
<text  x="201.27" y="97.5" ></text>
</g>
<g >
<title>firedrake.assemble.allocate_matrix (6,518 us, 0.03%)</title><rect x="875.8" y="151" width="0.3" height="15.0" fill="rgb(153.821153995327,125.962180630839,125.962180630839)" rx="2" ry="2" />
<text  x="878.78" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (6,808 us, 0.03%)</title><rect x="198.3" y="135" width="0.3" height="15.0" fill="rgb(151.852781809857,142.247753387759,151.852781809857)" rx="2" ry="2" />
<text  x="201.27" y="145.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (5,503 us, 0.02%)</title><rect x="876.2" y="199" width="0.3" height="15.0" fill="rgb(114.277192341109,146.664457273621,146.664457273621)" rx="2" ry="2" />
<text  x="879.21" y="209.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (6,808 us, 0.03%)</title><rect x="198.3" y="103" width="0.3" height="15.0" fill="rgb(151.793110926882,151.793110926882,127.920460645661)" rx="2" ry="2" />
<text  x="201.27" y="113.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (11,663 us, 0.05%)</title><rect x="60.7" y="71" width="0.5" height="15.0" fill="rgb(129.964688518246,162.563887915634,129.964688518246)" rx="2" ry="2" />
<text  x="63.68" y="81.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (2,307,264 us, 8.93%)</title><rect x="1039.4" y="167" width="105.4" height="15.0" fill="rgb(152.872203967816,118.686897086591,118.686897086591)" rx="2" ry="2" />
<text  x="1042.43" y="177.5" >pyop2.globa..</text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (668,479 us, 2.59%)</title><rect x="877.8" y="183" width="30.5" height="15.0" fill="rgb(155.814661444394,141.245737740355,141.245737740355)" rx="2" ry="2" />
<text  x="880.81" y="193.5" >P..</text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (11,663 us, 0.05%)</title><rect x="60.7" y="87" width="0.5" height="15.0" fill="rgb(142.295550552299,142.295550552299,154.960429139155)" rx="2" ry="2" />
<text  x="63.68" y="97.5" ></text>
</g>
<g >
<title>PCSetUp (15,505,406 us, 60.03%)</title><rect x="200.0" y="119" width="708.3" height="15.0" fill="rgb(151.017777624693,151.017777624693,124.163076181205)" rx="2" ry="2" />
<text  x="203.03" y="129.5" >PCSetUp</text>
</g>
<g >
<title>SNESSolve (21,670,887 us, 83.90%)</title><rect x="200.0" y="103" width="990.0" height="15.0" fill="rgb(140.776610494817,113.865064392969,140.776610494817)" rx="2" ry="2" />
<text  x="203.03" y="113.5" >SNESSolve</text>
</g>
<g >
<title>Parloop_Cells_wrap_form1_cell_integral_otherwise (2,318,683 us, 8.98%)</title><rect x="1038.9" y="151" width="105.9" height="15.0" fill="rgb(156.187342943617,144.102962567728,144.102962567728)" rx="2" ry="2" />
<text  x="1041.91" y="161.5" >Parloop_Cel..</text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (8,314 us, 0.03%)</title><rect x="876.1" y="183" width="0.4" height="15.0" fill="rgb(105.505955007449,144.390432779709,144.390432779709)" rx="2" ry="2" />
<text  x="879.08" y="193.5" ></text>
</g>
<g >
<title>firedrake.functionspace.VectorFunctionSpace (6,917 us, 0.03%)</title><rect x="60.4" y="87" width="0.3" height="15.0" fill="rgb(135.968655494422,101.544679704457,135.968655494422)" rx="2" ry="2" />
<text  x="63.37" y="97.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (6,917 us, 0.03%)</title><rect x="60.4" y="103" width="0.3" height="15.0" fill="rgb(126.709037228644,126.709037228644,151.943684624899)" rx="2" ry="2" />
<text  x="63.37" y="113.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (4,636 us, 0.02%)</title><rect x="1189.8" y="151" width="0.2" height="15.0" fill="rgb(153.877391610567,126.393335681012,126.393335681012)" rx="2" ry="2" />
<text  x="1192.79" y="161.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_slate_wrapper (10,980,724 us, 42.51%)</title><rect x="275.3" y="183" width="501.6" height="15.0" fill="rgb(121.259789056121,121.259789056121,150.888991430217)" rx="2" ry="2" />
<text  x="278.28" y="193.5" >Parloop_Cells_wrap_slate_wrapper</text>
</g>
<g >
<title>firedrake.matrix_free.operators.ImplicitMatrixContext.__init__ (7,962 us, 0.03%)</title><rect x="199.7" y="103" width="0.3" height="15.0" fill="rgb(155.107592872349,135.824878688009,135.824878688009)" rx="2" ry="2" />
<text  x="202.66" y="113.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (4,636 us, 0.02%)</title><rect x="1189.8" y="167" width="0.2" height="15.0" fill="rgb(137.081683615609,104.396814264998,137.081683615609)" rx="2" ry="2" />
<text  x="1192.79" y="177.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (3,204 us, 0.01%)</title><rect x="199.9" y="119" width="0.1" height="15.0" fill="rgb(149.71620842145,149.71620842145,117.855471580872)" rx="2" ry="2" />
<text  x="202.88" y="129.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_form0_cell_integral_otherwise (2,854,853 us, 11.05%)</title><rect x="908.5" y="151" width="130.4" height="15.0" fill="rgb(146.438592250249,146.438592250249,155.762308177468)" rx="2" ry="2" />
<text  x="911.50" y="161.5" >Parloop_Cells_w..</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (10,980,724 us, 42.51%)</title><rect x="275.3" y="199" width="501.6" height="15.0" fill="rgb(149.171499721003,149.171499721003,115.215729417167)" rx="2" ry="2" />
<text  x="278.28" y="209.5" >pyop2.global_kernel.GlobalKernel.compile</text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (11,663 us, 0.05%)</title><rect x="60.7" y="119" width="0.5" height="15.0" fill="rgb(151.301895572492,151.301895572492,125.53995546669)" rx="2" ry="2" />
<text  x="63.68" y="129.5" ></text>
</g>
<g >
<title>HybridInit (15,505,406 us, 60.03%)</title><rect x="200.0" y="135" width="708.3" height="15.0" fill="rgb(148.584987199074,148.584987199074,112.373399503207)" rx="2" ry="2" />
<text  x="203.03" y="145.5" >HybridInit</text>
</g>
<g >
<title>CreateSparsity (6,518 us, 0.03%)</title><rect x="875.8" y="167" width="0.3" height="15.0" fill="rgb(124.415176378308,124.415176378308,151.499711557092)" rx="2" ry="2" />
<text  x="878.78" y="177.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (1,065,979 us, 4.13%)</title><rect x="11.7" y="135" width="48.7" height="15.0" fill="rgb(107.352675939005,144.869212280483,144.869212280483)" rx="2" ry="2" />
<text  x="14.67" y="145.5" >pyop..</text>
</g>
<g >
<title>ParLoopExecute (668,479 us, 2.59%)</title><rect x="877.8" y="167" width="30.5" height="15.0" fill="rgb(143.003139045357,160.441349457733,143.003139045357)" rx="2" ry="2" />
<text  x="880.81" y="177.5" >P..</text>
</g>
<g >
<title>Parloop_Cells_wrap_pyop2_kernel_uniform_extrusion (1,065,979 us, 4.13%)</title><rect x="11.7" y="119" width="48.7" height="15.0" fill="rgb(144.403509100614,160.213382239435,144.403509100614)" rx="2" ry="2" />
<text  x="14.67" y="129.5" >Parl..</text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (8,314 us, 0.03%)</title><rect x="876.1" y="151" width="0.4" height="15.0" fill="rgb(111.356000754335,145.907111306679,145.907111306679)" rx="2" ry="2" />
<text  x="879.08" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (4,731 us, 0.02%)</title><rect x="200.8" y="183" width="0.2" height="15.0" fill="rgb(116.815777670148,147.322609025594,147.322609025594)" rx="2" ry="2" />
<text  x="203.76" y="193.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (8,037 us, 0.03%)</title><rect x="200.6" y="151" width="0.4" height="15.0" fill="rgb(152.1444917368,113.107769982132,113.107769982132)" rx="2" ry="2" />
<text  x="203.61" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspace.MixedFunctionSpace (3,306 us, 0.01%)</title><rect x="200.6" y="167" width="0.2" height="15.0" fill="rgb(129.979012748036,150.735299601343,150.735299601343)" rx="2" ry="2" />
<text  x="203.61" y="177.5" ></text>
</g>
<g >
<title>firedrake.mesh.MeshTopology._facets (2,945 us, 0.01%)</title><rect x="198.4" y="151" width="0.2" height="15.0" fill="rgb(152.086064127404,112.659824976761,112.659824976761)" rx="2" ry="2" />
<text  x="201.45" y="161.5" ></text>
</g>
<g >
<title>SNESFunctionEval (6,165,481 us, 23.87%)</title><rect x="908.3" y="119" width="281.7" height="15.0" fill="rgb(127.065966070703,127.065966070703,152.012767626588)" rx="2" ry="2" />
<text  x="911.35" y="129.5" >SNESFunctionEval</text>
</g>
<g >
<title>firedrake.functionspace.VectorFunctionSpace (6,808 us, 0.03%)</title><rect x="198.3" y="71" width="0.3" height="15.0" fill="rgb(135.146745463349,99.4385352498316,135.146745463349)" rx="2" ry="2" />
<text  x="201.27" y="81.5" ></text>
</g>
<g >
<title>CreateExtMesh (1,109,459 us, 4.30%)</title><rect x="10.0" y="71" width="50.7" height="15.0" fill="rgb(111.00848708853,145.8170151711,145.8170151711)" rx="2" ry="2" />
<text  x="13.00" y="81.5" >Crea..</text>
</g>
<g >
<title>firedrake.interpolation.make_interpolator (24,280 us, 0.09%)</title><rect x="876.5" y="151" width="1.1" height="15.0" fill="rgb(105.53600721268,144.398224092176,144.398224092176)" rx="2" ry="2" />
<text  x="879.46" y="161.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalProblem.__init__ (9,754 us, 0.04%)</title><rect x="199.2" y="87" width="0.5" height="15.0" fill="rgb(149.869247485407,149.869247485407,118.597122429278)" rx="2" ry="2" />
<text  x="202.22" y="97.5" ></text>
</g>
</g>
</svg>
