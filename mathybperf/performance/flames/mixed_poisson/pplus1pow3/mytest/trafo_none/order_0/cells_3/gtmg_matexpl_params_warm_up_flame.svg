<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="283" onload="init(evt)" viewBox="0 0 1200 283" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:13px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:18px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 13 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (1 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="283.0" fill="url(#background)"  />
<text id="title" x="600.00" y="26" >Firedrake example</text>
<text id="details" x="10.00" y="265" > </text>
<text id="unzoom" x="10.00" y="26" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="26" >Search</text>
<text id="ignorecase" x="1174.00" y="26" >ic</text>
<text id="matched" x="1090.00" y="265" > </text>
<g id="frames">
<g >
<title>perfsolve (12,359,298 us, 73.19%)</title><rect x="326.4" y="71" width="863.6" height="15.0" fill="rgb(129.101943155899,150.507911188566,150.507911188566)" rx="2" ry="2" />
<text  x="329.39" y="81.5" >perfsolve</text>
</g>
<g >
<title>firedrake.mesh.MeshTopology._facets (2,602 us, 0.02%)</title><rect x="324.1" y="151" width="0.1" height="15.0" fill="rgb(153.461895797629,153.461895797629,136.007648865433)" rx="2" ry="2" />
<text  x="327.06" y="161.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_pyop2_kernel_uniform_extrusion (1,173,739 us, 6.95%)</title><rect x="12.7" y="119" width="82.0" height="15.0" fill="rgb(149.742670148323,149.742670148323,117.983709180334)" rx="2" ry="2" />
<text  x="15.67" y="129.5" >Parloop_..</text>
</g>
<g >
<title>SNESSolve (12,359,298 us, 73.19%)</title><rect x="326.4" y="103" width="863.6" height="15.0" fill="rgb(104.869549006874,144.225438631412,144.225438631412)" rx="2" ry="2" />
<text  x="329.39" y="113.5" >SNESSolve</text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (6,095 us, 0.04%)</title><rect x="323.8" y="119" width="0.4" height="15.0" fill="rgb(122.763386420625,148.864581664606,148.864581664606)" rx="2" ry="2" />
<text  x="326.82" y="129.5" ></text>
</g>
<g >
<title>firedrake.__init__ (3,258,710 us, 19.30%)</title><rect x="96.1" y="71" width="227.7" height="15.0" fill="rgb(150.736674719325,150.736674719325,122.800808255191)" rx="2" ry="2" />
<text  x="99.12" y="81.5" >firedrake.__init__</text>
</g>
<g >
<title>firedrake.utility_meshes.RectangleMesh (2,367 us, 0.01%)</title><rect x="324.2" y="87" width="0.2" height="15.0" fill="rgb(137.403448277754,137.403448277754,154.013570634404)" rx="2" ry="2" />
<text  x="327.24" y="97.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (2,107 us, 0.01%)</title><rect x="732.9" y="167" width="0.2" height="15.0" fill="rgb(112.932081632082,112.932081632082,149.27717709008)" rx="2" ry="2" />
<text  x="735.91" y="177.5" ></text>
</g>
<g >
<title>PCSetUp (6,538,203 us, 38.72%)</title><rect x="326.4" y="119" width="456.8" height="15.0" fill="rgb(135.803501900717,152.24535234463,152.24535234463)" rx="2" ry="2" />
<text  x="329.39" y="129.5" >PCSetUp</text>
</g>
<g >
<title>firedrake.ufl_expr.action (11,200 us, 0.07%)</title><rect x="324.4" y="87" width="0.8" height="15.0" fill="rgb(152.450051183049,152.450051183049,131.104094194775)" rx="2" ry="2" />
<text  x="327.41" y="97.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.action (3,970 us, 0.02%)</title><rect x="325.9" y="119" width="0.3" height="15.0" fill="rgb(142.811209496097,142.811209496097,155.060234096019)" rx="2" ry="2" />
<text  x="328.88" y="129.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (6,431 us, 0.04%)</title><rect x="733.8" y="183" width="0.5" height="15.0" fill="rgb(154.219936343548,154.219936343548,139.681229972581)" rx="2" ry="2" />
<text  x="736.84" y="193.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (1,825 us, 0.01%)</title><rect x="734.2" y="215" width="0.1" height="15.0" fill="rgb(136.050185610937,136.050185610937,153.751648827923)" rx="2" ry="2" />
<text  x="737.17" y="225.5" ></text>
</g>
<g >
<title>firedrake.utility_meshes.SquareMesh (2,367 us, 0.01%)</title><rect x="324.2" y="71" width="0.2" height="15.0" fill="rgb(120.761563761388,120.761563761388,150.792560728011)" rx="2" ry="2" />
<text  x="327.24" y="81.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (3,596 us, 0.02%)</title><rect x="1189.7" y="167" width="0.3" height="15.0" fill="rgb(132.811800639165,162.100404547113,132.811800639165)" rx="2" ry="2" />
<text  x="1192.75" y="177.5" ></text>
</g>
<g >
<title>CreateSparsity (6,679 us, 0.04%)</title><rect x="733.2" y="167" width="0.5" height="15.0" fill="rgb(153.590778367163,124.195967481581,124.195967481581)" rx="2" ry="2" />
<text  x="736.21" y="177.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (674,078 us, 3.99%)</title><rect x="736.1" y="183" width="47.1" height="15.0" fill="rgb(138.485072009222,138.485072009222,154.222917163075)" rx="2" ry="2" />
<text  x="739.15" y="193.5" >Parl..</text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (4,687 us, 0.03%)</title><rect x="327.4" y="167" width="0.3" height="15.0" fill="rgb(153.113565034297,120.53733192961,120.53733192961)" rx="2" ry="2" />
<text  x="330.38" y="177.5" ></text>
</g>
<g >
<title>SNESFunctionEval (5,821,095 us, 34.47%)</title><rect x="783.2" y="119" width="406.8" height="15.0" fill="rgb(141.876324310866,141.876324310866,154.879288576297)" rx="2" ry="2" />
<text  x="786.25" y="129.5" >SNESFunctionEval</text>
</g>
<g >
<title>ParLoopExecute (1,173,739 us, 6.95%)</title><rect x="12.7" y="103" width="82.0" height="15.0" fill="rgb(149.384299590856,159.402555880558,149.384299590856)" rx="2" ry="2" />
<text  x="15.67" y="113.5" >ParLoopE..</text>
</g>
<g >
<title>CreateFunctionSpace (6,475 us, 0.04%)</title><rect x="327.3" y="151" width="0.4" height="15.0" fill="rgb(155.096083291155,135.736638565524,135.736638565524)" rx="2" ry="2" />
<text  x="330.25" y="161.5" ></text>
</g>
<g >
<title>firedrake.parloops.par_loop (679,853 us, 4.03%)</title><rect x="735.7" y="151" width="47.5" height="15.0" fill="rgb(116.46661371471,116.46661371471,149.961280073815)" rx="2" ry="2" />
<text  x="738.74" y="161.5" >fire..</text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.solve (12,359,298 us, 73.19%)</title><rect x="326.4" y="87" width="863.6" height="15.0" fill="rgb(115.54140780087,115.54140780087,149.782207961459)" rx="2" ry="2" />
<text  x="329.39" y="97.5" >firedrake.variational_solver.NonlinearVariationalSolver.solve</text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (11,756 us, 0.07%)</title><rect x="95.1" y="119" width="0.9" height="15.0" fill="rgb(117.506277373428,147.501627467185,147.501627467185)" rx="2" ry="2" />
<text  x="98.15" y="129.5" ></text>
</g>
<g >
<title>HybridInit (6,538,203 us, 38.72%)</title><rect x="326.4" y="135" width="456.8" height="15.0" fill="rgb(147.759573151022,147.759573151022,108.373316039566)" rx="2" ry="2" />
<text  x="329.39" y="145.5" >HybridInit</text>
</g>
<g >
<title>ParLoopExecute (674,078 us, 3.99%)</title><rect x="736.1" y="167" width="47.1" height="15.0" fill="rgb(154.716406587754,132.825783839447,132.825783839447)" rx="2" ry="2" />
<text  x="739.15" y="177.5" >ParL..</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (1,173,739 us, 6.95%)</title><rect x="12.7" y="135" width="82.0" height="15.0" fill="rgb(151.624587899708,151.624587899708,127.103772129356)" rx="2" ry="2" />
<text  x="15.67" y="145.5" >pyop2.gl..</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (2,673,546 us, 15.83%)</title><rect x="784.0" y="167" width="186.8" height="15.0" fill="rgb(126.111405956334,126.111405956334,151.828014056065)" rx="2" ry="2" />
<text  x="787.00" y="177.5" >pyop2.global_kernel.Gl..</text>
</g>
<g >
<title>firedrake.functionspace.MixedFunctionSpace (1,788 us, 0.01%)</title><rect x="327.3" y="167" width="0.1" height="15.0" fill="rgb(152.479881301907,143.854695836137,152.479881301907)" rx="2" ry="2" />
<text  x="330.25" y="177.5" ></text>
</g>
<g >
<title>firedrake.functionspace.VectorFunctionSpace (6,095 us, 0.04%)</title><rect x="323.8" y="71" width="0.4" height="15.0" fill="rgb(150.090375269806,150.090375269806,119.668741692136)" rx="2" ry="2" />
<text  x="326.82" y="81.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (2,155,228 us, 12.76%)</title><rect x="970.8" y="167" width="150.6" height="15.0" fill="rgb(115.292847077541,115.292847077541,149.734099434363)" rx="2" ry="2" />
<text  x="973.82" y="177.5" >pyop2.global_kern..</text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (4,687 us, 0.03%)</title><rect x="327.4" y="183" width="0.3" height="15.0" fill="rgb(129.915069341729,150.718721681189,150.718721681189)" rx="2" ry="2" />
<text  x="330.38" y="193.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_form0_cell_integral_otherwise (2,680,812 us, 15.87%)</title><rect x="783.5" y="151" width="187.3" height="15.0" fill="rgb(106.767594387598,144.717524470859,144.717524470859)" rx="2" ry="2" />
<text  x="786.49" y="161.5" >Parloop_Cells_wrap_for..</text>
</g>
<g >
<title>CreateFunctionSpace (6,556 us, 0.04%)</title><rect x="94.7" y="103" width="0.4" height="15.0" fill="rgb(127.845622030007,162.908852227673,127.845622030007)" rx="2" ry="2" />
<text  x="97.69" y="113.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (1,788 us, 0.01%)</title><rect x="327.3" y="183" width="0.1" height="15.0" fill="rgb(130.742082696542,150.933132550955,150.933132550955)" rx="2" ry="2" />
<text  x="330.25" y="193.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (6,095 us, 0.04%)</title><rect x="323.8" y="103" width="0.4" height="15.0" fill="rgb(110.159823190608,110.159823190608,148.740610940118)" rx="2" ry="2" />
<text  x="326.82" y="113.5" ></text>
</g>
<g >
<title>firedrake.interpolation.make_interpolator (20,766 us, 0.12%)</title><rect x="734.3" y="151" width="1.4" height="15.0" fill="rgb(154.299879185158,129.63240708621,129.63240708621)" rx="2" ry="2" />
<text  x="737.29" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (6,556 us, 0.04%)</title><rect x="94.7" y="135" width="0.4" height="15.0" fill="rgb(134.10058844346,134.10058844346,153.37430744067)" rx="2" ry="2" />
<text  x="97.69" y="145.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (11,756 us, 0.07%)</title><rect x="95.1" y="71" width="0.9" height="15.0" fill="rgb(137.456951374014,161.344217218184,137.456951374014)" rx="2" ry="2" />
<text  x="98.15" y="81.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (1,825 us, 0.01%)</title><rect x="734.2" y="231" width="0.1" height="15.0" fill="rgb(127.711673125626,127.711673125626,152.137743185605)" rx="2" ry="2" />
<text  x="737.17" y="241.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (8,848 us, 0.05%)</title><rect x="733.7" y="151" width="0.6" height="15.0" fill="rgb(133.068054212645,151.536162203278,151.536162203278)" rx="2" ry="2" />
<text  x="736.67" y="161.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_slate_wrapper (2,084,175 us, 12.34%)</title><rect x="438.3" y="183" width="145.6" height="15.0" fill="rgb(151.50720097381,151.50720097381,126.534897026924)" rx="2" ry="2" />
<text  x="441.31" y="193.5" >Parloop_Cells_wr..</text>
</g>
<g >
<title>firedrake.variational_solver.LinearVariationalProblem.__init__ (21,007 us, 0.12%)</title><rect x="324.4" y="71" width="1.5" height="15.0" fill="rgb(152.346280602213,114.6548179503,114.6548179503)" rx="2" ry="2" />
<text  x="327.41" y="81.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (4,687 us, 0.03%)</title><rect x="327.4" y="199" width="0.3" height="15.0" fill="rgb(128.070676243687,162.872215495214,128.070676243687)" rx="2" ry="2" />
<text  x="330.38" y="209.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (6,025 us, 0.04%)</title><rect x="1189.6" y="151" width="0.4" height="15.0" fill="rgb(142.293947037031,117.753239282393,142.293947037031)" rx="2" ry="2" />
<text  x="1192.58" y="161.5" ></text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (2,131,840 us, 12.62%)</title><rect x="583.9" y="167" width="149.0" height="15.0" fill="rgb(133.042801453124,133.042801453124,153.169574474798)" rx="2" ry="2" />
<text  x="586.94" y="177.5" >firedrake.tsfc_in..</text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (9,807 us, 0.06%)</title><rect x="325.2" y="103" width="0.7" height="15.0" fill="rgb(151.38233262216,151.38233262216,125.929765784314)" rx="2" ry="2" />
<text  x="328.19" y="113.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (6,095 us, 0.04%)</title><rect x="323.8" y="87" width="0.4" height="15.0" fill="rgb(132.867284940302,132.867284940302,153.135603536833)" rx="2" ry="2" />
<text  x="326.82" y="97.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_form1_cell_integral_otherwise (2,155,228 us, 12.76%)</title><rect x="970.8" y="151" width="150.6" height="15.0" fill="rgb(154.228158325974,129.082547165802,129.082547165802)" rx="2" ry="2" />
<text  x="973.82" y="161.5" >Parloop_Cells_wra..</text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (6,095 us, 0.04%)</title><rect x="323.8" y="135" width="0.4" height="15.0" fill="rgb(108.898341220082,108.898341220082,148.496453139371)" rx="2" ry="2" />
<text  x="326.82" y="145.5" ></text>
</g>
<g >
<title>ParLoopExecute (2,084,175 us, 12.34%)</title><rect x="438.3" y="167" width="145.6" height="15.0" fill="rgb(117.27356567372,117.27356567372,150.117464323946)" rx="2" ry="2" />
<text  x="441.31" y="177.5" >ParLoopExecute</text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (981,567 us, 5.81%)</title><rect x="1121.4" y="135" width="68.6" height="15.0" fill="rgb(133.327199732867,133.327199732867,153.224619303136)" rx="2" ry="2" />
<text  x="1124.41" y="145.5" >firedr..</text>
</g>
<g >
<title>firedrake.functionspace.VectorFunctionSpace (6,556 us, 0.04%)</title><rect x="94.7" y="87" width="0.4" height="15.0" fill="rgb(112.5450131651,146.215373783545,146.215373783545)" rx="2" ry="2" />
<text  x="97.69" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (6,556 us, 0.04%)</title><rect x="94.7" y="119" width="0.4" height="15.0" fill="rgb(117.581096404513,147.521024993763,147.521024993763)" rx="2" ry="2" />
<text  x="97.69" y="129.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (1,788 us, 0.01%)</title><rect x="327.3" y="199" width="0.1" height="15.0" fill="rgb(150.600020925808,150.600020925808,122.138562948146)" rx="2" ry="2" />
<text  x="330.25" y="209.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (674,078 us, 3.99%)</title><rect x="736.1" y="199" width="47.1" height="15.0" fill="rgb(149.198200760432,149.198200760432,115.345126762094)" rx="2" ry="2" />
<text  x="739.15" y="209.5" >pyop..</text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (6,556 us, 0.04%)</title><rect x="94.7" y="151" width="0.4" height="15.0" fill="rgb(149.693305073745,149.693305073745,117.7444784343)" rx="2" ry="2" />
<text  x="97.69" y="161.5" ></text>
</g>
<g >
<title>firedrake.assemble.allocate_matrix (7,312 us, 0.04%)</title><rect x="325.9" y="87" width="0.5" height="15.0" fill="rgb(126.826301573334,126.826301573334,151.966380949678)" rx="2" ry="2" />
<text  x="328.88" y="97.5" ></text>
</g>
<g >
<title>firedrake.assemble.allocate_matrix (8,873 us, 0.05%)</title><rect x="733.1" y="151" width="0.6" height="15.0" fill="rgb(148.380261387881,148.380261387881,111.381266725883)" rx="2" ry="2" />
<text  x="736.05" y="161.5" ></text>
</g>
<g >
<title>CreateExtMesh (1,218,577 us, 7.22%)</title><rect x="10.0" y="71" width="85.1" height="15.0" fill="rgb(152.132161377245,152.132161377245,129.563551289724)" rx="2" ry="2" />
<text  x="13.00" y="81.5" >CreateExt..</text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (11,756 us, 0.07%)</title><rect x="95.1" y="87" width="0.9" height="15.0" fill="rgb(145.501746699872,160.034599374439,145.501746699872)" rx="2" ry="2" />
<text  x="98.15" y="97.5" ></text>
</g>
<g >
<title>firedrake.matrix_free.operators.ImplicitMatrixContext.__init__ (7,312 us, 0.04%)</title><rect x="325.9" y="103" width="0.5" height="15.0" fill="rgb(130.84034463773,150.958607869041,150.958607869041)" rx="2" ry="2" />
<text  x="328.88" y="113.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (2,084,175 us, 12.34%)</title><rect x="438.3" y="199" width="145.6" height="15.0" fill="rgb(154.969096035891,134.763069608496,134.763069608496)" rx="2" ry="2" />
<text  x="441.31" y="209.5" >pyop2.global_ker..</text>
</g>
<g >
<title>all (16,887,199 us, 100%)</title><rect x="10.0" y="39" width="1180.0" height="15.0" fill="rgb(145.733108091095,145.733108091095,155.625762856341)" rx="2" ry="2" />
<text  x="13.00" y="49.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalProblem.__init__ (9,807 us, 0.06%)</title><rect x="325.2" y="87" width="0.7" height="15.0" fill="rgb(106.385837399397,144.618550436881,144.618550436881)" rx="2" ry="2" />
<text  x="328.19" y="97.5" ></text>
</g>
<g >
<title>firedrake (16,887,199 us, 100.00%)</title><rect x="10.0" y="55" width="1180.0" height="15.0" fill="rgb(128.880263742834,128.880263742834,152.363922014742)" rx="2" ry="2" />
<text  x="13.00" y="65.5" >firedrake</text>
</g>
<g >
<title>CreateFunctionSpace (4,332 us, 0.03%)</title><rect x="734.0" y="199" width="0.3" height="15.0" fill="rgb(150.061954315651,137.658757933857,150.061954315651)" rx="2" ry="2" />
<text  x="736.99" y="209.5" ></text>
</g>
<g >
<title>CreateMesh (2,077 us, 0.01%)</title><rect x="96.0" y="71" width="0.1" height="15.0" fill="rgb(154.367956250379,130.154331252907,130.154331252907)" rx="2" ry="2" />
<text  x="98.97" y="81.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (3,342 us, 0.02%)</title><rect x="326.2" y="119" width="0.2" height="15.0" fill="rgb(112.104643972666,146.101203992913,146.101203992913)" rx="2" ry="2" />
<text  x="329.16" y="129.5" ></text>
</g>
<g >
<title>HybridOperatorAssembly (5,801,021 us, 34.35%)</title><rect x="327.7" y="151" width="405.4" height="15.0" fill="rgb(156.166569055681,143.943696093554,143.943696093554)" rx="2" ry="2" />
<text  x="330.71" y="161.5" >HybridOperatorAssembly</text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.__init__ (7,312 us, 0.04%)</title><rect x="325.9" y="71" width="0.5" height="15.0" fill="rgb(133.796624787612,161.9400843369,133.796624787612)" rx="2" ry="2" />
<text  x="328.88" y="81.5" ></text>
</g>
<g >
<title>ParLoopExecute (4,836,040 us, 28.64%)</title><rect x="783.5" y="135" width="337.9" height="15.0" fill="rgb(141.540986727368,115.82377848888,141.540986727368)" rx="2" ry="2" />
<text  x="786.49" y="145.5" >ParLoopExecute</text>
</g>
<g >
<title>firedrake.extrusion_utils.make_extruded_coords (1,209,540 us, 7.16%)</title><rect x="10.2" y="87" width="84.5" height="15.0" fill="rgb(154.9037182065,134.26183958317,134.26183958317)" rx="2" ry="2" />
<text  x="13.17" y="97.5" >firedrake..</text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (11,756 us, 0.07%)</title><rect x="95.1" y="103" width="0.9" height="15.0" fill="rgb(153.255859520269,121.628256322061,121.628256322061)" rx="2" ry="2" />
<text  x="98.15" y="113.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (8,848 us, 0.05%)</title><rect x="733.7" y="167" width="0.6" height="15.0" fill="rgb(151.715567216868,151.715567216868,127.544671897131)" rx="2" ry="2" />
<text  x="736.67" y="177.5" ></text>
</g>
</g>
</svg>
