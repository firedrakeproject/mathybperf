<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="267" onload="init(evt)" viewBox="0 0 1200 267" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:13px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:18px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 13 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (1 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="267.0" fill="url(#background)"  />
<text id="title" x="600.00" y="26" >Firedrake example</text>
<text id="details" x="10.00" y="249" > </text>
<text id="unzoom" x="10.00" y="26" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="26" >Search</text>
<text id="ignorecase" x="1174.00" y="26" >ic</text>
<text id="matched" x="1090.00" y="249" > </text>
<g id="frames">
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (3,546 us, 0.01%)</title><rect x="1189.9" y="167" width="0.1" height="15.0" fill="rgb(149.00609455186,149.00609455186,114.414150520552)" rx="2" ry="2" />
<text  x="1192.85" y="177.5" ></text>
</g>
<g >
<title>firedrake.functionspace.VectorFunctionSpace (10,065 us, 0.04%)</title><rect x="192.7" y="71" width="0.4" height="15.0" fill="rgb(118.01040691962,147.632327719902,147.632327719902)" rx="2" ry="2" />
<text  x="195.66" y="81.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (11,819 us, 0.04%)</title><rect x="60.2" y="71" width="0.5" height="15.0" fill="rgb(140.15847780592,112.28109937767,140.15847780592)" rx="2" ry="2" />
<text  x="63.24" y="81.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.__init__ (7,714 us, 0.03%)</title><rect x="194.2" y="71" width="0.4" height="15.0" fill="rgb(129.075518818632,129.075518818632,152.401713319735)" rx="2" ry="2" />
<text  x="197.22" y="81.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (3,016 us, 0.01%)</title><rect x="902.1" y="199" width="0.1" height="15.0" fill="rgb(151.251798861547,151.251798861547,125.297179098265)" rx="2" ry="2" />
<text  x="905.06" y="209.5" ></text>
</g>
<g >
<title>ParLoopExecute (5,079,313 us, 18.20%)</title><rect x="933.4" y="135" width="214.7" height="15.0" fill="rgb(130.153072602957,150.780426230396,150.780426230396)" rx="2" ry="2" />
<text  x="936.36" y="145.5" >ParLoopExecute</text>
</g>
<g >
<title>firedrake.functionspace.VectorFunctionSpace (8,832 us, 0.03%)</title><rect x="59.9" y="87" width="0.3" height="15.0" fill="rgb(125.317879648251,125.317879648251,151.674428319016)" rx="2" ry="2" />
<text  x="62.87" y="97.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (1,132,935 us, 4.06%)</title><rect x="12.0" y="135" width="47.9" height="15.0" fill="rgb(148.791895672098,148.791895672098,113.376109795554)" rx="2" ry="2" />
<text  x="14.96" y="145.5" >pyop..</text>
</g>
<g >
<title>HybridInit (17,468,420 us, 62.60%)</title><rect x="194.6" y="135" width="738.6" height="15.0" fill="rgb(155.425193043088,138.259813330341,138.259813330341)" rx="2" ry="2" />
<text  x="197.55" y="145.5" >HybridInit</text>
</g>
<g >
<title>SNESSolve (23,540,879 us, 84.36%)</title><rect x="194.6" y="103" width="995.4" height="15.0" fill="rgb(156.469776604006,146.268287297379,146.268287297379)" rx="2" ry="2" />
<text  x="197.55" y="113.5" >SNESSolve</text>
</g>
<g >
<title>SNESFunctionEval (6,072,459 us, 21.76%)</title><rect x="933.2" y="119" width="256.8" height="15.0" fill="rgb(133.961205192917,161.913292177897,133.961205192917)" rx="2" ry="2" />
<text  x="936.22" y="129.5" >SNESFunctionEval</text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (4,654 us, 0.02%)</title><rect x="195.3" y="183" width="0.2" height="15.0" fill="rgb(120.435364697725,148.261020477188,148.261020477188)" rx="2" ry="2" />
<text  x="198.28" y="193.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (8,832 us, 0.03%)</title><rect x="59.9" y="103" width="0.3" height="15.0" fill="rgb(111.239040565489,145.876788294756,145.876788294756)" rx="2" ry="2" />
<text  x="62.87" y="113.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (4,654 us, 0.02%)</title><rect x="195.3" y="199" width="0.2" height="15.0" fill="rgb(112.574034356033,112.574034356033,149.207877617297)" rx="2" ry="2" />
<text  x="198.28" y="209.5" ></text>
</g>
<g >
<title>firedrake.assemble.allocate_matrix (6,778 us, 0.02%)</title><rect x="901.8" y="151" width="0.3" height="15.0" fill="rgb(156.78651325943,148.696601655626,148.696601655626)" rx="2" ry="2" />
<text  x="904.78" y="161.5" ></text>
</g>
<g >
<title>ParLoopExecute (702,620 us, 2.52%)</title><rect x="903.5" y="167" width="29.7" height="15.0" fill="rgb(139.399421195734,110.336016814067,139.399421195734)" rx="2" ry="2" />
<text  x="906.51" y="177.5" >P..</text>
</g>
<g >
<title>ParLoopExecute (12,707,386 us, 45.54%)</title><rect x="266.9" y="167" width="537.3" height="15.0" fill="rgb(141.846063642383,153.811942425803,153.811942425803)" rx="2" ry="2" />
<text  x="269.90" y="177.5" >ParLoopExecute</text>
</g>
<g >
<title>firedrake.ufl_expr.action (4,535 us, 0.02%)</title><rect x="194.2" y="119" width="0.2" height="15.0" fill="rgb(155.003311041865,135.025384654298,135.025384654298)" rx="2" ry="2" />
<text  x="197.22" y="129.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (10,065 us, 0.04%)</title><rect x="192.7" y="135" width="0.4" height="15.0" fill="rgb(154.358396080541,130.081036617481,130.081036617481)" rx="2" ry="2" />
<text  x="195.66" y="145.5" ></text>
</g>
<g >
<title>PCSetUp (17,468,420 us, 62.60%)</title><rect x="194.6" y="119" width="738.6" height="15.0" fill="rgb(147.864045113209,132.026615602597,147.864045113209)" rx="2" ry="2" />
<text  x="197.55" y="129.5" >PCSetUp</text>
</g>
<g >
<title>CreateFunctionSpace (8,148 us, 0.03%)</title><rect x="195.1" y="151" width="0.4" height="15.0" fill="rgb(110.961268835803,145.804773401875,145.804773401875)" rx="2" ry="2" />
<text  x="198.13" y="161.5" ></text>
</g>
<g >
<title>firedrake.parloops.par_loop (708,181 us, 2.54%)</title><rect x="903.3" y="151" width="29.9" height="15.0" fill="rgb(155.591425008905,155.591425008905,146.327675043156)" rx="2" ry="2" />
<text  x="906.27" y="161.5" >f..</text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (11,819 us, 0.04%)</title><rect x="60.2" y="87" width="0.5" height="15.0" fill="rgb(147.608925040354,147.608925040354,107.643252118639)" rx="2" ry="2" />
<text  x="63.24" y="97.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_form1_cell_integral_otherwise (2,206,511 us, 7.91%)</title><rect x="1054.8" y="151" width="93.3" height="15.0" fill="rgb(110.830425475543,145.770851049215,145.770851049215)" rx="2" ry="2" />
<text  x="1057.84" y="161.5" >Parloop_Ce..</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (702,620 us, 2.52%)</title><rect x="903.5" y="199" width="29.7" height="15.0" fill="rgb(148.46243349865,148.46243349865,111.779485416535)" rx="2" ry="2" />
<text  x="906.51" y="209.5" >p..</text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (8,832 us, 0.03%)</title><rect x="59.9" y="151" width="0.3" height="15.0" fill="rgb(124.677032598356,163.424669111896,124.677032598356)" rx="2" ry="2" />
<text  x="62.87" y="161.5" ></text>
</g>
<g >
<title>ParLoopExecute (1,132,935 us, 4.06%)</title><rect x="12.0" y="103" width="47.9" height="15.0" fill="rgb(155.391398482103,138.000721696122,138.000721696122)" rx="2" ry="2" />
<text  x="14.96" y="113.5" >ParL..</text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (10,065 us, 0.04%)</title><rect x="192.7" y="119" width="0.4" height="15.0" fill="rgb(138.873954723663,138.873954723663,154.298184785225)" rx="2" ry="2" />
<text  x="195.66" y="129.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (10,065 us, 0.04%)</title><rect x="192.7" y="87" width="0.4" height="15.0" fill="rgb(122.006797378249,122.006797378249,151.033573686113)" rx="2" ry="2" />
<text  x="195.66" y="97.5" ></text>
</g>
<g >
<title>firedrake.matrix_free.operators.ImplicitMatrixContext.__init__ (7,714 us, 0.03%)</title><rect x="194.2" y="103" width="0.4" height="15.0" fill="rgb(135.148628003041,161.719990790203,135.148628003041)" rx="2" ry="2" />
<text  x="197.22" y="113.5" ></text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (989,758 us, 3.55%)</title><rect x="1148.1" y="135" width="41.9" height="15.0" fill="rgb(110.082497035571,110.082497035571,148.72564458753)" rx="2" ry="2" />
<text  x="1151.15" y="145.5" >fir..</text>
</g>
<g >
<title>Parloop_Cells_wrap_pyop2_kernel_uniform_extrusion (1,132,935 us, 4.06%)</title><rect x="12.0" y="119" width="47.9" height="15.0" fill="rgb(154.663111636532,132.417189213409,132.417189213409)" rx="2" ry="2" />
<text  x="14.96" y="129.5" >Parl..</text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (3,016 us, 0.01%)</title><rect x="902.1" y="183" width="0.1" height="15.0" fill="rgb(135.458773989446,152.155978441708,152.155978441708)" rx="2" ry="2" />
<text  x="905.06" y="193.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (3,546 us, 0.01%)</title><rect x="1189.9" y="151" width="0.1" height="15.0" fill="rgb(108.505438220404,145.16807657566,145.16807657566)" rx="2" ry="2" />
<text  x="1192.85" y="161.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.solve (23,540,879 us, 84.36%)</title><rect x="194.6" y="87" width="995.4" height="15.0" fill="rgb(146.567372236535,155.035985394657,155.035985394657)" rx="2" ry="2" />
<text  x="197.55" y="97.5" >firedrake.variational_solver.NonlinearVariationalSolver.solve</text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (11,819 us, 0.04%)</title><rect x="60.2" y="103" width="0.5" height="15.0" fill="rgb(147.627354346536,159.688570222657,147.627354346536)" rx="2" ry="2" />
<text  x="63.24" y="113.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (8,832 us, 0.03%)</title><rect x="59.9" y="119" width="0.3" height="15.0" fill="rgb(150.29452191872,159.254380152767,150.29452191872)" rx="2" ry="2" />
<text  x="62.87" y="129.5" ></text>
</g>
<g >
<title>Log_Event_form0_cell_integral_otherwise (7,987 us, 0.03%)</title><rect x="933.8" y="167" width="0.3" height="15.0" fill="rgb(110.013343946535,145.55901509725,145.55901509725)" rx="2" ry="2" />
<text  x="936.77" y="177.5" ></text>
</g>
<g >
<title>CreateMesh (3,689 us, 0.01%)</title><rect x="60.7" y="71" width="0.2" height="15.0" fill="rgb(153.324536459599,122.154779523589,122.154779523589)" rx="2" ry="2" />
<text  x="63.74" y="81.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (2,194,977 us, 7.87%)</title><rect x="1055.3" y="167" width="92.8" height="15.0" fill="rgb(121.723569050313,148.594999383414,148.594999383414)" rx="2" ry="2" />
<text  x="1058.33" y="177.5" >pyop2.glob..</text>
</g>
<g >
<title>firedrake.__init__ (3,115,981 us, 11.17%)</title><rect x="60.9" y="71" width="131.8" height="15.0" fill="rgb(132.760926912925,162.108686316501,132.760926912925)" rx="2" ry="2" />
<text  x="63.90" y="81.5" >firedrake.__ini..</text>
</g>
<g >
<title>HybridOperatorAssembly (16,702,945 us, 59.86%)</title><rect x="195.5" y="151" width="706.3" height="15.0" fill="rgb(145.084919916255,160.102454897354,145.084919916255)" rx="2" ry="2" />
<text  x="198.48" y="161.5" >HybridOperatorAssembly</text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (2,306,470 us, 8.27%)</title><rect x="804.2" y="167" width="97.6" height="15.0" fill="rgb(143.351858736295,160.384581135952,143.351858736295)" rx="2" ry="2" />
<text  x="807.24" y="177.5" >firedrake...</text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalProblem.__init__ (9,931 us, 0.04%)</title><rect x="193.8" y="87" width="0.4" height="15.0" fill="rgb(155.67442113151,140.17056200824,140.17056200824)" rx="2" ry="2" />
<text  x="196.80" y="97.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.LinearVariationalProblem.__init__ (23,212 us, 0.08%)</title><rect x="193.2" y="71" width="1.0" height="15.0" fill="rgb(146.634375960141,159.850217866954,146.634375960141)" rx="2" ry="2" />
<text  x="196.24" y="81.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (4,654 us, 0.02%)</title><rect x="195.3" y="167" width="0.2" height="15.0" fill="rgb(135.079290618225,152.057593863984,152.057593863984)" rx="2" ry="2" />
<text  x="198.28" y="177.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (702,620 us, 2.52%)</title><rect x="903.5" y="183" width="29.7" height="15.0" fill="rgb(105.765418393941,144.457701065096,144.457701065096)" rx="2" ry="2" />
<text  x="906.51" y="193.5" >P..</text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (9,931 us, 0.04%)</title><rect x="193.8" y="103" width="0.4" height="15.0" fill="rgb(151.113657418865,159.121032513208,151.113657418865)" rx="2" ry="2" />
<text  x="196.80" y="113.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (11,819 us, 0.04%)</title><rect x="60.2" y="119" width="0.5" height="15.0" fill="rgb(154.536671686645,131.447816264281,131.447816264281)" rx="2" ry="2" />
<text  x="63.24" y="129.5" ></text>
</g>
<g >
<title>CreateExtMesh (1,188,107 us, 4.26%)</title><rect x="10.0" y="71" width="50.2" height="15.0" fill="rgb(139.587661562501,139.587661562501,154.436321592742)" rx="2" ry="2" />
<text  x="13.00" y="81.5" >Crea..</text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (3,016 us, 0.01%)</title><rect x="902.1" y="167" width="0.1" height="15.0" fill="rgb(140.58175515888,113.36574759463,140.58175515888)" rx="2" ry="2" />
<text  x="905.06" y="177.5" ></text>
</g>
<g >
<title>CreateSparsity (6,778 us, 0.02%)</title><rect x="901.8" y="167" width="0.3" height="15.0" fill="rgb(152.334707100448,114.566087770103,114.566087770103)" rx="2" ry="2" />
<text  x="904.78" y="177.5" ></text>
</g>
<g >
<title>firedrake.interpolation.make_interpolator (25,640 us, 0.09%)</title><rect x="902.2" y="151" width="1.1" height="15.0" fill="rgb(155.321777761521,137.466962838326,137.466962838326)" rx="2" ry="2" />
<text  x="905.19" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (8,832 us, 0.03%)</title><rect x="59.9" y="135" width="0.3" height="15.0" fill="rgb(123.443939789436,123.443939789436,151.311730281826)" rx="2" ry="2" />
<text  x="62.87" y="145.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (3,016 us, 0.01%)</title><rect x="902.1" y="215" width="0.1" height="15.0" fill="rgb(152.768851989512,117.894531919594,117.894531919594)" rx="2" ry="2" />
<text  x="905.06" y="225.5" ></text>
</g>
<g >
<title>all (27,905,235 us, 100%)</title><rect x="10.0" y="39" width="1180.0" height="15.0" fill="rgb(148.080938897081,148.080938897081,109.930703885855)" rx="2" ry="2" />
<text  x="13.00" y="49.5" ></text>
</g>
<g >
<title>firedrake.utility_meshes.SquareMesh (3,769 us, 0.01%)</title><rect x="193.1" y="71" width="0.1" height="15.0" fill="rgb(148.046074978657,148.046074978657,156.073433866837)" rx="2" ry="2" />
<text  x="196.08" y="81.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.action (13,281 us, 0.05%)</title><rect x="193.2" y="87" width="0.6" height="15.0" fill="rgb(128.057431768804,162.87437157252,128.057431768804)" rx="2" ry="2" />
<text  x="196.24" y="97.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (12,707,386 us, 45.54%)</title><rect x="266.9" y="199" width="537.3" height="15.0" fill="rgb(154.932959052865,154.932959052865,143.136647717729)" rx="2" ry="2" />
<text  x="269.90" y="209.5" >pyop2.global_kernel.GlobalKernel.compile</text>
</g>
<g >
<title>firedrake.functionspace.MixedFunctionSpace (3,494 us, 0.01%)</title><rect x="195.1" y="167" width="0.2" height="15.0" fill="rgb(142.546650520085,160.515661543242,142.546650520085)" rx="2" ry="2" />
<text  x="198.13" y="177.5" ></text>
</g>
<g >
<title>firedrake.assemble.allocate_matrix (7,714 us, 0.03%)</title><rect x="194.2" y="87" width="0.4" height="15.0" fill="rgb(146.540920132933,159.865431606267,146.540920132933)" rx="2" ry="2" />
<text  x="197.22" y="97.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (3,016 us, 0.01%)</title><rect x="902.1" y="151" width="0.1" height="15.0" fill="rgb(154.839105821163,133.766477962252,133.766477962252)" rx="2" ry="2" />
<text  x="905.06" y="161.5" ></text>
</g>
<g >
<title>firedrake.mesh.MeshTopology._facets (4,969 us, 0.02%)</title><rect x="192.9" y="151" width="0.2" height="15.0" fill="rgb(144.811521991723,144.811521991723,155.447391353237)" rx="2" ry="2" />
<text  x="195.87" y="161.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (2,855,141 us, 10.23%)</title><rect x="934.1" y="167" width="120.7" height="15.0" fill="rgb(154.066670903772,127.844476928922,127.844476928922)" rx="2" ry="2" />
<text  x="937.11" y="177.5" >pyop2.global_..</text>
</g>
<g >
<title>Parloop_Cells_wrap_slate_wrapper (12,707,386 us, 45.54%)</title><rect x="266.9" y="183" width="537.3" height="15.0" fill="rgb(131.209381394651,151.05428406528,151.05428406528)" rx="2" ry="2" />
<text  x="269.90" y="193.5" >Parloop_Cells_wrap_slate_wrapper</text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (3,179 us, 0.01%)</title><rect x="194.4" y="119" width="0.2" height="15.0" fill="rgb(148.967333783357,148.967333783357,114.226309873191)" rx="2" ry="2" />
<text  x="197.42" y="129.5" ></text>
</g>
<g >
<title>firedrake.utility_meshes.RectangleMesh (3,769 us, 0.01%)</title><rect x="193.1" y="87" width="0.1" height="15.0" fill="rgb(130.427267218083,162.488584406359,130.427267218083)" rx="2" ry="2" />
<text  x="196.08" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (10,065 us, 0.04%)</title><rect x="192.7" y="103" width="0.4" height="15.0" fill="rgb(154.075513141384,127.912267417277,127.912267417277)" rx="2" ry="2" />
<text  x="195.66" y="113.5" ></text>
</g>
<g >
<title>firedrake.extrusion_utils.make_extruded_coords (1,176,276 us, 4.22%)</title><rect x="10.1" y="87" width="49.8" height="15.0" fill="rgb(136.997475826364,161.41901556315,136.997475826364)" rx="2" ry="2" />
<text  x="13.13" y="97.5" >fire..</text>
</g>
<g >
<title>Parloop_Cells_wrap_form0_cell_integral_otherwise (2,872,802 us, 10.29%)</title><rect x="933.4" y="151" width="121.4" height="15.0" fill="rgb(155.020023497875,135.153513483708,135.153513483708)" rx="2" ry="2" />
<text  x="936.36" y="161.5" >Parloop_Cells..</text>
</g>
<g >
<title>perfsolve (23,540,879 us, 84.36%)</title><rect x="194.6" y="71" width="995.4" height="15.0" fill="rgb(144.695617762289,144.695617762289,155.424958276572)" rx="2" ry="2" />
<text  x="197.55" y="81.5" >perfsolve</text>
</g>
<g >
<title>firedrake (27,905,235 us, 100.00%)</title><rect x="10.0" y="55" width="1180.0" height="15.0" fill="rgb(142.239475976337,117.613657189364,142.239475976337)" rx="2" ry="2" />
<text  x="13.00" y="65.5" >firedrake</text>
</g>
</g>
</svg>
