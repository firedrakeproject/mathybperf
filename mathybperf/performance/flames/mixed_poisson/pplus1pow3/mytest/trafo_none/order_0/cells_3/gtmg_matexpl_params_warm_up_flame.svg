<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="283" onload="init(evt)" viewBox="0 0 1200 283" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:13px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:18px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 13 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (1 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="283.0" fill="url(#background)"  />
<text id="title" x="600.00" y="26" >Firedrake example</text>
<text id="details" x="10.00" y="265" > </text>
<text id="unzoom" x="10.00" y="26" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="26" >Search</text>
<text id="ignorecase" x="1174.00" y="26" >ic</text>
<text id="matched" x="1090.00" y="265" > </text>
<g id="frames">
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (4,873 us, 0.01%)</title><rect x="480.2" y="167" width="0.1" height="15.0" fill="rgb(151.337872725307,151.337872725307,125.714306284178)" rx="2" ry="2" />
<text  x="483.16" y="177.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (5,336 us, 0.01%)</title><rect x="990.6" y="199" width="0.2" height="15.0" fill="rgb(149.528767341199,159.379037874689,149.528767341199)" rx="2" ry="2" />
<text  x="993.59" y="209.5" ></text>
</g>
<g >
<title>firedrake.parloops.par_loop (961,239 us, 2.50%)</title><rect x="137.9" y="183" width="29.5" height="15.0" fill="rgb(151.845507011722,151.845507011722,128.174380133727)" rx="2" ry="2" />
<text  x="140.85" y="193.5" >f..</text>
</g>
<g >
<title>ParLoopExecute (954,300 us, 2.48%)</title><rect x="138.1" y="199" width="29.3" height="15.0" fill="rgb(115.008708616252,146.85410964125,146.85410964125)" rx="2" ry="2" />
<text  x="141.06" y="209.5" >P..</text>
</g>
<g >
<title>HybridInit (17,343,327 us, 45.14%)</title><rect x="479.5" y="135" width="532.7" height="15.0" fill="rgb(156.037370604577,142.953174635087,142.953174635087)" rx="2" ry="2" />
<text  x="482.50" y="145.5" >HybridInit</text>
</g>
<g >
<title>KSPSolve (11,123,373 us, 28.95%)</title><rect x="137.9" y="119" width="341.6" height="15.0" fill="rgb(130.687372137803,162.446241745009,130.687372137803)" rx="2" ry="2" />
<text  x="140.85" y="129.5" >KSPSolve</text>
</g>
<g >
<title>Log_Event_slate_wrapper (201,451 us, 0.52%)</title><rect x="529.2" y="199" width="6.1" height="15.0" fill="rgb(154.637113731528,132.217871941713,132.217871941713)" rx="2" ry="2" />
<text  x="532.16" y="209.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (10,176 us, 0.03%)</title><rect x="137.4" y="103" width="0.3" height="15.0" fill="rgb(123.508296496208,123.508296496208,151.324186418621)" rx="2" ry="2" />
<text  x="140.41" y="113.5" ></text>
</g>
<g >
<title>firedrake.matrix_free.operators.ImplicitMatrixContext.__init__ (4,092 us, 0.01%)</title><rect x="137.7" y="103" width="0.2" height="15.0" fill="rgb(105.26689662157,144.328454679666,144.328454679666)" rx="2" ry="2" />
<text  x="140.72" y="113.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (7,115 us, 0.02%)</title><rect x="136.7" y="87" width="0.2" height="15.0" fill="rgb(152.593352649042,116.549036975991,116.549036975991)" rx="2" ry="2" />
<text  x="139.72" y="97.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.action (4,092 us, 0.01%)</title><rect x="137.7" y="119" width="0.2" height="15.0" fill="rgb(140.829817927047,140.829817927047,154.676738953622)" rx="2" ry="2" />
<text  x="140.72" y="129.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (7,075 us, 0.02%)</title><rect x="43.2" y="119" width="0.2" height="15.0" fill="rgb(150.589432577274,139.010420979265,150.589432577274)" rx="2" ry="2" />
<text  x="46.19" y="129.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_form0_cell_integral_otherwise (2,665,482 us, 6.94%)</title><rect x="1012.2" y="151" width="81.8" height="15.0" fill="rgb(141.177359946921,114.891984863985,141.177359946921)" rx="2" ry="2" />
<text  x="1015.18" y="161.5" >Parloop_..</text>
</g>
<g >
<title>ParLoopExecute (12,860,330 us, 33.47%)</title><rect x="528.8" y="167" width="394.9" height="15.0" fill="rgb(147.600180593677,147.600180593677,107.600875184745)" rx="2" ry="2" />
<text  x="531.76" y="177.5" >ParLoopExecute</text>
</g>
<g >
<title>SNESSolve (34,256,218 us, 89.17%)</title><rect x="137.9" y="103" width="1052.1" height="15.0" fill="rgb(147.413549195397,159.723375712377,147.413549195397)" rx="2" ry="2" />
<text  x="140.85" y="113.5" >SNESSolve</text>
</g>
<g >
<title>ParLoopExecute (667,613 us, 1.74%)</title><rect x="991.7" y="167" width="20.5" height="15.0" fill="rgb(131.849660971233,151.220282474023,151.220282474023)" rx="2" ry="2" />
<text  x="994.67" y="177.5" ></text>
</g>
<g >
<title>firedrake.utility_meshes.SquareMesh (4,067 us, 0.01%)</title><rect x="136.9" y="71" width="0.2" height="15.0" fill="rgb(154.458589314544,154.458589314544,140.837778985866)" rx="2" ry="2" />
<text  x="139.94" y="81.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (954,300 us, 2.48%)</title><rect x="138.1" y="231" width="29.3" height="15.0" fill="rgb(153.59789027783,124.250492130027,124.250492130027)" rx="2" ry="2" />
<text  x="141.06" y="241.5" >p..</text>
</g>
<g >
<title>Parloop_Cells_wrap_pyop2_kernel_uniform_extrusion (1,045,098 us, 2.72%)</title><rect x="11.1" y="119" width="32.1" height="15.0" fill="rgb(154.366665223645,130.144433381282,130.144433381282)" rx="2" ry="2" />
<text  x="14.09" y="129.5" >Pa..</text>
</g>
<g >
<title>CreateFunctionSpace (8,813 us, 0.02%)</title><rect x="480.0" y="151" width="0.3" height="15.0" fill="rgb(137.943466194752,106.605132124051,137.943466194752)" rx="2" ry="2" />
<text  x="483.04" y="161.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (667,613 us, 1.74%)</title><rect x="991.7" y="183" width="20.5" height="15.0" fill="rgb(152.227246181564,143.207318340257,152.227246181564)" rx="2" ry="2" />
<text  x="994.67" y="193.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (7,115 us, 0.02%)</title><rect x="136.7" y="103" width="0.2" height="15.0" fill="rgb(149.507233009207,149.507233009207,116.84274458308)" rx="2" ry="2" />
<text  x="139.72" y="113.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.LinearVariationalProblem.__init__ (21,433 us, 0.06%)</title><rect x="137.1" y="71" width="0.6" height="15.0" fill="rgb(131.702169535997,162.281042168559,131.702169535997)" rx="2" ry="2" />
<text  x="140.07" y="81.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_slate_wrapper (8,990,465 us, 23.40%)</title><rect x="203.4" y="199" width="276.1" height="15.0" fill="rgb(147.232874393703,159.752787889397,147.232874393703)" rx="2" ry="2" />
<text  x="206.36" y="209.5" >Parloop_Cells_wrap_slate_wrapper</text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (7,075 us, 0.02%)</title><rect x="43.2" y="151" width="0.2" height="15.0" fill="rgb(156.11361020067,143.537678205133,143.537678205133)" rx="2" ry="2" />
<text  x="46.19" y="161.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_form1_cell_integral_otherwise (2,157,359 us, 5.62%)</title><rect x="1094.0" y="151" width="66.3" height="15.0" fill="rgb(152.272881251071,114.092089591546,114.092089591546)" rx="2" ry="2" />
<text  x="1097.05" y="161.5" >Parloo..</text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (11,873 us, 0.03%)</title><rect x="43.4" y="103" width="0.4" height="15.0" fill="rgb(148.160126906968,148.160126906968,110.314461164535)" rx="2" ry="2" />
<text  x="46.41" y="113.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (5,336 us, 0.01%)</title><rect x="990.6" y="183" width="0.2" height="15.0" fill="rgb(132.214748967659,162.197599005265,132.214748967659)" rx="2" ry="2" />
<text  x="993.59" y="193.5" ></text>
</g>
<g >
<title>SCForwardElim (11,123,373 us, 28.95%)</title><rect x="137.9" y="151" width="341.6" height="15.0" fill="rgb(108.607742611526,145.194599936321,145.194599936321)" rx="2" ry="2" />
<text  x="140.85" y="161.5" >SCForwardElim</text>
</g>
<g >
<title>CreateSparsity (6,448 us, 0.02%)</title><rect x="990.4" y="167" width="0.2" height="15.0" fill="rgb(132.002101432819,151.259804075175,151.259804075175)" rx="2" ry="2" />
<text  x="993.39" y="177.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalProblem.__init__ (10,176 us, 0.03%)</title><rect x="137.4" y="87" width="0.3" height="15.0" fill="rgb(110.668405383156,145.728845840077,145.728845840077)" rx="2" ry="2" />
<text  x="140.41" y="97.5" ></text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (966,677 us, 2.52%)</title><rect x="1160.3" y="135" width="29.7" height="15.0" fill="rgb(138.329462799529,107.594248423793,138.329462799529)" rx="2" ry="2" />
<text  x="1163.31" y="145.5" >f..</text>
</g>
<g >
<title>HybridRHS (10,162,134 us, 26.45%)</title><rect x="167.4" y="167" width="312.1" height="15.0" fill="rgb(112.619095821149,146.234580398076,146.234580398076)" rx="2" ry="2" />
<text  x="170.37" y="177.5" >HybridRHS</text>
</g>
<g >
<title>firedrake.extrusion_utils.make_extruded_coords (1,080,639 us, 2.81%)</title><rect x="10.0" y="87" width="33.2" height="15.0" fill="rgb(107.452457702257,144.895081626511,144.895081626511)" rx="2" ry="2" />
<text  x="13.00" y="97.5" >fi..</text>
</g>
<g >
<title>firedrake.parloops.par_loop (672,960 us, 1.75%)</title><rect x="991.5" y="151" width="20.7" height="15.0" fill="rgb(137.869480194763,152.78097634679,152.78097634679)" rx="2" ry="2" />
<text  x="994.51" y="161.5" ></text>
</g>
<g >
<title>CreateExtMesh (1,087,714 us, 2.83%)</title><rect x="10.0" y="71" width="33.4" height="15.0" fill="rgb(146.469899271013,155.010714625818,155.010714625818)" rx="2" ry="2" />
<text  x="13.00" y="81.5" >Cr..</text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.__init__ (4,092 us, 0.01%)</title><rect x="137.7" y="71" width="0.2" height="15.0" fill="rgb(152.635145959871,152.635145959871,132.001091959376)" rx="2" ry="2" />
<text  x="140.72" y="81.5" ></text>
</g>
<g >
<title>HybridOperatorAssembly (16,607,302 us, 43.23%)</title><rect x="480.3" y="151" width="510.1" height="15.0" fill="rgb(139.826514331458,160.958474411158,139.826514331458)" rx="2" ry="2" />
<text  x="483.31" y="161.5" >HybridOperatorAssembly</text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (2,169,687 us, 5.65%)</title><rect x="923.7" y="167" width="66.7" height="15.0" fill="rgb(106.384297284069,144.618151147722,144.618151147722)" rx="2" ry="2" />
<text  x="926.75" y="177.5" >firedr..</text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (7,075 us, 0.02%)</title><rect x="43.2" y="135" width="0.2" height="15.0" fill="rgb(156.775562653595,148.612647010892,148.612647010892)" rx="2" ry="2" />
<text  x="46.19" y="145.5" ></text>
</g>
<g >
<title>firedrake.assemble.allocate_matrix (6,448 us, 0.02%)</title><rect x="990.4" y="151" width="0.2" height="15.0" fill="rgb(130.062044323585,162.548039296161,130.062044323585)" rx="2" ry="2" />
<text  x="993.39" y="161.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (11,873 us, 0.03%)</title><rect x="43.4" y="71" width="0.4" height="15.0" fill="rgb(146.581356923273,146.581356923273,155.789940049666)" rx="2" ry="2" />
<text  x="46.41" y="81.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_slate_wrapper (12,860,330 us, 33.47%)</title><rect x="528.8" y="183" width="394.9" height="15.0" fill="rgb(141.753542045336,160.644772225178,141.753542045336)" rx="2" ry="2" />
<text  x="531.76" y="193.5" >Parloop_Cells_wrap_slate_wrapper</text>
</g>
<g >
<title>firedrake.utility_meshes.RectangleMesh (4,067 us, 0.01%)</title><rect x="136.9" y="87" width="0.2" height="15.0" fill="rgb(155.779941465236,155.779941465236,147.241254793065)" rx="2" ry="2" />
<text  x="139.94" y="97.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.solve (34,256,218 us, 89.17%)</title><rect x="137.9" y="87" width="1052.1" height="15.0" fill="rgb(152.223955563076,113.716992650252,113.716992650252)" rx="2" ry="2" />
<text  x="140.85" y="97.5" >firedrake.variational_solver.NonlinearVariationalSolver.solve</text>
</g>
<g >
<title>firedrake.__init__ (3,026,305 us, 7.88%)</title><rect x="43.8" y="71" width="92.9" height="15.0" fill="rgb(132.437340273186,151.37264377453,151.37264377453)" rx="2" ry="2" />
<text  x="46.77" y="81.5" >firedrake...</text>
</g>
<g >
<title>Log_Event_slate_loopy (37,065 us, 0.10%)</title><rect x="534.2" y="215" width="1.1" height="15.0" fill="rgb(112.562931458621,146.22001926705,146.22001926705)" rx="2" ry="2" />
<text  x="537.21" y="225.5" ></text>
</g>
<g >
<title>perfsolve (34,256,218 us, 89.17%)</title><rect x="137.9" y="71" width="1052.1" height="15.0" fill="rgb(121.137055915212,148.442940422462,148.442940422462)" rx="2" ry="2" />
<text  x="140.85" y="81.5" >perfsolve</text>
</g>
<g >
<title>PCSetUp (17,343,327 us, 45.14%)</title><rect x="479.5" y="119" width="532.7" height="15.0" fill="rgb(149.540275480722,149.540275480722,117.0028734835)" rx="2" ry="2" />
<text  x="482.50" y="129.5" >PCSetUp</text>
</g>
<g >
<title>firedrake.interpolation.make_interpolator (24,711 us, 0.06%)</title><rect x="990.8" y="151" width="0.7" height="15.0" fill="rgb(135.238512716828,135.238512716828,153.594550848418)" rx="2" ry="2" />
<text  x="993.75" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspace.VectorFunctionSpace (7,075 us, 0.02%)</title><rect x="43.2" y="87" width="0.2" height="15.0" fill="rgb(152.912435130692,152.912435130692,133.344877941045)" rx="2" ry="2" />
<text  x="46.19" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (7,115 us, 0.02%)</title><rect x="136.7" y="135" width="0.2" height="15.0" fill="rgb(105.050795143162,144.272428370449,144.272428370449)" rx="2" ry="2" />
<text  x="139.72" y="145.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (667,613 us, 1.74%)</title><rect x="991.7" y="199" width="20.5" height="15.0" fill="rgb(153.386975991188,122.633482599106,122.633482599106)" rx="2" ry="2" />
<text  x="994.67" y="209.5" ></text>
</g>
<g >
<title>ParLoopExecute (1,045,098 us, 2.72%)</title><rect x="11.1" y="103" width="32.1" height="15.0" fill="rgb(130.287911976478,130.287911976478,152.636370059963)" rx="2" ry="2" />
<text  x="14.09" y="113.5" >Pa..</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (8,990,465 us, 23.40%)</title><rect x="203.4" y="215" width="276.1" height="15.0" fill="rgb(148.011823178125,148.011823178125,109.595758478604)" rx="2" ry="2" />
<text  x="206.36" y="225.5" >pyop2.global_kernel.GlobalKernel.c..</text>
</g>
<g >
<title>firedrake (38,418,817 us, 100.00%)</title><rect x="10.0" y="55" width="1180.0" height="15.0" fill="rgb(144.513565710704,160.195466047095,144.513565710704)" rx="2" ry="2" />
<text  x="13.00" y="65.5" >firedrake</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (12,645,764 us, 32.92%)</title><rect x="535.3" y="199" width="388.4" height="15.0" fill="rgb(146.205648862111,159.920010650354,146.205648862111)" rx="2" ry="2" />
<text  x="538.35" y="209.5" >pyop2.global_kernel.GlobalKernel.compile</text>
</g>
<g >
<title>all (38,418,817 us, 100%)</title><rect x="10.0" y="39" width="1180.0" height="15.0" fill="rgb(152.106131358855,112.813673751225,112.813673751225)" rx="2" ry="2" />
<text  x="13.00" y="49.5" ></text>
</g>
<g >
<title>ParLoopExecute (4,822,841 us, 12.55%)</title><rect x="1012.2" y="135" width="148.1" height="15.0" fill="rgb(143.541922884858,120.951177392448,143.541922884858)" rx="2" ry="2" />
<text  x="1015.18" y="145.5" >ParLoopExecute</text>
</g>
<g >
<title>CreateFunctionSpace (7,075 us, 0.02%)</title><rect x="43.2" y="103" width="0.2" height="15.0" fill="rgb(132.515302113299,132.515302113299,153.06747782838)" rx="2" ry="2" />
<text  x="46.19" y="113.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (11,873 us, 0.03%)</title><rect x="43.4" y="119" width="0.4" height="15.0" fill="rgb(141.282806358995,160.721403615977,141.282806358995)" rx="2" ry="2" />
<text  x="46.41" y="129.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (4,873 us, 0.01%)</title><rect x="480.2" y="183" width="0.1" height="15.0" fill="rgb(149.090113214737,149.090113214737,114.821317886801)" rx="2" ry="2" />
<text  x="483.16" y="193.5" ></text>
</g>
<g >
<title>PCApply (11,123,373 us, 28.95%)</title><rect x="137.9" y="135" width="341.6" height="15.0" fill="rgb(152.353041055434,114.706648091661,114.706648091661)" rx="2" ry="2" />
<text  x="140.85" y="145.5" >PCApply</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (1,045,098 us, 2.72%)</title><rect x="11.1" y="135" width="32.1" height="15.0" fill="rgb(155.668458733172,140.124850287648,140.124850287648)" rx="2" ry="2" />
<text  x="14.09" y="145.5" >py..</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (2,647,334 us, 6.89%)</title><rect x="1012.7" y="167" width="81.3" height="15.0" fill="rgb(151.549114782636,151.549114782636,126.738017792773)" rx="2" ry="2" />
<text  x="1015.74" y="177.5" >pyop2.gl..</text>
</g>
<g >
<title>firedrake.ufl_expr.action (11,257 us, 0.03%)</title><rect x="137.1" y="87" width="0.3" height="15.0" fill="rgb(129.019489441543,129.019489441543,152.39086892417)" rx="2" ry="2" />
<text  x="140.07" y="97.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_par_loop_kernel (954,300 us, 2.48%)</title><rect x="138.1" y="215" width="29.3" height="15.0" fill="rgb(145.912731803148,154.866263800816,154.866263800816)" rx="2" ry="2" />
<text  x="141.06" y="225.5" >P..</text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (6,761 us, 0.02%)</title><rect x="1189.8" y="151" width="0.2" height="15.0" fill="rgb(155.372930342922,137.859132629071,137.859132629071)" rx="2" ry="2" />
<text  x="1192.79" y="161.5" ></text>
</g>
<g >
<title>Log_Event_form0_cell_integral_otherwise (8,641 us, 0.02%)</title><rect x="1012.5" y="167" width="0.2" height="15.0" fill="rgb(115.455350717454,146.969905741562,146.969905741562)" rx="2" ry="2" />
<text  x="1015.47" y="177.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (5,336 us, 0.01%)</title><rect x="990.6" y="151" width="0.2" height="15.0" fill="rgb(129.297576646541,129.297576646541,152.444692254169)" rx="2" ry="2" />
<text  x="993.59" y="161.5" ></text>
</g>
<g >
<title>SNESFunctionEval (5,789,518 us, 15.07%)</title><rect x="1012.2" y="119" width="177.8" height="15.0" fill="rgb(156.215539437422,144.319135686902,144.319135686902)" rx="2" ry="2" />
<text  x="1015.18" y="129.5" >SNESFunctionEval</text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (2,146,160 us, 5.59%)</title><rect x="1094.4" y="167" width="65.9" height="15.0" fill="rgb(155.561010256714,139.301078634811,139.301078634811)" rx="2" ry="2" />
<text  x="1097.39" y="177.5" >pyop2...</text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (4,873 us, 0.01%)</title><rect x="480.2" y="199" width="0.1" height="15.0" fill="rgb(145.656648231978,160.009382845957,145.656648231978)" rx="2" ry="2" />
<text  x="483.16" y="209.5" ></text>
</g>
<g >
<title>ParLoopExecute (8,990,465 us, 23.40%)</title><rect x="203.4" y="183" width="276.1" height="15.0" fill="rgb(141.916640917117,141.916640917117,154.88709179041)" rx="2" ry="2" />
<text  x="206.36" y="193.5" >ParLoopExecute</text>
</g>
<g >
<title>firedrake.functionspace.VectorFunctionSpace (7,115 us, 0.02%)</title><rect x="136.7" y="71" width="0.2" height="15.0" fill="rgb(131.995167512557,162.233344823537,131.995167512557)" rx="2" ry="2" />
<text  x="139.72" y="81.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (11,873 us, 0.03%)</title><rect x="43.4" y="87" width="0.4" height="15.0" fill="rgb(141.317006071512,141.317006071512,154.771033433196)" rx="2" ry="2" />
<text  x="46.41" y="97.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (7,115 us, 0.02%)</title><rect x="136.7" y="119" width="0.2" height="15.0" fill="rgb(139.538683772308,139.538683772308,154.426842020447)" rx="2" ry="2" />
<text  x="139.72" y="129.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (5,336 us, 0.01%)</title><rect x="990.6" y="167" width="0.2" height="15.0" fill="rgb(116.256304636669,147.177560461358,147.177560461358)" rx="2" ry="2" />
<text  x="993.59" y="177.5" ></text>
</g>
<g >
<title>firedrake.assemble.allocate_matrix (4,092 us, 0.01%)</title><rect x="137.7" y="87" width="0.2" height="15.0" fill="rgb(121.995554690051,148.665514178902,148.665514178902)" rx="2" ry="2" />
<text  x="140.72" y="97.5" ></text>
</g>
<g >
<title>HybridBreak (961,239 us, 2.50%)</title><rect x="137.9" y="167" width="29.5" height="15.0" fill="rgb(152.788368636871,118.044159549347,118.044159549347)" rx="2" ry="2" />
<text  x="140.85" y="177.5" >H..</text>
</g>
</g>
</svg>
