<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="299" onload="init(evt)" viewBox="0 0 1200 299" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:13px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:18px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 13 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (1 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="299.0" fill="url(#background)"  />
<text id="title" x="600.00" y="26" >Firedrake example</text>
<text id="details" x="10.00" y="281" > </text>
<text id="unzoom" x="10.00" y="26" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="26" >Search</text>
<text id="ignorecase" x="1174.00" y="26" >ic</text>
<text id="matched" x="1090.00" y="281" > </text>
<g id="frames">
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (6,444 us, 0.04%)</title><rect x="17.9" y="119" width="0.5" height="15.0" fill="rgb(156.681025150774,147.88785948927,147.88785948927)" rx="2" ry="2" />
<text  x="20.92" y="129.5" ></text>
</g>
<g >
<title>firedrake.assemble.allocate_matrix (8,741 us, 0.06%)</title><rect x="256.5" y="87" width="0.7" height="15.0" fill="rgb(155.363149552632,137.784146570182,137.784146570182)" rx="2" ry="2" />
<text  x="259.50" y="97.5" ></text>
</g>
<g >
<title>ParLoopExecute (61,131 us, 0.40%)</title><rect x="13.2" y="103" width="4.7" height="15.0" fill="rgb(142.865116660532,154.076141356434,154.076141356434)" rx="2" ry="2" />
<text  x="16.17" y="113.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (5,654 us, 0.04%)</title><rect x="253.0" y="135" width="0.4" height="15.0" fill="rgb(153.57561264913,153.57561264913,136.558738222707)" rx="2" ry="2" />
<text  x="255.99" y="145.5" ></text>
</g>
<g >
<title>firedrake.matrix_free.operators.ImplicitMatrixContext.__init__ (8,741 us, 0.06%)</title><rect x="256.5" y="103" width="0.7" height="15.0" fill="rgb(154.54565795541,131.516710991477,131.516710991477)" rx="2" ry="2" />
<text  x="259.50" y="113.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (1,874 us, 0.01%)</title><rect x="1181.4" y="215" width="0.2" height="15.0" fill="rgb(109.759555304751,109.759555304751,148.663139736403)" rx="2" ry="2" />
<text  x="1184.44" y="225.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_form0_cell_integral_otherwise (18,715 us, 0.12%)</title><rect x="1184.9" y="151" width="1.5" height="15.0" fill="rgb(151.021001805864,151.021001805864,124.178701059188)" rx="2" ry="2" />
<text  x="1187.93" y="161.5" ></text>
</g>
<g >
<title>PCSetUp (11,944,350 us, 78.60%)</title><rect x="257.2" y="119" width="927.5" height="15.0" fill="rgb(129.119506228332,162.701475730272,129.119506228332)" rx="2" ry="2" />
<text  x="260.18" y="129.5" >PCSetUp</text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (9,363 us, 0.06%)</title><rect x="1180.9" y="151" width="0.7" height="15.0" fill="rgb(151.857396596421,142.25957877833,151.857396596421)" rx="2" ry="2" />
<text  x="1183.86" y="161.5" ></text>
</g>
<g >
<title>HybridInit (11,944,350 us, 78.60%)</title><rect x="257.2" y="135" width="927.5" height="15.0" fill="rgb(145.770025750537,159.99092604061,145.770025750537)" rx="2" ry="2" />
<text  x="260.18" y="145.5" >HybridInit</text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (6,444 us, 0.04%)</title><rect x="17.9" y="151" width="0.5" height="15.0" fill="rgb(127.082990497514,127.082990497514,152.016062676938)" rx="2" ry="2" />
<text  x="20.92" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (4,061 us, 0.03%)</title><rect x="258.1" y="183" width="0.3" height="15.0" fill="rgb(152.038118551854,112.292242230877,112.292242230877)" rx="2" ry="2" />
<text  x="261.13" y="193.5" ></text>
</g>
<g >
<title>firedrake.mesh.MeshTopology._facets (2,446 us, 0.02%)</title><rect x="253.2" y="151" width="0.2" height="15.0" fill="rgb(154.84143900656,133.784365716961,133.784365716961)" rx="2" ry="2" />
<text  x="256.23" y="161.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (26,599 us, 0.18%)</title><rect x="18.4" y="71" width="2.1" height="15.0" fill="rgb(151.748919555493,151.748919555493,127.706302461237)" rx="2" ry="2" />
<text  x="21.42" y="81.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (1,637 us, 0.01%)</title><rect x="258.0" y="215" width="0.1" height="15.0" fill="rgb(146.834787631762,159.817592711108,146.834787631762)" rx="2" ry="2" />
<text  x="261.00" y="225.5" ></text>
</g>
<g >
<title>firedrake.interpolation.make_interpolator (34,011 us, 0.22%)</title><rect x="1181.6" y="151" width="2.6" height="15.0" fill="rgb(154.629649514454,154.629649514454,141.666763031586)" rx="2" ry="2" />
<text  x="1184.59" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspace.MixedFunctionSpace (2,773 us, 0.02%)</title><rect x="252.8" y="71" width="0.2" height="15.0" fill="rgb(151.150524848974,151.150524848974,124.806389652721)" rx="2" ry="2" />
<text  x="255.77" y="81.5" ></text>
</g>
<g >
<title>SNESFunctionEval (68,275 us, 0.45%)</title><rect x="1184.7" y="119" width="5.3" height="15.0" fill="rgb(148.220458916936,148.220458916936,110.606839366689)" rx="2" ry="2" />
<text  x="1187.70" y="129.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.action (19,914 us, 0.13%)</title><rect x="253.6" y="87" width="1.6" height="15.0" fill="rgb(142.811182621089,142.811182621089,155.060228894404)" rx="2" ry="2" />
<text  x="256.62" y="97.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.action (4,723 us, 0.03%)</title><rect x="256.5" y="119" width="0.4" height="15.0" fill="rgb(153.901906591291,153.901906591291,138.140008865489)" rx="2" ry="2" />
<text  x="259.50" y="129.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (4,061 us, 0.03%)</title><rect x="258.1" y="167" width="0.3" height="15.0" fill="rgb(138.779786633412,153.016981719774,153.016981719774)" rx="2" ry="2" />
<text  x="261.13" y="177.5" ></text>
</g>
<g >
<title>firedrake.functionspace.MixedFunctionSpace (1,637 us, 0.01%)</title><rect x="258.0" y="167" width="0.1" height="15.0" fill="rgb(138.5975543022,138.5975543022,154.244687929458)" rx="2" ry="2" />
<text  x="261.00" y="177.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (5,654 us, 0.04%)</title><rect x="253.0" y="103" width="0.4" height="15.0" fill="rgb(153.964733612773,127.062957697923,127.062957697923)" rx="2" ry="2" />
<text  x="255.99" y="113.5" ></text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (1,637 us, 0.01%)</title><rect x="258.0" y="199" width="0.1" height="15.0" fill="rgb(156.67534704076,147.844327312492,147.844327312492)" rx="2" ry="2" />
<text  x="261.00" y="209.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (3,383 us, 0.02%)</title><rect x="1189.7" y="167" width="0.3" height="15.0" fill="rgb(154.157307899084,128.539360559643,128.539360559643)" rx="2" ry="2" />
<text  x="1192.74" y="177.5" ></text>
</g>
<g >
<title>firedrake.__init__ (2,989,226 us, 19.67%)</title><rect x="20.6" y="71" width="232.2" height="15.0" fill="rgb(141.335991481045,160.712745572853,141.335991481045)" rx="2" ry="2" />
<text  x="23.65" y="81.5" >firedrake.__init__</text>
</g>
<g >
<title>firedrake.formmanipulation.split_form (5,806 us, 0.04%)</title><rect x="1189.5" y="151" width="0.5" height="15.0" fill="rgb(141.988109836686,153.848769216918,153.848769216918)" rx="2" ry="2" />
<text  x="1192.55" y="161.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_slate_wrapper (11,712,146 us, 77.08%)</title><rect x="270.8" y="183" width="909.4" height="15.0" fill="rgb(109.910025601798,109.910025601798,148.692263019703)" rx="2" ry="2" />
<text  x="273.76" y="193.5" >Parloop_Cells_wrap_slate_wrapper</text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (26,599 us, 0.18%)</title><rect x="18.4" y="87" width="2.1" height="15.0" fill="rgb(150.164384264696,150.164384264696,120.027400667375)" rx="2" ry="2" />
<text  x="21.42" y="97.5" ></text>
</g>
<g >
<title>firedrake.utility_meshes.SquareMesh (2,561 us, 0.02%)</title><rect x="253.4" y="71" width="0.2" height="15.0" fill="rgb(127.107050644799,127.107050644799,152.020719479638)" rx="2" ry="2" />
<text  x="256.42" y="81.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (4,018 us, 0.03%)</title><rect x="256.9" y="119" width="0.3" height="15.0" fill="rgb(152.141914757184,113.08801313841,113.08801313841)" rx="2" ry="2" />
<text  x="259.86" y="129.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (4,061 us, 0.03%)</title><rect x="258.1" y="199" width="0.3" height="15.0" fill="rgb(121.813984736869,148.618440487336,148.618440487336)" rx="2" ry="2" />
<text  x="261.13" y="209.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (1,637 us, 0.01%)</title><rect x="258.0" y="183" width="0.1" height="15.0" fill="rgb(148.138008728632,148.138008728632,110.207273069523)" rx="2" ry="2" />
<text  x="261.00" y="193.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (26,599 us, 0.18%)</title><rect x="18.4" y="119" width="2.1" height="15.0" fill="rgb(149.309407375349,159.414747636571,149.309407375349)" rx="2" ry="2" />
<text  x="21.42" y="129.5" ></text>
</g>
<g >
<title>CreateExtMesh (108,395 us, 0.71%)</title><rect x="10.0" y="71" width="8.4" height="15.0" fill="rgb(132.244686178928,132.244686178928,153.01510055076)" rx="2" ry="2" />
<text  x="13.00" y="81.5" ></text>
</g>
<g >
<title>HybridOperatorAssembly (11,870,653 us, 78.12%)</title><rect x="258.4" y="151" width="921.8" height="15.0" fill="rgb(145.539309227051,154.769450540347,154.769450540347)" rx="2" ry="2" />
<text  x="261.45" y="161.5" >HybridOperatorAssembly</text>
</g>
<g >
<title>CreateMesh (2,102 us, 0.01%)</title><rect x="20.5" y="71" width="0.1" height="15.0" fill="rgb(128.545027632693,150.36352568255,150.36352568255)" rx="2" ry="2" />
<text  x="23.48" y="81.5" ></text>
</g>
<g >
<title>ParLoopExecute (31,220 us, 0.21%)</title><rect x="1184.9" y="135" width="2.5" height="15.0" fill="rgb(149.135740567205,159.443018977432,149.135740567205)" rx="2" ry="2" />
<text  x="1187.93" y="145.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (61,131 us, 0.40%)</title><rect x="13.2" y="135" width="4.7" height="15.0" fill="rgb(153.876369338419,153.876369338419,138.016251409262)" rx="2" ry="2" />
<text  x="16.17" y="145.5" ></text>
</g>
<g >
<title>firedrake (15,195,678 us, 100.00%)</title><rect x="10.0" y="55" width="1180.0" height="15.0" fill="rgb(154.916287944846,154.916287944846,143.055856963484)" rx="2" ry="2" />
<text  x="13.00" y="65.5" >firedrake</text>
</g>
<g >
<title>firedrake.utility_meshes.RectangleMesh (2,561 us, 0.02%)</title><rect x="253.4" y="87" width="0.2" height="15.0" fill="rgb(119.04137299055,119.04137299055,150.459620578816)" rx="2" ry="2" />
<text  x="256.42" y="97.5" ></text>
</g>
<g >
<title>all (15,195,678 us, 100%)</title><rect x="10.0" y="39" width="1180.0" height="15.0" fill="rgb(115.842510244348,147.07028043372,147.07028043372)" rx="2" ry="2" />
<text  x="13.00" y="49.5" ></text>
</g>
<g >
<title>firedrake.parloops.par_loop (6,077 us, 0.04%)</title><rect x="1184.2" y="151" width="0.5" height="15.0" fill="rgb(143.356131258588,160.383885609067,143.356131258588)" rx="2" ry="2" />
<text  x="1187.23" y="161.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.__init__ (10,490 us, 0.07%)</title><rect x="256.4" y="71" width="0.8" height="15.0" fill="rgb(123.941147916757,123.941147916757,151.407964112921)" rx="2" ry="2" />
<text  x="259.36" y="81.5" ></text>
</g>
<g >
<title>perfsolve (12,012,625 us, 79.05%)</title><rect x="257.2" y="71" width="932.8" height="15.0" fill="rgb(134.454242332747,97.6639959776637,134.454242332747)" rx="2" ry="2" />
<text  x="260.18" y="81.5" >perfsolve</text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (1,637 us, 0.01%)</title><rect x="258.0" y="231" width="0.1" height="15.0" fill="rgb(138.64508331395,161.150800390752,138.64508331395)" rx="2" ry="2" />
<text  x="261.00" y="241.5" ></text>
</g>
<g >
<title>pyop2.global_kernel.GlobalKernel.compile (11,712,146 us, 77.08%)</title><rect x="270.8" y="199" width="909.4" height="15.0" fill="rgb(134.982798047977,134.982798047977,153.545057686705)" rx="2" ry="2" />
<text  x="273.76" y="209.5" >pyop2.global_kernel.GlobalKernel.compile</text>
</g>
<g >
<title>ParLoopExecute (11,712,146 us, 77.08%)</title><rect x="270.8" y="167" width="909.4" height="15.0" fill="rgb(152.295762539364,114.267512801792,114.267512801792)" rx="2" ry="2" />
<text  x="273.76" y="177.5" >ParLoopExecute</text>
</g>
<g >
<title>firedrake.variational_solver.LinearVariationalProblem.__init__ (35,253 us, 0.23%)</title><rect x="253.6" y="71" width="2.8" height="15.0" fill="rgb(148.780231242751,148.780231242751,113.319582176409)" rx="2" ry="2" />
<text  x="256.62" y="81.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalProblem.__init__ (15,339 us, 0.10%)</title><rect x="255.2" y="87" width="1.2" height="15.0" fill="rgb(143.285066609876,120.292983187806,143.285066609876)" rx="2" ry="2" />
<text  x="258.17" y="97.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.solve (12,012,625 us, 79.05%)</title><rect x="257.2" y="87" width="932.8" height="15.0" fill="rgb(138.418596952306,161.187670263578,138.418596952306)" rx="2" ry="2" />
<text  x="260.18" y="97.5" >firedrake.variational_solver.NonlinearVariationalSolver.solve</text>
</g>
<g >
<title>CreateSparsity (6,230 us, 0.04%)</title><rect x="1180.2" y="167" width="0.5" height="15.0" fill="rgb(136.462653575334,136.462653575334,153.831481337161)" rx="2" ry="2" />
<text  x="1183.25" y="177.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.FunctionSpaceData.__init__ (1,874 us, 0.01%)</title><rect x="1181.4" y="247" width="0.2" height="15.0" fill="rgb(152.035905374746,152.035905374746,129.097079893002)" rx="2" ry="2" />
<text  x="1184.44" y="257.5" ></text>
</g>
<g >
<title>firedrake.functionspace.VectorFunctionSpace (6,444 us, 0.04%)</title><rect x="17.9" y="87" width="0.5" height="15.0" fill="rgb(133.004250743487,133.004250743487,153.162113047127)" rx="2" ry="2" />
<text  x="20.92" y="97.5" ></text>
</g>
<g >
<title>firedrake.ufl_expr.adjoint (13,389 us, 0.09%)</title><rect x="255.3" y="103" width="1.1" height="15.0" fill="rgb(145.10982463581,160.098400640682,145.10982463581)" rx="2" ry="2" />
<text  x="258.32" y="113.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_pyop2_kernel_uniform_extrusion (61,131 us, 0.40%)</title><rect x="13.2" y="119" width="4.7" height="15.0" fill="rgb(152.021529508285,152.021529508285,129.027412232457)" rx="2" ry="2" />
<text  x="16.17" y="129.5" ></text>
</g>
<g >
<title>Parloop_Cells_wrap_form1_cell_integral_otherwise (12,505 us, 0.08%)</title><rect x="1186.4" y="151" width="1.0" height="15.0" fill="rgb(127.823850986413,127.823850986413,152.159455029628)" rx="2" ry="2" />
<text  x="1189.39" y="161.5" ></text>
</g>
<g >
<title>firedrake.extrusion_utils.make_extruded_coords (99,514 us, 0.65%)</title><rect x="10.2" y="87" width="7.7" height="15.0" fill="rgb(132.927792967083,151.499798176651,151.499798176651)" rx="2" ry="2" />
<text  x="13.19" y="97.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (5,654 us, 0.04%)</title><rect x="253.0" y="87" width="0.4" height="15.0" fill="rgb(143.661279000365,121.257027438436,143.661279000365)" rx="2" ry="2" />
<text  x="255.99" y="97.5" ></text>
</g>
<g >
<title>SNESSolve (12,012,625 us, 79.05%)</title><rect x="257.2" y="103" width="932.8" height="15.0" fill="rgb(130.724257936596,162.440237080089,130.724257936596)" rx="2" ry="2" />
<text  x="260.18" y="113.5" >SNESSolve</text>
</g>
<g >
<title>firedrake.assemble.allocate_matrix (7,870 us, 0.05%)</title><rect x="1180.2" y="151" width="0.7" height="15.0" fill="rgb(149.179372337372,149.179372337372,115.253881327267)" rx="2" ry="2" />
<text  x="1183.25" y="161.5" ></text>
</g>
<g >
<title>firedrake.functionspace.VectorFunctionSpace (5,654 us, 0.04%)</title><rect x="253.0" y="71" width="0.4" height="15.0" fill="rgb(130.521606649628,162.473226824479,130.521606649628)" rx="2" ry="2" />
<text  x="255.99" y="81.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.argument (6,824 us, 0.04%)</title><rect x="1181.1" y="183" width="0.5" height="15.0" fill="rgb(142.996406395433,154.110179435853,154.110179435853)" rx="2" ry="2" />
<text  x="1184.06" y="193.5" ></text>
</g>
<g >
<title>MatZeroInitial (1,640 us, 0.01%)</title><rect x="1180.7" y="167" width="0.2" height="15.0" fill="rgb(132.966122917141,162.075282315814,132.966122917141)" rx="2" ry="2" />
<text  x="1183.73" y="177.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (5,654 us, 0.04%)</title><rect x="253.0" y="119" width="0.4" height="15.0" fill="rgb(129.41953313646,162.652634140576,129.41953313646)" rx="2" ry="2" />
<text  x="255.99" y="129.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (5,698 us, 0.04%)</title><rect x="258.0" y="151" width="0.4" height="15.0" fill="rgb(136.260656408294,161.538962910278,136.260656408294)" rx="2" ry="2" />
<text  x="261.00" y="161.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (6,444 us, 0.04%)</title><rect x="17.9" y="103" width="0.5" height="15.0" fill="rgb(152.845731792937,118.483943745849,118.483943745849)" rx="2" ry="2" />
<text  x="20.92" y="113.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (4,727 us, 0.03%)</title><rect x="1181.2" y="199" width="0.4" height="15.0" fill="rgb(144.092913447358,122.363090708854,144.092913447358)" rx="2" ry="2" />
<text  x="1184.22" y="209.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (26,599 us, 0.18%)</title><rect x="18.4" y="103" width="2.1" height="15.0" fill="rgb(110.282031887093,110.282031887093,148.764264236212)" rx="2" ry="2" />
<text  x="21.42" y="113.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (1,874 us, 0.01%)</title><rect x="1181.4" y="231" width="0.2" height="15.0" fill="rgb(127.366260773856,150.057919459889,150.057919459889)" rx="2" ry="2" />
<text  x="1184.44" y="241.5" ></text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (34,016 us, 0.22%)</title><rect x="1187.4" y="135" width="2.6" height="15.0" fill="rgb(153.451190509012,123.125793902429,123.125793902429)" rx="2" ry="2" />
<text  x="1190.36" y="145.5" ></text>
</g>
<g >
<title>Log_Event_form0_cell_integral_otherwise (7,916 us, 0.05%)</title><rect x="1185.8" y="167" width="0.6" height="15.0" fill="rgb(155.648938163451,155.648938163451,146.606392638263)" rx="2" ry="2" />
<text  x="1188.77" y="177.5" ></text>
</g>
<g >
<title>firedrake.formmanipulation.ExtractSubBlock.split (9,363 us, 0.06%)</title><rect x="1180.9" y="167" width="0.7" height="15.0" fill="rgb(145.281702055569,160.070420595605,145.281702055569)" rx="2" ry="2" />
<text  x="1183.86" y="177.5" ></text>
</g>
<g >
<title>firedrake.functionspacedata.get_shared_data (6,444 us, 0.04%)</title><rect x="17.9" y="135" width="0.5" height="15.0" fill="rgb(129.730610361045,129.730610361045,152.52850523117)" rx="2" ry="2" />
<text  x="20.92" y="145.5" ></text>
</g>
</g>
</svg>
