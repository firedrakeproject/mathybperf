<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="283" onload="init(evt)" viewBox="0 0 1200 283" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:13px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:18px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 13 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (1 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="283.0" fill="url(#background)"  />
<text id="title" x="600.00" y="26" >Firedrake example</text>
<text id="details" x="10.00" y="265" > </text>
<text id="unzoom" x="10.00" y="26" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="26" >Search</text>
<text id="ignorecase" x="1174.00" y="26" >ic</text>
<text id="matched" x="1090.00" y="265" > </text>
<g id="frames">
<g >
<title>ParLoopExecute (83,290 us, 0.01%)</title><rect x="144.6" y="103" width="0.1" height="15.0" fill="rgb(156.588575137018,147.179076050468,147.179076050468)" rx="2" ry="2" />
<text  x="147.57" y="113.5" ></text>
</g>
<g >
<title>HybridInit (12,311,884 us, 2.01%)</title><rect x="1165.6" y="135" width="23.7" height="15.0" fill="rgb(156.566791178871,147.01206570468,147.01206570468)" rx="2" ry="2" />
<text  x="1168.64" y="145.5" >H..</text>
</g>
<g >
<title>ParLoop_Cells_wrap_wrap_slate_loopy_knl_0 (1,589,236 us, 0.26%)</title><rect x="1183.3" y="215" width="3.1" height="15.0" fill="rgb(127.302782790128,150.041462204848,150.041462204848)" rx="2" ry="2" />
<text  x="1186.35" y="225.5" ></text>
</g>
<g >
<title>ParLoopExecute (2,334,637 us, 0.38%)</title><rect x="790.2" y="215" width="4.5" height="15.0" fill="rgb(152.402155747089,115.083194061012,115.083194061012)" rx="2" ry="2" />
<text  x="793.20" y="225.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.LinearVariationalProblem.__init__ (54,269 us, 0.01%)</title><rect x="150.2" y="71" width="0.1" height="15.0" fill="rgb(141.466622412273,160.691480072421,141.466622412273)" rx="2" ry="2" />
<text  x="153.19" y="81.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (67,916 us, 0.01%)</title><rect x="144.8" y="71" width="0.1" height="15.0" fill="rgb(116.015431184068,116.015431184068,149.873954422723)" rx="2" ry="2" />
<text  x="147.81" y="81.5" ></text>
</g>
<g >
<title>MatLUFactorNum (59,157,682 us, 9.64%)</title><rect x="1043.9" y="183" width="113.8" height="15.0" fill="rgb(134.844117181246,98.6630502769432,134.844117181246)" rx="2" ry="2" />
<text  x="1046.90" y="193.5" >MatLUFactorNum</text>
</g>
<g >
<title>ParLoop_Cells_wrap_wrap_slate_loopy_knl_7 (1,165,195 us, 0.19%)</title><rect x="792.5" y="231" width="2.2" height="15.0" fill="rgb(133.966855221327,133.966855221327,153.348423591225)" rx="2" ry="2" />
<text  x="795.45" y="241.5" ></text>
</g>
<g >
<title>ParLoop_Cells_wrap_wrap_slate_loopy_knl_4 (555,036 us, 0.09%)</title><rect x="805.2" y="231" width="1.0" height="15.0" fill="rgb(111.448517442832,111.448517442832,148.990035634097)" rx="2" ry="2" />
<text  x="808.16" y="241.5" ></text>
</g>
<g >
<title>firedrake.slate.slac.compiler.compile_expression (111,228 us, 0.02%)</title><rect x="1186.4" y="199" width="0.2" height="15.0" fill="rgb(120.716841221488,148.333995872238,148.333995872238)" rx="2" ry="2" />
<text  x="1189.40" y="209.5" ></text>
</g>
<g >
<title>firedrake (613,654,053 us, 100.00%)</title><rect x="10.0" y="55" width="1180.0" height="15.0" fill="rgb(133.826920281812,133.826920281812,153.321339409383)" rx="2" ry="2" />
<text  x="13.00" y="65.5" >firedrake</text>
</g>
<g >
<title>firedrake.assemble.assemble (1,953,509 us, 0.32%)</title><rect x="795.0" y="167" width="3.7" height="15.0" fill="rgb(152.452034457805,152.452034457805,131.113705449363)" rx="2" ry="2" />
<text  x="797.96" y="177.5" ></text>
</g>
<g >
<title>firedrake.assemble.assemble_form (193,929 us, 0.03%)</title><rect x="1189.6" y="151" width="0.4" height="15.0" fill="rgb(145.248248141959,125.32363586377,145.248248141959)" rx="2" ry="2" />
<text  x="1192.63" y="161.5" ></text>
</g>
<g >
<title>SCBackSub (10,276,292 us, 1.67%)</title><rect x="779.0" y="151" width="19.7" height="15.0" fill="rgb(130.432675891623,162.487703924619,130.432675891623)" rx="2" ry="2" />
<text  x="781.96" y="161.5" ></text>
</g>
<g >
<title>perfsolve (540,667,906 us, 88.11%)</title><rect x="150.3" y="71" width="1039.7" height="15.0" fill="rgb(130.199099407326,150.792359105603,150.792359105603)" rx="2" ry="2" />
<text  x="153.35" y="81.5" >perfsolve</text>
</g>
<g >
<title>MatLUFactorSym (1,688,218 us, 0.28%)</title><rect x="1157.7" y="183" width="3.2" height="15.0" fill="rgb(139.797932745478,160.96312722748,139.797932745478)" rx="2" ry="2" />
<text  x="1160.65" y="193.5" ></text>
</g>
<g >
<title>firedrake.assemble.assemble (5,111,287 us, 0.83%)</title><rect x="785.1" y="183" width="9.9" height="15.0" fill="rgb(128.812433488028,128.812433488028,152.350793578328)" rx="2" ry="2" />
<text  x="788.13" y="193.5" ></text>
</g>
<g >
<title>PCSetUp (14,778,908 us, 2.41%)</title><rect x="1160.9" y="119" width="28.4" height="15.0" fill="rgb(155.770024606671,155.770024606671,147.193196170792)" rx="2" ry="2" />
<text  x="1163.90" y="129.5" >P..</text>
</g>
<g >
<title>firedrake.slate.slac.compiler.compile_expression (134,162 us, 0.02%)</title><rect x="806.2" y="215" width="0.3" height="15.0" fill="rgb(148.865581571553,148.865581571553,113.733203000603)" rx="2" ry="2" />
<text  x="809.23" y="225.5" ></text>
</g>
<g >
<title>SCForwardElim (4,039,658 us, 0.66%)</title><rect x="798.7" y="151" width="7.8" height="15.0" fill="rgb(150.912497374743,159.153779497135,150.912497374743)" rx="2" ry="2" />
<text  x="801.72" y="161.5" ></text>
</g>
<g >
<title>firedrake.interpolation.make_interpolator (54,828 us, 0.01%)</title><rect x="1189.2" y="151" width="0.1" height="15.0" fill="rgb(148.27329413591,159.583417233689,148.27329413591)" rx="2" ry="2" />
<text  x="1192.21" y="161.5" ></text>
</g>
<g >
<title>firedrake.slate.slac.compiler.compile_expression (86,402 us, 0.01%)</title><rect x="798.5" y="199" width="0.2" height="15.0" fill="rgb(149.911477952731,149.911477952731,118.801777770927)" rx="2" ry="2" />
<text  x="801.55" y="209.5" ></text>
</g>
<g >
<title>ParLoopExecute (69,185 us, 0.01%)</title><rect x="1189.8" y="167" width="0.1" height="15.0" fill="rgb(152.284432816516,152.284432816516,130.301482110807)" rx="2" ry="2" />
<text  x="1192.78" y="177.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.solve (474,263,065 us, 77.29%)</title><rect x="278.0" y="87" width="912.0" height="15.0" fill="rgb(109.963516652403,109.963516652403,148.702616126271)" rx="2" ry="2" />
<text  x="281.04" y="97.5" >firedrake.variational_solver.NonlinearVariationalSolver.solve</text>
</g>
<g >
<title>ParLoop_Cells_wrap_wrap_slate_loopy_knl_14 (421,687 us, 0.07%)</title><rect x="797.7" y="215" width="0.8" height="15.0" fill="rgb(156.62074592403,147.425718750893,147.425718750893)" rx="2" ry="2" />
<text  x="800.74" y="225.5" ></text>
</g>
<g >
<title>ParLoopExecute (3,179,680 us, 0.52%)</title><rect x="1180.3" y="199" width="6.1" height="15.0" fill="rgb(152.553373034801,116.242526600139,116.242526600139)" rx="2" ry="2" />
<text  x="1183.29" y="209.5" ></text>
</g>
<g >
<title>ParLoopExecute (844,774 us, 0.14%)</title><rect x="796.9" y="199" width="1.6" height="15.0" fill="rgb(151.316288951373,151.316288951373,125.609707995118)" rx="2" ry="2" />
<text  x="799.93" y="209.5" ></text>
</g>
<g >
<title>PCSetUp (121,708,705 us, 19.83%)</title><rect x="926.9" y="167" width="234.0" height="15.0" fill="rgb(122.874209987122,148.893313700365,148.893313700365)" rx="2" ry="2" />
<text  x="929.86" y="177.5" >PCSetUp</text>
</g>
<g >
<title>RecoverFirstElim (6,430,596 us, 1.05%)</title><rect x="782.6" y="167" width="12.4" height="15.0" fill="rgb(127.343753937425,150.052084354147,150.052084354147)" rx="2" ry="2" />
<text  x="785.59" y="177.5" ></text>
</g>
<g >
<title>firedrake.assemble.allocate_matrix (1,330,565 us, 0.22%)</title><rect x="1186.6" y="151" width="2.6" height="15.0" fill="rgb(134.749601005955,134.749601005955,153.499922775346)" rx="2" ry="2" />
<text  x="1189.62" y="161.5" ></text>
</g>
<g >
<title>firedrake.__init__ (2,731,034 us, 0.45%)</title><rect x="144.9" y="71" width="5.3" height="15.0" fill="rgb(133.277506311344,162.024591995828,133.277506311344)" rx="2" ry="2" />
<text  x="147.94" y="81.5" ></text>
</g>
<g >
<title>KSPSolve (1,308,644 us, 0.21%)</title><rect x="924.3" y="167" width="2.6" height="15.0" fill="rgb(153.101898574286,153.101898574286,134.263046936924)" rx="2" ry="2" />
<text  x="927.35" y="177.5" ></text>
</g>
<g >
<title>SCSolve (184,311,062 us, 30.04%)</title><rect x="806.5" y="151" width="354.4" height="15.0" fill="rgb(150.467560991653,150.467560991653,121.496641728781)" rx="2" ry="2" />
<text  x="809.48" y="161.5" >SCSolve</text>
</g>
<g >
<title>KSPSolve (326,323,296 us, 53.18%)</title><rect x="533.4" y="119" width="627.5" height="15.0" fill="rgb(147.636529520043,147.636529520043,155.994167003879)" rx="2" ry="2" />
<text  x="536.41" y="129.5" >KSPSolve</text>
</g>
<g >
<title>SNESFunctionEval (356,067 us, 0.06%)</title><rect x="1189.3" y="119" width="0.7" height="15.0" fill="rgb(114.189110271697,114.189110271697,149.520472955812)" rx="2" ry="2" />
<text  x="1192.32" y="129.5" ></text>
</g>
<g >
<title>firedrake.assemble.assemble (2,628,582 us, 0.43%)</title><rect x="801.4" y="183" width="5.1" height="15.0" fill="rgb(113.463175424518,146.453415850801,146.453415850801)" rx="2" ry="2" />
<text  x="804.43" y="193.5" ></text>
</g>
<g >
<title>PCApply (262,475,089 us, 42.77%)</title><rect x="656.2" y="135" width="504.7" height="15.0" fill="rgb(148.499388940162,159.546611102764,148.499388940162)" rx="2" ry="2" />
<text  x="659.18" y="145.5" >PCApply</text>
</g>
<g >
<title>firedrake.assemble.assemble_form (1,937,104 us, 0.32%)</title><rect x="802.8" y="199" width="3.7" height="15.0" fill="rgb(151.197386541828,151.197386541828,125.03348862578)" rx="2" ry="2" />
<text  x="805.76" y="209.5" ></text>
</g>
<g >
<title>HybridRHS (3,320,072 us, 0.54%)</title><rect x="800.1" y="167" width="6.4" height="15.0" fill="rgb(138.511331425259,138.511331425259,154.227999630695)" rx="2" ry="2" />
<text  x="803.10" y="177.5" ></text>
</g>
<g >
<title>all (613,654,053 us, 100%)</title><rect x="10.0" y="39" width="1180.0" height="15.0" fill="rgb(125.700177546142,125.700177546142,151.748421460544)" rx="2" ry="2" />
<text  x="13.00" y="49.5" ></text>
</g>
<g >
<title>ParLoopExecute (1,111,498 us, 0.18%)</title><rect x="804.1" y="215" width="2.1" height="15.0" fill="rgb(154.985474880369,134.888640749497,134.888640749497)" rx="2" ry="2" />
<text  x="807.09" y="225.5" ></text>
</g>
<g >
<title>firedrake.assemble.assemble (274,730 us, 0.04%)</title><rect x="1189.5" y="135" width="0.5" height="15.0" fill="rgb(140.995704809735,140.995704809735,154.708846092207)" rx="2" ry="2" />
<text  x="1192.47" y="145.5" ></text>
</g>
<g >
<title>PCApply (872,212 us, 0.14%)</title><rect x="925.2" y="183" width="1.7" height="15.0" fill="rgb(110.488881942,145.682302725704,145.682302725704)" rx="2" ry="2" />
<text  x="928.19" y="193.5" ></text>
</g>
<g >
<title>firedrake.extrusion_utils.make_extruded_coords (163,891 us, 0.03%)</title><rect x="144.4" y="87" width="0.3" height="15.0" fill="rgb(146.105373884405,127.520020578787,146.105373884405)" rx="2" ry="2" />
<text  x="147.41" y="97.5" ></text>
</g>
<g >
<title>MatSolve (436,095 us, 0.07%)</title><rect x="926.0" y="199" width="0.9" height="15.0" fill="rgb(139.54141251906,139.54141251906,154.427370164979)" rx="2" ry="2" />
<text  x="929.02" y="209.5" ></text>
</g>
<g >
<title>firedrake.assemble.assemble_form (4,997,185 us, 0.81%)</title><rect x="1177.0" y="183" width="9.6" height="15.0" fill="rgb(146.332532755385,146.332532755385,155.7417805333)" rx="2" ry="2" />
<text  x="1180.01" y="193.5" ></text>
</g>
<g >
<title>firedrake.assemble.assemble_form (3,792,158 us, 0.62%)</title><rect x="787.7" y="199" width="7.3" height="15.0" fill="rgb(143.721674789161,121.411791647225,143.721674789161)" rx="2" ry="2" />
<text  x="790.67" y="209.5" ></text>
</g>
<g >
<title>HybridOperatorAssembly (8,409,882 us, 1.37%)</title><rect x="1170.4" y="151" width="16.2" height="15.0" fill="rgb(131.869485442722,151.225422151817,151.225422151817)" rx="2" ry="2" />
<text  x="1173.45" y="161.5" ></text>
</g>
<g >
<title>CreateExtMesh (295,072 us, 0.05%)</title><rect x="144.2" y="71" width="0.6" height="15.0" fill="rgb(115.547990140104,146.993923369657,146.993923369657)" rx="2" ry="2" />
<text  x="147.24" y="81.5" ></text>
</g>
<g >
<title>MatZeroInitial (114,557 us, 0.02%)</title><rect x="1189.0" y="167" width="0.2" height="15.0" fill="rgb(143.784236361754,154.314431649344,154.314431649344)" rx="2" ry="2" />
<text  x="1191.96" y="177.5" ></text>
</g>
<g >
<title>CreateSparsity (548,559 us, 0.09%)</title><rect x="1187.9" y="167" width="1.1" height="15.0" fill="rgb(151.260195187115,151.260195187115,125.337868983713)" rx="2" ry="2" />
<text  x="1190.90" y="177.5" ></text>
</g>
<g >
<title>firedrake.assemble.assemble_form (1,442,320 us, 0.24%)</title><rect x="795.9" y="183" width="2.8" height="15.0" fill="rgb(148.246480485038,133.00660624291,148.246480485038)" rx="2" ry="2" />
<text  x="798.94" y="193.5" ></text>
</g>
<g >
<title>firedrake.assemble.assemble (6,703,525 us, 1.09%)</title><rect x="1173.7" y="167" width="12.9" height="15.0" fill="rgb(118.292044699566,147.70534492211,147.70534492211)" rx="2" ry="2" />
<text  x="1176.73" y="177.5" ></text>
</g>
<g >
<title>SNESSolve (407,858,260 us, 66.46%)</title><rect x="405.7" y="103" width="784.3" height="15.0" fill="rgb(110.802860903838,110.802860903838,148.865069852356)" rx="2" ry="2" />
<text  x="408.73" y="113.5" >SNESSolve</text>
</g>
<g >
<title>firedrake.slate.slac.compiler.compile_expression (138,974 us, 0.02%)</title><rect x="794.7" y="215" width="0.3" height="15.0" fill="rgb(144.420806704587,160.210566350416,144.420806704587)" rx="2" ry="2" />
<text  x="797.69" y="225.5" ></text>
</g>
</g>
</svg>
