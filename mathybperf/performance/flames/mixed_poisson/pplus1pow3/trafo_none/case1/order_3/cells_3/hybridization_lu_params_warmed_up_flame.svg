<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="283" onload="init(evt)" viewBox="0 0 1200 283" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:13px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:18px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 13 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (1 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="283.0" fill="url(#background)"  />
<text id="title" x="600.00" y="26" >Firedrake example</text>
<text id="details" x="10.00" y="265" > </text>
<text id="unzoom" x="10.00" y="26" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="26" >Search</text>
<text id="ignorecase" x="1174.00" y="26" >ic</text>
<text id="matched" x="1090.00" y="265" > </text>
<g id="frames">
<g >
<title>MatLUFactorNum (383,687,633 us, 9.86%)</title><rect x="1042.6" y="183" width="116.4" height="15.0" fill="rgb(127.110456492231,149.991599831319,149.991599831319)" rx="2" ry="2" />
<text  x="1045.64" y="193.5" >MatLUFactorNum</text>
</g>
<g >
<title>MatLUFactorSym (6,527,750 us, 0.17%)</title><rect x="1159.0" y="183" width="2.0" height="15.0" fill="rgb(139.922900950045,139.922900950045,154.501206635493)" rx="2" ry="2" />
<text  x="1162.02" y="193.5" ></text>
</g>
<g >
<title>ParLoopExecute (4,292,888 us, 0.11%)</title><rect x="794.0" y="199" width="1.3" height="15.0" fill="rgb(133.851480522517,151.73927272806,151.73927272806)" rx="2" ry="2" />
<text  x="796.98" y="209.5" ></text>
</g>
<g >
<title>CreateExtMesh (331,333 us, 0.01%)</title><rect x="139.8" y="71" width="0.1" height="15.0" fill="rgb(155.725094356345,155.725094356345,146.975457265366)" rx="2" ry="2" />
<text  x="142.78" y="81.5" ></text>
</g>
<g >
<title>HybridInit (80,261,901 us, 2.06%)</title><rect x="1165.5" y="135" width="24.4" height="15.0" fill="rgb(119.392308789211,147.990598574981,147.990598574981)" rx="2" ry="2" />
<text  x="1168.52" y="145.5" >H..</text>
</g>
<g >
<title>firedrake.__init__ (2,771,486 us, 0.07%)</title><rect x="139.9" y="71" width="0.8" height="15.0" fill="rgb(154.775692030632,133.280305568178,133.280305568178)" rx="2" ry="2" />
<text  x="142.88" y="81.5" ></text>
</g>
<g >
<title>SNESSolve (2,611,339,912 us, 67.12%)</title><rect x="398.0" y="103" width="792.0" height="15.0" fill="rgb(156.261720588232,144.673191176442,144.673191176442)" rx="2" ry="2" />
<text  x="400.97" y="113.5" >SNESSolve</text>
</g>
<g >
<title>ParLoop_Cells_wrap_wrap_slate_loopy_knl_7 (9,239,994 us, 0.24%)</title><rect x="789.7" y="231" width="2.8" height="15.0" fill="rgb(139.99528305064,153.332110420536,153.332110420536)" rx="2" ry="2" />
<text  x="792.73" y="241.5" ></text>
</g>
<g >
<title>ParLoop_Cells_wrap_wrap_slate_loopy_knl_4 (3,531,704 us, 0.09%)</title><rect x="800.9" y="231" width="1.1" height="15.0" fill="rgb(109.227445380703,145.355263617219,145.355263617219)" rx="2" ry="2" />
<text  x="803.88" y="241.5" ></text>
</g>
<g >
<title>PCApply (6,466,002 us, 0.17%)</title><rect x="922.3" y="183" width="2.0" height="15.0" fill="rgb(147.657476902742,159.683666550716,147.657476902742)" rx="2" ry="2" />
<text  x="925.32" y="193.5" ></text>
</g>
<g >
<title>PCSetUp (95,186,106 us, 2.45%)</title><rect x="1161.0" y="119" width="28.9" height="15.0" fill="rgb(128.358431547703,150.315148919775,150.315148919775)" rx="2" ry="2" />
<text  x="1164.00" y="129.5" >P..</text>
</g>
<g >
<title>firedrake.assemble.assemble (14,589,583 us, 0.38%)</title><rect x="797.6" y="183" width="4.4" height="15.0" fill="rgb(148.936714657066,148.936714657066,114.07792487655)" rx="2" ry="2" />
<text  x="800.57" y="193.5" ></text>
</g>
<g >
<title>ParLoopExecute (23,621,210 us, 0.61%)</title><rect x="1180.9" y="199" width="7.2" height="15.0" fill="rgb(138.786198841644,138.786198841644,154.281199775802)" rx="2" ry="2" />
<text  x="1183.93" y="209.5" ></text>
</g>
<g >
<title>ParLoopExecute (7,064,832 us, 0.18%)</title><rect x="799.8" y="215" width="2.2" height="15.0" fill="rgb(129.295220893726,162.6728710173,129.295220893726)" rx="2" ry="2" />
<text  x="802.81" y="225.5" ></text>
</g>
<g >
<title>KSPSolve (9,699,543 us, 0.25%)</title><rect x="921.3" y="167" width="3.0" height="15.0" fill="rgb(140.071779960712,112.058936149325,140.071779960712)" rx="2" ry="2" />
<text  x="924.34" y="177.5" ></text>
</g>
<g >
<title>firedrake.assemble.assemble_form (6,767,861 us, 0.17%)</title><rect x="793.3" y="183" width="2.0" height="15.0" fill="rgb(147.045202850768,155.159867405755,155.159867405755)" rx="2" ry="2" />
<text  x="796.28" y="193.5" ></text>
</g>
<g >
<title>perfsolve (3,459,507,219 us, 88.92%)</title><rect x="140.7" y="71" width="1049.3" height="15.0" fill="rgb(143.199523297677,160.409379928285,143.199523297677)" rx="2" ry="2" />
<text  x="143.72" y="81.5" >perfsolve</text>
</g>
<g >
<title>PCSetUp (780,454,722 us, 20.06%)</title><rect x="924.3" y="167" width="236.7" height="15.0" fill="rgb(130.253595940412,150.806487836403,150.806487836403)" rx="2" ry="2" />
<text  x="927.28" y="177.5" >PCSetUp</text>
</g>
<g >
<title>firedrake.assemble.assemble_form (35,714,690 us, 0.92%)</title><rect x="1177.3" y="183" width="10.8" height="15.0" fill="rgb(153.168611275745,120.959353114046,120.959353114046)" rx="2" ry="2" />
<text  x="1180.30" y="193.5" ></text>
</g>
<g >
<title>ParLoopExecute (18,490,448 us, 0.48%)</title><rect x="786.9" y="215" width="5.6" height="15.0" fill="rgb(133.828849864753,133.828849864753,153.321712877049)" rx="2" ry="2" />
<text  x="789.92" y="225.5" ></text>
</g>
<g >
<title>PCApply (1,682,631,833 us, 43.25%)</title><rect x="650.6" y="135" width="510.4" height="15.0" fill="rgb(149.651892207772,149.651892207772,117.543785314589)" rx="2" ry="2" />
<text  x="653.65" y="145.5" >PCApply</text>
</g>
<g >
<title>all (3,890,483,314 us, 100%)</title><rect x="10.0" y="39" width="1180.0" height="15.0" fill="rgb(147.783579474388,159.6631382251,147.783579474388)" rx="2" ry="2" />
<text  x="13.00" y="49.5" ></text>
</g>
<g >
<title>firedrake.assemble.assemble_form (10,903,210 us, 0.28%)</title><rect x="798.7" y="199" width="3.3" height="15.0" fill="rgb(135.385653629346,135.385653629346,153.623029734712)" rx="2" ry="2" />
<text  x="801.69" y="209.5" ></text>
</g>
<g >
<title>firedrake.assemble.assemble (37,473,980 us, 0.96%)</title><rect x="781.2" y="183" width="11.4" height="15.0" fill="rgb(150.820039930056,150.820039930056,123.204808891808)" rx="2" ry="2" />
<text  x="784.21" y="193.5" ></text>
</g>
<g >
<title>CreateSparsity (2,368,839 us, 0.06%)</title><rect x="1189.0" y="167" width="0.7" height="15.0" fill="rgb(149.844903919249,149.844903919249,118.479149762515)" rx="2" ry="2" />
<text  x="1191.99" y="177.5" ></text>
</g>
<g >
<title>SCBackSub (67,997,297 us, 1.75%)</title><rect x="774.7" y="151" width="20.6" height="15.0" fill="rgb(130.855650453219,150.962576043427,150.962576043427)" rx="2" ry="2" />
<text  x="777.71" y="161.5" ></text>
</g>
<g >
<title>MatSolve (3,232,993 us, 0.08%)</title><rect x="923.3" y="199" width="1.0" height="15.0" fill="rgb(154.492024125237,131.105518293483,131.105518293483)" rx="2" ry="2" />
<text  x="926.30" y="209.5" ></text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.solve (3,035,423,155 us, 78.02%)</title><rect x="269.3" y="87" width="920.7" height="15.0" fill="rgb(145.522542895489,145.522542895489,155.585008302353)" rx="2" ry="2" />
<text  x="272.34" y="97.5" >firedrake.variational_solver.NonlinearVariationalSolver.solve</text>
</g>
<g >
<title>firedrake.assemble.assemble (9,089,514 us, 0.23%)</title><rect x="792.6" y="167" width="2.7" height="15.0" fill="rgb(152.943900098509,119.236567421903,119.236567421903)" rx="2" ry="2" />
<text  x="795.57" y="177.5" ></text>
</g>
<g >
<title>SNESFunctionEval (433,088 us, 0.01%)</title><rect x="1189.9" y="119" width="0.1" height="15.0" fill="rgb(152.185766560782,113.424210299327,113.424210299327)" rx="2" ry="2" />
<text  x="1192.87" y="129.5" ></text>
</g>
<g >
<title>ParLoop_Cells_wrap_wrap_slate_loopy_knl_14 (2,143,575 us, 0.06%)</title><rect x="794.6" y="215" width="0.7" height="15.0" fill="rgb(107.88131762378,145.006267532091,145.006267532091)" rx="2" ry="2" />
<text  x="797.63" y="225.5" ></text>
</g>
<g >
<title>firedrake.assemble.allocate_matrix (5,592,473 us, 0.14%)</title><rect x="1188.1" y="151" width="1.7" height="15.0" fill="rgb(150.28286414867,150.28286414867,120.601572412784)" rx="2" ry="2" />
<text  x="1191.14" y="161.5" ></text>
</g>
<g >
<title>RecoverFirstElim (46,892,238 us, 1.21%)</title><rect x="778.4" y="167" width="14.2" height="15.0" fill="rgb(144.573167327511,144.573167327511,155.401258192421)" rx="2" ry="2" />
<text  x="781.35" y="177.5" ></text>
</g>
<g >
<title>HybridRHS (18,275,972 us, 0.47%)</title><rect x="796.5" y="167" width="5.5" height="15.0" fill="rgb(148.688531482114,159.5158204564,148.688531482114)" rx="2" ry="2" />
<text  x="799.45" y="177.5" ></text>
</g>
<g >
<title>SCForwardElim (21,977,105 us, 0.56%)</title><rect x="795.3" y="151" width="6.7" height="15.0" fill="rgb(152.331428472766,114.540951624537,114.540951624537)" rx="2" ry="2" />
<text  x="798.33" y="161.5" ></text>
</g>
<g >
<title>HybridOperatorAssembly (59,629,476 us, 1.53%)</title><rect x="1170.1" y="151" width="18.0" height="15.0" fill="rgb(142.932924772384,154.093721237285,154.093721237285)" rx="2" ry="2" />
<text  x="1173.05" y="161.5" ></text>
</g>
<g >
<title>ParLoop_Cells_wrap_wrap_slate_loopy_knl_0 (11,809,931 us, 0.30%)</title><rect x="1184.5" y="215" width="3.6" height="15.0" fill="rgb(134.914910260862,161.758037864511,134.914910260862)" rx="2" ry="2" />
<text  x="1187.51" y="225.5" ></text>
</g>
<g >
<title>firedrake.assemble.assemble (47,672,074 us, 1.23%)</title><rect x="1173.7" y="167" width="14.4" height="15.0" fill="rgb(156.700394538884,148.036358131444,148.036358131444)" rx="2" ry="2" />
<text  x="1176.68" y="177.5" ></text>
</g>
<g >
<title>MatZeroInitial (420,936 us, 0.01%)</title><rect x="1189.7" y="167" width="0.1" height="15.0" fill="rgb(104.025733130755,144.006671552418,144.006671552418)" rx="2" ry="2" />
<text  x="1192.71" y="177.5" ></text>
</g>
<g >
<title>SCSolve (1,183,633,420 us, 30.42%)</title><rect x="802.0" y="151" width="359.0" height="15.0" fill="rgb(116.380566663144,116.380566663144,149.94462580577)" rx="2" ry="2" />
<text  x="805.00" y="161.5" >SCSolve</text>
</g>
<g >
<title>KSPSolve (2,091,656,207 us, 53.76%)</title><rect x="526.6" y="119" width="634.4" height="15.0" fill="rgb(140.093707337563,112.115125052505,140.093707337563)" rx="2" ry="2" />
<text  x="529.59" y="129.5" >KSPSolve</text>
</g>
<g >
<title>firedrake.assemble.assemble_form (28,056,140 us, 0.72%)</title><rect x="784.1" y="199" width="8.5" height="15.0" fill="rgb(140.679550127847,160.819608118723,140.679550127847)" rx="2" ry="2" />
<text  x="787.07" y="209.5" ></text>
</g>
<g >
<title>firedrake (3,890,483,314 us, 100.00%)</title><rect x="10.0" y="55" width="1180.0" height="15.0" fill="rgb(151.895572195705,142.357403751493,151.895572195705)" rx="2" ry="2" />
<text  x="13.00" y="65.5" >firedrake</text>
</g>
</g>
</svg>
