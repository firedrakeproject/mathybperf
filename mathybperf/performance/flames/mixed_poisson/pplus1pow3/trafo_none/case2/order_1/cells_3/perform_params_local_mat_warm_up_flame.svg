<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="379" onload="init(evt)" viewBox="0 0 1200 379" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:13px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:18px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 13 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (1 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="379.0" fill="url(#background)"  />
<text id="title" x="600.00" y="26" >Firedrake example</text>
<text id="details" x="10.00" y="361" > </text>
<text id="unzoom" x="10.00" y="26" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="26" >Search</text>
<text id="ignorecase" x="1174.00" y="26" >ic</text>
<text id="matched" x="1090.00" y="361" > </text>
<g id="frames">
<g >
<title>pyop2.parloop.JITModule.compile (1,572,426 us, 0.25%)</title><rect x="19.0" y="119" width="2.9" height="15.0" fill="rgb(140.617176934852,153.493342168295,153.493342168295)" rx="2" ry="2" />
<text  x="21.99" y="129.5" ></text>
</g>
<g >
<title>ParLoopExecute (3,146,112 us, 0.50%)</title><rect x="16.1" y="103" width="5.8" height="15.0" fill="rgb(131.673519725027,162.285706091275,131.673519725027)" rx="2" ry="2" />
<text  x="19.06" y="113.5" ></text>
</g>
<g >
<title>all (632,655,457 us, 100%)</title><rect x="10.0" y="39" width="1180.0" height="15.0" fill="rgb(150.255998913338,150.255998913338,120.471379349252)" rx="2" ry="2" />
<text  x="13.00" y="49.5" ></text>
</g>
<g >
<title>firedrake.interpolation.make_interpolator (98,300 us, 0.02%)</title><rect x="1075.6" y="183" width="0.2" height="15.0" fill="rgb(130.193159061158,162.526695036556,130.193159061158)" rx="2" ry="2" />
<text  x="1078.60" y="193.5" ></text>
</g>
<g >
<title>SCSolve (324,871,771 us, 51.35%)</title><rect x="469.8" y="151" width="606.0" height="15.0" fill="rgb(156.267710743545,144.719115700508,144.719115700508)" rx="2" ry="2" />
<text  x="472.85" y="161.5" >SCSolve</text>
</g>
<g >
<title>firedrake.parloops.par_loop (3,685,687 us, 0.58%)</title><rect x="1080.7" y="151" width="6.9" height="15.0" fill="rgb(153.632582466149,124.516465573807,124.516465573807)" rx="2" ry="2" />
<text  x="1083.73" y="161.5" ></text>
</g>
<g >
<title>firedrake.extrusion_utils.make_extruded_coords (4,763,938 us, 0.75%)</title><rect x="13.0" y="87" width="8.9" height="15.0" fill="rgb(120.71104202394,120.71104202394,150.782782327214)" rx="2" ry="2" />
<text  x="16.04" y="97.5" ></text>
</g>
<g >
<title>pyop2.parloop.JITModule.compile (53,288,826 us, 8.42%)</title><rect x="893.0" y="327" width="99.4" height="15.0" fill="rgb(124.28032958488,149.25786322571,149.25786322571)" rx="2" ry="2" />
<text  x="896.02" y="337.5" >pyop2.parl..</text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (2,023,435 us, 0.32%)</title><rect x="1186.2" y="167" width="3.8" height="15.0" fill="rgb(140.720324264655,140.720324264655,154.655546631869)" rx="2" ry="2" />
<text  x="1189.23" y="177.5" ></text>
</g>
<g >
<title>firedrake.assemble.assemble_form (114,551,191 us, 18.11%)</title><rect x="256.2" y="199" width="213.6" height="15.0" fill="rgb(131.881424558795,151.228517478206,151.228517478206)" rx="2" ry="2" />
<text  x="259.19" y="209.5" >firedrake.assemble.assemb..</text>
</g>
<g >
<title>ParLoopExecute (2,685,864 us, 0.42%)</title><rect x="107.0" y="199" width="5.0" height="15.0" fill="rgb(152.39739112107,115.046665261535,115.046665261535)" rx="2" ry="2" />
<text  x="110.01" y="209.5" ></text>
</g>
<g >
<title>firedrake.assemble.assemble (43,514,596 us, 6.88%)</title><rect x="1108.8" y="135" width="81.2" height="15.0" fill="rgb(144.371978433977,160.218515138655,144.371978433977)" rx="2" ry="2" />
<text  x="1111.84" y="145.5" >firedrak..</text>
</g>
<g >
<title>PCApply (287,548,143 us, 45.45%)</title><rect x="469.8" y="183" width="536.4" height="15.0" fill="rgb(154.370161675579,130.171239512774,130.171239512774)" rx="2" ry="2" />
<text  x="472.85" y="193.5" >PCApply</text>
</g>
<g >
<title>pyop2.parloop.JITModule.compile (1,342,124 us, 0.21%)</title><rect x="109.5" y="215" width="2.5" height="15.0" fill="rgb(113.732083222712,113.732083222712,149.432016107622)" rx="2" ry="2" />
<text  x="112.52" y="225.5" ></text>
</g>
<g >
<title>KSPSolve (562,107,669 us, 88.85%)</title><rect x="27.4" y="119" width="1048.4" height="15.0" fill="rgb(136.520639369618,152.431276873605,152.431276873605)" rx="2" ry="2" />
<text  x="30.37" y="129.5" >KSPSolve</text>
</g>
<g >
<title>firedrake.slate.slac.compiler.compile_expression (6,313,286 us, 1.00%)</title><rect x="458.1" y="215" width="11.7" height="15.0" fill="rgb(118.955443926684,147.877337314325,147.877337314325)" rx="2" ry="2" />
<text  x="461.07" y="225.5" ></text>
</g>
<g >
<title>pyop2.parloop.JITModule.compile (9,328,061 us, 1.47%)</title><rect x="1168.8" y="183" width="17.4" height="15.0" fill="rgb(152.277761237138,114.129502818057,114.129502818057)" rx="2" ry="2" />
<text  x="1171.83" y="193.5" ></text>
</g>
<g >
<title>PCSetUp (6,335,750 us, 1.00%)</title><rect x="1075.8" y="119" width="11.8" height="15.0" fill="rgb(154.243690400693,129.201626405313,129.201626405313)" rx="2" ry="2" />
<text  x="1078.78" y="129.5" ></text>
</g>
<g >
<title>PCApply (562,107,669 us, 88.85%)</title><rect x="27.4" y="135" width="1048.4" height="15.0" fill="rgb(127.275859890548,127.275859890548,152.05339223688)" rx="2" ry="2" />
<text  x="30.37" y="145.5" >PCApply</text>
</g>
<g >
<title>firedrake.parloops.par_loop (4,036,045 us, 0.64%)</title><rect x="104.5" y="183" width="7.5" height="15.0" fill="rgb(145.639526491392,154.795432794065,154.795432794065)" rx="2" ry="2" />
<text  x="107.49" y="193.5" ></text>
</g>
<g >
<title>KSPSetUp (287,548,143 us, 45.45%)</title><rect x="469.8" y="215" width="536.4" height="15.0" fill="rgb(152.881548442156,152.881548442156,133.195196296602)" rx="2" ry="2" />
<text  x="472.85" y="225.5" >KSPSetUp</text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (2,463,544 us, 0.39%)</title><rect x="465.3" y="231" width="4.5" height="15.0" fill="rgb(150.687445754278,150.687445754278,122.562237116883)" rx="2" ry="2" />
<text  x="468.25" y="241.5" ></text>
</g>
<g >
<title>KSPSolve (287,548,143 us, 45.45%)</title><rect x="469.8" y="167" width="536.4" height="15.0" fill="rgb(138.363617521482,138.363617521482,154.199409842867)" rx="2" ry="2" />
<text  x="472.85" y="177.5" >KSPSolve</text>
</g>
<g >
<title>firedrake.functionspaceimpl.FunctionSpace.__init__ (54,070 us, 0.01%)</title><rect x="22.0" y="87" width="0.1" height="15.0" fill="rgb(146.895156403423,159.807765236652,146.895156403423)" rx="2" ry="2" />
<text  x="24.96" y="97.5" ></text>
</g>
<g >
<title>firedrake.matrix_free.operators.ImplicitMatrixContext.mult (287,548,143 us, 45.45%)</title><rect x="469.8" y="263" width="536.4" height="15.0" fill="rgb(109.805558290307,145.505144741932,145.505144741932)" rx="2" ry="2" />
<text  x="472.85" y="273.5" >firedrake.matrix_free.operators.ImplicitMatrixContext.mult</text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (2,803,201 us, 0.44%)</title><rect x="1000.9" y="327" width="5.3" height="15.0" fill="rgb(140.179732754012,140.179732754012,154.550916016906)" rx="2" ry="2" />
<text  x="1003.94" y="337.5" ></text>
</g>
<g >
<title>perfsolve (623,344,282 us, 98.53%)</title><rect x="27.4" y="71" width="1162.6" height="15.0" fill="rgb(113.89566787973,113.89566787973,149.463677654141)" rx="2" ry="2" />
<text  x="30.37" y="81.5" >perfsolve</text>
</g>
<g >
<title>firedrake.assemble.assemble (23,288,852 us, 3.68%)</title><rect x="1032.2" y="183" width="43.4" height="15.0" fill="rgb(141.046187408381,141.046187408381,154.718616917751)" rx="2" ry="2" />
<text  x="1035.16" y="193.5" >fir..</text>
</g>
<g >
<title>ParLoopExecute (2,452,708 us, 0.39%)</title><rect x="1083.0" y="167" width="4.6" height="15.0" fill="rgb(124.480585399808,149.30978139995,149.30978139995)" rx="2" ry="2" />
<text  x="1086.03" y="177.5" ></text>
</g>
<g >
<title>ParLoopExecute (106,578,039 us, 16.85%)</title><rect x="793.6" y="311" width="198.8" height="15.0" fill="rgb(153.82199187522,125.968604376688,125.968604376688)" rx="2" ry="2" />
<text  x="796.63" y="321.5" >ParLoopExecute</text>
</g>
<g >
<title>firedrake (632,655,457 us, 100.00%)</title><rect x="10.0" y="55" width="1180.0" height="15.0" fill="rgb(135.286344524349,99.7962578436435,135.286344524349)" rx="2" ry="2" />
<text  x="13.00" y="65.5" >firedrake</text>
</g>
<g >
<title>firedrake.assemble.assemble_form (17,371,292 us, 2.75%)</title><rect x="1043.2" y="199" width="32.4" height="15.0" fill="rgb(151.913687185698,151.913687185698,128.504791746075)" rx="2" ry="2" />
<text  x="1046.20" y="209.5" >fi..</text>
</g>
<g >
<title>firedrake.tsfc_interface.compile_form (372,170 us, 0.06%)</title><rect x="1074.9" y="215" width="0.7" height="15.0" fill="rgb(142.337459297048,142.337459297048,154.968540509106)" rx="2" ry="2" />
<text  x="1077.91" y="225.5" ></text>
</g>
<g >
<title>SNESFunctionEval (54,900,863 us, 8.68%)</title><rect x="1087.6" y="119" width="102.4" height="15.0" fill="rgb(152.808270716512,118.196742159929,118.196742159929)" rx="2" ry="2" />
<text  x="1090.60" y="129.5" >SNESFunctio..</text>
</g>
<g >
<title>ParLoopExecute (11,081,748 us, 1.75%)</title><rect x="1054.2" y="215" width="20.7" height="15.0" fill="rgb(129.002442721136,162.72053258028,129.002442721136)" rx="2" ry="2" />
<text  x="1057.24" y="225.5" ></text>
</g>
<g >
<title>CreateFunctionSpace (73,164 us, 0.01%)</title><rect x="21.9" y="71" width="0.2" height="15.0" fill="rgb(151.632659917107,151.632659917107,127.142890367518)" rx="2" ry="2" />
<text  x="24.92" y="81.5" ></text>
</g>
<g >
<title>ParLoopExecute (18,719,888 us, 2.96%)</title><rect x="1151.3" y="167" width="34.9" height="15.0" fill="rgb(155.5637698255,139.322235328837,139.322235328837)" rx="2" ry="2" />
<text  x="1154.31" y="177.5" >Pa..</text>
</g>
<g >
<title>ParLoopExecute (5,279,812 us, 0.83%)</title><rect x="1022.3" y="183" width="9.9" height="15.0" fill="rgb(149.85715209438,149.85715209438,118.538506303534)" rx="2" ry="2" />
<text  x="1025.32" y="193.5" ></text>
</g>
<g >
<title>ParLoop_Cells_wrap_wrap_slate_loopy_knl_0 (77,714 us, 0.01%)</title><rect x="393.2" y="231" width="0.1" height="15.0" fill="rgb(130.981280545475,150.995146808086,150.995146808086)" rx="2" ry="2" />
<text  x="396.18" y="241.5" ></text>
</g>
<g >
<title>PCSetUp (37,323,628 us, 5.90%)</title><rect x="1006.2" y="167" width="69.6" height="15.0" fill="rgb(138.565391673447,138.565391673447,154.238462904538)" rx="2" ry="2" />
<text  x="1009.17" y="177.5" >PCSetUp</text>
</g>
<g >
<title>MatMult (287,548,143 us, 45.45%)</title><rect x="469.8" y="247" width="536.4" height="15.0" fill="rgb(149.301084918156,149.301084918156,115.843719218757)" rx="2" ry="2" />
<text  x="472.85" y="257.5" >MatMult</text>
</g>
<g >
<title>firedrake.slate.slac.compiler.compile_expression (7,374,787 us, 1.17%)</title><rect x="992.4" y="311" width="13.8" height="15.0" fill="rgb(137.868035227411,106.411840270241,137.868035227411)" rx="2" ry="2" />
<text  x="995.41" y="321.5" ></text>
</g>
<g >
<title>firedrake.assemble.assemble (229,680,652 us, 36.30%)</title><rect x="577.8" y="279" width="428.4" height="15.0" fill="rgb(153.268927561607,153.268927561607,135.072495106251)" rx="2" ry="2" />
<text  x="580.78" y="289.5" >firedrake.assemble.assemble</text>
</g>
<g >
<title>pyop2.parloop.JITModule.compile (34,716,609 us, 5.49%)</title><rect x="393.3" y="231" width="64.8" height="15.0" fill="rgb(154.329056598347,129.85610058733,129.85610058733)" rx="2" ry="2" />
<text  x="396.32" y="241.5" >pyop2...</text>
</g>
<g >
<title>firedrake.assemble.assemble_form (171,816,587 us, 27.16%)</title><rect x="685.7" y="295" width="320.5" height="15.0" fill="rgb(136.721346654308,152.483312095561,152.483312095561)" rx="2" ry="2" />
<text  x="688.71" y="305.5" >firedrake.assemble.assemble_form</text>
</g>
<g >
<title>HybridInit (5,028,639 us, 0.79%)</title><rect x="1078.2" y="135" width="9.4" height="15.0" fill="rgb(155.872146519159,155.872146519159,147.68809466977)" rx="2" ry="2" />
<text  x="1081.22" y="145.5" ></text>
</g>
<g >
<title>PCSetUp (287,548,143 us, 45.45%)</title><rect x="469.8" y="199" width="536.4" height="15.0" fill="rgb(148.394829023729,148.394829023729,111.45186373038)" rx="2" ry="2" />
<text  x="472.85" y="209.5" >PCSetUp</text>
</g>
<g >
<title>firedrake.variational_solver.LinearVariationalProblem.__init__ (70,779 us, 0.01%)</title><rect x="27.2" y="71" width="0.1" height="15.0" fill="rgb(126.301038808739,149.781750802266,149.781750802266)" rx="2" ry="2" />
<text  x="30.21" y="81.5" ></text>
</g>
<g >
<title>HybridRHS (191,848,261 us, 30.32%)</title><rect x="112.0" y="167" width="357.8" height="15.0" fill="rgb(113.649496997659,113.649496997659,149.416031676966)" rx="2" ry="2" />
<text  x="115.02" y="177.5" >HybridRHS</text>
</g>
<g >
<title>firedrake.__init__ (2,758,439 us, 0.44%)</title><rect x="22.1" y="71" width="5.1" height="15.0" fill="rgb(124.730864621483,163.415905759293,124.730864621483)" rx="2" ry="2" />
<text  x="25.06" y="81.5" ></text>
</g>
<g >
<title>pyop2.parloop.JITModule.compile (2,636,205 us, 0.42%)</title><rect x="1027.2" y="199" width="5.0" height="15.0" fill="rgb(149.441345389867,149.441345389867,116.523443043199)" rx="2" ry="2" />
<text  x="1030.25" y="209.5" ></text>
</g>
<g >
<title>SNESSolve (623,344,282 us, 98.53%)</title><rect x="27.4" y="103" width="1162.6" height="15.0" fill="rgb(145.313835455981,145.313835455981,155.544613314061)" rx="2" ry="2" />
<text  x="30.37" y="113.5" >SNESSolve</text>
</g>
<g >
<title>firedrake.assemble.assemble (153,199,681 us, 24.22%)</title><rect x="184.1" y="183" width="285.7" height="15.0" fill="rgb(127.848777276967,162.908338582819,127.848777276967)" rx="2" ry="2" />
<text  x="187.11" y="193.5" >firedrake.assemble.assemble</text>
</g>
<g >
<title>KSPSolve (287,548,143 us, 45.45%)</title><rect x="469.8" y="231" width="536.4" height="15.0" fill="rgb(142.449949962179,153.96850554575,153.96850554575)" rx="2" ry="2" />
<text  x="472.85" y="241.5" >KSPSolve</text>
</g>
<g >
<title>ParLoopExecute (69,589,595 us, 11.00%)</title><rect x="328.3" y="215" width="129.8" height="15.0" fill="rgb(129.952361816341,162.565894588038,129.952361816341)" rx="2" ry="2" />
<text  x="331.28" y="225.5" >ParLoopExecute</text>
</g>
<g >
<title>pyop2.parloop.JITModule.compile (1,225,890 us, 0.19%)</title><rect x="1085.3" y="183" width="2.3" height="15.0" fill="rgb(116.68134849721,147.287757017795,147.287757017795)" rx="2" ry="2" />
<text  x="1088.31" y="193.5" ></text>
</g>
<g >
<title>pyop2.parloop.JITModule.compile (5,539,272 us, 0.88%)</title><rect x="1064.6" y="231" width="10.3" height="15.0" fill="rgb(110.652615654068,145.72475220661,145.72475220661)" rx="2" ry="2" />
<text  x="1067.58" y="241.5" ></text>
</g>
<g >
<title>HybridBreak (5,387,515 us, 0.85%)</title><rect x="102.0" y="167" width="10.0" height="15.0" fill="rgb(156.791131920033,148.732011386921,148.732011386921)" rx="2" ry="2" />
<text  x="104.97" y="177.5" ></text>
</g>
<g >
<title>SCForwardElim (237,235,898 us, 37.50%)</title><rect x="27.4" y="151" width="442.4" height="15.0" fill="rgb(114.841800395053,146.810837139458,146.810837139458)" rx="2" ry="2" />
<text  x="30.37" y="161.5" >SCForwardElim</text>
</g>
<g >
<title>firedrake.variational_solver.NonlinearVariationalSolver.solve (623,344,282 us, 98.53%)</title><rect x="27.4" y="87" width="1162.6" height="15.0" fill="rgb(151.445046998686,151.445046998686,126.233689301326)" rx="2" ry="2" />
<text  x="30.37" y="97.5" >firedrake.variational_solver.NonlinearVariationalSolver.solve</text>
</g>
<g >
<title>firedrake.assemble.assemble_form (32,128,859 us, 5.08%)</title><rect x="1130.1" y="151" width="59.9" height="15.0" fill="rgb(124.453455922666,163.461065314915,124.453455922666)" rx="2" ry="2" />
<text  x="1133.07" y="161.5" >fired..</text>
</g>
<g >
<title>CreateExtMesh (6,393,348 us, 1.01%)</title><rect x="10.0" y="71" width="11.9" height="15.0" fill="rgb(137.872653653446,137.872653653446,154.104384578086)" rx="2" ry="2" />
<text  x="13.00" y="81.5" ></text>
</g>
</g>
</svg>
